; ModuleID = '../../third_party/blink/renderer/core/css/parser/media_query_parser.cc'
source_filename = "../../third_party/blink/renderer/core/css/parser/media_query_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.94", i32, [4 x i8], %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.246", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.264", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.271", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.210", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.130" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.130" = type { %"struct.std::__1::__atomic_base.131" }
%"struct.std::__1::__atomic_base.131" = type { %"struct.std::__1::__atomic_base.132" }
%"struct.std::__1::__atomic_base.132" = type { %"struct.std::__1::__cxx_atomic_impl.133" }
%"struct.std::__1::__cxx_atomic_impl.133" = type { %"struct.std::__1::__cxx_atomic_base_impl.134" }
%"struct.std::__1::__cxx_atomic_base_impl.134" = type { i64 }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.130" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.130" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::Worklist.155"* }
%"class.blink::Worklist.155" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.130" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::Worklist.162"* }
%"class.blink::Worklist.162" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.130" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist.169"* }
%"class.blink::Worklist.169" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.130" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist.176"* }
%"class.blink::Worklist.176" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.130" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::Worklist.183"* }
%"class.blink::Worklist.183" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.130" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.190", %"class.std::__1::__compressed_pair.197", %"class.std::__1::__compressed_pair.202", %"class.std::__1::__compressed_pair.204", [4 x i8] }>
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192", %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { i64 }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { float }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.213", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.222" }
%"class.WTF::Vector.222" = type { %"class.WTF::VectorBuffer.223" }
%"class.WTF::VectorBuffer.223" = type { %"class.WTF::VectorBufferBase.224" }
%"class.WTF::VectorBufferBase.224" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.238" }
%"class.WTF::VectorBuffer.238" = type { %"class.WTF::VectorBufferBase.239" }
%"class.WTF::VectorBufferBase.239" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.252" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.141"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.148"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.155"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.162"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.169"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.277" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.270 }
%class.scoped_refptr.270 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.271" = type { %"struct.std::__1::__atomic_base.272" }
%"struct.std::__1::__atomic_base.272" = type { %"struct.std::__1::__cxx_atomic_impl.273" }
%"struct.std::__1::__cxx_atomic_impl.273" = type { %"struct.std::__1::__cxx_atomic_base_impl.274" }
%"struct.std::__1::__cxx_atomic_base_impl.274" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::MediaQueryParser" = type { i32 (...)**, { i64, i64 }, i32, %"class.blink::MediaQueryData", %class.scoped_refptr, %"class.blink::MediaQueryBlockWatcher", i8, %"class.blink::ExecutionContext"* }
%"class.blink::MediaQueryData" = type { i32, %"class.WTF::String", %"class.WTF::Vector.2", %"class.WTF::String", i8, %"class.blink::CSSParserContext"* }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4" }
%"class.WTF::VectorBufferBase.4" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.91, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.275", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.85" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::KURL"* }
%class.scoped_refptr.91 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.92", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.92" = type { %"class.base::RefCounted.93" }
%"class.base::RefCounted.93" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::WeakMember.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%class.scoped_refptr = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted", %"class.WTF::Vector" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.2", %"class.WTF::String" }
%"class.blink::MediaQueryBlockWatcher" = type { i32 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.38", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.47", %"class.blink::Member.49", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.58", %"class.blink::Member.64", %"class.blink::Member.66", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.13" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.11" }
%"class.WTF::HashTable.11" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.13" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.14" }
%"class.blink::HeapHashMap.14" = type { %"class.WTF::HashMap.17" }
%"class.WTF::HashMap.17" = type { %"class.WTF::HashTable.18" }
%"class.WTF::HashTable.18" = type <{ %"struct.WTF::KeyValuePair.20"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.20" = type { i8*, %"class.blink::Member.282" }
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.284" }
%"class.blink::Member.284" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.21, %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.34", i32, i32 }
%class.scoped_refptr.21 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.34" = type { %"class.WTF::HashTable.35" }
%"class.WTF::HashTable.35" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.42" }
%"class.WTF::Vector.42" = type { %"class.WTF::VectorBuffer.43" }
%"class.WTF::VectorBuffer.43" = type { %"class.WTF::VectorBufferBase.44" }
%"class.WTF::VectorBufferBase.44" = type { %"class.blink::Member.45"*, i32, i32 }
%"class.blink::Member.45" = type opaque
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.51", i32, i32 }
%"class.blink::HeapHashMap.51" = type { %"class.WTF::HashMap.54" }
%"class.WTF::HashMap.54" = type { %"class.WTF::HashTable.55" }
%"class.WTF::HashTable.55" = type <{ %"struct.WTF::KeyValuePair.57"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.57" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.WTF::Vector.68" = type { %"class.WTF::VectorBuffer.69" }
%"class.WTF::VectorBuffer.69" = type { %"class.WTF::VectorBufferBase.70", [768 x i8] }
%"class.WTF::VectorBufferBase.70" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSTokenizer" = type { %"class.blink::CSSTokenizerInputStream", %"class.WTF::Vector.73", %"class.WTF::Vector.78", i32, i32 }
%"class.blink::CSSTokenizerInputStream" = type { i32, i32, %class.scoped_refptr.0 }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75", [32 x i8] }
%"class.WTF::VectorBufferBase.75" = type { i32*, i32, i32 }
%"class.WTF::Vector.78" = type { %"class.WTF::VectorBuffer.79" }
%"class.WTF::VectorBuffer.79" = type { %"class.WTF::VectorBufferBase.80" }
%"class.WTF::VectorBufferBase.80" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.308 }
%union.anon.308 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink12CSSTokenizerD2Ev = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13MediaQueryExpEEEmm = comdat any

$_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink16MediaQueryParser15kReadRestrictorE = hidden local_unnamed_addr constant { i64, i64 } { i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14ReadRestrictorENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0 }, align 8
@_ZN5blink16MediaQueryParser13kReadMediaNotE = hidden local_unnamed_addr constant { i64, i64 } { i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser12ReadMediaNotENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0 }, align 8
@_ZN5blink16MediaQueryParser14kReadMediaTypeE = hidden local_unnamed_addr constant { i64, i64 } { i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser13ReadMediaTypeENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0 }, align 8
@_ZN5blink16MediaQueryParser8kReadAndE = hidden local_unnamed_addr constant { i64, i64 } { i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser7ReadAndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0 }, align 8
@_ZN5blink16MediaQueryParser17kReadFeatureStartE = hidden local_unnamed_addr constant { i64, i64 } { i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser16ReadFeatureStartENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0 }, align 8
@_ZN5blink16MediaQueryParser12kReadFeatureE = hidden local_unnamed_addr constant { i64, i64 } { i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser11ReadFeatureENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0 }, align 8
@_ZN5blink16MediaQueryParser17kReadFeatureColonE = hidden local_unnamed_addr constant { i64, i64 } { i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser16ReadFeatureColonENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0 }, align 8
@_ZN5blink16MediaQueryParser17kReadFeatureValueE = hidden local_unnamed_addr constant { i64, i64 } { i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser16ReadFeatureValueENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0 }, align 8
@_ZN5blink16MediaQueryParser15kReadFeatureEndE = hidden local_unnamed_addr constant { i64, i64 } { i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14ReadFeatureEndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0 }, align 8
@_ZN5blink16MediaQueryParser15kSkipUntilCommaE = hidden local_unnamed_addr constant { i64, i64 } { i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0 }, align 8
@_ZN5blink16MediaQueryParser18kSkipUntilBlockEndE = hidden local_unnamed_addr constant { i64, i64 } { i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser17SkipUntilBlockEndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0 }, align 8
@_ZN5blink16MediaQueryParser5kDoneE = hidden local_unnamed_addr constant { i64, i64 } { i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser4DoneENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0 }, align 8
@_ZTVN5blink16MediaQueryParserE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::MediaQueryParser"*)* @_ZN5blink16MediaQueryParserD2Ev to i8*), i8* bitcast (void (%"class.blink::MediaQueryParser"*)* @_ZN5blink16MediaQueryParserD0Ev to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"only\00", align 1
@_ZN5blink19media_feature_names22kImmersiveMediaFeatureE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16media_type_names4kAllE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF10StringImpl12empty16_bit_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink18g_static_eof_tokenE = external local_unnamed_addr constant %"class.blink::CSSParserToken"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13MediaQueryExpEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MediaQueryExp]\00", align 1
@.str.9 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink16MediaQueryParserC1ENS0_10ParserTypeENS_13CSSParserModeEPKNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::MediaQueryParser"*, i32, i8, %"class.blink::ExecutionContext"*), void (%"class.blink::MediaQueryParser"*, i32, i8, %"class.blink::ExecutionContext"*)* @_ZN5blink16MediaQueryParserC2ENS0_10ParserTypeENS_13CSSParserModeEPKNS_16ExecutionContextE
@_ZN5blink16MediaQueryParserD1Ev = hidden unnamed_addr alias void (%"class.blink::MediaQueryParser"*), void (%"class.blink::MediaQueryParser"*)* @_ZN5blink16MediaQueryParserD2Ev
@_ZN5blink14MediaQueryDataC1Ev = hidden unnamed_addr alias void (%"class.blink::MediaQueryData"*), void (%"class.blink::MediaQueryData"*)* @_ZN5blink14MediaQueryDataC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser18ParseMediaQuerySetERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.WTF::String"* dereferenceable(8), %"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::MediaQueryParser", align 8
  %4 = alloca %"class.WTF::Vector.68", align 8
  %5 = alloca %"class.blink::CSSTokenizer", align 8
  %6 = bitcast %"class.WTF::Vector.68"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 784, i8* nonnull %6) #13
  %7 = bitcast %"class.blink::CSSTokenizer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #13
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #13
  call void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.68"* nonnull sret %4, %"class.blink::CSSTokenizer"* nonnull %5) #13
  %8 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %4, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %9, i64 %12
  %14 = bitcast %"class.blink::MediaQueryParser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %14) #13
  call void @_ZN5blink16MediaQueryParserC2ENS0_10ParserTypeENS_13CSSParserModeEPKNS_16ExecutionContextE(%"class.blink::MediaQueryParser"* nonnull %3, i32 0, i8 zeroext 0, %"class.blink::ExecutionContext"* %1) #13
  %15 = call %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser9ParseImplENS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"* nonnull %3, %"class.blink::CSSParserToken"* %9, %"class.blink::CSSParserToken"* %13) #13
  call void @_ZN5blink16MediaQueryParserD2Ev(%"class.blink::MediaQueryParser"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %14) #13
  %16 = load i32, i32* %10, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18, !prof !2

18:                                               ; preds = %2
  store i32 0, i32* %10, align 4
  br label %19

19:                                               ; preds = %18, %2
  %20 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %8, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %4, i64 0, i32 0, i32 1, i64 0
  %22 = bitcast i8* %21 to %"class.blink::CSSParserToken"*
  %23 = icmp eq %"class.blink::CSSParserToken"* %20, %22
  br i1 %23, label %26, label %24, !prof !3

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %4, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.69"* nonnull %25, %"class.blink::CSSParserToken"* %20) #13
  br label %26

26:                                               ; preds = %19, %24
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %8, align 8
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 784, i8* nonnull %6) #13
  ret %"class.blink::MediaQuerySet"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser18ParseMediaQuerySetENS_19CSSParserTokenRangeEPKNS_16ExecutionContextE(%"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::MediaQueryParser", align 8
  %5 = bitcast %"class.blink::MediaQueryParser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %5) #13
  call void @_ZN5blink16MediaQueryParserC2ENS0_10ParserTypeENS_13CSSParserModeEPKNS_16ExecutionContextE(%"class.blink::MediaQueryParser"* nonnull %4, i32 0, i8 zeroext 0, %"class.blink::ExecutionContext"* %2)
  %6 = call %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser9ParseImplENS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"* nonnull %4, %"class.blink::CSSParserToken"* %0, %"class.blink::CSSParserToken"* %1)
  call void @_ZN5blink16MediaQueryParserD2Ev(%"class.blink::MediaQueryParser"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %5) #13
  ret %"class.blink::MediaQuerySet"* %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #2

declare void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.68"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.78", %"class.WTF::Vector.78"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.78"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !2

45:                                               ; preds = %40
  store i32 0, i32* %42, align 4
  br label %46

46:                                               ; preds = %45, %40
  %47 = getelementptr inbounds %"class.WTF::Vector.73", %"class.WTF::Vector.73"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::Vector.73", %"class.WTF::Vector.73"* %41, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.74"* %53, i32* %48) #13
  br label %54

54:                                               ; preds = %46, %52
  store i32* null, i32** %47, align 8
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 0, i32 2, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #13
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser9ParseImplENS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserTokenRange", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %4, i64 0, i32 0
  store %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %4, i64 0, i32 1
  store %"class.blink::CSSParserToken"* %2, %"class.blink::CSSParserToken"** %7, align 8
  %8 = icmp eq %"class.blink::CSSParserToken"* %1, %2
  br i1 %8, label %76, label %9

9:                                                ; preds = %3
  %10 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %11 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 5, i32 0
  %14 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 5
  %15 = bitcast %"class.blink::MediaQueryParser"* %0 to i8*
  %16 = bitcast i64* %11 to <2 x i64>*
  br label %17

17:                                               ; preds = %9, %72
  %18 = phi %"class.blink::CSSParserToken"* [ %2, %9 ], [ %73, %72 ]
  %19 = phi %"class.blink::CSSParserToken"* [ %1, %9 ], [ %74, %72 ]
  %20 = icmp ult %"class.blink::CSSParserToken"* %19, %18
  %21 = select i1 %20, %"class.blink::CSSParserToken"* %19, %"class.blink::CSSParserToken"* %10
  %22 = bitcast %"class.blink::CSSParserToken"* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 63
  %25 = load i64, i64* %11, align 8
  %26 = load i64, i64* %12, align 8
  %27 = icmp ne i64 %25, ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser16ReadFeatureValueENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64)
  %28 = icmp ne i64 %25, 0
  %29 = icmp ne i64 %26, 0
  %30 = and i1 %28, %29
  %31 = or i1 %27, %30
  %32 = icmp eq i32 %24, 17
  %33 = or i1 %32, %31
  br i1 %33, label %34, label %49

34:                                               ; preds = %17
  %35 = and i32 %23, 192
  %36 = icmp eq i32 %35, 64
  br i1 %36, label %37, label %43

37:                                               ; preds = %34
  %38 = icmp eq i32 %24, 23
  br i1 %38, label %39, label %42

39:                                               ; preds = %37
  %40 = load i32, i32* %13, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %39, %37
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser17SkipUntilBlockEndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %16, align 8
  br label %43

43:                                               ; preds = %42, %39, %34
  call void @_ZN5blink22MediaQueryBlockWatcher11HandleTokenERKNS_14CSSParserTokenE(%"class.blink::MediaQueryBlockWatcher"* %14, %"class.blink::CSSParserToken"* dereferenceable(24) %21) #13
  %44 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %45 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %46 = icmp eq %"class.blink::CSSParserToken"* %44, %45
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %44, i64 1
  store %"class.blink::CSSParserToken"* %48, %"class.blink::CSSParserToken"** %6, align 8
  br label %49

49:                                               ; preds = %47, %43, %17
  %50 = phi %"class.blink::CSSParserToken"* [ %45, %47 ], [ %44, %43 ], [ %18, %17 ]
  %51 = phi %"class.blink::CSSParserToken"* [ %48, %47 ], [ %44, %43 ], [ %19, %17 ]
  br i1 %32, label %72, label %52

52:                                               ; preds = %49
  %53 = load i64, i64* %11, align 8
  %54 = load i64, i64* %12, align 8
  %55 = getelementptr inbounds i8, i8* %15, i64 %54
  %56 = bitcast i8* %55 to %"class.blink::MediaQueryParser"*
  %57 = and i64 %53, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %52
  %60 = bitcast i8* %55 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = add i64 %53, -1
  %63 = getelementptr i8, i8* %61, i64 %62
  %64 = bitcast i8* %63 to void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)**
  %65 = load void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)*, void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)** %64, align 8
  br label %68

66:                                               ; preds = %52
  %67 = inttoptr i64 %53 to void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)*
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* [ %65, %59 ], [ %67, %66 ]
  call void %69(%"class.blink::MediaQueryParser"* %56, i32 %24, %"class.blink::CSSParserToken"* dereferenceable(24) %21, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %4) #13
  %70 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %71 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  br label %72

72:                                               ; preds = %49, %68
  %73 = phi %"class.blink::CSSParserToken"* [ %50, %49 ], [ %71, %68 ]
  %74 = phi %"class.blink::CSSParserToken"* [ %51, %49 ], [ %70, %68 ]
  %75 = icmp eq %"class.blink::CSSParserToken"* %74, %73
  br i1 %75, label %76, label %17

76:                                               ; preds = %72, %3
  %77 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %118

80:                                               ; preds = %76
  %81 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #13
  %82 = bitcast %"class.blink::CSSParserToken"* %5 to i32*
  store i32 31, i32* %82, align 8
  %83 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = icmp ne i64 %84, ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser16ReadFeatureValueENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64)
  %88 = icmp ne i64 %84, 0
  %89 = icmp ne i64 %86, 0
  %90 = and i1 %88, %89
  %91 = or i1 %87, %90
  br i1 %91, label %92, label %99

92:                                               ; preds = %80
  %93 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 5
  call void @_ZN5blink22MediaQueryBlockWatcher11HandleTokenERKNS_14CSSParserTokenE(%"class.blink::MediaQueryBlockWatcher"* %93, %"class.blink::CSSParserToken"* nonnull dereferenceable(24) %5) #13
  %94 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %95 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %96 = icmp eq %"class.blink::CSSParserToken"* %94, %95
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %94, i64 1
  store %"class.blink::CSSParserToken"* %98, %"class.blink::CSSParserToken"** %6, align 8
  br label %99

99:                                               ; preds = %80, %92, %97
  %100 = load i64, i64* %83, align 8
  %101 = load i64, i64* %85, align 8
  %102 = bitcast %"class.blink::MediaQueryParser"* %0 to i8*
  %103 = getelementptr inbounds i8, i8* %102, i64 %101
  %104 = bitcast i8* %103 to %"class.blink::MediaQueryParser"*
  %105 = and i64 %100, 1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %99
  %108 = bitcast i8* %103 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = add i64 %100, -1
  %111 = getelementptr i8, i8* %109, i64 %110
  %112 = bitcast i8* %111 to void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)**
  %113 = load void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)*, void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)** %112, align 8
  br label %116

114:                                              ; preds = %99
  %115 = inttoptr i64 %100 to void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)*
  br label %116

116:                                              ; preds = %107, %114
  %117 = phi void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* [ %113, %107 ], [ %115, %114 ]
  call void %117(%"class.blink::MediaQueryParser"* %104, i32 31, %"class.blink::CSSParserToken"* nonnull dereferenceable(24) %5, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #13
  br label %118

118:                                              ; preds = %116, %76
  %119 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = icmp ne i64 %120, ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser7ReadAndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64)
  %124 = icmp ne i64 %120, 0
  %125 = icmp ne i64 %122, 0
  %126 = and i1 %124, %125
  %127 = icmp ne i64 %120, ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14ReadRestrictorENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64)
  %128 = and i1 %123, %127
  %129 = icmp ne i64 %120, ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser4DoneENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64)
  %130 = and i1 %129, %128
  %131 = icmp ne i64 %120, ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser12ReadMediaNotENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64)
  %132 = and i1 %131, %130
  %133 = or i1 %126, %132
  br i1 %133, label %134, label %138

134:                                              ; preds = %118
  %135 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 4, i32 0
  %136 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %135, align 8
  %137 = call %"class.blink::MediaQuery"* @_ZN5blink10MediaQuery12CreateNotAllEv() #13
  call void @_ZN5blink13MediaQuerySet13AddMediaQueryENSt3__110unique_ptrINS_10MediaQueryENS1_14default_deleteIS3_EEEE(%"class.blink::MediaQuerySet"* %136, %"class.blink::MediaQuery"* %137) #13
  br label %155

138:                                              ; preds = %118
  %139 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3
  %140 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %139, i64 0, i32 0
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, 2
  br i1 %142, label %143, label %151

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 4
  %145 = load i8, i8* %144, align 8, !range !4
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %151

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 2
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %155, label %151

151:                                              ; preds = %147, %138, %143
  %152 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 4, i32 0
  %153 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %152, align 8
  %154 = call %"class.blink::MediaQuery"* @_ZN5blink14MediaQueryData14TakeMediaQueryEv(%"class.blink::MediaQueryData"* %139)
  call void @_ZN5blink13MediaQuerySet13AddMediaQueryENSt3__110unique_ptrINS_10MediaQueryENS1_14default_deleteIS3_EEEE(%"class.blink::MediaQuerySet"* %153, %"class.blink::MediaQuery"* %154) #13
  br label %155

155:                                              ; preds = %147, %151, %134
  %156 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 4, i32 0
  %157 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %156, align 8
  %158 = icmp eq %"class.blink::MediaQuerySet"* %157, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %157, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %160) #13
  br label %161

161:                                              ; preds = %155, %159
  ret %"class.blink::MediaQuerySet"* %157
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser24ParseMediaQuerySetInModeENS_19CSSParserTokenRangeENS_13CSSParserModeEPKNS_16ExecutionContextE(%"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, i8 zeroext, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::MediaQueryParser", align 8
  %6 = bitcast %"class.blink::MediaQueryParser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #13
  call void @_ZN5blink16MediaQueryParserC2ENS0_10ParserTypeENS_13CSSParserModeEPKNS_16ExecutionContextE(%"class.blink::MediaQueryParser"* nonnull %5, i32 0, i8 zeroext %2, %"class.blink::ExecutionContext"* %3)
  %7 = call %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser9ParseImplENS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"* nonnull %5, %"class.blink::CSSParserToken"* %0, %"class.blink::CSSParserToken"* %1)
  call void @_ZN5blink16MediaQueryParserD2Ev(%"class.blink::MediaQueryParser"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #13
  ret %"class.blink::MediaQuerySet"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser19ParseMediaConditionENS_19CSSParserTokenRangeEPKNS_16ExecutionContextE(%"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::MediaQueryParser", align 8
  %5 = bitcast %"class.blink::MediaQueryParser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %5) #13
  call void @_ZN5blink16MediaQueryParserC2ENS0_10ParserTypeENS_13CSSParserModeEPKNS_16ExecutionContextE(%"class.blink::MediaQueryParser"* nonnull %4, i32 1, i8 zeroext 0, %"class.blink::ExecutionContext"* %2)
  %6 = call %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser9ParseImplENS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"* nonnull %4, %"class.blink::CSSParserToken"* %0, %"class.blink::CSSParserToken"* %1)
  call void @_ZN5blink16MediaQueryParserD2Ev(%"class.blink::MediaQueryParser"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %5) #13
  ret %"class.blink::MediaQuerySet"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParser14ReadRestrictorENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24), %"class.blink::CSSParserTokenRange"* nocapture readnone dereferenceable(16)) #0 align 2 {
  tail call void @_ZN5blink16MediaQueryParser13ReadMediaTypeENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"* %0, i32 %1, %"class.blink::CSSParserToken"* dereferenceable(24) %2, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParser12ReadMediaNotENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"* nocapture, i32, %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24), %"class.blink::CSSParserTokenRange"* nocapture readnone dereferenceable(16)) #0 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %95

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !5
  %10 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 1
  %11 = load i32, i32* %10, align 4, !noalias !5
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %13, label %95

13:                                               ; preds = %6
  %14 = bitcast %"class.blink::CSSParserToken"* %2 to i32*
  %15 = load i32, i32* %14, align 8, !noalias !5
  %16 = and i32 %15, 262144
  %17 = icmp eq i32 %16, 0
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = select i1 %17, i64 %18, i64 %19
  %21 = inttoptr i64 %20 to %"class.WTF::StringImpl"*
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %46, label %26

26:                                               ; preds = %13
  %27 = inttoptr i64 %9 to i8*
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %34 = sext i8 %33 to i32
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %95

36:                                               ; preds = %26
  %37 = getelementptr inbounds i8, i8* %27, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %44 = sext i8 %43 to i32
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %82, label %95

46:                                               ; preds = %13
  %47 = inttoptr i64 %9 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = add i16 %48, -65
  %50 = icmp ult i16 %49, 26
  %51 = zext i1 %50 to i16
  %52 = shl nuw nsw i16 %51, 5
  %53 = or i16 %52, %48
  %54 = zext i16 %53 to i32
  %55 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %56 = sext i8 %55 to i32
  %57 = icmp eq i32 %54, %56
  br i1 %57, label %58, label %95

58:                                               ; preds = %46
  %59 = getelementptr inbounds i16, i16* %47, i64 1
  %60 = load i16, i16* %59, align 2
  %61 = add i16 %60, -65
  %62 = icmp ult i16 %61, 26
  %63 = zext i1 %62 to i16
  %64 = shl nuw nsw i16 %63, 5
  %65 = or i16 %64, %60
  %66 = zext i16 %65 to i32
  %67 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %68 = sext i8 %67 to i32
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %95

70:                                               ; preds = %58
  %71 = getelementptr inbounds i16, i16* %47, i64 2
  %72 = load i16, i16* %71, align 2
  %73 = add i16 %72, -65
  %74 = icmp ult i16 %73, 26
  %75 = zext i1 %74 to i16
  %76 = shl nuw nsw i16 %75, 5
  %77 = or i16 %76, %72
  %78 = zext i16 %77 to i32
  %79 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %80 = sext i8 %79 to i32
  %81 = icmp eq i32 %78, %80
  br i1 %81, label %92, label %95

82:                                               ; preds = %36
  %83 = getelementptr inbounds i8, i8* %27, i64 2
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %90 = sext i8 %89 to i32
  %91 = icmp eq i32 %88, %90
  br i1 %91, label %92, label %95

92:                                               ; preds = %70, %82
  %93 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 0
  store i32 1, i32* %93, align 8
  %94 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser16ReadFeatureStartENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %94, align 8
  br label %99

95:                                               ; preds = %36, %26, %58, %46, %6, %4, %70, %82
  %96 = icmp eq i32 %1, 23
  %97 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %98 = select i1 %96, i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser11ReadFeatureENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64)
  store i64 %98, i64* %97, align 8
  br label %99

99:                                               ; preds = %95, %92
  %100 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  store i64 0, i64* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParser13ReadMediaTypeENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24), %"class.blink::CSSParserTokenRange"* nocapture readnone dereferenceable(16)) #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  switch i32 %1, label %459 [
    i32 23, label %8
    i32 0, label %16
    i32 31, label %438
  ]

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 2
  %12 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %13 = bitcast i64* %12 to <2 x i64>*
  br i1 %11, label %15, label %14

14:                                               ; preds = %8
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %13, align 8
  br label %473

15:                                               ; preds = %8
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser11ReadFeatureENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %13, align 8
  br label %473

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %18, ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14ReadRestrictorENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64)
  %22 = icmp eq i64 %18, 0
  %23 = icmp eq i64 %20, 0
  %24 = or i1 %22, %23
  %25 = and i1 %21, %24
  br i1 %25, label %26, label %130

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 2
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !8
  %30 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 1
  %31 = load i32, i32* %30, align 4, !noalias !8
  %32 = icmp eq i32 %31, 3
  %33 = bitcast %"class.blink::CSSParserToken"* %2 to i32*
  %34 = load i32, i32* %33, align 8
  br i1 %32, label %35, label %115

35:                                               ; preds = %26
  %36 = and i32 %34, 262144
  %37 = icmp eq i32 %36, 0
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = select i1 %37, i64 %38, i64 %39
  %41 = inttoptr i64 %40 to %"class.WTF::StringImpl"*
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %66, label %46

46:                                               ; preds = %35
  %47 = inttoptr i64 %29 to i8*
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %54 = sext i8 %53 to i32
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %115

56:                                               ; preds = %46
  %57 = getelementptr inbounds i8, i8* %47, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %64 = sext i8 %63 to i32
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %102, label %115

66:                                               ; preds = %35
  %67 = inttoptr i64 %29 to i16*
  %68 = load i16, i16* %67, align 2
  %69 = add i16 %68, -65
  %70 = icmp ult i16 %69, 26
  %71 = zext i1 %70 to i16
  %72 = shl nuw nsw i16 %71, 5
  %73 = or i16 %72, %68
  %74 = zext i16 %73 to i32
  %75 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %76 = sext i8 %75 to i32
  %77 = icmp eq i32 %74, %76
  br i1 %77, label %78, label %115

78:                                               ; preds = %66
  %79 = getelementptr inbounds i16, i16* %67, i64 1
  %80 = load i16, i16* %79, align 2
  %81 = add i16 %80, -65
  %82 = icmp ult i16 %81, 26
  %83 = zext i1 %82 to i16
  %84 = shl nuw nsw i16 %83, 5
  %85 = or i16 %84, %80
  %86 = zext i16 %85 to i32
  %87 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %88 = sext i8 %87 to i32
  %89 = icmp eq i32 %86, %88
  br i1 %89, label %90, label %115

90:                                               ; preds = %78
  %91 = getelementptr inbounds i16, i16* %67, i64 2
  %92 = load i16, i16* %91, align 2
  %93 = add i16 %92, -65
  %94 = icmp ult i16 %93, 26
  %95 = zext i1 %94 to i16
  %96 = shl nuw nsw i16 %95, 5
  %97 = or i16 %96, %92
  %98 = zext i16 %97 to i32
  %99 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %100 = sext i8 %99 to i32
  %101 = icmp eq i32 %98, %100
  br i1 %101, label %112, label %115

102:                                              ; preds = %56
  %103 = getelementptr inbounds i8, i8* %47, i64 2
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %110 = sext i8 %109 to i32
  %111 = icmp eq i32 %108, %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %90, %102
  %113 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 0
  store i32 1, i32* %113, align 8
  %114 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser13ReadMediaTypeENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %114, align 8
  br label %473

115:                                              ; preds = %26, %56, %46, %78, %66, %90, %102
  %116 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #13
  %117 = and i32 %34, 262144
  %118 = icmp eq i32 %117, 0
  %119 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %120 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %121 = select i1 %118, i64 %119, i64 %120
  %122 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %121, i64* %122, align 8, !alias.scope !11
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %124 = bitcast i8** %123 to i64*
  store i64 %29, i64* %124, align 8, !alias.scope !11
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %31, i32* %125, align 8, !alias.scope !11
  %126 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [5 x i8]* nonnull dereferenceable(5) @.str.1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #13
  br i1 %126, label %127, label %130

127:                                              ; preds = %115
  %128 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %128, align 8
  %129 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser13ReadMediaTypeENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %129, align 8
  br label %473

130:                                              ; preds = %16, %115
  %131 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, 2
  %134 = bitcast %"class.blink::CSSParserToken"* %2 to i32*
  br i1 %133, label %365, label %135

135:                                              ; preds = %130
  %136 = load i32, i32* %134, align 8, !noalias !14
  %137 = and i32 %136, 262144
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 2
  %140 = bitcast i8** %139 to i64*
  %141 = load i64, i64* %140, align 8, !noalias !14
  %142 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 1
  %143 = load i32, i32* %142, align 4, !noalias !14
  %144 = icmp eq i32 %143, 3
  br i1 %144, label %145, label %295

145:                                              ; preds = %135
  %146 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %147 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %148 = select i1 %138, i64 %146, i64 %147
  %149 = inttoptr i64 %148 to %"class.WTF::StringImpl"*
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %174, label %154

154:                                              ; preds = %145
  %155 = inttoptr i64 %141 to i8*
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i64
  %158 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %157
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %162 = sext i8 %161 to i32
  %163 = icmp eq i32 %160, %162
  br i1 %163, label %164, label %222

164:                                              ; preds = %154
  %165 = getelementptr inbounds i8, i8* %155, i64 1
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i64
  %168 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i32
  %171 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %172 = sext i8 %171 to i32
  %173 = icmp eq i32 %170, %172
  br i1 %173, label %211, label %222

174:                                              ; preds = %145
  %175 = inttoptr i64 %141 to i16*
  %176 = load i16, i16* %175, align 2
  %177 = add i16 %176, -65
  %178 = icmp ult i16 %177, 26
  %179 = zext i1 %178 to i16
  %180 = shl nuw nsw i16 %179, 5
  %181 = or i16 %180, %176
  %182 = zext i16 %181 to i32
  %183 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %184 = sext i8 %183 to i32
  %185 = icmp eq i32 %182, %184
  br i1 %185, label %186, label %222

186:                                              ; preds = %174
  %187 = getelementptr inbounds i16, i16* %175, i64 1
  %188 = load i16, i16* %187, align 2
  %189 = add i16 %188, -65
  %190 = icmp ult i16 %189, 26
  %191 = zext i1 %190 to i16
  %192 = shl nuw nsw i16 %191, 5
  %193 = or i16 %192, %188
  %194 = zext i16 %193 to i32
  %195 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %196 = sext i8 %195 to i32
  %197 = icmp eq i32 %194, %196
  br i1 %197, label %198, label %222

198:                                              ; preds = %186
  %199 = getelementptr inbounds i16, i16* %175, i64 2
  %200 = load i16, i16* %199, align 2
  %201 = add i16 %200, -65
  %202 = icmp ult i16 %201, 26
  %203 = zext i1 %202 to i16
  %204 = shl nuw nsw i16 %203, 5
  %205 = or i16 %204, %200
  %206 = zext i16 %205 to i32
  %207 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %208 = sext i8 %207 to i32
  %209 = icmp eq i32 %206, %208
  %210 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %210) #13
  br i1 %209, label %361, label %225

211:                                              ; preds = %164
  %212 = getelementptr inbounds i8, i8* %155, i64 2
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i64
  %215 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %219 = sext i8 %218 to i32
  %220 = icmp eq i32 %217, %219
  %221 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #13
  br i1 %220, label %361, label %225

222:                                              ; preds = %186, %174, %164, %154
  %223 = phi i8 [ %183, %186 ], [ %183, %174 ], [ %161, %164 ], [ %161, %154 ]
  %224 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224) #13
  br label %225

225:                                              ; preds = %222, %211, %198
  %226 = phi i8 [ %223, %222 ], [ %183, %198 ], [ %161, %211 ]
  %227 = phi i8* [ %224, %222 ], [ %210, %198 ], [ %221, %211 ]
  %228 = load atomic i32, i32* %150 monotonic, align 4
  %229 = and i32 %228, 1
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %250, label %231

231:                                              ; preds = %225
  %232 = inttoptr i64 %141 to i8*
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 97), align 1
  %239 = sext i8 %238 to i32
  %240 = icmp eq i32 %237, %239
  br i1 %240, label %241, label %351

241:                                              ; preds = %231
  %242 = getelementptr inbounds i8, i8* %232, i64 1
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i64
  %245 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i32
  %248 = sext i8 %226 to i32
  %249 = icmp eq i32 %247, %248
  br i1 %249, label %285, label %351

250:                                              ; preds = %225
  %251 = inttoptr i64 %141 to i16*
  %252 = load i16, i16* %251, align 2
  %253 = add i16 %252, -65
  %254 = icmp ult i16 %253, 26
  %255 = zext i1 %254 to i16
  %256 = shl nuw nsw i16 %255, 5
  %257 = or i16 %256, %252
  %258 = zext i16 %257 to i32
  %259 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 97), align 1
  %260 = sext i8 %259 to i32
  %261 = icmp eq i32 %258, %260
  br i1 %261, label %262, label %351

262:                                              ; preds = %250
  %263 = getelementptr inbounds i16, i16* %251, i64 1
  %264 = load i16, i16* %263, align 2
  %265 = add i16 %264, -65
  %266 = icmp ult i16 %265, 26
  %267 = zext i1 %266 to i16
  %268 = shl nuw nsw i16 %267, 5
  %269 = or i16 %268, %264
  %270 = zext i16 %269 to i32
  %271 = sext i8 %226 to i32
  %272 = icmp eq i32 %270, %271
  br i1 %272, label %273, label %351

273:                                              ; preds = %262
  %274 = getelementptr inbounds i16, i16* %251, i64 2
  %275 = load i16, i16* %274, align 2
  %276 = add i16 %275, -65
  %277 = icmp ult i16 %276, 26
  %278 = zext i1 %277 to i16
  %279 = shl nuw nsw i16 %278, 5
  %280 = or i16 %279, %275
  %281 = zext i16 %280 to i32
  %282 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 100), align 4
  %283 = sext i8 %282 to i32
  %284 = icmp eq i32 %281, %283
  br i1 %284, label %361, label %351

285:                                              ; preds = %241
  %286 = getelementptr inbounds i8, i8* %232, i64 2
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i64
  %289 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %288
  %290 = load i8, i8* %289, align 1
  %291 = zext i8 %290 to i32
  %292 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 100), align 4
  %293 = sext i8 %292 to i32
  %294 = icmp eq i32 %291, %293
  br i1 %294, label %361, label %351

295:                                              ; preds = %135
  %296 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %296) #13
  %297 = icmp eq i32 %143, 2
  br i1 %297, label %298, label %351

298:                                              ; preds = %295
  %299 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %300 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %301 = select i1 %138, i64 %299, i64 %300
  %302 = inttoptr i64 %301 to %"class.WTF::StringImpl"*
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load atomic i32, i32* %303 monotonic, align 4
  %305 = and i32 %304, 1
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %317, label %307

307:                                              ; preds = %298
  %308 = inttoptr i64 %141 to i8*
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i64
  %311 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %310
  %312 = load i8, i8* %311, align 1
  %313 = zext i8 %312 to i32
  %314 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %315 = sext i8 %314 to i32
  %316 = icmp eq i32 %313, %315
  br i1 %316, label %341, label %351

317:                                              ; preds = %298
  %318 = inttoptr i64 %141 to i16*
  %319 = load i16, i16* %318, align 2
  %320 = add i16 %319, -65
  %321 = icmp ult i16 %320, 26
  %322 = zext i1 %321 to i16
  %323 = shl nuw nsw i16 %322, 5
  %324 = or i16 %323, %319
  %325 = zext i16 %324 to i32
  %326 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %327 = sext i8 %326 to i32
  %328 = icmp eq i32 %325, %327
  br i1 %328, label %329, label %351

329:                                              ; preds = %317
  %330 = getelementptr inbounds i16, i16* %318, i64 1
  %331 = load i16, i16* %330, align 2
  %332 = add i16 %331, -65
  %333 = icmp ult i16 %332, 26
  %334 = zext i1 %333 to i16
  %335 = shl nuw nsw i16 %334, 5
  %336 = or i16 %335, %331
  %337 = zext i16 %336 to i32
  %338 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %339 = sext i8 %338 to i32
  %340 = icmp eq i32 %337, %339
  br i1 %340, label %361, label %351

341:                                              ; preds = %307
  %342 = getelementptr inbounds i8, i8* %308, i64 1
  %343 = load i8, i8* %342, align 1
  %344 = zext i8 %343 to i64
  %345 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %344
  %346 = load i8, i8* %345, align 1
  %347 = zext i8 %346 to i32
  %348 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %349 = sext i8 %348 to i32
  %350 = icmp eq i32 %347, %349
  br i1 %350, label %361, label %351

351:                                              ; preds = %341, %329, %317, %307, %295, %285, %273, %262, %250, %241, %231
  %352 = phi i8* [ %296, %307 ], [ %296, %317 ], [ %296, %295 ], [ %296, %329 ], [ %296, %341 ], [ %227, %241 ], [ %227, %231 ], [ %227, %262 ], [ %227, %250 ], [ %227, %273 ], [ %227, %285 ]
  %353 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %354 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %355 = select i1 %138, i64 %353, i64 %354
  %356 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %355, i64* %356, align 8, !alias.scope !17
  %357 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %358 = bitcast i8** %357 to i64*
  store i64 %141, i64* %358, align 8, !alias.scope !17
  %359 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %143, i32* %359, align 8, !alias.scope !17
  %360 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [5 x i8]* nonnull dereferenceable(5) @.str.1) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %352) #13
  br i1 %360, label %363, label %365

361:                                              ; preds = %341, %285, %211, %198, %273, %329
  %362 = phi i8* [ %296, %329 ], [ %227, %273 ], [ %210, %198 ], [ %221, %211 ], [ %227, %285 ], [ %296, %341 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %362) #13
  br label %363

363:                                              ; preds = %361, %351
  %364 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %364, align 8
  br label %473

365:                                              ; preds = %130, %351
  %366 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %366) #13
  %367 = load i32, i32* %134, align 8, !noalias !20
  %368 = and i32 %367, 262144
  %369 = icmp eq i32 %368, 0
  %370 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 2
  %371 = bitcast i8** %370 to i64*
  %372 = load i64, i64* %371, align 8, !noalias !20
  %373 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 1
  %374 = load i32, i32* %373, align 4, !noalias !20
  %375 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %376 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %377 = select i1 %369, i64 %375, i64 %376
  %378 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %377, i64* %378, align 8, !alias.scope !20
  %379 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %380 = bitcast i8** %379 to i64*
  store i64 %372, i64* %380, align 8, !alias.scope !20
  %381 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %374, i32* %381, align 8, !alias.scope !20
  %382 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %7) #13
  %383 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 1
  %384 = icmp eq %"class.WTF::StringImpl"* %382, null
  br i1 %384, label %402, label %385

385:                                              ; preds = %365
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = and i32 %387, 2
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %402

390:                                              ; preds = %385
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 0
  %392 = load i32, i32* %391, align 4
  %393 = zext i32 %392 to i33
  %394 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %393, i33 1) #13
  %395 = extractvalue { i33, i1 } %394, 1
  %396 = extractvalue { i33, i1 } %394, 0
  %397 = icmp slt i33 %396, 0
  %398 = or i1 %395, %397
  br i1 %398, label %399, label %400, !prof !2

399:                                              ; preds = %390
  call void @llvm.trap() #13
  unreachable

400:                                              ; preds = %390
  %401 = trunc i33 %396 to i32
  store i32 %401, i32* %391, align 4
  br label %402

402:                                              ; preds = %400, %385, %365
  %403 = ptrtoint %"class.WTF::StringImpl"* %382 to i64
  %404 = bitcast %"class.WTF::String"* %383 to i64*
  %405 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %383, i64 0, i32 0, i32 0
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %405, align 8
  store i64 %403, i64* %404, align 8
  %407 = icmp eq %"class.WTF::StringImpl"* %406, null
  br i1 %407, label %421, label %408

408:                                              ; preds = %402
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load atomic i32, i32* %409 monotonic, align 4
  %411 = and i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 0
  %414 = load i32, i32* %413, align 4
  br i1 %412, label %415, label %417

415:                                              ; preds = %408
  %416 = add i32 %414, -1
  store i32 %416, i32* %413, align 4
  br label %417

417:                                              ; preds = %415, %408
  %418 = phi i32 [ %416, %415 ], [ %414, %408 ]
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %417
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %406) #13
  br label %421

421:                                              ; preds = %402, %417, %420
  %422 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 4
  store i8 1, i8* %422, align 8
  br i1 %384, label %436, label %423

423:                                              ; preds = %421
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load atomic i32, i32* %424 monotonic, align 4
  %426 = and i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 0
  %429 = load i32, i32* %428, align 4
  br i1 %427, label %430, label %432

430:                                              ; preds = %423
  %431 = add i32 %429, -1
  store i32 %431, i32* %428, align 4
  br label %432

432:                                              ; preds = %430, %423
  %433 = phi i32 [ %431, %430 ], [ %429, %423 ]
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %436

435:                                              ; preds = %432
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %382) #13
  br label %436

436:                                              ; preds = %421, %432, %435
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %366) #13
  %437 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser7ReadAndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %437, align 8
  br label %473

438:                                              ; preds = %4
  %439 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 4, i32 0
  %440 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %439, align 8
  %441 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %440, i64 0, i32 1, i32 0, i32 0, i32 2
  %442 = load i32, i32* %441, align 4
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %456, label %444

444:                                              ; preds = %438
  %445 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %446 = load i64, i64* %445, align 8
  %447 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  %448 = load i64, i64* %447, align 8
  %449 = icmp ne i64 %446, ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14ReadRestrictorENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64)
  %450 = icmp ne i64 %446, 0
  %451 = icmp ne i64 %448, 0
  %452 = and i1 %450, %451
  %453 = or i1 %449, %452
  br i1 %453, label %456, label %454

454:                                              ; preds = %444
  %455 = bitcast i64* %445 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %455, align 8
  br label %473

456:                                              ; preds = %438, %444
  %457 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %458 = bitcast i64* %457 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser4DoneENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %458, align 8
  br label %473

459:                                              ; preds = %4
  %460 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %461 = bitcast i64* %460 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %461, align 8
  %462 = icmp eq i32 %1, 22
  br i1 %462, label %463, label %473

463:                                              ; preds = %459
  %464 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 5, i32 0
  %465 = load i32, i32* %464, align 4
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %467, label %473

467:                                              ; preds = %463
  %468 = bitcast i64* %460 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14ReadRestrictorENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %468, align 8
  %469 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3
  tail call void @_ZN5blink14MediaQueryData5ClearEv(%"class.blink::MediaQueryData"* %469) #13
  %470 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 4, i32 0
  %471 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %470, align 8
  %472 = tail call %"class.blink::MediaQuery"* @_ZN5blink10MediaQuery12CreateNotAllEv() #13
  tail call void @_ZN5blink13MediaQuerySet13AddMediaQueryENSt3__110unique_ptrINS_10MediaQueryENS1_14default_deleteIS3_EEEE(%"class.blink::MediaQuerySet"* %471, %"class.blink::MediaQuery"* %472) #13
  br label %473

473:                                              ; preds = %467, %463, %454, %127, %436, %363, %112, %459, %456, %14, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParser7ReadAndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"* nocapture, i32, %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24), %"class.blink::CSSParserTokenRange"* nocapture readnone dereferenceable(16)) #0 align 2 {
  switch i32 %1, label %105 [
    i32 0, label %5
    i32 22, label %93
  ]

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 2
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !23
  %9 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 1
  %10 = load i32, i32* %9, align 4, !noalias !23
  %11 = icmp eq i32 %10, 3
  br i1 %11, label %12, label %103

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::CSSParserToken"* %2 to i32*
  %14 = load i32, i32* %13, align 8, !noalias !23
  %15 = and i32 %14, 262144
  %16 = icmp eq i32 %15, 0
  %17 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = select i1 %16, i64 %17, i64 %18
  %20 = inttoptr i64 %19 to %"class.WTF::StringImpl"*
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %45, label %25

25:                                               ; preds = %12
  %26 = inttoptr i64 %8 to i8*
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i64
  %29 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 97), align 1
  %33 = sext i8 %32 to i32
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %35, label %103

35:                                               ; preds = %25
  %36 = getelementptr inbounds i8, i8* %26, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %43 = sext i8 %42 to i32
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %81, label %103

45:                                               ; preds = %12
  %46 = inttoptr i64 %8 to i16*
  %47 = load i16, i16* %46, align 2
  %48 = add i16 %47, -65
  %49 = icmp ult i16 %48, 26
  %50 = zext i1 %49 to i16
  %51 = shl nuw nsw i16 %50, 5
  %52 = or i16 %51, %47
  %53 = zext i16 %52 to i32
  %54 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 97), align 1
  %55 = sext i8 %54 to i32
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %57, label %103

57:                                               ; preds = %45
  %58 = getelementptr inbounds i16, i16* %46, i64 1
  %59 = load i16, i16* %58, align 2
  %60 = add i16 %59, -65
  %61 = icmp ult i16 %60, 26
  %62 = zext i1 %61 to i16
  %63 = shl nuw nsw i16 %62, 5
  %64 = or i16 %63, %59
  %65 = zext i16 %64 to i32
  %66 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %67 = sext i8 %66 to i32
  %68 = icmp eq i32 %65, %67
  br i1 %68, label %69, label %103

69:                                               ; preds = %57
  %70 = getelementptr inbounds i16, i16* %46, i64 2
  %71 = load i16, i16* %70, align 2
  %72 = add i16 %71, -65
  %73 = icmp ult i16 %72, 26
  %74 = zext i1 %73 to i16
  %75 = shl nuw nsw i16 %74, 5
  %76 = or i16 %75, %71
  %77 = zext i16 %76 to i32
  %78 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 100), align 4
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %91, label %103

81:                                               ; preds = %35
  %82 = getelementptr inbounds i8, i8* %26, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 100), align 4
  %89 = sext i8 %88 to i32
  %90 = icmp eq i32 %87, %89
  br i1 %90, label %91, label %103

91:                                               ; preds = %69, %81
  %92 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser16ReadFeatureStartENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %92, align 8
  br label %111

93:                                               ; preds = %4
  %94 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 2
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %103, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 4, i32 0
  %99 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3
  %101 = tail call %"class.blink::MediaQuery"* @_ZN5blink14MediaQueryData14TakeMediaQueryEv(%"class.blink::MediaQueryData"* %100)
  tail call void @_ZN5blink13MediaQuerySet13AddMediaQueryENSt3__110unique_ptrINS_10MediaQueryENS1_14default_deleteIS3_EEEE(%"class.blink::MediaQuerySet"* %99, %"class.blink::MediaQuery"* %101) #13
  %102 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14ReadRestrictorENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %102, align 8
  br label %111

103:                                              ; preds = %93, %69, %81, %5, %45, %57, %25, %35
  %104 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  br label %109

105:                                              ; preds = %4
  %106 = icmp eq i32 %1, 31
  %107 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  br i1 %106, label %108, label %109

108:                                              ; preds = %105
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser4DoneENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %107, align 8
  br label %111

109:                                              ; preds = %103, %105
  %110 = phi i64* [ %104, %103 ], [ %107, %105 ]
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %110, align 8
  br label %111

111:                                              ; preds = %97, %109, %108, %91
  %112 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  store i64 0, i64* %112, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink16MediaQueryParser16ReadFeatureStartENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"* nocapture, i32, %"class.blink::CSSParserToken"* nocapture readnone dereferenceable(24), %"class.blink::CSSParserTokenRange"* nocapture readnone dereferenceable(16)) #4 align 2 {
  %5 = icmp eq i32 %1, 23
  %6 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %7 = select i1 %5, i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser11ReadFeatureENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64)
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  store i64 0, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParser11ReadFeatureENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"* nocapture, i32, %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24), %"class.blink::CSSParserTokenRange"* nocapture readnone dereferenceable(16)) #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %7, label %91

7:                                                ; preds = %4
  %8 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  %9 = bitcast %"class.blink::CSSParserToken"* %2 to i32*
  %10 = load i32, i32* %9, align 8, !noalias !26
  %11 = and i32 %10, 262144
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 2
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !26
  %16 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 4, !noalias !26
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = select i1 %12, i64 %18, i64 %19
  %21 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %20, i64* %21, align 8, !alias.scope !26
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %23 = bitcast i8** %22 to i64*
  store i64 %15, i64* %23, align 8, !alias.scope !26
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %17, i32* %24, align 8, !alias.scope !26
  %25 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  %26 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 6
  %27 = load i8, i8* %26, align 4
  %28 = icmp eq i8 %27, 5
  br i1 %28, label %34, label %29

29:                                               ; preds = %7
  %30 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink19media_feature_names22kImmersiveMediaFeatureE, align 8
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"* %25) #13
  br i1 %33, label %73, label %34

34:                                               ; preds = %29, %7
  %35 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 3
  %36 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #13
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %42
  call void @llvm.trap() #13
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %34
  %55 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  %56 = bitcast %"class.WTF::String"* %35 to i64*
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  store i64 %55, i64* %56, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #13
  br label %73

73:                                               ; preds = %29, %72, %69, %54
  %74 = phi i64 [ ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser16ReadFeatureColonENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), %54 ], [ ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser16ReadFeatureColonENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), %69 ], [ ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser16ReadFeatureColonENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), %72 ], [ ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), %29 ]
  %75 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  store i64 0, i64* %76, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %77, label %94, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #13
  br label %94

91:                                               ; preds = %4
  %92 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %93 = bitcast i64* %92 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %93, align 8
  br label %94

94:                                               ; preds = %90, %87, %73, %91
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParser16ReadFeatureColonENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"* nocapture readnone dereferenceable(24), %"class.blink::CSSParserTokenRange"* dereferenceable(16)) #0 align 2 {
  %5 = alloca %"class.blink::MediaQueryExp", align 8
  switch i32 %1, label %84 [
    i32 20, label %6
    i32 31, label %37
    i32 24, label %37
  ]

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %3, i64 0, i32 0
  %8 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %3, i64 0, i32 1
  %10 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %9, align 8
  %11 = icmp ult %"class.blink::CSSParserToken"* %8, %10
  %12 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %13 = select i1 %11, %"class.blink::CSSParserToken"* %8, %"class.blink::CSSParserToken"* %12
  %14 = bitcast %"class.blink::CSSParserToken"* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 63
  %17 = icmp eq i32 %16, 17
  br i1 %17, label %18, label %31

18:                                               ; preds = %6, %23
  %19 = phi %"class.blink::CSSParserToken"* [ %24, %23 ], [ %8, %6 ]
  %20 = icmp eq %"class.blink::CSSParserToken"* %19, %10
  br i1 %20, label %23, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %19, i64 1
  store %"class.blink::CSSParserToken"* %22, %"class.blink::CSSParserToken"** %7, align 8
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi %"class.blink::CSSParserToken"* [ %19, %18 ], [ %22, %21 ]
  %25 = icmp ult %"class.blink::CSSParserToken"* %24, %10
  %26 = select i1 %25, %"class.blink::CSSParserToken"* %24, %"class.blink::CSSParserToken"* %12
  %27 = bitcast %"class.blink::CSSParserToken"* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 63
  %30 = icmp eq i32 %29, 17
  br i1 %30, label %18, label %31

31:                                               ; preds = %23, %6
  %32 = phi i32 [ %16, %6 ], [ %29, %23 ]
  %33 = icmp eq i32 %32, 24
  %34 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  br i1 %33, label %35, label %36

35:                                               ; preds = %31
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser17SkipUntilBlockEndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %34, align 8
  br label %86

36:                                               ; preds = %31
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser16ReadFeatureValueENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %34, align 8
  br label %86

37:                                               ; preds = %4, %4
  %38 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 7
  %39 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2
  %41 = bitcast %"class.blink::MediaQueryExp"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %41) #13
  %42 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 3
  %43 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 5
  %44 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %43, align 8
  call void @_ZN5blink13MediaQueryExp6CreateERKN3WTF6StringERNS_19CSSParserTokenRangeERKNS_16CSSParserContextEPKNS_16ExecutionContextE(%"class.blink::MediaQueryExp"* nonnull sret %5, %"class.WTF::String"* dereferenceable(8) %42, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %3, %"class.blink::CSSParserContext"* dereferenceable(176) %44, %"class.blink::ExecutionContext"* %39) #13
  %45 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %57, label %50, !prof !2

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %40, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %51, align 8
  %53 = zext i32 %46 to i64
  %54 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %52, i64 %53
  call void @_ZN5blink13MediaQueryExpC1ERKS0_(%"class.blink::MediaQueryExp"* %54, %"class.blink::MediaQueryExp"* nonnull dereferenceable(40) %5) #13
  %55 = load i32, i32* %45, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %45, align 4
  br label %58

57:                                               ; preds = %37
  call void @_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2"* %40, %"class.blink::MediaQueryExp"* nonnull dereferenceable(40) %5) #13
  br label %58

58:                                               ; preds = %50, %57
  call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %41) #13
  switch i32 %1, label %69 [
    i32 31, label %59
    i32 24, label %59
  ]

59:                                               ; preds = %58, %58
  %60 = load i32, i32* %45, align 4
  %61 = add i32 %60, -1
  %62 = call dereferenceable(40) %"class.blink::MediaQueryExp"* @_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2"* %40, i32 %61) #13
  %63 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  %66 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  br i1 %65, label %68, label %67

67:                                               ; preds = %59
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser7ReadAndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %66, align 8
  br label %86

68:                                               ; preds = %59
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %66, align 8
  br label %86

69:                                               ; preds = %58
  %70 = load i32, i32* %45, align 4
  %71 = add i32 %70, -1
  %72 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0
  %73 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %72, align 8
  %74 = zext i32 %70 to i64
  %75 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %73, i64 %74
  %76 = zext i32 %71 to i64
  %77 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %73, i64 %76
  br label %78

78:                                               ; preds = %78, %69
  %79 = phi %"class.blink::MediaQueryExp"* [ %80, %78 ], [ %77, %69 ]
  call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %79) #13
  %80 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %79, i64 1
  %81 = icmp eq %"class.blink::MediaQueryExp"* %80, %75
  br i1 %81, label %82, label %78

82:                                               ; preds = %78
  store i32 %71, i32* %45, align 4
  %83 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser17SkipUntilBlockEndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %83, align 8
  br label %86

84:                                               ; preds = %4
  %85 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser17SkipUntilBlockEndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %85, align 8
  br label %86

86:                                               ; preds = %82, %68, %67, %84, %35, %36
  %87 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  store i64 0, i64* %87, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParser16ReadFeatureValueENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24), %"class.blink::CSSParserTokenRange"* dereferenceable(16)) #0 align 2 {
  %5 = alloca %"class.blink::MediaQueryExp", align 8
  %6 = icmp eq i32 %1, 9
  br i1 %6, label %7, label %20

7:                                                ; preds = %4
  %8 = bitcast %"class.blink::CSSParserToken"* %2 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 260096
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %3, i64 0, i32 0
  %14 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %3, i64 0, i32 1
  %16 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %15, align 8
  %17 = icmp eq %"class.blink::CSSParserToken"* %14, %16
  br i1 %17, label %42, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %14, i64 1
  store %"class.blink::CSSParserToken"* %19, %"class.blink::CSSParserToken"** %13, align 8
  br label %42

20:                                               ; preds = %7, %4
  %21 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 7
  %22 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2
  %24 = bitcast %"class.blink::MediaQueryExp"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 3
  %26 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 5
  %27 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %26, align 8
  call void @_ZN5blink13MediaQueryExp6CreateERKN3WTF6StringERNS_19CSSParserTokenRangeERKNS_16CSSParserContextEPKNS_16ExecutionContextE(%"class.blink::MediaQueryExp"* nonnull sret %5, %"class.WTF::String"* dereferenceable(8) %25, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %3, %"class.blink::CSSParserContext"* dereferenceable(176) %27, %"class.blink::ExecutionContext"* %22) #13
  %28 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %40, label %33, !prof !2

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %23, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %34, align 8
  %36 = zext i32 %29 to i64
  %37 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %35, i64 %36
  call void @_ZN5blink13MediaQueryExpC1ERKS0_(%"class.blink::MediaQueryExp"* %37, %"class.blink::MediaQueryExp"* nonnull dereferenceable(40) %5) #13
  %38 = load i32, i32* %28, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %28, align 4
  br label %41

40:                                               ; preds = %20
  call void @_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2"* %23, %"class.blink::MediaQueryExp"* nonnull dereferenceable(40) %5) #13
  br label %41

41:                                               ; preds = %33, %40
  call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #13
  br label %42

42:                                               ; preds = %18, %12, %41
  %43 = phi i64 [ ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14ReadFeatureEndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), %41 ], [ ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), %12 ], [ ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), %18 ]
  %44 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  store i64 0, i64* %45, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParser14ReadFeatureEndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"* nocapture readnone dereferenceable(24), %"class.blink::CSSParserTokenRange"* nocapture readnone dereferenceable(16)) #0 align 2 {
  switch i32 %1, label %17 [
    i32 31, label %5
    i32 24, label %5
  ]

5:                                                ; preds = %4, %4
  %6 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2
  %7 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  %10 = tail call dereferenceable(40) %"class.blink::MediaQueryExp"* @_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2"* %6, i32 %9) #13
  %11 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  %14 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  br i1 %13, label %16, label %15

15:                                               ; preds = %5
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser7ReadAndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %14, align 8
  br label %33

16:                                               ; preds = %5
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %14, align 8
  br label %33

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, -1
  %21 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %21, align 8
  %23 = zext i32 %19 to i64
  %24 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %22, i64 %23
  %25 = zext i32 %20 to i64
  %26 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %22, i64 %25
  br label %27

27:                                               ; preds = %27, %17
  %28 = phi %"class.blink::MediaQueryExp"* [ %29, %27 ], [ %26, %17 ]
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %28) #13
  %29 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %28, i64 1
  %30 = icmp eq %"class.blink::MediaQueryExp"* %29, %24
  br i1 %30, label %31, label %27

31:                                               ; preds = %27
  store i32 %20, i32* %18, align 4
  %32 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  store i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser17SkipUntilBlockEndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64* %32, align 8
  br label %33

33:                                               ; preds = %15, %16, %31
  %34 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  store i64 0, i64* %34, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"* nocapture, i32, %"class.blink::CSSParserToken"* nocapture readnone dereferenceable(24), %"class.blink::CSSParserTokenRange"* nocapture readnone dereferenceable(16)) #0 align 2 {
  switch i32 %1, label %16 [
    i32 22, label %5
    i32 31, label %9
  ]

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 5, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %4, %5
  %10 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14ReadRestrictorENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3
  tail call void @_ZN5blink14MediaQueryData5ClearEv(%"class.blink::MediaQueryData"* %12)
  %13 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 4, i32 0
  %14 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %13, align 8
  %15 = tail call %"class.blink::MediaQuery"* @_ZN5blink10MediaQuery12CreateNotAllEv() #13
  tail call void @_ZN5blink13MediaQuerySet13AddMediaQueryENSt3__110unique_ptrINS_10MediaQueryENS1_14default_deleteIS3_EEEE(%"class.blink::MediaQuerySet"* %14, %"class.blink::MediaQuery"* %15) #13
  br label %16

16:                                               ; preds = %5, %4, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParser17SkipUntilBlockEndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"* nocapture, i32, %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24), %"class.blink::CSSParserTokenRange"* nocapture readnone dereferenceable(16)) #5 align 2 {
  %5 = bitcast %"class.blink::CSSParserToken"* %2 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 192
  %8 = icmp eq i32 %7, 128
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 5, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %15 = bitcast i64* %14 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14SkipUntilCommaENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %15, align 8
  br label %16

16:                                               ; preds = %9, %13, %4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink16MediaQueryParser4DoneENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"* nocapture, i32, %"class.blink::CSSParserToken"* nocapture dereferenceable(24), %"class.blink::CSSParserTokenRange"* nocapture dereferenceable(16)) #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParserC2ENS0_10ParserTypeENS_13CSSParserModeEPKNS_16ExecutionContextE(%"class.blink::MediaQueryParser"*, i32, i8 zeroext, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink16MediaQueryParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 2
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 0
  store i32 2, i32* %7, align 8
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16media_type_names4kAllE, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #13
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %4, %13, %28
  %31 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2
  %32 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 5
  %33 = bitcast %"class.WTF::Vector.2"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 25, i1 false) #13
  %34 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #13
  %35 = bitcast i8* %34 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ENS_13CSSParserModeENS_17SecureContextModeENS0_15SelectorProfileEPKNS_8DocumentE(%"class.blink::CSSParserContext"* %35, i8 zeroext 0, i32 0, i8 zeroext 0, %"class.blink::Document"* null) #13
  %36 = getelementptr inbounds i8, i8* %34, i64 -4
  %37 = bitcast i8* %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = or i16 %38, 1
  store atomic i16 %39, i16* %37 release, align 2
  %40 = bitcast %"class.blink::CSSParserContext"** %32 to i8**
  store i8* %34, i8** %40, align 8
  %41 = tail call noalias i8* @malloc(i64 24) #13
  %42 = bitcast i8* %41 to %"class.blink::MediaQuerySet"*
  tail call void @_ZN5blink13MediaQuerySetC1Ev(%"class.blink::MediaQuerySet"* %42) #13
  %43 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 4, i32 0
  %44 = bitcast %"class.blink::MediaQuerySet"** %43 to i8**
  store i8* %41, i8** %44, align 8
  %45 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 5
  tail call void @_ZN5blink22MediaQueryBlockWatcherC1Ev(%"class.blink::MediaQueryBlockWatcher"* %45) #13
  %46 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 6
  store i8 %2, i8* %46, align 4
  %47 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 7
  store %"class.blink::ExecutionContext"* %3, %"class.blink::ExecutionContext"** %47, align 8
  %48 = icmp eq i32 %1, 0
  %49 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %50 = select i1 %48, i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser14ReadRestrictorENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser12ReadMediaNotENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64)
  store i64 %50, i64* %49, align 8
  %51 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  store i64 0, i64* %51, align 8
  ret void
}

declare void @_ZN5blink22MediaQueryBlockWatcherC1Ev(%"class.blink::MediaQueryBlockWatcher"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParserD2Ev(%"class.blink::MediaQueryParser"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink16MediaQueryParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %3, align 8
  %5 = icmp eq %"class.blink::MediaQuerySet"* %4, null
  br i1 %5, label %41, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %41

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr"* %14, null
  br i1 %15, label %39, label %16, !prof !3

16:                                               ; preds = %11
  %17 = bitcast %"class.std::__1::unique_ptr"* %14 to i8*
  %18 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %37, label %21, !prof !2

21:                                               ; preds = %16
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 %22
  br label %24

24:                                               ; preds = %31, %21
  %25 = phi %"class.std::__1::unique_ptr"* [ %32, %31 ], [ %14, %21 ]
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %26, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %26, align 8
  %28 = icmp eq %"class.blink::MediaQuery"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  tail call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %27) #13
  %30 = bitcast %"class.blink::MediaQuery"* %27 to i8*
  tail call void @free(i8* %30) #13
  br label %31

31:                                               ; preds = %29, %24
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %33 = icmp eq %"class.std::__1::unique_ptr"* %32, %23
  br i1 %33, label %34, label %24

34:                                               ; preds = %31
  store i32 0, i32* %18, align 4
  %35 = bitcast %"class.WTF::Vector"* %12 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %16
  %38 = phi i8* [ %36, %34 ], [ %17, %16 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #13
  br label %39

39:                                               ; preds = %11, %37
  %40 = bitcast %"class.blink::MediaQuerySet"* %4 to i8*
  tail call void @free(i8* %40) #13
  br label %41

41:                                               ; preds = %1, %6, %39
  %42 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 3, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #13
  br label %58

58:                                               ; preds = %57, %54, %41
  %59 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2
  %60 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %60, align 8
  %62 = icmp eq %"class.blink::MediaQueryExp"* %61, null
  br i1 %62, label %80, label %63, !prof !3

63:                                               ; preds = %58
  %64 = bitcast %"class.blink::MediaQueryExp"* %61 to i8*
  %65 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %78, label %68, !prof !2

68:                                               ; preds = %63
  %69 = zext i32 %66 to i64
  %70 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %61, i64 %69
  br label %71

71:                                               ; preds = %71, %68
  %72 = phi %"class.blink::MediaQueryExp"* [ %73, %71 ], [ %61, %68 ]
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %72) #13
  %73 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %72, i64 1
  %74 = icmp eq %"class.blink::MediaQueryExp"* %73, %70
  br i1 %74, label %75, label %71

75:                                               ; preds = %71
  store i32 0, i32* %65, align 4
  %76 = bitcast %"class.WTF::Vector.2"* %59 to i8**
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %75, %63
  %79 = phi i8* [ %77, %75 ], [ %64, %63 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #13
  store %"class.blink::MediaQueryExp"* null, %"class.blink::MediaQueryExp"** %60, align 8
  br label %80

80:                                               ; preds = %78, %58
  %81 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #13
  br label %97

97:                                               ; preds = %80, %93, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParserD0Ev(%"class.blink::MediaQueryParser"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink16MediaQueryParserD2Ev(%"class.blink::MediaQueryParser"* %0) #13
  %2 = bitcast %"class.blink::MediaQueryParser"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink16MediaQueryParser19SetStateAndRestrictEMS0_FvNS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeEENS_10MediaQuery14RestrictorTypeE(%"class.blink::MediaQueryParser"* nocapture, i64, i64, i32) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 3, i32 0
  store i32 %3, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  store i64 %2, i64* %7, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14MediaQueryData12SetMediaTypeERKN3WTF6StringE(%"class.blink::MediaQueryData"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %2
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"class.WTF::String"* %3 to i64*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 4
  store i8 1, i8* %44, align 8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"*) local_unnamed_addr #2

declare void @_ZN5blink13MediaQuerySet13AddMediaQueryENSt3__110unique_ptrINS_10MediaQueryENS1_14default_deleteIS3_EEEE(%"class.blink::MediaQuerySet"*, %"class.blink::MediaQuery"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaQuery"* @_ZN5blink14MediaQueryData14TakeMediaQueryEv(%"class.blink::MediaQueryData"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.2", align 8
  %3 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2
  %5 = bitcast %"class.WTF::Vector.2"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5)
  %6 = tail call noalias i8* @malloc(i64 40) #13
  %7 = bitcast i8* %6 to %"class.blink::MediaQuery"*
  %8 = load i32, i32* %3, align 4
  %9 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %2, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %2, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.WTF::Vector.2"* %4 to i64*
  %14 = bitcast %"class.WTF::Vector.2"* %2 to i64*
  store i64 0, i64* %14, align 8
  %15 = load i64, i64* %13, align 8
  store atomic i64 0, i64* %13 monotonic, align 8
  store atomic i64 %15, i64* %14 monotonic, align 8
  %16 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %11, align 8
  store i32 0, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 4
  store i32 0, i32* %18, align 4
  call void @_ZN5blink10MediaQueryC1ENS0_14RestrictorTypeEN3WTF6StringENS2_6VectorINS_13MediaQueryExpELj0ENS2_18PartitionAllocatorEEE(%"class.blink::MediaQuery"* %7, i32 %8, %"class.WTF::StringImpl"* %10, %"class.WTF::Vector.2"* nonnull %2) #13
  %20 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %20, align 8
  %22 = icmp eq %"class.blink::MediaQueryExp"* %21, null
  br i1 %22, label %39, label %23, !prof !3

23:                                               ; preds = %1
  %24 = bitcast %"class.blink::MediaQueryExp"* %21 to i8*
  %25 = load i32, i32* %12, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %37, label %27, !prof !2

27:                                               ; preds = %23
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %21, i64 %28
  br label %30

30:                                               ; preds = %30, %27
  %31 = phi %"class.blink::MediaQueryExp"* [ %32, %30 ], [ %21, %27 ]
  call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %31) #13
  %32 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %31, i64 1
  %33 = icmp eq %"class.blink::MediaQueryExp"* %32, %29
  br i1 %33, label %34, label %30

34:                                               ; preds = %30
  store i32 0, i32* %12, align 4
  %35 = bitcast %"class.WTF::Vector.2"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %23
  %38 = phi i8* [ %36, %34 ], [ %24, %23 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #13
  store %"class.blink::MediaQueryExp"* null, %"class.blink::MediaQueryExp"** %20, align 8
  br label %39

39:                                               ; preds = %1, %37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5)
  call void @_ZN5blink14MediaQueryData5ClearEv(%"class.blink::MediaQueryData"* %0)
  ret %"class.blink::MediaQuery"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16MediaQueryParser27IsMediaFeatureAllowedInModeERKN3WTF6StringE(%"class.blink::MediaQueryParser"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 5
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink19media_feature_names22kImmersiveMediaFeatureE, align 8
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"* %11) #13
  %13 = xor i1 %12, true
  br label %14

14:                                               ; preds = %6, %2
  %15 = phi i1 [ true, %2 ], [ %13, %6 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14MediaQueryData13AddExpressionERNS_19CSSParserTokenRangeEPKNS_16ExecutionContextE(%"class.blink::MediaQueryData"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::MediaQueryExp", align 8
  %5 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2
  %6 = bitcast %"class.blink::MediaQueryExp"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 5
  %9 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %8, align 8
  call void @_ZN5blink13MediaQueryExp6CreateERKN3WTF6StringERNS_19CSSParserTokenRangeERKNS_16CSSParserContextEPKNS_16ExecutionContextE(%"class.blink::MediaQueryExp"* nonnull sret %4, %"class.WTF::String"* dereferenceable(8) %7, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %9, %"class.blink::ExecutionContext"* %2) #13
  %10 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %22, label %15, !prof !2

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %5, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %16, align 8
  %18 = zext i32 %11 to i64
  %19 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %17, i64 %18
  call void @_ZN5blink13MediaQueryExpC1ERKS0_(%"class.blink::MediaQueryExp"* %19, %"class.blink::MediaQueryExp"* nonnull dereferenceable(40) %4) #13
  %20 = load i32, i32* %10, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %10, align 4
  br label %23

22:                                               ; preds = %3
  call void @_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2"* %5, %"class.blink::MediaQueryExp"* nonnull dereferenceable(40) %4) #13
  br label %23

23:                                               ; preds = %15, %22
  call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14MediaQueryData19LastExpressionValidEv(%"class.blink::MediaQueryData"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -1
  %6 = tail call dereferenceable(40) %"class.blink::MediaQueryExp"* @_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2"* %2, i32 %5) #13
  %7 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp ne %"class.WTF::StringImpl"* %8, null
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14MediaQueryData20RemoveLastExpressionEv(%"class.blink::MediaQueryData"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1
  %5 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %5, align 8
  %7 = zext i32 %3 to i64
  %8 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %6, i64 %7
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %6, i64 %9
  br label %11

11:                                               ; preds = %11, %1
  %12 = phi %"class.blink::MediaQueryExp"* [ %13, %11 ], [ %10, %1 ]
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %12) #13
  %13 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %12, i64 1
  %14 = icmp eq %"class.blink::MediaQueryExp"* %13, %8
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  store i32 %4, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14MediaQueryData5ClearEv(%"class.blink::MediaQueryData"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 0
  store i32 2, i32* %2, align 8
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16media_type_names4kAllE, align 8
  %4 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #13
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %1
  %26 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  %27 = bitcast %"class.WTF::String"* %4 to i64*
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  store i64 %26, i64* %27, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %44

44:                                               ; preds = %25, %40, %43
  %45 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 4
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 3
  %47 = bitcast %"class.WTF::String"* %46 to i64*
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 0, i64* %47, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13
  br label %64

64:                                               ; preds = %63, %60, %44
  %65 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2
  %66 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %87, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %65, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %74, align 8
  %76 = zext i32 %71 to i64
  %77 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %75, i64 %76
  br label %78

78:                                               ; preds = %78, %73
  %79 = phi %"class.blink::MediaQueryExp"* [ %80, %78 ], [ %75, %73 ]
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %79) #13
  %80 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %79, i64 1
  %81 = icmp eq %"class.blink::MediaQueryExp"* %80, %77
  br i1 %81, label %82, label %78

82:                                               ; preds = %78
  store i32 0, i32* %70, align 4
  br label %83

83:                                               ; preds = %82, %69
  %84 = bitcast %"class.WTF::Vector.2"* %65 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast %"class.WTF::Vector.2"* %65 to i64*
  store atomic i64 0, i64* %86 monotonic, align 8
  store i32 0, i32* %66, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %85) #13
  br label %87

87:                                               ; preds = %64, %83
  ret void
}

declare %"class.blink::MediaQuery"* @_ZN5blink10MediaQuery12CreateNotAllEv() local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParser12HandleBlocksERKNS_14CSSParserTokenE(%"class.blink::MediaQueryParser"* nocapture, %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24)) local_unnamed_addr #5 align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %1 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 192
  %6 = icmp eq i32 %5, 64
  br i1 %6, label %7, label %17

7:                                                ; preds = %2
  %8 = and i32 %4, 63
  %9 = icmp eq i32 %8, 23
  br i1 %9, label %10, label %14

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 5, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10, %7
  %15 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %16 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser17SkipUntilBlockEndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %16, align 8
  br label %17

17:                                               ; preds = %10, %14, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MediaQueryParser12ProcessTokenERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE(%"class.blink::MediaQueryParser"*, %"class.blink::CSSParserToken"* dereferenceable(24), %"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::CSSParserToken"* %1 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 63
  %7 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ne i64 %8, ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser16ReadFeatureValueENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64)
  %12 = icmp ne i64 %8, 0
  %13 = icmp ne i64 %10, 0
  %14 = and i1 %12, %13
  %15 = or i1 %11, %14
  %16 = icmp eq i32 %6, 17
  %17 = or i1 %16, %15
  br i1 %17, label %18, label %38

18:                                               ; preds = %3
  %19 = and i32 %5, 192
  %20 = icmp eq i32 %19, 64
  br i1 %20, label %21, label %29

21:                                               ; preds = %18
  %22 = icmp eq i32 %6, 23
  br i1 %22, label %23, label %27

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 5, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %23, %21
  %28 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* @_ZN5blink16MediaQueryParser17SkipUntilBlockEndENS_18CSSParserTokenTypeERKNS_14CSSParserTokenERNS_19CSSParserTokenRangeE to i64), i64 0>, <2 x i64>* %28, align 8
  br label %29

29:                                               ; preds = %18, %23, %27
  %30 = getelementptr inbounds %"class.blink::MediaQueryParser", %"class.blink::MediaQueryParser"* %0, i64 0, i32 5
  tail call void @_ZN5blink22MediaQueryBlockWatcher11HandleTokenERKNS_14CSSParserTokenE(%"class.blink::MediaQueryBlockWatcher"* %30, %"class.blink::CSSParserToken"* dereferenceable(24) %1) #13
  %31 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 0
  %32 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 1
  %34 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %33, align 8
  %35 = icmp eq %"class.blink::CSSParserToken"* %32, %34
  br i1 %35, label %38, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %32, i64 1
  store %"class.blink::CSSParserToken"* %37, %"class.blink::CSSParserToken"** %31, align 8
  br label %38

38:                                               ; preds = %29, %36, %3
  br i1 %16, label %58, label %39

39:                                               ; preds = %38
  %40 = load i64, i64* %7, align 8
  %41 = load i64, i64* %9, align 8
  %42 = bitcast %"class.blink::MediaQueryParser"* %0 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 %41
  %44 = bitcast i8* %43 to %"class.blink::MediaQueryParser"*
  %45 = and i64 %40, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %39
  %48 = bitcast i8* %43 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = add i64 %40, -1
  %51 = getelementptr i8, i8* %49, i64 %50
  %52 = bitcast i8* %51 to void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)**
  %53 = load void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)*, void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)** %52, align 8
  br label %56

54:                                               ; preds = %39
  %55 = inttoptr i64 %40 to void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)*
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi void (%"class.blink::MediaQueryParser"*, i32, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserTokenRange"*)* [ %53, %47 ], [ %55, %54 ]
  tail call void %57(%"class.blink::MediaQueryParser"* %44, i32 %6, %"class.blink::CSSParserToken"* dereferenceable(24) %1, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %2) #13
  br label %58

58:                                               ; preds = %38, %56
  ret void
}

declare void @_ZN5blink22MediaQueryBlockWatcher11HandleTokenERKNS_14CSSParserTokenE(%"class.blink::MediaQueryBlockWatcher"*, %"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14MediaQueryDataC2Ev(%"class.blink::MediaQueryData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 0
  store i32 2, i32* %2, align 8
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16media_type_names4kAllE, align 8
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #13
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %1, %8, %23
  %26 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %"class.blink::MediaQueryData", %"class.blink::MediaQueryData"* %0, i64 0, i32 5
  %28 = bitcast %"class.WTF::Vector.2"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 25, i1 false)
  %29 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #13
  %30 = bitcast i8* %29 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ENS_13CSSParserModeENS_17SecureContextModeENS0_15SelectorProfileEPKNS_8DocumentE(%"class.blink::CSSParserContext"* %30, i8 zeroext 0, i32 0, i8 zeroext 0, %"class.blink::Document"* null) #13
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  %35 = bitcast %"class.blink::CSSParserContext"** %27 to i8**
  store i8* %29, i8** %35, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink13MediaQueryExp6CreateERKN3WTF6StringERNS_19CSSParserTokenRangeERKNS_16CSSParserContextEPKNS_16ExecutionContextE(%"class.blink::MediaQueryExp"* sret, %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176), %"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"*) unnamed_addr #8

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.69"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.74"*, i32*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink13MediaQuerySetC1Ev(%"class.blink::MediaQuerySet"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: nounwind
declare void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN5blink16CSSParserContextC1ENS_13CSSParserModeENS_17SecureContextModeENS0_15SelectorProfileEPKNS_8DocumentE(%"class.blink::CSSParserContext"*, i8 zeroext, i32, i8 zeroext, %"class.blink::Document"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #13
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #13
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %40, i8* %41) #13
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #13
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #13
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #13
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #13
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #13
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.blink::MediaQueryExp"* [ %18, %14 ], [ %6, %4 ]
  %16 = phi %"class.blink::MediaQueryExp"* [ %17, %14 ], [ null, %4 ]
  tail call void @_ZN5blink13MediaQueryExpC1ERKS0_(%"class.blink::MediaQueryExp"* %16, %"class.blink::MediaQueryExp"* dereferenceable(40) %15) #13
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %15) #13
  %17 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %16, i64 1
  %18 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %15, i64 1
  %19 = icmp eq %"class.blink::MediaQueryExp"* %18, %10
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %4
  %21 = bitcast %"class.blink::MediaQueryExp"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #13
  br label %53

22:                                               ; preds = %2
  %23 = zext i32 %1 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13MediaQueryExpEEEmm(i64 %23) #13
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13MediaQueryExpEEEPKcv, i64 0, i64 0)) #13
  %26 = udiv i64 %24, 40
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %22
  %36 = bitcast %"class.blink::MediaQueryExp"* %29 to i8*
  br label %48

37:                                               ; preds = %22
  %38 = bitcast i8* %25 to %"class.blink::MediaQueryExp"*
  br label %39

39:                                               ; preds = %37, %39
  %40 = phi %"class.blink::MediaQueryExp"* [ %43, %39 ], [ %29, %37 ]
  %41 = phi %"class.blink::MediaQueryExp"* [ %42, %39 ], [ %38, %37 ]
  tail call void @_ZN5blink13MediaQueryExpC1ERKS0_(%"class.blink::MediaQueryExp"* %41, %"class.blink::MediaQueryExp"* dereferenceable(40) %40) #13
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %40) #13
  %42 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %41, i64 1
  %43 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %40, i64 1
  %44 = icmp eq %"class.blink::MediaQueryExp"* %43, %33
  br i1 %44, label %45, label %39

45:                                               ; preds = %39
  %46 = bitcast %"class.WTF::Vector.2"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %35, %45
  %49 = phi i8* [ %47, %45 ], [ %36, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #13
  %50 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %27, i64* %50 monotonic, align 8
  %51 = trunc i64 %26 to i32
  %52 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %51, i32* %52, align 8
  br label %53

53:                                               ; preds = %48, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13MediaQueryExpEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare void @_ZN5blink13MediaQueryExpC1ERKS0_(%"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"* dereferenceable(40)) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN5blink10MediaQueryC1ENS0_14RestrictorTypeEN3WTF6StringENS2_6VectorINS_13MediaQueryExpELj0ENS2_18PartitionAllocatorEEE(%"class.blink::MediaQuery"*, i32, %"class.WTF::StringImpl"*, %"class.WTF::Vector.2"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2"*, %"class.blink::MediaQueryExp"* dereferenceable(40)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %6, align 8
  %8 = icmp ugt %"class.blink::MediaQueryExp"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %7, i64 %10
  %12 = icmp ugt %"class.blink::MediaQueryExp"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::MediaQueryExp"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13MediaQueryExpEEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13MediaQueryExpEEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 40
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::MediaQueryExp"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2"* %0, i32 %22) #13
  %36 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::MediaQueryExp"* %1 to i64
  %39 = ptrtoint %"class.blink::MediaQueryExp"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 40
  %42 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::MediaQueryExp"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13MediaQueryExpEEEmm(i64 %55) #13
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13MediaQueryExpEEEPKcv, i64 0, i64 0)) #13
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 40
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::MediaQueryExp"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2"* %0, i32 %50) #13
  %64 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::MediaQueryExp"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::MediaQueryExp"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::MediaQueryExp"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %69, i64 %72
  tail call void @_ZN5blink13MediaQueryExpC1ERKS0_(%"class.blink::MediaQueryExp"* %73, %"class.blink::MediaQueryExp"* dereferenceable(40) %70) #13
  %74 = load i32, i32* %3, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.blink::MediaQueryExp"* @_ZN3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %24, i64 %25
  ret %"class.blink::MediaQueryExp"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink14CSSParserToken5ValueEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink14CSSParserToken5ValueEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink14CSSParserToken5ValueEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink14CSSParserToken5ValueEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink14CSSParserToken5ValueEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink14CSSParserToken5ValueEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink14CSSParserToken5ValueEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink14CSSParserToken5ValueEv"}
