; ModuleID = '../../third_party/blink/renderer/platform/graphics/filters/fe_displacement_map.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/filters/fe_displacement_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::FEDisplacementMap" = type <{ %"class.blink::FilterEffect", i32, i32, float, [4 x i8] }>
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector", %"class.blink::Member.2", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FilterEffect"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Filter"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.9, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.9 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.6", %"class.blink::Member" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.cc::DisplacementMapEffectPaintFilter" = type { %"class.cc::PaintFilter", i32, i32, float, %class.sk_sp, %class.sk_sp }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::TextStream" = type { %"class.WTF::StringBuilder" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.16, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i32 }
%union.anon.16 = type { %"class.WTF::Vector.17" }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19", [16 x i8] }
%"class.WTF::VectorBufferBase.19" = type { i8*, i32, i32 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.198", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.137", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i64 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::Worklist.96"* }
%"class.blink::Worklist.96" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::Worklist.103"* }
%"class.blink::Worklist.103" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.117", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.131", [4 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { i64 }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { float }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.140", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.149" }
%"class.WTF::Vector.149" = type { %"class.WTF::VectorBuffer.150" }
%"class.WTF::VectorBuffer.150" = type { %"class.WTF::VectorBufferBase.151" }
%"class.WTF::VectorBufferBase.151" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.165" }
%"class.WTF::VectorBuffer.165" = type { %"class.WTF::VectorBufferBase.166" }
%"class.WTF::VectorBufferBase.166" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.179" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.82"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.89"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.96"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.202" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.197 }
%class.scoped_refptr.197 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.198" = type { %"struct.std::__1::__atomic_base.199" }
%"struct.std::__1::__atomic_base.199" = type { %"struct.std::__1::__cxx_atomic_impl.200" }
%"struct.std::__1::__cxx_atomic_impl.200" = type { %"struct.std::__1::__cxx_atomic_base_impl.201" }
%"struct.std::__1::__cxx_atomic_base_impl.201" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

$_ZN5blink17FEDisplacementMapD0Ev = comdat any

$_ZNK5blink12FilterEffect19GetFilterEffectTypeEv = comdat any

$_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE = comdat any

$_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv = comdat any

$_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv = comdat any

@_ZTVN5blink17FEDisplacementMapE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffectD2Ev to i8*), i8* bitcast (void (%"class.blink::FEDisplacementMap"*)* @_ZN5blink17FEDisplacementMapD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)* @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FEDisplacementMap"*)* @_ZN5blink17FEDisplacementMap17CreateImageFilterEv to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv to i8*), i8* bitcast (i32 (%"class.blink::FilterEffect"*)* @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv to i8*), i8* bitcast (%"class.WTF::TextStream"* (%"class.blink::FEDisplacementMap"*, %"class.WTF::TextStream"*, i32)* @_ZNK5blink17FEDisplacementMap22ExternalRepresentationERN3WTF10TextStreamEi to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, i32)* @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE to i8*), i8* bitcast (i1 (%"class.blink::FilterEffect"*)* @_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv to i8*), i8* bitcast (i1 (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FEDisplacementMap"*, %"class.blink::FloatRect"*)* @_ZNK5blink17FEDisplacementMap9MapInputsERKNS_9FloatRectE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FEDisplacementMap"*, %"class.blink::FloatRect"*)* @_ZNK5blink17FEDisplacementMap9MapEffectERKNS_9FloatRectE to i8*)] }, align 8
@__const._ZN5blink17FEDisplacementMap17CreateImageFilterEv.crop_rect = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } } } } }, align 4
@.str = private unnamed_addr constant [19 x i8] c"[feDisplacementMap\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c" scale=\22\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"\22 \00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"xChannelSelector=\22\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"yChannelSelector=\22\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"\22]\0A\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"RED\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"GREEN\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"BLUE\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"ALPHA\00", align 1
@switch.table._ZNK5blink17FEDisplacementMap22ExternalRepresentationERN3WTF10TextStreamEi.11 = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)], align 8

@_ZN5blink17FEDisplacementMapC1EPNS_6FilterENS_19ChannelSelectorTypeES3_f = hidden unnamed_addr alias void (%"class.blink::FEDisplacementMap"*, %"class.blink::Filter"*, i32, i32, float), void (%"class.blink::FEDisplacementMap"*, %"class.blink::Filter"*, i32, i32, float)* @_ZN5blink17FEDisplacementMapC2EPNS_6FilterENS_19ChannelSelectorTypeES3_f

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17FEDisplacementMapC2EPNS_6FilterENS_19ChannelSelectorTypeES3_f(%"class.blink::FEDisplacementMap"*, %"class.blink::Filter"*, i32, i32, float) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"* %6, %"class.blink::Filter"* %1) #9
  %7 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17FEDisplacementMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 2
  store i32 %3, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 3
  store float %4, float* %10, align 8
  ret void
}

declare void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"*, %"class.blink::Filter"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink17FEDisplacementMap9MapEffectERKNS_9FloatRectE(%"class.blink::FEDisplacementMap"* nocapture readonly, %"class.blink::FloatRect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1
  %6 = bitcast %"class.blink::FloatSize"* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Filter"*, %"class.blink::Filter"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 3
  %11 = load float, float* %10, align 8
  %12 = tail call float @llvm.fabs.f32(float %11) #9
  %13 = fmul float %12, 5.000000e-01
  %14 = tail call float @_ZNK5blink6Filter20ApplyHorizontalScaleEf(%"class.blink::Filter"* %9, float %13) #9
  %15 = load %"class.blink::Filter"*, %"class.blink::Filter"** %8, align 8
  %16 = load float, float* %10, align 8
  %17 = tail call float @llvm.fabs.f32(float %16) #9
  %18 = fmul float %17, 5.000000e-01
  %19 = tail call float @_ZNK5blink6Filter18ApplyVerticalScaleEf(%"class.blink::Filter"* %15, float %18) #9
  %20 = insertelement <2 x float> undef, float %14, i32 0
  %21 = insertelement <2 x float> %20, float %19, i32 1
  %22 = fsub <2 x float> %4, %21
  %23 = fadd <2 x float> %7, %21
  %24 = fadd <2 x float> %21, %23
  %25 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %22, 0
  %26 = insertvalue { <2 x float>, <2 x float> } %25, <2 x float> %24, 1
  ret { <2 x float>, <2 x float> } %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare float @_ZNK5blink6Filter20ApplyHorizontalScaleEf(%"class.blink::Filter"*, float) local_unnamed_addr #1

declare float @_ZNK5blink6Filter18ApplyVerticalScaleEf(%"class.blink::Filter"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink17FEDisplacementMap9MapInputsERKNS_9FloatRectE(%"class.blink::FEDisplacementMap"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 0
  %4 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %3, i32 0) #9
  %5 = tail call { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect7MapRectERKNS_9FloatRectE(%"class.blink::FilterEffect"* %4, %"class.blink::FloatRect"* dereferenceable(16) %1) #9
  ret { <2 x float>, <2 x float> } %5
}

declare %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"*, i32) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect7MapRectERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink17FEDisplacementMap16XChannelSelectorEv(%"class.blink::FEDisplacementMap"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17FEDisplacementMap19SetXChannelSelectorENS_19ChannelSelectorTypeE(%"class.blink::FEDisplacementMap"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink17FEDisplacementMap16YChannelSelectorEv(%"class.blink::FEDisplacementMap"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17FEDisplacementMap19SetYChannelSelectorENS_19ChannelSelectorTypeE(%"class.blink::FEDisplacementMap"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink17FEDisplacementMap5ScaleEv(%"class.blink::FEDisplacementMap"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 3
  %3 = load float, float* %2, align 8
  ret float %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17FEDisplacementMap8SetScaleEf(%"class.blink::FEDisplacementMap"* nocapture, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 3
  %4 = load float, float* %3, align 8
  %5 = fcmp oeq float %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store float %1, float* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17FEDisplacementMap17CreateImageFilterEv(%class.sk_sp* noalias nocapture sret, %"class.blink::FEDisplacementMap"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %"class.absl::optional", align 4
  %8 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %1, i64 0, i32 0
  %11 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %10, i32 0) #9
  %12 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %1, i64 0, i32 0, i32 6
  %13 = load i32, i32* %12, align 4
  call void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* nonnull sret %5, %"class.blink::FilterEffect"* %11, i32 %13, i1 zeroext true) #9
  %14 = call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %10, i32 1) #9
  %15 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %14, i64 0, i32 5
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %2
  %19 = bitcast %class.sk_sp* %5 to i64*
  %20 = load i64, i64* %19, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %9, align 8
  %21 = bitcast %class.sk_sp* %0 to i64*
  store i64 %20, i64* %21, align 8
  br label %111

22:                                               ; preds = %2
  %23 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %24, align 8
  %25 = call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %10, i32 1) #9
  %26 = load i32, i32* %12, align 4
  call void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* nonnull sret %6, %"class.blink::FilterEffect"* %25, i32 %26, i1 zeroext true) #9
  %27 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %1, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, -1
  %30 = icmp ult i32 %29, 4
  %31 = select i1 %30, i32 %29, i32 2
  %32 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %1, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, -1
  %35 = icmp ult i32 %34, 4
  %36 = select i1 %35, i32 %34, i32 2
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %37) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon } } } }* @__const._ZN5blink17FEDisplacementMap17CreateImageFilterEv.crop_rect, i64 0, i32 0, i32 0, i32 0, i32 0), i64 20, i1 false)
  call void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* nonnull sret %7, %"class.blink::FilterEffect"* %10) #9
  %38 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::Filter"*, %"class.blink::Filter"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %1, i64 0, i32 3
  %41 = load float, float* %40, align 8
  %42 = call float @_ZNK5blink6Filter20ApplyHorizontalScaleEf(%"class.blink::Filter"* %39, float %41) #9
  %43 = load i8, i8* %37, align 4, !range !2
  %44 = icmp eq i8 %43, 0
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %46 = select i1 %44, %struct.SkRect* null, %struct.SkRect* %45
  %47 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  %48 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = call i8* @_Znwm(i64 88) #10, !noalias !3
  %50 = bitcast i8* %49 to %"class.cc::DisplacementMapEffectPaintFilter"*
  %51 = bitcast %class.sk_sp* %6 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !3
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %24, align 8, !noalias !3
  %53 = bitcast %class.sk_sp* %3 to i64*
  store i64 %52, i64* %53, align 8, !noalias !3
  %54 = bitcast %class.sk_sp* %5 to i64*
  %55 = load i64, i64* %54, align 8, !noalias !3
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %9, align 8, !noalias !3
  %56 = bitcast %class.sk_sp* %4 to i64*
  store i64 %55, i64* %56, align 8, !noalias !3
  call void @_ZN2cc32DisplacementMapEffectPaintFilterC1E14SkColorChannelS1_f5sk_spINS_11PaintFilterEES4_PK6SkRect(%"class.cc::DisplacementMapEffectPaintFilter"* nonnull %50, i32 %31, i32 %36, float %42, %class.sk_sp* nonnull %3, %class.sk_sp* nonnull %4, %struct.SkRect* %46) #9, !noalias !3
  %57 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %58 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %57, align 8, !noalias !3
  %59 = icmp eq %"class.cc::PaintFilter"* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %22
  %61 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel, !noalias !3
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %"class.cc::PaintFilter"* %58 to %class.SkRefCntBase*
  %66 = bitcast %"class.cc::PaintFilter"* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8, !noalias !3
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8, !noalias !3
  call void %69(%class.SkRefCntBase* nonnull %65) #9, !noalias !3
  br label %70

70:                                               ; preds = %64, %60, %22
  %71 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %72 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %71, align 8, !noalias !3
  %73 = icmp eq %"class.cc::PaintFilter"* %72, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %72, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel, !noalias !3
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %84

78:                                               ; preds = %74
  %79 = bitcast %"class.cc::PaintFilter"* %72 to %class.SkRefCntBase*
  %80 = bitcast %"class.cc::PaintFilter"* %72 to void (%class.SkRefCntBase*)***
  %81 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %80, align 8, !noalias !3
  %82 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, i64 2
  %83 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, align 8, !noalias !3
  call void %83(%class.SkRefCntBase* nonnull %79) #9, !noalias !3
  br label %84

84:                                               ; preds = %78, %74, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  %85 = bitcast %class.sk_sp* %0 to i8**
  store i8* %49, i8** %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %37) #9
  %86 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %24, align 8
  %87 = icmp eq %"class.cc::PaintFilter"* %86, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %86, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = bitcast %"class.cc::PaintFilter"* %86 to %class.SkRefCntBase*
  %94 = bitcast %"class.cc::PaintFilter"* %86 to void (%class.SkRefCntBase*)***
  %95 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, i64 2
  %97 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, align 8
  call void %97(%class.SkRefCntBase* nonnull %93) #9
  br label %98

98:                                               ; preds = %92, %88, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  %99 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %9, align 8
  %100 = icmp eq %"class.cc::PaintFilter"* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %99, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 -1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %111

105:                                              ; preds = %101
  %106 = bitcast %"class.cc::PaintFilter"* %99 to %class.SkRefCntBase*
  %107 = bitcast %"class.cc::PaintFilter"* %99 to void (%class.SkRefCntBase*)***
  %108 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %107, align 8
  %109 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, i64 2
  %110 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, align 8
  call void %110(%class.SkRefCntBase* nonnull %106) #9
  br label %111

111:                                              ; preds = %18, %98, %101, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* sret, %"class.blink::FilterEffect"*, i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* sret, %"class.blink::FilterEffect"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink17FEDisplacementMap22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FEDisplacementMap"*, %"class.WTF::TextStream"* returned dereferenceable(48), i32) unnamed_addr #0 align 2 {
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %1, i32 %2) #9
  %4 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)) #9
  %5 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 0
  %6 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"* %5, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 0) #9
  %7 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #9
  %8 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 3
  %9 = load float, float* %8, align 8
  %10 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %7, float %9) #9
  %11 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #9
  %12 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #9
  %13 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %14, 5
  br i1 %15, label %16, label %21

16:                                               ; preds = %3
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table._ZNK5blink17FEDisplacementMap22ExternalRepresentationERN3WTF10TextStreamEi.11, i64 0, i64 %17
  %19 = load i8*, i8** %18, align 8
  %20 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %12, i8* %19) #9
  br label %21

21:                                               ; preds = %3, %16
  %22 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #9
  %23 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %22, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)) #9
  %24 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %25, 5
  br i1 %26, label %27, label %32

27:                                               ; preds = %21
  %28 = sext i32 %25 to i64
  %29 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table._ZNK5blink17FEDisplacementMap22ExternalRepresentationERN3WTF10TextStreamEi.11, i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %23, i8* %30) #9
  br label %32

32:                                               ; preds = %21, %27
  %33 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)) #9
  %34 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %5, i32 0) #9
  %35 = add nsw i32 %2, 1
  %36 = bitcast %"class.blink::FilterEffect"* %34 to %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)***
  %37 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)**, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*** %36, align 8
  %38 = getelementptr inbounds %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %37, i64 6
  %39 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %38, align 8
  %40 = tail call dereferenceable(48) %"class.WTF::TextStream"* %39(%"class.blink::FilterEffect"* %34, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 %35) #9
  %41 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %5, i32 1) #9
  %42 = bitcast %"class.blink::FilterEffect"* %41 to %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)***
  %43 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)**, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %43, i64 6
  %45 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %44, align 8
  %46 = tail call dereferenceable(48) %"class.WTF::TextStream"* %45(%"class.blink::FilterEffect"* %41, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 %35) #9
  ret %"class.WTF::TextStream"* %1
}

declare void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48), i32) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"*, i8*) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"*, %"class.WTF::TextStream"* dereferenceable(48), i32) unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"*, float) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17FEDisplacementMapD0Ev(%"class.blink::FEDisplacementMap"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FEDisplacementMap", %"class.blink::FEDisplacementMap"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"* %2) #9
  ret void
}

declare void @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE(%"class.blink::FilterEffect"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv(%class.sk_sp* sret, %"class.blink::FilterEffect"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE(%"class.blink::FilterEffect"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN2cc32DisplacementMapEffectPaintFilterC1E14SkColorChannelS1_f5sk_spINS_11PaintFilterEES4_PK6SkRect(%"class.cc::DisplacementMapEffectPaintFilter"*, i32, i32, float, %class.sk_sp*, %class.sk_sp*, %struct.SkRect*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_Z10sk_make_spIN2cc32DisplacementMapEffectPaintFilterEJR14SkColorChannelS3_f5sk_spINS0_11PaintFilterEES6_P6SkRectEES4_IT_EDpOT0_: argument 0"}
!5 = distinct !{!5, !"_Z10sk_make_spIN2cc32DisplacementMapEffectPaintFilterEJR14SkColorChannelS3_f5sk_spINS0_11PaintFilterEES6_P6SkRectEES4_IT_EDpOT0_"}
