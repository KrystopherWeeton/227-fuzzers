; ModuleID = '../../third_party/blink/renderer/core/html/canvas/canvas_performance_monitor.cc'
source_filename = "../../third_party/blink/renderer/core/html/canvas/canvas_performance_monitor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.84" }
%"struct.std::__1::atomic.84" = type { %"struct.std::__1::__atomic_base.85" }
%"struct.std::__1::__atomic_base.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__cxx_atomic_impl.87" }
%"struct.std::__1::__cxx_atomic_impl.87" = type { %"struct.std::__1::__cxx_atomic_base_impl.88" }
%"struct.std::__1::__cxx_atomic_base_impl.88" = type { i32 }
%"class.blink::CanvasPerformanceMonitor" = type <{ %"class.base::sequence_manager::TaskTimeObserver", %"class.WTF::HashSet", i32, i32, i32, i8, i8, [2 x i8] }>
%"class.base::sequence_manager::TaskTimeObserver" = type { i32 (...)** }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::CanvasRenderingContext" = type <{ %"class.blink::ScriptWrappable", %"class.base::TaskObserver", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member", %"class.blink::CanvasColorParams", [4 x i8], %"class.blink::CanvasContextCreationAttributesCore", i8, [7 x i8] }>
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CanvasRenderingContextHost"* }
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr", i32 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.7", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.41", i8, i32, i32, i32, %"class.WTF::Vector", i8, i8, i64, i64, %"class.base::RepeatingCallback.63", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.79" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.7" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.32", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.15, [384 x i64], %class.sk_sp.16, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.17", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.23" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.15 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.16 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.29, %class.SkPixmap, %class.sk_sp.31 }
%class.sk_sp.29 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.30, i32, i32 }
%class.sk_sp.30 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.31 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.44, %"class.std::__1::unique_ptr.45" }
%class.scoped_refptr.44 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.51 }
%class.scoped_refptr.51 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.52", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.52" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.56*, i32, i32 }
%class.scoped_refptr.56 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", %"class.base::PlatformThreadRef", %class.scoped_refptr.58, %"struct.gpu::SyncToken", %"class.base::WeakPtr.60", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.57" }
%"class.base::RefCountedThreadSafe.57" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%class.scoped_refptr.58 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.59" }>
%"class.base::RefCountedThreadSafe.59" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.base::WeakPtr.60" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.63" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.64" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.76" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77", %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.30, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.79" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.blink::CanvasContextCreationAttributesCore" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.WTF::String", i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.WTF::StringImpl"* }
%"class.blink::Thread" = type { i32 (...)** }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.125", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.134", %"class.blink::Member.136", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.145", %"class.blink::Member.151", %"class.blink::Member.153", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.91" }
%"class.WTF::HashTable.91" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.98" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.95" }
%"class.WTF::HashSet.95" = type { %"class.WTF::HashTable.96" }
%"class.WTF::HashTable.96" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.98" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.99" }
%"class.blink::HeapHashMap.99" = type { %"class.WTF::HashMap.102" }
%"class.WTF::HashMap.102" = type { %"class.WTF::HashTable.103" }
%"class.WTF::HashTable.103" = type <{ %"struct.WTF::KeyValuePair.105"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.105" = type { i8*, %"class.blink::Member.164" }
%"class.blink::Member.164" = type { %"class.blink::MemberBase.165" }
%"class.blink::MemberBase.165" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.166" }
%"class.blink::Member.166" = type { %"class.blink::MemberBase.167" }
%"class.blink::MemberBase.167" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.106, %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.113", %"class.blink::Member.119", i32, [4 x i8], %"class.WTF::HashSet.121", i32, i32 }
%class.scoped_refptr.106 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.121" = type { %"class.WTF::HashTable.122" }
%"class.WTF::HashTable.122" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.129" }
%"class.WTF::Vector.129" = type { %"class.WTF::VectorBuffer.130" }
%"class.WTF::VectorBuffer.130" = type { %"class.WTF::VectorBufferBase.131" }
%"class.WTF::VectorBufferBase.131" = type { %"class.blink::Member.132"*, i32, i32 }
%"class.blink::Member.132" = type opaque
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.138", i32, i32 }
%"class.blink::HeapHashMap.138" = type { %"class.WTF::HashMap.141" }
%"class.WTF::HashMap.141" = type { %"class.WTF::HashTable.142" }
%"class.WTF::HashTable.142" = type <{ %"struct.WTF::KeyValuePair.144"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.144" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.153" = type { %"class.blink::MemberBase.154" }
%"class.blink::MemberBase.154" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::CanvasResourceHost" = type <{ i32 (...)**, %"class.std::__1::unique_ptr", i32, [4 x i8] }>
%"class.WTF::StringAppend.157" = type { %"class.WTF::StringAppend", %"class.WTF::String" }
%"class.WTF::StringAppend" = type { %"class.WTF::String", i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::StringAppend.155" = type { %"class.WTF::StringAppend", i8* }
%"class.WTF::StringAppend.156" = type { %"class.WTF::StringAppend.157", i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.160 }
%union.anon.160 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.196" }
%"class.WTF::StringTypeAdapter.196" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.197" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_EcvS1_Ev = comdat any

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev = comdat any

$_ZN5blink24CanvasPerformanceMonitorD2Ev = comdat any

$_ZN5blink24CanvasPerformanceMonitorD0Ev = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKjjEENS_18HashTableAddResultIS7_jEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6ExpandEPj = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE8RehashToEPjjS8_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E7WriteToEPDs = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [40 x i8] c"CanvasPerformanceMonitor::RecordMetrics\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"Blink\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c".RenderTaskDuration\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c".All\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c".Animation\00", align 1
@_ZTVN5blink24CanvasPerformanceMonitorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CanvasPerformanceMonitor"*)* @_ZN5blink24CanvasPerformanceMonitorD2Ev to i8*), i8* bitcast (void (%"class.blink::CanvasPerformanceMonitor"*)* @_ZN5blink24CanvasPerformanceMonitorD0Ev to i8*), i8* bitcast (void (%"class.blink::CanvasPerformanceMonitor"*, i64)* @_ZN5blink24CanvasPerformanceMonitor15WillProcessTaskEN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.blink::CanvasPerformanceMonitor"*, i64, i64)* @_ZN5blink24CanvasPerformanceMonitor14DidProcessTaskEN4base9TimeTicksES2_ to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [17 x i8] c".OffscreenCanvas\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c".Canvas\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c".MainThread\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c".Worker\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c".2D\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c".WebGL\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c".WebGL2\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c".WebGPU\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c".ImageBitmap\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.15 = private unnamed_addr constant [8 x i8] c".Bitmap\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c".SharedBitmap\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c".SharedImage\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c".PassThrough\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c".SwapChain\00", align 1
@.str.20 = private unnamed_addr constant [21 x i8] c".SkiaDawnSharedImage\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.23 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.24 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.25 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@switch.table._ZN5blink24CanvasPerformanceMonitor13RecordMetricsEN4base9TimeTicksES2_ = private unnamed_addr constant [9 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0)], align 8
@switch.table._ZN5blink24CanvasPerformanceMonitor13RecordMetricsEN4base9TimeTicksES2_.26 = private unnamed_addr constant [9 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24CanvasPerformanceMonitor25CurrentTaskDrawsToContextEPNS_22CanvasRenderingContextE(%"class.blink::CanvasPerformanceMonitor"*, %"class.blink::CanvasRenderingContext"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %45

7:                                                ; preds = %2
  %8 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #9
  %9 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 0
  %10 = bitcast %"class.blink::Thread"* %8 to void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)***
  %11 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)**, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %11, i64 4
  %13 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %12, align 8
  tail call void %13(%"class.blink::Thread"* %8, %"class.base::sequence_manager::TaskTimeObserver"* %9) #9
  store i8 1, i8* %4, align 4
  %14 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = urem i32 %15, 100
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 6
  %20 = zext i1 %18 to i8
  store i8 %20, i8* %19, align 1
  %21 = getelementptr inbounds %"class.blink::CanvasRenderingContext", %"class.blink::CanvasRenderingContext"* %1, i64 0, i32 4, i32 0, i32 0
  %22 = load %"class.blink::CanvasRenderingContextHost"*, %"class.blink::CanvasRenderingContextHost"** %21, align 8
  %23 = icmp eq %"class.blink::CanvasRenderingContextHost"* %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %7
  %25 = bitcast %"class.blink::CanvasRenderingContextHost"* %22 to %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)***
  %26 = load %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)**, %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)*, %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)** %26, i64 23
  %28 = load %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)*, %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)** %27, align 8
  %29 = tail call %"class.blink::ExecutionContext"* %28(%"class.blink::CanvasRenderingContextHost"* nonnull %22) #9
  %30 = icmp eq %"class.blink::ExecutionContext"* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %24
  %32 = load %"class.blink::CanvasRenderingContextHost"*, %"class.blink::CanvasRenderingContextHost"** %21, align 8
  %33 = bitcast %"class.blink::CanvasRenderingContextHost"* %32 to %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)***
  %34 = load %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)**, %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)*, %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)** %34, i64 23
  %36 = load %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)*, %"class.blink::ExecutionContext"* (%"class.blink::CanvasRenderingContextHost"*)** %35, align 8
  %37 = tail call %"class.blink::ExecutionContext"* %36(%"class.blink::CanvasRenderingContextHost"* %32) #9
  %38 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %37, i64 0, i32 18
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %31, %24, %7
  br label %42

42:                                               ; preds = %31, %41
  %43 = phi i32 [ 2, %41 ], [ 0, %31 ]
  %44 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 3
  store i32 %43, i32* %44, align 4
  br label %45

45:                                               ; preds = %42, %2
  %46 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 6
  %47 = load i8, i8* %46, align 1, !range !2
  %48 = icmp eq i8 %47, 1
  br i1 %48, label %49, label %84, !prof !3

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::CanvasRenderingContext", %"class.blink::CanvasRenderingContext"* %1, i64 0, i32 4, i32 0, i32 0
  %51 = load %"class.blink::CanvasRenderingContextHost"*, %"class.blink::CanvasRenderingContextHost"** %50, align 8
  %52 = icmp eq %"class.blink::CanvasRenderingContextHost"* %51, null
  br i1 %52, label %84, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.blink::CanvasRenderingContextHost"* %51 to %"class.blink::CanvasResourceHost"*
  %55 = tail call %"class.blink::CanvasResourceProvider"* @_ZNK5blink18CanvasResourceHost16ResourceProviderEv(%"class.blink::CanvasResourceHost"* nonnull %54) #9
  %56 = icmp eq %"class.blink::CanvasResourceProvider"* %55, null
  br i1 %56, label %84, label %57, !prof !4

57:                                               ; preds = %53
  %58 = load %"class.blink::CanvasRenderingContextHost"*, %"class.blink::CanvasRenderingContextHost"** %50, align 8
  %59 = bitcast %"class.blink::CanvasRenderingContextHost"* %58 to i1 (%"class.blink::CanvasRenderingContextHost"*)***
  %60 = load i1 (%"class.blink::CanvasRenderingContextHost"*)**, i1 (%"class.blink::CanvasRenderingContextHost"*)*** %59, align 8
  %61 = getelementptr inbounds i1 (%"class.blink::CanvasRenderingContextHost"*)*, i1 (%"class.blink::CanvasRenderingContextHost"*)** %60, i64 34
  %62 = load i1 (%"class.blink::CanvasRenderingContextHost"*)*, i1 (%"class.blink::CanvasRenderingContextHost"*)** %61, align 8
  %63 = tail call zeroext i1 %62(%"class.blink::CanvasRenderingContextHost"* %58) #9
  %64 = zext i1 %63 to i32
  %65 = bitcast %"class.blink::CanvasRenderingContext"* %1 to i32 (%"class.blink::CanvasRenderingContext"*)***
  %66 = load i32 (%"class.blink::CanvasRenderingContext"*)**, i32 (%"class.blink::CanvasRenderingContext"*)*** %65, align 8
  %67 = getelementptr inbounds i32 (%"class.blink::CanvasRenderingContext"*)*, i32 (%"class.blink::CanvasRenderingContext"*)** %66, i64 11
  %68 = load i32 (%"class.blink::CanvasRenderingContext"*)*, i32 (%"class.blink::CanvasRenderingContext"*)** %67, align 8
  %69 = tail call i32 %68(%"class.blink::CanvasRenderingContext"* %1) #9
  %70 = shl i32 %69, 1
  %71 = bitcast %"class.blink::CanvasRenderingContextHost"** %50 to %"class.blink::CanvasResourceHost"**
  %72 = load %"class.blink::CanvasResourceHost"*, %"class.blink::CanvasResourceHost"** %71, align 8
  %73 = tail call %"class.blink::CanvasResourceProvider"* @_ZNK5blink18CanvasResourceHost16ResourceProviderEv(%"class.blink::CanvasResourceHost"* %72) #9
  %74 = getelementptr inbounds %"class.blink::CanvasResourceProvider", %"class.blink::CanvasResourceProvider"* %73, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = and i32 %70, -261634
  %77 = shl i32 %75, 9
  %78 = or i32 %76, %64
  %79 = or i32 %78, %77
  %80 = or i32 %79, 131072
  %81 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81) #9
  store i32 %80, i32* %3, align 4
  %82 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 1, i32 0
  %83 = call { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKjjEENS_18HashTableAddResultIS7_jEEOT0_OT1_(%"class.WTF::HashTable"* %82, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81) #9
  br label %84

84:                                               ; preds = %53, %49, %57, %45
  ret void
}

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink24CanvasPerformanceMonitor15WillProcessTaskEN4base9TimeTicksE(%"class.blink::CanvasPerformanceMonitor"* nocapture, i64) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24CanvasPerformanceMonitor13RecordMetricsEN4base9TimeTicksES2_(%"class.blink::CanvasPerformanceMonitor"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringAppend.157", align 8
  %5 = alloca %"class.WTF::StringAppend.157", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend.155", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringAppend.156", align 8
  %13 = alloca %"class.WTF::StringAppend.157", align 8
  %14 = alloca %"class.WTF::StringAppend", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::StringAppend.156", align 8
  %18 = alloca %"class.WTF::StringAppend.157", align 8
  %19 = alloca %"class.WTF::StringAppend", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %22 = and i8 %21, 25
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24, !prof !5

24:                                               ; preds = %3
  %25 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %26 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %28 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %28, i64* %27, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %25, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %30

30:                                               ; preds = %3, %24
  %31 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %24 ]
  %32 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), %24 ]
  %33 = phi i64 [ -6148914691236517206, %3 ], [ %29, %24 ]
  %34 = sub nsw i64 %2, %1
  %35 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 1, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %837, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %35, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 1, i32 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 1, i32 0, i32 3
  %43 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %35, i64 0, i32 0
  %44 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  %45 = bitcast %"class.WTF::String"* %8 to i8*
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  %49 = bitcast %"class.WTF::StringAppend.155"* %9 to i8*
  %50 = bitcast %"class.WTF::String"* %10 to i8*
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %9, i64 0, i32 0, i32 1
  %54 = bitcast i8** %53 to i64*
  %55 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %9, i64 0, i32 1
  %56 = bitcast %"class.WTF::String"* %11 to i8*
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %58 = bitcast %"class.WTF::StringAppend.156"* %12 to i8*
  %59 = bitcast %"class.WTF::StringAppend.157"* %13 to i8*
  %60 = bitcast %"class.WTF::StringAppend"* %14 to i8*
  %61 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 1
  %63 = bitcast %"class.WTF::StringAppend.157"* %5 to i8*
  %64 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %5, i64 0, i32 0, i32 1
  %67 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %13, i64 0, i32 0, i32 1
  %68 = bitcast i8** %67 to i64*
  %69 = bitcast i8** %66 to i64*
  %70 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %13, i64 0, i32 1, i32 0, i32 0
  %71 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %5, i64 0, i32 1, i32 0, i32 0
  %72 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %73 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %75 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 3
  %79 = bitcast %"class.WTF::String"* %16 to i8*
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %81 = bitcast %"class.WTF::StringAppend.156"* %17 to i8*
  %82 = bitcast %"class.WTF::StringAppend.157"* %18 to i8*
  %83 = bitcast %"class.WTF::StringAppend"* %19 to i8*
  %84 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 1
  %86 = bitcast %"class.WTF::StringAppend.157"* %4 to i8*
  %87 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %4, i64 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %18, i64 0, i32 0, i32 1
  %91 = bitcast i8** %90 to i64*
  %92 = bitcast i8** %89 to i64*
  %93 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %18, i64 0, i32 1, i32 0, i32 0
  %94 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %4, i64 0, i32 1, i32 0, i32 0
  %95 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %96 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %98 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %101

101:                                              ; preds = %39, %834
  %102 = load i32*, i32** %40, align 8
  %103 = load i32, i32* %41, align 8
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i32, i32* %102, i64 %104
  %106 = icmp eq i32 %103, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %101, %112
  %108 = phi i32* [ %113, %112 ], [ %102, %101 ]
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, 1
  %111 = icmp ult i32 %110, 2
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = getelementptr inbounds i32, i32* %108, i64 1
  %114 = icmp eq i32* %113, %105
  br i1 %114, label %139, label %107

115:                                              ; preds = %107, %101
  %116 = phi i32* [ %102, %101 ], [ %108, %107 ]
  %117 = icmp eq i32* %105, %116
  br i1 %117, label %139, label %118

118:                                              ; preds = %115
  %119 = load i32, i32* %116, align 4
  store i32 -1, i32* %116, align 4
  %120 = load i32, i32* %42, align 8
  %121 = add i32 %120, 1
  %122 = and i32 %121, 2147483647
  %123 = and i32 %120, -2147483648
  %124 = or i32 %122, %123
  store i32 %124, i32* %42, align 8
  %125 = load i32, i32* %36, align 4
  %126 = add i32 %125, -1
  store i32 %126, i32* %36, align 4
  %127 = mul i32 %126, 6
  %128 = load i32, i32* %41, align 8
  %129 = icmp ult i32 %127, %128
  %130 = icmp ugt i32 %128, 8
  %131 = and i1 %129, %130
  br i1 %131, label %132, label %139

132:                                              ; preds = %118
  %133 = lshr i32 %128, 1
  %134 = zext i32 %133 to i64
  %135 = shl nuw nsw i64 %134, 2
  %136 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %135, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %136, i8 0, i64 %135, i1 false) #9
  %137 = bitcast i8* %136 to i32*
  %138 = call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE8RehashToEPjjS8_(%"class.WTF::HashTable"* %43, i32* %137, i32 %133, i32* null) #9
  br label %139

139:                                              ; preds = %112, %115, %118, %132
  %140 = phi i32 [ 0, %115 ], [ %119, %118 ], [ %119, %132 ], [ 0, %112 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5) #9
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  %143 = select i1 %142, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %190, label %146

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %163

153:                                              ; preds = %146
  %154 = zext i32 %152 to i33
  %155 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %154, i33 1) #9
  %156 = extractvalue { i33, i1 } %155, 1
  %157 = extractvalue { i33, i1 } %155, 0
  %158 = icmp slt i33 %157, 0
  %159 = or i1 %156, %158
  br i1 %159, label %160, label %161, !prof !3

160:                                              ; preds = %153
  call void @llvm.trap() #9
  unreachable

161:                                              ; preds = %153
  %162 = trunc i33 %157 to i32
  store i32 %162, i32* %151, align 4
  br label %163

163:                                              ; preds = %146, %161
  %164 = phi i32 [ %162, %161 ], [ %152, %146 ]
  %165 = load atomic i32, i32* %147 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  br i1 %167, label %169, label %179

169:                                              ; preds = %163
  %170 = zext i32 %164 to i33
  %171 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %170, i33 1) #9
  %172 = extractvalue { i33, i1 } %171, 1
  %173 = extractvalue { i33, i1 } %171, 0
  %174 = icmp slt i33 %173, 0
  %175 = or i1 %172, %174
  br i1 %175, label %176, label %177, !prof !3

176:                                              ; preds = %169
  call void @llvm.trap() #9
  unreachable

177:                                              ; preds = %169
  %178 = trunc i33 %173 to i32
  store i32 %178, i32* %168, align 4
  br label %179

179:                                              ; preds = %177, %163
  %180 = phi i32 [ %178, %177 ], [ %164, %163 ]
  %181 = load atomic i32, i32* %147 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %179
  %185 = add i32 %180, -1
  store i32 %185, i32* %168, align 4
  br label %186

186:                                              ; preds = %184, %179
  %187 = phi i32 [ %185, %184 ], [ %180, %179 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #9
  br label %190

190:                                              ; preds = %139, %186, %189
  store %"class.WTF::StringImpl"* %144, %"class.WTF::StringImpl"** %47, align 8
  store i8* %143, i8** %48, align 8
  %191 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %7)
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #9
  br label %207

207:                                              ; preds = %190, %203, %206
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #9
  br label %223

223:                                              ; preds = %207, %219, %222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #9
  %224 = call zeroext i1 @_ZN3WTF12IsMainThreadEv() #9
  %225 = select i1 %224, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)
  %226 = select i1 %224, i64 11, i64 7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* %225, i64 %226) #9
  %227 = lshr i32 %140, 1
  %228 = trunc i32 %227 to i8
  %229 = icmp ult i8 %228, 9
  br i1 %229, label %230, label %234

230:                                              ; preds = %223
  %231 = sext i8 %228 to i64
  %232 = getelementptr inbounds [9 x i8*], [9 x i8*]* @switch.table._ZN5blink24CanvasPerformanceMonitor13RecordMetricsEN4base9TimeTicksES2_, i64 0, i64 %231
  %233 = load i8*, i8** %232, align 8
  br label %234

234:                                              ; preds = %223, %230
  %235 = phi i8* [ %233, %230 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), %223 ]
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %282, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load atomic i32, i32* %239 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %244 = load i32, i32* %243, align 4
  br i1 %242, label %245, label %255

245:                                              ; preds = %238
  %246 = zext i32 %244 to i33
  %247 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %246, i33 1) #9
  %248 = extractvalue { i33, i1 } %247, 1
  %249 = extractvalue { i33, i1 } %247, 0
  %250 = icmp slt i33 %249, 0
  %251 = or i1 %248, %250
  br i1 %251, label %252, label %253, !prof !3

252:                                              ; preds = %245
  call void @llvm.trap() #9
  unreachable

253:                                              ; preds = %245
  %254 = trunc i33 %249 to i32
  store i32 %254, i32* %243, align 4
  br label %255

255:                                              ; preds = %238, %253
  %256 = phi i32 [ %254, %253 ], [ %244, %238 ]
  %257 = load atomic i32, i32* %239 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  br i1 %259, label %261, label %271

261:                                              ; preds = %255
  %262 = zext i32 %256 to i33
  %263 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %262, i33 1) #9
  %264 = extractvalue { i33, i1 } %263, 1
  %265 = extractvalue { i33, i1 } %263, 0
  %266 = icmp slt i33 %265, 0
  %267 = or i1 %264, %266
  br i1 %267, label %268, label %269, !prof !3

268:                                              ; preds = %261
  call void @llvm.trap() #9
  unreachable

269:                                              ; preds = %261
  %270 = trunc i33 %265 to i32
  store i32 %270, i32* %260, align 4
  br label %271

271:                                              ; preds = %269, %255
  %272 = phi i32 [ %270, %269 ], [ %256, %255 ]
  %273 = load atomic i32, i32* %239 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %278

276:                                              ; preds = %271
  %277 = add i32 %272, -1
  store i32 %277, i32* %260, align 4
  br label %278

278:                                              ; preds = %276, %271
  %279 = phi i32 [ %277, %276 ], [ %272, %271 ]
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #9
  br label %282

282:                                              ; preds = %234, %278, %281
  %283 = lshr i32 %140, 9
  %284 = trunc i32 %283 to i8
  %285 = add i8 %284, -1
  %286 = icmp ult i8 %285, 9
  br i1 %286, label %287, label %291

287:                                              ; preds = %282
  %288 = sext i8 %285 to i64
  %289 = getelementptr inbounds [9 x i8*], [9 x i8*]* @switch.table._ZN5blink24CanvasPerformanceMonitor13RecordMetricsEN4base9TimeTicksES2_.26, i64 0, i64 %288
  %290 = load i8*, i8** %289, align 8
  br label %291

291:                                              ; preds = %282, %287
  %292 = phi i8* [ %290, %287 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), %282 ]
  br i1 %237, label %327, label %293

293:                                              ; preds = %291
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %310

298:                                              ; preds = %293
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  %301 = zext i32 %300 to i33
  %302 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %301, i33 1) #9
  %303 = extractvalue { i33, i1 } %302, 1
  %304 = extractvalue { i33, i1 } %302, 0
  %305 = icmp slt i33 %304, 0
  %306 = or i1 %303, %305
  br i1 %306, label %307, label %308, !prof !3

307:                                              ; preds = %298
  call void @llvm.trap() #9
  unreachable

308:                                              ; preds = %298
  %309 = trunc i33 %304 to i32
  store i32 %309, i32* %299, align 4
  br label %310

310:                                              ; preds = %293, %308
  %311 = ptrtoint i8* %235 to i64
  store %"class.WTF::StringImpl"* %236, %"class.WTF::StringImpl"** %52, align 8
  %312 = load atomic i32, i32* %294 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %329

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  %318 = zext i32 %317 to i33
  %319 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %318, i33 1) #9
  %320 = extractvalue { i33, i1 } %319, 1
  %321 = extractvalue { i33, i1 } %319, 0
  %322 = icmp slt i33 %321, 0
  %323 = or i1 %320, %322
  br i1 %323, label %324, label %325, !prof !3

324:                                              ; preds = %315
  call void @llvm.trap() #9
  unreachable

325:                                              ; preds = %315
  %326 = trunc i33 %321 to i32
  store i32 %326, i32* %316, align 4
  br label %329

327:                                              ; preds = %291
  %328 = ptrtoint i8* %235 to i64
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %52, align 8
  store i64 %328, i64* %54, align 8
  store i8* %292, i8** %55, align 8
  br label %341

329:                                              ; preds = %325, %310
  store i64 %311, i64* %54, align 8
  store i8* %292, i8** %55, align 8
  %330 = load atomic i32, i32* %294 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  br i1 %332, label %335, label %337

335:                                              ; preds = %329
  %336 = add i32 %334, -1
  store i32 %336, i32* %333, align 4
  br label %337

337:                                              ; preds = %335, %329
  %338 = phi i32 [ %336, %335 ], [ %334, %329 ]
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %337
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #9
  br label %341

341:                                              ; preds = %327, %337, %340
  %342 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_EcvS1_Ev(%"class.WTF::StringAppend.155"* nonnull %9)
  %343 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %344 = icmp eq %"class.WTF::StringImpl"* %343, null
  br i1 %344, label %358, label %345

345:                                              ; preds = %341
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load atomic i32, i32* %346 monotonic, align 4
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 0
  %351 = load i32, i32* %350, align 4
  br i1 %349, label %352, label %354

352:                                              ; preds = %345
  %353 = add i32 %351, -1
  store i32 %353, i32* %350, align 4
  br label %354

354:                                              ; preds = %352, %345
  %355 = phi i32 [ %353, %352 ], [ %351, %345 ]
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %358

357:                                              ; preds = %354
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %343) #9
  br label %358

358:                                              ; preds = %341, %354, %357
  br i1 %237, label %372, label %359

359:                                              ; preds = %358
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load atomic i32, i32* %360 monotonic, align 4
  %362 = and i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %365 = load i32, i32* %364, align 4
  br i1 %363, label %366, label %368

366:                                              ; preds = %359
  %367 = add i32 %365, -1
  store i32 %367, i32* %364, align 4
  br label %368

368:                                              ; preds = %366, %359
  %369 = phi i32 [ %367, %366 ], [ %365, %359 ]
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %368
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #9
  br label %372

372:                                              ; preds = %358, %368, %371
  %373 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %374 = icmp eq %"class.WTF::StringImpl"* %373, null
  br i1 %374, label %388, label %375

375:                                              ; preds = %372
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %373, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = load atomic i32, i32* %376 monotonic, align 4
  %378 = and i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %373, i64 0, i32 0
  %381 = load i32, i32* %380, align 4
  br i1 %379, label %382, label %384

382:                                              ; preds = %375
  %383 = add i32 %381, -1
  store i32 %383, i32* %380, align 4
  br label %384

384:                                              ; preds = %382, %375
  %385 = phi i32 [ %383, %382 ], [ %381, %375 ]
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %387, label %388

387:                                              ; preds = %384
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %373) #9
  br label %388

388:                                              ; preds = %372, %384, %387
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %57, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #9
  %389 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %389, label %434, label %390

390:                                              ; preds = %388
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = and i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  br i1 %394, label %397, label %407

397:                                              ; preds = %390
  %398 = zext i32 %396 to i33
  %399 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %398, i33 1) #9
  %400 = extractvalue { i33, i1 } %399, 1
  %401 = extractvalue { i33, i1 } %399, 0
  %402 = icmp slt i33 %401, 0
  %403 = or i1 %400, %402
  br i1 %403, label %404, label %405, !prof !3

404:                                              ; preds = %397
  call void @llvm.trap() #9
  unreachable

405:                                              ; preds = %397
  %406 = trunc i33 %401 to i32
  store i32 %406, i32* %395, align 4
  br label %407

407:                                              ; preds = %390, %405
  %408 = phi i32 [ %406, %405 ], [ %396, %390 ]
  %409 = load atomic i32, i32* %391 monotonic, align 4
  %410 = and i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  br i1 %411, label %413, label %423

413:                                              ; preds = %407
  %414 = zext i32 %408 to i33
  %415 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %414, i33 1) #9
  %416 = extractvalue { i33, i1 } %415, 1
  %417 = extractvalue { i33, i1 } %415, 0
  %418 = icmp slt i33 %417, 0
  %419 = or i1 %416, %418
  br i1 %419, label %420, label %421, !prof !3

420:                                              ; preds = %413
  call void @llvm.trap() #9
  unreachable

421:                                              ; preds = %413
  %422 = trunc i33 %417 to i32
  store i32 %422, i32* %412, align 4
  br label %423

423:                                              ; preds = %421, %407
  %424 = phi i32 [ %422, %421 ], [ %408, %407 ]
  %425 = load atomic i32, i32* %391 monotonic, align 4
  %426 = and i32 %425, 2
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %430

428:                                              ; preds = %423
  %429 = add i32 %424, -1
  store i32 %429, i32* %412, align 4
  br label %430

430:                                              ; preds = %428, %423
  %431 = phi i32 [ %429, %428 ], [ %424, %423 ]
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %434

433:                                              ; preds = %430
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #9
  br label %434

434:                                              ; preds = %388, %430, %433
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %61, align 8
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i8** %62, align 8
  %435 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %435, label %453, label %436

436:                                              ; preds = %434
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %438 = load atomic i32, i32* %437 monotonic, align 4
  %439 = and i32 %438, 2
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %453

441:                                              ; preds = %436
  %442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 0
  %443 = load i32, i32* %442, align 4
  %444 = zext i32 %443 to i33
  %445 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %444, i33 1) #9
  %446 = extractvalue { i33, i1 } %445, 1
  %447 = extractvalue { i33, i1 } %445, 0
  %448 = icmp slt i33 %447, 0
  %449 = or i1 %446, %448
  br i1 %449, label %450, label %451, !prof !3

450:                                              ; preds = %441
  call void @llvm.trap() #9
  unreachable

451:                                              ; preds = %441
  %452 = trunc i33 %447 to i32
  store i32 %452, i32* %442, align 4
  br label %453

453:                                              ; preds = %434, %436, %451
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.157"* nonnull sret %13, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %14, %"class.WTF::StringImpl"* %342)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63)
  %454 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8, !noalias !6
  store %"class.WTF::StringImpl"* %454, %"class.WTF::StringImpl"** %65, align 8, !noalias !6
  %455 = icmp eq %"class.WTF::StringImpl"* %454, null
  br i1 %455, label %473, label %456

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %458 = load atomic i32, i32* %457 monotonic, align 4
  %459 = and i32 %458, 2
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %473

461:                                              ; preds = %456
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 0
  %463 = load i32, i32* %462, align 4
  %464 = zext i32 %463 to i33
  %465 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %464, i33 1) #9
  %466 = extractvalue { i33, i1 } %465, 1
  %467 = extractvalue { i33, i1 } %465, 0
  %468 = icmp slt i33 %467, 0
  %469 = or i1 %466, %468
  br i1 %469, label %470, label %471, !prof !3

470:                                              ; preds = %461
  call void @llvm.trap() #9
  unreachable

471:                                              ; preds = %461
  %472 = trunc i33 %467 to i32
  store i32 %472, i32* %462, align 4
  br label %473

473:                                              ; preds = %471, %456, %453
  %474 = load i64, i64* %68, align 8, !noalias !6
  store i64 %474, i64* %69, align 8, !noalias !6
  %475 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8, !noalias !6
  store %"class.WTF::StringImpl"* %475, %"class.WTF::StringImpl"** %71, align 8, !noalias !6
  %476 = icmp eq %"class.WTF::StringImpl"* %475, null
  br i1 %476, label %494, label %477

477:                                              ; preds = %473
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = load atomic i32, i32* %478 monotonic, align 4
  %480 = and i32 %479, 2
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %494

482:                                              ; preds = %477
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 0
  %484 = load i32, i32* %483, align 4
  %485 = zext i32 %484 to i33
  %486 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %485, i33 1) #9
  %487 = extractvalue { i33, i1 } %486, 1
  %488 = extractvalue { i33, i1 } %486, 0
  %489 = icmp slt i33 %488, 0
  %490 = or i1 %487, %489
  br i1 %490, label %491, label %492, !prof !3

491:                                              ; preds = %482
  call void @llvm.trap() #9
  unreachable

492:                                              ; preds = %482
  %493 = trunc i33 %488 to i32
  store i32 %493, i32* %483, align 4
  br label %494

494:                                              ; preds = %473, %477, %492
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.156"* nonnull %12, %"class.WTF::StringAppend.157"* nonnull byval(%"class.WTF::StringAppend.157") align 8 %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63)
  %495 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.156"* nonnull %12)
  store %"class.WTF::StringImpl"* %495, %"class.WTF::StringImpl"** %57, align 8
  %496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %497 = icmp eq %"class.WTF::StringImpl"* %496, null
  br i1 %497, label %511, label %498

498:                                              ; preds = %494
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = load atomic i32, i32* %499 monotonic, align 4
  %501 = and i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 0
  %504 = load i32, i32* %503, align 4
  br i1 %502, label %505, label %507

505:                                              ; preds = %498
  %506 = add i32 %504, -1
  store i32 %506, i32* %503, align 4
  br label %507

507:                                              ; preds = %505, %498
  %508 = phi i32 [ %506, %505 ], [ %504, %498 ]
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %511

510:                                              ; preds = %507
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %496) #9
  br label %511

511:                                              ; preds = %510, %507, %494
  %512 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %513 = icmp eq %"class.WTF::StringImpl"* %512, null
  br i1 %513, label %527, label %514

514:                                              ; preds = %511
  %515 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %512, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %516 = load atomic i32, i32* %515 monotonic, align 4
  %517 = and i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %512, i64 0, i32 0
  %520 = load i32, i32* %519, align 4
  br i1 %518, label %521, label %523

521:                                              ; preds = %514
  %522 = add i32 %520, -1
  store i32 %522, i32* %519, align 4
  br label %523

523:                                              ; preds = %521, %514
  %524 = phi i32 [ %522, %521 ], [ %520, %514 ]
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %526, label %527

526:                                              ; preds = %523
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %512) #9
  br label %527

527:                                              ; preds = %511, %523, %526
  %528 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %529 = icmp eq %"class.WTF::StringImpl"* %528, null
  br i1 %529, label %543, label %530

530:                                              ; preds = %527
  %531 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %532 = load atomic i32, i32* %531 monotonic, align 4
  %533 = and i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 0, i32 0
  %536 = load i32, i32* %535, align 4
  br i1 %534, label %537, label %539

537:                                              ; preds = %530
  %538 = add i32 %536, -1
  store i32 %538, i32* %535, align 4
  br label %539

539:                                              ; preds = %537, %530
  %540 = phi i32 [ %538, %537 ], [ %536, %530 ]
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %542, label %543

542:                                              ; preds = %539
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %528) #9
  br label %543

543:                                              ; preds = %542, %539, %527
  %544 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %545 = icmp eq %"class.WTF::StringImpl"* %544, null
  br i1 %545, label %559, label %546

546:                                              ; preds = %543
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %548 = load atomic i32, i32* %547 monotonic, align 4
  %549 = and i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 0
  %552 = load i32, i32* %551, align 4
  br i1 %550, label %553, label %555

553:                                              ; preds = %546
  %554 = add i32 %552, -1
  store i32 %554, i32* %551, align 4
  br label %555

555:                                              ; preds = %553, %546
  %556 = phi i32 [ %554, %553 ], [ %552, %546 ]
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %559

558:                                              ; preds = %555
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %544) #9
  br label %559

559:                                              ; preds = %543, %555, %558
  %560 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %561 = icmp eq %"class.WTF::StringImpl"* %560, null
  br i1 %561, label %575, label %562

562:                                              ; preds = %559
  %563 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %560, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %564 = load atomic i32, i32* %563 monotonic, align 4
  %565 = and i32 %564, 2
  %566 = icmp eq i32 %565, 0
  %567 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %560, i64 0, i32 0
  %568 = load i32, i32* %567, align 4
  br i1 %566, label %569, label %571

569:                                              ; preds = %562
  %570 = add i32 %568, -1
  store i32 %570, i32* %567, align 4
  br label %571

571:                                              ; preds = %569, %562
  %572 = phi i32 [ %570, %569 ], [ %568, %562 ]
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %574, label %575

574:                                              ; preds = %571
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %560) #9
  br label %575

575:                                              ; preds = %559, %571, %574
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #9
  call void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* nonnull sret %15, %"class.WTF::String"* nonnull %11) #9
  call void @_ZN4base29UmaHistogramMicrosecondsTimesERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %15, i64 %34) #9
  %576 = load i8, i8* %76, align 1
  %577 = icmp slt i8 %576, 0
  br i1 %577, label %578, label %580

578:                                              ; preds = %575
  %579 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %579) #10
  br label %580

580:                                              ; preds = %575, %578
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #9
  %581 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %582 = icmp eq %"class.WTF::StringImpl"* %581, null
  br i1 %582, label %596, label %583

583:                                              ; preds = %580
  %584 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %581, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %585 = load atomic i32, i32* %584 monotonic, align 4
  %586 = and i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %581, i64 0, i32 0
  %589 = load i32, i32* %588, align 4
  br i1 %587, label %590, label %592

590:                                              ; preds = %583
  %591 = add i32 %589, -1
  store i32 %591, i32* %588, align 4
  br label %592

592:                                              ; preds = %590, %583
  %593 = phi i32 [ %591, %590 ], [ %589, %583 ]
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %596

595:                                              ; preds = %592
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %581) #9
  br label %596

596:                                              ; preds = %580, %592, %595
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  %597 = load i32, i32* %78, align 4
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %599, label %806

599:                                              ; preds = %596
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #9
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %80, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %81) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #9
  br i1 %389, label %644, label %600

600:                                              ; preds = %599
  %601 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %602 = load atomic i32, i32* %601 monotonic, align 4
  %603 = and i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %606 = load i32, i32* %605, align 4
  br i1 %604, label %607, label %617

607:                                              ; preds = %600
  %608 = zext i32 %606 to i33
  %609 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %608, i33 1) #9
  %610 = extractvalue { i33, i1 } %609, 1
  %611 = extractvalue { i33, i1 } %609, 0
  %612 = icmp slt i33 %611, 0
  %613 = or i1 %610, %612
  br i1 %613, label %614, label %615, !prof !3

614:                                              ; preds = %607
  call void @llvm.trap() #9
  unreachable

615:                                              ; preds = %607
  %616 = trunc i33 %611 to i32
  store i32 %616, i32* %605, align 4
  br label %617

617:                                              ; preds = %600, %615
  %618 = phi i32 [ %616, %615 ], [ %606, %600 ]
  %619 = load atomic i32, i32* %601 monotonic, align 4
  %620 = and i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  br i1 %621, label %623, label %633

623:                                              ; preds = %617
  %624 = zext i32 %618 to i33
  %625 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %624, i33 1) #9
  %626 = extractvalue { i33, i1 } %625, 1
  %627 = extractvalue { i33, i1 } %625, 0
  %628 = icmp slt i33 %627, 0
  %629 = or i1 %626, %628
  br i1 %629, label %630, label %631, !prof !3

630:                                              ; preds = %623
  call void @llvm.trap() #9
  unreachable

631:                                              ; preds = %623
  %632 = trunc i33 %627 to i32
  store i32 %632, i32* %622, align 4
  br label %633

633:                                              ; preds = %631, %617
  %634 = phi i32 [ %632, %631 ], [ %618, %617 ]
  %635 = load atomic i32, i32* %601 monotonic, align 4
  %636 = and i32 %635, 2
  %637 = icmp eq i32 %636, 0
  br i1 %637, label %638, label %640

638:                                              ; preds = %633
  %639 = add i32 %634, -1
  store i32 %639, i32* %622, align 4
  br label %640

640:                                              ; preds = %638, %633
  %641 = phi i32 [ %639, %638 ], [ %634, %633 ]
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %643, label %644

643:                                              ; preds = %640
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #9
  br label %644

644:                                              ; preds = %599, %640, %643
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %84, align 8
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i8** %85, align 8
  br i1 %435, label %662, label %645

645:                                              ; preds = %644
  %646 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %647 = load atomic i32, i32* %646 monotonic, align 4
  %648 = and i32 %647, 2
  %649 = icmp eq i32 %648, 0
  br i1 %649, label %650, label %662

650:                                              ; preds = %645
  %651 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 0
  %652 = load i32, i32* %651, align 4
  %653 = zext i32 %652 to i33
  %654 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %653, i33 1) #9
  %655 = extractvalue { i33, i1 } %654, 1
  %656 = extractvalue { i33, i1 } %654, 0
  %657 = icmp slt i33 %656, 0
  %658 = or i1 %655, %657
  br i1 %658, label %659, label %660, !prof !3

659:                                              ; preds = %650
  call void @llvm.trap() #9
  unreachable

660:                                              ; preds = %650
  %661 = trunc i33 %656 to i32
  store i32 %661, i32* %651, align 4
  br label %662

662:                                              ; preds = %644, %645, %660
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.157"* nonnull sret %18, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %19, %"class.WTF::StringImpl"* %342)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86)
  %663 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8, !noalias !9
  store %"class.WTF::StringImpl"* %663, %"class.WTF::StringImpl"** %88, align 8, !noalias !9
  %664 = icmp eq %"class.WTF::StringImpl"* %663, null
  br i1 %664, label %682, label %665

665:                                              ; preds = %662
  %666 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %663, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = load atomic i32, i32* %666 monotonic, align 4
  %668 = and i32 %667, 2
  %669 = icmp eq i32 %668, 0
  br i1 %669, label %670, label %682

670:                                              ; preds = %665
  %671 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %663, i64 0, i32 0
  %672 = load i32, i32* %671, align 4
  %673 = zext i32 %672 to i33
  %674 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %673, i33 1) #9
  %675 = extractvalue { i33, i1 } %674, 1
  %676 = extractvalue { i33, i1 } %674, 0
  %677 = icmp slt i33 %676, 0
  %678 = or i1 %675, %677
  br i1 %678, label %679, label %680, !prof !3

679:                                              ; preds = %670
  call void @llvm.trap() #9
  unreachable

680:                                              ; preds = %670
  %681 = trunc i33 %676 to i32
  store i32 %681, i32* %671, align 4
  br label %682

682:                                              ; preds = %680, %665, %662
  %683 = load i64, i64* %91, align 8, !noalias !9
  store i64 %683, i64* %92, align 8, !noalias !9
  %684 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8, !noalias !9
  store %"class.WTF::StringImpl"* %684, %"class.WTF::StringImpl"** %94, align 8, !noalias !9
  %685 = icmp eq %"class.WTF::StringImpl"* %684, null
  br i1 %685, label %703, label %686

686:                                              ; preds = %682
  %687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %688 = load atomic i32, i32* %687 monotonic, align 4
  %689 = and i32 %688, 2
  %690 = icmp eq i32 %689, 0
  br i1 %690, label %691, label %703

691:                                              ; preds = %686
  %692 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 0
  %693 = load i32, i32* %692, align 4
  %694 = zext i32 %693 to i33
  %695 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %694, i33 1) #9
  %696 = extractvalue { i33, i1 } %695, 1
  %697 = extractvalue { i33, i1 } %695, 0
  %698 = icmp slt i33 %697, 0
  %699 = or i1 %696, %698
  br i1 %699, label %700, label %701, !prof !3

700:                                              ; preds = %691
  call void @llvm.trap() #9
  unreachable

701:                                              ; preds = %691
  %702 = trunc i33 %697 to i32
  store i32 %702, i32* %692, align 4
  br label %703

703:                                              ; preds = %682, %686, %701
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.156"* nonnull %17, %"class.WTF::StringAppend.157"* nonnull byval(%"class.WTF::StringAppend.157") align 8 %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86)
  %704 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.156"* nonnull %17)
  store %"class.WTF::StringImpl"* %704, %"class.WTF::StringImpl"** %80, align 8
  %705 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %706 = icmp eq %"class.WTF::StringImpl"* %705, null
  br i1 %706, label %720, label %707

707:                                              ; preds = %703
  %708 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %705, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %709 = load atomic i32, i32* %708 monotonic, align 4
  %710 = and i32 %709, 2
  %711 = icmp eq i32 %710, 0
  %712 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %705, i64 0, i32 0
  %713 = load i32, i32* %712, align 4
  br i1 %711, label %714, label %716

714:                                              ; preds = %707
  %715 = add i32 %713, -1
  store i32 %715, i32* %712, align 4
  br label %716

716:                                              ; preds = %714, %707
  %717 = phi i32 [ %715, %714 ], [ %713, %707 ]
  %718 = icmp eq i32 %717, 0
  br i1 %718, label %719, label %720

719:                                              ; preds = %716
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %705) #9
  br label %720

720:                                              ; preds = %719, %716, %703
  %721 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %722 = icmp eq %"class.WTF::StringImpl"* %721, null
  br i1 %722, label %736, label %723

723:                                              ; preds = %720
  %724 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %721, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %725 = load atomic i32, i32* %724 monotonic, align 4
  %726 = and i32 %725, 2
  %727 = icmp eq i32 %726, 0
  %728 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %721, i64 0, i32 0
  %729 = load i32, i32* %728, align 4
  br i1 %727, label %730, label %732

730:                                              ; preds = %723
  %731 = add i32 %729, -1
  store i32 %731, i32* %728, align 4
  br label %732

732:                                              ; preds = %730, %723
  %733 = phi i32 [ %731, %730 ], [ %729, %723 ]
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %735, label %736

735:                                              ; preds = %732
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %721) #9
  br label %736

736:                                              ; preds = %720, %732, %735
  %737 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %738 = icmp eq %"class.WTF::StringImpl"* %737, null
  br i1 %738, label %752, label %739

739:                                              ; preds = %736
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %741 = load atomic i32, i32* %740 monotonic, align 4
  %742 = and i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 0
  %745 = load i32, i32* %744, align 4
  br i1 %743, label %746, label %748

746:                                              ; preds = %739
  %747 = add i32 %745, -1
  store i32 %747, i32* %744, align 4
  br label %748

748:                                              ; preds = %746, %739
  %749 = phi i32 [ %747, %746 ], [ %745, %739 ]
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %737) #9
  br label %752

752:                                              ; preds = %751, %748, %736
  %753 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %754 = icmp eq %"class.WTF::StringImpl"* %753, null
  br i1 %754, label %768, label %755

755:                                              ; preds = %752
  %756 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %757 = load atomic i32, i32* %756 monotonic, align 4
  %758 = and i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 0
  %761 = load i32, i32* %760, align 4
  br i1 %759, label %762, label %764

762:                                              ; preds = %755
  %763 = add i32 %761, -1
  store i32 %763, i32* %760, align 4
  br label %764

764:                                              ; preds = %762, %755
  %765 = phi i32 [ %763, %762 ], [ %761, %755 ]
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %767, label %768

767:                                              ; preds = %764
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %753) #9
  br label %768

768:                                              ; preds = %752, %764, %767
  %769 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %770 = icmp eq %"class.WTF::StringImpl"* %769, null
  br i1 %770, label %784, label %771

771:                                              ; preds = %768
  %772 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %769, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %773 = load atomic i32, i32* %772 monotonic, align 4
  %774 = and i32 %773, 2
  %775 = icmp eq i32 %774, 0
  %776 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %769, i64 0, i32 0
  %777 = load i32, i32* %776, align 4
  br i1 %775, label %778, label %780

778:                                              ; preds = %771
  %779 = add i32 %777, -1
  store i32 %779, i32* %776, align 4
  br label %780

780:                                              ; preds = %778, %771
  %781 = phi i32 [ %779, %778 ], [ %777, %771 ]
  %782 = icmp eq i32 %781, 0
  br i1 %782, label %783, label %784

783:                                              ; preds = %780
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %769) #9
  br label %784

784:                                              ; preds = %768, %780, %783
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #9
  call void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* nonnull sret %20, %"class.WTF::String"* nonnull %16) #9
  call void @_ZN4base29UmaHistogramMicrosecondsTimesERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %20, i64 %34) #9
  %785 = load i8, i8* %99, align 1
  %786 = icmp slt i8 %785, 0
  br i1 %786, label %787, label %789

787:                                              ; preds = %784
  %788 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %788) #10
  br label %789

789:                                              ; preds = %784, %787
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #9
  %790 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %791 = icmp eq %"class.WTF::StringImpl"* %790, null
  br i1 %791, label %805, label %792

792:                                              ; preds = %789
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %790, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %794 = load atomic i32, i32* %793 monotonic, align 4
  %795 = and i32 %794, 2
  %796 = icmp eq i32 %795, 0
  %797 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %790, i64 0, i32 0
  %798 = load i32, i32* %797, align 4
  br i1 %796, label %799, label %801

799:                                              ; preds = %792
  %800 = add i32 %798, -1
  store i32 %800, i32* %797, align 4
  br label %801

801:                                              ; preds = %799, %792
  %802 = phi i32 [ %800, %799 ], [ %798, %792 ]
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %804, label %805

804:                                              ; preds = %801
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %790) #9
  br label %805

805:                                              ; preds = %789, %801, %804
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #9
  br label %806

806:                                              ; preds = %805, %596
  br i1 %435, label %820, label %807

807:                                              ; preds = %806
  %808 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %809 = load atomic i32, i32* %808 monotonic, align 4
  %810 = and i32 %809, 2
  %811 = icmp eq i32 %810, 0
  %812 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 0
  %813 = load i32, i32* %812, align 4
  br i1 %811, label %814, label %816

814:                                              ; preds = %807
  %815 = add i32 %813, -1
  store i32 %815, i32* %812, align 4
  br label %816

816:                                              ; preds = %814, %807
  %817 = phi i32 [ %815, %814 ], [ %813, %807 ]
  %818 = icmp eq i32 %817, 0
  br i1 %818, label %819, label %820

819:                                              ; preds = %816
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %342) #9
  br label %820

820:                                              ; preds = %806, %816, %819
  br i1 %389, label %834, label %821

821:                                              ; preds = %820
  %822 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %823 = load atomic i32, i32* %822 monotonic, align 4
  %824 = and i32 %823, 2
  %825 = icmp eq i32 %824, 0
  %826 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %827 = load i32, i32* %826, align 4
  br i1 %825, label %828, label %830

828:                                              ; preds = %821
  %829 = add i32 %827, -1
  store i32 %829, i32* %826, align 4
  br label %830

830:                                              ; preds = %828, %821
  %831 = phi i32 [ %829, %828 ], [ %827, %821 ]
  %832 = icmp eq i32 %831, 0
  br i1 %832, label %833, label %834

833:                                              ; preds = %830
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #9
  br label %834

834:                                              ; preds = %820, %830, %833
  %835 = load i32, i32* %36, align 4
  %836 = icmp eq i32 %835, 0
  br i1 %836, label %837, label %101

837:                                              ; preds = %834, %30
  %838 = icmp eq i8* %31, null
  br i1 %838, label %843, label %839

839:                                              ; preds = %837
  %840 = load i8, i8* %31, align 1
  %841 = icmp eq i8 %840, 0
  br i1 %841, label %843, label %842

842:                                              ; preds = %839
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %31, i8* %32, i64 %33) #9
  br label %843

843:                                              ; preds = %837, %839, %842
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.197"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #9
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %6, i8* %16) #9
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #9
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.197"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #9
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %5, i8* %45) #9
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.196"* nonnull %46, i8* %25) #9
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.197"* nonnull %5, i8* %49) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #9
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #9
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !3

65:                                               ; preds = %58
  call void @llvm.trap() #9
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #9
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #9
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #9
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.197"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #9
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %3, i8* %105) #9
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.196"* nonnull %106, i16* %85) #9
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.197"* nonnull %3, i16* %109) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #9
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #9
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !3

125:                                              ; preds = %118
  call void @llvm.trap() #9
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #9
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #9
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_EcvS1_Ev(%"class.WTF::StringAppend.155"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.197"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #9
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %3, i8* %8) #9
  %9 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.197"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #9
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %2, i8* %16) #9
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E6lengthEv(%"class.WTF::StringAppend.155"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #9
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E7WriteToEPh(%"class.WTF::StringAppend.155"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #9
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %34
  call void @llvm.trap() #9
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E6lengthEv(%"class.WTF::StringAppend.155"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #9
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E7WriteToEPDs(%"class.WTF::StringAppend.155"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #9
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %70
  call void @llvm.trap() #9
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #9
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #9
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.157"* noalias sret, %"class.WTF::StringAppend"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #9
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #9
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #9
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %34
  tail call void @llvm.trap() #9
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.157"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.157"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #9
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.156"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = bitcast %"class.WTF::StringTypeAdapter.197"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false) #9
  %10 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %5, i8* %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  %17 = select i1 %16, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %15
  %18 = bitcast %"class.WTF::StringTypeAdapter.197"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false) #9
  %20 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %4, i8* %20) #9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9
  br i1 %24, label %25, label %26

25:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  br label %75

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %12, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %12
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  br i1 %32, label %75, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.156"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #9
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter.197"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false) #9
  %40 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %3, i8* %40) #9
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.157"* %38, i8* %37) #9
  %41 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.157"* %38) #9
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %37, i64 %42
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.197"* nonnull %3, i8* %43) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #9
  %44 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %44, label %117, label %45

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %62

52:                                               ; preds = %45
  %53 = zext i32 %51 to i33
  %54 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #9
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !3

59:                                               ; preds = %52
  call void @llvm.trap() #9
  unreachable

60:                                               ; preds = %52
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %50, align 4
  br label %62

62:                                               ; preds = %45, %60
  %63 = phi i32 [ %61, %60 ], [ %51, %45 ]
  %64 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %65 = load atomic i32, i32* %46 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %70 = add i32 %63, -1
  store i32 %70, i32* %69, align 4
  br label %71

71:                                               ; preds = %68, %62
  %72 = phi i32 [ %70, %68 ], [ %63, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %117

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #9
  br label %117

75:                                               ; preds = %26, %25
  %76 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %77 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.156"* %0)
  %78 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %77, i16** nonnull dereferenceable(8) %7) #9
  %79 = load i16*, i16** %7, align 8
  %80 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %0, i64 0, i32 0
  %81 = bitcast %"class.WTF::StringTypeAdapter.197"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false) #9
  %82 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %2, i8* %82) #9
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.157"* %80, i16* %79) #9
  %83 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.157"* %80) #9
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i16, i16* %79, i64 %84
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.197"* nonnull %2, i16* %85) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #9
  %86 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %86, label %117, label %87

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %104

94:                                               ; preds = %87
  %95 = zext i32 %93 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #9
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !3

101:                                              ; preds = %94
  call void @llvm.trap() #9
  unreachable

102:                                              ; preds = %94
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %92, align 4
  br label %104

104:                                              ; preds = %87, %102
  %105 = phi i32 [ %103, %102 ], [ %93, %87 ]
  %106 = ptrtoint %"class.WTF::StringImpl"* %78 to i64
  %107 = load atomic i32, i32* %88 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %112 = add i32 %105, -1
  store i32 %112, i32* %111, align 4
  br label %113

113:                                              ; preds = %110, %104
  %114 = phi i32 [ %112, %110 ], [ %105, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #9
  br label %117

117:                                              ; preds = %116, %113, %75, %74, %71, %33
  %118 = phi i8* [ %34, %33 ], [ %34, %71 ], [ %34, %74 ], [ %76, %75 ], [ %76, %113 ], [ %76, %116 ]
  %119 = phi i64 [ 0, %33 ], [ %64, %71 ], [ %64, %74 ], [ 0, %75 ], [ %106, %113 ], [ %106, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #9
  %120 = inttoptr i64 %119 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %120
}

declare void @_ZN4base29UmaHistogramMicrosecondsTimesERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #1

declare void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24CanvasPerformanceMonitor14DidProcessTaskEN4base9TimeTicksES2_(%"class.blink::CanvasPerformanceMonitor"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #9
  %5 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 0
  %6 = bitcast %"class.blink::Thread"* %4 to void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)***
  %7 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)**, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %7, i64 5
  %9 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %8, align 8
  tail call void %9(%"class.blink::Thread"* %4, %"class.base::sequence_manager::TaskTimeObserver"* %5) #9
  %10 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 6
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  tail call void @_ZN5blink24CanvasPerformanceMonitor13RecordMetricsEN4base9TimeTicksES2_(%"class.blink::CanvasPerformanceMonitor"* %0, i64 %1, i64 %2)
  br label %14

14:                                               ; preds = %3, %13
  %15 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 5
  store i8 0, i8* %15, align 4
  %16 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 2
  store i32 0, i32* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24CanvasPerformanceMonitor15ResetForTestingEv(%"class.blink::CanvasPerformanceMonitor"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #9
  %7 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 0
  %8 = bitcast %"class.blink::Thread"* %6 to void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)***
  %9 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)**, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %9, i64 5
  %11 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %10, align 8
  tail call void %11(%"class.blink::Thread"* %6, %"class.base::sequence_manager::TaskTimeObserver"* %7) #9
  br label %12

12:                                               ; preds = %1, %5
  store i8 0, i8* %2, align 4
  %13 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 2
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 1, i32 0, i32 1
  %20 = bitcast i32* %16 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #9
  %21 = bitcast %"class.WTF::HashSet"* %14 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store i32 0, i32* %19, align 8
  %22 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 1, i32 0, i32 2
  store i32 0, i32* %22, align 4
  br label %23

23:                                               ; preds = %12, %18
  %24 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 3
  store i32 2, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 4
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 6
  store i8 0, i8* %26, align 1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24CanvasPerformanceMonitorD2Ev(%"class.blink::CanvasPerformanceMonitor"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24CanvasPerformanceMonitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %8, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast i32* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %7) #9
  store i32* null, i32** %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24CanvasPerformanceMonitorD0Ev(%"class.blink::CanvasPerformanceMonitor"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24CanvasPerformanceMonitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CanvasPerformanceMonitor", %"class.blink::CanvasPerformanceMonitor"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %8, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast i32* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.blink::CanvasPerformanceMonitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  ret void
}

declare %"class.blink::CanvasResourceProvider"* @_ZNK5blink18CanvasResourceHost16ResourceProviderEv(%"class.blink::CanvasResourceHost"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKjjEENS_18HashTableAddResultIS7_jEEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %11, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %75, label %35

35:                                               ; preds = %10
  %36 = xor i32 %29, -1
  %37 = lshr i32 %27, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %35, %56
  %50 = phi i32 [ %33, %35 ], [ %64, %56 ]
  %51 = phi i32* [ %32, %35 ], [ %63, %56 ]
  %52 = phi i32* [ null, %35 ], [ %58, %56 ]
  %53 = phi i64 [ %31, %35 ], [ %62, %56 ]
  %54 = phi i64 [ 0, %35 ], [ %60, %56 ]
  %55 = icmp eq i32 %50, %16
  br i1 %55, label %89, label %56

56:                                               ; preds = %49
  %57 = icmp eq i32 %50, -1
  %58 = select i1 %57, i32* %51, i32* %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %48, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %15
  %63 = getelementptr inbounds i32, i32* %11, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %56
  %67 = icmp eq i32* %58, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %66
  store i32 0, i32* %58, align 4
  %69 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, 2147483647
  %72 = and i32 %71, 2147483647
  %73 = and i32 %70, -2147483648
  %74 = or i32 %72, %73
  store i32 %74, i32* %69, align 8
  br label %75

75:                                               ; preds = %10, %66, %68
  %76 = phi i32* [ %58, %68 ], [ %63, %66 ], [ %32, %10 ]
  %77 = load i32, i32* %2, align 4
  store i32 %77, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, %80
  %84 = shl i32 %83, 1
  %85 = load i32, i32* %12, align 8
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %75
  %88 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable"* %0, i32* %76)
  br label %89

89:                                               ; preds = %49, %75, %87
  %90 = phi i8 [ 1, %75 ], [ 1, %87 ], [ 0, %49 ]
  %91 = phi i32* [ %76, %75 ], [ %88, %87 ], [ %51, %49 ]
  %92 = insertvalue { i32*, i8 } undef, i32* %91, 0
  %93 = insertvalue { i32*, i8 } %92, i8 %90, 1
  ret { i32*, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to i32*
  %37 = call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE8RehashToEPjjS8_(%"class.WTF::HashTable"* %0, i32* %36, i32 %32, i32* %1) #9
  ret i32* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE8RehashToEPjjS8_(%"class.WTF::HashTable"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %112
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %113, %18 ]
  %23 = phi i32* [ null, %10 ], [ %116, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #9
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %112
  %32 = phi i64 [ %17, %13 ], [ %113, %112 ]
  %33 = phi i32 [ %7, %13 ], [ %114, %112 ]
  %34 = phi i32* [ %16, %13 ], [ %115, %112 ]
  %35 = phi i32* [ null, %13 ], [ %116, %112 ]
  %36 = phi i32 [ 0, %13 ], [ %117, %112 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %112, label %42

42:                                               ; preds = %31
  %43 = shl i32 %39, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %39, %44
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %55, %14
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %1, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = load i32, i32* %58, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %42
  %63 = xor i32 %55, -1
  %64 = lshr i32 %53, 23
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 12
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 7
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 2
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 20
  %73 = xor i32 %72, %71
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  br label %85

76:                                               ; preds = %92
  %77 = ptrtoint i32* %99 to i64
  %78 = inttoptr i64 %94 to i32*
  br label %79

79:                                               ; preds = %76, %42
  %80 = phi i64 [ %77, %76 ], [ %59, %42 ]
  %81 = phi i32* [ %78, %76 ], [ null, %42 ]
  %82 = icmp eq i32* %81, null
  %83 = ptrtoint i32* %81 to i64
  %84 = select i1 %82, i64 %80, i64 %83
  br label %103

85:                                               ; preds = %92, %62
  %86 = phi i64 [ 0, %62 ], [ %94, %92 ]
  %87 = phi i32 [ %60, %62 ], [ %101, %92 ]
  %88 = phi i64 [ %59, %62 ], [ %100, %92 ]
  %89 = phi i64 [ %57, %62 ], [ %98, %92 ]
  %90 = phi i64 [ 0, %62 ], [ %96, %92 ]
  %91 = icmp eq i32 %87, %39
  br i1 %91, label %103, label %92

92:                                               ; preds = %85
  %93 = icmp eq i32 %87, -1
  %94 = select i1 %93, i64 %88, i64 %86
  %95 = icmp eq i64 %90, 0
  %96 = select i1 %95, i64 %75, i64 %90
  %97 = add i64 %96, %89
  %98 = and i64 %97, %15
  %99 = getelementptr inbounds i32, i32* %1, i64 %98
  %100 = ptrtoint i32* %99 to i64
  %101 = load i32, i32* %99, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %76, label %85

103:                                              ; preds = %85, %79
  %104 = phi i64 [ %84, %79 ], [ %88, %85 ]
  %105 = inttoptr i64 %104 to i32*
  store i32 %39, i32* %105, align 4
  %106 = load i32*, i32** %9, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %37
  %108 = icmp eq i32* %107, %3
  %109 = select i1 %108, i32* %105, i32* %35
  %110 = load i32, i32* %6, align 8
  %111 = ptrtoint i32* %106 to i64
  br label %112

112:                                              ; preds = %31, %103
  %113 = phi i64 [ %32, %31 ], [ %111, %103 ]
  %114 = phi i32 [ %33, %31 ], [ %110, %103 ]
  %115 = phi i32* [ %34, %31 ], [ %106, %103 ]
  %116 = phi i32* [ %35, %31 ], [ %109, %103 ]
  %117 = add i32 %36, 1
  %118 = icmp eq i32 %117, %114
  br i1 %118, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.197"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.197", %"class.WTF::StringTypeAdapter.197"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.197"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %4, i8* %21) #9
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %46, i8* %47) #9
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"*, i8*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.196"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.197"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.196"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.197"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E6lengthEv(%"class.WTF::StringAppend.155"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.197"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.197", %"class.WTF::StringTypeAdapter.197"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.197"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E7WriteToEPh(%"class.WTF::StringAppend.155"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.197"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.197"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #9
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  %30 = bitcast %"class.WTF::StringTypeAdapter.197"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false) #9
  %32 = load i8*, i8** %31, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %4, i8* %32) #9
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.196"* nonnull %33, i8* %1) #9
  %34 = load i32, i32* %13, align 8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.197"* nonnull %4, i8* %36) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  %37 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %6) #9
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.197"* nonnull %5, i8* %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E7WriteToEPDs(%"class.WTF::StringAppend.155"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.197"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.197"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #9
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  %30 = bitcast %"class.WTF::StringTypeAdapter.197"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.WTF::StringAppend.155", %"class.WTF::StringAppend.155"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false) #9
  %32 = load i8*, i8** %31, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %4, i8* %32) #9
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.196"* nonnull %33, i16* %1) #9
  %34 = load i32, i32* %13, align 8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.197"* nonnull %4, i16* %36) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  %37 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %6) #9
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i16, i16* %1, i64 %38
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.197"* nonnull %5, i16* %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.157"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #9
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #9
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #9
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %37
  tail call void @llvm.trap() #9
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #9
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.156"*, %"class.WTF::StringAppend.157"* byval(%"class.WTF::StringAppend.157") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #9
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #9
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %1, i64 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %1, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #9
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  tail call void @llvm.trap() #9
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %25
  %53 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %0, i64 0, i32 1
  store i8* %2, i8** %53, align 8
  br label %67

54:                                               ; preds = %35, %50
  %55 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %0, i64 0, i32 1
  store i8* %2, i8** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #9
  br label %67

67:                                               ; preds = %52, %66, %63
  br i1 %7, label %81, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #9
  br label %81

81:                                               ; preds = %67, %77, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.156"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.197"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.197", %"class.WTF::StringTypeAdapter.197"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.156", %"class.WTF::StringAppend.156"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.197"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.157"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.157"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.157"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %8) #9
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %8) #9
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #9
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %26, i8* %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #9
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.157"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #9
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.197"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #9
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %4, i8* %48) #9
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.196"* nonnull %49, i8* %1) #9
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.197"* nonnull %4, i8* %52) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %6) #9
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.196"* nonnull %53, i8* %56) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.157"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.197", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #9
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.197"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.WTF::StringAppend.157", %"class.WTF::StringAppend.157"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #9
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.197"* nonnull %4, i8* %48) #9
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.196"* nonnull %49, i16* %1) #9
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.197"* nonnull %4, i16* %52) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %6) #9
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.196"* nonnull %53, i16* %56) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1073205, i32 2146410443}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
