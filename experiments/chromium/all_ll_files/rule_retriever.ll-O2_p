; ModuleID = '../../third_party/libaddressinput/src/cpp/src/rule_retriever.cc'
source_filename = "../../third_party/libaddressinput/src/cpp/src/rule_retriever.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.i18n::addressinput::RuleRetriever" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.i18n::addressinput::Retriever"* }
%"class.i18n::addressinput::Retriever" = type { %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.i18n::addressinput::Source"* }
%"class.i18n::addressinput::Source" = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.i18n::addressinput::ValidatingStorage"* }
%"class.i18n::addressinput::ValidatingStorage" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.i18n::addressinput::Callback" = type { i32 (...)** }
%"class.i18n::addressinput::Callback.19" = type { i32 (...)** }
%"class.i18n::addressinput::(anonymous namespace)::Helper" = type { %"class.i18n::addressinput::Callback"*, %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.i18n::addressinput::Callback.19"* }
%"class.i18n::addressinput::Rule" = type { %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.28", %"class.std::__1::vector.35", %"class.std::__1::vector.35", %"class.std::__1::unique_ptr.42", %"class.std::__1::basic_string", i32, i32, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"*, %"class.std::__1::__compressed_pair.23" }
%"class.i18n::addressinput::FormatElement" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.i18n::addressinput::FormatElement"* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i32*, i32*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i32* }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.i18n::addressinput::RE2ptr"* }
%"struct.i18n::addressinput::RE2ptr" = type opaque
%"class.i18n::addressinput::(anonymous namespace)::CallbackImpl" = type { %"class.i18n::addressinput::Callback.19", %"class.i18n::addressinput::(anonymous namespace)::Helper"*, { i64, i64 } }

$_ZN4i18n12addressinput8CallbackIRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_ED2Ev = comdat any

@_ZTVN4i18n12addressinput12_GLOBAL__N_112CallbackImplINS1_6HelperERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_EE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.i18n::addressinput::Callback.19"*)* @_ZN4i18n12addressinput8CallbackIRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_ED2Ev to i8*), i8* bitcast (void (%"class.i18n::addressinput::(anonymous namespace)::CallbackImpl"*)* @_ZN4i18n12addressinput12_GLOBAL__N_112CallbackImplINS1_6HelperERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_ED0Ev to i8*), i8* bitcast (void (%"class.i18n::addressinput::(anonymous namespace)::CallbackImpl"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZNK4i18n12addressinput12_GLOBAL__N_112CallbackImplINS1_6HelperERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_EclEbSC_SC_ to i8*)] }, align 8

@_ZN4i18n12addressinput13RuleRetrieverC1EPKNS0_9RetrieverE = hidden unnamed_addr alias void (%"class.i18n::addressinput::RuleRetriever"*, %"class.i18n::addressinput::Retriever"*), void (%"class.i18n::addressinput::RuleRetriever"*, %"class.i18n::addressinput::Retriever"*)* @_ZN4i18n12addressinput13RuleRetrieverC2EPKNS0_9RetrieverE
@_ZN4i18n12addressinput13RuleRetrieverD1Ev = hidden unnamed_addr alias void (%"class.i18n::addressinput::RuleRetriever"*), void (%"class.i18n::addressinput::RuleRetriever"*)* @_ZN4i18n12addressinput13RuleRetrieverD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4i18n12addressinput13RuleRetrieverC2EPKNS0_9RetrieverE(%"class.i18n::addressinput::RuleRetriever"* nocapture, %"class.i18n::addressinput::Retriever"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.i18n::addressinput::Retriever"* %1 to i64
  %4 = bitcast %"class.i18n::addressinput::RuleRetriever"* %0 to i64*
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12addressinput13RuleRetrieverD2Ev(%"class.i18n::addressinput::RuleRetriever"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.i18n::addressinput::RuleRetriever", %"class.i18n::addressinput::RuleRetriever"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.i18n::addressinput::Retriever"*, %"class.i18n::addressinput::Retriever"** %2, align 8
  store %"class.i18n::addressinput::Retriever"* null, %"class.i18n::addressinput::Retriever"** %2, align 8
  %4 = icmp eq %"class.i18n::addressinput::Retriever"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4i18n12addressinput9RetrieverD1Ev(%"class.i18n::addressinput::Retriever"* nonnull %3) #7
  %6 = bitcast %"class.i18n::addressinput::Retriever"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4i18n12addressinput13RuleRetriever12RetrieveRuleERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS0_8CallbackISA_RKNS0_4RuleEEE(%"class.i18n::addressinput::RuleRetriever"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), %"class.i18n::addressinput::Callback"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = tail call i8* @_Znwm(i64 16) #8
  %5 = getelementptr inbounds %"class.i18n::addressinput::RuleRetriever", %"class.i18n::addressinput::RuleRetriever"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.i18n::addressinput::Retriever"*, %"class.i18n::addressinput::Retriever"** %5, align 8
  %7 = bitcast i8* %4 to %"class.i18n::addressinput::Callback"**
  store %"class.i18n::addressinput::Callback"* %2, %"class.i18n::addressinput::Callback"** %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 8
  %9 = tail call i8* @_Znwm(i64 32) #8
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4i18n12addressinput12_GLOBAL__N_112CallbackImplINS1_6HelperERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_EE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i8**
  store i8* %4, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.i18n::addressinput::(anonymous namespace)::Helper"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN4i18n12addressinput12_GLOBAL__N_16Helper15OnDataRetrievedEbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_ to i64), i64 0>, <2 x i64>* %14, align 8
  %15 = ptrtoint i8* %9 to i64
  %16 = bitcast i8* %8 to i64*
  store i64 %15, i64* %16, align 8
  %17 = bitcast i8* %9 to %"class.i18n::addressinput::Callback.19"*
  tail call void @_ZNK4i18n12addressinput9Retriever8RetrieveERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS0_8CallbackISA_SA_EE(%"class.i18n::addressinput::Retriever"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.i18n::addressinput::Callback.19"* nonnull dereferenceable(8) %17) #7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4i18n12addressinput12_GLOBAL__N_16Helper15OnDataRetrievedEbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_(%"class.i18n::addressinput::(anonymous namespace)::Helper"*, i1 zeroext, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) #1 align 2 {
  %5 = alloca %"class.i18n::addressinput::Rule", align 8
  %6 = bitcast %"class.i18n::addressinput::Rule"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 288, i1 false)
  call void @_ZN4i18n12addressinput4RuleC1Ev(%"class.i18n::addressinput::Rule"* nonnull %5) #7
  br i1 %1, label %14, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.i18n::addressinput::(anonymous namespace)::Helper", %"class.i18n::addressinput::(anonymous namespace)::Helper"* %0, i64 0, i32 0
  %9 = load %"class.i18n::addressinput::Callback"*, %"class.i18n::addressinput::Callback"** %8, align 8
  %10 = bitcast %"class.i18n::addressinput::Callback"* %9 to void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)***
  %11 = load void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)**, void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)*, void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)** %11, i64 2
  %13 = load void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)*, void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)** %12, align 8
  call void %13(%"class.i18n::addressinput::Callback"* %9, i1 zeroext false, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.i18n::addressinput::Rule"* nonnull dereferenceable(288) %5) #7
  br label %22

14:                                               ; preds = %4
  %15 = call zeroext i1 @_ZN4i18n12addressinput4Rule19ParseSerializedRuleERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::addressinput::Rule"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %3) #7
  %16 = getelementptr inbounds %"class.i18n::addressinput::(anonymous namespace)::Helper", %"class.i18n::addressinput::(anonymous namespace)::Helper"* %0, i64 0, i32 0
  %17 = load %"class.i18n::addressinput::Callback"*, %"class.i18n::addressinput::Callback"** %16, align 8
  %18 = bitcast %"class.i18n::addressinput::Callback"* %17 to void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)***
  %19 = load void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)**, void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)*, void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)** %19, i64 2
  %21 = load void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)*, void (%"class.i18n::addressinput::Callback"*, i1, %"class.std::__1::basic_string"*, %"class.i18n::addressinput::Rule"*)** %20, align 8
  call void %21(%"class.i18n::addressinput::Callback"* %17, i1 zeroext %15, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.i18n::addressinput::Rule"* nonnull dereferenceable(288) %5) #7
  br label %22

22:                                               ; preds = %14, %7
  %23 = icmp eq %"class.i18n::addressinput::(anonymous namespace)::Helper"* %0, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.i18n::addressinput::(anonymous namespace)::Helper", %"class.i18n::addressinput::(anonymous namespace)::Helper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.i18n::addressinput::Callback.19"*, %"class.i18n::addressinput::Callback.19"** %25, align 8
  store %"class.i18n::addressinput::Callback.19"* null, %"class.i18n::addressinput::Callback.19"** %25, align 8
  %27 = icmp eq %"class.i18n::addressinput::Callback.19"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.i18n::addressinput::Callback.19"* %26 to void (%"class.i18n::addressinput::Callback.19"*)***
  %30 = load void (%"class.i18n::addressinput::Callback.19"*)**, void (%"class.i18n::addressinput::Callback.19"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.i18n::addressinput::Callback.19"*)*, void (%"class.i18n::addressinput::Callback.19"*)** %30, i64 1
  %32 = load void (%"class.i18n::addressinput::Callback.19"*)*, void (%"class.i18n::addressinput::Callback.19"*)** %31, align 8
  call void %32(%"class.i18n::addressinput::Callback.19"* nonnull %26) #7
  br label %33

33:                                               ; preds = %24, %28
  %34 = bitcast %"class.i18n::addressinput::(anonymous namespace)::Helper"* %0 to i8*
  call void @_ZdlPv(i8* %34) #8
  br label %35

35:                                               ; preds = %33, %22
  call void @_ZN4i18n12addressinput4RuleD1Ev(%"class.i18n::addressinput::Rule"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %6) #7
  ret void
}

declare void @_ZNK4i18n12addressinput9Retriever8RetrieveERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS0_8CallbackISA_SA_EE(%"class.i18n::addressinput::Retriever"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.i18n::addressinput::Callback.19"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4i18n12addressinput12_GLOBAL__N_112CallbackImplINS1_6HelperERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_ED0Ev(%"class.i18n::addressinput::(anonymous namespace)::CallbackImpl"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.i18n::addressinput::(anonymous namespace)::CallbackImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK4i18n12addressinput12_GLOBAL__N_112CallbackImplINS1_6HelperERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_EclEbSC_SC_(%"class.i18n::addressinput::(anonymous namespace)::CallbackImpl"* nocapture readonly, i1 zeroext, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.i18n::addressinput::(anonymous namespace)::CallbackImpl", %"class.i18n::addressinput::(anonymous namespace)::CallbackImpl"* %0, i64 0, i32 1
  %6 = bitcast %"class.i18n::addressinput::(anonymous namespace)::Helper"** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.i18n::addressinput::(anonymous namespace)::CallbackImpl", %"class.i18n::addressinput::(anonymous namespace)::CallbackImpl"* %0, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.i18n::addressinput::(anonymous namespace)::CallbackImpl", %"class.i18n::addressinput::(anonymous namespace)::CallbackImpl"* %0, i64 0, i32 2, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 %11
  %13 = bitcast i8* %12 to %"class.i18n::addressinput::(anonymous namespace)::Helper"*
  %14 = and i64 %9, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %4
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %9, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.i18n::addressinput::(anonymous namespace)::Helper"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**
  %22 = load void (%"class.i18n::addressinput::(anonymous namespace)::Helper"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.i18n::addressinput::(anonymous namespace)::Helper"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %21, align 8
  br label %25

23:                                               ; preds = %4
  %24 = inttoptr i64 %9 to void (%"class.i18n::addressinput::(anonymous namespace)::Helper"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi void (%"class.i18n::addressinput::(anonymous namespace)::Helper"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.i18n::addressinput::(anonymous namespace)::Helper"* %13, i1 zeroext %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4i18n12addressinput8CallbackIRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_ED2Ev(%"class.i18n::addressinput::Callback.19"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN4i18n12addressinput4RuleC1Ev(%"class.i18n::addressinput::Rule"*) unnamed_addr #3

declare zeroext i1 @_ZN4i18n12addressinput4Rule19ParseSerializedRuleERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::addressinput::Rule"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4i18n12addressinput4RuleD1Ev(%"class.i18n::addressinput::Rule"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind
declare void @_ZN4i18n12addressinput9RetrieverD1Ev(%"class.i18n::addressinput::Retriever"*) unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
