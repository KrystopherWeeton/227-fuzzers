; ModuleID = '../../third_party/blink/renderer/core/layout/ng/inline/ng_fragment_item.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/inline/ng_fragment_item.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.1631, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2013 }
%class.scoped_refptr.2013 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2014", %"class.WTF::Vector.630", %"class.WTF::Vector.2016", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2014" = type { %"class.base::RefCounted.2015" }
%"class.base::RefCounted.2015" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2016" = type { %"class.WTF::VectorBuffer.2017" }
%"class.WTF::VectorBuffer.2017" = type { %"class.WTF::VectorBufferBase.2018" }
%"class.WTF::VectorBufferBase.2018" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2019 }
%union.anon.2019 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2004" }
%"class.blink::Member.2004" = type { %"class.blink::MemberBase.2005" }
%"class.blink::MemberBase.2005" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2006" }
%"class.blink::Member.2006" = type { %"class.blink::MemberBase.2007" }
%"class.blink::MemberBase.2007" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2027 }
%class.scoped_refptr.2027 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2037" }
%"class.blink::Member.2037" = type { %"class.blink::MemberBase.2038" }
%"class.blink::MemberBase.2038" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2033" }
%"class.blink::MemberBase.2033" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2034" }
%"class.blink::MemberBase.2034" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2036" }
%"class.blink::MemberBase.2036" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2028", %"class.WTF::Vector.2028" }
%"class.WTF::Vector.2028" = type { %"class.WTF::VectorBuffer.2029" }
%"class.WTF::VectorBuffer.2029" = type { %"class.WTF::VectorBufferBase.2030" }
%"class.WTF::VectorBufferBase.2030" = type { %class.scoped_refptr.2027*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2008" }
%"class.WTF::Vector.2008" = type { %"class.WTF::VectorBuffer.2009" }
%"class.WTF::VectorBuffer.2009" = type { %"class.WTF::VectorBufferBase.2010" }
%"class.WTF::VectorBufferBase.2010" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1659", %"class.absl::optional.1659", %"class.absl::optional.1659" }
%"class.absl::optional.1659" = type { %"class.absl::optional_internal::optional_data.1660" }
%"class.absl::optional_internal::optional_data.1660" = type { %"class.absl::optional_internal::optional_data_base.1661" }
%"class.absl::optional_internal::optional_data_base.1661" = type { %"class.absl::optional_internal::optional_data_dtor_base.1662" }
%"class.absl::optional_internal::optional_data_dtor_base.1662" = type { i8, %union.anon.1663 }
%union.anon.1663 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2023" }
%"class.WTF::VectorBuffer.2023" = type { %"class.WTF::VectorBufferBase.2024", [32 x i8] }
%"class.WTF::VectorBufferBase.2024" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%union.anon.1631 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.1632, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.1632 = type { %"class.blink::ShapeResultView"* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGInkOverflow" = type { %union.anon.1878 }
%union.anon.1878 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.1882, %"class.blink::LayoutObject"*, i32, i32 }
%class.scoped_refptr.1882 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.1883", float, %"class.blink::FloatRect", %"class.WTF::Vector.1885", %class.scoped_refptr.1635, %"class.std::__1::unique_ptr.1891", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.1883" = type { %"class.base::RefCounted.1884" }
%"class.base::RefCounted.1884" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1885" = type { %"class.WTF::VectorBuffer.1886" }
%"class.WTF::VectorBuffer.1886" = type { %"class.WTF::VectorBufferBase.1887" }
%"class.WTF::VectorBufferBase.1887" = type { %class.scoped_refptr.1888*, i32, i32 }
%class.scoped_refptr.1888 = type opaque
%class.scoped_refptr.1635 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.1891" = type { %"class.std::__1::__compressed_pair.1892" }
%"class.std::__1::__compressed_pair.1892" = type { %"struct.std::__1::__compressed_pair_elem.1893" }
%"struct.std::__1::__compressed_pair_elem.1893" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.1894", i32, float }
%"class.WTF::Vector.1894" = type { %"class.WTF::VectorBuffer.1895" }
%"class.WTF::VectorBuffer.1895" = type { %"class.WTF::VectorBufferBase.1896" }
%"class.WTF::VectorBufferBase.1896" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.1633", %class.scoped_refptr.1635, i32, i32, i32, i32, float, i32, [0 x %struct.anon.1636] }
%"class.WTF::RefCounted.1633" = type { %"class.base::RefCounted.1634" }
%"class.base::RefCounted.1634" = type { %"class.base::subtle::RefCountedBase" }
%struct.anon.1636 = type { i8* }
%"class.blink::NGPhysicalLineBoxFragment" = type { %"class.blink::NGPhysicalFragment", %"struct.blink::FontHeight" }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1644", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1646, %"class.std::__1::unique_ptr.1865" }
%"class.WTF::RefCounted.1644" = type { %"class.base::RefCounted.1645" }
%"class.base::RefCounted.1645" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1646 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1647", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1647" = type { %"class.base::RefCounted.1648" }
%"class.base::RefCounted.1648" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1649, %"class.WTF::Vector.1822", %"class.std::__1::unique_ptr.1827", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1848, %"class.blink::Persistent.1849" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1649 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1650", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1797, %union.anon.1798, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1650" = type { %"class.base::RefCounted.1651" }
%"class.base::RefCounted.1651" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1652, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1652 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1653 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1653 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1687 }
%class.scoped_refptr.1687 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1688", [4 x i8], %"class.std::__1::unique_ptr.1690", i64, %"class.WTF::Vector.1694", %"class.WTF::Vector.1699", %"class.WTF::Vector.1705", %"class.WTF::Vector.1723", %class.scoped_refptr.1546, %"class.WTF::HashMap.1729", %"class.WTF::Vector.1734", %"class.WTF::Vector.1694", %"class.WTF::Vector.1739", %"class.WTF::HashMap.1744", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1688" = type { %"class.base::RefCountedThreadSafe.1689" }
%"class.base::RefCountedThreadSafe.1689" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { i8* }
%"class.WTF::Vector.1699" = type { %"class.WTF::VectorBuffer.1700" }
%"class.WTF::VectorBuffer.1700" = type { %"class.WTF::VectorBufferBase.1701", [8 x i8] }
%"class.WTF::VectorBufferBase.1701" = type { %class.scoped_refptr.1702*, i32, i32 }
%class.scoped_refptr.1702 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1705" = type { %"class.WTF::VectorBuffer.1706" }
%"class.WTF::VectorBuffer.1706" = type { %"class.WTF::VectorBufferBase.1707" }
%"class.WTF::VectorBufferBase.1707" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1709", %"class.std::__1::unique_ptr.1715" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1708 }
%class.scoped_refptr.1708 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1709" = type { %"class.std::__1::__compressed_pair.1710" }
%"class.std::__1::__compressed_pair.1710" = type { %"struct.std::__1::__compressed_pair_elem.1711" }
%"struct.std::__1::__compressed_pair_elem.1711" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1715" = type { %"class.std::__1::__compressed_pair.1716" }
%"class.std::__1::__compressed_pair.1716" = type { %"struct.std::__1::__compressed_pair_elem.1717" }
%"struct.std::__1::__compressed_pair_elem.1717" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1723" = type { %"class.WTF::VectorBuffer.1724" }
%"class.WTF::VectorBuffer.1724" = type { %"class.WTF::VectorBufferBase.1725" }
%"class.WTF::VectorBufferBase.1725" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1726", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1726" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1729" = type { %"class.WTF::HashTable.1730" }
%"class.WTF::HashTable.1730" = type <{ %"struct.WTF::KeyValuePair.1733"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1733" = type opaque
%"class.WTF::Vector.1734" = type { %"class.WTF::VectorBuffer.1735" }
%"class.WTF::VectorBuffer.1735" = type { %"class.WTF::VectorBufferBase.1736" }
%"class.WTF::VectorBufferBase.1736" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1694" = type { %"class.WTF::VectorBuffer.1695" }
%"class.WTF::VectorBuffer.1695" = type { %"class.WTF::VectorBufferBase.1696", [16 x i8] }
%"class.WTF::VectorBufferBase.1696" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1739" = type { %"class.WTF::VectorBuffer.1740" }
%"class.WTF::VectorBuffer.1740" = type { %"class.WTF::VectorBufferBase.1741" }
%"class.WTF::VectorBufferBase.1741" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1744" = type { %"class.WTF::HashTable.1745" }
%"class.WTF::HashTable.1745" = type <{ %"struct.WTF::KeyValuePair.1748"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1748" = type { i8**, %"class.std::__1::unique_ptr.2039" }
%"class.std::__1::unique_ptr.2039" = type { %"class.std::__1::__compressed_pair.2040" }
%"class.std::__1::__compressed_pair.2040" = type { %"struct.std::__1::__compressed_pair_elem.2041" }
%"struct.std::__1::__compressed_pair_elem.2041" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1749" }
%"class.std::__1::unique_ptr.1749" = type { %"class.std::__1::__compressed_pair.1750" }
%"class.std::__1::__compressed_pair.1750" = type { %"struct.std::__1::__compressed_pair_elem.1751" }
%"struct.std::__1::__compressed_pair_elem.1751" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1752, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1769" }
%class.scoped_refptr.1752 = type { %"class.base::RefCountedData.1753"* }
%"class.base::RefCountedData.1753" = type { %"class.base::RefCountedThreadSafe.1754", %"class.WTF::Vector.1755" }
%"class.base::RefCountedThreadSafe.1754" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1755" = type { %"class.WTF::VectorBuffer.1756" }
%"class.WTF::VectorBuffer.1756" = type { %"class.WTF::VectorBufferBase.1757" }
%"class.WTF::VectorBufferBase.1757" = type { %class.scoped_refptr.1758*, i32, i32 }
%class.scoped_refptr.1758 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1759", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1761" }
%"class.WTF::RefCounted.1759" = type { %"class.base::RefCounted.1760" }
%"class.base::RefCounted.1760" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1769" = type { %"class.std::__1::__compressed_pair.1770" }
%"class.std::__1::__compressed_pair.1770" = type { %"struct.std::__1::__compressed_pair_elem.1771" }
%"struct.std::__1::__compressed_pair_elem.1771" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1772", %"class.WTF::Vector.1785", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1772" = type { %"class.WTF::VectorBuffer.1773" }
%"class.WTF::VectorBuffer.1773" = type { %"class.WTF::VectorBufferBase.1774", [320 x i8] }
%"class.WTF::VectorBufferBase.1774" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1775", %"class.WTF::Vector.1775", %class.scoped_refptr.1780, i8, [7 x i8] }>
%"class.WTF::Vector.1775" = type { %"class.WTF::VectorBuffer.1776" }
%"class.WTF::VectorBuffer.1776" = type { %"class.WTF::VectorBufferBase.1777", [8 x i8] }
%"class.WTF::VectorBufferBase.1777" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1780 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1781", %"class.WTF::Vector.1755", %"class.WTF::Vector.1755" }
%"class.WTF::RefCounted.1781" = type { %"class.base::RefCounted.1782" }
%"class.base::RefCounted.1782" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1785" = type { %"class.WTF::VectorBuffer.1786" }
%"class.WTF::VectorBuffer.1786" = type { %"class.WTF::VectorBufferBase.1787", [288 x i8] }
%"class.WTF::VectorBufferBase.1787" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1775", %"class.WTF::Vector.1775" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1788 }
%class.scoped_refptr.1788 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1797 = type { %"class.blink::NGPhysicalFragment"* }
%union.anon.1798 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1654", %class.scoped_refptr.1799, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1800, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1687, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1801", %"class.absl::optional.1817" }
%"class.absl::optional.1654" = type { %"class.absl::optional_internal::optional_data.1655" }
%"class.absl::optional_internal::optional_data.1655" = type { %"class.absl::optional_internal::optional_data_base.1656" }
%"class.absl::optional_internal::optional_data_base.1656" = type { %"class.absl::optional_internal::optional_data_dtor_base.1657" }
%"class.absl::optional_internal::optional_data_dtor_base.1657" = type { i8, %union.anon.1658 }
%union.anon.1658 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1799 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1879", [4 x i8], %union.anon.1881, %class.scoped_refptr.1799, i32, [4 x i8] }>
%"class.WTF::RefCounted.1879" = type { %"class.base::RefCounted.1880" }
%"class.base::RefCounted.1880" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1881 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.1800 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1801" = type { %"class.std::__1::__compressed_pair.1802" }
%"class.std::__1::__compressed_pair.1802" = type { %"struct.std::__1::__compressed_pair_elem.1803" }
%"struct.std::__1::__compressed_pair_elem.1803" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1804", %"class.WTF::Vector.1809", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1804" = type { %"class.WTF::VectorBuffer.1805" }
%"class.WTF::VectorBuffer.1805" = type { %"class.WTF::VectorBufferBase.1806" }
%"class.WTF::VectorBufferBase.1806" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1809" = type { %"class.WTF::VectorBuffer.1810" }
%"class.WTF::VectorBuffer.1810" = type { %"class.WTF::VectorBufferBase.1811" }
%"class.WTF::VectorBufferBase.1811" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1817" = type { %"class.absl::optional_internal::optional_data.1818" }
%"class.absl::optional_internal::optional_data.1818" = type { %"class.absl::optional_internal::optional_data_base.1819" }
%"class.absl::optional_internal::optional_data_base.1819" = type { %"class.absl::optional_internal::optional_data_dtor_base.1820" }
%"class.absl::optional_internal::optional_data_dtor_base.1820" = type { i8, %union.anon.1821 }
%union.anon.1821 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1822" = type { %"class.WTF::VectorBuffer.1823" }
%"class.WTF::VectorBuffer.1823" = type { %"class.WTF::VectorBufferBase.1824", [8 x i8] }
%"class.WTF::VectorBufferBase.1824" = type { %class.scoped_refptr.1649*, i32, i32 }
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1830", %"class.absl::optional.1835", %"class.absl::optional.1840" }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, %union.anon.1834 }
%union.anon.1834 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1835" = type { %"class.absl::optional_internal::optional_data.1836" }
%"class.absl::optional_internal::optional_data.1836" = type { %"class.absl::optional_internal::optional_data_base.1837" }
%"class.absl::optional_internal::optional_data_base.1837" = type { %"class.absl::optional_internal::optional_data_dtor_base.1838" }
%"class.absl::optional_internal::optional_data_dtor_base.1838" = type { i8, [3 x i8], %union.anon.1839 }
%union.anon.1839 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1840" = type { %"class.absl::optional_internal::optional_data.1841" }
%"class.absl::optional_internal::optional_data.1841" = type { %"class.absl::optional_internal::optional_data_base.1842" }
%"class.absl::optional_internal::optional_data_base.1842" = type { %"class.absl::optional_internal::optional_data_dtor_base.1843" }
%"class.absl::optional_internal::optional_data_dtor_base.1843" = type { i8, %union.anon.1844 }
%union.anon.1844 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1848 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1849" = type { %"class.blink::PersistentBase.1850" }
%"class.blink::PersistentBase.1850" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1853", %"struct.blink::PhysicalRect", %"class.blink::Member.1863" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1853" = type { %"class.std::__1::__compressed_pair.1854" }
%"class.std::__1::__compressed_pair.1854" = type { %"struct.std::__1::__compressed_pair_elem.1855" }
%"struct.std::__1::__compressed_pair_elem.1855" = type { %"class.WTF::HashSet.1856"* }
%"class.WTF::HashSet.1856" = type { %"class.WTF::HashTable.1857" }
%"class.WTF::HashTable.1857" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1863" = type { %"class.blink::MemberBase.1864" }
%"class.blink::MemberBase.1864" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.std::__1::unique_ptr.1865" = type { %"class.std::__1::__compressed_pair.1866" }
%"class.std::__1::__compressed_pair.1866" = type { %"struct.std::__1::__compressed_pair_elem.1867" }
%"struct.std::__1::__compressed_pair_elem.1867" = type { %"class.WTF::Vector.1868"* }
%"class.WTF::Vector.1868" = type { %"class.WTF::VectorBuffer.1869" }
%"class.WTF::VectorBuffer.1869" = type { %"class.WTF::VectorBufferBase.1870" }
%"class.WTF::VectorBufferBase.1870" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1871 }
%union.anon.1871 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"struct.blink::NGLogicalLineItem" = type <{ %class.scoped_refptr.1649, %"class.blink::NGInlineItem"*, %class.scoped_refptr.1632, %"struct.blink::NGTextOffset", %"class.WTF::String", %"class.blink::LayoutObject"*, i32, [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"struct.blink::LogicalRect", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"struct.blink::NGFragmentItem::BoxItem" = type <{ %class.scoped_refptr.1877, i32, [4 x i8] }>
%class.scoped_refptr.1877 = type { %"class.blink::NGPhysicalBoxFragment"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.blink::NGSvgFragmentData" = type <{ %class.scoped_refptr.1632, %"struct.blink::NGTextOffset", %"class.blink::FloatRect", float, float, float, i8, [3 x i8] }>
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::LayoutSVGInlineText" = type { %"class.blink::LayoutText", float, %"class.blink::Font", %"class.WTF::HashMap.1904", %"class.WTF::Vector.1909" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.1902 }
%union.anon.1902 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.1903" }
%"class.blink::InlineBoxList.1903" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type opaque
%"class.WTF::HashMap.1904" = type { %"class.WTF::HashTable.1905" }
%"class.WTF::HashTable.1905" = type <{ %"struct.WTF::KeyValuePair.1908"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1908" = type opaque
%"class.WTF::Vector.1909" = type { %"class.WTF::VectorBuffer.1910" }
%"class.WTF::VectorBuffer.1910" = type { %"class.WTF::VectorBufferBase.1911" }
%"class.WTF::VectorBufferBase.1911" = type { %"class.blink::SVGTextMetrics"*, i32, i32 }
%"class.blink::SVGTextMetrics" = type { float, float, i32 }
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1914", %"class.std::__1::unique_ptr.1934" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::Persistent.1914" = type { %"class.blink::PersistentBase.1915" }
%"class.blink::PersistentBase.1915" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1918", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1918" = type { %"class.std::__1::__compressed_pair.1919" }
%"class.std::__1::__compressed_pair.1919" = type { %"struct.std::__1::__compressed_pair_elem.1920" }
%"struct.std::__1::__compressed_pair_elem.1920" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1921", %"class.WTF::HashMap.1926", %"class.WTF::String" }
%"class.WTF::Vector.1921" = type { %"class.WTF::VectorBuffer.1922" }
%"class.WTF::VectorBuffer.1922" = type { %"class.WTF::VectorBufferBase.1923" }
%"class.WTF::VectorBufferBase.1923" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1926" = type { %"class.WTF::HashTable.1927" }
%"class.WTF::HashTable.1927" = type <{ %"struct.WTF::KeyValuePair.1930"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1930" = type opaque
%"class.std::__1::unique_ptr.1934" = type { %"class.std::__1::__compressed_pair.1935" }
%"class.std::__1::__compressed_pair.1935" = type { %"struct.std::__1::__compressed_pair_elem.1936" }
%"struct.std::__1::__compressed_pair_elem.1936" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1937", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1937" = type { %"class.WTF::HashTable.1940", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1940" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1943", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1943" = type { %"class.std::__1::__compressed_pair.1944" }
%"class.std::__1::__compressed_pair.1944" = type { %"struct.std::__1::__compressed_pair_elem.1945" }
%"struct.std::__1::__compressed_pair_elem.1945" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1946, %"class.std::__1::unique_ptr.1947", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1946 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1965", i16, %class.scoped_refptr.1946 }
%"class.WTF::ThreadSafeRefCounted.1965" = type { %"class.base::RefCountedThreadSafe.1966" }
%"class.base::RefCountedThreadSafe.1966" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1947" = type { %"class.std::__1::__compressed_pair.1948" }
%"class.std::__1::__compressed_pair.1948" = type { %"struct.std::__1::__compressed_pair_elem.1949" }
%"struct.std::__1::__compressed_pair_elem.1949" = type { %"class.WTF::Vector.1950"* }
%"class.WTF::Vector.1950" = type { %"class.WTF::VectorBuffer.1951" }
%"class.WTF::VectorBuffer.1951" = type { %"class.WTF::VectorBufferBase.1952" }
%"class.WTF::VectorBufferBase.1952" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1961, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1961 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.blink::NGTextFragmentPaintInfo" = type { %"class.WTF::StringView", i32, i32, %"class.blink::ShapeResultView"* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1967, i32, i8, i8, [2 x i8] }>
%union.anon.1967 = type { %"class.WTF::Vector.1968" }
%"class.WTF::Vector.1968" = type { %"class.WTF::VectorBuffer.1969" }
%"class.WTF::VectorBuffer.1969" = type { %"class.WTF::VectorBufferBase.1970", [16 x i8] }
%"class.WTF::VectorBufferBase.1970" = type { i8*, i32, i32 }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"struct.blink::NGCaretPosition" = type { %"class.blink::NGInlineCursor", i32, %"class.absl::optional.1981", [4 x i8] }
%"class.absl::optional.1981" = type { %"class.absl::optional_internal::optional_data.1982" }
%"class.absl::optional_internal::optional_data.1982" = type { %"class.absl::optional_internal::optional_data_base.1983" }
%"class.absl::optional_internal::optional_data_base.1983" = type { %"class.absl::optional_internal::optional_data_dtor_base.1984" }
%"class.absl::optional_internal::optional_data_dtor_base.1984" = type { i8, %union.anon.1985 }
%union.anon.1985 = type { i32 }
%"class.WTF::Vector.1973" = type { %"class.WTF::VectorBuffer.1974" }
%"class.WTF::VectorBuffer.1974" = type { %"class.WTF::VectorBufferBase.1975", [16 x i8] }
%"class.WTF::VectorBufferBase.1975" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink10LayoutUnit14FromFloatRoundEf = comdat any

$_ZN5blink10LayoutUnit14FromFloatFloorEf = comdat any

$_ZN5blink10LayoutUnit13FromFloatCeilEf = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [75 x i8] c"../../third_party/blink/renderer/core/layout/ng/inline/ng_fragment_item.cc\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"NGPhysicalBoxFragment \00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"NGPhysicalTextFragment '\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"(container not found)\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"NGPhysicalLineBoxFragment\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"NGFragmentItem\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"Text \00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"LTR\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"RTL\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"SvgText \00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"GeneratedText \22\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"Line #descendants=\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"Box #descendants=\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c" AtomicInline\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"Standard\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"FirstLine\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"Ellipsis\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"<null>\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.24 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.25 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.27 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.28 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E = external local_unnamed_addr global i8, align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN5blink14NGFragmentItemC1ERKNS_12NGInlineItemE13scoped_refptrIKNS_15ShapeResultViewEERKNS_12NGTextOffsetERKNS_12PhysicalSizeEb = hidden unnamed_addr alias void (%"class.blink::NGFragmentItem"*, %"class.blink::NGInlineItem"*, %"class.blink::ShapeResultView"*, %"struct.blink::NGTextOffset"*, %"struct.blink::PhysicalSize"*, i1), void (%"class.blink::NGFragmentItem"*, %"class.blink::NGInlineItem"*, %"class.blink::ShapeResultView"*, %"struct.blink::NGTextOffset"*, %"struct.blink::PhysicalSize"*, i1)* @_ZN5blink14NGFragmentItemC2ERKNS_12NGInlineItemE13scoped_refptrIKNS_15ShapeResultViewEERKNS_12NGTextOffsetERKNS_12PhysicalSizeEb
@_ZN5blink14NGFragmentItemC1ERKNS_12LayoutObjectENS_10NGTextTypeENS_14NGStyleVariantENS_13TextDirectionE13scoped_refptrIKNS_15ShapeResultViewEERKN3WTF6StringERKNS_12PhysicalSizeEb = hidden unnamed_addr alias void (%"class.blink::NGFragmentItem"*, %"class.blink::LayoutObject"*, i32, i32, i8, %"class.blink::ShapeResultView"*, %"class.WTF::String"*, %"struct.blink::PhysicalSize"*, i1), void (%"class.blink::NGFragmentItem"*, %"class.blink::LayoutObject"*, i32, i32, i8, %"class.blink::ShapeResultView"*, %"class.WTF::String"*, %"struct.blink::PhysicalSize"*, i1)* @_ZN5blink14NGFragmentItemC2ERKNS_12LayoutObjectENS_10NGTextTypeENS_14NGStyleVariantENS_13TextDirectionE13scoped_refptrIKNS_15ShapeResultViewEERKN3WTF6StringERKNS_12PhysicalSizeEb
@_ZN5blink14NGFragmentItemC1ERKNS_12NGInlineItemE13scoped_refptrIKNS_15ShapeResultViewEERKN3WTF6StringERKNS_12PhysicalSizeEb = hidden unnamed_addr alias void (%"class.blink::NGFragmentItem"*, %"class.blink::NGInlineItem"*, %"class.blink::ShapeResultView"*, %"class.WTF::String"*, %"struct.blink::PhysicalSize"*, i1), void (%"class.blink::NGFragmentItem"*, %"class.blink::NGInlineItem"*, %"class.blink::ShapeResultView"*, %"class.WTF::String"*, %"struct.blink::PhysicalSize"*, i1)* @_ZN5blink14NGFragmentItemC2ERKNS_12NGInlineItemE13scoped_refptrIKNS_15ShapeResultViewEERKN3WTF6StringERKNS_12PhysicalSizeEb
@_ZN5blink14NGFragmentItemC1ERKNS_25NGPhysicalLineBoxFragmentE = hidden unnamed_addr alias void (%"class.blink::NGFragmentItem"*, %"class.blink::NGPhysicalLineBoxFragment"*), void (%"class.blink::NGFragmentItem"*, %"class.blink::NGPhysicalLineBoxFragment"*)* @_ZN5blink14NGFragmentItemC2ERKNS_25NGPhysicalLineBoxFragmentE
@_ZN5blink14NGFragmentItemC1ERKNS_21NGPhysicalBoxFragmentENS_13TextDirectionE = hidden unnamed_addr alias void (%"class.blink::NGFragmentItem"*, %"class.blink::NGPhysicalBoxFragment"*, i8), void (%"class.blink::NGFragmentItem"*, %"class.blink::NGPhysicalBoxFragment"*, i8)* @_ZN5blink14NGFragmentItemC2ERKNS_21NGPhysicalBoxFragmentENS_13TextDirectionE
@_ZN5blink14NGFragmentItemC1EONS_17NGLogicalLineItemENS_11WritingModeE = hidden unnamed_addr alias void (%"class.blink::NGFragmentItem"*, %"struct.blink::NGLogicalLineItem"*, i8), void (%"class.blink::NGFragmentItem"*, %"struct.blink::NGLogicalLineItem"*, i8)* @_ZN5blink14NGFragmentItemC2EONS_17NGLogicalLineItemENS_11WritingModeE
@_ZN5blink14NGFragmentItemC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*), void (%"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*)* @_ZN5blink14NGFragmentItemC2ERKS0_
@_ZN5blink14NGFragmentItemC1EOS0_ = hidden unnamed_addr alias void (%"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*), void (%"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*)* @_ZN5blink14NGFragmentItemC2EOS0_
@_ZN5blink14NGFragmentItemD1Ev = hidden unnamed_addr alias void (%"class.blink::NGFragmentItem"*), void (%"class.blink::NGFragmentItem"*)* @_ZN5blink14NGFragmentItemD2Ev
@_ZN5blink14NGFragmentItem7BoxItemC1ERKS1_ = hidden unnamed_addr alias void (%"struct.blink::NGFragmentItem::BoxItem"*, %"struct.blink::NGFragmentItem::BoxItem"*), void (%"struct.blink::NGFragmentItem::BoxItem"*, %"struct.blink::NGFragmentItem::BoxItem"*)* @_ZN5blink14NGFragmentItem7BoxItemC2ERKS1_
@_ZN5blink14NGFragmentItem7BoxItemC1E13scoped_refptrIKNS_21NGPhysicalBoxFragmentEEj = hidden unnamed_addr alias void (%"struct.blink::NGFragmentItem::BoxItem"*, %"class.blink::NGPhysicalBoxFragment"*, i32), void (%"struct.blink::NGFragmentItem::BoxItem"*, %"class.blink::NGPhysicalBoxFragment"*, i32)* @_ZN5blink14NGFragmentItem7BoxItemC2E13scoped_refptrIKNS_21NGPhysicalBoxFragmentEEj

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItemC2ERKNS_12NGInlineItemE13scoped_refptrIKNS_15ShapeResultViewEERKNS_12NGTextOffsetERKNS_12PhysicalSizeEb(%"class.blink::NGFragmentItem"* nocapture, %"class.blink::NGInlineItem"* nocapture readonly dereferenceable(32), %"class.blink::ShapeResultView"*, %"struct.blink::NGTextOffset"* nocapture readonly dereferenceable(8), %"struct.blink::PhysicalSize"* nocapture readonly dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.blink::ShapeResultView"* %2 to i64
  %8 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 3
  %9 = bitcast %"class.blink::LayoutObject"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::NGFragmentItem"* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = bitcast %class.scoped_refptr.1632* %12 to i64*
  store i64 %7, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"struct.blink::NGTextOffset"* %3 to i64*
  %16 = bitcast %"struct.blink::NGTextOffset"* %14 to i64*
  %17 = load i64, i64* %15, align 4
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2
  %19 = bitcast %"struct.blink::PhysicalRect"* %18 to i64*
  store i64 0, i64* %19, align 4
  %20 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %21 = bitcast %"struct.blink::PhysicalSize"* %4 to i64*
  %22 = bitcast %"struct.blink::PhysicalSize"* %20 to i64*
  %23 = load i64, i64* %21, align 4
  store i64 %23, i64* %22, align 4
  %24 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 4
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 5
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %27 = load i16, i16* %26, align 8
  %28 = and i16 %27, -8
  store i16 %28, i16* %26, align 8
  %29 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 5
  %30 = load i32, i32* %29, align 4
  %31 = trunc i32 %30 to i16
  %32 = shl i16 %31, 3
  %33 = and i16 %32, 56
  %34 = and i16 %27, -64
  %35 = or i16 %33, %34
  store i16 %35, i16* %26, align 8
  %36 = load i32, i32* %29, align 4
  %37 = trunc i32 %36 to i16
  %38 = shl i16 %37, 3
  %39 = and i16 %38, 192
  %40 = and i16 %35, -456
  %41 = zext i1 %5 to i16
  %42 = shl nuw nsw i16 %41, 8
  %43 = or i16 %39, %42
  %44 = or i16 %43, %40
  store i16 %44, i16* %26, align 8
  %45 = load i32, i32* %29, align 4
  %46 = trunc i32 %45 to i16
  %47 = shl i16 %46, 2
  %48 = and i16 %47, 512
  %49 = and i16 %44, -32264
  %50 = or i16 %48, %49
  %51 = or i16 %50, 16384
  store i16 %51, i16* %26, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItemC2ERKNS_12LayoutObjectENS_10NGTextTypeENS_14NGStyleVariantENS_13TextDirectionE13scoped_refptrIKNS_15ShapeResultViewEERKN3WTF6StringERKNS_12PhysicalSizeEb(%"class.blink::NGFragmentItem"* nocapture, %"class.blink::LayoutObject"* dereferenceable(88), i32, i32, i8 zeroext, %"class.blink::ShapeResultView"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"struct.blink::PhysicalSize"* nocapture readonly dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %10 = ptrtoint %"class.blink::ShapeResultView"* %5 to i64
  %11 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = bitcast %class.scoped_refptr.1632* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = bitcast %"struct.blink::NGTextOffset"* %14 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #13
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %24
  tail call void @llvm.trap() #13
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %36

36:                                               ; preds = %34, %19, %9
  %37 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2
  %38 = bitcast %"struct.blink::PhysicalRect"* %37 to i64*
  store i64 0, i64* %38, align 4
  %39 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %40 = bitcast %"struct.blink::PhysicalSize"* %7 to i64*
  %41 = bitcast %"struct.blink::PhysicalSize"* %39 to i64*
  %42 = load i64, i64* %40, align 4
  store i64 %42, i64* %41, align 4
  %43 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 4
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 5
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %46 = load i16, i16* %45, align 8
  %47 = and i16 %46, -32768
  %48 = trunc i32 %2 to i16
  %49 = shl i16 %48, 3
  %50 = and i16 %49, 56
  %51 = trunc i32 %3 to i16
  %52 = shl i16 %51, 6
  %53 = and i16 %52, 192
  %54 = zext i1 %8 to i16
  %55 = shl nuw nsw i16 %54, 8
  %56 = and i8 %4, 1
  %57 = zext i8 %56 to i16
  %58 = shl nuw nsw i16 %57, 9
  %59 = or i16 %50, %53
  %60 = or i16 %59, %58
  %61 = or i16 %60, %55
  %62 = or i16 %61, %47
  %63 = or i16 %62, 16386
  store i16 %63, i16* %45, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItemC2ERKNS_12NGInlineItemE13scoped_refptrIKNS_15ShapeResultViewEERKN3WTF6StringERKNS_12PhysicalSizeEb(%"class.blink::NGFragmentItem"* nocapture, %"class.blink::NGInlineItem"* nocapture readonly dereferenceable(32), %"class.blink::ShapeResultView"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"struct.blink::PhysicalSize"* nocapture readonly dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.blink::ShapeResultView"* %2 to i64
  %8 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 3
  %9 = bitcast %"class.blink::LayoutObject"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.blink::NGFragmentItem"* %0 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = bitcast %class.scoped_refptr.1632* %14 to i64*
  store i64 %7, i64* %15, align 8
  %16 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = bitcast %"struct.blink::NGTextOffset"* %16 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #13
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #13
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %36, %21, %6
  %39 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2
  %40 = bitcast %"struct.blink::PhysicalRect"* %39 to i64*
  store i64 0, i64* %40, align 4
  %41 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %42 = bitcast %"struct.blink::PhysicalSize"* %4 to i64*
  %43 = bitcast %"struct.blink::PhysicalSize"* %41 to i64*
  %44 = load i64, i64* %42, align 4
  store i64 %44, i64* %43, align 4
  %45 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 4
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 5
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %48 = load i16, i16* %47, align 8
  %49 = and i16 %48, -32768
  %50 = trunc i32 %12 to i16
  %51 = shl i16 %50, 3
  %52 = and i16 %51, 56
  %53 = and i16 %51, 192
  %54 = zext i1 %5 to i16
  %55 = shl nuw nsw i16 %54, 8
  %56 = shl i16 %50, 2
  %57 = and i16 %56, 512
  %58 = or i16 %55, %53
  %59 = or i16 %58, %52
  %60 = or i16 %59, %57
  %61 = or i16 %60, %49
  %62 = or i16 %61, 16386
  store i16 %62, i16* %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItemC2ERKNS_25NGPhysicalLineBoxFragmentE(%"class.blink::NGFragmentItem"* nocapture, %"class.blink::NGPhysicalLineBoxFragment"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %1, i64 0, i32 0, i32 1
  %4 = bitcast %"class.blink::LayoutObject"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.blink::NGFragmentItem"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.1631* %7 to %"class.blink::NGPhysicalLineBoxFragment"**
  store %"class.blink::NGPhysicalLineBoxFragment"* %1, %"class.blink::NGPhysicalLineBoxFragment"** %8, align 8
  %9 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %1, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %11) #13
  br label %12

12:                                               ; preds = %2, %10
  %13 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %1, i64 0, i32 0, i32 2
  %16 = bitcast %"struct.blink::PhysicalSize"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"struct.blink::PhysicalRect"* %14 to i64*
  store i64 0, i64* %18, align 4
  %19 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %20 = bitcast %"struct.blink::PhysicalSize"* %19 to i64*
  store i64 %17, i64* %20, align 4
  %21 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 4
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 5
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %24 = load i16, i16* %23, align 8
  %25 = and i16 %24, -8
  %26 = or i16 %25, 3
  store i16 %26, i16* %23, align 8
  %27 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %1, i64 0, i32 0, i32 3
  %28 = bitcast i24* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i16
  %32 = and i16 %31, 56
  %33 = and i16 %26, -61
  %34 = or i16 %32, %33
  store i16 %34, i16* %23, align 8
  %35 = load i32, i32* %28, align 8
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i16
  %38 = and i16 %37, 192
  %39 = and i16 %34, -453
  %40 = or i16 %39, %38
  store i16 %40, i16* %23, align 8
  %41 = load i32, i32* %28, align 8
  %42 = lshr i32 %41, 6
  %43 = trunc i32 %42 to i16
  %44 = and i16 %43, 512
  %45 = and i16 %40, -32517
  %46 = or i16 %44, %45
  %47 = or i16 %46, 16384
  store i16 %47, i16* %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItemC2ERKNS_21NGPhysicalBoxFragmentENS_13TextDirectionE(%"class.blink::NGFragmentItem"* nocapture, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), i8 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0, i32 3
  %6 = bitcast i24* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 64
  %9 = icmp eq i32 %8, 0
  %10 = and i32 %7, 960
  %11 = icmp ne i32 %10, 256
  %12 = and i1 %9, %11
  %13 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0, i32 1
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = select i1 %12, %"class.blink::LayoutObject"* %14, %"class.blink::LayoutObject"* null
  store %"class.blink::LayoutObject"* %15, %"class.blink::LayoutObject"** %4, align 8
  %16 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %17 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %1, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #13
  br label %20

20:                                               ; preds = %3, %18
  %21 = ptrtoint %"class.blink::NGPhysicalBoxFragment"* %1 to i64
  %22 = bitcast %union.anon.1631* %16 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0, i32 2
  %26 = bitcast %"struct.blink::PhysicalSize"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.blink::PhysicalRect"* %24 to i64*
  store i64 0, i64* %28, align 4
  %29 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %30 = bitcast %"struct.blink::PhysicalSize"* %29 to i64*
  store i64 %27, i64* %30, align 4
  %31 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 4
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 5
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %34 = load i16, i16* %33, align 8
  %35 = and i16 %34, -8
  %36 = or i16 %35, 4
  store i16 %36, i16* %33, align 8
  %37 = load i32, i32* %6, align 8
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i16
  %40 = and i16 %39, 192
  %41 = and i16 %36, -196
  %42 = or i16 %40, %41
  store i16 %42, i16* %33, align 8
  %43 = load i32, i32* %6, align 8
  %44 = lshr i32 %43, 4
  %45 = trunc i32 %44 to i16
  %46 = and i16 %45, 256
  %47 = and i16 %42, -32516
  %48 = and i8 %2, 1
  %49 = zext i8 %48 to i16
  %50 = shl nuw nsw i16 %49, 9
  %51 = or i16 %50, %46
  %52 = or i16 %51, %47
  %53 = or i16 %52, 16384
  store i16 %53, i16* %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItemC2EONS_17NGLogicalLineItemENS_11WritingModeE(%"class.blink::NGFragmentItem"*, %"struct.blink::NGLogicalLineItem"* nocapture dereferenceable(120), i8 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2
  %6 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 16, i1 false) #13
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 4
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 5
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 1
  %10 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %9, align 8
  %11 = icmp eq %"class.blink::NGInlineItem"* %10, null
  br i1 %11, label %137, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 4, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  %16 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.scoped_refptr.1632, %class.scoped_refptr.1632* %16, i64 0, i32 0
  %18 = bitcast %class.scoped_refptr.1632* %16 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.blink::ShapeResultView"* null, %"class.blink::ShapeResultView"** %17, align 8
  br i1 %15, label %83, label %20, !prof !3

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 12, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 10, i32 1, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i8 %2, 0
  %26 = select i1 %25, i32 %24, i32 %22
  %27 = select i1 %25, i32 %22, i32 %24
  %28 = zext i32 %26 to i64
  %29 = shl nuw i64 %28, 32
  %30 = zext i32 %27 to i64
  %31 = or i64 %29, %30
  %32 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 19
  %33 = load i8, i8* %32, align 1, !range !4
  %34 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %10, i64 0, i32 3
  %35 = bitcast %"class.blink::LayoutObject"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %10, i64 0, i32 5
  %38 = load i32, i32* %37, align 4
  %39 = bitcast %"class.blink::NGFragmentItem"* %0 to i64*
  store i64 %36, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0
  %41 = bitcast %class.scoped_refptr.1632* %40 to i64*
  store i64 %19, i64* %41, align 8
  %42 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %44 = bitcast %"struct.blink::NGTextOffset"* %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %44, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %20
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #13
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %51
  tail call void @llvm.trap() #13
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %63

63:                                               ; preds = %20, %46, %61
  %64 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 0, i64* %64, align 4
  %65 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %66 = bitcast %"struct.blink::PhysicalSize"* %65 to i64*
  store i64 %31, i64* %66, align 4
  store i32 0, i32* %7, align 8
  store i32 0, i32* %8, align 4
  %67 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %68 = load i16, i16* %67, align 8
  %69 = and i16 %68, -32768
  %70 = trunc i32 %38 to i16
  %71 = shl i16 %70, 3
  %72 = and i16 %71, 56
  %73 = and i16 %71, 192
  %74 = zext i8 %33 to i16
  %75 = shl nuw nsw i16 %74, 8
  %76 = shl i16 %70, 2
  %77 = and i16 %76, 512
  %78 = or i16 %75, %73
  %79 = or i16 %78, %72
  %80 = or i16 %79, %77
  %81 = or i16 %80, %69
  %82 = or i16 %81, 16386
  store i16 %82, i16* %67, align 8
  br label %268

83:                                               ; preds = %12
  %84 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 3
  %85 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 12, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 10, i32 1, i32 1, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i8 %2, 0
  %90 = select i1 %89, i32 %88, i32 %86
  %91 = select i1 %89, i32 %86, i32 %88
  %92 = zext i32 %90 to i64
  %93 = shl nuw i64 %92, 32
  %94 = zext i32 %91 to i64
  %95 = or i64 %93, %94
  %96 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 19
  %97 = load i8, i8* %96, align 1, !range !4
  %98 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %10, i64 0, i32 3
  %99 = bitcast %"class.blink::LayoutObject"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.blink::NGFragmentItem"* %0 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0
  %103 = bitcast %class.scoped_refptr.1632* %102 to i64*
  store i64 %19, i64* %103, align 8
  %104 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %105 = bitcast %"struct.blink::NGTextOffset"* %84 to i64*
  %106 = bitcast %"struct.blink::NGTextOffset"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 8
  %108 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 0, i64* %108, align 4
  %109 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %110 = bitcast %"struct.blink::PhysicalSize"* %109 to i64*
  store i64 %95, i64* %110, align 4
  store i32 0, i32* %7, align 8
  store i32 0, i32* %8, align 4
  %111 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %112 = load i16, i16* %111, align 8
  %113 = and i16 %112, -8
  store i16 %113, i16* %111, align 8
  %114 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %10, i64 0, i32 5
  %115 = load i32, i32* %114, align 4
  %116 = trunc i32 %115 to i16
  %117 = shl i16 %116, 3
  %118 = and i16 %117, 56
  %119 = and i16 %112, -64
  %120 = or i16 %118, %119
  store i16 %120, i16* %111, align 8
  %121 = load i32, i32* %114, align 4
  %122 = trunc i32 %121 to i16
  %123 = shl i16 %122, 3
  %124 = and i16 %123, 192
  %125 = and i16 %120, -456
  %126 = zext i8 %97 to i16
  %127 = shl nuw nsw i16 %126, 8
  %128 = or i16 %124, %127
  %129 = or i16 %128, %125
  store i16 %129, i16* %111, align 8
  %130 = load i32, i32* %114, align 4
  %131 = trunc i32 %130 to i16
  %132 = shl i16 %131, 2
  %133 = and i16 %132, 512
  %134 = and i16 %129, -32264
  %135 = or i16 %133, %134
  %136 = or i16 %135, 16384
  store i16 %136, i16* %111, align 8
  br label %268

137:                                              ; preds = %3
  %138 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 0, i32 0
  %139 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %138, align 8
  %140 = icmp eq %"class.blink::NGLayoutResult"* %139, null
  br i1 %140, label %196, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %139, i64 0, i32 3, i32 0
  %143 = bitcast %"class.blink::NGPhysicalFragment"** %142 to %"class.blink::NGPhysicalBoxFragment"**
  %144 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %143, align 8
  %145 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 16
  %146 = load i8, i8* %145, align 8
  %147 = icmp eq i8 %146, -1
  %148 = and i8 %146, 1
  %149 = select i1 %147, i8 0, i8 %148
  %150 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  %151 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %144, i64 0, i32 0, i32 3
  %152 = bitcast i24* %151 to i32*
  %153 = load i32, i32* %152, align 8
  %154 = and i32 %153, 64
  %155 = icmp eq i32 %154, 0
  %156 = and i32 %153, 960
  %157 = icmp ne i32 %156, 256
  %158 = and i1 %155, %157
  %159 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %144, i64 0, i32 0, i32 1
  %160 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %159, align 8
  %161 = select i1 %158, %"class.blink::LayoutObject"* %160, %"class.blink::LayoutObject"* null
  store %"class.blink::LayoutObject"* %161, %"class.blink::LayoutObject"** %150, align 8
  %162 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %163 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %144, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %141
  %165 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %144, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %165) #13
  br label %166

166:                                              ; preds = %141, %164
  %167 = ptrtoint %"class.blink::NGPhysicalBoxFragment"* %144 to i64
  %168 = bitcast %union.anon.1631* %162 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 1, i32* %169, align 8
  %170 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %144, i64 0, i32 0, i32 2
  %171 = bitcast %"struct.blink::PhysicalSize"* %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 0, i64* %173, align 4
  %174 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %175 = bitcast %"struct.blink::PhysicalSize"* %174 to i64*
  store i64 %172, i64* %175, align 4
  store i32 0, i32* %7, align 8
  store i32 0, i32* %8, align 4
  %176 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %177 = load i16, i16* %176, align 8
  %178 = and i16 %177, -8
  %179 = or i16 %178, 4
  store i16 %179, i16* %176, align 8
  %180 = load i32, i32* %152, align 8
  %181 = lshr i32 %180, 4
  %182 = trunc i32 %181 to i16
  %183 = and i16 %182, 192
  %184 = and i16 %179, -196
  %185 = or i16 %183, %184
  store i16 %185, i16* %176, align 8
  %186 = load i32, i32* %152, align 8
  %187 = lshr i32 %186, 4
  %188 = trunc i32 %187 to i16
  %189 = and i16 %188, 256
  %190 = and i16 %185, -32516
  %191 = zext i8 %149 to i16
  %192 = shl nuw nsw i16 %191, 9
  %193 = or i16 %192, %189
  %194 = or i16 %193, %190
  %195 = or i16 %194, 16384
  store i16 %195, i16* %176, align 8
  br label %268

196:                                              ; preds = %137
  %197 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 5
  %198 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %197, align 8
  %199 = icmp eq %"class.blink::LayoutObject"* %198, null
  br i1 %199, label %265, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 2, i32 0
  %202 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %201, align 8
  %203 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %202, i64 0, i32 4
  %204 = load i32, i32* %203, align 8
  %205 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 6
  %206 = load i32, i32* %205, align 8
  %207 = ptrtoint %"class.blink::ShapeResultView"* %202 to i64
  store %"class.blink::ShapeResultView"* null, %"class.blink::ShapeResultView"** %201, align 8
  %208 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 12, i32 0
  %209 = load i32, i32* %208, align 8
  %210 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 10, i32 1, i32 1, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i8 %2, 0
  %213 = select i1 %212, i32 %211, i32 %209
  %214 = select i1 %212, i32 %209, i32 %211
  %215 = zext i32 %213 to i64
  %216 = shl nuw i64 %215, 32
  %217 = zext i32 %214 to i64
  %218 = or i64 %216, %217
  %219 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 19
  %220 = load i8, i8* %219, align 1, !range !4
  %221 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  store %"class.blink::LayoutObject"* %198, %"class.blink::LayoutObject"** %221, align 8
  %222 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0
  %223 = bitcast %class.scoped_refptr.1632* %222 to i64*
  store i64 %207, i64* %223, align 8
  %224 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %225 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 4, i32 0, i32 0
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %227 = bitcast %"struct.blink::NGTextOffset"* %224 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %226, %"class.WTF::StringImpl"** %227, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %228, label %246, label %229

229:                                              ; preds = %200
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %246

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = zext i32 %236 to i33
  %238 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %237, i33 1) #13
  %239 = extractvalue { i33, i1 } %238, 1
  %240 = extractvalue { i33, i1 } %238, 0
  %241 = icmp slt i33 %240, 0
  %242 = or i1 %239, %241
  br i1 %242, label %243, label %244, !prof !2

243:                                              ; preds = %234
  tail call void @llvm.trap() #13
  unreachable

244:                                              ; preds = %234
  %245 = trunc i33 %240 to i32
  store i32 %245, i32* %235, align 4
  br label %246

246:                                              ; preds = %200, %229, %244
  %247 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 0, i64* %247, align 4
  %248 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %249 = bitcast %"struct.blink::PhysicalSize"* %248 to i64*
  store i64 %218, i64* %249, align 4
  store i32 0, i32* %7, align 8
  store i32 0, i32* %8, align 4
  %250 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %251 = load i16, i16* %250, align 8
  %252 = and i16 %251, -32768
  %253 = trunc i32 %206 to i16
  %254 = shl i16 %253, 6
  %255 = and i16 %254, 192
  %256 = zext i8 %220 to i16
  %257 = shl nuw nsw i16 %256, 8
  %258 = lshr i32 %204, 21
  %259 = trunc i32 %258 to i16
  %260 = and i16 %259, 512
  %261 = or i16 %260, %255
  %262 = or i16 %261, %257
  %263 = or i16 %262, %252
  %264 = or i16 %263, 16418
  store i16 %264, i16* %250, align 8
  br label %268

265:                                              ; preds = %196
  %266 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %266) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0), i32 179, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #13
  %267 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %266) #13
  br label %268

268:                                              ; preds = %265, %246, %166, %83, %63
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItemC2ERKS0_(%"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::NGFragmentItem"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.blink::NGFragmentItem"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 2
  %8 = bitcast %"struct.blink::PhysicalRect"* %6 to i8*
  %9 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %13, align 4
  %16 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 6
  %18 = load i16, i16* %17, align 8
  %19 = and i16 %18, 7
  %20 = load i16, i16* %16, align 8
  %21 = and i16 %20, -8
  %22 = or i16 %21, %19
  store i16 %22, i16* %16, align 8
  %23 = load i16, i16* %17, align 8
  %24 = and i16 %23, 56
  %25 = and i16 %22, -57
  %26 = or i16 %25, %24
  store i16 %26, i16* %16, align 8
  %27 = load i16, i16* %17, align 8
  %28 = and i16 %27, 192
  %29 = and i16 %26, -193
  %30 = or i16 %29, %28
  store i16 %30, i16* %16, align 8
  %31 = load i16, i16* %17, align 8
  %32 = and i16 %31, 256
  %33 = and i16 %30, -257
  %34 = or i16 %33, %32
  store i16 %34, i16* %16, align 8
  %35 = load i16, i16* %17, align 8
  %36 = and i16 %35, 512
  %37 = and i16 %34, -7681
  %38 = or i16 %37, %36
  store i16 %38, i16* %16, align 8
  %39 = load i16, i16* %17, align 8
  %40 = and i16 %39, 8192
  %41 = and i16 %38, -15361
  %42 = or i16 %41, %40
  store i16 %42, i16* %16, align 8
  %43 = load i16, i16* %17, align 8
  %44 = and i16 %43, 16384
  %45 = and i16 %42, -23553
  %46 = or i16 %45, %44
  store i16 %46, i16* %16, align 8
  %47 = zext i16 %19 to i32
  switch i32 %47, label %155 [
    i32 0, label %48
    i32 1, label %61
    i32 2, label %97
    i32 3, label %128
    i32 4, label %141
  ]

48:                                               ; preds = %2
  %49 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.blink::ShapeResultView"* %50, %"class.blink::ShapeResultView"** %51, align 8
  %52 = icmp eq %"class.blink::ShapeResultView"* %50, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %50, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %54) #13
  br label %55

55:                                               ; preds = %48, %53
  %56 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %57 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  %58 = bitcast %"struct.blink::NGTextOffset"* %57 to i64*
  %59 = bitcast %"struct.blink::NGTextOffset"* %56 to i64*
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %59, align 8
  br label %155

61:                                               ; preds = %2
  %62 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %63 = bitcast %union.anon.1631* %62 to i64*
  store i64 0, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %65 = bitcast %union.anon.1631* %64 to %"struct.blink::NGSvgFragmentData"**
  %66 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %65, align 8
  %67 = tail call i8* @_Znwm(i64 48) #14
  %68 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %66, i64 0, i32 0, i32 0
  %69 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %68, align 8
  %70 = bitcast i8* %67 to %"class.blink::ShapeResultView"**
  store %"class.blink::ShapeResultView"* %69, %"class.blink::ShapeResultView"** %70, align 8
  %71 = icmp eq %"class.blink::ShapeResultView"* %69, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %69, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %73) #13
  %74 = bitcast %union.anon.1631* %62 to %"struct.blink::NGSvgFragmentData"**
  %75 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %74, align 8
  %76 = bitcast %"struct.blink::NGSvgFragmentData"* %75 to i8*
  br label %77

77:                                               ; preds = %61, %72
  %78 = phi i8* [ %76, %72 ], [ null, %61 ]
  %79 = phi %"struct.blink::NGSvgFragmentData"* [ %75, %72 ], [ null, %61 ]
  %80 = getelementptr inbounds i8, i8* %67, i64 8
  %81 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %66, i64 0, i32 1
  %82 = bitcast %"struct.blink::NGTextOffset"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %82, i64 37, i1 false) #13
  %83 = ptrtoint i8* %67 to i64
  store i64 %83, i64* %63, align 8
  %84 = icmp eq %"struct.blink::NGSvgFragmentData"* %79, null
  br i1 %84, label %155, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %79, i64 0, i32 0, i32 0
  %87 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %86, align 8
  %88 = icmp eq %"class.blink::ShapeResultView"* %87, null
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %87, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %90) #13
  %91 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %89
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %87) #13
  %95 = bitcast %"class.blink::ShapeResultView"* %87 to i8*
  tail call void @free(i8* %95) #13
  br label %96

96:                                               ; preds = %94, %89, %85
  tail call void @_ZdlPv(i8* %78) #14
  br label %155

97:                                               ; preds = %2
  %98 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %99 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.blink::ShapeResultView"* %99, %"class.blink::ShapeResultView"** %100, align 8
  %101 = icmp eq %"class.blink::ShapeResultView"* %99, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %99, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %103) #13
  br label %104

104:                                              ; preds = %102, %97
  %105 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  %106 = bitcast %"struct.blink::NGTextOffset"* %105 to %"class.WTF::StringImpl"**
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %109 = bitcast %"struct.blink::NGTextOffset"* %108 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %109, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %110, label %155, label %111

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %155

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i33
  %120 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #13
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %116
  tail call void @llvm.trap() #13
  unreachable

126:                                              ; preds = %116
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %117, align 4
  br label %155

128:                                              ; preds = %2
  %129 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %130 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %131 = bitcast %union.anon.1631* %130 to %"class.blink::NGPhysicalLineBoxFragment"**
  %132 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %131, align 8
  %133 = bitcast %union.anon.1631* %129 to %"class.blink::NGPhysicalLineBoxFragment"**
  store %"class.blink::NGPhysicalLineBoxFragment"* %132, %"class.blink::NGPhysicalLineBoxFragment"** %133, align 8
  %134 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %132, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %132, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %136) #13
  br label %137

137:                                              ; preds = %128, %135
  %138 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %139 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %140 = load i32, i32* %139, align 8
  store i32 %140, i32* %138, align 8
  br label %155

141:                                              ; preds = %2
  %142 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %143 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %144 = bitcast %union.anon.1631* %143 to %"class.blink::NGPhysicalBoxFragment"**
  %145 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %144, align 8
  %146 = tail call %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink21NGPhysicalBoxFragment10PostLayoutEv(%"class.blink::NGPhysicalBoxFragment"* %145) #13
  %147 = bitcast %union.anon.1631* %142 to %"class.blink::NGPhysicalBoxFragment"**
  store %"class.blink::NGPhysicalBoxFragment"* %146, %"class.blink::NGPhysicalBoxFragment"** %147, align 8
  %148 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %146, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %141
  %150 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %150) #13
  br label %151

151:                                              ; preds = %141, %149
  %152 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %153 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %154 = load i32, i32* %153, align 8
  store i32 %154, i32* %152, align 8
  br label %155

155:                                              ; preds = %126, %111, %104, %77, %96, %2, %151, %137, %55
  %156 = load i16, i16* %17, align 8
  %157 = and i16 %156, 6144
  %158 = icmp eq i16 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %155
  %160 = and i16 %156, 7168
  %161 = load i16, i16* %16, align 8
  %162 = and i16 %161, -7169
  %163 = or i16 %162, %160
  store i16 %163, i16* %16, align 8
  %164 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 3
  %165 = load i16, i16* %17, align 8
  %166 = lshr i16 %165, 10
  %167 = and i16 %166, 7
  %168 = zext i16 %167 to i32
  %169 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 3
  tail call void @_ZN5blink13NGInkOverflowC1ENS0_4TypeERKS0_(%"class.blink::NGInkOverflow"* %164, i32 %168, %"class.blink::NGInkOverflow"* dereferenceable(8) %169) #13
  br label %170

170:                                              ; preds = %155, %159
  ret void
}

declare void @_ZN5blink13NGInkOverflowC1ENS0_4TypeERKS0_(%"class.blink::NGInkOverflow"*, i32, %"class.blink::NGInkOverflow"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItemC2EOS0_(%"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::NGFragmentItem"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.blink::NGFragmentItem"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 2
  %8 = bitcast %"struct.blink::PhysicalRect"* %6 to i8*
  %9 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 6
  %12 = load i16, i16* %11, align 8
  %13 = lshr i16 %12, 10
  %14 = and i16 %13, 7
  %15 = zext i16 %14 to i32
  %16 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 3
  tail call void @_ZN5blink13NGInkOverflowC1ENS0_4TypeEOS0_(%"class.blink::NGInkOverflow"* %10, i32 %15, %"class.blink::NGInkOverflow"* dereferenceable(8) %16) #13
  %17 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %24 = load i16, i16* %11, align 8
  %25 = and i16 %24, 7
  %26 = load i16, i16* %23, align 8
  %27 = and i16 %26, -8
  %28 = or i16 %27, %25
  store i16 %28, i16* %23, align 8
  %29 = load i16, i16* %11, align 8
  %30 = and i16 %29, 56
  %31 = and i16 %28, -57
  %32 = or i16 %31, %30
  store i16 %32, i16* %23, align 8
  %33 = load i16, i16* %11, align 8
  %34 = and i16 %33, 192
  %35 = and i16 %32, -193
  %36 = or i16 %35, %34
  store i16 %36, i16* %23, align 8
  %37 = load i16, i16* %11, align 8
  %38 = and i16 %37, 256
  %39 = and i16 %36, -257
  %40 = or i16 %39, %38
  store i16 %40, i16* %23, align 8
  %41 = load i16, i16* %11, align 8
  %42 = and i16 %41, 512
  %43 = and i16 %40, -513
  %44 = or i16 %43, %42
  store i16 %44, i16* %23, align 8
  %45 = load i16, i16* %11, align 8
  %46 = and i16 %45, 7168
  %47 = and i16 %44, -7169
  %48 = or i16 %47, %46
  store i16 %48, i16* %23, align 8
  %49 = load i16, i16* %11, align 8
  %50 = and i16 %49, 8192
  %51 = and i16 %48, -8193
  %52 = or i16 %51, %50
  store i16 %52, i16* %23, align 8
  %53 = load i16, i16* %11, align 8
  %54 = and i16 %53, 16384
  %55 = and i16 %52, -16385
  %56 = or i16 %55, %54
  store i16 %56, i16* %23, align 8
  %57 = zext i16 %25 to i32
  switch i32 %57, label %114 [
    i32 0, label %58
    i32 1, label %70
    i32 2, label %77
    i32 3, label %90
    i32 4, label %100
  ]

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0
  %60 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"struct.blink::NGFragmentItem::TextItem", %"struct.blink::NGFragmentItem::TextItem"* %60, i64 0, i32 0, i32 0
  %62 = bitcast %"struct.blink::NGFragmentItem::TextItem"* %60 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"struct.blink::NGFragmentItem::TextItem"* %59 to i64*
  store i64 %63, i64* %64, align 8
  store %"class.blink::ShapeResultView"* null, %"class.blink::ShapeResultView"** %61, align 8
  %65 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %66 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  %67 = bitcast %"struct.blink::NGTextOffset"* %66 to i64*
  %68 = bitcast %"struct.blink::NGTextOffset"* %65 to i64*
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %68, align 8
  br label %114

70:                                               ; preds = %2
  %71 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %72 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %73 = bitcast %union.anon.1631* %72 to %"struct.blink::NGSvgFragmentData"**
  %74 = bitcast %union.anon.1631* %72 to i64*
  %75 = load i64, i64* %74, align 8
  store %"struct.blink::NGSvgFragmentData"* null, %"struct.blink::NGSvgFragmentData"** %73, align 8
  %76 = bitcast %union.anon.1631* %71 to i64*
  store i64 %75, i64* %76, align 8
  br label %114

77:                                               ; preds = %2
  %78 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %80 = getelementptr inbounds %union.anon.1631, %union.anon.1631* %79, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %union.anon.1631* %79 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %union.anon.1631* %78 to i64*
  store i64 %82, i64* %83, align 8
  store %"class.blink::ShapeResultView"* null, %"class.blink::ShapeResultView"** %80, align 8
  %84 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %85 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  %86 = bitcast %"struct.blink::NGTextOffset"* %85 to %"class.WTF::StringImpl"**
  %87 = bitcast %"struct.blink::NGTextOffset"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"struct.blink::NGTextOffset"* %84 to i64*
  store i64 %88, i64* %89, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  br label %114

90:                                               ; preds = %2
  %91 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %92 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %93 = bitcast %union.anon.1631* %92 to %"class.blink::NGPhysicalLineBoxFragment"**
  %94 = bitcast %union.anon.1631* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %union.anon.1631* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.blink::NGPhysicalLineBoxFragment"* null, %"class.blink::NGPhysicalLineBoxFragment"** %93, align 8
  %97 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %98 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %99 = load i32, i32* %98, align 8
  store i32 %99, i32* %97, align 8
  br label %114

100:                                              ; preds = %2
  %101 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %102 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %103 = bitcast %union.anon.1631* %102 to %"class.blink::NGPhysicalBoxFragment"**
  %104 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %103, align 8
  %105 = tail call %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink21NGPhysicalBoxFragment10PostLayoutEv(%"class.blink::NGPhysicalBoxFragment"* %104) #13
  %106 = bitcast %union.anon.1631* %101 to %"class.blink::NGPhysicalBoxFragment"**
  store %"class.blink::NGPhysicalBoxFragment"* %105, %"class.blink::NGPhysicalBoxFragment"** %106, align 8
  %107 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %105, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %105, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %109) #13
  br label %110

110:                                              ; preds = %100, %108
  %111 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %112 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %113 = load i32, i32* %112, align 8
  store i32 %113, i32* %111, align 8
  br label %114

114:                                              ; preds = %2, %110, %90, %77, %70, %58
  ret void
}

declare void @_ZN5blink13NGInkOverflowC1ENS0_4TypeEOS0_(%"class.blink::NGInkOverflow"*, i32, %"class.blink::NGInkOverflow"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItemD2Ev(%"class.blink::NGFragmentItem"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = zext i16 %4 to i32
  switch i32 %5, label %88 [
    i32 0, label %6
    i32 1, label %17
    i32 2, label %35
    i32 3, label %64
    i32 4, label %76
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %7, align 8
  %9 = icmp eq %"class.blink::ShapeResultView"* %8, null
  br i1 %9, label %88, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %8, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %11) #13
  %12 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %88

15:                                               ; preds = %10
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %8) #13
  %16 = bitcast %"class.blink::ShapeResultView"* %8 to i8*
  tail call void @free(i8* %16) #13
  br label %88

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %19 = bitcast %union.anon.1631* %18 to %"struct.blink::NGSvgFragmentData"**
  %20 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %19, align 8
  store %"struct.blink::NGSvgFragmentData"* null, %"struct.blink::NGSvgFragmentData"** %19, align 8
  %21 = icmp eq %"struct.blink::NGSvgFragmentData"* %20, null
  br i1 %21, label %88, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %20, i64 0, i32 0, i32 0
  %24 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %23, align 8
  %25 = icmp eq %"class.blink::ShapeResultView"* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %24, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %27) #13
  %28 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %24) #13
  %32 = bitcast %"class.blink::ShapeResultView"* %24 to i8*
  tail call void @free(i8* %32) #13
  br label %33

33:                                               ; preds = %31, %26, %22
  %34 = bitcast %"struct.blink::NGSvgFragmentData"* %20 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %88

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %37 = bitcast %"struct.blink::NGTextOffset"* %36 to %"class.WTF::StringImpl"**
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #13
  br label %53

53:                                               ; preds = %52, %49, %35
  %54 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %54, align 8
  %56 = icmp eq %"class.blink::ShapeResultView"* %55, null
  br i1 %56, label %88, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %55, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %58) #13
  %59 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %88

62:                                               ; preds = %57
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %55) #13
  %63 = bitcast %"class.blink::ShapeResultView"* %55 to i8*
  tail call void @free(i8* %63) #13
  br label %88

64:                                               ; preds = %1
  %65 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %66 = bitcast %union.anon.1631* %65 to %"class.blink::NGPhysicalLineBoxFragment"**
  %67 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %66, align 8
  %68 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %67, null
  br i1 %68, label %88, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %70) #13
  %71 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %88

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %67, i64 0, i32 0
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* %75) #13
  br label %88

76:                                               ; preds = %1
  %77 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %78 = bitcast %union.anon.1631* %77 to %"class.blink::NGPhysicalBoxFragment"**
  %79 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %78, align 8
  %80 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %79, null
  br i1 %80, label %88, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #13
  %83 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %79, i64 0, i32 0
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* %87) #13
  br label %88

88:                                               ; preds = %86, %81, %76, %74, %69, %64, %62, %57, %53, %33, %17, %15, %10, %6, %1
  %89 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 3
  %90 = load i16, i16* %2, align 8
  %91 = lshr i16 %90, 10
  %92 = and i16 %91, 7
  %93 = zext i16 %92 to i32
  %94 = tail call i32 @_ZN5blink13NGInkOverflow5ResetENS0_4TypeES1_(%"class.blink::NGInkOverflow"* %89, i32 %93, i32 2) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14NGFragmentItem11IsInlineBoxEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = icmp eq i16 %4, 4
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.1631* %7 to %"class.blink::NGPhysicalBoxFragment"**
  %9 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %8, align 8
  %10 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %9, i64 0, i32 0, i32 3
  %13 = bitcast i24* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 960
  %16 = icmp eq i32 %15, 128
  br label %17

17:                                               ; preds = %6, %1, %11
  %18 = phi i1 [ %16, %11 ], [ false, %1 ], [ false, %6 ]
  ret i1 %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14NGFragmentItem14IsAtomicInlineEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = icmp eq i16 %4, 4
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.1631* %7 to %"class.blink::NGPhysicalBoxFragment"**
  %9 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %8, align 8
  %10 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %9, i64 0, i32 0, i32 3
  %13 = bitcast i24* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 960
  %16 = icmp eq i32 %15, 384
  br label %17

17:                                               ; preds = %1, %6, %11
  %18 = phi i1 [ %16, %11 ], [ false, %6 ], [ false, %1 ]
  ret i1 %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14NGFragmentItem10IsFloatingEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = icmp eq i16 %4, 4
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.1631* %7 to %"class.blink::NGPhysicalBoxFragment"**
  %9 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %8, align 8
  %10 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %9, i64 0, i32 0, i32 3
  %13 = bitcast i24* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 960
  %16 = icmp eq i32 %15, 512
  br label %17

17:                                               ; preds = %1, %6, %11
  %18 = phi i1 [ %16, %11 ], [ false, %6 ], [ false, %1 ]
  ret i1 %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14NGFragmentItem14IsEmptyLineBoxEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 63
  %5 = icmp eq i16 %4, 11
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14NGFragmentItem20IsStyleGeneratedTextEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 6
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = tail call zeroext i1 @_ZNK5blink12LayoutObject16IsStyleGeneratedEv(%"class.blink::LayoutObject"* %8) #13
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i1 [ %9, %6 ], [ false, %1 ]
  ret i1 %11
}

declare zeroext i1 @_ZNK5blink12LayoutObject16IsStyleGeneratedEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14NGFragmentItem15IsGeneratedTextEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = icmp eq i16 %4, 2
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = and i16 %3, 6
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK5blink12LayoutObject16IsStyleGeneratedEv(%"class.blink::LayoutObject"* %11) #13
  br label %13

13:                                               ; preds = %9, %6, %1
  %14 = phi i1 [ true, %1 ], [ %12, %9 ], [ false, %6 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14NGFragmentItem12IsListMarkerEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*, i32)***
  %7 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %7, i64 92
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::LayoutObject"* nonnull %3, i32 31) #13
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItem16ConvertToSvgTextENSt3__110unique_ptrINS_17NGSvgFragmentDataENS1_14default_deleteIS3_EEEERKNS_12PhysicalRectEb(%"class.blink::NGFragmentItem"* nocapture, %"struct.blink::NGSvgFragmentData"*, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = ptrtoint %"struct.blink::NGSvgFragmentData"* %1 to i64
  %6 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %7 = zext i1 %3 to i16
  %8 = load i16, i16* %6, align 8
  %9 = shl nuw nsw i16 %7, 8
  %10 = and i16 %8, -257
  %11 = or i16 %10, %9
  store i16 %11, i16* %6, align 8
  %12 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %union.anon.1631, %union.anon.1631* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %13, align 8
  %15 = icmp eq %"class.blink::ShapeResultView"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #13
  %18 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %14) #13
  %22 = bitcast %"class.blink::ShapeResultView"* %14 to i8*
  tail call void @free(i8* %22) #13
  br label %23

23:                                               ; preds = %4, %16, %21
  %24 = bitcast %union.anon.1631* %12 to i64*
  store i64 %5, i64* %24, align 8
  %25 = load i16, i16* %6, align 8
  %26 = and i16 %25, -8
  %27 = or i16 %26, 1
  store i16 %27, i16* %6, align 8
  %28 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2
  %29 = bitcast %"struct.blink::PhysicalRect"* %28 to i8*
  %30 = bitcast %"struct.blink::PhysicalRect"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 4 %30, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink14NGFragmentItem17ObjectBoundingBoxEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::FloatRect", align 8
  %3 = alloca %"class.blink::AffineTransform", align 8
  %4 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, 7
  %7 = icmp eq i16 %6, 1
  br i1 %7, label %29, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sitofp i32 %10 to float
  %12 = fmul float %11, 1.562500e-02
  %13 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = fmul float %15, 1.562500e-02
  %17 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  %20 = fmul float %19, 1.562500e-02
  %21 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = sitofp i32 %22 to float
  %24 = fmul float %23, 1.562500e-02
  %25 = insertelement <2 x float> undef, float %12, i32 0
  %26 = insertelement <2 x float> %25, float %16, i32 1
  %27 = insertelement <2 x float> undef, float %20, i32 0
  %28 = insertelement <2 x float> %27, float %24, i32 1
  br label %61

29:                                               ; preds = %1
  %30 = bitcast %"class.blink::NGFragmentItem"* %0 to %"class.blink::LayoutSVGInlineText"**
  %31 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %31, i64 0, i32 1
  %33 = load float, float* %32, align 8
  %34 = bitcast %"class.blink::FloatRect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %36 = bitcast %union.anon.1631* %35 to %"struct.blink::NGSvgFragmentData"**
  %37 = bitcast %"class.blink::FloatRect"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -1, i64 16, i1 false)
  %38 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %36, align 8
  %39 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %38, i64 0, i32 2
  %40 = bitcast %"class.blink::FloatRect"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %40, i64 16, i1 false)
  %41 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %38, i64 0, i32 4
  %42 = load float, float* %41, align 4
  %43 = fcmp une float %42, 0.000000e+00
  br i1 %43, label %46, label %44

44:                                               ; preds = %29
  %45 = bitcast %"class.blink::FloatRect"* %2 to <2 x float>*
  br label %54

46:                                               ; preds = %29
  %47 = bitcast %"class.blink::AffineTransform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %47) #13
  call void @_ZNK5blink14NGFragmentItem31BuildSvgTransformForBoundingBoxEv(%"class.blink::AffineTransform"* nonnull sret %3, %"class.blink::NGFragmentItem"* %0)
  %48 = call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %2) #13
  %49 = extractvalue { <2 x float>, <2 x float> } %48, 0
  %50 = extractvalue { <2 x float>, <2 x float> } %48, 1
  %51 = bitcast %"class.blink::FloatRect"* %2 to <2 x float>*
  store <2 x float> %49, <2 x float>* %51, align 8
  %52 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1
  %53 = bitcast %"class.blink::FloatSize"* %52 to <2 x float>*
  store <2 x float> %50, <2 x float>* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %47) #13
  br label %54

54:                                               ; preds = %44, %46
  %55 = phi <2 x float>* [ %45, %44 ], [ %51, %46 ]
  %56 = fdiv float 1.000000e+00, %33
  call void @_ZN5blink9FloatRect5ScaleEff(%"class.blink::FloatRect"* nonnull %2, float %56, float %56) #13
  %57 = load <2 x float>, <2 x float>* %55, align 8
  %58 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1
  %59 = bitcast %"class.blink::FloatSize"* %58 to <2 x float>*
  %60 = load <2 x float>, <2 x float>* %59, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %61

61:                                               ; preds = %54, %8
  %62 = phi <2 x float> [ %26, %8 ], [ %57, %54 ]
  %63 = phi <2 x float> [ %28, %8 ], [ %60, %54 ]
  %64 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %62, 0
  %65 = insertvalue { <2 x float>, <2 x float> } %64, <2 x float> %63, 1
  ret { <2 x float>, <2 x float> } %65
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14NGFragmentItem29HasSvgTransformForBoundingBoxEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = icmp eq i16 %4, 1
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.1631* %7 to %"struct.blink::NGSvgFragmentData"**
  %9 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %8, align 8
  %10 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %9, i64 0, i32 4
  %11 = load float, float* %10, align 4
  %12 = fcmp une float %11, 0.000000e+00
  br label %13

13:                                               ; preds = %6, %1
  %14 = phi i1 [ false, %1 ], [ %12, %6 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14NGFragmentItem31BuildSvgTransformForBoundingBoxEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AffineTransform", align 8
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %6 = bitcast %union.anon.1631* %5 to %"struct.blink::NGSvgFragmentData"**
  %7 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %6, align 8
  %8 = bitcast %"class.blink::AffineTransform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %3, i64 0, i32 0, i64 4
  %10 = bitcast %"class.blink::AffineTransform"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -1, i64 48, i1 false)
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %3) #13
  %11 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %7, i64 0, i32 4
  %12 = load float, float* %11, align 4
  %13 = fcmp oeq float %12, 0.000000e+00
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* nonnull align 8 %8, i64 48, i1 false)
  br label %72

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %7, i64 0, i32 6
  %18 = load i8, i8* %17, align 4, !range !4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #13
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %4) #13
  call void @_ZNK5blink14NGFragmentItem28BuildSvgTransformForTextPathERKNS_15AffineTransformE(%"class.blink::AffineTransform"* sret %0, %"class.blink::NGFragmentItem"* %1, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %4)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #13
  br label %72

22:                                               ; preds = %16
  %23 = fpext float %12 to double
  %24 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform6RotateEd(%"class.blink::AffineTransform"* nonnull %3, double %23) #13
  %25 = bitcast %"class.blink::NGFragmentItem"* %1 to %"class.blink::LayoutSVGInlineText"**
  %26 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %26, i64 0, i32 2
  %28 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %27) #13
  %29 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %28, i64 0, i32 2
  %30 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %29, align 8
  %31 = icmp eq %"class.blink::SimpleFontData"* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %27, i64 0, i32 0
  %34 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %28, %"class.blink::FontDescription"* dereferenceable(80) %33) #13
  store %"class.blink::SimpleFontData"* %34, %"class.blink::SimpleFontData"** %29, align 8
  %35 = icmp eq %"class.blink::SimpleFontData"* %34, null
  br i1 %35, label %51, label %36

36:                                               ; preds = %22, %32
  %37 = phi %"class.blink::SimpleFontData"* [ %34, %32 ], [ %30, %22 ]
  %38 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %37, i64 0, i32 1, i32 1
  %39 = load float, float* %38, align 4
  %40 = fmul float %39, 6.400000e+01
  %41 = call float @llvm.round.f32(float %40) #13
  %42 = fcmp ult float %41, 0xC1E0000000000000
  %43 = fcmp ugt float %41, 0x41DFFFFFE0000000
  %44 = fcmp ogt float %41, 0xC1E0000000000000
  %45 = select i1 %44, float %41, float 0xC1E0000000000000
  %46 = fptosi float %45 to i32
  %47 = select i1 %42, i32 0, i32 2147483647
  %48 = select i1 %43, i32 %47, i32 %46
  %49 = sitofp i32 %48 to float
  %50 = fmul float %49, 1.562500e-02
  br label %51

51:                                               ; preds = %32, %36
  %52 = phi float [ %50, %36 ], [ 0.000000e+00, %32 ]
  %53 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %7, i64 0, i32 2, i32 0, i32 1
  %54 = load float, float* %53, align 4
  %55 = fadd float %52, %54
  %56 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %7, i64 0, i32 2, i32 0, i32 0
  %57 = load float, float* %56, align 4
  %58 = bitcast double* %9 to <2 x double>*
  %59 = load <2 x double>, <2 x double>* %58, align 8
  %60 = insertelement <2 x float> undef, float %57, i32 0
  %61 = insertelement <2 x float> %60, float %55, i32 1
  %62 = fpext <2 x float> %61 to <2 x double>
  %63 = fadd <2 x double> %59, %62
  %64 = bitcast double* %9 to <2 x double>*
  store <2 x double> %63, <2 x double>* %64, align 8
  %65 = load float, float* %56, align 4
  %66 = fsub float -0.000000e+00, %65
  %67 = fpext float %66 to double
  %68 = fsub float -0.000000e+00, %55
  %69 = fpext float %68 to double
  %70 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* nonnull %3, double %67, double %69) #13
  %71 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* nonnull align 8 %8, i64 48, i1 false)
  br label %72

72:                                               ; preds = %51, %20, %14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #13
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14NGFragmentItem21HasNonVisibleOverflowEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = icmp eq i16 %4, 4
  br i1 %5, label %6, label %28

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.1631* %7 to %"class.blink::NGPhysicalBoxFragment"**
  %9 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %8, align 8
  %10 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %9, i64 0, i32 0, i32 3
  %13 = bitcast i24* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 64
  %16 = icmp eq i32 %15, 0
  %17 = and i32 %14, 960
  %18 = icmp ne i32 %17, 256
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %28

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %9, i64 0, i32 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 4
  %24 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %23 to i96*
  %25 = load i96, i96* %24, align 4
  %26 = and i96 %25, 8589934592
  %27 = icmp ne i96 %26, 0
  br label %28

28:                                               ; preds = %1, %6, %11, %20
  %29 = phi i1 [ false, %11 ], [ %27, %20 ], [ false, %6 ], [ false, %1 ]
  ret i1 %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14NGFragmentItem17IsScrollContainerEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = icmp eq i16 %4, 4
  br i1 %5, label %6, label %40

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.1631* %7 to %"class.blink::NGPhysicalBoxFragment"**
  %9 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %8, align 8
  %10 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %9, i64 0, i32 0, i32 3
  %13 = bitcast i24* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 64
  %16 = icmp eq i32 %15, 0
  %17 = and i32 %14, 960
  %18 = icmp ne i32 %17, 256
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %40

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %9, i64 0, i32 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 4
  %24 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %23 to i96*
  %25 = load i96, i96* %24, align 4
  %26 = and i96 %25, 8589934592
  %27 = icmp eq i96 %26, 0
  br i1 %27, label %40, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 5, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 9
  %32 = bitcast [20 x i8]* %31 to i160*
  %33 = load i160, i160* %32, align 8
  %34 = lshr i160 %33, 74
  %35 = trunc i160 %34 to i32
  %36 = and i32 %35, 7
  %37 = icmp ne i32 %36, 2
  %38 = icmp ne i32 %36, 5
  %39 = and i1 %37, %38
  br label %40

40:                                               ; preds = %28, %20, %11, %1, %6
  %41 = phi i1 [ false, %6 ], [ false, %1 ], [ %39, %28 ], [ false, %20 ], [ false, %11 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14NGFragmentItem20HasSelfPaintingLayerEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = icmp eq i16 %4, 4
  br i1 %5, label %6, label %31

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.1631* %7 to %"class.blink::NGPhysicalBoxFragment"**
  %9 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %8, align 8
  %10 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %9, null
  br i1 %10, label %31, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %9, i64 0, i32 0, i32 3
  %13 = bitcast i24* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 64
  %16 = icmp eq i32 %15, 0
  %17 = and i32 %14, 960
  %18 = icmp ne i32 %17, 256
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %31

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %9, i64 0, i32 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 4
  %24 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %23 to i96*
  %25 = load i96, i96* %24, align 4
  %26 = and i96 %25, 4294967296
  %27 = icmp eq i96 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %20
  %29 = bitcast %"class.blink::LayoutObject"* %22 to %"class.blink::LayoutBoxModelObject"*
  %30 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %29) #13
  br label %31

31:                                               ; preds = %28, %20, %11, %1, %6
  %32 = phi i1 [ false, %6 ], [ false, %1 ], [ false, %11 ], [ %30, %28 ], [ false, %20 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItem7BoxItemC2ERKS1_(%"struct.blink::NGFragmentItem::BoxItem"* nocapture, %"struct.blink::NGFragmentItem::BoxItem"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::NGFragmentItem::BoxItem", %"struct.blink::NGFragmentItem::BoxItem"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %3, align 8
  %5 = tail call %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink21NGPhysicalBoxFragment10PostLayoutEv(%"class.blink::NGPhysicalBoxFragment"* %4) #13
  %6 = getelementptr inbounds %"struct.blink::NGFragmentItem::BoxItem", %"struct.blink::NGFragmentItem::BoxItem"* %0, i64 0, i32 0, i32 0
  store %"class.blink::NGPhysicalBoxFragment"* %5, %"class.blink::NGPhysicalBoxFragment"** %6, align 8
  %7 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %5, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %9) #13
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"struct.blink::NGFragmentItem::BoxItem", %"struct.blink::NGFragmentItem::BoxItem"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.blink::NGFragmentItem::BoxItem", %"struct.blink::NGFragmentItem::BoxItem"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 8
  ret void
}

declare %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink21NGPhysicalBoxFragment10PostLayoutEv(%"class.blink::NGPhysicalBoxFragment"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItem7BoxItemC2E13scoped_refptrIKNS_21NGPhysicalBoxFragmentEEj(%"struct.blink::NGFragmentItem::BoxItem"* nocapture, %"class.blink::NGPhysicalBoxFragment"*, i32) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::NGPhysicalBoxFragment"* %1 to i64
  %5 = bitcast %"struct.blink::NGFragmentItem::BoxItem"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.blink::NGFragmentItem::BoxItem", %"struct.blink::NGFragmentItem::BoxItem"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink14NGFragmentItem7BoxItem10PostLayoutEv(%"struct.blink::NGFragmentItem::BoxItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGFragmentItem::BoxItem", %"struct.blink::NGFragmentItem::BoxItem"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %2, align 8
  %4 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink21NGPhysicalBoxFragment10PostLayoutEv(%"class.blink::NGPhysicalBoxFragment"* nonnull %3) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.blink::NGPhysicalBoxFragment"* [ %6, %5 ], [ null, %1 ]
  ret %"class.blink::NGPhysicalBoxFragment"* %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5blink14NGFragmentItem27LayoutObjectWillBeDestroyedEv(%"class.blink::NGFragmentItem"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %4 = load i16, i16* %3, align 8
  %5 = and i16 %4, 7
  %6 = icmp eq i16 %5, 4
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %9 = bitcast %union.anon.1631* %8 to %"class.blink::NGPhysicalBoxFragment"**
  %10 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %9, align 8
  %11 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %10, i64 0, i32 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %13, align 8
  br label %14

14:                                               ; preds = %1, %7, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK5blink14NGFragmentItem23LayoutObjectWillBeMovedEv(%"class.blink::NGFragmentItem"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink14NGFragmentItem15SelfInkOverflowEv(%"class.blink::NGFragmentItem"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = icmp eq i16 %4, 4
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.1631* %7 to %"class.blink::NGPhysicalBoxFragment"**
  %9 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %8, align 8
  %10 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = tail call { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment15SelfInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"* nonnull %9) #13
  %13 = extractvalue { i64, i64 } %12, 0
  %14 = extractvalue { i64, i64 } %12, 1
  br label %31

15:                                               ; preds = %1, %6
  %16 = and i16 %3, 7168
  %17 = icmp eq i16 %16, 2048
  br i1 %17, label %18, label %22

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %20 = bitcast %"struct.blink::PhysicalSize"* %19 to i64*
  %21 = load i64, i64* %20, align 4
  br label %31

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 3
  %24 = lshr i16 %3, 10
  %25 = and i16 %24, 7
  %26 = zext i16 %25 to i32
  %27 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %28 = tail call { i64, i64 } @_ZNK5blink13NGInkOverflow4SelfENS0_4TypeERKNS_12PhysicalSizeE(%"class.blink::NGInkOverflow"* %23, i32 %26, %"struct.blink::PhysicalSize"* dereferenceable(8) %27) #13
  %29 = extractvalue { i64, i64 } %28, 0
  %30 = extractvalue { i64, i64 } %28, 1
  br label %31

31:                                               ; preds = %11, %22, %18
  %32 = phi i64 [ %29, %22 ], [ 0, %18 ], [ %13, %11 ]
  %33 = phi i64 [ %30, %22 ], [ %21, %18 ], [ %14, %11 ]
  %34 = insertvalue { i64, i64 } undef, i64 %32, 0
  %35 = insertvalue { i64, i64 } %34, i64 %33, 1
  ret { i64, i64 } %35
}

declare { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment15SelfInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink13NGInkOverflow4SelfENS0_4TypeERKNS_12PhysicalSizeE(%"class.blink::NGInkOverflow"*, i32, %"struct.blink::PhysicalSize"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink14NGFragmentItem19ContentsInkOverflowEv(%"class.blink::NGFragmentItem"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = icmp eq i16 %4, 4
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.1631* %7 to %"class.blink::NGPhysicalBoxFragment"**
  %9 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %8, align 8
  %10 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = tail call { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment19ContentsInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"* nonnull %9) #13
  %13 = extractvalue { i64, i64 } %12, 0
  %14 = extractvalue { i64, i64 } %12, 1
  br label %27

15:                                               ; preds = %1, %6
  %16 = and i16 %3, 7168
  %17 = icmp eq i16 %16, 2048
  br i1 %17, label %27, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 3
  %20 = lshr i16 %3, 10
  %21 = and i16 %20, 7
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %24 = tail call { i64, i64 } @_ZNK5blink13NGInkOverflow8ContentsENS0_4TypeERKNS_12PhysicalSizeE(%"class.blink::NGInkOverflow"* %19, i32 %22, %"struct.blink::PhysicalSize"* dereferenceable(8) %23) #13
  %25 = extractvalue { i64, i64 } %24, 0
  %26 = extractvalue { i64, i64 } %24, 1
  br label %27

27:                                               ; preds = %15, %11, %18
  %28 = phi i64 [ %25, %18 ], [ %13, %11 ], [ 0, %15 ]
  %29 = phi i64 [ %26, %18 ], [ %14, %11 ], [ 0, %15 ]
  %30 = insertvalue { i64, i64 } undef, i64 %28, 0
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1
  ret { i64, i64 } %31
}

declare { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment19ContentsInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink13NGInkOverflow8ContentsENS0_4TypeERKNS_12PhysicalSizeE(%"class.blink::NGInkOverflow"*, i32, %"struct.blink::PhysicalSize"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink14NGFragmentItem11InkOverflowEv(%"class.blink::NGFragmentItem"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = icmp eq i16 %4, 4
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.1631* %7 to %"class.blink::NGPhysicalBoxFragment"**
  %9 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %8, align 8
  %10 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = tail call { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment11InkOverflowEv(%"class.blink::NGPhysicalBoxFragment"* nonnull %9) #13
  %13 = extractvalue { i64, i64 } %12, 0
  %14 = extractvalue { i64, i64 } %12, 1
  br label %66

15:                                               ; preds = %1, %6
  %16 = and i16 %3, 7168
  %17 = icmp eq i16 %16, 2048
  br i1 %17, label %18, label %22

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %20 = bitcast %"struct.blink::PhysicalSize"* %19 to i64*
  %21 = load i64, i64* %20, align 4
  br label %66

22:                                               ; preds = %15
  %23 = add nsw i16 %4, -3
  %24 = icmp ult i16 %23, 2
  br i1 %24, label %25, label %48

25:                                               ; preds = %22
  br i1 %5, label %26, label %57

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %28 = bitcast %union.anon.1631* %27 to %"class.blink::NGPhysicalBoxFragment"**
  %29 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %28, align 8
  %30 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %29, null
  br i1 %30, label %57, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %29, i64 0, i32 0, i32 3
  %33 = bitcast i24* %32 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 64
  %36 = icmp eq i32 %35, 0
  %37 = and i32 %34, 960
  %38 = icmp ne i32 %37, 256
  %39 = and i1 %36, %38
  br i1 %39, label %40, label %57

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %29, i64 0, i32 0, i32 1
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 4
  %44 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %43 to i96*
  %45 = load i96, i96* %44, align 4
  %46 = and i96 %45, 8589934592
  %47 = icmp eq i96 %46, 0
  br i1 %47, label %57, label %48

48:                                               ; preds = %40, %22
  %49 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 3
  %50 = lshr i16 %3, 10
  %51 = and i16 %50, 7
  %52 = zext i16 %51 to i32
  %53 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %54 = tail call { i64, i64 } @_ZNK5blink13NGInkOverflow4SelfENS0_4TypeERKNS_12PhysicalSizeE(%"class.blink::NGInkOverflow"* %49, i32 %52, %"struct.blink::PhysicalSize"* dereferenceable(8) %53) #13
  %55 = extractvalue { i64, i64 } %54, 0
  %56 = extractvalue { i64, i64 } %54, 1
  br label %66

57:                                               ; preds = %40, %25, %26, %31
  %58 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 3
  %59 = lshr i16 %3, 10
  %60 = and i16 %59, 7
  %61 = zext i16 %60 to i32
  %62 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %63 = tail call { i64, i64 } @_ZNK5blink13NGInkOverflow15SelfAndContentsENS0_4TypeERKNS_12PhysicalSizeE(%"class.blink::NGInkOverflow"* %58, i32 %61, %"struct.blink::PhysicalSize"* dereferenceable(8) %62) #13
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  br label %66

66:                                               ; preds = %11, %57, %48, %18
  %67 = phi i64 [ %55, %48 ], [ %64, %57 ], [ 0, %18 ], [ %13, %11 ]
  %68 = phi i64 [ %56, %48 ], [ %65, %57 ], [ %21, %18 ], [ %14, %11 ]
  %69 = insertvalue { i64, i64 } undef, i64 %67, 0
  %70 = insertvalue { i64, i64 } %69, i64 %68, 1
  ret { i64, i64 } %70
}

declare { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment11InkOverflowEv(%"class.blink::NGPhysicalBoxFragment"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink13NGInkOverflow15SelfAndContentsENS0_4TypeERKNS_12PhysicalSizeE(%"class.blink::NGInkOverflow"*, i32, %"struct.blink::PhysicalSize"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ShapeResultView"* @_ZNK5blink14NGFragmentItem15TextShapeResultEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = zext i16 %4 to i32
  switch i32 %5, label %18 [
    i32 0, label %6
    i32 1, label %8
    i32 2, label %13
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %15

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %10 = bitcast %union.anon.1631* %9 to %"struct.blink::NGSvgFragmentData"**
  %11 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %10, align 8
  %12 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %11, i64 0, i32 0, i32 0
  br label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %6, %8, %13
  %16 = phi %"class.blink::ShapeResultView"** [ %14, %13 ], [ %12, %8 ], [ %7, %6 ]
  %17 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %16, align 8
  br label %18

18:                                               ; preds = %15, %1
  %19 = phi %"class.blink::ShapeResultView"* [ null, %1 ], [ %17, %15 ]
  ret %"class.blink::ShapeResultView"* %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink14NGFragmentItem10TextOffsetEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = zext i16 %4 to i32
  switch i32 %5, label %29 [
    i32 0, label %6
    i32 1, label %12
    i32 2, label %21
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.blink::NGTextOffset"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %9, 32
  %11 = trunc i64 %10 to i32
  br label %29

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %14 = bitcast %union.anon.1631* %13 to %"struct.blink::NGSvgFragmentData"**
  %15 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %14, align 8
  %16 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %15, i64 0, i32 1
  %17 = bitcast %"struct.blink::NGTextOffset"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = lshr i64 %18, 32
  %20 = trunc i64 %19 to i32
  br label %29

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast %"struct.blink::NGTextOffset"* %22 to %"class.WTF::StringImpl"**
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  br label %29

29:                                               ; preds = %1, %26, %21, %12, %6
  %30 = phi i32 [ %11, %6 ], [ %20, %12 ], [ %28, %26 ], [ 0, %21 ], [ 0, %1 ]
  %31 = phi i64 [ %9, %6 ], [ %18, %12 ], [ 0, %26 ], [ 0, %21 ], [ 0, %1 ]
  %32 = zext i32 %30 to i64
  %33 = shl nuw i64 %32, 32
  %34 = and i64 %31, 4294967295
  %35 = or i64 %33, %34
  ret i64 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14NGFragmentItem22StartOffsetInContainerERKNS_14NGInlineCursorE(%"class.blink::NGFragmentItem"* nocapture readnone, %"class.blink::NGInlineCursor"* nocapture readonly dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NGInlineCursor", align 8
  %4 = bitcast %"class.blink::NGInlineCursor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %4) #13
  %5 = bitcast %"class.blink::NGInlineCursor"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %5, i64 112, i1 false)
  call void @_ZN5blink14NGInlineCursor14MoveToPreviousEv(%"class.blink::NGInlineCursor"* nonnull %3) #13
  %6 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %6, align 8
  %8 = icmp eq %"class.blink::NGFragmentItem"* %7, null
  br i1 %8, label %56, label %9

9:                                                ; preds = %2, %53
  %10 = phi %"class.blink::NGFragmentItem"* [ %54, %53 ], [ %7, %2 ]
  %11 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %10, i64 0, i32 6
  %12 = load i16, i16* %11, align 8
  %13 = and i16 %12, 7
  %14 = icmp ugt i16 %13, 1
  br i1 %14, label %40, label %15

15:                                               ; preds = %9
  %16 = zext i16 %13 to i32
  switch i32 %16, label %56 [
    i32 0, label %17
    i32 1, label %23
    i32 2, label %32
  ]

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %10, i64 0, i32 1, i32 0, i32 1
  %19 = bitcast %"struct.blink::NGTextOffset"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 32
  %22 = trunc i64 %21 to i32
  br label %56

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %10, i64 0, i32 1
  %25 = bitcast %union.anon.1631* %24 to %"struct.blink::NGSvgFragmentData"**
  %26 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %25, align 8
  %27 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %26, i64 0, i32 1
  %28 = bitcast %"struct.blink::NGTextOffset"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %29, 32
  %31 = trunc i64 %30 to i32
  br label %56

32:                                               ; preds = %15
  %33 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %10, i64 0, i32 1, i32 0, i32 1
  %34 = bitcast %"struct.blink::NGTextOffset"* %33 to %"class.WTF::StringImpl"**
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %56, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  br label %56

40:                                               ; preds = %9
  %41 = icmp eq i16 %13, 4
  br i1 %41, label %42, label %53

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %10, i64 0, i32 1
  %44 = bitcast %union.anon.1631* %43 to %"class.blink::NGPhysicalBoxFragment"**
  %45 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %44, align 8
  %46 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %45, i64 0, i32 0, i32 3
  %49 = bitcast i24* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 960
  %52 = icmp eq i32 %51, 128
  br i1 %52, label %53, label %56

53:                                               ; preds = %47, %40
  call void @_ZN5blink14NGInlineCursor14MoveToPreviousEv(%"class.blink::NGInlineCursor"* nonnull %3) #13
  %54 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %6, align 8
  %55 = icmp eq %"class.blink::NGFragmentItem"* %54, null
  br i1 %55, label %56, label %9

56:                                               ; preds = %47, %42, %53, %2, %37, %32, %23, %17, %15
  %57 = phi i32 [ 0, %15 ], [ 0, %32 ], [ %39, %37 ], [ %31, %23 ], [ %22, %17 ], [ 0, %2 ], [ 0, %53 ], [ 0, %42 ], [ 0, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %4) #13
  ret i32 %57
}

declare void @_ZN5blink14NGInlineCursor14MoveToPreviousEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14NGFragmentItem4TextERKNS_15NGFragmentItemsE(%"class.WTF::StringView"* noalias nocapture sret, %"class.blink::NGFragmentItem"* nocapture readonly, %"class.blink::NGFragmentItems"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 6
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, 7
  %7 = zext i16 %6 to i32
  switch i32 %7, label %147 [
    i32 0, label %8
    i32 1, label %53
    i32 2, label %101
  ]

8:                                                ; preds = %3
  %9 = and i16 %5, 192
  %10 = icmp eq i16 %9, 64
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 0
  br label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  %17 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 0
  %19 = select i1 %16, %"class.WTF::String"* %18, %"class.WTF::String"* %17
  br label %20

20:                                               ; preds = %13, %11
  %21 = phi %"class.WTF::String"* [ %12, %11 ], [ %19, %13 ]
  %22 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  br i1 %26, label %49, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = sub i32 %30, %23
  store i32 %31, i32* %27, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 1
  br i1 %36, label %43, label %38

38:                                               ; preds = %28
  %39 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  %40 = zext i32 %23 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  store i8* %41, i8** %42, align 8
  br label %152

43:                                               ; preds = %28
  %44 = bitcast %"class.WTF::StringImpl"* %37 to i16*
  %45 = zext i32 %23 to i64
  %46 = getelementptr inbounds i16, i16* %44, i64 %45
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  %48 = bitcast i8** %47 to i16**
  store i16* %46, i16** %48, align 8
  br label %152

49:                                               ; preds = %20
  store i32 0, i32* %27, align 8
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  store i8* null, i8** %50, align 8
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %52 = bitcast %"class.WTF::StringView"* %0 to i64*
  store i64 %51, i64* %52, align 8
  br label %152

53:                                               ; preds = %3
  %54 = and i16 %5, 192
  %55 = icmp eq i16 %54, 64
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 0
  br label %65

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 1, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  %62 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 1
  %63 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 0
  %64 = select i1 %61, %"class.WTF::String"* %63, %"class.WTF::String"* %62
  br label %65

65:                                               ; preds = %58, %56
  %66 = phi %"class.WTF::String"* [ %57, %56 ], [ %64, %58 ]
  %67 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %68 = bitcast %union.anon.1631* %67 to %"struct.blink::NGSvgFragmentData"**
  %69 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %68, align 8
  %70 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %69, i64 0, i32 1, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  br i1 %74, label %97, label %76

76:                                               ; preds = %65
  %77 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %69, i64 0, i32 1, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = sub i32 %78, %71
  store i32 %79, i32* %75, align 8
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 1
  br i1 %84, label %91, label %86

86:                                               ; preds = %76
  %87 = bitcast %"class.WTF::StringImpl"* %85 to i8*
  %88 = zext i32 %71 to i64
  %89 = getelementptr inbounds i8, i8* %87, i64 %88
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  store i8* %89, i8** %90, align 8
  br label %152

91:                                               ; preds = %76
  %92 = bitcast %"class.WTF::StringImpl"* %85 to i16*
  %93 = zext i32 %71 to i64
  %94 = getelementptr inbounds i16, i16* %92, i64 %93
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  %96 = bitcast i8** %95 to i16**
  store i16* %94, i16** %96, align 8
  br label %152

97:                                               ; preds = %65
  store i32 0, i32* %75, align 8
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  store i8* null, i8** %98, align 8
  %99 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %100 = bitcast %"class.WTF::StringView"* %0 to i64*
  store i64 %99, i64* %100, align 8
  br label %152

101:                                              ; preds = %3
  %102 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  %103 = bitcast %"struct.blink::NGTextOffset"* %102 to %"class.WTF::StringImpl"**
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %123, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %128

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i33
  %115 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %114, i33 1) #13
  %116 = extractvalue { i33, i1 } %115, 1
  %117 = extractvalue { i33, i1 } %115, 0
  %118 = icmp slt i33 %117, 0
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %121, !prof !2

120:                                              ; preds = %111
  tail call void @llvm.trap() #13
  unreachable

121:                                              ; preds = %111
  %122 = trunc i33 %117 to i32
  store i32 %122, i32* %112, align 4
  br label %128

123:                                              ; preds = %101
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  store i8* null, i8** %124, align 8
  %125 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %126 = bitcast %"class.WTF::StringView"* %0 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  store i32 0, i32* %127, align 8
  br label %152

128:                                              ; preds = %106, %121
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %129, align 8
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 1
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  %134 = bitcast i8** %133 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %134, align 8
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  store i32 %131, i32* %135, align 8
  %136 = load atomic i32, i32* %107 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %128
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %128
  %144 = phi i32 [ %142, %141 ], [ %140, %128 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %152

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #13
  br label %152

147:                                              ; preds = %3
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  store i32 0, i32* %148, align 8
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  store i8* null, i8** %149, align 8
  %150 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %151 = bitcast %"class.WTF::StringView"* %0 to i64*
  store i64 %150, i64* %151, align 8
  br label %152

152:                                              ; preds = %146, %143, %123, %97, %91, %86, %49, %43, %38, %147
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5blink14NGFragmentItem13TextPaintInfoERKNS_15NGFragmentItemsE(%"struct.blink::NGTextFragmentPaintInfo"* noalias nocapture sret, %"class.blink::NGFragmentItem"* nocapture readonly, %"class.blink::NGFragmentItems"* nocapture readonly dereferenceable(24)) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 6
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, 7
  %7 = zext i16 %6 to i32
  switch i32 %7, label %94 [
    i32 0, label %8
    i32 1, label %50
  ]

8:                                                ; preds = %3
  %9 = and i16 %5, 192
  %10 = icmp eq i16 %9, 64
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 0
  br label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  %17 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 0
  %19 = select i1 %16, %"class.WTF::String"* %18, %"class.WTF::String"* %17
  br label %20

20:                                               ; preds = %13, %11
  %21 = phi %"class.WTF::String"* [ %12, %11 ], [ %19, %13 ]
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 1
  store i8* null, i8** %26, align 8
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = bitcast %"struct.blink::NGTextFragmentPaintInfo"* %0 to i64*
  store i64 %27, i64* %28, align 8
  br label %36

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  %34 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 1
  %35 = bitcast i8** %34 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %35, align 8
  br label %36

36:                                               ; preds = %25, %29
  %37 = phi i32 [ %32, %29 ], [ 0, %25 ]
  %38 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 2
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 1
  %40 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %39, align 8
  %42 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 2
  %43 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1, i32 1
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %42, align 4
  %45 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 3
  %46 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %47 = bitcast %"class.blink::ShapeResultView"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.blink::ShapeResultView"** %45 to i64*
  store i64 %48, i64* %49, align 8
  br label %132

50:                                               ; preds = %3
  %51 = and i16 %5, 192
  %52 = icmp eq i16 %51, 64
  br i1 %52, label %55, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 0
  br label %62

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 1, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  %59 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 1
  %60 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %2, i64 0, i32 0
  %61 = select i1 %58, %"class.WTF::String"* %60, %"class.WTF::String"* %59
  br label %62

62:                                               ; preds = %55, %53
  %63 = phi %"class.WTF::String"* [ %54, %53 ], [ %61, %55 ]
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %67, label %71

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 1
  store i8* null, i8** %68, align 8
  %69 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %70 = bitcast %"struct.blink::NGTextFragmentPaintInfo"* %0 to i64*
  store i64 %69, i64* %70, align 8
  br label %78

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %72, align 8
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 1
  %76 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i8** %76 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %77, align 8
  br label %78

78:                                               ; preds = %67, %71
  %79 = phi i32 [ %74, %71 ], [ 0, %67 ]
  %80 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 2
  store i32 %79, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 1
  %82 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %83 = bitcast %union.anon.1631* %82 to %"struct.blink::NGSvgFragmentData"**
  %84 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %83, align 8
  %85 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %84, i64 0, i32 1, i32 0
  %86 = load i32, i32* %85, align 8
  store i32 %86, i32* %81, align 8
  %87 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 2
  %88 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %84, i64 0, i32 1, i32 1
  %89 = load i32, i32* %88, align 4
  store i32 %89, i32* %87, align 4
  %90 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 3
  %91 = bitcast %"struct.blink::NGSvgFragmentData"* %84 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.blink::ShapeResultView"** %90 to i64*
  store i64 %92, i64* %93, align 8
  br label %132

94:                                               ; preds = %3
  %95 = icmp eq i16 %6, 2
  br i1 %95, label %96, label %125

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  %98 = bitcast %"struct.blink::NGTextOffset"* %97 to %"class.WTF::StringImpl"**
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %101, label %107

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 1
  store i8* null, i8** %102, align 8
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %104 = bitcast %"struct.blink::NGTextFragmentPaintInfo"* %0 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %105, align 8
  %106 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 1
  store i32 0, i32* %106, align 8
  br label %117

107:                                              ; preds = %96
  %108 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 1
  %112 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 1
  %113 = bitcast i8** %112 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %111, %"class.WTF::StringImpl"** %113, align 8
  %114 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 2
  store i32 %110, i32* %114, align 8
  %115 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 1
  store i32 0, i32* %115, align 8
  %116 = load i32, i32* %109, align 4
  br label %117

117:                                              ; preds = %101, %107
  %118 = phi i32 [ %116, %107 ], [ 0, %101 ]
  %119 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 2
  store i32 %118, i32* %119, align 4
  %120 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 3
  %121 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %122 = bitcast %"class.blink::ShapeResultView"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.blink::ShapeResultView"** %120 to i64*
  store i64 %123, i64* %124, align 8
  br label %132

125:                                              ; preds = %94
  %126 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %126, align 8
  %127 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 0, i32 1
  store i8* null, i8** %127, align 8
  %128 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %129 = bitcast %"struct.blink::NGTextFragmentPaintInfo"* %0 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %0, i64 0, i32 1
  %131 = bitcast i32* %130 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 16, i1 false)
  br label %132

132:                                              ; preds = %125, %117, %78, %36
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK5blink14NGFragmentItem13BaseDirectionEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = lshr i16 %3, 9
  %5 = trunc i16 %4 to i8
  %6 = and i8 %5, 1
  ret i8 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK5blink14NGFragmentItem17ResolvedDirectionEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = lshr i16 %3, 9
  %5 = trunc i16 %4 to i8
  %6 = and i8 %5, 1
  ret i8 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14NGFragmentItem23HasSvgTransformForPaintEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = icmp eq i16 %4, 1
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.1631* %7 to %"struct.blink::NGSvgFragmentData"**
  %9 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %8, align 8
  %10 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %9, i64 0, i32 3
  %11 = load float, float* %10, align 8
  %12 = fcmp une float %11, 1.000000e+00
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %9, i64 0, i32 4
  %15 = load float, float* %14, align 4
  %16 = fcmp une float %15, 0.000000e+00
  br label %17

17:                                               ; preds = %6, %13, %1
  %18 = phi i1 [ false, %1 ], [ true, %6 ], [ %16, %13 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14NGFragmentItem25BuildSvgTransformForPaintEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AffineTransform", align 8
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = alloca %"class.blink::AffineTransform", align 8
  %6 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %7 = bitcast %union.anon.1631* %6 to %"struct.blink::NGSvgFragmentData"**
  %8 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %8, i64 0, i32 6
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %8, i64 0, i32 4
  %14 = load float, float* %13, align 4
  %15 = fcmp oeq float %14, 0.000000e+00
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @_ZNK5blink14NGFragmentItem32BuildSvgTransformForLengthAdjustEv(%"class.blink::AffineTransform"* sret %0, %"class.blink::NGFragmentItem"* %1)
  br label %29

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::AffineTransform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #13
  call void @_ZNK5blink14NGFragmentItem32BuildSvgTransformForLengthAdjustEv(%"class.blink::AffineTransform"* nonnull sret %3, %"class.blink::NGFragmentItem"* %1)
  call void @_ZNK5blink14NGFragmentItem28BuildSvgTransformForTextPathERKNS_15AffineTransformE(%"class.blink::AffineTransform"* sret %0, %"class.blink::NGFragmentItem"* %1, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %3)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #13
  br label %29

19:                                               ; preds = %2
  %20 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %20) #13
  %21 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -1, i64 48, i1 false)
  call void @_ZNK5blink14NGFragmentItem31BuildSvgTransformForBoundingBoxEv(%"class.blink::AffineTransform"* nonnull sret %4, %"class.blink::NGFragmentItem"* %1)
  %22 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %22) #13
  %23 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -1, i64 48, i1 false)
  call void @_ZNK5blink14NGFragmentItem32BuildSvgTransformForLengthAdjustEv(%"class.blink::AffineTransform"* nonnull sret %5, %"class.blink::NGFragmentItem"* %1)
  %24 = call zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"* nonnull %5) #13
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform11PreMultiplyERKS0_(%"class.blink::AffineTransform"* nonnull %4, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %5) #13
  br label %27

27:                                               ; preds = %25, %19
  %28 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %20, i64 48, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %20) #13
  br label %29

29:                                               ; preds = %27, %17, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14NGFragmentItem32BuildSvgTransformForLengthAdjustEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %4 = bitcast %union.anon.1631* %3 to %"struct.blink::NGSvgFragmentData"**
  %5 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 0
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 6
  %9 = load i16, i16* %8, align 8
  %10 = lshr i16 %9, 6
  %11 = and i16 %10, 3
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  br label %19

16:                                               ; preds = %2
  %17 = zext i16 %11 to i32
  %18 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %7, i32 %17) #13
  br label %19

19:                                               ; preds = %13, %16
  %20 = phi %"class.blink::ComputedStyle"* [ %15, %13 ], [ %18, %16 ]
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = and i160 %23, 15211807202738752817960438464512
  %25 = icmp eq i160 %24, 0
  %26 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 -1, i64 48, i1 false)
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %0) #13
  %27 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %5, i64 0, i32 3
  %28 = load float, float* %27, align 8
  %29 = fcmp une float %28, 1.000000e+00
  br i1 %29, label %30, label %60

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %5, i64 0, i32 6
  %32 = load i8, i8* %31, align 4, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %5, i64 0, i32 4
  %36 = load float, float* %35, align 4
  %37 = fcmp une float %36, 0.000000e+00
  br label %38

38:                                               ; preds = %30, %34
  %39 = phi i1 [ false, %30 ], [ %37, %34 ]
  br i1 %25, label %40, label %50

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %5, i64 0, i32 2, i32 0, i32 0
  %42 = load float, float* %41, align 4
  %43 = fpext float %28 to double
  br i1 %39, label %48, label %44

44:                                               ; preds = %40
  %45 = fmul float %28, %42
  %46 = fsub float %42, %45
  %47 = fpext float %46 to double
  br label %48

48:                                               ; preds = %40, %44
  %49 = phi double [ %47, %44 ], [ 0.000000e+00, %40 ]
  tail call void @_ZN5blink15AffineTransform9SetMatrixEdddddd(%"class.blink::AffineTransform"* %0, double %43, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double %49, double 0.000000e+00) #13
  br label %60

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %5, i64 0, i32 2, i32 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = fpext float %28 to double
  br i1 %39, label %58, label %54

54:                                               ; preds = %50
  %55 = fmul float %28, %52
  %56 = fsub float %52, %55
  %57 = fpext float %56 to double
  br label %58

58:                                               ; preds = %50, %54
  %59 = phi double [ %57, %54 ], [ 0.000000e+00, %50 ]
  tail call void @_ZN5blink15AffineTransform9SetMatrixEdddddd(%"class.blink::AffineTransform"* %0, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, double %53, double 0.000000e+00, double %59) #13
  br label %60

60:                                               ; preds = %48, %58, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14NGFragmentItem28BuildSvgTransformForTextPathERKNS_15AffineTransformE(%"class.blink::AffineTransform"* noalias sret, %"class.blink::NGFragmentItem"* nocapture readonly, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %5 = bitcast %union.anon.1631* %4 to %"struct.blink::NGSvgFragmentData"**
  %6 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %0, i64 0, i32 0, i64 4
  %8 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -1, i64 48, i1 false)
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %0) #13
  %9 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %6, i64 0, i32 4
  %10 = load float, float* %9, align 4
  %11 = fpext float %10 to double
  %12 = tail call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform6RotateEd(%"class.blink::AffineTransform"* %0, double %11) #13
  %13 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 0
  %14 = bitcast %"class.blink::NGFragmentItem"* %1 to %"class.blink::LayoutSVGInlineText"**
  %15 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %15, i64 0, i32 2
  %17 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %16) #13
  %18 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %17, i64 0, i32 2
  %19 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %18, align 8
  %20 = icmp eq %"class.blink::SimpleFontData"* %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %16, i64 0, i32 0
  %23 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %17, %"class.blink::FontDescription"* dereferenceable(80) %22) #13
  store %"class.blink::SimpleFontData"* %23, %"class.blink::SimpleFontData"** %18, align 8
  br label %24

24:                                               ; preds = %3, %21
  %25 = phi %"class.blink::SimpleFontData"* [ %19, %3 ], [ %23, %21 ]
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %27 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 6
  %28 = load i16, i16* %27, align 8
  %29 = lshr i16 %28, 6
  %30 = and i16 %29, 3
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  br label %38

35:                                               ; preds = %24
  %36 = zext i16 %30 to i32
  %37 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %26, i32 %36) #13
  br label %38

38:                                               ; preds = %32, %35
  %39 = phi %"class.blink::ComputedStyle"* [ %34, %32 ], [ %37, %35 ]
  %40 = tail call i32 @_ZNK5blink13ComputedStyle15GetFontBaselineEv(%"class.blink::ComputedStyle"* %39) #13
  %41 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %6, i64 0, i32 2, i32 0, i32 0
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %6, i64 0, i32 2, i32 0, i32 1
  %44 = load float, float* %43, align 4
  %45 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %46 = load i16, i16* %27, align 8
  %47 = lshr i16 %46, 6
  %48 = and i16 %47, 3
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 5, i32 0
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %51, align 8
  br label %56

53:                                               ; preds = %38
  %54 = zext i16 %48 to i32
  %55 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %45, i32 %54) #13
  br label %56

56:                                               ; preds = %50, %53
  %57 = phi %"class.blink::ComputedStyle"* [ %52, %50 ], [ %55, %53 ]
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 9
  %59 = bitcast [20 x i8]* %58 to i160*
  %60 = load i160, i160* %59, align 8
  %61 = and i160 %60, 15211807202738752817960438464512
  %62 = icmp eq i160 %61, 0
  %63 = icmp eq i32 %40, 0
  br i1 %62, label %64, label %93

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %25, i64 0, i32 1, i32 1
  %66 = load float, float* %65, align 4
  br i1 %63, label %72, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %25, i64 0, i32 1, i32 2
  %69 = load float, float* %68, align 4
  %70 = fadd float %66, %69
  %71 = fmul float %70, 5.000000e-01
  br label %72

72:                                               ; preds = %64, %67
  %73 = phi float [ %71, %67 ], [ %66, %64 ]
  %74 = fmul float %73, 6.400000e+01
  %75 = tail call float @llvm.round.f32(float %74) #13
  %76 = fcmp ult float %75, 0xC1E0000000000000
  %77 = fcmp ugt float %75, 0x41DFFFFFE0000000
  %78 = fcmp ogt float %75, 0xC1E0000000000000
  %79 = select i1 %78, float %75, float 0xC1E0000000000000
  %80 = fptosi float %79 to i32
  %81 = select i1 %76, i32 0, i32 2147483647
  %82 = select i1 %77, i32 %81, i32 %80
  %83 = sitofp i32 %82 to float
  %84 = fmul float %83, 1.562500e-02
  %85 = fadd float %44, %84
  %86 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %6, i64 0, i32 2, i32 1, i32 0
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, -5.000000e-01
  %89 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %6, i64 0, i32 5
  %90 = load float, float* %89, align 8
  %91 = insertelement <2 x float> undef, float %42, i32 0
  %92 = insertelement <2 x float> %91, float %85, i32 1
  br label %125

93:                                               ; preds = %56
  br i1 %63, label %94, label %97

94:                                               ; preds = %93
  %95 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %25, i64 0, i32 1, i32 2
  %96 = load float, float* %95, align 4
  br label %104

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %25, i64 0, i32 1, i32 1
  %99 = load float, float* %98, align 4
  %100 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %25, i64 0, i32 1, i32 2
  %101 = load float, float* %100, align 4
  %102 = fadd float %99, %101
  %103 = fmul float %102, 5.000000e-01
  br label %104

104:                                              ; preds = %94, %97
  %105 = phi float [ %96, %94 ], [ %103, %97 ]
  %106 = fmul float %105, 6.400000e+01
  %107 = tail call float @llvm.round.f32(float %106) #13
  %108 = fcmp ult float %107, 0xC1E0000000000000
  %109 = fcmp ugt float %107, 0x41DFFFFFE0000000
  %110 = fcmp ogt float %107, 0xC1E0000000000000
  %111 = select i1 %110, float %107, float 0xC1E0000000000000
  %112 = fptosi float %111 to i32
  %113 = select i1 %108, i32 0, i32 2147483647
  %114 = select i1 %109, i32 %113, i32 %112
  %115 = sitofp i32 %114 to float
  %116 = fmul float %115, 1.562500e-02
  %117 = fadd float %42, %116
  %118 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %6, i64 0, i32 5
  %119 = load float, float* %118, align 8
  %120 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %6, i64 0, i32 2, i32 1, i32 1
  %121 = load float, float* %120, align 4
  %122 = fmul float %121, -5.000000e-01
  %123 = insertelement <2 x float> undef, float %117, i32 0
  %124 = insertelement <2 x float> %123, float %44, i32 1
  br label %125

125:                                              ; preds = %104, %72
  %126 = phi float [ %122, %104 ], [ %90, %72 ]
  %127 = phi float [ %119, %104 ], [ %88, %72 ]
  %128 = phi <2 x float> [ %124, %104 ], [ %92, %72 ]
  %129 = fpext float %127 to double
  %130 = fpext float %126 to double
  %131 = tail call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* %0, double %129, double %130) #13
  %132 = tail call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"* %0, %"class.blink::AffineTransform"* dereferenceable(48) %2) #13
  %133 = bitcast double* %7 to <2 x double>*
  %134 = load <2 x double>, <2 x double>* %133, align 8
  %135 = fpext <2 x float> %128 to <2 x double>
  %136 = fadd <2 x double> %134, %135
  %137 = bitcast double* %7 to <2 x double>*
  store <2 x double> %136, <2 x double>* %137, align 8
  %138 = extractelement <2 x float> %128, i32 0
  %139 = fsub float -0.000000e+00, %138
  %140 = fpext float %139 to double
  %141 = extractelement <2 x float> %128, i32 1
  %142 = fsub float -0.000000e+00, %141
  %143 = fpext float %142 to double
  %144 = tail call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* %0, double %140, double %143) #13
  ret void
}

declare zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"*) local_unnamed_addr #2

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform11PreMultiplyERKS0_(%"class.blink::AffineTransform"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #2

declare void @_ZN5blink15AffineTransform9SetMatrixEdddddd(%"class.blink::AffineTransform"*, double, double, double, double, double, double) local_unnamed_addr #2

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform6RotateEd(%"class.blink::AffineTransform"*, double) local_unnamed_addr #2

declare i32 @_ZNK5blink13ComputedStyle15GetFontBaselineEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #2

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14NGFragmentItem8ToStringEv(%"class.blink::NGFragmentItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %11 = load i16, i16* %10, align 8
  %12 = and i16 %11, 7
  %13 = zext i16 %12 to i32
  switch i32 %13, label %154 [
    i32 4, label %14
    i32 0, label %76
    i32 3, label %153
  ]

14:                                               ; preds = %1
  %15 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %18 = bitcast %union.anon.1967* %17 to i8*
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %21, align 1
  %22 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #13
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %24 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 22, i32* %26, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #13
  %27 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = call %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"* %29) #13
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %32, label %37

32:                                               ; preds = %14
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %33, align 8
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %35 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 0, i32* %36, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  br label %57

37:                                               ; preds = %14
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %40, i32* %44, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %37
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %37
  %54 = phi i32 [ %52, %51 ], [ %50, %37 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #13
  br label %57

57:                                               ; preds = %32, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #13
  %58 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #13
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %59, align 8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #13
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #13
  br label %75

75:                                               ; preds = %57, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #13
  br label %155

76:                                               ; preds = %1
  %77 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %77) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 48, i1 false)
  %78 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %78, align 8
  %79 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %80 = bitcast %union.anon.1967* %79 to i8*
  store i8 0, i8* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %82, align 4
  %83 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %83, align 1
  %84 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #13
  %85 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %86 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8** %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 24, i32* %88, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #13
  %89 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  %90 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %89, align 8
  %91 = call %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject22FragmentItemsContainerEv(%"class.blink::LayoutObject"* %90) #13
  %92 = icmp eq %"class.blink::LayoutBlockFlow"* %91, null
  br i1 %92, label %126, label %93

93:                                               ; preds = %76
  %94 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %91, i64 0, i32 0, i32 0, i32 8, i32 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %126, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %91, i64 0, i32 0, i32 0
  br label %99

99:                                               ; preds = %97, %114
  %100 = phi i32 [ 0, %97 ], [ %116, %114 ]
  %101 = call %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox19GetPhysicalFragmentEj(%"class.blink::LayoutBox"* %98, i32 %100) #13
  %102 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %101, i64 0, i32 1
  %103 = bitcast i24* %102 to i32*
  %104 = load i32, i32* %103, align 8
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %101, i64 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %101, i64 0, i32 6, i64 %110
  %112 = bitcast %"struct.blink::NGLink"* %111 to %"class.blink::NGFragmentItems"*
  %113 = icmp eq %"struct.blink::NGLink"* %111, null
  br i1 %113, label %114, label %119

114:                                              ; preds = %99, %107
  %115 = phi %"class.blink::NGFragmentItems"* [ %112, %107 ], [ null, %99 ]
  %116 = add nuw i32 %100, 1
  %117 = load i32, i32* %94, align 4
  %118 = icmp ult i32 %116, %117
  br i1 %118, label %99, label %121

119:                                              ; preds = %107
  %120 = bitcast %"struct.blink::NGLink"* %111 to %"class.blink::NGFragmentItems"*
  br label %121

121:                                              ; preds = %114, %119
  %122 = phi %"class.blink::NGFragmentItems"* [ %120, %119 ], [ %115, %114 ]
  %123 = icmp eq %"class.blink::NGFragmentItems"* %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %121
  %125 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #13
  call void @_ZNK5blink14NGFragmentItem4TextERKNS_15NGFragmentItemsE(%"class.WTF::StringView"* nonnull sret %8, %"class.blink::NGFragmentItem"* %0, %"class.blink::NGFragmentItems"* nonnull dereferenceable(24) %122)
  br label %132

126:                                              ; preds = %93, %76, %121
  %127 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #13
  %128 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %129 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i8** %130, align 8
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 21, i32* %131, align 8
  br label %132

132:                                              ; preds = %126, %124
  %133 = phi %"class.WTF::StringView"* [ %9, %126 ], [ %8, %124 ]
  %134 = phi i8* [ %127, %126 ], [ %125, %124 ]
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %133)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #13
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %6, i8 zeroext 39) #13
  %135 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #13
  %136 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %136, align 8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #13
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #13
  br label %152

152:                                              ; preds = %132, %148, %151
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %77) #13
  br label %155

153:                                              ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i64 25) #13
  br label %155

154:                                              ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i64 14) #13
  br label %155

155:                                              ; preds = %154, %153, %152, %75
  %156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  ret %"class.WTF::StringImpl"* %157
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #13
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #13
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject22FragmentItemsContainerEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox19GetPhysicalFragmentEj(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink14NGFragmentItem18LocalVisualRectForERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"struct.blink::PhysicalRect"*
  %4 = alloca %"class.blink::NGInlineCursor", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %8 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #13
  %9 = bitcast %"class.blink::NGInlineCursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 112, i1 false)
  %10 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 81, i1 false) #13
  %11 = bitcast %"class.blink::LayoutBlockFlow"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #13
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %4, %"class.blink::LayoutObject"* dereferenceable(88) %0) #13
  %12 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 0, i32 0
  %13 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %12, align 8
  %14 = icmp eq %"class.blink::NGFragmentItem"* %13, null
  br i1 %14, label %87, label %15

15:                                               ; preds = %1
  %16 = bitcast { i64, i64 }* %5 to i8*
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %19 = bitcast { i64, i64 }* %5 to i8*
  br label %20

20:                                               ; preds = %15, %80
  %21 = phi %"class.blink::NGFragmentItem"* [ %13, %15 ], [ %81, %80 ]
  %22 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %21, i64 0, i32 6
  %23 = load i16, i16* %22, align 8
  %24 = and i16 %23, 256
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %26, label %80, !prof !3

26:                                               ; preds = %20
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #13
  %27 = and i16 %23, 7
  %28 = icmp eq i16 %27, 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  br i1 %28, label %29, label %38

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %21, i64 0, i32 1
  %31 = bitcast %union.anon.1631* %30 to %"class.blink::NGPhysicalBoxFragment"**
  %32 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %31, align 8
  %33 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %29
  %35 = call { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment15SelfInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"* nonnull %32) #13
  %36 = extractvalue { i64, i64 } %35, 0
  %37 = extractvalue { i64, i64 } %35, 1
  br label %54

38:                                               ; preds = %29, %26
  %39 = and i16 %23, 7168
  %40 = icmp eq i16 %39, 2048
  br i1 %40, label %41, label %45

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %21, i64 0, i32 2, i32 1
  %43 = bitcast %"struct.blink::PhysicalSize"* %42 to i64*
  %44 = load i64, i64* %43, align 4
  br label %54

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %21, i64 0, i32 3
  %47 = lshr i16 %23, 10
  %48 = and i16 %47, 7
  %49 = zext i16 %48 to i32
  %50 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %21, i64 0, i32 2, i32 1
  %51 = call { i64, i64 } @_ZNK5blink13NGInkOverflow4SelfENS0_4TypeERKNS_12PhysicalSizeE(%"class.blink::NGInkOverflow"* %46, i32 %49, %"struct.blink::PhysicalSize"* dereferenceable(8) %50) #13
  %52 = extractvalue { i64, i64 } %51, 0
  %53 = extractvalue { i64, i64 } %51, 1
  br label %54

54:                                               ; preds = %34, %41, %45
  %55 = phi i64 [ %52, %45 ], [ 0, %41 ], [ %36, %34 ]
  %56 = phi i64 [ %53, %45 ], [ %44, %41 ], [ %37, %34 ]
  store i64 %56, i64* %17, align 8
  %57 = trunc i64 %55 to i32
  %58 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %21, i64 0, i32 2, i32 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, 0
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %59) #13
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !2
  %66 = lshr i64 %55, 32
  %67 = trunc i64 %66 to i32
  %68 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %21, i64 0, i32 2, i32 0, i32 1, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp slt i32 %69, 0
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %67, i32 %69) #13
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 %71, i32 %74, !prof !2
  %76 = zext i32 %75 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %65 to i64
  %79 = or i64 %77, %78
  store i64 %79, i64* %18, align 8
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %3, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #13
  br label %80

80:                                               ; preds = %20, %54
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %4) #13
  %81 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %12, align 8
  %82 = icmp eq %"class.blink::NGFragmentItem"* %81, null
  br i1 %82, label %83, label %20

83:                                               ; preds = %80
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = load i64, i64* %7, align 8
  br label %87

87:                                               ; preds = %83, %1
  %88 = phi i64 [ %86, %83 ], [ 0, %1 ]
  %89 = phi i64 [ %85, %83 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %9) #13
  %90 = insertvalue { i64, i64 } undef, i64 %89, 0
  %91 = insertvalue { i64, i64 } %90, i64 %88, 1
  ret { i64, i64 } %91
}

declare void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItem21InvalidateInkOverflowEv(%"class.blink::NGFragmentItem"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %4 = load i16, i16* %3, align 8
  %5 = lshr i16 %4, 10
  %6 = and i16 %5, 7
  %7 = zext i16 %6 to i32
  %8 = tail call i32 @_ZN5blink13NGInkOverflow5ResetENS0_4TypeES1_(%"class.blink::NGInkOverflow"* %2, i32 %7, i32 1) #13
  %9 = trunc i32 %8 to i16
  %10 = load i16, i16* %3, align 8
  %11 = shl i16 %9, 10
  %12 = and i16 %11, 7168
  %13 = and i16 %10, -7169
  %14 = or i16 %12, %13
  store i16 %14, i16* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink14NGFragmentItem26RecalcInkOverflowForCursorEPNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"struct.blink::PhysicalRect"*
  %4 = alloca %"struct.blink::PhysicalRect", align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %6 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #13
  %7 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %7, align 8
  %9 = icmp eq %"class.blink::NGFragmentItem"* %8, null
  br i1 %9, label %89, label %10

10:                                               ; preds = %1
  %11 = bitcast %"struct.blink::PhysicalRect"* %4 to i8*
  %12 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1, i32 1, i32 0
  %16 = bitcast %"struct.blink::PhysicalRect"* %4 to i64*
  br label %17

17:                                               ; preds = %10, %82
  %18 = phi %"class.blink::NGFragmentItem"* [ %8, %10 ], [ %83, %82 ]
  %19 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %18, i64 0, i32 0
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %21, label %82, label %22, !prof !2

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %18, i64 0, i32 6
  %24 = load i16, i16* %23, align 8
  %25 = and i16 %24, 7
  %26 = icmp eq i16 %25, 4
  br i1 %26, label %27, label %52

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %18, i64 0, i32 1
  %29 = bitcast %union.anon.1631* %28 to %"class.blink::NGPhysicalBoxFragment"**
  %30 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %29, align 8
  %31 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %30, null
  br i1 %31, label %52, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %30, i64 0, i32 0, i32 3
  %34 = bitcast i24* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 64
  %37 = icmp eq i32 %36, 0
  %38 = and i32 %35, 960
  %39 = icmp ne i32 %38, 256
  %40 = and i1 %37, %39
  br i1 %40, label %41, label %52

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %30, i64 0, i32 0, i32 1
  %43 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %43, i64 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = and i96 %46, 4294967296
  %48 = icmp eq i96 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast %"class.blink::LayoutObject"* %43 to %"class.blink::LayoutBoxModelObject"*
  %51 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %50) #13
  br i1 %51, label %82, label %52, !prof !2

52:                                               ; preds = %41, %32, %22, %27, %49
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #13
  call void @_ZN5blink14NGFragmentItem17RecalcInkOverflowERKNS_14NGInlineCursorEPNS_12PhysicalRectE(%"class.blink::NGFragmentItem"* nonnull %18, %"class.blink::NGInlineCursor"* dereferenceable(112) %0, %"struct.blink::PhysicalRect"* nonnull %4) #13
  %53 = load i32, i32* %14, align 8
  %54 = icmp eq i32 %53, 0
  %55 = load i32, i32* %15, align 4
  %56 = icmp eq i32 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %81, label %58

58:                                               ; preds = %52
  %59 = load i32, i32* %12, align 8
  %60 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %18, i64 0, i32 2, i32 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %61, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %61) #13
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !2
  %68 = load i32, i32* %13, align 4
  %69 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %18, i64 0, i32 2, i32 0, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %70, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %68, i32 %70) #13
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !2
  %77 = zext i32 %76 to i64
  %78 = shl nuw i64 %77, 32
  %79 = zext i32 %67 to i64
  %80 = or i64 %78, %79
  store i64 %80, i64* %16, align 8
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %3, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4) #13
  br label %81

81:                                               ; preds = %52, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  br label %82

82:                                               ; preds = %49, %17, %81
  call void @_ZN5blink14NGInlineCursor26MoveToNextSkippingChildrenEv(%"class.blink::NGInlineCursor"* %0) #13
  %83 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %7, align 8
  %84 = icmp eq %"class.blink::NGFragmentItem"* %83, null
  br i1 %84, label %85, label %17

85:                                               ; preds = %82
  %86 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = load i64, i64* %5, align 8
  br label %89

89:                                               ; preds = %85, %1
  %90 = phi i64 [ %88, %85 ], [ 0, %1 ]
  %91 = phi i64 [ %87, %85 ], [ 0, %1 ]
  %92 = insertvalue { i64, i64 } undef, i64 %91, 0
  %93 = insertvalue { i64, i64 } %92, i64 %90, 1
  ret { i64, i64 } %93
}

declare void @_ZN5blink14NGInlineCursor26MoveToNextSkippingChildrenEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NGFragmentItem17RecalcInkOverflowERKNS_14NGInlineCursorEPNS_12PhysicalRectE(%"class.blink::NGFragmentItem"*, %"class.blink::NGInlineCursor"* dereferenceable(112), %"struct.blink::PhysicalRect"*) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to { i64, i64 }*
  %6 = alloca %"struct.blink::NGTextFragmentPaintInfo", align 8
  %7 = alloca %"class.blink::NGInlineCursor", align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"struct.blink::PhysicalRect"*
  %10 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = icmp eq %"class.blink::LayoutObject"* %11, null
  br i1 %12, label %354, label %13, !prof !2

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %15 = load i16, i16* %14, align 8
  %16 = and i16 %15, 7
  %17 = icmp ult i16 %16, 3
  br i1 %17, label %18, label %217

18:                                               ; preds = %13
  %19 = and i16 %15, 6144
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %43, label %21

21:                                               ; preds = %18
  %22 = and i16 %15, 7168
  %23 = icmp eq i16 %22, 2048
  br i1 %23, label %24, label %28

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %26 = bitcast %"struct.blink::PhysicalSize"* %25 to i64*
  %27 = load i64, i64* %26, align 4
  br label %37

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 3
  %30 = lshr i16 %15, 10
  %31 = and i16 %30, 7
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %34 = tail call { i64, i64 } @_ZNK5blink13NGInkOverflow4SelfENS0_4TypeERKNS_12PhysicalSizeE(%"class.blink::NGInkOverflow"* %29, i32 %32, %"struct.blink::PhysicalSize"* dereferenceable(8) %33) #13
  %35 = extractvalue { i64, i64 } %34, 0
  %36 = extractvalue { i64, i64 } %34, 1
  br label %37

37:                                               ; preds = %24, %28
  %38 = phi i64 [ %35, %28 ], [ 0, %24 ]
  %39 = phi i64 [ %36, %28 ], [ %27, %24 ]
  %40 = bitcast %"struct.blink::PhysicalRect"* %2 to i64*
  store i64 %38, i64* %40, align 4
  %41 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1
  %42 = bitcast %"struct.blink::PhysicalSize"* %41 to i64*
  store i64 %39, i64* %42, align 4
  br label %354

43:                                               ; preds = %18
  %44 = bitcast %"struct.blink::NGTextFragmentPaintInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 40, i1 false)
  %45 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %1, i64 0, i32 2
  %46 = load %"class.blink::NGFragmentItems"*, %"class.blink::NGFragmentItems"** %45, align 8
  %47 = zext i16 %16 to i32
  switch i32 %47, label %130 [
    i32 0, label %48
    i32 1, label %88
  ]

48:                                               ; preds = %43
  %49 = and i16 %15, 192
  %50 = icmp eq i16 %49, 64
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %46, i64 0, i32 0
  br label %60

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %46, i64 0, i32 1, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8, !noalias !5
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  %57 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %46, i64 0, i32 1
  %58 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %46, i64 0, i32 0
  %59 = select i1 %56, %"class.WTF::String"* %58, %"class.WTF::String"* %57
  br label %60

60:                                               ; preds = %53, %51
  %61 = phi %"class.WTF::String"* [ %52, %51 ], [ %59, %53 ]
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8, !noalias !5
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 1
  store i8* null, i8** %66, align 8, !alias.scope !5
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %68 = bitcast %"struct.blink::NGTextFragmentPaintInfo"* %6 to i64*
  store i64 %67, i64* %68, align 8, !alias.scope !5
  br label %76

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %70, align 8, !alias.scope !5
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  %74 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 1
  %75 = bitcast i8** %74 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %75, align 8, !alias.scope !5
  br label %76

76:                                               ; preds = %69, %65
  %77 = phi i32 [ %72, %69 ], [ 0, %65 ]
  %78 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 2
  store i32 %77, i32* %78, align 8, !alias.scope !5
  %79 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 1
  %80 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %81 = load i32, i32* %80, align 8, !noalias !5
  store i32 %81, i32* %79, align 8, !alias.scope !5
  %82 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 2
  %83 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1, i32 1
  %84 = load i32, i32* %83, align 4, !noalias !5
  store i32 %84, i32* %82, align 4, !alias.scope !5
  %85 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 3
  %86 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %87 = bitcast %"class.blink::ShapeResultView"** %86 to i64*
  br label %170

88:                                               ; preds = %43
  %89 = and i16 %15, 192
  %90 = icmp eq i16 %89, 64
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %46, i64 0, i32 0
  br label %100

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %46, i64 0, i32 1, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8, !noalias !5
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  %97 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %46, i64 0, i32 1
  %98 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %46, i64 0, i32 0
  %99 = select i1 %96, %"class.WTF::String"* %98, %"class.WTF::String"* %97
  br label %100

100:                                              ; preds = %93, %91
  %101 = phi %"class.WTF::String"* [ %92, %91 ], [ %99, %93 ]
  %102 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8, !noalias !5
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %105, label %109

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 1
  store i8* null, i8** %106, align 8, !alias.scope !5
  %107 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %108 = bitcast %"struct.blink::NGTextFragmentPaintInfo"* %6 to i64*
  store i64 %107, i64* %108, align 8, !alias.scope !5
  br label %116

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %110, align 8, !alias.scope !5
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 1
  %114 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 1
  %115 = bitcast i8** %114 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %115, align 8, !alias.scope !5
  br label %116

116:                                              ; preds = %109, %105
  %117 = phi i32 [ %112, %109 ], [ 0, %105 ]
  %118 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 2
  store i32 %117, i32* %118, align 8, !alias.scope !5
  %119 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 1
  %120 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %121 = bitcast %union.anon.1631* %120 to %"struct.blink::NGSvgFragmentData"**
  %122 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %121, align 8, !noalias !5
  %123 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %122, i64 0, i32 1, i32 0
  %124 = load i32, i32* %123, align 8
  store i32 %124, i32* %119, align 8, !alias.scope !5
  %125 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 2
  %126 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %122, i64 0, i32 1, i32 1
  %127 = load i32, i32* %126, align 4
  store i32 %127, i32* %125, align 4, !alias.scope !5
  %128 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 3
  %129 = bitcast %"struct.blink::NGSvgFragmentData"* %122 to i64*
  br label %170

130:                                              ; preds = %43
  %131 = icmp eq i16 %16, 2
  br i1 %131, label %132, label %159

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %134 = bitcast %"struct.blink::NGTextOffset"* %133 to %"class.WTF::StringImpl"**
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8, !noalias !5
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %137, label %143

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 1
  store i8* null, i8** %138, align 8, !alias.scope !5
  %139 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %140 = bitcast %"struct.blink::NGTextFragmentPaintInfo"* %6 to i64*
  store i64 %139, i64* %140, align 8, !alias.scope !5
  %141 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 2
  store i32 0, i32* %141, align 8, !alias.scope !5
  %142 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 1
  store i32 0, i32* %142, align 8, !alias.scope !5
  br label %153

143:                                              ; preds = %132
  %144 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %144, align 8, !alias.scope !5
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 1
  %148 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 1
  %149 = bitcast i8** %148 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %147, %"class.WTF::StringImpl"** %149, align 8, !alias.scope !5
  %150 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 2
  store i32 %146, i32* %150, align 8, !alias.scope !5
  %151 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 1
  store i32 0, i32* %151, align 8, !alias.scope !5
  %152 = load i32, i32* %145, align 4
  br label %153

153:                                              ; preds = %143, %137
  %154 = phi i32 [ %152, %143 ], [ 0, %137 ]
  %155 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 2
  store i32 %154, i32* %155, align 4, !alias.scope !5
  %156 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 3
  %157 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %158 = bitcast %"class.blink::ShapeResultView"** %157 to i64*
  br label %170

159:                                              ; preds = %130
  %160 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 2
  store i32 0, i32* %160, align 8, !alias.scope !5
  %161 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 0, i32 1
  store i8* null, i8** %161, align 8, !alias.scope !5
  %162 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %163 = bitcast %"struct.blink::NGTextFragmentPaintInfo"* %6 to i64*
  store i64 %162, i64* %163, align 8, !alias.scope !5
  %164 = getelementptr inbounds %"struct.blink::NGTextFragmentPaintInfo", %"struct.blink::NGTextFragmentPaintInfo"* %6, i64 0, i32 1
  %165 = bitcast i32* %164 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 16, i1 false) #13, !alias.scope !5
  %166 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 3
  %167 = lshr i16 %15, 10
  %168 = and i16 %167, 7
  %169 = zext i16 %168 to i32
  br label %200

170:                                              ; preds = %76, %116, %153
  %171 = phi i64* [ %87, %76 ], [ %129, %116 ], [ %158, %153 ]
  %172 = phi %"class.blink::ShapeResultView"** [ %85, %76 ], [ %128, %116 ], [ %156, %153 ]
  %173 = load i64, i64* %171, align 8
  %174 = bitcast %"class.blink::ShapeResultView"** %172 to i64*
  store i64 %173, i64* %174, align 8, !alias.scope !5
  %175 = icmp eq i64 %173, 0
  %176 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 3
  %177 = lshr i16 %15, 10
  %178 = and i16 %177, 7
  %179 = zext i16 %178 to i32
  br i1 %175, label %200, label %180

180:                                              ; preds = %170
  %181 = lshr i16 %15, 6
  %182 = and i16 %181, 3
  %183 = icmp eq i16 %182, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 5, i32 0
  %186 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %185, align 8
  br label %190

187:                                              ; preds = %180
  %188 = zext i16 %182 to i32
  %189 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* nonnull %11, i32 %188) #13
  br label %190

190:                                              ; preds = %184, %187
  %191 = phi %"class.blink::ComputedStyle"* [ %186, %184 ], [ %189, %187 ]
  %192 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %193 = call i32 @_ZN5blink13NGInkOverflow18SetTextInkOverflowENS0_4TypeERKNS_23NGTextFragmentPaintInfoERKNS_13ComputedStyleERKNS_12PhysicalSizeEPNS_12PhysicalRectE(%"class.blink::NGInkOverflow"* %176, i32 %179, %"struct.blink::NGTextFragmentPaintInfo"* nonnull dereferenceable(40) %6, %"class.blink::ComputedStyle"* dereferenceable(104) %191, %"struct.blink::PhysicalSize"* dereferenceable(8) %192, %"struct.blink::PhysicalRect"* %2) #13
  %194 = trunc i32 %193 to i16
  %195 = load i16, i16* %14, align 8
  %196 = shl i16 %194, 10
  %197 = and i16 %196, 7168
  %198 = and i16 %195, -7169
  %199 = or i16 %197, %198
  store i16 %199, i16* %14, align 8
  br label %216

200:                                              ; preds = %159, %170
  %201 = phi i32 [ %169, %159 ], [ %179, %170 ]
  %202 = phi %"class.blink::NGInkOverflow"* [ %166, %159 ], [ %176, %170 ]
  %203 = tail call i32 @_ZN5blink13NGInkOverflow5ResetENS0_4TypeES1_(%"class.blink::NGInkOverflow"* %202, i32 %201, i32 2) #13
  %204 = trunc i32 %203 to i16
  %205 = load i16, i16* %14, align 8
  %206 = shl i16 %204, 10
  %207 = and i16 %206, 7168
  %208 = and i16 %205, -7169
  %209 = or i16 %207, %208
  store i16 %209, i16* %14, align 8
  %210 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %211 = bitcast %"struct.blink::PhysicalSize"* %210 to i64*
  %212 = load i64, i64* %211, align 4
  %213 = bitcast %"struct.blink::PhysicalRect"* %2 to i64*
  store i64 0, i64* %213, align 4
  %214 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1
  %215 = bitcast %"struct.blink::PhysicalSize"* %214 to i64*
  store i64 %212, i64* %215, align 4
  br label %216

216:                                              ; preds = %200, %190
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #13
  br label %354

217:                                              ; preds = %13
  %218 = icmp eq i16 %16, 4
  br i1 %218, label %219, label %287

219:                                              ; preds = %217
  %220 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %221 = bitcast %union.anon.1631* %220 to %"class.blink::NGPhysicalBoxFragment"**
  %222 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %221, align 8
  %223 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %222, null
  br i1 %223, label %287, label %224

224:                                              ; preds = %219
  %225 = tail call %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink21NGPhysicalBoxFragment10PostLayoutEv(%"class.blink::NGPhysicalBoxFragment"* nonnull %222) #13
  %226 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %225, null
  br i1 %226, label %287, label %227

227:                                              ; preds = %224
  %228 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %225, i64 0, i32 0, i32 3
  %229 = bitcast i24* %228 to i32*
  %230 = load i32, i32* %229, align 8
  %231 = and i32 %230, 960
  %232 = icmp eq i32 %231, 128
  br i1 %232, label %287, label %233

233:                                              ; preds = %227
  %234 = and i32 %230, 524288
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %243

236:                                              ; preds = %233
  tail call void @_ZN5blink21NGPhysicalBoxFragment17RecalcInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"* nonnull %225) #13
  %237 = tail call { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment11InkOverflowEv(%"class.blink::NGPhysicalBoxFragment"* nonnull %225) #13
  %238 = extractvalue { i64, i64 } %237, 0
  %239 = extractvalue { i64, i64 } %237, 1
  %240 = bitcast %"struct.blink::PhysicalRect"* %2 to i64*
  store i64 %238, i64* %240, align 4
  %241 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1
  %242 = bitcast %"struct.blink::PhysicalSize"* %241 to i64*
  store i64 %239, i64* %242, align 4
  br label %354

243:                                              ; preds = %233
  %244 = load i16, i16* %14, align 8
  %245 = and i16 %244, 7
  %246 = icmp eq i16 %245, 4
  br i1 %246, label %247, label %258

247:                                              ; preds = %243
  %248 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %249 = icmp eq %"class.blink::LayoutObject"* %248, null
  br i1 %249, label %258, label %250

250:                                              ; preds = %247
  %251 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %248, i64 0, i32 4
  %252 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %251 to i96*
  %253 = load i96, i96* %252, align 4
  %254 = and i96 %253, 67108864
  %255 = icmp eq i96 %254, 0
  %256 = bitcast %"class.blink::LayoutObject"* %248 to %"class.blink::LayoutBox"*
  %257 = select i1 %255, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %256
  br label %258

258:                                              ; preds = %243, %247, %250
  %259 = phi %"class.blink::LayoutBox"* [ null, %243 ], [ %257, %250 ], [ null, %247 ]
  %260 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %259, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject43RecalcNormalFlowChildVisualOverflowIfNeededEv(%"class.blink::LayoutObject"* %260) #13
  %261 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %259) #13
  %262 = extractvalue { i64, i64 } %261, 0
  %263 = trunc i64 %262 to i32
  %264 = and i64 %262, -4294967296
  %265 = extractvalue { i64, i64 } %261, 1
  %266 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %259, i64 0, i32 0, i32 0, i32 5, i32 0
  %267 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %266, align 8
  %268 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %267, i64 0, i32 0, i32 9
  %269 = bitcast [20 x i8]* %268 to i160*
  %270 = load i160, i160* %269, align 8
  %271 = and i160 %270, 15211807202738752817960438464512
  %272 = icmp eq i160 %271, 5070602400912917605986812821504
  br i1 %272, label %273, label %280, !prof !2

273:                                              ; preds = %258
  %274 = trunc i64 %265 to i32
  %275 = bitcast %"class.blink::LayoutBox"* %259 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %276 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %275, align 8
  %277 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %276, i64 106
  %278 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %277, align 8
  %279 = tail call i32 %278(%"class.blink::LayoutObject"* %260, i32 %263, i32 %274, %"class.blink::LayoutBox"* null) #13
  br label %280

280:                                              ; preds = %258, %273
  %281 = phi i32 [ %279, %273 ], [ %263, %258 ]
  %282 = zext i32 %281 to i64
  %283 = or i64 %264, %282
  %284 = bitcast %"struct.blink::PhysicalRect"* %2 to i64*
  store i64 %283, i64* %284, align 4
  %285 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1
  %286 = bitcast %"struct.blink::PhysicalSize"* %285 to i64*
  store i64 %265, i64* %286, align 4
  br label %354

287:                                              ; preds = %217, %224, %219, %227
  %288 = phi %"class.blink::NGPhysicalBoxFragment"* [ %225, %227 ], [ null, %224 ], [ null, %219 ], [ null, %217 ]
  %289 = bitcast %"class.blink::NGInlineCursor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %289) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %289, i8 -86, i64 112, i1 false)
  call void @_ZNK5blink14NGInlineCursor20CursorForDescendantsEv(%"class.blink::NGInlineCursor"* nonnull sret %7, %"class.blink::NGInlineCursor"* %1) #13
  %290 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %290) #13
  %291 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %292 = call { i64, i64 } @_ZN5blink14NGFragmentItem26RecalcInkOverflowForCursorEPNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"* nonnull %7)
  %293 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %294 = extractvalue { i64, i64 } %292, 0
  %295 = extractvalue { i64, i64 } %292, 1
  store i64 %295, i64* %291, align 8
  %296 = trunc i64 %294 to i32
  %297 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %298 = load i32, i32* %297, align 4
  %299 = icmp sgt i32 %298, -1
  %300 = select i1 %299, i32 -2147483648, i32 2147483647
  %301 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %296, i32 %298) #13
  %302 = extractvalue { i32, i1 } %301, 1
  %303 = extractvalue { i32, i1 } %301, 0
  %304 = select i1 %302, i32 %300, i32 %303, !prof !2
  %305 = lshr i64 %294, 32
  %306 = trunc i64 %305 to i32
  %307 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %308 = load i32, i32* %307, align 4
  %309 = icmp sgt i32 %308, -1
  %310 = select i1 %309, i32 -2147483648, i32 2147483647
  %311 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %306, i32 %308) #13
  %312 = extractvalue { i32, i1 } %311, 1
  %313 = extractvalue { i32, i1 } %311, 0
  %314 = select i1 %312, i32 %310, i32 %313, !prof !2
  %315 = zext i32 %314 to i64
  %316 = shl nuw i64 %315, 32
  %317 = zext i32 %304 to i64
  %318 = or i64 %316, %317
  store i64 %318, i64* %293, align 8
  %319 = load i16, i16* %14, align 8
  %320 = and i16 %319, 7
  %321 = icmp eq i16 %320, 3
  br i1 %321, label %322, label %344

322:                                              ; preds = %287
  %323 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %324 = bitcast %"struct.blink::PhysicalSize"* %323 to i64*
  %325 = load i64, i64* %324, align 4
  %326 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %326)
  %327 = bitcast <2 x i64>* %4 to %"struct.blink::PhysicalRect"*
  %328 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %329 = getelementptr inbounds <2 x i64>, <2 x i64>* %4, i64 0, i64 0
  store i64 0, i64* %329, align 16
  store i64 %325, i64* %328, align 8
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %327, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %9) #13
  %330 = load <2 x i64>, <2 x i64>* %4, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %326)
  %331 = bitcast %"struct.blink::PhysicalRect"* %2 to <2 x i64>*
  store <2 x i64> %330, <2 x i64>* %331, align 4
  %332 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 3
  %333 = load i16, i16* %14, align 8
  %334 = lshr i16 %333, 10
  %335 = and i16 %334, 7
  %336 = zext i16 %335 to i32
  %337 = call i32 @_ZN5blink13NGInkOverflow11SetContentsENS0_4TypeERKNS_12PhysicalRectERKNS_12PhysicalSizeE(%"class.blink::NGInkOverflow"* %332, i32 %336, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %9, %"struct.blink::PhysicalSize"* dereferenceable(8) %323) #13
  %338 = trunc i32 %337 to i16
  %339 = load i16, i16* %14, align 8
  %340 = shl i16 %338, 10
  %341 = and i16 %340, 7168
  %342 = and i16 %339, -7169
  %343 = or i16 %341, %342
  store i16 %343, i16* %14, align 8
  br label %353

344:                                              ; preds = %287
  %345 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %288, null
  br i1 %345, label %353, label %346

346:                                              ; preds = %344
  call void @_ZN5blink21NGPhysicalBoxFragment17RecalcInkOverflowERKNS_12PhysicalRectE(%"class.blink::NGPhysicalBoxFragment"* nonnull %288, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %9) #13
  %347 = call { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment11InkOverflowEv(%"class.blink::NGPhysicalBoxFragment"* nonnull %288) #13
  %348 = extractvalue { i64, i64 } %347, 0
  %349 = extractvalue { i64, i64 } %347, 1
  %350 = bitcast %"struct.blink::PhysicalRect"* %2 to i64*
  store i64 %348, i64* %350, align 4
  %351 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1
  %352 = bitcast %"struct.blink::PhysicalSize"* %351 to i64*
  store i64 %349, i64* %352, align 4
  br label %353

353:                                              ; preds = %344, %346, %322
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %290) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %289) #13
  br label %354

354:                                              ; preds = %236, %280, %353, %3, %37, %216
  ret void
}

declare i32 @_ZN5blink13NGInkOverflow18SetTextInkOverflowENS0_4TypeERKNS_23NGTextFragmentPaintInfoERKNS_13ComputedStyleERKNS_12PhysicalSizeEPNS_12PhysicalRectE(%"class.blink::NGInkOverflow"*, i32, %"struct.blink::NGTextFragmentPaintInfo"* dereferenceable(40), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::PhysicalSize"* dereferenceable(8), %"struct.blink::PhysicalRect"*) local_unnamed_addr #2

declare void @_ZN5blink12LayoutObject43RecalcNormalFlowChildVisualOverflowIfNeededEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZNK5blink14NGInlineCursor20CursorForDescendantsEv(%"class.blink::NGInlineCursor"* sret, %"class.blink::NGInlineCursor"*) local_unnamed_addr #2

declare i32 @_ZN5blink13NGInkOverflow11SetContentsENS0_4TypeERKNS_12PhysicalRectERKNS_12PhysicalSizeE(%"class.blink::NGInkOverflow"*, i32, %"struct.blink::PhysicalRect"* dereferenceable(16), %"struct.blink::PhysicalSize"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK5blink14NGFragmentItem33SetDeltaToNextForSameLayoutObjectEj(%"class.blink::NGFragmentItem"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 5
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14NGFragmentItem23InlinePositionForOffsetEN3WTF10StringViewEjPFNS_10LayoutUnitEfENS_16AdjustMidClusterE(%"class.blink::NGFragmentItem"* nocapture readonly, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8, i32, i32 (float)* nocapture, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 7
  %9 = zext i16 %8 to i32
  switch i32 %9, label %27 [
    i32 0, label %10
    i32 1, label %17
  ]

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"struct.blink::NGTextOffset"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = sub i32 %2, %14
  %16 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %31

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %19 = bitcast %union.anon.1631* %18 to %"struct.blink::NGSvgFragmentData"**
  %20 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %19, align 8
  %21 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %20, i64 0, i32 1
  %22 = bitcast %"struct.blink::NGTextOffset"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  %25 = sub i32 %2, %24
  %26 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %20, i64 0, i32 0, i32 0
  br label %31

27:                                               ; preds = %5
  %28 = icmp eq i16 %8, 2
  br i1 %28, label %29, label %62

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %10, %17, %29
  %32 = phi i32 [ %15, %10 ], [ %25, %17 ], [ %2, %29 ]
  %33 = phi %"class.blink::ShapeResultView"** [ %16, %10 ], [ %26, %17 ], [ %30, %29 ]
  %34 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %33, align 8
  %35 = icmp eq %"class.blink::ShapeResultView"* %34, null
  br i1 %35, label %62, label %36

36:                                               ; preds = %31
  switch i32 %9, label %49 [
    i32 0, label %37
    i32 1, label %39
    i32 2, label %44
  ]

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %46

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %41 = bitcast %union.anon.1631* %40 to %"struct.blink::NGSvgFragmentData"**
  %42 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %41, align 8
  %43 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %42, i64 0, i32 0, i32 0
  br label %46

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %44, %39, %37
  %47 = phi %"class.blink::ShapeResultView"** [ %38, %37 ], [ %43, %39 ], [ %45, %44 ]
  %48 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %47, align 8
  br label %49

49:                                               ; preds = %46, %36
  %50 = phi %"class.blink::ShapeResultView"* [ null, %36 ], [ %48, %46 ]
  %51 = tail call %"class.blink::ShapeResult"* @_ZNK5blink15ShapeResultView17CreateShapeResultEv(%"class.blink::ShapeResultView"* %50) #13
  %52 = call float @_ZNK5blink11ShapeResult22CaretPositionForOffsetEjRKN3WTF10StringViewENS_16AdjustMidClusterE(%"class.blink::ShapeResult"* %51, i32 %32, %"class.WTF::StringView"* nonnull dereferenceable(24) %1, i32 %4) #13
  %53 = call i32 %3(float %52) #13
  %54 = icmp eq %"class.blink::ShapeResult"* %51, null
  br i1 %54, label %108, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %51, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %56) #13
  %57 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %108

60:                                               ; preds = %55
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %51) #13
  %61 = bitcast %"class.blink::ShapeResult"* %51 to i8*
  call void @free(i8* %61) #13
  br label %108

62:                                               ; preds = %27, %31
  %63 = phi i32 [ %32, %31 ], [ %2, %27 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %108, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  %67 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %66, align 8
  %68 = lshr i16 %7, 6
  %69 = and i16 %68, 3
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %67, i64 0, i32 5, i32 0
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %72, align 8
  br label %77

74:                                               ; preds = %65
  %75 = zext i16 %69 to i32
  %76 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %67, i32 %75) #13
  br label %77

77:                                               ; preds = %71, %74
  %78 = phi %"class.blink::ComputedStyle"* [ %73, %71 ], [ %76, %74 ]
  %79 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 9
  %80 = bitcast [20 x i8]* %79 to i160*
  %81 = load i160, i160* %80, align 8
  %82 = and i160 %81, 41538374868278621028243970633760768
  %83 = icmp eq i160 %82, 0
  br i1 %83, label %84, label %108, !prof !3

84:                                               ; preds = %77
  %85 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %66, align 8
  %86 = load i16, i16* %6, align 8
  %87 = lshr i16 %86, 6
  %88 = and i16 %87, 3
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %85, i64 0, i32 5, i32 0
  %92 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %91, align 8
  br label %96

93:                                               ; preds = %84
  %94 = zext i16 %88 to i32
  %95 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %85, i32 %94) #13
  br label %96

96:                                               ; preds = %90, %93
  %97 = phi %"class.blink::ComputedStyle"* [ %92, %90 ], [ %95, %93 ]
  %98 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %97, i64 0, i32 0, i32 9
  %99 = bitcast [20 x i8]* %98 to i160*
  %100 = load i160, i160* %99, align 8
  %101 = and i160 %100, 15211807202738752817960438464512
  %102 = icmp eq i160 %101, 0
  %103 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1, i32 0
  %104 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1, i32 1
  %105 = select i1 %102, %"class.blink::LayoutUnit"* %103, %"class.blink::LayoutUnit"* %104
  %106 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %105, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br label %108

108:                                              ; preds = %77, %62, %60, %55, %49, %96
  %109 = phi i32 [ %107, %96 ], [ %53, %49 ], [ %53, %55 ], [ %53, %60 ], [ 0, %62 ], [ 0, %77 ]
  ret i32 %109
}

declare %"class.blink::ShapeResult"* @_ZNK5blink15ShapeResultView17CreateShapeResultEv(%"class.blink::ShapeResultView"*) local_unnamed_addr #2

declare float @_ZNK5blink11ShapeResult22CaretPositionForOffsetEjRKN3WTF10StringViewENS_16AdjustMidClusterE(%"class.blink::ShapeResult"*, i32, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14NGFragmentItem23InlinePositionForOffsetEN3WTF10StringViewEj(%"class.blink::NGFragmentItem"* nocapture readonly, %"class.WTF::StringView"* nocapture readonly byval(%"class.WTF::StringView") align 8, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZNK5blink14NGFragmentItem23InlinePositionForOffsetEN3WTF10StringViewEjPFNS_10LayoutUnitEfENS_16AdjustMidClusterE(%"class.blink::NGFragmentItem"* %0, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %1, i32 %2, i32 (float)* nonnull @_ZN5blink10LayoutUnit14FromFloatRoundEf, i32 0)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink10LayoutUnit14FromFloatRoundEf(float) #0 comdat align 2 {
  %2 = fmul float %0, 6.400000e+01
  %3 = tail call float @llvm.round.f32(float %2)
  %4 = fcmp ult float %3, 0xC1E0000000000000
  %5 = fcmp ugt float %3, 0x41DFFFFFE0000000
  %6 = fcmp ogt float %3, 0xC1E0000000000000
  %7 = select i1 %6, float %3, float 0xC1E0000000000000
  %8 = fptosi float %7 to i32
  %9 = select i1 %4, i32 0, i32 2147483647
  %10 = select i1 %5, i32 %9, i32 %8
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14NGFragmentItem26LineLeftAndRightForOffsetsEN3WTF10StringViewEjj(%"class.blink::NGFragmentItem"* nocapture readonly, %"class.WTF::StringView"* nocapture readonly byval(%"class.WTF::StringView") align 8, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = tail call i32 @_ZNK5blink14NGFragmentItem23InlinePositionForOffsetEN3WTF10StringViewEjPFNS_10LayoutUnitEfENS_16AdjustMidClusterE(%"class.blink::NGFragmentItem"* %0, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %1, i32 %2, i32 (float)* nonnull @_ZN5blink10LayoutUnit14FromFloatFloorEf, i32 1)
  %6 = tail call i32 @_ZNK5blink14NGFragmentItem23InlinePositionForOffsetEN3WTF10StringViewEjPFNS_10LayoutUnitEfENS_16AdjustMidClusterE(%"class.blink::NGFragmentItem"* %0, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %1, i32 %3, i32 (float)* nonnull @_ZN5blink10LayoutUnit13FromFloatCeilEf, i32 0)
  %7 = icmp sgt i32 %5, %6
  %8 = zext i32 %5 to i64
  %9 = shl nuw i64 %8, 32
  %10 = zext i32 %6 to i64
  %11 = or i64 %9, %10
  %12 = shl nuw i64 %10, 32
  %13 = or i64 %12, %8
  %14 = select i1 %7, i64 %11, i64 %13, !prof !2
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink10LayoutUnit14FromFloatFloorEf(float) #0 comdat align 2 {
  %2 = fmul float %0, 6.400000e+01
  %3 = tail call float @llvm.floor.f32(float %2)
  %4 = fcmp ult float %3, 0xC1E0000000000000
  %5 = fcmp ugt float %3, 0x41DFFFFFE0000000
  %6 = fcmp ogt float %3, 0xC1E0000000000000
  %7 = select i1 %6, float %3, float 0xC1E0000000000000
  %8 = fptosi float %7 to i32
  %9 = select i1 %4, i32 0, i32 2147483647
  %10 = select i1 %5, i32 %9, i32 %8
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink10LayoutUnit13FromFloatCeilEf(float) #0 comdat align 2 {
  %2 = fmul float %0, 6.400000e+01
  %3 = tail call float @llvm.ceil.f32(float %2)
  %4 = fcmp ult float %3, 0xC1E0000000000000
  %5 = fcmp ugt float %3, 0x41DFFFFFE0000000
  %6 = fcmp ogt float %3, 0xC1E0000000000000
  %7 = select i1 %6, float %3, float 0xC1E0000000000000
  %8 = fptosi float %7 to i32
  %9 = select i1 %4, i32 0, i32 2147483647
  %10 = select i1 %5, i32 %9, i32 %8
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink14NGFragmentItem9LocalRectEN3WTF10StringViewEjj(%"class.blink::NGFragmentItem"* nocapture readonly, %"class.WTF::StringView"* nocapture readonly byval(%"class.WTF::StringView") align 8, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 7
  %9 = zext i16 %8 to i32
  switch i32 %9, label %22 [
    i32 0, label %10
    i32 1, label %12
  ]

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  br label %17

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %14 = bitcast %union.anon.1631* %13 to %"struct.blink::NGSvgFragmentData"**
  %15 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %14, align 8
  %16 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %15, i64 0, i32 1
  br label %17

17:                                               ; preds = %12, %10
  %18 = phi %"struct.blink::NGTextOffset"* [ %11, %10 ], [ %16, %12 ]
  %19 = bitcast %"struct.blink::NGTextOffset"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  br label %22

22:                                               ; preds = %17, %4
  %23 = phi i32 [ 0, %4 ], [ %21, %17 ]
  %24 = icmp eq i32 %23, %2
  br i1 %24, label %25, label %56

25:                                               ; preds = %22
  switch i32 %9, label %49 [
    i32 0, label %26
    i32 1, label %32
    i32 2, label %41
  ]

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %28 = bitcast %"struct.blink::NGTextOffset"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %29, 32
  %31 = trunc i64 %30 to i32
  br label %49

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %34 = bitcast %union.anon.1631* %33 to %"struct.blink::NGSvgFragmentData"**
  %35 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %34, align 8
  %36 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %35, i64 0, i32 1
  %37 = bitcast %"struct.blink::NGTextOffset"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = lshr i64 %38, 32
  %40 = trunc i64 %39 to i32
  br label %49

41:                                               ; preds = %25
  %42 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %43 = bitcast %"struct.blink::NGTextOffset"* %42 to %"class.WTF::StringImpl"**
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  br label %49

49:                                               ; preds = %25, %26, %32, %41, %46
  %50 = phi i32 [ %31, %26 ], [ %40, %32 ], [ %48, %46 ], [ 0, %41 ], [ 0, %25 ]
  %51 = icmp eq i32 %50, %3
  br i1 %51, label %52, label %56

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1
  %54 = bitcast %"struct.blink::PhysicalSize"* %53 to i64*
  %55 = load i64, i64* %54, align 4
  br label %113

56:                                               ; preds = %49, %22
  %57 = bitcast %"class.WTF::StringView"* %1 to i8*
  %58 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* nonnull align 8 %57, i64 24, i1 false)
  %59 = tail call i32 @_ZNK5blink14NGFragmentItem23InlinePositionForOffsetEN3WTF10StringViewEjPFNS_10LayoutUnitEfENS_16AdjustMidClusterE(%"class.blink::NGFragmentItem"* %0, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %1, i32 %2, i32 (float)* nonnull @_ZN5blink10LayoutUnit14FromFloatFloorEf, i32 1) #13
  %60 = tail call i32 @_ZNK5blink14NGFragmentItem23InlinePositionForOffsetEN3WTF10StringViewEjPFNS_10LayoutUnitEfENS_16AdjustMidClusterE(%"class.blink::NGFragmentItem"* %0, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %5, i32 %3, i32 (float)* nonnull @_ZN5blink10LayoutUnit13FromFloatCeilEf, i32 0) #13
  %61 = icmp sgt i32 %59, %60
  %62 = zext i32 %59 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %60 to i64
  %65 = or i64 %63, %64
  %66 = shl nuw i64 %64, 32
  %67 = or i64 %66, %62
  %68 = select i1 %61, i64 %65, i64 %67, !prof !2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  %69 = trunc i64 %68 to i32
  %70 = lshr i64 %68, 32
  %71 = trunc i64 %70 to i32
  %72 = icmp sgt i32 %69, -1
  %73 = select i1 %72, i32 -2147483648, i32 2147483647
  %74 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %71, i32 %69) #13
  %75 = extractvalue { i32, i1 } %74, 1
  %76 = extractvalue { i32, i1 } %74, 0
  %77 = select i1 %75, i32 %73, i32 %76, !prof !2
  %78 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  %79 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %80 = load i16, i16* %6, align 8
  %81 = lshr i16 %80, 6
  %82 = and i16 %81, 3
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %56
  %85 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %79, i64 0, i32 5, i32 0
  %86 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %85, align 8
  br label %90

87:                                               ; preds = %56
  %88 = zext i16 %82 to i32
  %89 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %79, i32 %88) #13
  br label %90

90:                                               ; preds = %84, %87
  %91 = phi %"class.blink::ComputedStyle"* [ %86, %84 ], [ %89, %87 ]
  %92 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %91, i64 0, i32 0, i32 9
  %93 = bitcast [20 x i8]* %92 to i160*
  %94 = load i160, i160* %93, align 8
  %95 = and i160 %94, 15211807202738752817960438464512
  %96 = icmp eq i160 %95, 0
  br i1 %96, label %97, label %105

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %77 to i64
  %101 = zext i32 %99 to i64
  %102 = shl nuw i64 %101, 32
  %103 = or i64 %102, %100
  %104 = and i64 %68, 4294967295
  br label %113

105:                                              ; preds = %90
  %106 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  %109 = zext i32 %77 to i64
  %110 = shl nuw i64 %109, 32
  %111 = or i64 %110, %108
  %112 = shl i64 %68, 32
  br label %113

113:                                              ; preds = %97, %105, %52
  %114 = phi i64 [ %55, %52 ], [ %111, %105 ], [ %103, %97 ]
  %115 = phi i64 [ 0, %52 ], [ %112, %105 ], [ 0, %97 ]
  %116 = phi i64 [ 0, %52 ], [ 0, %105 ], [ %104, %97 ]
  %117 = or i64 %115, %116
  %118 = insertvalue { i64, i64 } undef, i64 %117, 0
  %119 = insertvalue { i64, i64 } %118, i64 %114, 1
  ret { i64, i64 } %119
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14NGFragmentItem22PositionForPointInTextERKNS_14PhysicalOffsetERKNS_14NGInlineCursorE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::NGFragmentItem"*, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), %"class.blink::NGInlineCursor"* nocapture readonly dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 6
  %6 = load i16, i16* %5, align 8
  %7 = and i16 %6, 7
  %8 = icmp eq i16 %7, 2
  br i1 %8, label %16, label %9

9:                                                ; preds = %4
  %10 = and i16 %6, 6
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 0
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK5blink12LayoutObject16IsStyleGeneratedEv(%"class.blink::LayoutObject"* %14) #13
  br i1 %15, label %16, label %17

16:                                               ; preds = %4, %12
  tail call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::PositionWithAffinityTemplate"* %0) #13
  br label %21

17:                                               ; preds = %9, %12
  %18 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 2
  %19 = load %"class.blink::NGFragmentItems"*, %"class.blink::NGFragmentItems"** %18, align 8
  %20 = tail call i32 @_ZNK5blink14NGFragmentItem18TextOffsetForPointERKNS_14PhysicalOffsetERKNS_15NGFragmentItemsE(%"class.blink::NGFragmentItem"* %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, %"class.blink::NGFragmentItems"* dereferenceable(24) %19)
  tail call void @_ZNK5blink14NGFragmentItem22PositionForPointInTextEjRKNS_14NGInlineCursorE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::NGFragmentItem"* %1, i32 %20, %"class.blink::NGInlineCursor"* dereferenceable(112) %3)
  br label %21

21:                                               ; preds = %17, %16
  ret void
}

declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::PositionWithAffinityTemplate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14NGFragmentItem22PositionForPointInTextEjRKNS_14NGInlineCursorE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::NGFragmentItem"* nocapture readonly, i32, %"class.blink::NGInlineCursor"* nocapture readonly dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::NGCaretPosition", align 8
  %6 = alloca %"struct.blink::NGCaretPosition", align 8
  %7 = bitcast %"struct.blink::NGCaretPosition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #13
  %8 = bitcast %"class.blink::NGInlineCursor"* %3 to i8*
  %9 = getelementptr inbounds %"struct.blink::NGCaretPosition", %"struct.blink::NGCaretPosition"* %5, i64 0, i32 0, i32 9, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 -86, i64 20, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %8, i64 108, i1 false)
  %10 = getelementptr inbounds %"struct.blink::NGCaretPosition", %"struct.blink::NGCaretPosition"* %5, i64 0, i32 1
  store i32 2, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.blink::NGCaretPosition", %"struct.blink::NGCaretPosition"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %11, align 4
  %12 = getelementptr inbounds %"struct.blink::NGCaretPosition", %"struct.blink::NGCaretPosition"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %2, i32* %12, align 4
  %13 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  call void @_ZNK5blink15NGCaretPosition31ToPositionInDOMTreeWithAffinityEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"struct.blink::NGCaretPosition"* nonnull %5) #13
  br label %66

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 6
  %18 = load i16, i16* %17, align 8
  %19 = and i16 %18, 7
  %20 = zext i16 %19 to i32
  switch i32 %20, label %33 [
    i32 0, label %21
    i32 1, label %23
  ]

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  br label %28

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %25 = bitcast %union.anon.1631* %24 to %"struct.blink::NGSvgFragmentData"**
  %26 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %25, align 8
  %27 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %26, i64 0, i32 1
  br label %28

28:                                               ; preds = %23, %21
  %29 = phi %"struct.blink::NGTextOffset"* [ %22, %21 ], [ %27, %23 ]
  %30 = bitcast %"struct.blink::NGTextOffset"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  br label %33

33:                                               ; preds = %28, %16
  %34 = phi i32 [ 0, %16 ], [ %32, %28 ]
  %35 = icmp ult i32 %34, %2
  br i1 %35, label %36, label %64

36:                                               ; preds = %33
  switch i32 %20, label %64 [
    i32 0, label %37
    i32 1, label %43
    i32 2, label %52
  ]

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  %39 = bitcast %"struct.blink::NGTextOffset"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = lshr i64 %40, 32
  %42 = trunc i64 %41 to i32
  br label %60

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %45 = bitcast %union.anon.1631* %44 to %"struct.blink::NGSvgFragmentData"**
  %46 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %45, align 8
  %47 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %46, i64 0, i32 1
  %48 = bitcast %"struct.blink::NGTextOffset"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = lshr i64 %49, 32
  %51 = trunc i64 %50 to i32
  br label %60

52:                                               ; preds = %36
  %53 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  %54 = bitcast %"struct.blink::NGTextOffset"* %53 to %"class.WTF::StringImpl"**
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %64, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  br label %60

60:                                               ; preds = %37, %43, %57
  %61 = phi i32 [ %42, %37 ], [ %51, %43 ], [ %59, %57 ]
  %62 = icmp ugt i32 %61, %2
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK5blink15NGCaretPosition31ToPositionInDOMTreeWithAffinityEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"struct.blink::NGCaretPosition"* nonnull %5) #13
  br label %66

64:                                               ; preds = %36, %52, %60, %33
  %65 = bitcast %"struct.blink::NGCaretPosition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %65) #13
  call void @_ZN5blink14BidiAdjustment16AdjustForHitTestERKNS_15NGCaretPositionE(%"struct.blink::NGCaretPosition"* nonnull sret %6, %"struct.blink::NGCaretPosition"* nonnull dereferenceable(128) %5) #13
  call void @_ZNK5blink15NGCaretPosition31ToPositionInDOMTreeWithAffinityEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"struct.blink::NGCaretPosition"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %65) #13
  br label %66

66:                                               ; preds = %64, %63, %15
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14NGFragmentItem18TextOffsetForPointERKNS_14PhysicalOffsetERKNS_15NGFragmentItemsE(%"class.blink::NGFragmentItem"* readonly, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), %"class.blink::NGFragmentItems"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 0
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 6
  %8 = load i16, i16* %7, align 8
  %9 = lshr i16 %8, 6
  %10 = and i16 %9, 3
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  br label %19

15:                                               ; preds = %3
  %16 = zext i16 %10 to i32
  %17 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %6, i32 %16) #13
  %18 = load i16, i16* %7, align 8
  br label %19

19:                                               ; preds = %12, %15
  %20 = phi i16 [ %8, %12 ], [ %18, %15 ]
  %21 = phi %"class.blink::ComputedStyle"* [ %14, %12 ], [ %17, %15 ]
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = and i160 %24, 15211807202738752817960438464512
  %26 = icmp eq i160 %25, 0
  %27 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1
  %29 = select i1 %26, %"class.blink::LayoutUnit"* %27, %"class.blink::LayoutUnit"* %28
  %30 = and i16 %20, 7
  %31 = zext i16 %30 to i32
  switch i32 %31, label %79 [
    i32 0, label %32
    i32 1, label %34
    i32 2, label %39
  ]

32:                                               ; preds = %19
  %33 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %41

34:                                               ; preds = %19
  %35 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %36 = bitcast %union.anon.1631* %35 to %"struct.blink::NGSvgFragmentData"**
  %37 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %37, i64 0, i32 0, i32 0
  br label %41

39:                                               ; preds = %19
  %40 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %32, %34, %39
  %42 = phi %"class.blink::ShapeResultView"** [ %33, %32 ], [ %38, %34 ], [ %40, %39 ]
  %43 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %42, align 8
  %44 = icmp eq %"class.blink::ShapeResultView"* %43, null
  br i1 %44, label %79, label %45

45:                                               ; preds = %41
  %46 = tail call %"class.blink::ShapeResult"* @_ZNK5blink15ShapeResultView17CreateShapeResultEv(%"class.blink::ShapeResultView"* nonnull %43) #13
  %47 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %29, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = sitofp i32 %48 to float
  %50 = fmul float %49, 1.562500e-02
  %51 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #13
  call void @_ZNK5blink14NGFragmentItem4TextERKNS_15NGFragmentItemsE(%"class.WTF::StringView"* nonnull sret %4, %"class.blink::NGFragmentItem"* %0, %"class.blink::NGFragmentItems"* dereferenceable(24) %2)
  %52 = call i32 @_ZNK5blink11ShapeResult21CaretOffsetForHitTestEfRKN3WTF10StringViewENS_17BreakGlyphsOptionE(%"class.blink::ShapeResult"* %46, float %50, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, i32 1) #13
  %53 = load i16, i16* %7, align 8
  %54 = and i16 %53, 7
  %55 = zext i16 %54 to i32
  switch i32 %55, label %68 [
    i32 0, label %56
    i32 1, label %58
  ]

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  br label %63

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %60 = bitcast %union.anon.1631* %59 to %"struct.blink::NGSvgFragmentData"**
  %61 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %60, align 8
  %62 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %61, i64 0, i32 1
  br label %63

63:                                               ; preds = %58, %56
  %64 = phi %"struct.blink::NGTextOffset"* [ %57, %56 ], [ %62, %58 ]
  %65 = bitcast %"struct.blink::NGTextOffset"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  br label %68

68:                                               ; preds = %63, %45
  %69 = phi i32 [ 0, %45 ], [ %67, %63 ]
  %70 = add i32 %52, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #13
  %71 = icmp eq %"class.blink::ShapeResult"* %46, null
  br i1 %71, label %161, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %46, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %73) #13
  %74 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %161

77:                                               ; preds = %72
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %46) #13
  %78 = bitcast %"class.blink::ShapeResult"* %46 to i8*
  call void @free(i8* %78) #13
  br label %161

79:                                               ; preds = %19, %41
  %80 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %81 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %82 = select i1 %26, i32* %80, i32* %81
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %98

85:                                               ; preds = %79
  switch i32 %31, label %161 [
    i32 0, label %86
    i32 1, label %88
  ]

86:                                               ; preds = %85
  %87 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  br label %93

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %90 = bitcast %union.anon.1631* %89 to %"struct.blink::NGSvgFragmentData"**
  %91 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %90, align 8
  %92 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %91, i64 0, i32 1
  br label %93

93:                                               ; preds = %88, %86
  %94 = phi %"struct.blink::NGTextOffset"* [ %87, %86 ], [ %92, %88 ]
  %95 = bitcast %"struct.blink::NGTextOffset"* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = trunc i64 %96 to i32
  br label %161

98:                                               ; preds = %79
  %99 = and i16 %20, 512
  %100 = icmp eq i16 %99, 0
  %101 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %29, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %110, label %103

103:                                              ; preds = %98
  %104 = icmp sgt i32 %102, -1
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %83, i32 %102) #13
  %107 = extractvalue { i32, i1 } %106, 1
  %108 = extractvalue { i32, i1 } %106, 0
  %109 = select i1 %107, i32 %105, i32 %108, !prof !2
  br label %110

110:                                              ; preds = %98, %103
  %111 = phi i32 [ %109, %103 ], [ %102, %98 ]
  %112 = sdiv i32 %83, 2
  %113 = sext i32 %112 to i64
  %114 = tail call i1 @llvm.is.constant.i64(i64 %113) #13
  br i1 %114, label %121, label %115

115:                                              ; preds = %110
  %116 = icmp slt i32 %83, -1
  %117 = select i1 %116, i32 -2147483648, i32 2147483647
  %118 = add nsw i64 %113, 2147483648
  %119 = icmp ult i64 %118, 4294967296
  %120 = select i1 %119, i32 %112, i32 %117, !prof !3
  br label %121

121:                                              ; preds = %110, %115
  %122 = phi i32 [ %120, %115 ], [ %112, %110 ]
  %123 = icmp sgt i32 %111, %122
  br i1 %123, label %137, label %124

124:                                              ; preds = %121
  switch i32 %31, label %161 [
    i32 0, label %125
    i32 1, label %127
  ]

125:                                              ; preds = %124
  %126 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  br label %132

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %129 = bitcast %union.anon.1631* %128 to %"struct.blink::NGSvgFragmentData"**
  %130 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %129, align 8
  %131 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %130, i64 0, i32 1
  br label %132

132:                                              ; preds = %127, %125
  %133 = phi %"struct.blink::NGTextOffset"* [ %126, %125 ], [ %131, %127 ]
  %134 = bitcast %"struct.blink::NGTextOffset"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = trunc i64 %135 to i32
  br label %161

137:                                              ; preds = %121
  switch i32 %31, label %161 [
    i32 0, label %138
    i32 1, label %144
    i32 2, label %153
  ]

138:                                              ; preds = %137
  %139 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %140 = bitcast %"struct.blink::NGTextOffset"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = lshr i64 %141, 32
  %143 = trunc i64 %142 to i32
  br label %161

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1
  %146 = bitcast %union.anon.1631* %145 to %"struct.blink::NGSvgFragmentData"**
  %147 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %146, align 8
  %148 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %147, i64 0, i32 1
  %149 = bitcast %"struct.blink::NGTextOffset"* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = lshr i64 %150, 32
  %152 = trunc i64 %151 to i32
  br label %161

153:                                              ; preds = %137
  %154 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %0, i64 0, i32 1, i32 0, i32 1
  %155 = bitcast %"struct.blink::NGTextOffset"* %154 to %"class.WTF::StringImpl"**
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %161, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 1
  %160 = load i32, i32* %159, align 4
  br label %161

161:                                              ; preds = %124, %132, %85, %93, %77, %72, %68, %158, %153, %144, %138, %137
  %162 = phi i32 [ %143, %138 ], [ %152, %144 ], [ %160, %158 ], [ 0, %153 ], [ 0, %137 ], [ %70, %68 ], [ %70, %72 ], [ %70, %77 ], [ 0, %85 ], [ %97, %93 ], [ 0, %124 ], [ %136, %132 ]
  ret i32 %162
}

declare void @_ZNK5blink15NGCaretPosition31ToPositionInDOMTreeWithAffinityEv(%"class.blink::PositionWithAffinityTemplate"* sret, %"struct.blink::NGCaretPosition"*) local_unnamed_addr #2

declare void @_ZN5blink14BidiAdjustment16AdjustForHitTestERKNS_15NGCaretPositionE(%"struct.blink::NGCaretPosition"* sret, %"struct.blink::NGCaretPosition"* dereferenceable(128)) local_unnamed_addr #2

declare i32 @_ZNK5blink11ShapeResult21CaretOffsetForHitTestEfRKN3WTF10StringViewENS_17BreakGlyphsOptionE(%"class.blink::ShapeResult"*, float, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_14NGFragmentItemE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::NGFragmentItem"* readonly dereferenceable(64)) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #13
  %5 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 6
  %6 = load i16, i16* %5, align 8
  %7 = and i16 %6, 7
  %8 = zext i16 %7 to i32
  switch i32 %8, label %222 [
    i32 0, label %9
    i32 1, label %66
    i32 2, label %123
    i32 3, label %167
    i32 4, label %187
  ]

9:                                                ; preds = %2
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5) #13
  %11 = load i16, i16* %5, align 8
  %12 = and i16 %11, 7
  %13 = zext i16 %12 to i32
  switch i32 %13, label %26 [
    i32 0, label %14
    i32 1, label %16
  ]

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  br label %21

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %18 = bitcast %union.anon.1631* %17 to %"struct.blink::NGSvgFragmentData"**
  %19 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %18, align 8
  %20 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %19, i64 0, i32 1
  br label %21

21:                                               ; preds = %16, %14
  %22 = phi %"struct.blink::NGTextOffset"* [ %15, %14 ], [ %20, %16 ]
  %23 = bitcast %"struct.blink::NGTextOffset"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  br label %26

26:                                               ; preds = %21, %9
  %27 = phi i32 [ 0, %9 ], [ %25, %21 ]
  %28 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %10, i32 %27) #13
  %29 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #13
  %30 = load i16, i16* %5, align 8
  %31 = and i16 %30, 7
  %32 = zext i16 %31 to i32
  switch i32 %32, label %56 [
    i32 0, label %33
    i32 1, label %39
    i32 2, label %48
  ]

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  %35 = bitcast %"struct.blink::NGTextOffset"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = lshr i64 %36, 32
  %38 = trunc i64 %37 to i32
  br label %56

39:                                               ; preds = %26
  %40 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %41 = bitcast %union.anon.1631* %40 to %"struct.blink::NGSvgFragmentData"**
  %42 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %41, align 8
  %43 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %42, i64 0, i32 1
  %44 = bitcast %"struct.blink::NGTextOffset"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = lshr i64 %45, 32
  %47 = trunc i64 %46 to i32
  br label %56

48:                                               ; preds = %26
  %49 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  %50 = bitcast %"struct.blink::NGTextOffset"* %49 to %"class.WTF::StringImpl"**
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  br label %56

56:                                               ; preds = %26, %33, %39, %48, %53
  %57 = phi i32 [ %38, %33 ], [ %47, %39 ], [ %55, %53 ], [ 0, %48 ], [ 0, %26 ]
  %58 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %29, i32 %57) #13
  %59 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %58, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 1) #13
  %60 = load i16, i16* %5, align 8
  %61 = and i16 %60, 512
  %62 = icmp eq i16 %61, 0
  %63 = select i1 %62, [4 x i8]* @.str.11, [4 x i8]* @.str.12
  %64 = getelementptr inbounds [4 x i8], [4 x i8]* %63, i64 0, i64 0
  %65 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %59, i8* nonnull %64, i64 3) #13
  br label %222

66:                                               ; preds = %2
  %67 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i64 8) #13
  %68 = load i16, i16* %5, align 8
  %69 = and i16 %68, 7
  %70 = zext i16 %69 to i32
  switch i32 %70, label %83 [
    i32 0, label %71
    i32 1, label %73
  ]

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  br label %78

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %75 = bitcast %union.anon.1631* %74 to %"struct.blink::NGSvgFragmentData"**
  %76 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %75, align 8
  %77 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %76, i64 0, i32 1
  br label %78

78:                                               ; preds = %73, %71
  %79 = phi %"struct.blink::NGTextOffset"* [ %72, %71 ], [ %77, %73 ]
  %80 = bitcast %"struct.blink::NGTextOffset"* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  br label %83

83:                                               ; preds = %78, %66
  %84 = phi i32 [ 0, %66 ], [ %82, %78 ]
  %85 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %67, i32 %84) #13
  %86 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %85, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #13
  %87 = load i16, i16* %5, align 8
  %88 = and i16 %87, 7
  %89 = zext i16 %88 to i32
  switch i32 %89, label %113 [
    i32 0, label %90
    i32 1, label %96
    i32 2, label %105
  ]

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  %92 = bitcast %"struct.blink::NGTextOffset"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = lshr i64 %93, 32
  %95 = trunc i64 %94 to i32
  br label %113

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %98 = bitcast %union.anon.1631* %97 to %"struct.blink::NGSvgFragmentData"**
  %99 = load %"struct.blink::NGSvgFragmentData"*, %"struct.blink::NGSvgFragmentData"** %98, align 8
  %100 = getelementptr inbounds %"struct.blink::NGSvgFragmentData", %"struct.blink::NGSvgFragmentData"* %99, i64 0, i32 1
  %101 = bitcast %"struct.blink::NGTextOffset"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = lshr i64 %102, 32
  %104 = trunc i64 %103 to i32
  br label %113

105:                                              ; preds = %83
  %106 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  %107 = bitcast %"struct.blink::NGTextOffset"* %106 to %"class.WTF::StringImpl"**
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %113, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 1
  %112 = load i32, i32* %111, align 4
  br label %113

113:                                              ; preds = %83, %90, %96, %105, %110
  %114 = phi i32 [ %95, %90 ], [ %104, %96 ], [ %112, %110 ], [ 0, %105 ], [ 0, %83 ]
  %115 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %86, i32 %114) #13
  %116 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %115, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 1) #13
  %117 = load i16, i16* %5, align 8
  %118 = and i16 %117, 512
  %119 = icmp eq i16 %118, 0
  %120 = select i1 %119, [4 x i8]* @.str.11, [4 x i8]* @.str.12
  %121 = getelementptr inbounds [4 x i8], [4 x i8]* %120, i64 0, i64 0
  %122 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %116, i8* nonnull %121, i64 3) #13
  br label %222

123:                                              ; preds = %2
  %124 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i64 15) #13
  %125 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #13
  %126 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1
  %127 = bitcast %"struct.blink::NGTextOffset"* %126 to %"class.WTF::StringImpl"**
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %147, label %130

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %147

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i33
  %139 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %138, i33 1) #13
  %140 = extractvalue { i33, i1 } %139, 1
  %141 = extractvalue { i33, i1 } %139, 0
  %142 = icmp slt i33 %141, 0
  %143 = or i1 %140, %142
  br i1 %143, label %144, label %145, !prof !2

144:                                              ; preds = %135
  tail call void @llvm.trap() #13
  unreachable

145:                                              ; preds = %135
  %146 = trunc i33 %141 to i32
  store i32 %146, i32* %136, align 4
  br label %147

147:                                              ; preds = %123, %130, %145
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %148, align 8
  %149 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %124, %"class.WTF::String"* nonnull dereferenceable(8) %3) #13
  %150 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %149, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #13
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #13
  br label %166

166:                                              ; preds = %147, %162, %165
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #13
  br label %222

167:                                              ; preds = %2
  %168 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i64 18) #13
  %169 = load i16, i16* %5, align 8
  %170 = and i16 %169, 7
  %171 = zext i16 %170 to i32
  %172 = add nsw i32 %171, -3
  %173 = icmp ult i32 %172, 2
  br i1 %173, label %174, label %177

174:                                              ; preds = %167
  %175 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %176 = load i32, i32* %175, align 8
  br label %177

177:                                              ; preds = %167, %174
  %178 = phi i32 [ 0, %167 ], [ %176, %174 ]
  %179 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %168, i32 %178) #13
  %180 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %179, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 1) #13
  %181 = load i16, i16* %5, align 8
  %182 = and i16 %181, 512
  %183 = icmp eq i16 %182, 0
  %184 = select i1 %183, [4 x i8]* @.str.11, [4 x i8]* @.str.12
  %185 = getelementptr inbounds [4 x i8], [4 x i8]* %184, i64 0, i64 0
  %186 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %180, i8* nonnull %185, i64 3) #13
  br label %222

187:                                              ; preds = %2
  %188 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i64 17) #13
  %189 = load i16, i16* %5, align 8
  %190 = and i16 %189, 7
  %191 = zext i16 %190 to i32
  %192 = add nsw i32 %191, -3
  %193 = icmp ult i32 %192, 2
  br i1 %193, label %194, label %197

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %196 = load i32, i32* %195, align 8
  br label %197

197:                                              ; preds = %187, %194
  %198 = phi i32 [ 0, %187 ], [ %196, %194 ]
  %199 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %188, i32 %198) #13
  %200 = load i16, i16* %5, align 8
  %201 = and i16 %200, 7
  %202 = icmp eq i16 %201, 4
  br i1 %202, label %203, label %222

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %1, i64 0, i32 1
  %205 = bitcast %union.anon.1631* %204 to %"class.blink::NGPhysicalBoxFragment"**
  %206 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %205, align 8
  %207 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %206, null
  br i1 %207, label %222, label %208

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %206, i64 0, i32 0, i32 3
  %210 = bitcast i24* %209 to i32*
  %211 = load i32, i32* %210, align 8
  %212 = and i32 %211, 960
  %213 = icmp eq i32 %212, 384
  br i1 %213, label %214, label %222

214:                                              ; preds = %208
  %215 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i64 13) #13
  %216 = load i16, i16* %5, align 8
  %217 = and i16 %216, 512
  %218 = icmp eq i16 %217, 0
  %219 = select i1 %218, [4 x i8]* @.str.11, [4 x i8]* @.str.12
  %220 = getelementptr inbounds [4 x i8], [4 x i8]* %219, i64 0, i64 0
  %221 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %215, i8* nonnull %220, i64 3) #13
  br label %222

222:                                              ; preds = %197, %203, %208, %214, %2, %177, %166, %113, %56
  %223 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 1) #13
  %224 = load i16, i16* %5, align 8
  %225 = lshr i16 %224, 6
  %226 = and i16 %225, 3
  %227 = zext i16 %226 to i32
  switch i32 %227, label %234 [
    i32 0, label %228
    i32 1, label %230
    i32 2, label %232
  ]

228:                                              ; preds = %222
  %229 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0), i64 8) #13
  br label %234

230:                                              ; preds = %222
  %231 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i64 9) #13
  br label %234

232:                                              ; preds = %222
  %233 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i64 8) #13
  br label %234

234:                                              ; preds = %222, %232, %230, %228
  %235 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0), i64 1) #13
  ret %"class.std::__1::basic_ostream"* %235
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPKNS_14NGFragmentItemE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::NGFragmentItem"* readonly) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::NGFragmentItem"* %1, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i64 6) #13
  br label %8

6:                                                ; preds = %2
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_14NGFragmentItemE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, %"class.blink::NGFragmentItem"* nonnull dereferenceable(64) %1)
  br label %8

8:                                                ; preds = %6, %4
  %9 = phi %"class.std::__1::basic_ostream"* [ %7, %6 ], [ %5, %4 ]
  ret %"class.std::__1::basic_ostream"* %9
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare i32 @_ZN5blink13NGInkOverflow5ResetENS0_4TypeES1_(%"class.blink::NGInkOverflow"*, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink9FloatRect5ScaleEff(%"class.blink::FloatRect"*, float, float) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #2

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !2

22:                                               ; preds = %15
  %23 = bitcast %union.anon.1967* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.1967* %16 to %"class.WTF::Vector.1973"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1973"* %30, i16* nonnull dereferenceable(2) %3) #13
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1968"* %41, i8* nonnull dereferenceable(1) %4) #13
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1973"*, i16* dereferenceable(2)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1973"* %0, i32 %5) #13
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1973"* %0, i32 %5) #13
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1973"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1973"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1973"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1973"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1973"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1973"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1973"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #13
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1974"* %19, i16* nonnull %6) #13
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #13
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #13
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1974"* %53, i16* %48) #13
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1973"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1973", %"class.WTF::Vector.1973"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.27, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.28, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1974"*, i16*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1968"*, i8* dereferenceable(1)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1968"* %0, i32 %5) #13
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1968"* %0, i32 %5) #13
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1968"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1968"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.1968"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1968"* %0, i32 %27) #13
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1968"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.1968"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.1968"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #13
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1969"* %18, i8* nonnull %6) #13
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !3

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #13
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1969"* %46, i8* %42) #13
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.1968"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.1968", %"class.WTF::Vector.1968"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.27, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.28, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #13
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1969"*, i8*) local_unnamed_addr #9 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #13
  ret void
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

declare void @_ZN5blink21NGPhysicalBoxFragment17RecalcInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare void @_ZN5blink21NGPhysicalBoxFragment17RecalcInkOverflowERKNS_12PhysicalRectE(%"class.blink::NGPhysicalBoxFragment"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #12

; Function Attrs: nounwind
declare void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink14NGFragmentItem13TextPaintInfoERKNS_15NGFragmentItemsE: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink14NGFragmentItem13TextPaintInfoERKNS_15NGFragmentItemsE"}
