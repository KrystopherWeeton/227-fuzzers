; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/reverse_sequence.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/reverse_sequence.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, {}*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%struct.TfLiteReverseSequenceParams = type { i32, i32 }

$_ZN6tflite13reference_ops15ReverseSequenceIfiEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops15ReverseSequenceIflEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops15ReverseSequenceIhiEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops15ReverseSequenceIhlEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops15ReverseSequenceIsiEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops15ReverseSequenceIslEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops15ReverseSequenceIiiEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops15ReverseSequenceIilEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops15ReverseSequenceIliEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops15ReverseSequenceIllEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

@_ZZN6tflite3ops7builtin25Register_REVERSE_SEQUENCEEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin16reverse_sequence12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin16reverse_sequence12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.4 = private unnamed_addr constant [73 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/reverse_sequence.cc\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"NumDimensions(seq_lengths)\00", align 1
@.str.10 = private unnamed_addr constant [48 x i8] c"Type '%s' is not supported by reverse_sequence.\00", align 1
@.str.11 = private unnamed_addr constant [60 x i8] c"Seq_lengths type '%s' is not supported by reverse_sequence.\00", align 1
@.str.12 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"output->type\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"input->type\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"seq_dim >= 0\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"batch_dim >= 0\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"seq_dim != batch_dim\00", align 1
@.str.19 = private unnamed_addr constant [31 x i8] c"seq_dim < NumDimensions(input)\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"batch_dim < NumDimensions(input)\00", align 1
@.str.21 = private unnamed_addr constant [39 x i8] c"SizeOfDimension(seq_lengths_tensor, 0)\00", align 1
@.str.22 = private unnamed_addr constant [34 x i8] c"SizeOfDimension(input, batch_dim)\00", align 1
@.str.23 = private unnamed_addr constant [50 x i8] c"seq_lengths[i] <= SizeOfDimension(input, seq_dim)\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin25Register_REVERSE_SEQUENCEEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin25Register_REVERSE_SEQUENCEEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin16reverse_sequence12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 36, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i32 %6, i32 2) #6
  br label %91

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %15, i32 1) #6
  br label %91

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %29, %34
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 2
  %42 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %41, align 8
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %48 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %47, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %48(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 41, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %44, i32 1) #6
  br label %91

49:                                               ; preds = %39
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  switch i32 %51, label %52 [
    i32 2, label %56
    i32 1, label %56
    i32 3, label %56
    i32 7, label %56
    i32 4, label %56
  ]

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %54 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %53, align 8
  %55 = tail call i8* @TfLiteTypeGetName(i32 %51) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %54(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.10, i64 0, i64 0), i8* %55) #6
  br label %91

56:                                               ; preds = %49, %49, %49, %49, %49
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  switch i32 %58, label %59 [
    i32 2, label %63
    i32 4, label %63
  ]

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %61 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %60, align 8
  %62 = tail call i8* @TfLiteTypeGetName(i32 %58) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %61(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i8* %62) #6
  br label %91

63:                                               ; preds = %56, %56
  %64 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %69 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %68, align 8
  %70 = sext i32 %65 to i64
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %69, i64 %70
  br label %72

72:                                               ; preds = %63, %67
  %73 = phi %struct.TfLiteTensor* [ %71, %67 ], [ null, %63 ]
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %75 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %74, align 8
  %76 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %75) #6
  %77 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = load i32, i32* %50, align 8
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %87, label %81

81:                                               ; preds = %72
  %82 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %83 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %82, align 8
  %84 = tail call i8* @TfLiteTypeGetName(i32 %78) #6
  %85 = load i32, i32* %50, align 8
  %86 = tail call i8* @TfLiteTypeGetName(i32 %85) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %83(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 61, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i8* %84, i8* %86) #6
  br label %91

87:                                               ; preds = %72
  %88 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %89 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %88, align 8
  %90 = tail call i32 %89(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %73, %struct.TfLiteIntArray* %76) #6
  br label %91

91:                                               ; preds = %46, %52, %59, %87, %81, %17, %8
  %92 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %46 ], [ 1, %52 ], [ 1, %59 ], [ 1, %81 ], [ %90, %87 ]
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin16reverse_sequence12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* readonly) #1 {
  %3 = alloca %"class.tflite::RuntimeShape", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.tflite::RuntimeShape", align 8
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %24 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %23, align 8
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %24, i64 0, i32 1, i64 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  br label %33

33:                                               ; preds = %2, %28
  %34 = phi %struct.TfLiteTensor* [ %32, %28 ], [ null, %2 ]
  %35 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  switch i32 %36, label %1958 [
    i32 1, label %37
    i32 3, label %422
    i32 7, label %807
    i32 2, label %1192
    i32 4, label %1573
  ]

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %39 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %38, align 8
  %40 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = sext i32 %41 to i64
  %47 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 %46
  br label %48

48:                                               ; preds = %43, %37
  %49 = phi %struct.TfLiteTensor* [ %47, %43 ], [ null, %37 ]
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %49, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  switch i32 %51, label %418 [
    i32 2, label %52
    i32 4, label %234
  ]

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %58 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %57, align 8
  %59 = sext i32 %54 to i64
  %60 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 %59
  br label %61

61:                                               ; preds = %56, %52
  %62 = phi %struct.TfLiteTensor* [ %60, %56 ], [ null, %52 ]
  br i1 %42, label %72, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %65 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %64, align 8
  %66 = sext i32 %41 to i64
  %67 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %65, i64 %66
  %68 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %65, i64 %66, i32 1, i32 0
  %71 = load i32*, i32** %70, align 8
  br label %72

72:                                               ; preds = %69, %63, %61
  %73 = phi %struct.TfLiteTensor* [ %67, %69 ], [ null, %63 ], [ null, %61 ]
  %74 = phi i32* [ %71, %69 ], [ null, %63 ], [ null, %61 ]
  %75 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %76 = bitcast i8** %75 to %struct.TfLiteReverseSequenceParams**
  %77 = load %struct.TfLiteReverseSequenceParams*, %struct.TfLiteReverseSequenceParams** %76, align 8
  %78 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %77, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = icmp sgt i32 %79, -1
  br i1 %82, label %86, label %83

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %85 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %84, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %85(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 78, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %1962

86:                                               ; preds = %72
  %87 = icmp sgt i32 %81, -1
  br i1 %87, label %91, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %90 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %89, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %90(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %1962

91:                                               ; preds = %86
  %92 = icmp eq i32 %79, %81
  br i1 %92, label %93, label %96

93:                                               ; preds = %91
  %94 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %95 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %94, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %95(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %1962

96:                                               ; preds = %91
  %97 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %62, i64 0, i32 2
  %98 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %97, align 8
  %99 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %98, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp slt i32 %79, %100
  br i1 %101, label %105, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %104 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %103, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %104(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0)) #6
  br label %1962

105:                                              ; preds = %96
  %106 = icmp slt i32 %81, %100
  br i1 %106, label %110, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %109 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %108, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %109(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #6
  br label %1962

110:                                              ; preds = %105
  %111 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 2
  %112 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %111, align 8
  %113 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %112, i64 0, i32 1, i64 0
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %81 to i64
  %116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %98, i64 0, i32 1, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %114, %117
  br i1 %118, label %119, label %128

119:                                              ; preds = %110
  %120 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %112, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %123, label %142

123:                                              ; preds = %119
  %124 = sext i32 %79 to i64
  %125 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %98, i64 0, i32 1, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = sext i32 %121 to i64
  br label %133

128:                                              ; preds = %110
  %129 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %130 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %129, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %130(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0), i32 %114, i32 %117) #6
  br label %1962

131:                                              ; preds = %133
  %132 = icmp eq i64 %138, %127
  br i1 %132, label %142, label %133

133:                                              ; preds = %131, %123
  %134 = phi i64 [ 0, %123 ], [ %138, %131 ]
  %135 = getelementptr inbounds i32, i32* %74, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, %126
  %138 = add nuw nsw i64 %134, 1
  br i1 %137, label %139, label %131

139:                                              ; preds = %133
  %140 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %141 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %140, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %141(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %1962

142:                                              ; preds = %131, %119
  br i1 %27, label %148, label %143

143:                                              ; preds = %142
  %144 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %145 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %144, align 8
  %146 = sext i32 %26 to i64
  %147 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %145, i64 %146
  br label %148

148:                                              ; preds = %143, %142
  %149 = phi %struct.TfLiteTensor* [ %147, %143 ], [ null, %142 ]
  %150 = bitcast %"class.tflite::RuntimeShape"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %150) #6
  %151 = icmp eq %struct.TfLiteTensor* %62, null
  br i1 %151, label %152, label %154

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 0, i32* %153, align 8, !alias.scope !2
  br label %178

154:                                              ; preds = %148
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %98, i64 0, i32 1, i64 0
  %156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 %100, i32* %156, align 8, !alias.scope !2
  %157 = icmp sgt i32 %100, 5
  br i1 %157, label %158, label %165

158:                                              ; preds = %154
  %159 = sext i32 %100 to i64
  %160 = shl nsw i64 %159, 2
  %161 = tail call i8* @_Znam(i64 %160) #7, !noalias !2
  %162 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %163 = bitcast i32** %162 to i8**
  store i8* %161, i8** %163, align 8, !alias.scope !2
  %164 = bitcast i8* %161 to i32*
  br label %170

165:                                              ; preds = %154
  %166 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  %167 = bitcast %union.anon* %166 to i32*
  %168 = sext i32 %100 to i64
  %169 = shl nsw i64 %168, 2
  br label %170

170:                                              ; preds = %165, %158
  %171 = phi i64 [ %160, %158 ], [ %169, %165 ]
  %172 = phi i32* [ %164, %158 ], [ %167, %165 ]
  %173 = bitcast i32* %172 to i8*
  %174 = bitcast i32* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %173, i8* align 4 %174, i64 %171, i1 false) #6
  %175 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %62, i64 0, i32 1
  %176 = bitcast %union.TfLitePtrUnion* %175 to float**
  %177 = load float*, float** %176, align 8
  br label %178

178:                                              ; preds = %170, %152
  %179 = phi float* [ %177, %170 ], [ null, %152 ]
  %180 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %180) #6
  %181 = icmp eq %struct.TfLiteTensor* %149, null
  br i1 %181, label %182, label %184

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %183, align 8, !alias.scope !5
  br label %212

184:                                              ; preds = %178
  %185 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %149, i64 0, i32 2
  %186 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %185, align 8, !noalias !5
  %187 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 0
  %188 = load i32, i32* %187, align 4, !noalias !5
  %189 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 1, i64 0
  %190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %188, i32* %190, align 8, !alias.scope !5
  %191 = icmp sgt i32 %188, 5
  br i1 %191, label %192, label %199

192:                                              ; preds = %184
  %193 = sext i32 %188 to i64
  %194 = shl nsw i64 %193, 2
  %195 = tail call i8* @_Znam(i64 %194) #7, !noalias !5
  %196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %197 = bitcast i32** %196 to i8**
  store i8* %195, i8** %197, align 8, !alias.scope !5
  %198 = bitcast i8* %195 to i32*
  br label %204

199:                                              ; preds = %184
  %200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %201 = bitcast %union.anon* %200 to i32*
  %202 = sext i32 %188 to i64
  %203 = shl nsw i64 %202, 2
  br label %204

204:                                              ; preds = %199, %192
  %205 = phi i64 [ %194, %192 ], [ %203, %199 ]
  %206 = phi i32* [ %198, %192 ], [ %201, %199 ]
  %207 = bitcast i32* %206 to i8*
  %208 = bitcast i32* %189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %208, i64 %205, i1 false) #6
  %209 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %149, i64 0, i32 1
  %210 = bitcast %union.TfLitePtrUnion* %209 to float**
  %211 = load float*, float** %210, align 8
  br label %212

212:                                              ; preds = %204, %182
  %213 = phi float* [ %211, %204 ], [ null, %182 ]
  call void @_ZN6tflite13reference_ops15ReverseSequenceIfiEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i32* %74, i32 %79, i32 %81, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %21, float* %179, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, float* %213) #6
  %214 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %215 = load i32, i32* %214, align 8
  %216 = icmp sgt i32 %215, 5
  br i1 %216, label %217, label %223

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %219 = load i32*, i32** %218, align 8
  %220 = icmp eq i32* %219, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %217
  %222 = bitcast i32* %219 to i8*
  call void @_ZdaPv(i8* %222) #7
  br label %223

223:                                              ; preds = %221, %217, %212
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %180) #6
  %224 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  %225 = load i32, i32* %224, align 8
  %226 = icmp sgt i32 %225, 5
  br i1 %226, label %227, label %233

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %229 = load i32*, i32** %228, align 8
  %230 = icmp eq i32* %229, null
  br i1 %230, label %233, label %231

231:                                              ; preds = %227
  %232 = bitcast i32* %229 to i8*
  call void @_ZdaPv(i8* %232) #7
  br label %233

233:                                              ; preds = %231, %227, %223
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %150) #6
  br label %1962

234:                                              ; preds = %48
  %235 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 0
  %236 = load i32, i32* %235, align 4
  %237 = icmp slt i32 %236, 0
  br i1 %237, label %243, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %240 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %239, align 8
  %241 = sext i32 %236 to i64
  %242 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %240, i64 %241
  br label %243

243:                                              ; preds = %238, %234
  %244 = phi %struct.TfLiteTensor* [ %242, %238 ], [ null, %234 ]
  br i1 %42, label %255, label %245

245:                                              ; preds = %243
  %246 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %247 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %246, align 8
  %248 = sext i32 %41 to i64
  %249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %247, i64 %248
  %250 = icmp eq %struct.TfLiteTensor* %249, null
  br i1 %250, label %255, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %247, i64 %248, i32 1
  %253 = bitcast %union.TfLitePtrUnion* %252 to i64**
  %254 = load i64*, i64** %253, align 8
  br label %255

255:                                              ; preds = %251, %245, %243
  %256 = phi %struct.TfLiteTensor* [ %249, %251 ], [ null, %245 ], [ null, %243 ]
  %257 = phi i64* [ %254, %251 ], [ null, %245 ], [ null, %243 ]
  %258 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %259 = bitcast i8** %258 to %struct.TfLiteReverseSequenceParams**
  %260 = load %struct.TfLiteReverseSequenceParams*, %struct.TfLiteReverseSequenceParams** %259, align 8
  %261 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %260, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %260, i64 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %262, -1
  br i1 %265, label %269, label %266

266:                                              ; preds = %255
  %267 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %268 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %267, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %268(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 78, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %1962

269:                                              ; preds = %255
  %270 = icmp sgt i32 %264, -1
  br i1 %270, label %274, label %271

271:                                              ; preds = %269
  %272 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %273 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %272, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %273(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %1962

274:                                              ; preds = %269
  %275 = icmp eq i32 %262, %264
  br i1 %275, label %276, label %279

276:                                              ; preds = %274
  %277 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %278 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %277, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %278(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %1962

279:                                              ; preds = %274
  %280 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %244, i64 0, i32 2
  %281 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %280, align 8
  %282 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %281, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  %284 = icmp slt i32 %262, %283
  br i1 %284, label %288, label %285

285:                                              ; preds = %279
  %286 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %287 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %286, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %287(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0)) #6
  br label %1962

288:                                              ; preds = %279
  %289 = icmp slt i32 %264, %283
  br i1 %289, label %293, label %290

290:                                              ; preds = %288
  %291 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %292 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %291, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %292(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #6
  br label %1962

293:                                              ; preds = %288
  %294 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %256, i64 0, i32 2
  %295 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %294, align 8
  %296 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %295, i64 0, i32 1, i64 0
  %297 = load i32, i32* %296, align 4
  %298 = sext i32 %264 to i64
  %299 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %281, i64 0, i32 1, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = icmp eq i32 %297, %300
  br i1 %301, label %302, label %312

302:                                              ; preds = %293
  %303 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %295, i64 0, i32 0
  %304 = load i32, i32* %303, align 4
  %305 = icmp sgt i32 %304, 0
  br i1 %305, label %306, label %326

306:                                              ; preds = %302
  %307 = sext i32 %262 to i64
  %308 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %281, i64 0, i32 1, i64 %307
  %309 = load i32, i32* %308, align 4
  %310 = sext i32 %309 to i64
  %311 = sext i32 %304 to i64
  br label %317

312:                                              ; preds = %293
  %313 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %314 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %313, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %314(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0), i32 %297, i32 %300) #6
  br label %1962

315:                                              ; preds = %317
  %316 = icmp eq i64 %322, %311
  br i1 %316, label %326, label %317

317:                                              ; preds = %315, %306
  %318 = phi i64 [ 0, %306 ], [ %322, %315 ]
  %319 = getelementptr inbounds i64, i64* %257, i64 %318
  %320 = load i64, i64* %319, align 8
  %321 = icmp sgt i64 %320, %310
  %322 = add nuw nsw i64 %318, 1
  br i1 %321, label %323, label %315

323:                                              ; preds = %317
  %324 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %325 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %324, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %325(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %1962

326:                                              ; preds = %315, %302
  br i1 %27, label %332, label %327

327:                                              ; preds = %326
  %328 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %329 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %328, align 8
  %330 = sext i32 %26 to i64
  %331 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %329, i64 %330
  br label %332

332:                                              ; preds = %327, %326
  %333 = phi %struct.TfLiteTensor* [ %331, %327 ], [ null, %326 ]
  %334 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %334) #6
  %335 = icmp eq %struct.TfLiteTensor* %244, null
  br i1 %335, label %336, label %338

336:                                              ; preds = %332
  %337 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %337, align 8, !alias.scope !8
  br label %362

338:                                              ; preds = %332
  %339 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %281, i64 0, i32 1, i64 0
  %340 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %283, i32* %340, align 8, !alias.scope !8
  %341 = icmp sgt i32 %283, 5
  br i1 %341, label %342, label %349

342:                                              ; preds = %338
  %343 = sext i32 %283 to i64
  %344 = shl nsw i64 %343, 2
  %345 = tail call i8* @_Znam(i64 %344) #7, !noalias !8
  %346 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %347 = bitcast i32** %346 to i8**
  store i8* %345, i8** %347, align 8, !alias.scope !8
  %348 = bitcast i8* %345 to i32*
  br label %354

349:                                              ; preds = %338
  %350 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %351 = bitcast %union.anon* %350 to i32*
  %352 = sext i32 %283 to i64
  %353 = shl nsw i64 %352, 2
  br label %354

354:                                              ; preds = %349, %342
  %355 = phi i64 [ %344, %342 ], [ %353, %349 ]
  %356 = phi i32* [ %348, %342 ], [ %351, %349 ]
  %357 = bitcast i32* %356 to i8*
  %358 = bitcast i32* %339 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %357, i8* align 4 %358, i64 %355, i1 false) #6
  %359 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %244, i64 0, i32 1
  %360 = bitcast %union.TfLitePtrUnion* %359 to float**
  %361 = load float*, float** %360, align 8
  br label %362

362:                                              ; preds = %354, %336
  %363 = phi float* [ %361, %354 ], [ null, %336 ]
  %364 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %364) #6
  %365 = icmp eq %struct.TfLiteTensor* %333, null
  br i1 %365, label %366, label %368

366:                                              ; preds = %362
  %367 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %367, align 8, !alias.scope !11
  br label %396

368:                                              ; preds = %362
  %369 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %333, i64 0, i32 2
  %370 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %369, align 8, !noalias !11
  %371 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %370, i64 0, i32 0
  %372 = load i32, i32* %371, align 4, !noalias !11
  %373 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %370, i64 0, i32 1, i64 0
  %374 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %372, i32* %374, align 8, !alias.scope !11
  %375 = icmp sgt i32 %372, 5
  br i1 %375, label %376, label %383

376:                                              ; preds = %368
  %377 = sext i32 %372 to i64
  %378 = shl nsw i64 %377, 2
  %379 = tail call i8* @_Znam(i64 %378) #7, !noalias !11
  %380 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %381 = bitcast i32** %380 to i8**
  store i8* %379, i8** %381, align 8, !alias.scope !11
  %382 = bitcast i8* %379 to i32*
  br label %388

383:                                              ; preds = %368
  %384 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %385 = bitcast %union.anon* %384 to i32*
  %386 = sext i32 %372 to i64
  %387 = shl nsw i64 %386, 2
  br label %388

388:                                              ; preds = %383, %376
  %389 = phi i64 [ %378, %376 ], [ %387, %383 ]
  %390 = phi i32* [ %382, %376 ], [ %385, %383 ]
  %391 = bitcast i32* %390 to i8*
  %392 = bitcast i32* %373 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %391, i8* align 4 %392, i64 %389, i1 false) #6
  %393 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %333, i64 0, i32 1
  %394 = bitcast %union.TfLitePtrUnion* %393 to float**
  %395 = load float*, float** %394, align 8
  br label %396

396:                                              ; preds = %388, %366
  %397 = phi float* [ %395, %388 ], [ null, %366 ]
  call void @_ZN6tflite13reference_ops15ReverseSequenceIflEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i64* %257, i32 %262, i32 %264, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, float* %363, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %20, float* %397) #6
  %398 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  %399 = load i32, i32* %398, align 8
  %400 = icmp sgt i32 %399, 5
  br i1 %400, label %401, label %407

401:                                              ; preds = %396
  %402 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %403 = load i32*, i32** %402, align 8
  %404 = icmp eq i32* %403, null
  br i1 %404, label %407, label %405

405:                                              ; preds = %401
  %406 = bitcast i32* %403 to i8*
  call void @_ZdaPv(i8* %406) #7
  br label %407

407:                                              ; preds = %405, %401, %396
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %364) #6
  %408 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %409 = load i32, i32* %408, align 8
  %410 = icmp sgt i32 %409, 5
  br i1 %410, label %411, label %417

411:                                              ; preds = %407
  %412 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %413 = load i32*, i32** %412, align 8
  %414 = icmp eq i32* %413, null
  br i1 %414, label %417, label %415

415:                                              ; preds = %411
  %416 = bitcast i32* %413 to i8*
  call void @_ZdaPv(i8* %416) #7
  br label %417

417:                                              ; preds = %415, %411, %407
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %334) #6
  br label %1962

418:                                              ; preds = %48
  %419 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %420 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %419, align 8
  %421 = tail call i8* @TfLiteTypeGetName(i32 %51) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %420(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i8* %421) #6
  br label %1962

422:                                              ; preds = %33
  %423 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %424 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %423, align 8
  %425 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %424, i64 0, i32 1, i64 1
  %426 = load i32, i32* %425, align 4
  %427 = icmp slt i32 %426, 0
  br i1 %427, label %433, label %428

428:                                              ; preds = %422
  %429 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %430 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %429, align 8
  %431 = sext i32 %426 to i64
  %432 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %430, i64 %431
  br label %433

433:                                              ; preds = %428, %422
  %434 = phi %struct.TfLiteTensor* [ %432, %428 ], [ null, %422 ]
  %435 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %434, i64 0, i32 0
  %436 = load i32, i32* %435, align 8
  switch i32 %436, label %803 [
    i32 2, label %437
    i32 4, label %619
  ]

437:                                              ; preds = %433
  %438 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %424, i64 0, i32 1, i64 0
  %439 = load i32, i32* %438, align 4
  %440 = icmp slt i32 %439, 0
  br i1 %440, label %446, label %441

441:                                              ; preds = %437
  %442 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %443 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %442, align 8
  %444 = sext i32 %439 to i64
  %445 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %443, i64 %444
  br label %446

446:                                              ; preds = %441, %437
  %447 = phi %struct.TfLiteTensor* [ %445, %441 ], [ null, %437 ]
  br i1 %427, label %457, label %448

448:                                              ; preds = %446
  %449 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %450 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %449, align 8
  %451 = sext i32 %426 to i64
  %452 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %450, i64 %451
  %453 = icmp eq %struct.TfLiteTensor* %452, null
  br i1 %453, label %457, label %454

454:                                              ; preds = %448
  %455 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %450, i64 %451, i32 1, i32 0
  %456 = load i32*, i32** %455, align 8
  br label %457

457:                                              ; preds = %454, %448, %446
  %458 = phi %struct.TfLiteTensor* [ %452, %454 ], [ null, %448 ], [ null, %446 ]
  %459 = phi i32* [ %456, %454 ], [ null, %448 ], [ null, %446 ]
  %460 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %461 = bitcast i8** %460 to %struct.TfLiteReverseSequenceParams**
  %462 = load %struct.TfLiteReverseSequenceParams*, %struct.TfLiteReverseSequenceParams** %461, align 8
  %463 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %462, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  %465 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %462, i64 0, i32 1
  %466 = load i32, i32* %465, align 4
  %467 = icmp sgt i32 %464, -1
  br i1 %467, label %471, label %468

468:                                              ; preds = %457
  %469 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %470 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %469, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %470(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 78, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %1962

471:                                              ; preds = %457
  %472 = icmp sgt i32 %466, -1
  br i1 %472, label %476, label %473

473:                                              ; preds = %471
  %474 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %475 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %474, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %475(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %1962

476:                                              ; preds = %471
  %477 = icmp eq i32 %464, %466
  br i1 %477, label %478, label %481

478:                                              ; preds = %476
  %479 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %480 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %479, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %480(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %1962

481:                                              ; preds = %476
  %482 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %447, i64 0, i32 2
  %483 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %482, align 8
  %484 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %483, i64 0, i32 0
  %485 = load i32, i32* %484, align 4
  %486 = icmp slt i32 %464, %485
  br i1 %486, label %490, label %487

487:                                              ; preds = %481
  %488 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %489 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %488, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %489(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0)) #6
  br label %1962

490:                                              ; preds = %481
  %491 = icmp slt i32 %466, %485
  br i1 %491, label %495, label %492

492:                                              ; preds = %490
  %493 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %494 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %493, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %494(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #6
  br label %1962

495:                                              ; preds = %490
  %496 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %458, i64 0, i32 2
  %497 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %496, align 8
  %498 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %497, i64 0, i32 1, i64 0
  %499 = load i32, i32* %498, align 4
  %500 = sext i32 %466 to i64
  %501 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %483, i64 0, i32 1, i64 %500
  %502 = load i32, i32* %501, align 4
  %503 = icmp eq i32 %499, %502
  br i1 %503, label %504, label %513

504:                                              ; preds = %495
  %505 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %497, i64 0, i32 0
  %506 = load i32, i32* %505, align 4
  %507 = icmp sgt i32 %506, 0
  br i1 %507, label %508, label %527

508:                                              ; preds = %504
  %509 = sext i32 %464 to i64
  %510 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %483, i64 0, i32 1, i64 %509
  %511 = load i32, i32* %510, align 4
  %512 = sext i32 %506 to i64
  br label %518

513:                                              ; preds = %495
  %514 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %515 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %514, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %515(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0), i32 %499, i32 %502) #6
  br label %1962

516:                                              ; preds = %518
  %517 = icmp eq i64 %523, %512
  br i1 %517, label %527, label %518

518:                                              ; preds = %516, %508
  %519 = phi i64 [ 0, %508 ], [ %523, %516 ]
  %520 = getelementptr inbounds i32, i32* %459, i64 %519
  %521 = load i32, i32* %520, align 4
  %522 = icmp sgt i32 %521, %511
  %523 = add nuw nsw i64 %519, 1
  br i1 %522, label %524, label %516

524:                                              ; preds = %518
  %525 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %526 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %525, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %526(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %1962

527:                                              ; preds = %516, %504
  br i1 %27, label %533, label %528

528:                                              ; preds = %527
  %529 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %530 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %529, align 8
  %531 = sext i32 %26 to i64
  %532 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %530, i64 %531
  br label %533

533:                                              ; preds = %528, %527
  %534 = phi %struct.TfLiteTensor* [ %532, %528 ], [ null, %527 ]
  %535 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %535) #6
  %536 = icmp eq %struct.TfLiteTensor* %447, null
  br i1 %536, label %537, label %539

537:                                              ; preds = %533
  %538 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %538, align 8, !alias.scope !14
  br label %563

539:                                              ; preds = %533
  %540 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %483, i64 0, i32 1, i64 0
  %541 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %485, i32* %541, align 8, !alias.scope !14
  %542 = icmp sgt i32 %485, 5
  br i1 %542, label %543, label %550

543:                                              ; preds = %539
  %544 = sext i32 %485 to i64
  %545 = shl nsw i64 %544, 2
  %546 = tail call i8* @_Znam(i64 %545) #7, !noalias !14
  %547 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %548 = bitcast i32** %547 to i8**
  store i8* %546, i8** %548, align 8, !alias.scope !14
  %549 = bitcast i8* %546 to i32*
  br label %555

550:                                              ; preds = %539
  %551 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %552 = bitcast %union.anon* %551 to i32*
  %553 = sext i32 %485 to i64
  %554 = shl nsw i64 %553, 2
  br label %555

555:                                              ; preds = %550, %543
  %556 = phi i64 [ %545, %543 ], [ %554, %550 ]
  %557 = phi i32* [ %549, %543 ], [ %552, %550 ]
  %558 = bitcast i32* %557 to i8*
  %559 = bitcast i32* %540 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %558, i8* align 4 %559, i64 %556, i1 false) #6
  %560 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %447, i64 0, i32 1
  %561 = bitcast %union.TfLitePtrUnion* %560 to i8**
  %562 = load i8*, i8** %561, align 8
  br label %563

563:                                              ; preds = %555, %537
  %564 = phi i8* [ %562, %555 ], [ null, %537 ]
  %565 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %565) #6
  %566 = icmp eq %struct.TfLiteTensor* %534, null
  br i1 %566, label %567, label %569

567:                                              ; preds = %563
  %568 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %568, align 8, !alias.scope !17
  br label %597

569:                                              ; preds = %563
  %570 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %534, i64 0, i32 2
  %571 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %570, align 8, !noalias !17
  %572 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %571, i64 0, i32 0
  %573 = load i32, i32* %572, align 4, !noalias !17
  %574 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %571, i64 0, i32 1, i64 0
  %575 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %573, i32* %575, align 8, !alias.scope !17
  %576 = icmp sgt i32 %573, 5
  br i1 %576, label %577, label %584

577:                                              ; preds = %569
  %578 = sext i32 %573 to i64
  %579 = shl nsw i64 %578, 2
  %580 = tail call i8* @_Znam(i64 %579) #7, !noalias !17
  %581 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %582 = bitcast i32** %581 to i8**
  store i8* %580, i8** %582, align 8, !alias.scope !17
  %583 = bitcast i8* %580 to i32*
  br label %589

584:                                              ; preds = %569
  %585 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %586 = bitcast %union.anon* %585 to i32*
  %587 = sext i32 %573 to i64
  %588 = shl nsw i64 %587, 2
  br label %589

589:                                              ; preds = %584, %577
  %590 = phi i64 [ %579, %577 ], [ %588, %584 ]
  %591 = phi i32* [ %583, %577 ], [ %586, %584 ]
  %592 = bitcast i32* %591 to i8*
  %593 = bitcast i32* %574 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %592, i8* align 4 %593, i64 %590, i1 false) #6
  %594 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %534, i64 0, i32 1
  %595 = bitcast %union.TfLitePtrUnion* %594 to i8**
  %596 = load i8*, i8** %595, align 8
  br label %597

597:                                              ; preds = %589, %567
  %598 = phi i8* [ %596, %589 ], [ null, %567 ]
  call void @_ZN6tflite13reference_ops15ReverseSequenceIhiEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i32* %459, i32 %464, i32 %466, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i8* %564, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, i8* %598) #6
  %599 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %600 = load i32, i32* %599, align 8
  %601 = icmp sgt i32 %600, 5
  br i1 %601, label %602, label %608

602:                                              ; preds = %597
  %603 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %604 = load i32*, i32** %603, align 8
  %605 = icmp eq i32* %604, null
  br i1 %605, label %608, label %606

606:                                              ; preds = %602
  %607 = bitcast i32* %604 to i8*
  call void @_ZdaPv(i8* %607) #7
  br label %608

608:                                              ; preds = %606, %602, %597
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %565) #6
  %609 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %610 = load i32, i32* %609, align 8
  %611 = icmp sgt i32 %610, 5
  br i1 %611, label %612, label %618

612:                                              ; preds = %608
  %613 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %614 = load i32*, i32** %613, align 8
  %615 = icmp eq i32* %614, null
  br i1 %615, label %618, label %616

616:                                              ; preds = %612
  %617 = bitcast i32* %614 to i8*
  call void @_ZdaPv(i8* %617) #7
  br label %618

618:                                              ; preds = %616, %612, %608
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %535) #6
  br label %1962

619:                                              ; preds = %433
  %620 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %424, i64 0, i32 1, i64 0
  %621 = load i32, i32* %620, align 4
  %622 = icmp slt i32 %621, 0
  br i1 %622, label %628, label %623

623:                                              ; preds = %619
  %624 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %625 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %624, align 8
  %626 = sext i32 %621 to i64
  %627 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %625, i64 %626
  br label %628

628:                                              ; preds = %623, %619
  %629 = phi %struct.TfLiteTensor* [ %627, %623 ], [ null, %619 ]
  br i1 %427, label %640, label %630

630:                                              ; preds = %628
  %631 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %632 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %631, align 8
  %633 = sext i32 %426 to i64
  %634 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %632, i64 %633
  %635 = icmp eq %struct.TfLiteTensor* %634, null
  br i1 %635, label %640, label %636

636:                                              ; preds = %630
  %637 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %632, i64 %633, i32 1
  %638 = bitcast %union.TfLitePtrUnion* %637 to i64**
  %639 = load i64*, i64** %638, align 8
  br label %640

640:                                              ; preds = %636, %630, %628
  %641 = phi %struct.TfLiteTensor* [ %634, %636 ], [ null, %630 ], [ null, %628 ]
  %642 = phi i64* [ %639, %636 ], [ null, %630 ], [ null, %628 ]
  %643 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %644 = bitcast i8** %643 to %struct.TfLiteReverseSequenceParams**
  %645 = load %struct.TfLiteReverseSequenceParams*, %struct.TfLiteReverseSequenceParams** %644, align 8
  %646 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %645, i64 0, i32 0
  %647 = load i32, i32* %646, align 4
  %648 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %645, i64 0, i32 1
  %649 = load i32, i32* %648, align 4
  %650 = icmp sgt i32 %647, -1
  br i1 %650, label %654, label %651

651:                                              ; preds = %640
  %652 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %653 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %652, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %653(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 78, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %1962

654:                                              ; preds = %640
  %655 = icmp sgt i32 %649, -1
  br i1 %655, label %659, label %656

656:                                              ; preds = %654
  %657 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %658 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %657, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %658(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %1962

659:                                              ; preds = %654
  %660 = icmp eq i32 %647, %649
  br i1 %660, label %661, label %664

661:                                              ; preds = %659
  %662 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %663 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %662, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %663(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %1962

664:                                              ; preds = %659
  %665 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %629, i64 0, i32 2
  %666 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %665, align 8
  %667 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %666, i64 0, i32 0
  %668 = load i32, i32* %667, align 4
  %669 = icmp slt i32 %647, %668
  br i1 %669, label %673, label %670

670:                                              ; preds = %664
  %671 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %672 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %671, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %672(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0)) #6
  br label %1962

673:                                              ; preds = %664
  %674 = icmp slt i32 %649, %668
  br i1 %674, label %678, label %675

675:                                              ; preds = %673
  %676 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %677 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %676, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %677(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #6
  br label %1962

678:                                              ; preds = %673
  %679 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %641, i64 0, i32 2
  %680 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %679, align 8
  %681 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %680, i64 0, i32 1, i64 0
  %682 = load i32, i32* %681, align 4
  %683 = sext i32 %649 to i64
  %684 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %666, i64 0, i32 1, i64 %683
  %685 = load i32, i32* %684, align 4
  %686 = icmp eq i32 %682, %685
  br i1 %686, label %687, label %697

687:                                              ; preds = %678
  %688 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %680, i64 0, i32 0
  %689 = load i32, i32* %688, align 4
  %690 = icmp sgt i32 %689, 0
  br i1 %690, label %691, label %711

691:                                              ; preds = %687
  %692 = sext i32 %647 to i64
  %693 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %666, i64 0, i32 1, i64 %692
  %694 = load i32, i32* %693, align 4
  %695 = sext i32 %694 to i64
  %696 = sext i32 %689 to i64
  br label %702

697:                                              ; preds = %678
  %698 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %699 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %698, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %699(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0), i32 %682, i32 %685) #6
  br label %1962

700:                                              ; preds = %702
  %701 = icmp eq i64 %707, %696
  br i1 %701, label %711, label %702

702:                                              ; preds = %700, %691
  %703 = phi i64 [ 0, %691 ], [ %707, %700 ]
  %704 = getelementptr inbounds i64, i64* %642, i64 %703
  %705 = load i64, i64* %704, align 8
  %706 = icmp sgt i64 %705, %695
  %707 = add nuw nsw i64 %703, 1
  br i1 %706, label %708, label %700

708:                                              ; preds = %702
  %709 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %710 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %709, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %710(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %1962

711:                                              ; preds = %700, %687
  br i1 %27, label %717, label %712

712:                                              ; preds = %711
  %713 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %714 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %713, align 8
  %715 = sext i32 %26 to i64
  %716 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %714, i64 %715
  br label %717

717:                                              ; preds = %712, %711
  %718 = phi %struct.TfLiteTensor* [ %716, %712 ], [ null, %711 ]
  %719 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %719) #6
  %720 = icmp eq %struct.TfLiteTensor* %629, null
  br i1 %720, label %721, label %723

721:                                              ; preds = %717
  %722 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %722, align 8, !alias.scope !20
  br label %747

723:                                              ; preds = %717
  %724 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %666, i64 0, i32 1, i64 0
  %725 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %668, i32* %725, align 8, !alias.scope !20
  %726 = icmp sgt i32 %668, 5
  br i1 %726, label %727, label %734

727:                                              ; preds = %723
  %728 = sext i32 %668 to i64
  %729 = shl nsw i64 %728, 2
  %730 = tail call i8* @_Znam(i64 %729) #7, !noalias !20
  %731 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %732 = bitcast i32** %731 to i8**
  store i8* %730, i8** %732, align 8, !alias.scope !20
  %733 = bitcast i8* %730 to i32*
  br label %739

734:                                              ; preds = %723
  %735 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %736 = bitcast %union.anon* %735 to i32*
  %737 = sext i32 %668 to i64
  %738 = shl nsw i64 %737, 2
  br label %739

739:                                              ; preds = %734, %727
  %740 = phi i64 [ %729, %727 ], [ %738, %734 ]
  %741 = phi i32* [ %733, %727 ], [ %736, %734 ]
  %742 = bitcast i32* %741 to i8*
  %743 = bitcast i32* %724 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %742, i8* align 4 %743, i64 %740, i1 false) #6
  %744 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %629, i64 0, i32 1
  %745 = bitcast %union.TfLitePtrUnion* %744 to i8**
  %746 = load i8*, i8** %745, align 8
  br label %747

747:                                              ; preds = %739, %721
  %748 = phi i8* [ %746, %739 ], [ null, %721 ]
  %749 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %749) #6
  %750 = icmp eq %struct.TfLiteTensor* %718, null
  br i1 %750, label %751, label %753

751:                                              ; preds = %747
  %752 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %752, align 8, !alias.scope !23
  br label %781

753:                                              ; preds = %747
  %754 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %718, i64 0, i32 2
  %755 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %754, align 8, !noalias !23
  %756 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %755, i64 0, i32 0
  %757 = load i32, i32* %756, align 4, !noalias !23
  %758 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %755, i64 0, i32 1, i64 0
  %759 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %757, i32* %759, align 8, !alias.scope !23
  %760 = icmp sgt i32 %757, 5
  br i1 %760, label %761, label %768

761:                                              ; preds = %753
  %762 = sext i32 %757 to i64
  %763 = shl nsw i64 %762, 2
  %764 = tail call i8* @_Znam(i64 %763) #7, !noalias !23
  %765 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %766 = bitcast i32** %765 to i8**
  store i8* %764, i8** %766, align 8, !alias.scope !23
  %767 = bitcast i8* %764 to i32*
  br label %773

768:                                              ; preds = %753
  %769 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %770 = bitcast %union.anon* %769 to i32*
  %771 = sext i32 %757 to i64
  %772 = shl nsw i64 %771, 2
  br label %773

773:                                              ; preds = %768, %761
  %774 = phi i64 [ %763, %761 ], [ %772, %768 ]
  %775 = phi i32* [ %767, %761 ], [ %770, %768 ]
  %776 = bitcast i32* %775 to i8*
  %777 = bitcast i32* %758 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %776, i8* align 4 %777, i64 %774, i1 false) #6
  %778 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %718, i64 0, i32 1
  %779 = bitcast %union.TfLitePtrUnion* %778 to i8**
  %780 = load i8*, i8** %779, align 8
  br label %781

781:                                              ; preds = %773, %751
  %782 = phi i8* [ %780, %773 ], [ null, %751 ]
  call void @_ZN6tflite13reference_ops15ReverseSequenceIhlEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i64* %642, i32 %647, i32 %649, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i8* %748, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i8* %782) #6
  %783 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %784 = load i32, i32* %783, align 8
  %785 = icmp sgt i32 %784, 5
  br i1 %785, label %786, label %792

786:                                              ; preds = %781
  %787 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %788 = load i32*, i32** %787, align 8
  %789 = icmp eq i32* %788, null
  br i1 %789, label %792, label %790

790:                                              ; preds = %786
  %791 = bitcast i32* %788 to i8*
  call void @_ZdaPv(i8* %791) #7
  br label %792

792:                                              ; preds = %790, %786, %781
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %749) #6
  %793 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %794 = load i32, i32* %793, align 8
  %795 = icmp sgt i32 %794, 5
  br i1 %795, label %796, label %802

796:                                              ; preds = %792
  %797 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %798 = load i32*, i32** %797, align 8
  %799 = icmp eq i32* %798, null
  br i1 %799, label %802, label %800

800:                                              ; preds = %796
  %801 = bitcast i32* %798 to i8*
  call void @_ZdaPv(i8* %801) #7
  br label %802

802:                                              ; preds = %800, %796, %792
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %719) #6
  br label %1962

803:                                              ; preds = %433
  %804 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %805 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %804, align 8
  %806 = tail call i8* @TfLiteTypeGetName(i32 %436) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %805(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i8* %806) #6
  br label %1962

807:                                              ; preds = %33
  %808 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %809 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %808, align 8
  %810 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %809, i64 0, i32 1, i64 1
  %811 = load i32, i32* %810, align 4
  %812 = icmp slt i32 %811, 0
  br i1 %812, label %818, label %813

813:                                              ; preds = %807
  %814 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %815 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %814, align 8
  %816 = sext i32 %811 to i64
  %817 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %815, i64 %816
  br label %818

818:                                              ; preds = %813, %807
  %819 = phi %struct.TfLiteTensor* [ %817, %813 ], [ null, %807 ]
  %820 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %819, i64 0, i32 0
  %821 = load i32, i32* %820, align 8
  switch i32 %821, label %1188 [
    i32 2, label %822
    i32 4, label %1004
  ]

822:                                              ; preds = %818
  %823 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %809, i64 0, i32 1, i64 0
  %824 = load i32, i32* %823, align 4
  %825 = icmp slt i32 %824, 0
  br i1 %825, label %831, label %826

826:                                              ; preds = %822
  %827 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %828 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %827, align 8
  %829 = sext i32 %824 to i64
  %830 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %828, i64 %829
  br label %831

831:                                              ; preds = %826, %822
  %832 = phi %struct.TfLiteTensor* [ %830, %826 ], [ null, %822 ]
  br i1 %812, label %842, label %833

833:                                              ; preds = %831
  %834 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %835 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %834, align 8
  %836 = sext i32 %811 to i64
  %837 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %835, i64 %836
  %838 = icmp eq %struct.TfLiteTensor* %837, null
  br i1 %838, label %842, label %839

839:                                              ; preds = %833
  %840 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %835, i64 %836, i32 1, i32 0
  %841 = load i32*, i32** %840, align 8
  br label %842

842:                                              ; preds = %839, %833, %831
  %843 = phi %struct.TfLiteTensor* [ %837, %839 ], [ null, %833 ], [ null, %831 ]
  %844 = phi i32* [ %841, %839 ], [ null, %833 ], [ null, %831 ]
  %845 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %846 = bitcast i8** %845 to %struct.TfLiteReverseSequenceParams**
  %847 = load %struct.TfLiteReverseSequenceParams*, %struct.TfLiteReverseSequenceParams** %846, align 8
  %848 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %847, i64 0, i32 0
  %849 = load i32, i32* %848, align 4
  %850 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %847, i64 0, i32 1
  %851 = load i32, i32* %850, align 4
  %852 = icmp sgt i32 %849, -1
  br i1 %852, label %856, label %853

853:                                              ; preds = %842
  %854 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %855 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %854, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %855(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 78, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %1962

856:                                              ; preds = %842
  %857 = icmp sgt i32 %851, -1
  br i1 %857, label %861, label %858

858:                                              ; preds = %856
  %859 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %860 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %859, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %860(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %1962

861:                                              ; preds = %856
  %862 = icmp eq i32 %849, %851
  br i1 %862, label %863, label %866

863:                                              ; preds = %861
  %864 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %865 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %864, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %865(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %1962

866:                                              ; preds = %861
  %867 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %832, i64 0, i32 2
  %868 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %867, align 8
  %869 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %868, i64 0, i32 0
  %870 = load i32, i32* %869, align 4
  %871 = icmp slt i32 %849, %870
  br i1 %871, label %875, label %872

872:                                              ; preds = %866
  %873 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %874 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %873, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %874(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0)) #6
  br label %1962

875:                                              ; preds = %866
  %876 = icmp slt i32 %851, %870
  br i1 %876, label %880, label %877

877:                                              ; preds = %875
  %878 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %879 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %878, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %879(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #6
  br label %1962

880:                                              ; preds = %875
  %881 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %843, i64 0, i32 2
  %882 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %881, align 8
  %883 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %882, i64 0, i32 1, i64 0
  %884 = load i32, i32* %883, align 4
  %885 = sext i32 %851 to i64
  %886 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %868, i64 0, i32 1, i64 %885
  %887 = load i32, i32* %886, align 4
  %888 = icmp eq i32 %884, %887
  br i1 %888, label %889, label %898

889:                                              ; preds = %880
  %890 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %882, i64 0, i32 0
  %891 = load i32, i32* %890, align 4
  %892 = icmp sgt i32 %891, 0
  br i1 %892, label %893, label %912

893:                                              ; preds = %889
  %894 = sext i32 %849 to i64
  %895 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %868, i64 0, i32 1, i64 %894
  %896 = load i32, i32* %895, align 4
  %897 = sext i32 %891 to i64
  br label %903

898:                                              ; preds = %880
  %899 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %900 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %899, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %900(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0), i32 %884, i32 %887) #6
  br label %1962

901:                                              ; preds = %903
  %902 = icmp eq i64 %908, %897
  br i1 %902, label %912, label %903

903:                                              ; preds = %901, %893
  %904 = phi i64 [ 0, %893 ], [ %908, %901 ]
  %905 = getelementptr inbounds i32, i32* %844, i64 %904
  %906 = load i32, i32* %905, align 4
  %907 = icmp sgt i32 %906, %896
  %908 = add nuw nsw i64 %904, 1
  br i1 %907, label %909, label %901

909:                                              ; preds = %903
  %910 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %911 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %910, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %911(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %1962

912:                                              ; preds = %901, %889
  br i1 %27, label %918, label %913

913:                                              ; preds = %912
  %914 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %915 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %914, align 8
  %916 = sext i32 %26 to i64
  %917 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %915, i64 %916
  br label %918

918:                                              ; preds = %913, %912
  %919 = phi %struct.TfLiteTensor* [ %917, %913 ], [ null, %912 ]
  %920 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %920) #6
  %921 = icmp eq %struct.TfLiteTensor* %832, null
  br i1 %921, label %922, label %924

922:                                              ; preds = %918
  %923 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %923, align 8, !alias.scope !26
  br label %948

924:                                              ; preds = %918
  %925 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %868, i64 0, i32 1, i64 0
  %926 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %870, i32* %926, align 8, !alias.scope !26
  %927 = icmp sgt i32 %870, 5
  br i1 %927, label %928, label %935

928:                                              ; preds = %924
  %929 = sext i32 %870 to i64
  %930 = shl nsw i64 %929, 2
  %931 = tail call i8* @_Znam(i64 %930) #7, !noalias !26
  %932 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %933 = bitcast i32** %932 to i8**
  store i8* %931, i8** %933, align 8, !alias.scope !26
  %934 = bitcast i8* %931 to i32*
  br label %940

935:                                              ; preds = %924
  %936 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %937 = bitcast %union.anon* %936 to i32*
  %938 = sext i32 %870 to i64
  %939 = shl nsw i64 %938, 2
  br label %940

940:                                              ; preds = %935, %928
  %941 = phi i64 [ %930, %928 ], [ %939, %935 ]
  %942 = phi i32* [ %934, %928 ], [ %937, %935 ]
  %943 = bitcast i32* %942 to i8*
  %944 = bitcast i32* %925 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %943, i8* align 4 %944, i64 %941, i1 false) #6
  %945 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %832, i64 0, i32 1
  %946 = bitcast %union.TfLitePtrUnion* %945 to i16**
  %947 = load i16*, i16** %946, align 8
  br label %948

948:                                              ; preds = %940, %922
  %949 = phi i16* [ %947, %940 ], [ null, %922 ]
  %950 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %950) #6
  %951 = icmp eq %struct.TfLiteTensor* %919, null
  br i1 %951, label %952, label %954

952:                                              ; preds = %948
  %953 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %953, align 8, !alias.scope !29
  br label %982

954:                                              ; preds = %948
  %955 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %919, i64 0, i32 2
  %956 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %955, align 8, !noalias !29
  %957 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %956, i64 0, i32 0
  %958 = load i32, i32* %957, align 4, !noalias !29
  %959 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %956, i64 0, i32 1, i64 0
  %960 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %958, i32* %960, align 8, !alias.scope !29
  %961 = icmp sgt i32 %958, 5
  br i1 %961, label %962, label %969

962:                                              ; preds = %954
  %963 = sext i32 %958 to i64
  %964 = shl nsw i64 %963, 2
  %965 = tail call i8* @_Znam(i64 %964) #7, !noalias !29
  %966 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %967 = bitcast i32** %966 to i8**
  store i8* %965, i8** %967, align 8, !alias.scope !29
  %968 = bitcast i8* %965 to i32*
  br label %974

969:                                              ; preds = %954
  %970 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %971 = bitcast %union.anon* %970 to i32*
  %972 = sext i32 %958 to i64
  %973 = shl nsw i64 %972, 2
  br label %974

974:                                              ; preds = %969, %962
  %975 = phi i64 [ %964, %962 ], [ %973, %969 ]
  %976 = phi i32* [ %968, %962 ], [ %971, %969 ]
  %977 = bitcast i32* %976 to i8*
  %978 = bitcast i32* %959 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %977, i8* align 4 %978, i64 %975, i1 false) #6
  %979 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %919, i64 0, i32 1
  %980 = bitcast %union.TfLitePtrUnion* %979 to i16**
  %981 = load i16*, i16** %980, align 8
  br label %982

982:                                              ; preds = %974, %952
  %983 = phi i16* [ %981, %974 ], [ null, %952 ]
  call void @_ZN6tflite13reference_ops15ReverseSequenceIsiEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i32* %844, i32 %849, i32 %851, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i16* %949, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i16* %983) #6
  %984 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %985 = load i32, i32* %984, align 8
  %986 = icmp sgt i32 %985, 5
  br i1 %986, label %987, label %993

987:                                              ; preds = %982
  %988 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %989 = load i32*, i32** %988, align 8
  %990 = icmp eq i32* %989, null
  br i1 %990, label %993, label %991

991:                                              ; preds = %987
  %992 = bitcast i32* %989 to i8*
  call void @_ZdaPv(i8* %992) #7
  br label %993

993:                                              ; preds = %991, %987, %982
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %950) #6
  %994 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %995 = load i32, i32* %994, align 8
  %996 = icmp sgt i32 %995, 5
  br i1 %996, label %997, label %1003

997:                                              ; preds = %993
  %998 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %999 = load i32*, i32** %998, align 8
  %1000 = icmp eq i32* %999, null
  br i1 %1000, label %1003, label %1001

1001:                                             ; preds = %997
  %1002 = bitcast i32* %999 to i8*
  call void @_ZdaPv(i8* %1002) #7
  br label %1003

1003:                                             ; preds = %1001, %997, %993
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %920) #6
  br label %1962

1004:                                             ; preds = %818
  %1005 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %809, i64 0, i32 1, i64 0
  %1006 = load i32, i32* %1005, align 4
  %1007 = icmp slt i32 %1006, 0
  br i1 %1007, label %1013, label %1008

1008:                                             ; preds = %1004
  %1009 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1010 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1009, align 8
  %1011 = sext i32 %1006 to i64
  %1012 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1010, i64 %1011
  br label %1013

1013:                                             ; preds = %1008, %1004
  %1014 = phi %struct.TfLiteTensor* [ %1012, %1008 ], [ null, %1004 ]
  br i1 %812, label %1025, label %1015

1015:                                             ; preds = %1013
  %1016 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1017 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1016, align 8
  %1018 = sext i32 %811 to i64
  %1019 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1017, i64 %1018
  %1020 = icmp eq %struct.TfLiteTensor* %1019, null
  br i1 %1020, label %1025, label %1021

1021:                                             ; preds = %1015
  %1022 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1017, i64 %1018, i32 1
  %1023 = bitcast %union.TfLitePtrUnion* %1022 to i64**
  %1024 = load i64*, i64** %1023, align 8
  br label %1025

1025:                                             ; preds = %1021, %1015, %1013
  %1026 = phi %struct.TfLiteTensor* [ %1019, %1021 ], [ null, %1015 ], [ null, %1013 ]
  %1027 = phi i64* [ %1024, %1021 ], [ null, %1015 ], [ null, %1013 ]
  %1028 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %1029 = bitcast i8** %1028 to %struct.TfLiteReverseSequenceParams**
  %1030 = load %struct.TfLiteReverseSequenceParams*, %struct.TfLiteReverseSequenceParams** %1029, align 8
  %1031 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %1030, i64 0, i32 0
  %1032 = load i32, i32* %1031, align 4
  %1033 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %1030, i64 0, i32 1
  %1034 = load i32, i32* %1033, align 4
  %1035 = icmp sgt i32 %1032, -1
  br i1 %1035, label %1039, label %1036

1036:                                             ; preds = %1025
  %1037 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1038 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1037, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1038(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 78, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %1962

1039:                                             ; preds = %1025
  %1040 = icmp sgt i32 %1034, -1
  br i1 %1040, label %1044, label %1041

1041:                                             ; preds = %1039
  %1042 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1043 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1042, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1043(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %1962

1044:                                             ; preds = %1039
  %1045 = icmp eq i32 %1032, %1034
  br i1 %1045, label %1046, label %1049

1046:                                             ; preds = %1044
  %1047 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1048 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1047, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1048(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %1962

1049:                                             ; preds = %1044
  %1050 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1014, i64 0, i32 2
  %1051 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1050, align 8
  %1052 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1051, i64 0, i32 0
  %1053 = load i32, i32* %1052, align 4
  %1054 = icmp slt i32 %1032, %1053
  br i1 %1054, label %1058, label %1055

1055:                                             ; preds = %1049
  %1056 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1057 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1056, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1057(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0)) #6
  br label %1962

1058:                                             ; preds = %1049
  %1059 = icmp slt i32 %1034, %1053
  br i1 %1059, label %1063, label %1060

1060:                                             ; preds = %1058
  %1061 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1062 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1061, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1062(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #6
  br label %1962

1063:                                             ; preds = %1058
  %1064 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1026, i64 0, i32 2
  %1065 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1064, align 8
  %1066 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1065, i64 0, i32 1, i64 0
  %1067 = load i32, i32* %1066, align 4
  %1068 = sext i32 %1034 to i64
  %1069 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1051, i64 0, i32 1, i64 %1068
  %1070 = load i32, i32* %1069, align 4
  %1071 = icmp eq i32 %1067, %1070
  br i1 %1071, label %1072, label %1082

1072:                                             ; preds = %1063
  %1073 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1065, i64 0, i32 0
  %1074 = load i32, i32* %1073, align 4
  %1075 = icmp sgt i32 %1074, 0
  br i1 %1075, label %1076, label %1096

1076:                                             ; preds = %1072
  %1077 = sext i32 %1032 to i64
  %1078 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1051, i64 0, i32 1, i64 %1077
  %1079 = load i32, i32* %1078, align 4
  %1080 = sext i32 %1079 to i64
  %1081 = sext i32 %1074 to i64
  br label %1087

1082:                                             ; preds = %1063
  %1083 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1084 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1083, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1084(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0), i32 %1067, i32 %1070) #6
  br label %1962

1085:                                             ; preds = %1087
  %1086 = icmp eq i64 %1092, %1081
  br i1 %1086, label %1096, label %1087

1087:                                             ; preds = %1085, %1076
  %1088 = phi i64 [ 0, %1076 ], [ %1092, %1085 ]
  %1089 = getelementptr inbounds i64, i64* %1027, i64 %1088
  %1090 = load i64, i64* %1089, align 8
  %1091 = icmp sgt i64 %1090, %1080
  %1092 = add nuw nsw i64 %1088, 1
  br i1 %1091, label %1093, label %1085

1093:                                             ; preds = %1087
  %1094 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1095 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1094, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1095(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %1962

1096:                                             ; preds = %1085, %1072
  br i1 %27, label %1102, label %1097

1097:                                             ; preds = %1096
  %1098 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1099 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1098, align 8
  %1100 = sext i32 %26 to i64
  %1101 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1099, i64 %1100
  br label %1102

1102:                                             ; preds = %1097, %1096
  %1103 = phi %struct.TfLiteTensor* [ %1101, %1097 ], [ null, %1096 ]
  %1104 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1104) #6
  %1105 = icmp eq %struct.TfLiteTensor* %1014, null
  br i1 %1105, label %1106, label %1108

1106:                                             ; preds = %1102
  %1107 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %1107, align 8, !alias.scope !32
  br label %1132

1108:                                             ; preds = %1102
  %1109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1051, i64 0, i32 1, i64 0
  %1110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %1053, i32* %1110, align 8, !alias.scope !32
  %1111 = icmp sgt i32 %1053, 5
  br i1 %1111, label %1112, label %1119

1112:                                             ; preds = %1108
  %1113 = sext i32 %1053 to i64
  %1114 = shl nsw i64 %1113, 2
  %1115 = tail call i8* @_Znam(i64 %1114) #7, !noalias !32
  %1116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %1117 = bitcast i32** %1116 to i8**
  store i8* %1115, i8** %1117, align 8, !alias.scope !32
  %1118 = bitcast i8* %1115 to i32*
  br label %1124

1119:                                             ; preds = %1108
  %1120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %1121 = bitcast %union.anon* %1120 to i32*
  %1122 = sext i32 %1053 to i64
  %1123 = shl nsw i64 %1122, 2
  br label %1124

1124:                                             ; preds = %1119, %1112
  %1125 = phi i64 [ %1114, %1112 ], [ %1123, %1119 ]
  %1126 = phi i32* [ %1118, %1112 ], [ %1121, %1119 ]
  %1127 = bitcast i32* %1126 to i8*
  %1128 = bitcast i32* %1109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1127, i8* align 4 %1128, i64 %1125, i1 false) #6
  %1129 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1014, i64 0, i32 1
  %1130 = bitcast %union.TfLitePtrUnion* %1129 to i16**
  %1131 = load i16*, i16** %1130, align 8
  br label %1132

1132:                                             ; preds = %1124, %1106
  %1133 = phi i16* [ %1131, %1124 ], [ null, %1106 ]
  %1134 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1134) #6
  %1135 = icmp eq %struct.TfLiteTensor* %1103, null
  br i1 %1135, label %1136, label %1138

1136:                                             ; preds = %1132
  %1137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %1137, align 8, !alias.scope !35
  br label %1166

1138:                                             ; preds = %1132
  %1139 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1103, i64 0, i32 2
  %1140 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1139, align 8, !noalias !35
  %1141 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1140, i64 0, i32 0
  %1142 = load i32, i32* %1141, align 4, !noalias !35
  %1143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1140, i64 0, i32 1, i64 0
  %1144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %1142, i32* %1144, align 8, !alias.scope !35
  %1145 = icmp sgt i32 %1142, 5
  br i1 %1145, label %1146, label %1153

1146:                                             ; preds = %1138
  %1147 = sext i32 %1142 to i64
  %1148 = shl nsw i64 %1147, 2
  %1149 = tail call i8* @_Znam(i64 %1148) #7, !noalias !35
  %1150 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1151 = bitcast i32** %1150 to i8**
  store i8* %1149, i8** %1151, align 8, !alias.scope !35
  %1152 = bitcast i8* %1149 to i32*
  br label %1158

1153:                                             ; preds = %1138
  %1154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %1155 = bitcast %union.anon* %1154 to i32*
  %1156 = sext i32 %1142 to i64
  %1157 = shl nsw i64 %1156, 2
  br label %1158

1158:                                             ; preds = %1153, %1146
  %1159 = phi i64 [ %1148, %1146 ], [ %1157, %1153 ]
  %1160 = phi i32* [ %1152, %1146 ], [ %1155, %1153 ]
  %1161 = bitcast i32* %1160 to i8*
  %1162 = bitcast i32* %1143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1161, i8* align 4 %1162, i64 %1159, i1 false) #6
  %1163 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1103, i64 0, i32 1
  %1164 = bitcast %union.TfLitePtrUnion* %1163 to i16**
  %1165 = load i16*, i16** %1164, align 8
  br label %1166

1166:                                             ; preds = %1158, %1136
  %1167 = phi i16* [ %1165, %1158 ], [ null, %1136 ]
  call void @_ZN6tflite13reference_ops15ReverseSequenceIslEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i64* %1027, i32 %1032, i32 %1034, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i16* %1133, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i16* %1167) #6
  %1168 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %1169 = load i32, i32* %1168, align 8
  %1170 = icmp sgt i32 %1169, 5
  br i1 %1170, label %1171, label %1177

1171:                                             ; preds = %1166
  %1172 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1173 = load i32*, i32** %1172, align 8
  %1174 = icmp eq i32* %1173, null
  br i1 %1174, label %1177, label %1175

1175:                                             ; preds = %1171
  %1176 = bitcast i32* %1173 to i8*
  call void @_ZdaPv(i8* %1176) #7
  br label %1177

1177:                                             ; preds = %1175, %1171, %1166
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1134) #6
  %1178 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %1179 = load i32, i32* %1178, align 8
  %1180 = icmp sgt i32 %1179, 5
  br i1 %1180, label %1181, label %1187

1181:                                             ; preds = %1177
  %1182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %1183 = load i32*, i32** %1182, align 8
  %1184 = icmp eq i32* %1183, null
  br i1 %1184, label %1187, label %1185

1185:                                             ; preds = %1181
  %1186 = bitcast i32* %1183 to i8*
  call void @_ZdaPv(i8* %1186) #7
  br label %1187

1187:                                             ; preds = %1185, %1181, %1177
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1104) #6
  br label %1962

1188:                                             ; preds = %818
  %1189 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1190 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1189, align 8
  %1191 = tail call i8* @TfLiteTypeGetName(i32 %821) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %1190(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i8* %1191) #6
  br label %1962

1192:                                             ; preds = %33
  %1193 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %1194 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1193, align 8
  %1195 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1194, i64 0, i32 1, i64 1
  %1196 = load i32, i32* %1195, align 4
  %1197 = icmp slt i32 %1196, 0
  br i1 %1197, label %1203, label %1198

1198:                                             ; preds = %1192
  %1199 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1200 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1199, align 8
  %1201 = sext i32 %1196 to i64
  %1202 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1200, i64 %1201
  br label %1203

1203:                                             ; preds = %1198, %1192
  %1204 = phi %struct.TfLiteTensor* [ %1202, %1198 ], [ null, %1192 ]
  %1205 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1204, i64 0, i32 0
  %1206 = load i32, i32* %1205, align 8
  switch i32 %1206, label %1569 [
    i32 2, label %1207
    i32 4, label %1387
  ]

1207:                                             ; preds = %1203
  %1208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1194, i64 0, i32 1, i64 0
  %1209 = load i32, i32* %1208, align 4
  %1210 = icmp slt i32 %1209, 0
  br i1 %1210, label %1216, label %1211

1211:                                             ; preds = %1207
  %1212 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1213 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1212, align 8
  %1214 = sext i32 %1209 to i64
  %1215 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1213, i64 %1214
  br label %1216

1216:                                             ; preds = %1211, %1207
  %1217 = phi %struct.TfLiteTensor* [ %1215, %1211 ], [ null, %1207 ]
  br i1 %1197, label %1227, label %1218

1218:                                             ; preds = %1216
  %1219 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1220 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1219, align 8
  %1221 = sext i32 %1196 to i64
  %1222 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1220, i64 %1221
  %1223 = icmp eq %struct.TfLiteTensor* %1222, null
  br i1 %1223, label %1227, label %1224

1224:                                             ; preds = %1218
  %1225 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1220, i64 %1221, i32 1, i32 0
  %1226 = load i32*, i32** %1225, align 8
  br label %1227

1227:                                             ; preds = %1224, %1218, %1216
  %1228 = phi %struct.TfLiteTensor* [ %1222, %1224 ], [ null, %1218 ], [ null, %1216 ]
  %1229 = phi i32* [ %1226, %1224 ], [ null, %1218 ], [ null, %1216 ]
  %1230 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %1231 = bitcast i8** %1230 to %struct.TfLiteReverseSequenceParams**
  %1232 = load %struct.TfLiteReverseSequenceParams*, %struct.TfLiteReverseSequenceParams** %1231, align 8
  %1233 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %1232, i64 0, i32 0
  %1234 = load i32, i32* %1233, align 4
  %1235 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %1232, i64 0, i32 1
  %1236 = load i32, i32* %1235, align 4
  %1237 = icmp sgt i32 %1234, -1
  br i1 %1237, label %1241, label %1238

1238:                                             ; preds = %1227
  %1239 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1240 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1239, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1240(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 78, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %1962

1241:                                             ; preds = %1227
  %1242 = icmp sgt i32 %1236, -1
  br i1 %1242, label %1246, label %1243

1243:                                             ; preds = %1241
  %1244 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1245 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1244, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1245(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %1962

1246:                                             ; preds = %1241
  %1247 = icmp eq i32 %1234, %1236
  br i1 %1247, label %1248, label %1251

1248:                                             ; preds = %1246
  %1249 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1250 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1249, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1250(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %1962

1251:                                             ; preds = %1246
  %1252 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1217, i64 0, i32 2
  %1253 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1252, align 8
  %1254 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1253, i64 0, i32 0
  %1255 = load i32, i32* %1254, align 4
  %1256 = icmp slt i32 %1234, %1255
  br i1 %1256, label %1260, label %1257

1257:                                             ; preds = %1251
  %1258 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1259 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1258, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1259(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0)) #6
  br label %1962

1260:                                             ; preds = %1251
  %1261 = icmp slt i32 %1236, %1255
  br i1 %1261, label %1265, label %1262

1262:                                             ; preds = %1260
  %1263 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1264 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1263, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1264(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #6
  br label %1962

1265:                                             ; preds = %1260
  %1266 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1228, i64 0, i32 2
  %1267 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1266, align 8
  %1268 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1267, i64 0, i32 1, i64 0
  %1269 = load i32, i32* %1268, align 4
  %1270 = sext i32 %1236 to i64
  %1271 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1253, i64 0, i32 1, i64 %1270
  %1272 = load i32, i32* %1271, align 4
  %1273 = icmp eq i32 %1269, %1272
  br i1 %1273, label %1274, label %1283

1274:                                             ; preds = %1265
  %1275 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1267, i64 0, i32 0
  %1276 = load i32, i32* %1275, align 4
  %1277 = icmp sgt i32 %1276, 0
  br i1 %1277, label %1278, label %1297

1278:                                             ; preds = %1274
  %1279 = sext i32 %1234 to i64
  %1280 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1253, i64 0, i32 1, i64 %1279
  %1281 = load i32, i32* %1280, align 4
  %1282 = sext i32 %1276 to i64
  br label %1288

1283:                                             ; preds = %1265
  %1284 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1285 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1284, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1285(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0), i32 %1269, i32 %1272) #6
  br label %1962

1286:                                             ; preds = %1288
  %1287 = icmp eq i64 %1293, %1282
  br i1 %1287, label %1297, label %1288

1288:                                             ; preds = %1286, %1278
  %1289 = phi i64 [ 0, %1278 ], [ %1293, %1286 ]
  %1290 = getelementptr inbounds i32, i32* %1229, i64 %1289
  %1291 = load i32, i32* %1290, align 4
  %1292 = icmp sgt i32 %1291, %1281
  %1293 = add nuw nsw i64 %1289, 1
  br i1 %1292, label %1294, label %1286

1294:                                             ; preds = %1288
  %1295 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1296 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1295, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1296(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %1962

1297:                                             ; preds = %1286, %1274
  br i1 %27, label %1303, label %1298

1298:                                             ; preds = %1297
  %1299 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1300 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1299, align 8
  %1301 = sext i32 %26 to i64
  %1302 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1300, i64 %1301
  br label %1303

1303:                                             ; preds = %1298, %1297
  %1304 = phi %struct.TfLiteTensor* [ %1302, %1298 ], [ null, %1297 ]
  %1305 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1305) #6
  %1306 = icmp eq %struct.TfLiteTensor* %1217, null
  br i1 %1306, label %1307, label %1309

1307:                                             ; preds = %1303
  %1308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %1308, align 8, !alias.scope !38
  br label %1332

1309:                                             ; preds = %1303
  %1310 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1253, i64 0, i32 1, i64 0
  %1311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %1255, i32* %1311, align 8, !alias.scope !38
  %1312 = icmp sgt i32 %1255, 5
  br i1 %1312, label %1313, label %1320

1313:                                             ; preds = %1309
  %1314 = sext i32 %1255 to i64
  %1315 = shl nsw i64 %1314, 2
  %1316 = tail call i8* @_Znam(i64 %1315) #7, !noalias !38
  %1317 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %1318 = bitcast i32** %1317 to i8**
  store i8* %1316, i8** %1318, align 8, !alias.scope !38
  %1319 = bitcast i8* %1316 to i32*
  br label %1325

1320:                                             ; preds = %1309
  %1321 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %1322 = bitcast %union.anon* %1321 to i32*
  %1323 = sext i32 %1255 to i64
  %1324 = shl nsw i64 %1323, 2
  br label %1325

1325:                                             ; preds = %1320, %1313
  %1326 = phi i64 [ %1315, %1313 ], [ %1324, %1320 ]
  %1327 = phi i32* [ %1319, %1313 ], [ %1322, %1320 ]
  %1328 = bitcast i32* %1327 to i8*
  %1329 = bitcast i32* %1310 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1328, i8* align 4 %1329, i64 %1326, i1 false) #6
  %1330 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1217, i64 0, i32 1, i32 0
  %1331 = load i32*, i32** %1330, align 8
  br label %1332

1332:                                             ; preds = %1325, %1307
  %1333 = phi i32* [ %1331, %1325 ], [ null, %1307 ]
  %1334 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1334) #6
  %1335 = icmp eq %struct.TfLiteTensor* %1304, null
  br i1 %1335, label %1336, label %1338

1336:                                             ; preds = %1332
  %1337 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %1337, align 8, !alias.scope !41
  br label %1365

1338:                                             ; preds = %1332
  %1339 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1304, i64 0, i32 2
  %1340 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1339, align 8, !noalias !41
  %1341 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1340, i64 0, i32 0
  %1342 = load i32, i32* %1341, align 4, !noalias !41
  %1343 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1340, i64 0, i32 1, i64 0
  %1344 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %1342, i32* %1344, align 8, !alias.scope !41
  %1345 = icmp sgt i32 %1342, 5
  br i1 %1345, label %1346, label %1353

1346:                                             ; preds = %1338
  %1347 = sext i32 %1342 to i64
  %1348 = shl nsw i64 %1347, 2
  %1349 = tail call i8* @_Znam(i64 %1348) #7, !noalias !41
  %1350 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1351 = bitcast i32** %1350 to i8**
  store i8* %1349, i8** %1351, align 8, !alias.scope !41
  %1352 = bitcast i8* %1349 to i32*
  br label %1358

1353:                                             ; preds = %1338
  %1354 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %1355 = bitcast %union.anon* %1354 to i32*
  %1356 = sext i32 %1342 to i64
  %1357 = shl nsw i64 %1356, 2
  br label %1358

1358:                                             ; preds = %1353, %1346
  %1359 = phi i64 [ %1348, %1346 ], [ %1357, %1353 ]
  %1360 = phi i32* [ %1352, %1346 ], [ %1355, %1353 ]
  %1361 = bitcast i32* %1360 to i8*
  %1362 = bitcast i32* %1343 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1361, i8* align 4 %1362, i64 %1359, i1 false) #6
  %1363 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1304, i64 0, i32 1, i32 0
  %1364 = load i32*, i32** %1363, align 8
  br label %1365

1365:                                             ; preds = %1358, %1336
  %1366 = phi i32* [ %1364, %1358 ], [ null, %1336 ]
  call void @_ZN6tflite13reference_ops15ReverseSequenceIiiEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i32* %1229, i32 %1234, i32 %1236, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i32* %1333, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i32* %1366) #6
  %1367 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %1368 = load i32, i32* %1367, align 8
  %1369 = icmp sgt i32 %1368, 5
  br i1 %1369, label %1370, label %1376

1370:                                             ; preds = %1365
  %1371 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1372 = load i32*, i32** %1371, align 8
  %1373 = icmp eq i32* %1372, null
  br i1 %1373, label %1376, label %1374

1374:                                             ; preds = %1370
  %1375 = bitcast i32* %1372 to i8*
  call void @_ZdaPv(i8* %1375) #7
  br label %1376

1376:                                             ; preds = %1374, %1370, %1365
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1334) #6
  %1377 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %1378 = load i32, i32* %1377, align 8
  %1379 = icmp sgt i32 %1378, 5
  br i1 %1379, label %1380, label %1386

1380:                                             ; preds = %1376
  %1381 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %1382 = load i32*, i32** %1381, align 8
  %1383 = icmp eq i32* %1382, null
  br i1 %1383, label %1386, label %1384

1384:                                             ; preds = %1380
  %1385 = bitcast i32* %1382 to i8*
  call void @_ZdaPv(i8* %1385) #7
  br label %1386

1386:                                             ; preds = %1384, %1380, %1376
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1305) #6
  br label %1962

1387:                                             ; preds = %1203
  %1388 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1194, i64 0, i32 1, i64 0
  %1389 = load i32, i32* %1388, align 4
  %1390 = icmp slt i32 %1389, 0
  br i1 %1390, label %1396, label %1391

1391:                                             ; preds = %1387
  %1392 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1393 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1392, align 8
  %1394 = sext i32 %1389 to i64
  %1395 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1393, i64 %1394
  br label %1396

1396:                                             ; preds = %1391, %1387
  %1397 = phi %struct.TfLiteTensor* [ %1395, %1391 ], [ null, %1387 ]
  br i1 %1197, label %1408, label %1398

1398:                                             ; preds = %1396
  %1399 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1400 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1399, align 8
  %1401 = sext i32 %1196 to i64
  %1402 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1400, i64 %1401
  %1403 = icmp eq %struct.TfLiteTensor* %1402, null
  br i1 %1403, label %1408, label %1404

1404:                                             ; preds = %1398
  %1405 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1400, i64 %1401, i32 1
  %1406 = bitcast %union.TfLitePtrUnion* %1405 to i64**
  %1407 = load i64*, i64** %1406, align 8
  br label %1408

1408:                                             ; preds = %1404, %1398, %1396
  %1409 = phi %struct.TfLiteTensor* [ %1402, %1404 ], [ null, %1398 ], [ null, %1396 ]
  %1410 = phi i64* [ %1407, %1404 ], [ null, %1398 ], [ null, %1396 ]
  %1411 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %1412 = bitcast i8** %1411 to %struct.TfLiteReverseSequenceParams**
  %1413 = load %struct.TfLiteReverseSequenceParams*, %struct.TfLiteReverseSequenceParams** %1412, align 8
  %1414 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %1413, i64 0, i32 0
  %1415 = load i32, i32* %1414, align 4
  %1416 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %1413, i64 0, i32 1
  %1417 = load i32, i32* %1416, align 4
  %1418 = icmp sgt i32 %1415, -1
  br i1 %1418, label %1422, label %1419

1419:                                             ; preds = %1408
  %1420 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1421 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1420, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1421(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 78, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %1962

1422:                                             ; preds = %1408
  %1423 = icmp sgt i32 %1417, -1
  br i1 %1423, label %1427, label %1424

1424:                                             ; preds = %1422
  %1425 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1426 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1425, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1426(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %1962

1427:                                             ; preds = %1422
  %1428 = icmp eq i32 %1415, %1417
  br i1 %1428, label %1429, label %1432

1429:                                             ; preds = %1427
  %1430 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1431 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1430, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1431(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %1962

1432:                                             ; preds = %1427
  %1433 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1397, i64 0, i32 2
  %1434 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1433, align 8
  %1435 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1434, i64 0, i32 0
  %1436 = load i32, i32* %1435, align 4
  %1437 = icmp slt i32 %1415, %1436
  br i1 %1437, label %1441, label %1438

1438:                                             ; preds = %1432
  %1439 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1440 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1439, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1440(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0)) #6
  br label %1962

1441:                                             ; preds = %1432
  %1442 = icmp slt i32 %1417, %1436
  br i1 %1442, label %1446, label %1443

1443:                                             ; preds = %1441
  %1444 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1445 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1444, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1445(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #6
  br label %1962

1446:                                             ; preds = %1441
  %1447 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1409, i64 0, i32 2
  %1448 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1447, align 8
  %1449 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1448, i64 0, i32 1, i64 0
  %1450 = load i32, i32* %1449, align 4
  %1451 = sext i32 %1417 to i64
  %1452 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1434, i64 0, i32 1, i64 %1451
  %1453 = load i32, i32* %1452, align 4
  %1454 = icmp eq i32 %1450, %1453
  br i1 %1454, label %1455, label %1465

1455:                                             ; preds = %1446
  %1456 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1448, i64 0, i32 0
  %1457 = load i32, i32* %1456, align 4
  %1458 = icmp sgt i32 %1457, 0
  br i1 %1458, label %1459, label %1479

1459:                                             ; preds = %1455
  %1460 = sext i32 %1415 to i64
  %1461 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1434, i64 0, i32 1, i64 %1460
  %1462 = load i32, i32* %1461, align 4
  %1463 = sext i32 %1462 to i64
  %1464 = sext i32 %1457 to i64
  br label %1470

1465:                                             ; preds = %1446
  %1466 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1467 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1466, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1467(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0), i32 %1450, i32 %1453) #6
  br label %1962

1468:                                             ; preds = %1470
  %1469 = icmp eq i64 %1475, %1464
  br i1 %1469, label %1479, label %1470

1470:                                             ; preds = %1468, %1459
  %1471 = phi i64 [ 0, %1459 ], [ %1475, %1468 ]
  %1472 = getelementptr inbounds i64, i64* %1410, i64 %1471
  %1473 = load i64, i64* %1472, align 8
  %1474 = icmp sgt i64 %1473, %1463
  %1475 = add nuw nsw i64 %1471, 1
  br i1 %1474, label %1476, label %1468

1476:                                             ; preds = %1470
  %1477 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1478 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1477, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1478(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %1962

1479:                                             ; preds = %1468, %1455
  br i1 %27, label %1485, label %1480

1480:                                             ; preds = %1479
  %1481 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1482 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1481, align 8
  %1483 = sext i32 %26 to i64
  %1484 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1482, i64 %1483
  br label %1485

1485:                                             ; preds = %1480, %1479
  %1486 = phi %struct.TfLiteTensor* [ %1484, %1480 ], [ null, %1479 ]
  %1487 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1487) #6
  %1488 = icmp eq %struct.TfLiteTensor* %1397, null
  br i1 %1488, label %1489, label %1491

1489:                                             ; preds = %1485
  %1490 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %1490, align 8, !alias.scope !44
  br label %1514

1491:                                             ; preds = %1485
  %1492 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1434, i64 0, i32 1, i64 0
  %1493 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %1436, i32* %1493, align 8, !alias.scope !44
  %1494 = icmp sgt i32 %1436, 5
  br i1 %1494, label %1495, label %1502

1495:                                             ; preds = %1491
  %1496 = sext i32 %1436 to i64
  %1497 = shl nsw i64 %1496, 2
  %1498 = tail call i8* @_Znam(i64 %1497) #7, !noalias !44
  %1499 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %1500 = bitcast i32** %1499 to i8**
  store i8* %1498, i8** %1500, align 8, !alias.scope !44
  %1501 = bitcast i8* %1498 to i32*
  br label %1507

1502:                                             ; preds = %1491
  %1503 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %1504 = bitcast %union.anon* %1503 to i32*
  %1505 = sext i32 %1436 to i64
  %1506 = shl nsw i64 %1505, 2
  br label %1507

1507:                                             ; preds = %1502, %1495
  %1508 = phi i64 [ %1497, %1495 ], [ %1506, %1502 ]
  %1509 = phi i32* [ %1501, %1495 ], [ %1504, %1502 ]
  %1510 = bitcast i32* %1509 to i8*
  %1511 = bitcast i32* %1492 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1510, i8* align 4 %1511, i64 %1508, i1 false) #6
  %1512 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1397, i64 0, i32 1, i32 0
  %1513 = load i32*, i32** %1512, align 8
  br label %1514

1514:                                             ; preds = %1507, %1489
  %1515 = phi i32* [ %1513, %1507 ], [ null, %1489 ]
  %1516 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1516) #6
  %1517 = icmp eq %struct.TfLiteTensor* %1486, null
  br i1 %1517, label %1518, label %1520

1518:                                             ; preds = %1514
  %1519 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %1519, align 8, !alias.scope !47
  br label %1547

1520:                                             ; preds = %1514
  %1521 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1486, i64 0, i32 2
  %1522 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1521, align 8, !noalias !47
  %1523 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1522, i64 0, i32 0
  %1524 = load i32, i32* %1523, align 4, !noalias !47
  %1525 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1522, i64 0, i32 1, i64 0
  %1526 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %1524, i32* %1526, align 8, !alias.scope !47
  %1527 = icmp sgt i32 %1524, 5
  br i1 %1527, label %1528, label %1535

1528:                                             ; preds = %1520
  %1529 = sext i32 %1524 to i64
  %1530 = shl nsw i64 %1529, 2
  %1531 = tail call i8* @_Znam(i64 %1530) #7, !noalias !47
  %1532 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1533 = bitcast i32** %1532 to i8**
  store i8* %1531, i8** %1533, align 8, !alias.scope !47
  %1534 = bitcast i8* %1531 to i32*
  br label %1540

1535:                                             ; preds = %1520
  %1536 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %1537 = bitcast %union.anon* %1536 to i32*
  %1538 = sext i32 %1524 to i64
  %1539 = shl nsw i64 %1538, 2
  br label %1540

1540:                                             ; preds = %1535, %1528
  %1541 = phi i64 [ %1530, %1528 ], [ %1539, %1535 ]
  %1542 = phi i32* [ %1534, %1528 ], [ %1537, %1535 ]
  %1543 = bitcast i32* %1542 to i8*
  %1544 = bitcast i32* %1525 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1543, i8* align 4 %1544, i64 %1541, i1 false) #6
  %1545 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1486, i64 0, i32 1, i32 0
  %1546 = load i32*, i32** %1545, align 8
  br label %1547

1547:                                             ; preds = %1540, %1518
  %1548 = phi i32* [ %1546, %1540 ], [ null, %1518 ]
  call void @_ZN6tflite13reference_ops15ReverseSequenceIilEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i64* %1410, i32 %1415, i32 %1417, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i32* %1515, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i32* %1548) #6
  %1549 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %1550 = load i32, i32* %1549, align 8
  %1551 = icmp sgt i32 %1550, 5
  br i1 %1551, label %1552, label %1558

1552:                                             ; preds = %1547
  %1553 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1554 = load i32*, i32** %1553, align 8
  %1555 = icmp eq i32* %1554, null
  br i1 %1555, label %1558, label %1556

1556:                                             ; preds = %1552
  %1557 = bitcast i32* %1554 to i8*
  call void @_ZdaPv(i8* %1557) #7
  br label %1558

1558:                                             ; preds = %1556, %1552, %1547
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1516) #6
  %1559 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %1560 = load i32, i32* %1559, align 8
  %1561 = icmp sgt i32 %1560, 5
  br i1 %1561, label %1562, label %1568

1562:                                             ; preds = %1558
  %1563 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %1564 = load i32*, i32** %1563, align 8
  %1565 = icmp eq i32* %1564, null
  br i1 %1565, label %1568, label %1566

1566:                                             ; preds = %1562
  %1567 = bitcast i32* %1564 to i8*
  call void @_ZdaPv(i8* %1567) #7
  br label %1568

1568:                                             ; preds = %1566, %1562, %1558
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1487) #6
  br label %1962

1569:                                             ; preds = %1203
  %1570 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1571 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1570, align 8
  %1572 = tail call i8* @TfLiteTypeGetName(i32 %1206) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %1571(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i8* %1572) #6
  br label %1962

1573:                                             ; preds = %33
  %1574 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %1575 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1574, align 8
  %1576 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1575, i64 0, i32 1, i64 1
  %1577 = load i32, i32* %1576, align 4
  %1578 = icmp slt i32 %1577, 0
  br i1 %1578, label %1584, label %1579

1579:                                             ; preds = %1573
  %1580 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1581 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1580, align 8
  %1582 = sext i32 %1577 to i64
  %1583 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1581, i64 %1582
  br label %1584

1584:                                             ; preds = %1579, %1573
  %1585 = phi %struct.TfLiteTensor* [ %1583, %1579 ], [ null, %1573 ]
  %1586 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1585, i64 0, i32 0
  %1587 = load i32, i32* %1586, align 8
  switch i32 %1587, label %1954 [
    i32 2, label %1588
    i32 4, label %1770
  ]

1588:                                             ; preds = %1584
  %1589 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1575, i64 0, i32 1, i64 0
  %1590 = load i32, i32* %1589, align 4
  %1591 = icmp slt i32 %1590, 0
  br i1 %1591, label %1597, label %1592

1592:                                             ; preds = %1588
  %1593 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1594 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1593, align 8
  %1595 = sext i32 %1590 to i64
  %1596 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1594, i64 %1595
  br label %1597

1597:                                             ; preds = %1592, %1588
  %1598 = phi %struct.TfLiteTensor* [ %1596, %1592 ], [ null, %1588 ]
  br i1 %1578, label %1608, label %1599

1599:                                             ; preds = %1597
  %1600 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1601 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1600, align 8
  %1602 = sext i32 %1577 to i64
  %1603 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1601, i64 %1602
  %1604 = icmp eq %struct.TfLiteTensor* %1603, null
  br i1 %1604, label %1608, label %1605

1605:                                             ; preds = %1599
  %1606 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1601, i64 %1602, i32 1, i32 0
  %1607 = load i32*, i32** %1606, align 8
  br label %1608

1608:                                             ; preds = %1605, %1599, %1597
  %1609 = phi %struct.TfLiteTensor* [ %1603, %1605 ], [ null, %1599 ], [ null, %1597 ]
  %1610 = phi i32* [ %1607, %1605 ], [ null, %1599 ], [ null, %1597 ]
  %1611 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %1612 = bitcast i8** %1611 to %struct.TfLiteReverseSequenceParams**
  %1613 = load %struct.TfLiteReverseSequenceParams*, %struct.TfLiteReverseSequenceParams** %1612, align 8
  %1614 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %1613, i64 0, i32 0
  %1615 = load i32, i32* %1614, align 4
  %1616 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %1613, i64 0, i32 1
  %1617 = load i32, i32* %1616, align 4
  %1618 = icmp sgt i32 %1615, -1
  br i1 %1618, label %1622, label %1619

1619:                                             ; preds = %1608
  %1620 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1621 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1620, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1621(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 78, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %1962

1622:                                             ; preds = %1608
  %1623 = icmp sgt i32 %1617, -1
  br i1 %1623, label %1627, label %1624

1624:                                             ; preds = %1622
  %1625 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1626 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1625, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1626(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %1962

1627:                                             ; preds = %1622
  %1628 = icmp eq i32 %1615, %1617
  br i1 %1628, label %1629, label %1632

1629:                                             ; preds = %1627
  %1630 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1631 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1630, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1631(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %1962

1632:                                             ; preds = %1627
  %1633 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1598, i64 0, i32 2
  %1634 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1633, align 8
  %1635 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1634, i64 0, i32 0
  %1636 = load i32, i32* %1635, align 4
  %1637 = icmp slt i32 %1615, %1636
  br i1 %1637, label %1641, label %1638

1638:                                             ; preds = %1632
  %1639 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1640 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1639, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1640(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0)) #6
  br label %1962

1641:                                             ; preds = %1632
  %1642 = icmp slt i32 %1617, %1636
  br i1 %1642, label %1646, label %1643

1643:                                             ; preds = %1641
  %1644 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1645 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1644, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1645(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #6
  br label %1962

1646:                                             ; preds = %1641
  %1647 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1609, i64 0, i32 2
  %1648 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1647, align 8
  %1649 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1648, i64 0, i32 1, i64 0
  %1650 = load i32, i32* %1649, align 4
  %1651 = sext i32 %1617 to i64
  %1652 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1634, i64 0, i32 1, i64 %1651
  %1653 = load i32, i32* %1652, align 4
  %1654 = icmp eq i32 %1650, %1653
  br i1 %1654, label %1655, label %1664

1655:                                             ; preds = %1646
  %1656 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1648, i64 0, i32 0
  %1657 = load i32, i32* %1656, align 4
  %1658 = icmp sgt i32 %1657, 0
  br i1 %1658, label %1659, label %1678

1659:                                             ; preds = %1655
  %1660 = sext i32 %1615 to i64
  %1661 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1634, i64 0, i32 1, i64 %1660
  %1662 = load i32, i32* %1661, align 4
  %1663 = sext i32 %1657 to i64
  br label %1669

1664:                                             ; preds = %1646
  %1665 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1666 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1665, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1666(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0), i32 %1650, i32 %1653) #6
  br label %1962

1667:                                             ; preds = %1669
  %1668 = icmp eq i64 %1674, %1663
  br i1 %1668, label %1678, label %1669

1669:                                             ; preds = %1667, %1659
  %1670 = phi i64 [ 0, %1659 ], [ %1674, %1667 ]
  %1671 = getelementptr inbounds i32, i32* %1610, i64 %1670
  %1672 = load i32, i32* %1671, align 4
  %1673 = icmp sgt i32 %1672, %1662
  %1674 = add nuw nsw i64 %1670, 1
  br i1 %1673, label %1675, label %1667

1675:                                             ; preds = %1669
  %1676 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1677 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1676, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1677(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %1962

1678:                                             ; preds = %1667, %1655
  br i1 %27, label %1684, label %1679

1679:                                             ; preds = %1678
  %1680 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1681 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1680, align 8
  %1682 = sext i32 %26 to i64
  %1683 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1681, i64 %1682
  br label %1684

1684:                                             ; preds = %1679, %1678
  %1685 = phi %struct.TfLiteTensor* [ %1683, %1679 ], [ null, %1678 ]
  %1686 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1686) #6
  %1687 = icmp eq %struct.TfLiteTensor* %1598, null
  br i1 %1687, label %1688, label %1690

1688:                                             ; preds = %1684
  %1689 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %1689, align 8, !alias.scope !50
  br label %1714

1690:                                             ; preds = %1684
  %1691 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1634, i64 0, i32 1, i64 0
  %1692 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %1636, i32* %1692, align 8, !alias.scope !50
  %1693 = icmp sgt i32 %1636, 5
  br i1 %1693, label %1694, label %1701

1694:                                             ; preds = %1690
  %1695 = sext i32 %1636 to i64
  %1696 = shl nsw i64 %1695, 2
  %1697 = tail call i8* @_Znam(i64 %1696) #7, !noalias !50
  %1698 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %1699 = bitcast i32** %1698 to i8**
  store i8* %1697, i8** %1699, align 8, !alias.scope !50
  %1700 = bitcast i8* %1697 to i32*
  br label %1706

1701:                                             ; preds = %1690
  %1702 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %1703 = bitcast %union.anon* %1702 to i32*
  %1704 = sext i32 %1636 to i64
  %1705 = shl nsw i64 %1704, 2
  br label %1706

1706:                                             ; preds = %1701, %1694
  %1707 = phi i64 [ %1696, %1694 ], [ %1705, %1701 ]
  %1708 = phi i32* [ %1700, %1694 ], [ %1703, %1701 ]
  %1709 = bitcast i32* %1708 to i8*
  %1710 = bitcast i32* %1691 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1709, i8* align 4 %1710, i64 %1707, i1 false) #6
  %1711 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1598, i64 0, i32 1
  %1712 = bitcast %union.TfLitePtrUnion* %1711 to i64**
  %1713 = load i64*, i64** %1712, align 8
  br label %1714

1714:                                             ; preds = %1706, %1688
  %1715 = phi i64* [ %1713, %1706 ], [ null, %1688 ]
  %1716 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1716) #6
  %1717 = icmp eq %struct.TfLiteTensor* %1685, null
  br i1 %1717, label %1718, label %1720

1718:                                             ; preds = %1714
  %1719 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %1719, align 8, !alias.scope !53
  br label %1748

1720:                                             ; preds = %1714
  %1721 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1685, i64 0, i32 2
  %1722 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1721, align 8, !noalias !53
  %1723 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1722, i64 0, i32 0
  %1724 = load i32, i32* %1723, align 4, !noalias !53
  %1725 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1722, i64 0, i32 1, i64 0
  %1726 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %1724, i32* %1726, align 8, !alias.scope !53
  %1727 = icmp sgt i32 %1724, 5
  br i1 %1727, label %1728, label %1735

1728:                                             ; preds = %1720
  %1729 = sext i32 %1724 to i64
  %1730 = shl nsw i64 %1729, 2
  %1731 = tail call i8* @_Znam(i64 %1730) #7, !noalias !53
  %1732 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %1733 = bitcast i32** %1732 to i8**
  store i8* %1731, i8** %1733, align 8, !alias.scope !53
  %1734 = bitcast i8* %1731 to i32*
  br label %1740

1735:                                             ; preds = %1720
  %1736 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %1737 = bitcast %union.anon* %1736 to i32*
  %1738 = sext i32 %1724 to i64
  %1739 = shl nsw i64 %1738, 2
  br label %1740

1740:                                             ; preds = %1735, %1728
  %1741 = phi i64 [ %1730, %1728 ], [ %1739, %1735 ]
  %1742 = phi i32* [ %1734, %1728 ], [ %1737, %1735 ]
  %1743 = bitcast i32* %1742 to i8*
  %1744 = bitcast i32* %1725 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1743, i8* align 4 %1744, i64 %1741, i1 false) #6
  %1745 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1685, i64 0, i32 1
  %1746 = bitcast %union.TfLitePtrUnion* %1745 to i64**
  %1747 = load i64*, i64** %1746, align 8
  br label %1748

1748:                                             ; preds = %1740, %1718
  %1749 = phi i64* [ %1747, %1740 ], [ null, %1718 ]
  call void @_ZN6tflite13reference_ops15ReverseSequenceIliEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i32* %1610, i32 %1615, i32 %1617, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i64* %1715, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i64* %1749) #6
  %1750 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %1751 = load i32, i32* %1750, align 8
  %1752 = icmp sgt i32 %1751, 5
  br i1 %1752, label %1753, label %1759

1753:                                             ; preds = %1748
  %1754 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %1755 = load i32*, i32** %1754, align 8
  %1756 = icmp eq i32* %1755, null
  br i1 %1756, label %1759, label %1757

1757:                                             ; preds = %1753
  %1758 = bitcast i32* %1755 to i8*
  call void @_ZdaPv(i8* %1758) #7
  br label %1759

1759:                                             ; preds = %1757, %1753, %1748
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1716) #6
  %1760 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %1761 = load i32, i32* %1760, align 8
  %1762 = icmp sgt i32 %1761, 5
  br i1 %1762, label %1763, label %1769

1763:                                             ; preds = %1759
  %1764 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %1765 = load i32*, i32** %1764, align 8
  %1766 = icmp eq i32* %1765, null
  br i1 %1766, label %1769, label %1767

1767:                                             ; preds = %1763
  %1768 = bitcast i32* %1765 to i8*
  call void @_ZdaPv(i8* %1768) #7
  br label %1769

1769:                                             ; preds = %1767, %1763, %1759
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1686) #6
  br label %1962

1770:                                             ; preds = %1584
  %1771 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1575, i64 0, i32 1, i64 0
  %1772 = load i32, i32* %1771, align 4
  %1773 = icmp slt i32 %1772, 0
  br i1 %1773, label %1779, label %1774

1774:                                             ; preds = %1770
  %1775 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1776 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1775, align 8
  %1777 = sext i32 %1772 to i64
  %1778 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1776, i64 %1777
  br label %1779

1779:                                             ; preds = %1774, %1770
  %1780 = phi %struct.TfLiteTensor* [ %1778, %1774 ], [ null, %1770 ]
  br i1 %1578, label %1791, label %1781

1781:                                             ; preds = %1779
  %1782 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1783 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1782, align 8
  %1784 = sext i32 %1577 to i64
  %1785 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1783, i64 %1784
  %1786 = icmp eq %struct.TfLiteTensor* %1785, null
  br i1 %1786, label %1791, label %1787

1787:                                             ; preds = %1781
  %1788 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1783, i64 %1784, i32 1
  %1789 = bitcast %union.TfLitePtrUnion* %1788 to i64**
  %1790 = load i64*, i64** %1789, align 8
  br label %1791

1791:                                             ; preds = %1787, %1781, %1779
  %1792 = phi %struct.TfLiteTensor* [ %1785, %1787 ], [ null, %1781 ], [ null, %1779 ]
  %1793 = phi i64* [ %1790, %1787 ], [ null, %1781 ], [ null, %1779 ]
  %1794 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %1795 = bitcast i8** %1794 to %struct.TfLiteReverseSequenceParams**
  %1796 = load %struct.TfLiteReverseSequenceParams*, %struct.TfLiteReverseSequenceParams** %1795, align 8
  %1797 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %1796, i64 0, i32 0
  %1798 = load i32, i32* %1797, align 4
  %1799 = getelementptr inbounds %struct.TfLiteReverseSequenceParams, %struct.TfLiteReverseSequenceParams* %1796, i64 0, i32 1
  %1800 = load i32, i32* %1799, align 4
  %1801 = icmp sgt i32 %1798, -1
  br i1 %1801, label %1805, label %1802

1802:                                             ; preds = %1791
  %1803 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1804 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1803, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1804(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 78, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %1962

1805:                                             ; preds = %1791
  %1806 = icmp sgt i32 %1800, -1
  br i1 %1806, label %1810, label %1807

1807:                                             ; preds = %1805
  %1808 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1809 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1808, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1809(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %1962

1810:                                             ; preds = %1805
  %1811 = icmp eq i32 %1798, %1800
  br i1 %1811, label %1812, label %1815

1812:                                             ; preds = %1810
  %1813 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1814 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1813, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1814(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %1962

1815:                                             ; preds = %1810
  %1816 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1780, i64 0, i32 2
  %1817 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1816, align 8
  %1818 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1817, i64 0, i32 0
  %1819 = load i32, i32* %1818, align 4
  %1820 = icmp slt i32 %1798, %1819
  br i1 %1820, label %1824, label %1821

1821:                                             ; preds = %1815
  %1822 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1823 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1822, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1823(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0)) #6
  br label %1962

1824:                                             ; preds = %1815
  %1825 = icmp slt i32 %1800, %1819
  br i1 %1825, label %1829, label %1826

1826:                                             ; preds = %1824
  %1827 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1828 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1827, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1828(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #6
  br label %1962

1829:                                             ; preds = %1824
  %1830 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1792, i64 0, i32 2
  %1831 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1830, align 8
  %1832 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1831, i64 0, i32 1, i64 0
  %1833 = load i32, i32* %1832, align 4
  %1834 = sext i32 %1800 to i64
  %1835 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1817, i64 0, i32 1, i64 %1834
  %1836 = load i32, i32* %1835, align 4
  %1837 = icmp eq i32 %1833, %1836
  br i1 %1837, label %1838, label %1848

1838:                                             ; preds = %1829
  %1839 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1831, i64 0, i32 0
  %1840 = load i32, i32* %1839, align 4
  %1841 = icmp sgt i32 %1840, 0
  br i1 %1841, label %1842, label %1862

1842:                                             ; preds = %1838
  %1843 = sext i32 %1798 to i64
  %1844 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1817, i64 0, i32 1, i64 %1843
  %1845 = load i32, i32* %1844, align 4
  %1846 = sext i32 %1845 to i64
  %1847 = sext i32 %1840 to i64
  br label %1853

1848:                                             ; preds = %1829
  %1849 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1850 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1849, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1850(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0), i32 %1833, i32 %1836) #6
  br label %1962

1851:                                             ; preds = %1853
  %1852 = icmp eq i64 %1858, %1847
  br i1 %1852, label %1862, label %1853

1853:                                             ; preds = %1851, %1842
  %1854 = phi i64 [ 0, %1842 ], [ %1858, %1851 ]
  %1855 = getelementptr inbounds i64, i64* %1793, i64 %1854
  %1856 = load i64, i64* %1855, align 8
  %1857 = icmp sgt i64 %1856, %1846
  %1858 = add nuw nsw i64 %1854, 1
  br i1 %1857, label %1859, label %1851

1859:                                             ; preds = %1853
  %1860 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1861 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1860, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1861(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %1962

1862:                                             ; preds = %1851, %1838
  br i1 %27, label %1868, label %1863

1863:                                             ; preds = %1862
  %1864 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %1865 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %1864, align 8
  %1866 = sext i32 %26 to i64
  %1867 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1865, i64 %1866
  br label %1868

1868:                                             ; preds = %1863, %1862
  %1869 = phi %struct.TfLiteTensor* [ %1867, %1863 ], [ null, %1862 ]
  %1870 = bitcast %"class.tflite::RuntimeShape"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1870) #6
  %1871 = icmp eq %struct.TfLiteTensor* %1780, null
  br i1 %1871, label %1872, label %1874

1872:                                             ; preds = %1868
  %1873 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  store i32 0, i32* %1873, align 8, !alias.scope !56
  br label %1898

1874:                                             ; preds = %1868
  %1875 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1817, i64 0, i32 1, i64 0
  %1876 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  store i32 %1819, i32* %1876, align 8, !alias.scope !56
  %1877 = icmp sgt i32 %1819, 5
  br i1 %1877, label %1878, label %1885

1878:                                             ; preds = %1874
  %1879 = sext i32 %1819 to i64
  %1880 = shl nsw i64 %1879, 2
  %1881 = tail call i8* @_Znam(i64 %1880) #7, !noalias !56
  %1882 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 0
  %1883 = bitcast i32** %1882 to i8**
  store i8* %1881, i8** %1883, align 8, !alias.scope !56
  %1884 = bitcast i8* %1881 to i32*
  br label %1890

1885:                                             ; preds = %1874
  %1886 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %1887 = bitcast %union.anon* %1886 to i32*
  %1888 = sext i32 %1819 to i64
  %1889 = shl nsw i64 %1888, 2
  br label %1890

1890:                                             ; preds = %1885, %1878
  %1891 = phi i64 [ %1880, %1878 ], [ %1889, %1885 ]
  %1892 = phi i32* [ %1884, %1878 ], [ %1887, %1885 ]
  %1893 = bitcast i32* %1892 to i8*
  %1894 = bitcast i32* %1875 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1893, i8* align 4 %1894, i64 %1891, i1 false) #6
  %1895 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1780, i64 0, i32 1
  %1896 = bitcast %union.TfLitePtrUnion* %1895 to i64**
  %1897 = load i64*, i64** %1896, align 8
  br label %1898

1898:                                             ; preds = %1890, %1872
  %1899 = phi i64* [ %1897, %1890 ], [ null, %1872 ]
  %1900 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1900) #6
  %1901 = icmp eq %struct.TfLiteTensor* %1869, null
  br i1 %1901, label %1902, label %1904

1902:                                             ; preds = %1898
  %1903 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %1903, align 8, !alias.scope !59
  br label %1932

1904:                                             ; preds = %1898
  %1905 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1869, i64 0, i32 2
  %1906 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1905, align 8, !noalias !59
  %1907 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1906, i64 0, i32 0
  %1908 = load i32, i32* %1907, align 4, !noalias !59
  %1909 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1906, i64 0, i32 1, i64 0
  %1910 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %1908, i32* %1910, align 8, !alias.scope !59
  %1911 = icmp sgt i32 %1908, 5
  br i1 %1911, label %1912, label %1919

1912:                                             ; preds = %1904
  %1913 = sext i32 %1908 to i64
  %1914 = shl nsw i64 %1913, 2
  %1915 = tail call i8* @_Znam(i64 %1914) #7, !noalias !59
  %1916 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %1917 = bitcast i32** %1916 to i8**
  store i8* %1915, i8** %1917, align 8, !alias.scope !59
  %1918 = bitcast i8* %1915 to i32*
  br label %1924

1919:                                             ; preds = %1904
  %1920 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %1921 = bitcast %union.anon* %1920 to i32*
  %1922 = sext i32 %1908 to i64
  %1923 = shl nsw i64 %1922, 2
  br label %1924

1924:                                             ; preds = %1919, %1912
  %1925 = phi i64 [ %1914, %1912 ], [ %1923, %1919 ]
  %1926 = phi i32* [ %1918, %1912 ], [ %1921, %1919 ]
  %1927 = bitcast i32* %1926 to i8*
  %1928 = bitcast i32* %1909 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1927, i8* align 4 %1928, i64 %1925, i1 false) #6
  %1929 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1869, i64 0, i32 1
  %1930 = bitcast %union.TfLitePtrUnion* %1929 to i64**
  %1931 = load i64*, i64** %1930, align 8
  br label %1932

1932:                                             ; preds = %1924, %1902
  %1933 = phi i64* [ %1931, %1924 ], [ null, %1902 ]
  call void @_ZN6tflite13reference_ops15ReverseSequenceIllEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i64* %1793, i32 %1798, i32 %1800, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %3, i64* %1899, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i64* %1933) #6
  %1934 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %1935 = load i32, i32* %1934, align 8
  %1936 = icmp sgt i32 %1935, 5
  br i1 %1936, label %1937, label %1943

1937:                                             ; preds = %1932
  %1938 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %1939 = load i32*, i32** %1938, align 8
  %1940 = icmp eq i32* %1939, null
  br i1 %1940, label %1943, label %1941

1941:                                             ; preds = %1937
  %1942 = bitcast i32* %1939 to i8*
  call void @_ZdaPv(i8* %1942) #7
  br label %1943

1943:                                             ; preds = %1941, %1937, %1932
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1900) #6
  %1944 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %1945 = load i32, i32* %1944, align 8
  %1946 = icmp sgt i32 %1945, 5
  br i1 %1946, label %1947, label %1953

1947:                                             ; preds = %1943
  %1948 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 0
  %1949 = load i32*, i32** %1948, align 8
  %1950 = icmp eq i32* %1949, null
  br i1 %1950, label %1953, label %1951

1951:                                             ; preds = %1947
  %1952 = bitcast i32* %1949 to i8*
  call void @_ZdaPv(i8* %1952) #7
  br label %1953

1953:                                             ; preds = %1951, %1947, %1943
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1870) #6
  br label %1962

1954:                                             ; preds = %1584
  %1955 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1956 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1955, align 8
  %1957 = tail call i8* @TfLiteTypeGetName(i32 %1587) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %1956(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i8* %1957) #6
  br label %1962

1958:                                             ; preds = %33
  %1959 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1960 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1959, align 8
  %1961 = tail call i8* @TfLiteTypeGetName(i32 %36) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %1960(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.10, i64 0, i64 0), i8* %1961) #6
  br label %1962

1962:                                             ; preds = %1954, %1953, %1859, %1848, %1826, %1821, %1812, %1807, %1802, %1769, %1675, %1664, %1643, %1638, %1629, %1624, %1619, %1569, %1568, %1476, %1465, %1443, %1438, %1429, %1424, %1419, %1386, %1294, %1283, %1262, %1257, %1248, %1243, %1238, %1188, %1187, %1093, %1082, %1060, %1055, %1046, %1041, %1036, %1003, %909, %898, %877, %872, %863, %858, %853, %803, %802, %708, %697, %675, %670, %661, %656, %651, %618, %524, %513, %492, %487, %478, %473, %468, %418, %417, %323, %312, %290, %285, %276, %271, %266, %233, %139, %128, %107, %102, %93, %88, %83, %1958
  %1963 = phi i32 [ 1, %1958 ], [ 1, %418 ], [ 1, %128 ], [ 0, %233 ], [ 1, %107 ], [ 1, %102 ], [ 1, %93 ], [ 1, %88 ], [ 1, %83 ], [ 1, %139 ], [ 1, %312 ], [ 0, %417 ], [ 1, %290 ], [ 1, %285 ], [ 1, %276 ], [ 1, %271 ], [ 1, %266 ], [ 1, %323 ], [ 1, %803 ], [ 1, %513 ], [ 0, %618 ], [ 1, %492 ], [ 1, %487 ], [ 1, %478 ], [ 1, %473 ], [ 1, %468 ], [ 1, %524 ], [ 1, %697 ], [ 0, %802 ], [ 1, %675 ], [ 1, %670 ], [ 1, %661 ], [ 1, %656 ], [ 1, %651 ], [ 1, %708 ], [ 1, %1188 ], [ 1, %898 ], [ 0, %1003 ], [ 1, %877 ], [ 1, %872 ], [ 1, %863 ], [ 1, %858 ], [ 1, %853 ], [ 1, %909 ], [ 1, %1082 ], [ 0, %1187 ], [ 1, %1060 ], [ 1, %1055 ], [ 1, %1046 ], [ 1, %1041 ], [ 1, %1036 ], [ 1, %1093 ], [ 1, %1569 ], [ 1, %1283 ], [ 0, %1386 ], [ 1, %1262 ], [ 1, %1257 ], [ 1, %1248 ], [ 1, %1243 ], [ 1, %1238 ], [ 1, %1294 ], [ 1, %1465 ], [ 0, %1568 ], [ 1, %1443 ], [ 1, %1438 ], [ 1, %1429 ], [ 1, %1424 ], [ 1, %1419 ], [ 1, %1476 ], [ 1, %1954 ], [ 1, %1664 ], [ 0, %1769 ], [ 1, %1643 ], [ 1, %1638 ], [ 1, %1629 ], [ 1, %1624 ], [ 1, %1619 ], [ 1, %1675 ], [ 1, %1848 ], [ 0, %1953 ], [ 1, %1826 ], [ 1, %1821 ], [ 1, %1812 ], [ 1, %1807 ], [ 1, %1802 ], [ 1, %1859 ]
  ret i32 %1963
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #3

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops15ReverseSequenceIfiEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i32*, i32, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #1 comdat {
  %8 = icmp slt i32 %1, %2
  %9 = select i1 %8, i32 %1, i32 %2
  %10 = icmp slt i32 %2, %1
  %11 = select i1 %10, i32 %1, i32 %2
  %12 = icmp sgt i32 %9, 0
  br i1 %12, label %13, label %44

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 5
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = bitcast %union.anon* %17 to [5 x i32]*
  %21 = sext i32 %9 to i64
  %22 = add nsw i64 %21, -1
  %23 = and i64 %21, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  %26 = sub nsw i64 %21, %23
  br label %65

27:                                               ; preds = %65, %13
  %28 = phi i32 [ undef, %13 ], [ %91, %65 ]
  %29 = phi i64 [ 0, %13 ], [ %92, %65 ]
  %30 = phi i32 [ 1, %13 ], [ %91, %65 ]
  %31 = icmp eq i64 %23, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %27, %32
  %33 = phi i64 [ %41, %32 ], [ %29, %27 ]
  %34 = phi i32 [ %40, %32 ], [ %30, %27 ]
  %35 = phi i64 [ %42, %32 ], [ %23, %27 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %33
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %38 = select i1 %16, i32* %36, i32* %37
  %39 = load i32, i32* %38, align 4
  %40 = mul nsw i32 %39, %34
  %41 = add nuw nsw i64 %33, 1
  %42 = add i64 %35, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %32, !llvm.loop !62

44:                                               ; preds = %27, %32, %7
  %45 = phi i32 [ 1, %7 ], [ %28, %27 ], [ %40, %32 ]
  %46 = add i32 %9, 1
  %47 = icmp slt i32 %46, %11
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  br i1 %47, label %50, label %112

50:                                               ; preds = %44
  %51 = icmp sgt i32 %49, 5
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %union.anon, %union.anon* %52, i64 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = bitcast %union.anon* %52 to [5 x i32]*
  %56 = sext i32 %46 to i64
  %57 = sext i32 %11 to i64
  %58 = sub nsw i64 %57, %56
  %59 = xor i64 %56, -1
  %60 = add nsw i64 %59, %57
  %61 = and i64 %58, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %50
  %64 = sub nsw i64 %58, %61
  br label %131

65:                                               ; preds = %65, %25
  %66 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %68 = phi i64 [ %26, %25 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %19, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %16, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %19, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %16, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %19, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %16, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %19, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %16, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %27, label %65

95:                                               ; preds = %131, %50
  %96 = phi i32 [ undef, %50 ], [ %157, %131 ]
  %97 = phi i64 [ %56, %50 ], [ %158, %131 ]
  %98 = phi i32 [ 1, %50 ], [ %157, %131 ]
  %99 = icmp eq i64 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i64 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %54, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %101
  %106 = select i1 %51, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !64

112:                                              ; preds = %95, %100, %44
  %113 = phi i32 [ 1, %44 ], [ %96, %95 ], [ %108, %100 ]
  %114 = add i32 %11, 1
  %115 = icmp slt i32 %114, %49
  %116 = icmp sgt i32 %49, 5
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %115, label %118, label %178

118:                                              ; preds = %112
  %119 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = bitcast %union.anon* %117 to [5 x i32]*
  %122 = sext i32 %114 to i64
  %123 = sext i32 %49 to i64
  %124 = sub nsw i64 %123, %122
  %125 = xor i64 %122, -1
  %126 = add nsw i64 %125, %123
  %127 = and i64 %124, 3
  %128 = icmp ult i64 %126, 3
  br i1 %128, label %161, label %129

129:                                              ; preds = %118
  %130 = sub nsw i64 %124, %127
  br label %213

131:                                              ; preds = %131, %63
  %132 = phi i64 [ %56, %63 ], [ %158, %131 ]
  %133 = phi i32 [ 1, %63 ], [ %157, %131 ]
  %134 = phi i64 [ %64, %63 ], [ %159, %131 ]
  %135 = getelementptr inbounds i32, i32* %54, i64 %132
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %132
  %137 = select i1 %51, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %132, 1
  %141 = getelementptr inbounds i32, i32* %54, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %140
  %143 = select i1 %51, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %132, 2
  %147 = getelementptr inbounds i32, i32* %54, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %146
  %149 = select i1 %51, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %132, 3
  %153 = getelementptr inbounds i32, i32* %54, i64 %152
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %152
  %155 = select i1 %51, i32* %153, i32* %154
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = add nsw i64 %132, 4
  %159 = add i64 %134, -4
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %95, label %131

161:                                              ; preds = %213, %118
  %162 = phi i32 [ undef, %118 ], [ %239, %213 ]
  %163 = phi i64 [ %122, %118 ], [ %240, %213 ]
  %164 = phi i32 [ 1, %118 ], [ %239, %213 ]
  %165 = icmp eq i64 %127, 0
  br i1 %165, label %178, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %175, %166 ], [ %163, %161 ]
  %168 = phi i32 [ %174, %166 ], [ %164, %161 ]
  %169 = phi i64 [ %176, %166 ], [ %127, %161 ]
  %170 = getelementptr inbounds i32, i32* %120, i64 %167
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %167
  %172 = select i1 %116, i32* %170, i32* %171
  %173 = load i32, i32* %172, align 4
  %174 = mul nsw i32 %173, %168
  %175 = add nsw i64 %167, 1
  %176 = add i64 %169, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %166, !llvm.loop !65

178:                                              ; preds = %161, %166, %112
  %179 = phi i32 [ 1, %112 ], [ %162, %161 ], [ %174, %166 ]
  br i1 %116, label %180, label %187

180:                                              ; preds = %178
  %181 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = sext i32 %9 to i64
  %184 = getelementptr inbounds i32, i32* %182, i64 %183
  %185 = sext i32 %11 to i64
  %186 = getelementptr inbounds i32, i32* %182, i64 %185
  br label %193

187:                                              ; preds = %178
  %188 = bitcast %union.anon* %117 to [5 x i32]*
  %189 = sext i32 %9 to i64
  %190 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %189
  %191 = sext i32 %11 to i64
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %191
  br label %193

193:                                              ; preds = %180, %187
  %194 = phi i32* [ %184, %180 ], [ %190, %187 ]
  %195 = phi i32* [ %186, %180 ], [ %192, %187 ]
  %196 = load i32, i32* %194, align 4
  %197 = load i32, i32* %195, align 4
  %198 = icmp sgt i32 %45, 0
  br i1 %8, label %199, label %296

199:                                              ; preds = %193
  br i1 %198, label %200, label %383

200:                                              ; preds = %199
  %201 = icmp sgt i32 %196, 0
  %202 = icmp sgt i32 %113, 0
  %203 = icmp sgt i32 %197, 0
  %204 = sext i32 %179 to i64
  %205 = shl nsw i64 %204, 2
  %206 = sext i32 %197 to i64
  %207 = sext i32 %113 to i64
  %208 = sext i32 %196 to i64
  %209 = zext i32 %45 to i64
  %210 = zext i32 %196 to i64
  %211 = zext i32 %113 to i64
  %212 = zext i32 %197 to i64
  br label %243

213:                                              ; preds = %213, %129
  %214 = phi i64 [ %122, %129 ], [ %240, %213 ]
  %215 = phi i32 [ 1, %129 ], [ %239, %213 ]
  %216 = phi i64 [ %130, %129 ], [ %241, %213 ]
  %217 = getelementptr inbounds i32, i32* %120, i64 %214
  %218 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %214
  %219 = select i1 %116, i32* %217, i32* %218
  %220 = load i32, i32* %219, align 4
  %221 = mul nsw i32 %220, %215
  %222 = add nsw i64 %214, 1
  %223 = getelementptr inbounds i32, i32* %120, i64 %222
  %224 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %222
  %225 = select i1 %116, i32* %223, i32* %224
  %226 = load i32, i32* %225, align 4
  %227 = mul nsw i32 %226, %221
  %228 = add nsw i64 %214, 2
  %229 = getelementptr inbounds i32, i32* %120, i64 %228
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %228
  %231 = select i1 %116, i32* %229, i32* %230
  %232 = load i32, i32* %231, align 4
  %233 = mul nsw i32 %232, %227
  %234 = add nsw i64 %214, 3
  %235 = getelementptr inbounds i32, i32* %120, i64 %234
  %236 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %234
  %237 = select i1 %116, i32* %235, i32* %236
  %238 = load i32, i32* %237, align 4
  %239 = mul nsw i32 %238, %233
  %240 = add nsw i64 %214, 4
  %241 = add i64 %216, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %161, label %213

243:                                              ; preds = %248, %200
  %244 = phi i64 [ 0, %200 ], [ %249, %248 ]
  br i1 %201, label %245, label %248

245:                                              ; preds = %243
  %246 = mul nsw i64 %244, %208
  %247 = trunc i64 %246 to i32
  br label %251

248:                                              ; preds = %265, %243
  %249 = add nuw nsw i64 %244, 1
  %250 = icmp eq i64 %249, %209
  br i1 %250, label %383, label %243

251:                                              ; preds = %265, %245
  %252 = phi i64 [ 0, %245 ], [ %266, %265 ]
  %253 = add nsw i64 %252, %246
  %254 = mul nsw i64 %253, %207
  br i1 %202, label %255, label %265

255:                                              ; preds = %251
  %256 = trunc i64 %252 to i32
  %257 = xor i32 %256, -1
  %258 = add i32 %247, %257
  br label %259

259:                                              ; preds = %268, %255
  %260 = phi i64 [ 0, %255 ], [ %269, %268 ]
  br i1 %203, label %261, label %268

261:                                              ; preds = %259
  %262 = add nsw i64 %260, %254
  %263 = mul nsw i64 %262, %206
  %264 = trunc i64 %260 to i32
  br label %271

265:                                              ; preds = %268, %251
  %266 = add nuw nsw i64 %252, 1
  %267 = icmp eq i64 %266, %210
  br i1 %267, label %248, label %251

268:                                              ; preds = %289, %259
  %269 = add nuw nsw i64 %260, 1
  %270 = icmp eq i64 %269, %211
  br i1 %270, label %265, label %259

271:                                              ; preds = %289, %261
  %272 = phi i64 [ 0, %261 ], [ %294, %289 ]
  %273 = add nsw i64 %272, %263
  %274 = mul nsw i64 %273, %204
  %275 = getelementptr inbounds float, float* %4, i64 %274
  %276 = getelementptr inbounds i32, i32* %0, i64 %272
  %277 = load i32, i32* %276, align 4
  %278 = sext i32 %277 to i64
  %279 = icmp slt i64 %252, %278
  br i1 %279, label %280, label %289

280:                                              ; preds = %271
  %281 = add i32 %258, %277
  %282 = mul nsw i32 %281, %113
  %283 = add nsw i32 %282, %264
  %284 = mul nsw i32 %283, %197
  %285 = trunc i64 %272 to i32
  %286 = add nsw i32 %284, %285
  %287 = mul nsw i32 %286, %179
  %288 = sext i32 %287 to i64
  br label %289

289:                                              ; preds = %271, %280
  %290 = phi i64 [ %288, %280 ], [ %274, %271 ]
  %291 = getelementptr inbounds float, float* %6, i64 %290
  %292 = bitcast float* %291 to i8*
  %293 = bitcast float* %275 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %292, i8* align 4 %293, i64 %205, i1 false)
  %294 = add nuw nsw i64 %272, 1
  %295 = icmp eq i64 %294, %212
  br i1 %295, label %268, label %271

296:                                              ; preds = %193
  %297 = and i1 %10, %198
  br i1 %297, label %298, label %383

298:                                              ; preds = %296
  %299 = icmp sgt i32 %196, 0
  %300 = icmp sgt i32 %113, 0
  %301 = icmp sgt i32 %197, 0
  %302 = sext i32 %179 to i64
  %303 = shl nsw i64 %302, 2
  %304 = sext i32 %197 to i64
  %305 = sext i32 %113 to i64
  %306 = sext i32 %196 to i64
  %307 = zext i32 %45 to i64
  %308 = zext i32 %196 to i64
  %309 = zext i32 %113 to i64
  %310 = zext i32 %197 to i64
  %311 = and i64 %310, 1
  %312 = icmp eq i32 %197, 1
  %313 = sub nsw i64 %310, %311
  %314 = icmp eq i64 %311, 0
  br label %315

315:                                              ; preds = %319, %298
  %316 = phi i64 [ 0, %298 ], [ %320, %319 ]
  br i1 %299, label %317, label %319

317:                                              ; preds = %315
  %318 = mul nsw i64 %316, %306
  br label %322

319:                                              ; preds = %338, %315
  %320 = add nuw nsw i64 %316, 1
  %321 = icmp eq i64 %320, %307
  br i1 %321, label %383, label %315

322:                                              ; preds = %338, %317
  %323 = phi i64 [ 0, %317 ], [ %339, %338 ]
  %324 = add nsw i64 %323, %318
  %325 = mul nsw i64 %324, %305
  %326 = getelementptr inbounds i32, i32* %0, i64 %323
  %327 = load i32, i32* %326, align 4
  br i1 %300, label %328, label %338

328:                                              ; preds = %322
  %329 = add nsw i32 %327, -1
  %330 = sext i32 %327 to i64
  br label %331

331:                                              ; preds = %358, %328
  %332 = phi i64 [ 0, %328 ], [ %359, %358 ]
  br i1 %301, label %333, label %358

333:                                              ; preds = %331
  %334 = add nsw i64 %332, %325
  %335 = mul nsw i64 %334, %304
  %336 = trunc i64 %335 to i32
  %337 = add i32 %329, %336
  br i1 %312, label %341, label %361

338:                                              ; preds = %358, %322
  %339 = add nuw nsw i64 %323, 1
  %340 = icmp eq i64 %339, %308
  br i1 %340, label %319, label %322

341:                                              ; preds = %389, %333
  %342 = phi i64 [ 0, %333 ], [ %394, %389 ]
  br i1 %314, label %358, label %343

343:                                              ; preds = %341
  %344 = add nsw i64 %342, %335
  %345 = mul nsw i64 %344, %302
  %346 = getelementptr inbounds float, float* %4, i64 %345
  %347 = icmp slt i64 %342, %330
  br i1 %347, label %348, label %353

348:                                              ; preds = %343
  %349 = trunc i64 %342 to i32
  %350 = sub i32 %337, %349
  %351 = mul nsw i32 %350, %179
  %352 = sext i32 %351 to i64
  br label %353

353:                                              ; preds = %348, %343
  %354 = phi i64 [ %352, %348 ], [ %345, %343 ]
  %355 = getelementptr inbounds float, float* %6, i64 %354
  %356 = bitcast float* %355 to i8*
  %357 = bitcast float* %346 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %356, i8* align 4 %357, i64 %303, i1 false)
  br label %358

358:                                              ; preds = %353, %341, %331
  %359 = add nuw nsw i64 %332, 1
  %360 = icmp eq i64 %359, %309
  br i1 %360, label %338, label %331

361:                                              ; preds = %333, %389
  %362 = phi i64 [ %394, %389 ], [ 0, %333 ]
  %363 = phi i64 [ %395, %389 ], [ %313, %333 ]
  %364 = add nsw i64 %362, %335
  %365 = mul nsw i64 %364, %302
  %366 = getelementptr inbounds float, float* %4, i64 %365
  %367 = icmp slt i64 %362, %330
  br i1 %367, label %368, label %373

368:                                              ; preds = %361
  %369 = trunc i64 %362 to i32
  %370 = sub i32 %337, %369
  %371 = mul nsw i32 %370, %179
  %372 = sext i32 %371 to i64
  br label %373

373:                                              ; preds = %361, %368
  %374 = phi i64 [ %372, %368 ], [ %365, %361 ]
  %375 = getelementptr inbounds float, float* %6, i64 %374
  %376 = bitcast float* %375 to i8*
  %377 = bitcast float* %366 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %376, i8* align 4 %377, i64 %303, i1 false)
  %378 = or i64 %362, 1
  %379 = add nsw i64 %378, %335
  %380 = mul nsw i64 %379, %302
  %381 = getelementptr inbounds float, float* %4, i64 %380
  %382 = icmp slt i64 %378, %330
  br i1 %382, label %384, label %389

383:                                              ; preds = %319, %248, %199, %296
  ret void

384:                                              ; preds = %373
  %385 = trunc i64 %378 to i32
  %386 = sub i32 %337, %385
  %387 = mul nsw i32 %386, %179
  %388 = sext i32 %387 to i64
  br label %389

389:                                              ; preds = %384, %373
  %390 = phi i64 [ %388, %384 ], [ %380, %373 ]
  %391 = getelementptr inbounds float, float* %6, i64 %390
  %392 = bitcast float* %391 to i8*
  %393 = bitcast float* %381 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %392, i8* align 4 %393, i64 %303, i1 false)
  %394 = add nuw nsw i64 %362, 2
  %395 = add i64 %363, -2
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %341, label %361
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops15ReverseSequenceIflEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i64*, i32, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #1 comdat {
  %8 = icmp slt i32 %1, %2
  %9 = select i1 %8, i32 %1, i32 %2
  %10 = icmp slt i32 %2, %1
  %11 = select i1 %10, i32 %1, i32 %2
  %12 = icmp sgt i32 %9, 0
  br i1 %12, label %13, label %44

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 5
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = bitcast %union.anon* %17 to [5 x i32]*
  %21 = sext i32 %9 to i64
  %22 = add nsw i64 %21, -1
  %23 = and i64 %21, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  %26 = sub nsw i64 %21, %23
  br label %65

27:                                               ; preds = %65, %13
  %28 = phi i32 [ undef, %13 ], [ %91, %65 ]
  %29 = phi i64 [ 0, %13 ], [ %92, %65 ]
  %30 = phi i32 [ 1, %13 ], [ %91, %65 ]
  %31 = icmp eq i64 %23, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %27, %32
  %33 = phi i64 [ %41, %32 ], [ %29, %27 ]
  %34 = phi i32 [ %40, %32 ], [ %30, %27 ]
  %35 = phi i64 [ %42, %32 ], [ %23, %27 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %33
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %38 = select i1 %16, i32* %36, i32* %37
  %39 = load i32, i32* %38, align 4
  %40 = mul nsw i32 %39, %34
  %41 = add nuw nsw i64 %33, 1
  %42 = add i64 %35, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %32, !llvm.loop !66

44:                                               ; preds = %27, %32, %7
  %45 = phi i32 [ 1, %7 ], [ %28, %27 ], [ %40, %32 ]
  %46 = add i32 %9, 1
  %47 = icmp slt i32 %46, %11
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  br i1 %47, label %50, label %112

50:                                               ; preds = %44
  %51 = icmp sgt i32 %49, 5
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %union.anon, %union.anon* %52, i64 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = bitcast %union.anon* %52 to [5 x i32]*
  %56 = sext i32 %46 to i64
  %57 = sext i32 %11 to i64
  %58 = sub nsw i64 %57, %56
  %59 = xor i64 %56, -1
  %60 = add nsw i64 %59, %57
  %61 = and i64 %58, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %50
  %64 = sub nsw i64 %58, %61
  br label %131

65:                                               ; preds = %65, %25
  %66 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %68 = phi i64 [ %26, %25 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %19, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %16, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %19, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %16, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %19, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %16, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %19, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %16, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %27, label %65

95:                                               ; preds = %131, %50
  %96 = phi i32 [ undef, %50 ], [ %157, %131 ]
  %97 = phi i64 [ %56, %50 ], [ %158, %131 ]
  %98 = phi i32 [ 1, %50 ], [ %157, %131 ]
  %99 = icmp eq i64 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i64 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %54, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %101
  %106 = select i1 %51, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !67

112:                                              ; preds = %95, %100, %44
  %113 = phi i32 [ 1, %44 ], [ %96, %95 ], [ %108, %100 ]
  %114 = add i32 %11, 1
  %115 = icmp slt i32 %114, %49
  %116 = icmp sgt i32 %49, 5
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %115, label %118, label %178

118:                                              ; preds = %112
  %119 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = bitcast %union.anon* %117 to [5 x i32]*
  %122 = sext i32 %114 to i64
  %123 = sext i32 %49 to i64
  %124 = sub nsw i64 %123, %122
  %125 = xor i64 %122, -1
  %126 = add nsw i64 %125, %123
  %127 = and i64 %124, 3
  %128 = icmp ult i64 %126, 3
  br i1 %128, label %161, label %129

129:                                              ; preds = %118
  %130 = sub nsw i64 %124, %127
  br label %213

131:                                              ; preds = %131, %63
  %132 = phi i64 [ %56, %63 ], [ %158, %131 ]
  %133 = phi i32 [ 1, %63 ], [ %157, %131 ]
  %134 = phi i64 [ %64, %63 ], [ %159, %131 ]
  %135 = getelementptr inbounds i32, i32* %54, i64 %132
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %132
  %137 = select i1 %51, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %132, 1
  %141 = getelementptr inbounds i32, i32* %54, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %140
  %143 = select i1 %51, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %132, 2
  %147 = getelementptr inbounds i32, i32* %54, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %146
  %149 = select i1 %51, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %132, 3
  %153 = getelementptr inbounds i32, i32* %54, i64 %152
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %152
  %155 = select i1 %51, i32* %153, i32* %154
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = add nsw i64 %132, 4
  %159 = add i64 %134, -4
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %95, label %131

161:                                              ; preds = %213, %118
  %162 = phi i32 [ undef, %118 ], [ %239, %213 ]
  %163 = phi i64 [ %122, %118 ], [ %240, %213 ]
  %164 = phi i32 [ 1, %118 ], [ %239, %213 ]
  %165 = icmp eq i64 %127, 0
  br i1 %165, label %178, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %175, %166 ], [ %163, %161 ]
  %168 = phi i32 [ %174, %166 ], [ %164, %161 ]
  %169 = phi i64 [ %176, %166 ], [ %127, %161 ]
  %170 = getelementptr inbounds i32, i32* %120, i64 %167
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %167
  %172 = select i1 %116, i32* %170, i32* %171
  %173 = load i32, i32* %172, align 4
  %174 = mul nsw i32 %173, %168
  %175 = add nsw i64 %167, 1
  %176 = add i64 %169, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %166, !llvm.loop !68

178:                                              ; preds = %161, %166, %112
  %179 = phi i32 [ 1, %112 ], [ %162, %161 ], [ %174, %166 ]
  br i1 %116, label %180, label %187

180:                                              ; preds = %178
  %181 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = sext i32 %9 to i64
  %184 = getelementptr inbounds i32, i32* %182, i64 %183
  %185 = sext i32 %11 to i64
  %186 = getelementptr inbounds i32, i32* %182, i64 %185
  br label %193

187:                                              ; preds = %178
  %188 = bitcast %union.anon* %117 to [5 x i32]*
  %189 = sext i32 %9 to i64
  %190 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %189
  %191 = sext i32 %11 to i64
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %191
  br label %193

193:                                              ; preds = %180, %187
  %194 = phi i32* [ %184, %180 ], [ %190, %187 ]
  %195 = phi i32* [ %186, %180 ], [ %192, %187 ]
  %196 = load i32, i32* %194, align 4
  %197 = load i32, i32* %195, align 4
  %198 = icmp sgt i32 %45, 0
  br i1 %8, label %199, label %297

199:                                              ; preds = %193
  br i1 %198, label %200, label %385

200:                                              ; preds = %199
  %201 = icmp sgt i32 %196, 0
  %202 = icmp sgt i32 %113, 0
  %203 = icmp sgt i32 %197, 0
  %204 = sext i32 %179 to i64
  %205 = shl nsw i64 %204, 2
  %206 = sext i32 %197 to i64
  %207 = sext i32 %113 to i64
  %208 = sext i32 %196 to i64
  %209 = zext i32 %45 to i64
  %210 = zext i32 %196 to i64
  %211 = zext i32 %113 to i64
  %212 = zext i32 %197 to i64
  br label %243

213:                                              ; preds = %213, %129
  %214 = phi i64 [ %122, %129 ], [ %240, %213 ]
  %215 = phi i32 [ 1, %129 ], [ %239, %213 ]
  %216 = phi i64 [ %130, %129 ], [ %241, %213 ]
  %217 = getelementptr inbounds i32, i32* %120, i64 %214
  %218 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %214
  %219 = select i1 %116, i32* %217, i32* %218
  %220 = load i32, i32* %219, align 4
  %221 = mul nsw i32 %220, %215
  %222 = add nsw i64 %214, 1
  %223 = getelementptr inbounds i32, i32* %120, i64 %222
  %224 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %222
  %225 = select i1 %116, i32* %223, i32* %224
  %226 = load i32, i32* %225, align 4
  %227 = mul nsw i32 %226, %221
  %228 = add nsw i64 %214, 2
  %229 = getelementptr inbounds i32, i32* %120, i64 %228
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %228
  %231 = select i1 %116, i32* %229, i32* %230
  %232 = load i32, i32* %231, align 4
  %233 = mul nsw i32 %232, %227
  %234 = add nsw i64 %214, 3
  %235 = getelementptr inbounds i32, i32* %120, i64 %234
  %236 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %234
  %237 = select i1 %116, i32* %235, i32* %236
  %238 = load i32, i32* %237, align 4
  %239 = mul nsw i32 %238, %233
  %240 = add nsw i64 %214, 4
  %241 = add i64 %216, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %161, label %213

243:                                              ; preds = %248, %200
  %244 = phi i64 [ 0, %200 ], [ %249, %248 ]
  br i1 %201, label %245, label %248

245:                                              ; preds = %243
  %246 = mul nsw i64 %244, %208
  %247 = trunc i64 %246 to i32
  br label %251

248:                                              ; preds = %264, %243
  %249 = add nuw nsw i64 %244, 1
  %250 = icmp eq i64 %249, %209
  br i1 %250, label %385, label %243

251:                                              ; preds = %264, %245
  %252 = phi i64 [ 0, %245 ], [ %265, %264 ]
  %253 = add nsw i64 %252, %246
  %254 = mul nsw i64 %253, %207
  br i1 %202, label %255, label %264

255:                                              ; preds = %251
  %256 = trunc i64 %252 to i32
  %257 = sub i32 %247, %256
  br label %258

258:                                              ; preds = %267, %255
  %259 = phi i64 [ 0, %255 ], [ %268, %267 ]
  br i1 %203, label %260, label %267

260:                                              ; preds = %258
  %261 = add nsw i64 %259, %254
  %262 = mul nsw i64 %261, %206
  %263 = trunc i64 %259 to i32
  br label %270

264:                                              ; preds = %267, %251
  %265 = add nuw nsw i64 %252, 1
  %266 = icmp eq i64 %265, %210
  br i1 %266, label %248, label %251

267:                                              ; preds = %290, %258
  %268 = add nuw nsw i64 %259, 1
  %269 = icmp eq i64 %268, %211
  br i1 %269, label %264, label %258

270:                                              ; preds = %290, %260
  %271 = phi i64 [ 0, %260 ], [ %295, %290 ]
  %272 = add nsw i64 %271, %262
  %273 = mul nsw i64 %272, %204
  %274 = getelementptr inbounds float, float* %4, i64 %273
  %275 = getelementptr inbounds i64, i64* %0, i64 %271
  %276 = load i64, i64* %275, align 8
  %277 = trunc i64 %276 to i32
  %278 = add i32 %277, -1
  %279 = sext i32 %278 to i64
  %280 = icmp sgt i64 %252, %279
  br i1 %280, label %290, label %281

281:                                              ; preds = %270
  %282 = add i32 %257, %278
  %283 = mul nsw i32 %282, %113
  %284 = add nsw i32 %283, %263
  %285 = mul nsw i32 %284, %197
  %286 = trunc i64 %271 to i32
  %287 = add nsw i32 %285, %286
  %288 = mul nsw i32 %287, %179
  %289 = sext i32 %288 to i64
  br label %290

290:                                              ; preds = %270, %281
  %291 = phi i64 [ %289, %281 ], [ %273, %270 ]
  %292 = getelementptr inbounds float, float* %6, i64 %291
  %293 = bitcast float* %292 to i8*
  %294 = bitcast float* %274 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %293, i8* align 4 %294, i64 %205, i1 false)
  %295 = add nuw nsw i64 %271, 1
  %296 = icmp eq i64 %295, %212
  br i1 %296, label %267, label %270

297:                                              ; preds = %193
  %298 = and i1 %10, %198
  br i1 %298, label %299, label %385

299:                                              ; preds = %297
  %300 = icmp sgt i32 %196, 0
  %301 = icmp sgt i32 %113, 0
  %302 = icmp sgt i32 %197, 0
  %303 = sext i32 %179 to i64
  %304 = shl nsw i64 %303, 2
  %305 = sext i32 %197 to i64
  %306 = sext i32 %113 to i64
  %307 = sext i32 %196 to i64
  %308 = zext i32 %45 to i64
  %309 = zext i32 %196 to i64
  %310 = zext i32 %113 to i64
  %311 = zext i32 %197 to i64
  %312 = and i64 %311, 1
  %313 = icmp eq i32 %197, 1
  %314 = sub nsw i64 %311, %312
  %315 = icmp eq i64 %312, 0
  br label %316

316:                                              ; preds = %320, %299
  %317 = phi i64 [ 0, %299 ], [ %321, %320 ]
  br i1 %300, label %318, label %320

318:                                              ; preds = %316
  %319 = mul nsw i64 %317, %307
  br label %323

320:                                              ; preds = %340, %316
  %321 = add nuw nsw i64 %317, 1
  %322 = icmp eq i64 %321, %308
  br i1 %322, label %385, label %316

323:                                              ; preds = %340, %318
  %324 = phi i64 [ 0, %318 ], [ %341, %340 ]
  %325 = add nsw i64 %324, %319
  %326 = mul nsw i64 %325, %306
  br i1 %301, label %327, label %340

327:                                              ; preds = %323
  %328 = getelementptr inbounds i64, i64* %0, i64 %324
  %329 = load i64, i64* %328, align 8
  %330 = shl i64 %329, 32
  %331 = add i64 %330, -4294967296
  %332 = ashr exact i64 %331, 32
  br label %333

333:                                              ; preds = %360, %327
  %334 = phi i64 [ 0, %327 ], [ %361, %360 ]
  br i1 %302, label %335, label %360

335:                                              ; preds = %333
  %336 = add nsw i64 %334, %326
  %337 = mul nsw i64 %336, %305
  %338 = add nsw i64 %337, %332
  %339 = trunc i64 %338 to i32
  br i1 %313, label %343, label %363

340:                                              ; preds = %360, %323
  %341 = add nuw nsw i64 %324, 1
  %342 = icmp eq i64 %341, %309
  br i1 %342, label %320, label %323

343:                                              ; preds = %391, %335
  %344 = phi i64 [ 0, %335 ], [ %396, %391 ]
  br i1 %315, label %360, label %345

345:                                              ; preds = %343
  %346 = add nsw i64 %344, %337
  %347 = mul nsw i64 %346, %303
  %348 = getelementptr inbounds float, float* %4, i64 %347
  %349 = icmp sgt i64 %344, %332
  br i1 %349, label %355, label %350

350:                                              ; preds = %345
  %351 = trunc i64 %344 to i32
  %352 = sub i32 %339, %351
  %353 = mul nsw i32 %352, %179
  %354 = sext i32 %353 to i64
  br label %355

355:                                              ; preds = %350, %345
  %356 = phi i64 [ %354, %350 ], [ %347, %345 ]
  %357 = getelementptr inbounds float, float* %6, i64 %356
  %358 = bitcast float* %357 to i8*
  %359 = bitcast float* %348 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %358, i8* align 4 %359, i64 %304, i1 false)
  br label %360

360:                                              ; preds = %355, %343, %333
  %361 = add nuw nsw i64 %334, 1
  %362 = icmp eq i64 %361, %310
  br i1 %362, label %340, label %333

363:                                              ; preds = %335, %391
  %364 = phi i64 [ %396, %391 ], [ 0, %335 ]
  %365 = phi i64 [ %397, %391 ], [ %314, %335 ]
  %366 = add nsw i64 %364, %337
  %367 = mul nsw i64 %366, %303
  %368 = getelementptr inbounds float, float* %4, i64 %367
  %369 = icmp sgt i64 %364, %332
  br i1 %369, label %375, label %370

370:                                              ; preds = %363
  %371 = trunc i64 %364 to i32
  %372 = sub i32 %339, %371
  %373 = mul nsw i32 %372, %179
  %374 = sext i32 %373 to i64
  br label %375

375:                                              ; preds = %363, %370
  %376 = phi i64 [ %374, %370 ], [ %367, %363 ]
  %377 = getelementptr inbounds float, float* %6, i64 %376
  %378 = bitcast float* %377 to i8*
  %379 = bitcast float* %368 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %378, i8* align 4 %379, i64 %304, i1 false)
  %380 = or i64 %364, 1
  %381 = add nsw i64 %380, %337
  %382 = mul nsw i64 %381, %303
  %383 = getelementptr inbounds float, float* %4, i64 %382
  %384 = icmp slt i64 %364, %332
  br i1 %384, label %386, label %391

385:                                              ; preds = %320, %248, %199, %297
  ret void

386:                                              ; preds = %375
  %387 = trunc i64 %380 to i32
  %388 = sub i32 %339, %387
  %389 = mul nsw i32 %388, %179
  %390 = sext i32 %389 to i64
  br label %391

391:                                              ; preds = %375, %386
  %392 = phi i64 [ %390, %386 ], [ %382, %375 ]
  %393 = getelementptr inbounds float, float* %6, i64 %392
  %394 = bitcast float* %393 to i8*
  %395 = bitcast float* %383 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %394, i8* align 4 %395, i64 %304, i1 false)
  %396 = add nuw nsw i64 %364, 2
  %397 = add i64 %365, -2
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %343, label %363
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops15ReverseSequenceIhiEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i32*, i32, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #1 comdat {
  %8 = icmp slt i32 %1, %2
  %9 = select i1 %8, i32 %1, i32 %2
  %10 = icmp slt i32 %2, %1
  %11 = select i1 %10, i32 %1, i32 %2
  %12 = icmp sgt i32 %9, 0
  br i1 %12, label %13, label %44

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 5
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = bitcast %union.anon* %17 to [5 x i32]*
  %21 = sext i32 %9 to i64
  %22 = add nsw i64 %21, -1
  %23 = and i64 %21, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  %26 = sub nsw i64 %21, %23
  br label %65

27:                                               ; preds = %65, %13
  %28 = phi i32 [ undef, %13 ], [ %91, %65 ]
  %29 = phi i64 [ 0, %13 ], [ %92, %65 ]
  %30 = phi i32 [ 1, %13 ], [ %91, %65 ]
  %31 = icmp eq i64 %23, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %27, %32
  %33 = phi i64 [ %41, %32 ], [ %29, %27 ]
  %34 = phi i32 [ %40, %32 ], [ %30, %27 ]
  %35 = phi i64 [ %42, %32 ], [ %23, %27 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %33
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %38 = select i1 %16, i32* %36, i32* %37
  %39 = load i32, i32* %38, align 4
  %40 = mul nsw i32 %39, %34
  %41 = add nuw nsw i64 %33, 1
  %42 = add i64 %35, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %32, !llvm.loop !69

44:                                               ; preds = %27, %32, %7
  %45 = phi i32 [ 1, %7 ], [ %28, %27 ], [ %40, %32 ]
  %46 = add i32 %9, 1
  %47 = icmp slt i32 %46, %11
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  br i1 %47, label %50, label %112

50:                                               ; preds = %44
  %51 = icmp sgt i32 %49, 5
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %union.anon, %union.anon* %52, i64 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = bitcast %union.anon* %52 to [5 x i32]*
  %56 = sext i32 %46 to i64
  %57 = sext i32 %11 to i64
  %58 = sub nsw i64 %57, %56
  %59 = xor i64 %56, -1
  %60 = add nsw i64 %59, %57
  %61 = and i64 %58, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %50
  %64 = sub nsw i64 %58, %61
  br label %131

65:                                               ; preds = %65, %25
  %66 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %68 = phi i64 [ %26, %25 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %19, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %16, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %19, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %16, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %19, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %16, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %19, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %16, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %27, label %65

95:                                               ; preds = %131, %50
  %96 = phi i32 [ undef, %50 ], [ %157, %131 ]
  %97 = phi i64 [ %56, %50 ], [ %158, %131 ]
  %98 = phi i32 [ 1, %50 ], [ %157, %131 ]
  %99 = icmp eq i64 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i64 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %54, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %101
  %106 = select i1 %51, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !70

112:                                              ; preds = %95, %100, %44
  %113 = phi i32 [ 1, %44 ], [ %96, %95 ], [ %108, %100 ]
  %114 = add i32 %11, 1
  %115 = icmp slt i32 %114, %49
  %116 = icmp sgt i32 %49, 5
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %115, label %118, label %178

118:                                              ; preds = %112
  %119 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = bitcast %union.anon* %117 to [5 x i32]*
  %122 = sext i32 %114 to i64
  %123 = sext i32 %49 to i64
  %124 = sub nsw i64 %123, %122
  %125 = xor i64 %122, -1
  %126 = add nsw i64 %125, %123
  %127 = and i64 %124, 3
  %128 = icmp ult i64 %126, 3
  br i1 %128, label %161, label %129

129:                                              ; preds = %118
  %130 = sub nsw i64 %124, %127
  br label %212

131:                                              ; preds = %131, %63
  %132 = phi i64 [ %56, %63 ], [ %158, %131 ]
  %133 = phi i32 [ 1, %63 ], [ %157, %131 ]
  %134 = phi i64 [ %64, %63 ], [ %159, %131 ]
  %135 = getelementptr inbounds i32, i32* %54, i64 %132
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %132
  %137 = select i1 %51, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %132, 1
  %141 = getelementptr inbounds i32, i32* %54, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %140
  %143 = select i1 %51, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %132, 2
  %147 = getelementptr inbounds i32, i32* %54, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %146
  %149 = select i1 %51, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %132, 3
  %153 = getelementptr inbounds i32, i32* %54, i64 %152
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %152
  %155 = select i1 %51, i32* %153, i32* %154
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = add nsw i64 %132, 4
  %159 = add i64 %134, -4
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %95, label %131

161:                                              ; preds = %212, %118
  %162 = phi i32 [ undef, %118 ], [ %238, %212 ]
  %163 = phi i64 [ %122, %118 ], [ %239, %212 ]
  %164 = phi i32 [ 1, %118 ], [ %238, %212 ]
  %165 = icmp eq i64 %127, 0
  br i1 %165, label %178, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %175, %166 ], [ %163, %161 ]
  %168 = phi i32 [ %174, %166 ], [ %164, %161 ]
  %169 = phi i64 [ %176, %166 ], [ %127, %161 ]
  %170 = getelementptr inbounds i32, i32* %120, i64 %167
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %167
  %172 = select i1 %116, i32* %170, i32* %171
  %173 = load i32, i32* %172, align 4
  %174 = mul nsw i32 %173, %168
  %175 = add nsw i64 %167, 1
  %176 = add i64 %169, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %166, !llvm.loop !71

178:                                              ; preds = %161, %166, %112
  %179 = phi i32 [ 1, %112 ], [ %162, %161 ], [ %174, %166 ]
  br i1 %116, label %180, label %187

180:                                              ; preds = %178
  %181 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = sext i32 %9 to i64
  %184 = getelementptr inbounds i32, i32* %182, i64 %183
  %185 = sext i32 %11 to i64
  %186 = getelementptr inbounds i32, i32* %182, i64 %185
  br label %193

187:                                              ; preds = %178
  %188 = bitcast %union.anon* %117 to [5 x i32]*
  %189 = sext i32 %9 to i64
  %190 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %189
  %191 = sext i32 %11 to i64
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %191
  br label %193

193:                                              ; preds = %180, %187
  %194 = phi i32* [ %184, %180 ], [ %190, %187 ]
  %195 = phi i32* [ %186, %180 ], [ %192, %187 ]
  %196 = load i32, i32* %194, align 4
  %197 = load i32, i32* %195, align 4
  %198 = icmp sgt i32 %45, 0
  br i1 %8, label %199, label %293

199:                                              ; preds = %193
  br i1 %198, label %200, label %375

200:                                              ; preds = %199
  %201 = icmp sgt i32 %196, 0
  %202 = icmp sgt i32 %113, 0
  %203 = icmp sgt i32 %197, 0
  %204 = sext i32 %179 to i64
  %205 = sext i32 %197 to i64
  %206 = sext i32 %113 to i64
  %207 = sext i32 %196 to i64
  %208 = zext i32 %45 to i64
  %209 = zext i32 %196 to i64
  %210 = zext i32 %113 to i64
  %211 = zext i32 %197 to i64
  br label %242

212:                                              ; preds = %212, %129
  %213 = phi i64 [ %122, %129 ], [ %239, %212 ]
  %214 = phi i32 [ 1, %129 ], [ %238, %212 ]
  %215 = phi i64 [ %130, %129 ], [ %240, %212 ]
  %216 = getelementptr inbounds i32, i32* %120, i64 %213
  %217 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %213
  %218 = select i1 %116, i32* %216, i32* %217
  %219 = load i32, i32* %218, align 4
  %220 = mul nsw i32 %219, %214
  %221 = add nsw i64 %213, 1
  %222 = getelementptr inbounds i32, i32* %120, i64 %221
  %223 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %221
  %224 = select i1 %116, i32* %222, i32* %223
  %225 = load i32, i32* %224, align 4
  %226 = mul nsw i32 %225, %220
  %227 = add nsw i64 %213, 2
  %228 = getelementptr inbounds i32, i32* %120, i64 %227
  %229 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %227
  %230 = select i1 %116, i32* %228, i32* %229
  %231 = load i32, i32* %230, align 4
  %232 = mul nsw i32 %231, %226
  %233 = add nsw i64 %213, 3
  %234 = getelementptr inbounds i32, i32* %120, i64 %233
  %235 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %233
  %236 = select i1 %116, i32* %234, i32* %235
  %237 = load i32, i32* %236, align 4
  %238 = mul nsw i32 %237, %232
  %239 = add nsw i64 %213, 4
  %240 = add i64 %215, -4
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %161, label %212

242:                                              ; preds = %247, %200
  %243 = phi i64 [ 0, %200 ], [ %248, %247 ]
  br i1 %201, label %244, label %247

244:                                              ; preds = %242
  %245 = mul nsw i64 %243, %207
  %246 = trunc i64 %245 to i32
  br label %250

247:                                              ; preds = %264, %242
  %248 = add nuw nsw i64 %243, 1
  %249 = icmp eq i64 %248, %208
  br i1 %249, label %375, label %242

250:                                              ; preds = %264, %244
  %251 = phi i64 [ 0, %244 ], [ %265, %264 ]
  %252 = add nsw i64 %251, %245
  %253 = mul nsw i64 %252, %206
  br i1 %202, label %254, label %264

254:                                              ; preds = %250
  %255 = trunc i64 %251 to i32
  %256 = xor i32 %255, -1
  %257 = add i32 %246, %256
  br label %258

258:                                              ; preds = %267, %254
  %259 = phi i64 [ 0, %254 ], [ %268, %267 ]
  br i1 %203, label %260, label %267

260:                                              ; preds = %258
  %261 = add nsw i64 %259, %253
  %262 = mul nsw i64 %261, %205
  %263 = trunc i64 %259 to i32
  br label %270

264:                                              ; preds = %267, %250
  %265 = add nuw nsw i64 %251, 1
  %266 = icmp eq i64 %265, %209
  br i1 %266, label %247, label %250

267:                                              ; preds = %288, %258
  %268 = add nuw nsw i64 %259, 1
  %269 = icmp eq i64 %268, %210
  br i1 %269, label %264, label %258

270:                                              ; preds = %288, %260
  %271 = phi i64 [ 0, %260 ], [ %291, %288 ]
  %272 = add nsw i64 %271, %262
  %273 = mul nsw i64 %272, %204
  %274 = getelementptr inbounds i8, i8* %4, i64 %273
  %275 = getelementptr inbounds i32, i32* %0, i64 %271
  %276 = load i32, i32* %275, align 4
  %277 = sext i32 %276 to i64
  %278 = icmp slt i64 %251, %277
  br i1 %278, label %279, label %288

279:                                              ; preds = %270
  %280 = add i32 %257, %276
  %281 = mul nsw i32 %280, %113
  %282 = add nsw i32 %281, %263
  %283 = mul nsw i32 %282, %197
  %284 = trunc i64 %271 to i32
  %285 = add nsw i32 %283, %284
  %286 = mul nsw i32 %285, %179
  %287 = sext i32 %286 to i64
  br label %288

288:                                              ; preds = %270, %279
  %289 = phi i64 [ %287, %279 ], [ %273, %270 ]
  %290 = getelementptr inbounds i8, i8* %6, i64 %289
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %290, i8* align 1 %274, i64 %204, i1 false)
  %291 = add nuw nsw i64 %271, 1
  %292 = icmp eq i64 %291, %211
  br i1 %292, label %267, label %270

293:                                              ; preds = %193
  %294 = and i1 %10, %198
  br i1 %294, label %295, label %375

295:                                              ; preds = %293
  %296 = icmp sgt i32 %196, 0
  %297 = icmp sgt i32 %113, 0
  %298 = icmp sgt i32 %197, 0
  %299 = sext i32 %179 to i64
  %300 = sext i32 %197 to i64
  %301 = sext i32 %113 to i64
  %302 = sext i32 %196 to i64
  %303 = zext i32 %45 to i64
  %304 = zext i32 %196 to i64
  %305 = zext i32 %113 to i64
  %306 = zext i32 %197 to i64
  %307 = and i64 %306, 1
  %308 = icmp eq i32 %197, 1
  %309 = sub nsw i64 %306, %307
  %310 = icmp eq i64 %307, 0
  br label %311

311:                                              ; preds = %315, %295
  %312 = phi i64 [ 0, %295 ], [ %316, %315 ]
  br i1 %296, label %313, label %315

313:                                              ; preds = %311
  %314 = mul nsw i64 %312, %302
  br label %318

315:                                              ; preds = %334, %311
  %316 = add nuw nsw i64 %312, 1
  %317 = icmp eq i64 %316, %303
  br i1 %317, label %375, label %311

318:                                              ; preds = %334, %313
  %319 = phi i64 [ 0, %313 ], [ %335, %334 ]
  %320 = add nsw i64 %319, %314
  %321 = mul nsw i64 %320, %301
  %322 = getelementptr inbounds i32, i32* %0, i64 %319
  %323 = load i32, i32* %322, align 4
  br i1 %297, label %324, label %334

324:                                              ; preds = %318
  %325 = add nsw i32 %323, -1
  %326 = sext i32 %323 to i64
  br label %327

327:                                              ; preds = %352, %324
  %328 = phi i64 [ 0, %324 ], [ %353, %352 ]
  br i1 %298, label %329, label %352

329:                                              ; preds = %327
  %330 = add nsw i64 %328, %321
  %331 = mul nsw i64 %330, %300
  %332 = trunc i64 %331 to i32
  %333 = add i32 %325, %332
  br i1 %308, label %337, label %355

334:                                              ; preds = %352, %318
  %335 = add nuw nsw i64 %319, 1
  %336 = icmp eq i64 %335, %304
  br i1 %336, label %315, label %318

337:                                              ; preds = %381, %329
  %338 = phi i64 [ 0, %329 ], [ %384, %381 ]
  br i1 %310, label %352, label %339

339:                                              ; preds = %337
  %340 = add nsw i64 %338, %331
  %341 = mul nsw i64 %340, %299
  %342 = getelementptr inbounds i8, i8* %4, i64 %341
  %343 = icmp slt i64 %338, %326
  br i1 %343, label %344, label %349

344:                                              ; preds = %339
  %345 = trunc i64 %338 to i32
  %346 = sub i32 %333, %345
  %347 = mul nsw i32 %346, %179
  %348 = sext i32 %347 to i64
  br label %349

349:                                              ; preds = %344, %339
  %350 = phi i64 [ %348, %344 ], [ %341, %339 ]
  %351 = getelementptr inbounds i8, i8* %6, i64 %350
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %351, i8* align 1 %342, i64 %299, i1 false)
  br label %352

352:                                              ; preds = %349, %337, %327
  %353 = add nuw nsw i64 %328, 1
  %354 = icmp eq i64 %353, %305
  br i1 %354, label %334, label %327

355:                                              ; preds = %329, %381
  %356 = phi i64 [ %384, %381 ], [ 0, %329 ]
  %357 = phi i64 [ %385, %381 ], [ %309, %329 ]
  %358 = add nsw i64 %356, %331
  %359 = mul nsw i64 %358, %299
  %360 = getelementptr inbounds i8, i8* %4, i64 %359
  %361 = icmp slt i64 %356, %326
  br i1 %361, label %362, label %367

362:                                              ; preds = %355
  %363 = trunc i64 %356 to i32
  %364 = sub i32 %333, %363
  %365 = mul nsw i32 %364, %179
  %366 = sext i32 %365 to i64
  br label %367

367:                                              ; preds = %355, %362
  %368 = phi i64 [ %366, %362 ], [ %359, %355 ]
  %369 = getelementptr inbounds i8, i8* %6, i64 %368
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %369, i8* align 1 %360, i64 %299, i1 false)
  %370 = or i64 %356, 1
  %371 = add nsw i64 %370, %331
  %372 = mul nsw i64 %371, %299
  %373 = getelementptr inbounds i8, i8* %4, i64 %372
  %374 = icmp slt i64 %370, %326
  br i1 %374, label %376, label %381

375:                                              ; preds = %315, %247, %199, %293
  ret void

376:                                              ; preds = %367
  %377 = trunc i64 %370 to i32
  %378 = sub i32 %333, %377
  %379 = mul nsw i32 %378, %179
  %380 = sext i32 %379 to i64
  br label %381

381:                                              ; preds = %376, %367
  %382 = phi i64 [ %380, %376 ], [ %372, %367 ]
  %383 = getelementptr inbounds i8, i8* %6, i64 %382
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %383, i8* align 1 %373, i64 %299, i1 false)
  %384 = add nuw nsw i64 %356, 2
  %385 = add i64 %357, -2
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %337, label %355
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops15ReverseSequenceIhlEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i64*, i32, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #1 comdat {
  %8 = icmp slt i32 %1, %2
  %9 = select i1 %8, i32 %1, i32 %2
  %10 = icmp slt i32 %2, %1
  %11 = select i1 %10, i32 %1, i32 %2
  %12 = icmp sgt i32 %9, 0
  br i1 %12, label %13, label %44

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 5
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = bitcast %union.anon* %17 to [5 x i32]*
  %21 = sext i32 %9 to i64
  %22 = add nsw i64 %21, -1
  %23 = and i64 %21, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  %26 = sub nsw i64 %21, %23
  br label %65

27:                                               ; preds = %65, %13
  %28 = phi i32 [ undef, %13 ], [ %91, %65 ]
  %29 = phi i64 [ 0, %13 ], [ %92, %65 ]
  %30 = phi i32 [ 1, %13 ], [ %91, %65 ]
  %31 = icmp eq i64 %23, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %27, %32
  %33 = phi i64 [ %41, %32 ], [ %29, %27 ]
  %34 = phi i32 [ %40, %32 ], [ %30, %27 ]
  %35 = phi i64 [ %42, %32 ], [ %23, %27 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %33
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %38 = select i1 %16, i32* %36, i32* %37
  %39 = load i32, i32* %38, align 4
  %40 = mul nsw i32 %39, %34
  %41 = add nuw nsw i64 %33, 1
  %42 = add i64 %35, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %32, !llvm.loop !72

44:                                               ; preds = %27, %32, %7
  %45 = phi i32 [ 1, %7 ], [ %28, %27 ], [ %40, %32 ]
  %46 = add i32 %9, 1
  %47 = icmp slt i32 %46, %11
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  br i1 %47, label %50, label %112

50:                                               ; preds = %44
  %51 = icmp sgt i32 %49, 5
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %union.anon, %union.anon* %52, i64 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = bitcast %union.anon* %52 to [5 x i32]*
  %56 = sext i32 %46 to i64
  %57 = sext i32 %11 to i64
  %58 = sub nsw i64 %57, %56
  %59 = xor i64 %56, -1
  %60 = add nsw i64 %59, %57
  %61 = and i64 %58, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %50
  %64 = sub nsw i64 %58, %61
  br label %131

65:                                               ; preds = %65, %25
  %66 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %68 = phi i64 [ %26, %25 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %19, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %16, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %19, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %16, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %19, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %16, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %19, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %16, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %27, label %65

95:                                               ; preds = %131, %50
  %96 = phi i32 [ undef, %50 ], [ %157, %131 ]
  %97 = phi i64 [ %56, %50 ], [ %158, %131 ]
  %98 = phi i32 [ 1, %50 ], [ %157, %131 ]
  %99 = icmp eq i64 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i64 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %54, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %101
  %106 = select i1 %51, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !73

112:                                              ; preds = %95, %100, %44
  %113 = phi i32 [ 1, %44 ], [ %96, %95 ], [ %108, %100 ]
  %114 = add i32 %11, 1
  %115 = icmp slt i32 %114, %49
  %116 = icmp sgt i32 %49, 5
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %115, label %118, label %178

118:                                              ; preds = %112
  %119 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = bitcast %union.anon* %117 to [5 x i32]*
  %122 = sext i32 %114 to i64
  %123 = sext i32 %49 to i64
  %124 = sub nsw i64 %123, %122
  %125 = xor i64 %122, -1
  %126 = add nsw i64 %125, %123
  %127 = and i64 %124, 3
  %128 = icmp ult i64 %126, 3
  br i1 %128, label %161, label %129

129:                                              ; preds = %118
  %130 = sub nsw i64 %124, %127
  br label %212

131:                                              ; preds = %131, %63
  %132 = phi i64 [ %56, %63 ], [ %158, %131 ]
  %133 = phi i32 [ 1, %63 ], [ %157, %131 ]
  %134 = phi i64 [ %64, %63 ], [ %159, %131 ]
  %135 = getelementptr inbounds i32, i32* %54, i64 %132
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %132
  %137 = select i1 %51, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %132, 1
  %141 = getelementptr inbounds i32, i32* %54, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %140
  %143 = select i1 %51, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %132, 2
  %147 = getelementptr inbounds i32, i32* %54, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %146
  %149 = select i1 %51, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %132, 3
  %153 = getelementptr inbounds i32, i32* %54, i64 %152
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %152
  %155 = select i1 %51, i32* %153, i32* %154
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = add nsw i64 %132, 4
  %159 = add i64 %134, -4
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %95, label %131

161:                                              ; preds = %212, %118
  %162 = phi i32 [ undef, %118 ], [ %238, %212 ]
  %163 = phi i64 [ %122, %118 ], [ %239, %212 ]
  %164 = phi i32 [ 1, %118 ], [ %238, %212 ]
  %165 = icmp eq i64 %127, 0
  br i1 %165, label %178, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %175, %166 ], [ %163, %161 ]
  %168 = phi i32 [ %174, %166 ], [ %164, %161 ]
  %169 = phi i64 [ %176, %166 ], [ %127, %161 ]
  %170 = getelementptr inbounds i32, i32* %120, i64 %167
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %167
  %172 = select i1 %116, i32* %170, i32* %171
  %173 = load i32, i32* %172, align 4
  %174 = mul nsw i32 %173, %168
  %175 = add nsw i64 %167, 1
  %176 = add i64 %169, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %166, !llvm.loop !74

178:                                              ; preds = %161, %166, %112
  %179 = phi i32 [ 1, %112 ], [ %162, %161 ], [ %174, %166 ]
  br i1 %116, label %180, label %187

180:                                              ; preds = %178
  %181 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = sext i32 %9 to i64
  %184 = getelementptr inbounds i32, i32* %182, i64 %183
  %185 = sext i32 %11 to i64
  %186 = getelementptr inbounds i32, i32* %182, i64 %185
  br label %193

187:                                              ; preds = %178
  %188 = bitcast %union.anon* %117 to [5 x i32]*
  %189 = sext i32 %9 to i64
  %190 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %189
  %191 = sext i32 %11 to i64
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %191
  br label %193

193:                                              ; preds = %180, %187
  %194 = phi i32* [ %184, %180 ], [ %190, %187 ]
  %195 = phi i32* [ %186, %180 ], [ %192, %187 ]
  %196 = load i32, i32* %194, align 4
  %197 = load i32, i32* %195, align 4
  %198 = icmp sgt i32 %45, 0
  br i1 %8, label %199, label %294

199:                                              ; preds = %193
  br i1 %198, label %200, label %377

200:                                              ; preds = %199
  %201 = icmp sgt i32 %196, 0
  %202 = icmp sgt i32 %113, 0
  %203 = icmp sgt i32 %197, 0
  %204 = sext i32 %179 to i64
  %205 = sext i32 %197 to i64
  %206 = sext i32 %113 to i64
  %207 = sext i32 %196 to i64
  %208 = zext i32 %45 to i64
  %209 = zext i32 %196 to i64
  %210 = zext i32 %113 to i64
  %211 = zext i32 %197 to i64
  br label %242

212:                                              ; preds = %212, %129
  %213 = phi i64 [ %122, %129 ], [ %239, %212 ]
  %214 = phi i32 [ 1, %129 ], [ %238, %212 ]
  %215 = phi i64 [ %130, %129 ], [ %240, %212 ]
  %216 = getelementptr inbounds i32, i32* %120, i64 %213
  %217 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %213
  %218 = select i1 %116, i32* %216, i32* %217
  %219 = load i32, i32* %218, align 4
  %220 = mul nsw i32 %219, %214
  %221 = add nsw i64 %213, 1
  %222 = getelementptr inbounds i32, i32* %120, i64 %221
  %223 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %221
  %224 = select i1 %116, i32* %222, i32* %223
  %225 = load i32, i32* %224, align 4
  %226 = mul nsw i32 %225, %220
  %227 = add nsw i64 %213, 2
  %228 = getelementptr inbounds i32, i32* %120, i64 %227
  %229 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %227
  %230 = select i1 %116, i32* %228, i32* %229
  %231 = load i32, i32* %230, align 4
  %232 = mul nsw i32 %231, %226
  %233 = add nsw i64 %213, 3
  %234 = getelementptr inbounds i32, i32* %120, i64 %233
  %235 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %233
  %236 = select i1 %116, i32* %234, i32* %235
  %237 = load i32, i32* %236, align 4
  %238 = mul nsw i32 %237, %232
  %239 = add nsw i64 %213, 4
  %240 = add i64 %215, -4
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %161, label %212

242:                                              ; preds = %247, %200
  %243 = phi i64 [ 0, %200 ], [ %248, %247 ]
  br i1 %201, label %244, label %247

244:                                              ; preds = %242
  %245 = mul nsw i64 %243, %207
  %246 = trunc i64 %245 to i32
  br label %250

247:                                              ; preds = %263, %242
  %248 = add nuw nsw i64 %243, 1
  %249 = icmp eq i64 %248, %208
  br i1 %249, label %377, label %242

250:                                              ; preds = %263, %244
  %251 = phi i64 [ 0, %244 ], [ %264, %263 ]
  %252 = add nsw i64 %251, %245
  %253 = mul nsw i64 %252, %206
  br i1 %202, label %254, label %263

254:                                              ; preds = %250
  %255 = trunc i64 %251 to i32
  %256 = sub i32 %246, %255
  br label %257

257:                                              ; preds = %266, %254
  %258 = phi i64 [ 0, %254 ], [ %267, %266 ]
  br i1 %203, label %259, label %266

259:                                              ; preds = %257
  %260 = add nsw i64 %258, %253
  %261 = mul nsw i64 %260, %205
  %262 = trunc i64 %258 to i32
  br label %269

263:                                              ; preds = %266, %250
  %264 = add nuw nsw i64 %251, 1
  %265 = icmp eq i64 %264, %209
  br i1 %265, label %247, label %250

266:                                              ; preds = %289, %257
  %267 = add nuw nsw i64 %258, 1
  %268 = icmp eq i64 %267, %210
  br i1 %268, label %263, label %257

269:                                              ; preds = %289, %259
  %270 = phi i64 [ 0, %259 ], [ %292, %289 ]
  %271 = add nsw i64 %270, %261
  %272 = mul nsw i64 %271, %204
  %273 = getelementptr inbounds i8, i8* %4, i64 %272
  %274 = getelementptr inbounds i64, i64* %0, i64 %270
  %275 = load i64, i64* %274, align 8
  %276 = trunc i64 %275 to i32
  %277 = add i32 %276, -1
  %278 = sext i32 %277 to i64
  %279 = icmp sgt i64 %251, %278
  br i1 %279, label %289, label %280

280:                                              ; preds = %269
  %281 = add i32 %256, %277
  %282 = mul nsw i32 %281, %113
  %283 = add nsw i32 %282, %262
  %284 = mul nsw i32 %283, %197
  %285 = trunc i64 %270 to i32
  %286 = add nsw i32 %284, %285
  %287 = mul nsw i32 %286, %179
  %288 = sext i32 %287 to i64
  br label %289

289:                                              ; preds = %269, %280
  %290 = phi i64 [ %288, %280 ], [ %272, %269 ]
  %291 = getelementptr inbounds i8, i8* %6, i64 %290
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %291, i8* align 1 %273, i64 %204, i1 false)
  %292 = add nuw nsw i64 %270, 1
  %293 = icmp eq i64 %292, %211
  br i1 %293, label %266, label %269

294:                                              ; preds = %193
  %295 = and i1 %10, %198
  br i1 %295, label %296, label %377

296:                                              ; preds = %294
  %297 = icmp sgt i32 %196, 0
  %298 = icmp sgt i32 %113, 0
  %299 = icmp sgt i32 %197, 0
  %300 = sext i32 %179 to i64
  %301 = sext i32 %197 to i64
  %302 = sext i32 %113 to i64
  %303 = sext i32 %196 to i64
  %304 = zext i32 %45 to i64
  %305 = zext i32 %196 to i64
  %306 = zext i32 %113 to i64
  %307 = zext i32 %197 to i64
  %308 = and i64 %307, 1
  %309 = icmp eq i32 %197, 1
  %310 = sub nsw i64 %307, %308
  %311 = icmp eq i64 %308, 0
  br label %312

312:                                              ; preds = %316, %296
  %313 = phi i64 [ 0, %296 ], [ %317, %316 ]
  br i1 %297, label %314, label %316

314:                                              ; preds = %312
  %315 = mul nsw i64 %313, %303
  br label %319

316:                                              ; preds = %336, %312
  %317 = add nuw nsw i64 %313, 1
  %318 = icmp eq i64 %317, %304
  br i1 %318, label %377, label %312

319:                                              ; preds = %336, %314
  %320 = phi i64 [ 0, %314 ], [ %337, %336 ]
  %321 = add nsw i64 %320, %315
  %322 = mul nsw i64 %321, %302
  br i1 %298, label %323, label %336

323:                                              ; preds = %319
  %324 = getelementptr inbounds i64, i64* %0, i64 %320
  %325 = load i64, i64* %324, align 8
  %326 = shl i64 %325, 32
  %327 = add i64 %326, -4294967296
  %328 = ashr exact i64 %327, 32
  br label %329

329:                                              ; preds = %354, %323
  %330 = phi i64 [ 0, %323 ], [ %355, %354 ]
  br i1 %299, label %331, label %354

331:                                              ; preds = %329
  %332 = add nsw i64 %330, %322
  %333 = mul nsw i64 %332, %301
  %334 = add nsw i64 %333, %328
  %335 = trunc i64 %334 to i32
  br i1 %309, label %339, label %357

336:                                              ; preds = %354, %319
  %337 = add nuw nsw i64 %320, 1
  %338 = icmp eq i64 %337, %305
  br i1 %338, label %316, label %319

339:                                              ; preds = %383, %331
  %340 = phi i64 [ 0, %331 ], [ %386, %383 ]
  br i1 %311, label %354, label %341

341:                                              ; preds = %339
  %342 = add nsw i64 %340, %333
  %343 = mul nsw i64 %342, %300
  %344 = getelementptr inbounds i8, i8* %4, i64 %343
  %345 = icmp sgt i64 %340, %328
  br i1 %345, label %351, label %346

346:                                              ; preds = %341
  %347 = trunc i64 %340 to i32
  %348 = sub i32 %335, %347
  %349 = mul nsw i32 %348, %179
  %350 = sext i32 %349 to i64
  br label %351

351:                                              ; preds = %346, %341
  %352 = phi i64 [ %350, %346 ], [ %343, %341 ]
  %353 = getelementptr inbounds i8, i8* %6, i64 %352
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %353, i8* align 1 %344, i64 %300, i1 false)
  br label %354

354:                                              ; preds = %351, %339, %329
  %355 = add nuw nsw i64 %330, 1
  %356 = icmp eq i64 %355, %306
  br i1 %356, label %336, label %329

357:                                              ; preds = %331, %383
  %358 = phi i64 [ %386, %383 ], [ 0, %331 ]
  %359 = phi i64 [ %387, %383 ], [ %310, %331 ]
  %360 = add nsw i64 %358, %333
  %361 = mul nsw i64 %360, %300
  %362 = getelementptr inbounds i8, i8* %4, i64 %361
  %363 = icmp sgt i64 %358, %328
  br i1 %363, label %369, label %364

364:                                              ; preds = %357
  %365 = trunc i64 %358 to i32
  %366 = sub i32 %335, %365
  %367 = mul nsw i32 %366, %179
  %368 = sext i32 %367 to i64
  br label %369

369:                                              ; preds = %357, %364
  %370 = phi i64 [ %368, %364 ], [ %361, %357 ]
  %371 = getelementptr inbounds i8, i8* %6, i64 %370
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %371, i8* align 1 %362, i64 %300, i1 false)
  %372 = or i64 %358, 1
  %373 = add nsw i64 %372, %333
  %374 = mul nsw i64 %373, %300
  %375 = getelementptr inbounds i8, i8* %4, i64 %374
  %376 = icmp slt i64 %358, %328
  br i1 %376, label %378, label %383

377:                                              ; preds = %316, %247, %199, %294
  ret void

378:                                              ; preds = %369
  %379 = trunc i64 %372 to i32
  %380 = sub i32 %335, %379
  %381 = mul nsw i32 %380, %179
  %382 = sext i32 %381 to i64
  br label %383

383:                                              ; preds = %369, %378
  %384 = phi i64 [ %382, %378 ], [ %374, %369 ]
  %385 = getelementptr inbounds i8, i8* %6, i64 %384
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %385, i8* align 1 %375, i64 %300, i1 false)
  %386 = add nuw nsw i64 %358, 2
  %387 = add i64 %359, -2
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %339, label %357
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops15ReverseSequenceIsiEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i32*, i32, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*) local_unnamed_addr #1 comdat {
  %8 = icmp slt i32 %1, %2
  %9 = select i1 %8, i32 %1, i32 %2
  %10 = icmp slt i32 %2, %1
  %11 = select i1 %10, i32 %1, i32 %2
  %12 = icmp sgt i32 %9, 0
  br i1 %12, label %13, label %44

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 5
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = bitcast %union.anon* %17 to [5 x i32]*
  %21 = sext i32 %9 to i64
  %22 = add nsw i64 %21, -1
  %23 = and i64 %21, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  %26 = sub nsw i64 %21, %23
  br label %65

27:                                               ; preds = %65, %13
  %28 = phi i32 [ undef, %13 ], [ %91, %65 ]
  %29 = phi i64 [ 0, %13 ], [ %92, %65 ]
  %30 = phi i32 [ 1, %13 ], [ %91, %65 ]
  %31 = icmp eq i64 %23, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %27, %32
  %33 = phi i64 [ %41, %32 ], [ %29, %27 ]
  %34 = phi i32 [ %40, %32 ], [ %30, %27 ]
  %35 = phi i64 [ %42, %32 ], [ %23, %27 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %33
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %38 = select i1 %16, i32* %36, i32* %37
  %39 = load i32, i32* %38, align 4
  %40 = mul nsw i32 %39, %34
  %41 = add nuw nsw i64 %33, 1
  %42 = add i64 %35, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %32, !llvm.loop !75

44:                                               ; preds = %27, %32, %7
  %45 = phi i32 [ 1, %7 ], [ %28, %27 ], [ %40, %32 ]
  %46 = add i32 %9, 1
  %47 = icmp slt i32 %46, %11
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  br i1 %47, label %50, label %112

50:                                               ; preds = %44
  %51 = icmp sgt i32 %49, 5
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %union.anon, %union.anon* %52, i64 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = bitcast %union.anon* %52 to [5 x i32]*
  %56 = sext i32 %46 to i64
  %57 = sext i32 %11 to i64
  %58 = sub nsw i64 %57, %56
  %59 = xor i64 %56, -1
  %60 = add nsw i64 %59, %57
  %61 = and i64 %58, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %50
  %64 = sub nsw i64 %58, %61
  br label %131

65:                                               ; preds = %65, %25
  %66 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %68 = phi i64 [ %26, %25 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %19, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %16, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %19, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %16, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %19, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %16, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %19, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %16, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %27, label %65

95:                                               ; preds = %131, %50
  %96 = phi i32 [ undef, %50 ], [ %157, %131 ]
  %97 = phi i64 [ %56, %50 ], [ %158, %131 ]
  %98 = phi i32 [ 1, %50 ], [ %157, %131 ]
  %99 = icmp eq i64 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i64 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %54, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %101
  %106 = select i1 %51, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !76

112:                                              ; preds = %95, %100, %44
  %113 = phi i32 [ 1, %44 ], [ %96, %95 ], [ %108, %100 ]
  %114 = add i32 %11, 1
  %115 = icmp slt i32 %114, %49
  %116 = icmp sgt i32 %49, 5
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %115, label %118, label %178

118:                                              ; preds = %112
  %119 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = bitcast %union.anon* %117 to [5 x i32]*
  %122 = sext i32 %114 to i64
  %123 = sext i32 %49 to i64
  %124 = sub nsw i64 %123, %122
  %125 = xor i64 %122, -1
  %126 = add nsw i64 %125, %123
  %127 = and i64 %124, 3
  %128 = icmp ult i64 %126, 3
  br i1 %128, label %161, label %129

129:                                              ; preds = %118
  %130 = sub nsw i64 %124, %127
  br label %213

131:                                              ; preds = %131, %63
  %132 = phi i64 [ %56, %63 ], [ %158, %131 ]
  %133 = phi i32 [ 1, %63 ], [ %157, %131 ]
  %134 = phi i64 [ %64, %63 ], [ %159, %131 ]
  %135 = getelementptr inbounds i32, i32* %54, i64 %132
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %132
  %137 = select i1 %51, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %132, 1
  %141 = getelementptr inbounds i32, i32* %54, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %140
  %143 = select i1 %51, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %132, 2
  %147 = getelementptr inbounds i32, i32* %54, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %146
  %149 = select i1 %51, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %132, 3
  %153 = getelementptr inbounds i32, i32* %54, i64 %152
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %152
  %155 = select i1 %51, i32* %153, i32* %154
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = add nsw i64 %132, 4
  %159 = add i64 %134, -4
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %95, label %131

161:                                              ; preds = %213, %118
  %162 = phi i32 [ undef, %118 ], [ %239, %213 ]
  %163 = phi i64 [ %122, %118 ], [ %240, %213 ]
  %164 = phi i32 [ 1, %118 ], [ %239, %213 ]
  %165 = icmp eq i64 %127, 0
  br i1 %165, label %178, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %175, %166 ], [ %163, %161 ]
  %168 = phi i32 [ %174, %166 ], [ %164, %161 ]
  %169 = phi i64 [ %176, %166 ], [ %127, %161 ]
  %170 = getelementptr inbounds i32, i32* %120, i64 %167
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %167
  %172 = select i1 %116, i32* %170, i32* %171
  %173 = load i32, i32* %172, align 4
  %174 = mul nsw i32 %173, %168
  %175 = add nsw i64 %167, 1
  %176 = add i64 %169, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %166, !llvm.loop !77

178:                                              ; preds = %161, %166, %112
  %179 = phi i32 [ 1, %112 ], [ %162, %161 ], [ %174, %166 ]
  br i1 %116, label %180, label %187

180:                                              ; preds = %178
  %181 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = sext i32 %9 to i64
  %184 = getelementptr inbounds i32, i32* %182, i64 %183
  %185 = sext i32 %11 to i64
  %186 = getelementptr inbounds i32, i32* %182, i64 %185
  br label %193

187:                                              ; preds = %178
  %188 = bitcast %union.anon* %117 to [5 x i32]*
  %189 = sext i32 %9 to i64
  %190 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %189
  %191 = sext i32 %11 to i64
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %191
  br label %193

193:                                              ; preds = %180, %187
  %194 = phi i32* [ %184, %180 ], [ %190, %187 ]
  %195 = phi i32* [ %186, %180 ], [ %192, %187 ]
  %196 = load i32, i32* %194, align 4
  %197 = load i32, i32* %195, align 4
  %198 = icmp sgt i32 %45, 0
  br i1 %8, label %199, label %296

199:                                              ; preds = %193
  br i1 %198, label %200, label %383

200:                                              ; preds = %199
  %201 = icmp sgt i32 %196, 0
  %202 = icmp sgt i32 %113, 0
  %203 = icmp sgt i32 %197, 0
  %204 = sext i32 %179 to i64
  %205 = shl nsw i64 %204, 1
  %206 = sext i32 %197 to i64
  %207 = sext i32 %113 to i64
  %208 = sext i32 %196 to i64
  %209 = zext i32 %45 to i64
  %210 = zext i32 %196 to i64
  %211 = zext i32 %113 to i64
  %212 = zext i32 %197 to i64
  br label %243

213:                                              ; preds = %213, %129
  %214 = phi i64 [ %122, %129 ], [ %240, %213 ]
  %215 = phi i32 [ 1, %129 ], [ %239, %213 ]
  %216 = phi i64 [ %130, %129 ], [ %241, %213 ]
  %217 = getelementptr inbounds i32, i32* %120, i64 %214
  %218 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %214
  %219 = select i1 %116, i32* %217, i32* %218
  %220 = load i32, i32* %219, align 4
  %221 = mul nsw i32 %220, %215
  %222 = add nsw i64 %214, 1
  %223 = getelementptr inbounds i32, i32* %120, i64 %222
  %224 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %222
  %225 = select i1 %116, i32* %223, i32* %224
  %226 = load i32, i32* %225, align 4
  %227 = mul nsw i32 %226, %221
  %228 = add nsw i64 %214, 2
  %229 = getelementptr inbounds i32, i32* %120, i64 %228
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %228
  %231 = select i1 %116, i32* %229, i32* %230
  %232 = load i32, i32* %231, align 4
  %233 = mul nsw i32 %232, %227
  %234 = add nsw i64 %214, 3
  %235 = getelementptr inbounds i32, i32* %120, i64 %234
  %236 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %234
  %237 = select i1 %116, i32* %235, i32* %236
  %238 = load i32, i32* %237, align 4
  %239 = mul nsw i32 %238, %233
  %240 = add nsw i64 %214, 4
  %241 = add i64 %216, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %161, label %213

243:                                              ; preds = %248, %200
  %244 = phi i64 [ 0, %200 ], [ %249, %248 ]
  br i1 %201, label %245, label %248

245:                                              ; preds = %243
  %246 = mul nsw i64 %244, %208
  %247 = trunc i64 %246 to i32
  br label %251

248:                                              ; preds = %265, %243
  %249 = add nuw nsw i64 %244, 1
  %250 = icmp eq i64 %249, %209
  br i1 %250, label %383, label %243

251:                                              ; preds = %265, %245
  %252 = phi i64 [ 0, %245 ], [ %266, %265 ]
  %253 = add nsw i64 %252, %246
  %254 = mul nsw i64 %253, %207
  br i1 %202, label %255, label %265

255:                                              ; preds = %251
  %256 = trunc i64 %252 to i32
  %257 = xor i32 %256, -1
  %258 = add i32 %247, %257
  br label %259

259:                                              ; preds = %268, %255
  %260 = phi i64 [ 0, %255 ], [ %269, %268 ]
  br i1 %203, label %261, label %268

261:                                              ; preds = %259
  %262 = add nsw i64 %260, %254
  %263 = mul nsw i64 %262, %206
  %264 = trunc i64 %260 to i32
  br label %271

265:                                              ; preds = %268, %251
  %266 = add nuw nsw i64 %252, 1
  %267 = icmp eq i64 %266, %210
  br i1 %267, label %248, label %251

268:                                              ; preds = %289, %259
  %269 = add nuw nsw i64 %260, 1
  %270 = icmp eq i64 %269, %211
  br i1 %270, label %265, label %259

271:                                              ; preds = %289, %261
  %272 = phi i64 [ 0, %261 ], [ %294, %289 ]
  %273 = add nsw i64 %272, %263
  %274 = mul nsw i64 %273, %204
  %275 = getelementptr inbounds i16, i16* %4, i64 %274
  %276 = getelementptr inbounds i32, i32* %0, i64 %272
  %277 = load i32, i32* %276, align 4
  %278 = sext i32 %277 to i64
  %279 = icmp slt i64 %252, %278
  br i1 %279, label %280, label %289

280:                                              ; preds = %271
  %281 = add i32 %258, %277
  %282 = mul nsw i32 %281, %113
  %283 = add nsw i32 %282, %264
  %284 = mul nsw i32 %283, %197
  %285 = trunc i64 %272 to i32
  %286 = add nsw i32 %284, %285
  %287 = mul nsw i32 %286, %179
  %288 = sext i32 %287 to i64
  br label %289

289:                                              ; preds = %271, %280
  %290 = phi i64 [ %288, %280 ], [ %274, %271 ]
  %291 = getelementptr inbounds i16, i16* %6, i64 %290
  %292 = bitcast i16* %291 to i8*
  %293 = bitcast i16* %275 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %292, i8* align 2 %293, i64 %205, i1 false)
  %294 = add nuw nsw i64 %272, 1
  %295 = icmp eq i64 %294, %212
  br i1 %295, label %268, label %271

296:                                              ; preds = %193
  %297 = and i1 %10, %198
  br i1 %297, label %298, label %383

298:                                              ; preds = %296
  %299 = icmp sgt i32 %196, 0
  %300 = icmp sgt i32 %113, 0
  %301 = icmp sgt i32 %197, 0
  %302 = sext i32 %179 to i64
  %303 = shl nsw i64 %302, 1
  %304 = sext i32 %197 to i64
  %305 = sext i32 %113 to i64
  %306 = sext i32 %196 to i64
  %307 = zext i32 %45 to i64
  %308 = zext i32 %196 to i64
  %309 = zext i32 %113 to i64
  %310 = zext i32 %197 to i64
  %311 = and i64 %310, 1
  %312 = icmp eq i32 %197, 1
  %313 = sub nsw i64 %310, %311
  %314 = icmp eq i64 %311, 0
  br label %315

315:                                              ; preds = %319, %298
  %316 = phi i64 [ 0, %298 ], [ %320, %319 ]
  br i1 %299, label %317, label %319

317:                                              ; preds = %315
  %318 = mul nsw i64 %316, %306
  br label %322

319:                                              ; preds = %338, %315
  %320 = add nuw nsw i64 %316, 1
  %321 = icmp eq i64 %320, %307
  br i1 %321, label %383, label %315

322:                                              ; preds = %338, %317
  %323 = phi i64 [ 0, %317 ], [ %339, %338 ]
  %324 = add nsw i64 %323, %318
  %325 = mul nsw i64 %324, %305
  %326 = getelementptr inbounds i32, i32* %0, i64 %323
  %327 = load i32, i32* %326, align 4
  br i1 %300, label %328, label %338

328:                                              ; preds = %322
  %329 = add nsw i32 %327, -1
  %330 = sext i32 %327 to i64
  br label %331

331:                                              ; preds = %358, %328
  %332 = phi i64 [ 0, %328 ], [ %359, %358 ]
  br i1 %301, label %333, label %358

333:                                              ; preds = %331
  %334 = add nsw i64 %332, %325
  %335 = mul nsw i64 %334, %304
  %336 = trunc i64 %335 to i32
  %337 = add i32 %329, %336
  br i1 %312, label %341, label %361

338:                                              ; preds = %358, %322
  %339 = add nuw nsw i64 %323, 1
  %340 = icmp eq i64 %339, %308
  br i1 %340, label %319, label %322

341:                                              ; preds = %389, %333
  %342 = phi i64 [ 0, %333 ], [ %394, %389 ]
  br i1 %314, label %358, label %343

343:                                              ; preds = %341
  %344 = add nsw i64 %342, %335
  %345 = mul nsw i64 %344, %302
  %346 = getelementptr inbounds i16, i16* %4, i64 %345
  %347 = icmp slt i64 %342, %330
  br i1 %347, label %348, label %353

348:                                              ; preds = %343
  %349 = trunc i64 %342 to i32
  %350 = sub i32 %337, %349
  %351 = mul nsw i32 %350, %179
  %352 = sext i32 %351 to i64
  br label %353

353:                                              ; preds = %348, %343
  %354 = phi i64 [ %352, %348 ], [ %345, %343 ]
  %355 = getelementptr inbounds i16, i16* %6, i64 %354
  %356 = bitcast i16* %355 to i8*
  %357 = bitcast i16* %346 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %356, i8* align 2 %357, i64 %303, i1 false)
  br label %358

358:                                              ; preds = %353, %341, %331
  %359 = add nuw nsw i64 %332, 1
  %360 = icmp eq i64 %359, %309
  br i1 %360, label %338, label %331

361:                                              ; preds = %333, %389
  %362 = phi i64 [ %394, %389 ], [ 0, %333 ]
  %363 = phi i64 [ %395, %389 ], [ %313, %333 ]
  %364 = add nsw i64 %362, %335
  %365 = mul nsw i64 %364, %302
  %366 = getelementptr inbounds i16, i16* %4, i64 %365
  %367 = icmp slt i64 %362, %330
  br i1 %367, label %368, label %373

368:                                              ; preds = %361
  %369 = trunc i64 %362 to i32
  %370 = sub i32 %337, %369
  %371 = mul nsw i32 %370, %179
  %372 = sext i32 %371 to i64
  br label %373

373:                                              ; preds = %361, %368
  %374 = phi i64 [ %372, %368 ], [ %365, %361 ]
  %375 = getelementptr inbounds i16, i16* %6, i64 %374
  %376 = bitcast i16* %375 to i8*
  %377 = bitcast i16* %366 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %376, i8* align 2 %377, i64 %303, i1 false)
  %378 = or i64 %362, 1
  %379 = add nsw i64 %378, %335
  %380 = mul nsw i64 %379, %302
  %381 = getelementptr inbounds i16, i16* %4, i64 %380
  %382 = icmp slt i64 %378, %330
  br i1 %382, label %384, label %389

383:                                              ; preds = %319, %248, %199, %296
  ret void

384:                                              ; preds = %373
  %385 = trunc i64 %378 to i32
  %386 = sub i32 %337, %385
  %387 = mul nsw i32 %386, %179
  %388 = sext i32 %387 to i64
  br label %389

389:                                              ; preds = %384, %373
  %390 = phi i64 [ %388, %384 ], [ %380, %373 ]
  %391 = getelementptr inbounds i16, i16* %6, i64 %390
  %392 = bitcast i16* %391 to i8*
  %393 = bitcast i16* %381 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %392, i8* align 2 %393, i64 %303, i1 false)
  %394 = add nuw nsw i64 %362, 2
  %395 = add i64 %363, -2
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %341, label %361
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops15ReverseSequenceIslEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i64*, i32, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*) local_unnamed_addr #1 comdat {
  %8 = icmp slt i32 %1, %2
  %9 = select i1 %8, i32 %1, i32 %2
  %10 = icmp slt i32 %2, %1
  %11 = select i1 %10, i32 %1, i32 %2
  %12 = icmp sgt i32 %9, 0
  br i1 %12, label %13, label %44

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 5
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = bitcast %union.anon* %17 to [5 x i32]*
  %21 = sext i32 %9 to i64
  %22 = add nsw i64 %21, -1
  %23 = and i64 %21, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  %26 = sub nsw i64 %21, %23
  br label %65

27:                                               ; preds = %65, %13
  %28 = phi i32 [ undef, %13 ], [ %91, %65 ]
  %29 = phi i64 [ 0, %13 ], [ %92, %65 ]
  %30 = phi i32 [ 1, %13 ], [ %91, %65 ]
  %31 = icmp eq i64 %23, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %27, %32
  %33 = phi i64 [ %41, %32 ], [ %29, %27 ]
  %34 = phi i32 [ %40, %32 ], [ %30, %27 ]
  %35 = phi i64 [ %42, %32 ], [ %23, %27 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %33
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %38 = select i1 %16, i32* %36, i32* %37
  %39 = load i32, i32* %38, align 4
  %40 = mul nsw i32 %39, %34
  %41 = add nuw nsw i64 %33, 1
  %42 = add i64 %35, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %32, !llvm.loop !78

44:                                               ; preds = %27, %32, %7
  %45 = phi i32 [ 1, %7 ], [ %28, %27 ], [ %40, %32 ]
  %46 = add i32 %9, 1
  %47 = icmp slt i32 %46, %11
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  br i1 %47, label %50, label %112

50:                                               ; preds = %44
  %51 = icmp sgt i32 %49, 5
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %union.anon, %union.anon* %52, i64 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = bitcast %union.anon* %52 to [5 x i32]*
  %56 = sext i32 %46 to i64
  %57 = sext i32 %11 to i64
  %58 = sub nsw i64 %57, %56
  %59 = xor i64 %56, -1
  %60 = add nsw i64 %59, %57
  %61 = and i64 %58, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %50
  %64 = sub nsw i64 %58, %61
  br label %131

65:                                               ; preds = %65, %25
  %66 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %68 = phi i64 [ %26, %25 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %19, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %16, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %19, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %16, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %19, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %16, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %19, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %16, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %27, label %65

95:                                               ; preds = %131, %50
  %96 = phi i32 [ undef, %50 ], [ %157, %131 ]
  %97 = phi i64 [ %56, %50 ], [ %158, %131 ]
  %98 = phi i32 [ 1, %50 ], [ %157, %131 ]
  %99 = icmp eq i64 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i64 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %54, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %101
  %106 = select i1 %51, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !79

112:                                              ; preds = %95, %100, %44
  %113 = phi i32 [ 1, %44 ], [ %96, %95 ], [ %108, %100 ]
  %114 = add i32 %11, 1
  %115 = icmp slt i32 %114, %49
  %116 = icmp sgt i32 %49, 5
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %115, label %118, label %178

118:                                              ; preds = %112
  %119 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = bitcast %union.anon* %117 to [5 x i32]*
  %122 = sext i32 %114 to i64
  %123 = sext i32 %49 to i64
  %124 = sub nsw i64 %123, %122
  %125 = xor i64 %122, -1
  %126 = add nsw i64 %125, %123
  %127 = and i64 %124, 3
  %128 = icmp ult i64 %126, 3
  br i1 %128, label %161, label %129

129:                                              ; preds = %118
  %130 = sub nsw i64 %124, %127
  br label %213

131:                                              ; preds = %131, %63
  %132 = phi i64 [ %56, %63 ], [ %158, %131 ]
  %133 = phi i32 [ 1, %63 ], [ %157, %131 ]
  %134 = phi i64 [ %64, %63 ], [ %159, %131 ]
  %135 = getelementptr inbounds i32, i32* %54, i64 %132
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %132
  %137 = select i1 %51, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %132, 1
  %141 = getelementptr inbounds i32, i32* %54, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %140
  %143 = select i1 %51, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %132, 2
  %147 = getelementptr inbounds i32, i32* %54, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %146
  %149 = select i1 %51, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %132, 3
  %153 = getelementptr inbounds i32, i32* %54, i64 %152
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %152
  %155 = select i1 %51, i32* %153, i32* %154
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = add nsw i64 %132, 4
  %159 = add i64 %134, -4
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %95, label %131

161:                                              ; preds = %213, %118
  %162 = phi i32 [ undef, %118 ], [ %239, %213 ]
  %163 = phi i64 [ %122, %118 ], [ %240, %213 ]
  %164 = phi i32 [ 1, %118 ], [ %239, %213 ]
  %165 = icmp eq i64 %127, 0
  br i1 %165, label %178, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %175, %166 ], [ %163, %161 ]
  %168 = phi i32 [ %174, %166 ], [ %164, %161 ]
  %169 = phi i64 [ %176, %166 ], [ %127, %161 ]
  %170 = getelementptr inbounds i32, i32* %120, i64 %167
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %167
  %172 = select i1 %116, i32* %170, i32* %171
  %173 = load i32, i32* %172, align 4
  %174 = mul nsw i32 %173, %168
  %175 = add nsw i64 %167, 1
  %176 = add i64 %169, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %166, !llvm.loop !80

178:                                              ; preds = %161, %166, %112
  %179 = phi i32 [ 1, %112 ], [ %162, %161 ], [ %174, %166 ]
  br i1 %116, label %180, label %187

180:                                              ; preds = %178
  %181 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = sext i32 %9 to i64
  %184 = getelementptr inbounds i32, i32* %182, i64 %183
  %185 = sext i32 %11 to i64
  %186 = getelementptr inbounds i32, i32* %182, i64 %185
  br label %193

187:                                              ; preds = %178
  %188 = bitcast %union.anon* %117 to [5 x i32]*
  %189 = sext i32 %9 to i64
  %190 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %189
  %191 = sext i32 %11 to i64
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %191
  br label %193

193:                                              ; preds = %180, %187
  %194 = phi i32* [ %184, %180 ], [ %190, %187 ]
  %195 = phi i32* [ %186, %180 ], [ %192, %187 ]
  %196 = load i32, i32* %194, align 4
  %197 = load i32, i32* %195, align 4
  %198 = icmp sgt i32 %45, 0
  br i1 %8, label %199, label %297

199:                                              ; preds = %193
  br i1 %198, label %200, label %385

200:                                              ; preds = %199
  %201 = icmp sgt i32 %196, 0
  %202 = icmp sgt i32 %113, 0
  %203 = icmp sgt i32 %197, 0
  %204 = sext i32 %179 to i64
  %205 = shl nsw i64 %204, 1
  %206 = sext i32 %197 to i64
  %207 = sext i32 %113 to i64
  %208 = sext i32 %196 to i64
  %209 = zext i32 %45 to i64
  %210 = zext i32 %196 to i64
  %211 = zext i32 %113 to i64
  %212 = zext i32 %197 to i64
  br label %243

213:                                              ; preds = %213, %129
  %214 = phi i64 [ %122, %129 ], [ %240, %213 ]
  %215 = phi i32 [ 1, %129 ], [ %239, %213 ]
  %216 = phi i64 [ %130, %129 ], [ %241, %213 ]
  %217 = getelementptr inbounds i32, i32* %120, i64 %214
  %218 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %214
  %219 = select i1 %116, i32* %217, i32* %218
  %220 = load i32, i32* %219, align 4
  %221 = mul nsw i32 %220, %215
  %222 = add nsw i64 %214, 1
  %223 = getelementptr inbounds i32, i32* %120, i64 %222
  %224 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %222
  %225 = select i1 %116, i32* %223, i32* %224
  %226 = load i32, i32* %225, align 4
  %227 = mul nsw i32 %226, %221
  %228 = add nsw i64 %214, 2
  %229 = getelementptr inbounds i32, i32* %120, i64 %228
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %228
  %231 = select i1 %116, i32* %229, i32* %230
  %232 = load i32, i32* %231, align 4
  %233 = mul nsw i32 %232, %227
  %234 = add nsw i64 %214, 3
  %235 = getelementptr inbounds i32, i32* %120, i64 %234
  %236 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %234
  %237 = select i1 %116, i32* %235, i32* %236
  %238 = load i32, i32* %237, align 4
  %239 = mul nsw i32 %238, %233
  %240 = add nsw i64 %214, 4
  %241 = add i64 %216, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %161, label %213

243:                                              ; preds = %248, %200
  %244 = phi i64 [ 0, %200 ], [ %249, %248 ]
  br i1 %201, label %245, label %248

245:                                              ; preds = %243
  %246 = mul nsw i64 %244, %208
  %247 = trunc i64 %246 to i32
  br label %251

248:                                              ; preds = %264, %243
  %249 = add nuw nsw i64 %244, 1
  %250 = icmp eq i64 %249, %209
  br i1 %250, label %385, label %243

251:                                              ; preds = %264, %245
  %252 = phi i64 [ 0, %245 ], [ %265, %264 ]
  %253 = add nsw i64 %252, %246
  %254 = mul nsw i64 %253, %207
  br i1 %202, label %255, label %264

255:                                              ; preds = %251
  %256 = trunc i64 %252 to i32
  %257 = sub i32 %247, %256
  br label %258

258:                                              ; preds = %267, %255
  %259 = phi i64 [ 0, %255 ], [ %268, %267 ]
  br i1 %203, label %260, label %267

260:                                              ; preds = %258
  %261 = add nsw i64 %259, %254
  %262 = mul nsw i64 %261, %206
  %263 = trunc i64 %259 to i32
  br label %270

264:                                              ; preds = %267, %251
  %265 = add nuw nsw i64 %252, 1
  %266 = icmp eq i64 %265, %210
  br i1 %266, label %248, label %251

267:                                              ; preds = %290, %258
  %268 = add nuw nsw i64 %259, 1
  %269 = icmp eq i64 %268, %211
  br i1 %269, label %264, label %258

270:                                              ; preds = %290, %260
  %271 = phi i64 [ 0, %260 ], [ %295, %290 ]
  %272 = add nsw i64 %271, %262
  %273 = mul nsw i64 %272, %204
  %274 = getelementptr inbounds i16, i16* %4, i64 %273
  %275 = getelementptr inbounds i64, i64* %0, i64 %271
  %276 = load i64, i64* %275, align 8
  %277 = trunc i64 %276 to i32
  %278 = add i32 %277, -1
  %279 = sext i32 %278 to i64
  %280 = icmp sgt i64 %252, %279
  br i1 %280, label %290, label %281

281:                                              ; preds = %270
  %282 = add i32 %257, %278
  %283 = mul nsw i32 %282, %113
  %284 = add nsw i32 %283, %263
  %285 = mul nsw i32 %284, %197
  %286 = trunc i64 %271 to i32
  %287 = add nsw i32 %285, %286
  %288 = mul nsw i32 %287, %179
  %289 = sext i32 %288 to i64
  br label %290

290:                                              ; preds = %270, %281
  %291 = phi i64 [ %289, %281 ], [ %273, %270 ]
  %292 = getelementptr inbounds i16, i16* %6, i64 %291
  %293 = bitcast i16* %292 to i8*
  %294 = bitcast i16* %274 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %293, i8* align 2 %294, i64 %205, i1 false)
  %295 = add nuw nsw i64 %271, 1
  %296 = icmp eq i64 %295, %212
  br i1 %296, label %267, label %270

297:                                              ; preds = %193
  %298 = and i1 %10, %198
  br i1 %298, label %299, label %385

299:                                              ; preds = %297
  %300 = icmp sgt i32 %196, 0
  %301 = icmp sgt i32 %113, 0
  %302 = icmp sgt i32 %197, 0
  %303 = sext i32 %179 to i64
  %304 = shl nsw i64 %303, 1
  %305 = sext i32 %197 to i64
  %306 = sext i32 %113 to i64
  %307 = sext i32 %196 to i64
  %308 = zext i32 %45 to i64
  %309 = zext i32 %196 to i64
  %310 = zext i32 %113 to i64
  %311 = zext i32 %197 to i64
  %312 = and i64 %311, 1
  %313 = icmp eq i32 %197, 1
  %314 = sub nsw i64 %311, %312
  %315 = icmp eq i64 %312, 0
  br label %316

316:                                              ; preds = %320, %299
  %317 = phi i64 [ 0, %299 ], [ %321, %320 ]
  br i1 %300, label %318, label %320

318:                                              ; preds = %316
  %319 = mul nsw i64 %317, %307
  br label %323

320:                                              ; preds = %340, %316
  %321 = add nuw nsw i64 %317, 1
  %322 = icmp eq i64 %321, %308
  br i1 %322, label %385, label %316

323:                                              ; preds = %340, %318
  %324 = phi i64 [ 0, %318 ], [ %341, %340 ]
  %325 = add nsw i64 %324, %319
  %326 = mul nsw i64 %325, %306
  br i1 %301, label %327, label %340

327:                                              ; preds = %323
  %328 = getelementptr inbounds i64, i64* %0, i64 %324
  %329 = load i64, i64* %328, align 8
  %330 = shl i64 %329, 32
  %331 = add i64 %330, -4294967296
  %332 = ashr exact i64 %331, 32
  br label %333

333:                                              ; preds = %360, %327
  %334 = phi i64 [ 0, %327 ], [ %361, %360 ]
  br i1 %302, label %335, label %360

335:                                              ; preds = %333
  %336 = add nsw i64 %334, %326
  %337 = mul nsw i64 %336, %305
  %338 = add nsw i64 %337, %332
  %339 = trunc i64 %338 to i32
  br i1 %313, label %343, label %363

340:                                              ; preds = %360, %323
  %341 = add nuw nsw i64 %324, 1
  %342 = icmp eq i64 %341, %309
  br i1 %342, label %320, label %323

343:                                              ; preds = %391, %335
  %344 = phi i64 [ 0, %335 ], [ %396, %391 ]
  br i1 %315, label %360, label %345

345:                                              ; preds = %343
  %346 = add nsw i64 %344, %337
  %347 = mul nsw i64 %346, %303
  %348 = getelementptr inbounds i16, i16* %4, i64 %347
  %349 = icmp sgt i64 %344, %332
  br i1 %349, label %355, label %350

350:                                              ; preds = %345
  %351 = trunc i64 %344 to i32
  %352 = sub i32 %339, %351
  %353 = mul nsw i32 %352, %179
  %354 = sext i32 %353 to i64
  br label %355

355:                                              ; preds = %350, %345
  %356 = phi i64 [ %354, %350 ], [ %347, %345 ]
  %357 = getelementptr inbounds i16, i16* %6, i64 %356
  %358 = bitcast i16* %357 to i8*
  %359 = bitcast i16* %348 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %358, i8* align 2 %359, i64 %304, i1 false)
  br label %360

360:                                              ; preds = %355, %343, %333
  %361 = add nuw nsw i64 %334, 1
  %362 = icmp eq i64 %361, %310
  br i1 %362, label %340, label %333

363:                                              ; preds = %335, %391
  %364 = phi i64 [ %396, %391 ], [ 0, %335 ]
  %365 = phi i64 [ %397, %391 ], [ %314, %335 ]
  %366 = add nsw i64 %364, %337
  %367 = mul nsw i64 %366, %303
  %368 = getelementptr inbounds i16, i16* %4, i64 %367
  %369 = icmp sgt i64 %364, %332
  br i1 %369, label %375, label %370

370:                                              ; preds = %363
  %371 = trunc i64 %364 to i32
  %372 = sub i32 %339, %371
  %373 = mul nsw i32 %372, %179
  %374 = sext i32 %373 to i64
  br label %375

375:                                              ; preds = %363, %370
  %376 = phi i64 [ %374, %370 ], [ %367, %363 ]
  %377 = getelementptr inbounds i16, i16* %6, i64 %376
  %378 = bitcast i16* %377 to i8*
  %379 = bitcast i16* %368 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %378, i8* align 2 %379, i64 %304, i1 false)
  %380 = or i64 %364, 1
  %381 = add nsw i64 %380, %337
  %382 = mul nsw i64 %381, %303
  %383 = getelementptr inbounds i16, i16* %4, i64 %382
  %384 = icmp slt i64 %364, %332
  br i1 %384, label %386, label %391

385:                                              ; preds = %320, %248, %199, %297
  ret void

386:                                              ; preds = %375
  %387 = trunc i64 %380 to i32
  %388 = sub i32 %339, %387
  %389 = mul nsw i32 %388, %179
  %390 = sext i32 %389 to i64
  br label %391

391:                                              ; preds = %375, %386
  %392 = phi i64 [ %390, %386 ], [ %382, %375 ]
  %393 = getelementptr inbounds i16, i16* %6, i64 %392
  %394 = bitcast i16* %393 to i8*
  %395 = bitcast i16* %383 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %394, i8* align 2 %395, i64 %304, i1 false)
  %396 = add nuw nsw i64 %364, 2
  %397 = add i64 %365, -2
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %343, label %363
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops15ReverseSequenceIiiEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i32*, i32, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #1 comdat {
  %8 = icmp slt i32 %1, %2
  %9 = select i1 %8, i32 %1, i32 %2
  %10 = icmp slt i32 %2, %1
  %11 = select i1 %10, i32 %1, i32 %2
  %12 = icmp sgt i32 %9, 0
  br i1 %12, label %13, label %44

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 5
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = bitcast %union.anon* %17 to [5 x i32]*
  %21 = sext i32 %9 to i64
  %22 = add nsw i64 %21, -1
  %23 = and i64 %21, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  %26 = sub nsw i64 %21, %23
  br label %65

27:                                               ; preds = %65, %13
  %28 = phi i32 [ undef, %13 ], [ %91, %65 ]
  %29 = phi i64 [ 0, %13 ], [ %92, %65 ]
  %30 = phi i32 [ 1, %13 ], [ %91, %65 ]
  %31 = icmp eq i64 %23, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %27, %32
  %33 = phi i64 [ %41, %32 ], [ %29, %27 ]
  %34 = phi i32 [ %40, %32 ], [ %30, %27 ]
  %35 = phi i64 [ %42, %32 ], [ %23, %27 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %33
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %38 = select i1 %16, i32* %36, i32* %37
  %39 = load i32, i32* %38, align 4
  %40 = mul nsw i32 %39, %34
  %41 = add nuw nsw i64 %33, 1
  %42 = add i64 %35, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %32, !llvm.loop !81

44:                                               ; preds = %27, %32, %7
  %45 = phi i32 [ 1, %7 ], [ %28, %27 ], [ %40, %32 ]
  %46 = add i32 %9, 1
  %47 = icmp slt i32 %46, %11
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  br i1 %47, label %50, label %112

50:                                               ; preds = %44
  %51 = icmp sgt i32 %49, 5
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %union.anon, %union.anon* %52, i64 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = bitcast %union.anon* %52 to [5 x i32]*
  %56 = sext i32 %46 to i64
  %57 = sext i32 %11 to i64
  %58 = sub nsw i64 %57, %56
  %59 = xor i64 %56, -1
  %60 = add nsw i64 %59, %57
  %61 = and i64 %58, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %50
  %64 = sub nsw i64 %58, %61
  br label %131

65:                                               ; preds = %65, %25
  %66 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %68 = phi i64 [ %26, %25 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %19, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %16, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %19, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %16, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %19, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %16, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %19, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %16, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %27, label %65

95:                                               ; preds = %131, %50
  %96 = phi i32 [ undef, %50 ], [ %157, %131 ]
  %97 = phi i64 [ %56, %50 ], [ %158, %131 ]
  %98 = phi i32 [ 1, %50 ], [ %157, %131 ]
  %99 = icmp eq i64 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i64 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %54, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %101
  %106 = select i1 %51, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !82

112:                                              ; preds = %95, %100, %44
  %113 = phi i32 [ 1, %44 ], [ %96, %95 ], [ %108, %100 ]
  %114 = add i32 %11, 1
  %115 = icmp slt i32 %114, %49
  %116 = icmp sgt i32 %49, 5
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %115, label %118, label %178

118:                                              ; preds = %112
  %119 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = bitcast %union.anon* %117 to [5 x i32]*
  %122 = sext i32 %114 to i64
  %123 = sext i32 %49 to i64
  %124 = sub nsw i64 %123, %122
  %125 = xor i64 %122, -1
  %126 = add nsw i64 %125, %123
  %127 = and i64 %124, 3
  %128 = icmp ult i64 %126, 3
  br i1 %128, label %161, label %129

129:                                              ; preds = %118
  %130 = sub nsw i64 %124, %127
  br label %213

131:                                              ; preds = %131, %63
  %132 = phi i64 [ %56, %63 ], [ %158, %131 ]
  %133 = phi i32 [ 1, %63 ], [ %157, %131 ]
  %134 = phi i64 [ %64, %63 ], [ %159, %131 ]
  %135 = getelementptr inbounds i32, i32* %54, i64 %132
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %132
  %137 = select i1 %51, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %132, 1
  %141 = getelementptr inbounds i32, i32* %54, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %140
  %143 = select i1 %51, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %132, 2
  %147 = getelementptr inbounds i32, i32* %54, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %146
  %149 = select i1 %51, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %132, 3
  %153 = getelementptr inbounds i32, i32* %54, i64 %152
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %152
  %155 = select i1 %51, i32* %153, i32* %154
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = add nsw i64 %132, 4
  %159 = add i64 %134, -4
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %95, label %131

161:                                              ; preds = %213, %118
  %162 = phi i32 [ undef, %118 ], [ %239, %213 ]
  %163 = phi i64 [ %122, %118 ], [ %240, %213 ]
  %164 = phi i32 [ 1, %118 ], [ %239, %213 ]
  %165 = icmp eq i64 %127, 0
  br i1 %165, label %178, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %175, %166 ], [ %163, %161 ]
  %168 = phi i32 [ %174, %166 ], [ %164, %161 ]
  %169 = phi i64 [ %176, %166 ], [ %127, %161 ]
  %170 = getelementptr inbounds i32, i32* %120, i64 %167
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %167
  %172 = select i1 %116, i32* %170, i32* %171
  %173 = load i32, i32* %172, align 4
  %174 = mul nsw i32 %173, %168
  %175 = add nsw i64 %167, 1
  %176 = add i64 %169, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %166, !llvm.loop !83

178:                                              ; preds = %161, %166, %112
  %179 = phi i32 [ 1, %112 ], [ %162, %161 ], [ %174, %166 ]
  br i1 %116, label %180, label %187

180:                                              ; preds = %178
  %181 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = sext i32 %9 to i64
  %184 = getelementptr inbounds i32, i32* %182, i64 %183
  %185 = sext i32 %11 to i64
  %186 = getelementptr inbounds i32, i32* %182, i64 %185
  br label %193

187:                                              ; preds = %178
  %188 = bitcast %union.anon* %117 to [5 x i32]*
  %189 = sext i32 %9 to i64
  %190 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %189
  %191 = sext i32 %11 to i64
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %191
  br label %193

193:                                              ; preds = %180, %187
  %194 = phi i32* [ %184, %180 ], [ %190, %187 ]
  %195 = phi i32* [ %186, %180 ], [ %192, %187 ]
  %196 = load i32, i32* %194, align 4
  %197 = load i32, i32* %195, align 4
  %198 = icmp sgt i32 %45, 0
  br i1 %8, label %199, label %296

199:                                              ; preds = %193
  br i1 %198, label %200, label %383

200:                                              ; preds = %199
  %201 = icmp sgt i32 %196, 0
  %202 = icmp sgt i32 %113, 0
  %203 = icmp sgt i32 %197, 0
  %204 = sext i32 %179 to i64
  %205 = shl nsw i64 %204, 2
  %206 = sext i32 %197 to i64
  %207 = sext i32 %113 to i64
  %208 = sext i32 %196 to i64
  %209 = zext i32 %45 to i64
  %210 = zext i32 %196 to i64
  %211 = zext i32 %113 to i64
  %212 = zext i32 %197 to i64
  br label %243

213:                                              ; preds = %213, %129
  %214 = phi i64 [ %122, %129 ], [ %240, %213 ]
  %215 = phi i32 [ 1, %129 ], [ %239, %213 ]
  %216 = phi i64 [ %130, %129 ], [ %241, %213 ]
  %217 = getelementptr inbounds i32, i32* %120, i64 %214
  %218 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %214
  %219 = select i1 %116, i32* %217, i32* %218
  %220 = load i32, i32* %219, align 4
  %221 = mul nsw i32 %220, %215
  %222 = add nsw i64 %214, 1
  %223 = getelementptr inbounds i32, i32* %120, i64 %222
  %224 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %222
  %225 = select i1 %116, i32* %223, i32* %224
  %226 = load i32, i32* %225, align 4
  %227 = mul nsw i32 %226, %221
  %228 = add nsw i64 %214, 2
  %229 = getelementptr inbounds i32, i32* %120, i64 %228
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %228
  %231 = select i1 %116, i32* %229, i32* %230
  %232 = load i32, i32* %231, align 4
  %233 = mul nsw i32 %232, %227
  %234 = add nsw i64 %214, 3
  %235 = getelementptr inbounds i32, i32* %120, i64 %234
  %236 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %234
  %237 = select i1 %116, i32* %235, i32* %236
  %238 = load i32, i32* %237, align 4
  %239 = mul nsw i32 %238, %233
  %240 = add nsw i64 %214, 4
  %241 = add i64 %216, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %161, label %213

243:                                              ; preds = %248, %200
  %244 = phi i64 [ 0, %200 ], [ %249, %248 ]
  br i1 %201, label %245, label %248

245:                                              ; preds = %243
  %246 = mul nsw i64 %244, %208
  %247 = trunc i64 %246 to i32
  br label %251

248:                                              ; preds = %265, %243
  %249 = add nuw nsw i64 %244, 1
  %250 = icmp eq i64 %249, %209
  br i1 %250, label %383, label %243

251:                                              ; preds = %265, %245
  %252 = phi i64 [ 0, %245 ], [ %266, %265 ]
  %253 = add nsw i64 %252, %246
  %254 = mul nsw i64 %253, %207
  br i1 %202, label %255, label %265

255:                                              ; preds = %251
  %256 = trunc i64 %252 to i32
  %257 = xor i32 %256, -1
  %258 = add i32 %247, %257
  br label %259

259:                                              ; preds = %268, %255
  %260 = phi i64 [ 0, %255 ], [ %269, %268 ]
  br i1 %203, label %261, label %268

261:                                              ; preds = %259
  %262 = add nsw i64 %260, %254
  %263 = mul nsw i64 %262, %206
  %264 = trunc i64 %260 to i32
  br label %271

265:                                              ; preds = %268, %251
  %266 = add nuw nsw i64 %252, 1
  %267 = icmp eq i64 %266, %210
  br i1 %267, label %248, label %251

268:                                              ; preds = %289, %259
  %269 = add nuw nsw i64 %260, 1
  %270 = icmp eq i64 %269, %211
  br i1 %270, label %265, label %259

271:                                              ; preds = %289, %261
  %272 = phi i64 [ 0, %261 ], [ %294, %289 ]
  %273 = add nsw i64 %272, %263
  %274 = mul nsw i64 %273, %204
  %275 = getelementptr inbounds i32, i32* %4, i64 %274
  %276 = getelementptr inbounds i32, i32* %0, i64 %272
  %277 = load i32, i32* %276, align 4
  %278 = sext i32 %277 to i64
  %279 = icmp slt i64 %252, %278
  br i1 %279, label %280, label %289

280:                                              ; preds = %271
  %281 = add i32 %258, %277
  %282 = mul nsw i32 %281, %113
  %283 = add nsw i32 %282, %264
  %284 = mul nsw i32 %283, %197
  %285 = trunc i64 %272 to i32
  %286 = add nsw i32 %284, %285
  %287 = mul nsw i32 %286, %179
  %288 = sext i32 %287 to i64
  br label %289

289:                                              ; preds = %271, %280
  %290 = phi i64 [ %288, %280 ], [ %274, %271 ]
  %291 = getelementptr inbounds i32, i32* %6, i64 %290
  %292 = bitcast i32* %291 to i8*
  %293 = bitcast i32* %275 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %292, i8* align 4 %293, i64 %205, i1 false)
  %294 = add nuw nsw i64 %272, 1
  %295 = icmp eq i64 %294, %212
  br i1 %295, label %268, label %271

296:                                              ; preds = %193
  %297 = and i1 %10, %198
  br i1 %297, label %298, label %383

298:                                              ; preds = %296
  %299 = icmp sgt i32 %196, 0
  %300 = icmp sgt i32 %113, 0
  %301 = icmp sgt i32 %197, 0
  %302 = sext i32 %179 to i64
  %303 = shl nsw i64 %302, 2
  %304 = sext i32 %197 to i64
  %305 = sext i32 %113 to i64
  %306 = sext i32 %196 to i64
  %307 = zext i32 %45 to i64
  %308 = zext i32 %196 to i64
  %309 = zext i32 %113 to i64
  %310 = zext i32 %197 to i64
  %311 = and i64 %310, 1
  %312 = icmp eq i32 %197, 1
  %313 = sub nsw i64 %310, %311
  %314 = icmp eq i64 %311, 0
  br label %315

315:                                              ; preds = %319, %298
  %316 = phi i64 [ 0, %298 ], [ %320, %319 ]
  br i1 %299, label %317, label %319

317:                                              ; preds = %315
  %318 = mul nsw i64 %316, %306
  br label %322

319:                                              ; preds = %338, %315
  %320 = add nuw nsw i64 %316, 1
  %321 = icmp eq i64 %320, %307
  br i1 %321, label %383, label %315

322:                                              ; preds = %338, %317
  %323 = phi i64 [ 0, %317 ], [ %339, %338 ]
  %324 = add nsw i64 %323, %318
  %325 = mul nsw i64 %324, %305
  %326 = getelementptr inbounds i32, i32* %0, i64 %323
  %327 = load i32, i32* %326, align 4
  br i1 %300, label %328, label %338

328:                                              ; preds = %322
  %329 = add nsw i32 %327, -1
  %330 = sext i32 %327 to i64
  br label %331

331:                                              ; preds = %358, %328
  %332 = phi i64 [ 0, %328 ], [ %359, %358 ]
  br i1 %301, label %333, label %358

333:                                              ; preds = %331
  %334 = add nsw i64 %332, %325
  %335 = mul nsw i64 %334, %304
  %336 = trunc i64 %335 to i32
  %337 = add i32 %329, %336
  br i1 %312, label %341, label %361

338:                                              ; preds = %358, %322
  %339 = add nuw nsw i64 %323, 1
  %340 = icmp eq i64 %339, %308
  br i1 %340, label %319, label %322

341:                                              ; preds = %389, %333
  %342 = phi i64 [ 0, %333 ], [ %394, %389 ]
  br i1 %314, label %358, label %343

343:                                              ; preds = %341
  %344 = add nsw i64 %342, %335
  %345 = mul nsw i64 %344, %302
  %346 = getelementptr inbounds i32, i32* %4, i64 %345
  %347 = icmp slt i64 %342, %330
  br i1 %347, label %348, label %353

348:                                              ; preds = %343
  %349 = trunc i64 %342 to i32
  %350 = sub i32 %337, %349
  %351 = mul nsw i32 %350, %179
  %352 = sext i32 %351 to i64
  br label %353

353:                                              ; preds = %348, %343
  %354 = phi i64 [ %352, %348 ], [ %345, %343 ]
  %355 = getelementptr inbounds i32, i32* %6, i64 %354
  %356 = bitcast i32* %355 to i8*
  %357 = bitcast i32* %346 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %356, i8* align 4 %357, i64 %303, i1 false)
  br label %358

358:                                              ; preds = %353, %341, %331
  %359 = add nuw nsw i64 %332, 1
  %360 = icmp eq i64 %359, %309
  br i1 %360, label %338, label %331

361:                                              ; preds = %333, %389
  %362 = phi i64 [ %394, %389 ], [ 0, %333 ]
  %363 = phi i64 [ %395, %389 ], [ %313, %333 ]
  %364 = add nsw i64 %362, %335
  %365 = mul nsw i64 %364, %302
  %366 = getelementptr inbounds i32, i32* %4, i64 %365
  %367 = icmp slt i64 %362, %330
  br i1 %367, label %368, label %373

368:                                              ; preds = %361
  %369 = trunc i64 %362 to i32
  %370 = sub i32 %337, %369
  %371 = mul nsw i32 %370, %179
  %372 = sext i32 %371 to i64
  br label %373

373:                                              ; preds = %361, %368
  %374 = phi i64 [ %372, %368 ], [ %365, %361 ]
  %375 = getelementptr inbounds i32, i32* %6, i64 %374
  %376 = bitcast i32* %375 to i8*
  %377 = bitcast i32* %366 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %376, i8* align 4 %377, i64 %303, i1 false)
  %378 = or i64 %362, 1
  %379 = add nsw i64 %378, %335
  %380 = mul nsw i64 %379, %302
  %381 = getelementptr inbounds i32, i32* %4, i64 %380
  %382 = icmp slt i64 %378, %330
  br i1 %382, label %384, label %389

383:                                              ; preds = %319, %248, %199, %296
  ret void

384:                                              ; preds = %373
  %385 = trunc i64 %378 to i32
  %386 = sub i32 %337, %385
  %387 = mul nsw i32 %386, %179
  %388 = sext i32 %387 to i64
  br label %389

389:                                              ; preds = %384, %373
  %390 = phi i64 [ %388, %384 ], [ %380, %373 ]
  %391 = getelementptr inbounds i32, i32* %6, i64 %390
  %392 = bitcast i32* %391 to i8*
  %393 = bitcast i32* %381 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %392, i8* align 4 %393, i64 %303, i1 false)
  %394 = add nuw nsw i64 %362, 2
  %395 = add i64 %363, -2
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %341, label %361
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops15ReverseSequenceIilEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i64*, i32, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #1 comdat {
  %8 = icmp slt i32 %1, %2
  %9 = select i1 %8, i32 %1, i32 %2
  %10 = icmp slt i32 %2, %1
  %11 = select i1 %10, i32 %1, i32 %2
  %12 = icmp sgt i32 %9, 0
  br i1 %12, label %13, label %44

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 5
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = bitcast %union.anon* %17 to [5 x i32]*
  %21 = sext i32 %9 to i64
  %22 = add nsw i64 %21, -1
  %23 = and i64 %21, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  %26 = sub nsw i64 %21, %23
  br label %65

27:                                               ; preds = %65, %13
  %28 = phi i32 [ undef, %13 ], [ %91, %65 ]
  %29 = phi i64 [ 0, %13 ], [ %92, %65 ]
  %30 = phi i32 [ 1, %13 ], [ %91, %65 ]
  %31 = icmp eq i64 %23, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %27, %32
  %33 = phi i64 [ %41, %32 ], [ %29, %27 ]
  %34 = phi i32 [ %40, %32 ], [ %30, %27 ]
  %35 = phi i64 [ %42, %32 ], [ %23, %27 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %33
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %38 = select i1 %16, i32* %36, i32* %37
  %39 = load i32, i32* %38, align 4
  %40 = mul nsw i32 %39, %34
  %41 = add nuw nsw i64 %33, 1
  %42 = add i64 %35, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %32, !llvm.loop !84

44:                                               ; preds = %27, %32, %7
  %45 = phi i32 [ 1, %7 ], [ %28, %27 ], [ %40, %32 ]
  %46 = add i32 %9, 1
  %47 = icmp slt i32 %46, %11
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  br i1 %47, label %50, label %112

50:                                               ; preds = %44
  %51 = icmp sgt i32 %49, 5
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %union.anon, %union.anon* %52, i64 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = bitcast %union.anon* %52 to [5 x i32]*
  %56 = sext i32 %46 to i64
  %57 = sext i32 %11 to i64
  %58 = sub nsw i64 %57, %56
  %59 = xor i64 %56, -1
  %60 = add nsw i64 %59, %57
  %61 = and i64 %58, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %50
  %64 = sub nsw i64 %58, %61
  br label %131

65:                                               ; preds = %65, %25
  %66 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %68 = phi i64 [ %26, %25 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %19, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %16, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %19, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %16, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %19, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %16, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %19, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %16, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %27, label %65

95:                                               ; preds = %131, %50
  %96 = phi i32 [ undef, %50 ], [ %157, %131 ]
  %97 = phi i64 [ %56, %50 ], [ %158, %131 ]
  %98 = phi i32 [ 1, %50 ], [ %157, %131 ]
  %99 = icmp eq i64 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i64 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %54, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %101
  %106 = select i1 %51, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !85

112:                                              ; preds = %95, %100, %44
  %113 = phi i32 [ 1, %44 ], [ %96, %95 ], [ %108, %100 ]
  %114 = add i32 %11, 1
  %115 = icmp slt i32 %114, %49
  %116 = icmp sgt i32 %49, 5
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %115, label %118, label %178

118:                                              ; preds = %112
  %119 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = bitcast %union.anon* %117 to [5 x i32]*
  %122 = sext i32 %114 to i64
  %123 = sext i32 %49 to i64
  %124 = sub nsw i64 %123, %122
  %125 = xor i64 %122, -1
  %126 = add nsw i64 %125, %123
  %127 = and i64 %124, 3
  %128 = icmp ult i64 %126, 3
  br i1 %128, label %161, label %129

129:                                              ; preds = %118
  %130 = sub nsw i64 %124, %127
  br label %213

131:                                              ; preds = %131, %63
  %132 = phi i64 [ %56, %63 ], [ %158, %131 ]
  %133 = phi i32 [ 1, %63 ], [ %157, %131 ]
  %134 = phi i64 [ %64, %63 ], [ %159, %131 ]
  %135 = getelementptr inbounds i32, i32* %54, i64 %132
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %132
  %137 = select i1 %51, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %132, 1
  %141 = getelementptr inbounds i32, i32* %54, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %140
  %143 = select i1 %51, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %132, 2
  %147 = getelementptr inbounds i32, i32* %54, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %146
  %149 = select i1 %51, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %132, 3
  %153 = getelementptr inbounds i32, i32* %54, i64 %152
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %152
  %155 = select i1 %51, i32* %153, i32* %154
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = add nsw i64 %132, 4
  %159 = add i64 %134, -4
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %95, label %131

161:                                              ; preds = %213, %118
  %162 = phi i32 [ undef, %118 ], [ %239, %213 ]
  %163 = phi i64 [ %122, %118 ], [ %240, %213 ]
  %164 = phi i32 [ 1, %118 ], [ %239, %213 ]
  %165 = icmp eq i64 %127, 0
  br i1 %165, label %178, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %175, %166 ], [ %163, %161 ]
  %168 = phi i32 [ %174, %166 ], [ %164, %161 ]
  %169 = phi i64 [ %176, %166 ], [ %127, %161 ]
  %170 = getelementptr inbounds i32, i32* %120, i64 %167
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %167
  %172 = select i1 %116, i32* %170, i32* %171
  %173 = load i32, i32* %172, align 4
  %174 = mul nsw i32 %173, %168
  %175 = add nsw i64 %167, 1
  %176 = add i64 %169, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %166, !llvm.loop !86

178:                                              ; preds = %161, %166, %112
  %179 = phi i32 [ 1, %112 ], [ %162, %161 ], [ %174, %166 ]
  br i1 %116, label %180, label %187

180:                                              ; preds = %178
  %181 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = sext i32 %9 to i64
  %184 = getelementptr inbounds i32, i32* %182, i64 %183
  %185 = sext i32 %11 to i64
  %186 = getelementptr inbounds i32, i32* %182, i64 %185
  br label %193

187:                                              ; preds = %178
  %188 = bitcast %union.anon* %117 to [5 x i32]*
  %189 = sext i32 %9 to i64
  %190 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %189
  %191 = sext i32 %11 to i64
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %191
  br label %193

193:                                              ; preds = %180, %187
  %194 = phi i32* [ %184, %180 ], [ %190, %187 ]
  %195 = phi i32* [ %186, %180 ], [ %192, %187 ]
  %196 = load i32, i32* %194, align 4
  %197 = load i32, i32* %195, align 4
  %198 = icmp sgt i32 %45, 0
  br i1 %8, label %199, label %297

199:                                              ; preds = %193
  br i1 %198, label %200, label %385

200:                                              ; preds = %199
  %201 = icmp sgt i32 %196, 0
  %202 = icmp sgt i32 %113, 0
  %203 = icmp sgt i32 %197, 0
  %204 = sext i32 %179 to i64
  %205 = shl nsw i64 %204, 2
  %206 = sext i32 %197 to i64
  %207 = sext i32 %113 to i64
  %208 = sext i32 %196 to i64
  %209 = zext i32 %45 to i64
  %210 = zext i32 %196 to i64
  %211 = zext i32 %113 to i64
  %212 = zext i32 %197 to i64
  br label %243

213:                                              ; preds = %213, %129
  %214 = phi i64 [ %122, %129 ], [ %240, %213 ]
  %215 = phi i32 [ 1, %129 ], [ %239, %213 ]
  %216 = phi i64 [ %130, %129 ], [ %241, %213 ]
  %217 = getelementptr inbounds i32, i32* %120, i64 %214
  %218 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %214
  %219 = select i1 %116, i32* %217, i32* %218
  %220 = load i32, i32* %219, align 4
  %221 = mul nsw i32 %220, %215
  %222 = add nsw i64 %214, 1
  %223 = getelementptr inbounds i32, i32* %120, i64 %222
  %224 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %222
  %225 = select i1 %116, i32* %223, i32* %224
  %226 = load i32, i32* %225, align 4
  %227 = mul nsw i32 %226, %221
  %228 = add nsw i64 %214, 2
  %229 = getelementptr inbounds i32, i32* %120, i64 %228
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %228
  %231 = select i1 %116, i32* %229, i32* %230
  %232 = load i32, i32* %231, align 4
  %233 = mul nsw i32 %232, %227
  %234 = add nsw i64 %214, 3
  %235 = getelementptr inbounds i32, i32* %120, i64 %234
  %236 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %234
  %237 = select i1 %116, i32* %235, i32* %236
  %238 = load i32, i32* %237, align 4
  %239 = mul nsw i32 %238, %233
  %240 = add nsw i64 %214, 4
  %241 = add i64 %216, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %161, label %213

243:                                              ; preds = %248, %200
  %244 = phi i64 [ 0, %200 ], [ %249, %248 ]
  br i1 %201, label %245, label %248

245:                                              ; preds = %243
  %246 = mul nsw i64 %244, %208
  %247 = trunc i64 %246 to i32
  br label %251

248:                                              ; preds = %264, %243
  %249 = add nuw nsw i64 %244, 1
  %250 = icmp eq i64 %249, %209
  br i1 %250, label %385, label %243

251:                                              ; preds = %264, %245
  %252 = phi i64 [ 0, %245 ], [ %265, %264 ]
  %253 = add nsw i64 %252, %246
  %254 = mul nsw i64 %253, %207
  br i1 %202, label %255, label %264

255:                                              ; preds = %251
  %256 = trunc i64 %252 to i32
  %257 = sub i32 %247, %256
  br label %258

258:                                              ; preds = %267, %255
  %259 = phi i64 [ 0, %255 ], [ %268, %267 ]
  br i1 %203, label %260, label %267

260:                                              ; preds = %258
  %261 = add nsw i64 %259, %254
  %262 = mul nsw i64 %261, %206
  %263 = trunc i64 %259 to i32
  br label %270

264:                                              ; preds = %267, %251
  %265 = add nuw nsw i64 %252, 1
  %266 = icmp eq i64 %265, %210
  br i1 %266, label %248, label %251

267:                                              ; preds = %290, %258
  %268 = add nuw nsw i64 %259, 1
  %269 = icmp eq i64 %268, %211
  br i1 %269, label %264, label %258

270:                                              ; preds = %290, %260
  %271 = phi i64 [ 0, %260 ], [ %295, %290 ]
  %272 = add nsw i64 %271, %262
  %273 = mul nsw i64 %272, %204
  %274 = getelementptr inbounds i32, i32* %4, i64 %273
  %275 = getelementptr inbounds i64, i64* %0, i64 %271
  %276 = load i64, i64* %275, align 8
  %277 = trunc i64 %276 to i32
  %278 = add i32 %277, -1
  %279 = sext i32 %278 to i64
  %280 = icmp sgt i64 %252, %279
  br i1 %280, label %290, label %281

281:                                              ; preds = %270
  %282 = add i32 %257, %278
  %283 = mul nsw i32 %282, %113
  %284 = add nsw i32 %283, %263
  %285 = mul nsw i32 %284, %197
  %286 = trunc i64 %271 to i32
  %287 = add nsw i32 %285, %286
  %288 = mul nsw i32 %287, %179
  %289 = sext i32 %288 to i64
  br label %290

290:                                              ; preds = %270, %281
  %291 = phi i64 [ %289, %281 ], [ %273, %270 ]
  %292 = getelementptr inbounds i32, i32* %6, i64 %291
  %293 = bitcast i32* %292 to i8*
  %294 = bitcast i32* %274 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %293, i8* align 4 %294, i64 %205, i1 false)
  %295 = add nuw nsw i64 %271, 1
  %296 = icmp eq i64 %295, %212
  br i1 %296, label %267, label %270

297:                                              ; preds = %193
  %298 = and i1 %10, %198
  br i1 %298, label %299, label %385

299:                                              ; preds = %297
  %300 = icmp sgt i32 %196, 0
  %301 = icmp sgt i32 %113, 0
  %302 = icmp sgt i32 %197, 0
  %303 = sext i32 %179 to i64
  %304 = shl nsw i64 %303, 2
  %305 = sext i32 %197 to i64
  %306 = sext i32 %113 to i64
  %307 = sext i32 %196 to i64
  %308 = zext i32 %45 to i64
  %309 = zext i32 %196 to i64
  %310 = zext i32 %113 to i64
  %311 = zext i32 %197 to i64
  %312 = and i64 %311, 1
  %313 = icmp eq i32 %197, 1
  %314 = sub nsw i64 %311, %312
  %315 = icmp eq i64 %312, 0
  br label %316

316:                                              ; preds = %320, %299
  %317 = phi i64 [ 0, %299 ], [ %321, %320 ]
  br i1 %300, label %318, label %320

318:                                              ; preds = %316
  %319 = mul nsw i64 %317, %307
  br label %323

320:                                              ; preds = %340, %316
  %321 = add nuw nsw i64 %317, 1
  %322 = icmp eq i64 %321, %308
  br i1 %322, label %385, label %316

323:                                              ; preds = %340, %318
  %324 = phi i64 [ 0, %318 ], [ %341, %340 ]
  %325 = add nsw i64 %324, %319
  %326 = mul nsw i64 %325, %306
  br i1 %301, label %327, label %340

327:                                              ; preds = %323
  %328 = getelementptr inbounds i64, i64* %0, i64 %324
  %329 = load i64, i64* %328, align 8
  %330 = shl i64 %329, 32
  %331 = add i64 %330, -4294967296
  %332 = ashr exact i64 %331, 32
  br label %333

333:                                              ; preds = %360, %327
  %334 = phi i64 [ 0, %327 ], [ %361, %360 ]
  br i1 %302, label %335, label %360

335:                                              ; preds = %333
  %336 = add nsw i64 %334, %326
  %337 = mul nsw i64 %336, %305
  %338 = add nsw i64 %337, %332
  %339 = trunc i64 %338 to i32
  br i1 %313, label %343, label %363

340:                                              ; preds = %360, %323
  %341 = add nuw nsw i64 %324, 1
  %342 = icmp eq i64 %341, %309
  br i1 %342, label %320, label %323

343:                                              ; preds = %391, %335
  %344 = phi i64 [ 0, %335 ], [ %396, %391 ]
  br i1 %315, label %360, label %345

345:                                              ; preds = %343
  %346 = add nsw i64 %344, %337
  %347 = mul nsw i64 %346, %303
  %348 = getelementptr inbounds i32, i32* %4, i64 %347
  %349 = icmp sgt i64 %344, %332
  br i1 %349, label %355, label %350

350:                                              ; preds = %345
  %351 = trunc i64 %344 to i32
  %352 = sub i32 %339, %351
  %353 = mul nsw i32 %352, %179
  %354 = sext i32 %353 to i64
  br label %355

355:                                              ; preds = %350, %345
  %356 = phi i64 [ %354, %350 ], [ %347, %345 ]
  %357 = getelementptr inbounds i32, i32* %6, i64 %356
  %358 = bitcast i32* %357 to i8*
  %359 = bitcast i32* %348 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %358, i8* align 4 %359, i64 %304, i1 false)
  br label %360

360:                                              ; preds = %355, %343, %333
  %361 = add nuw nsw i64 %334, 1
  %362 = icmp eq i64 %361, %310
  br i1 %362, label %340, label %333

363:                                              ; preds = %335, %391
  %364 = phi i64 [ %396, %391 ], [ 0, %335 ]
  %365 = phi i64 [ %397, %391 ], [ %314, %335 ]
  %366 = add nsw i64 %364, %337
  %367 = mul nsw i64 %366, %303
  %368 = getelementptr inbounds i32, i32* %4, i64 %367
  %369 = icmp sgt i64 %364, %332
  br i1 %369, label %375, label %370

370:                                              ; preds = %363
  %371 = trunc i64 %364 to i32
  %372 = sub i32 %339, %371
  %373 = mul nsw i32 %372, %179
  %374 = sext i32 %373 to i64
  br label %375

375:                                              ; preds = %363, %370
  %376 = phi i64 [ %374, %370 ], [ %367, %363 ]
  %377 = getelementptr inbounds i32, i32* %6, i64 %376
  %378 = bitcast i32* %377 to i8*
  %379 = bitcast i32* %368 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %378, i8* align 4 %379, i64 %304, i1 false)
  %380 = or i64 %364, 1
  %381 = add nsw i64 %380, %337
  %382 = mul nsw i64 %381, %303
  %383 = getelementptr inbounds i32, i32* %4, i64 %382
  %384 = icmp slt i64 %364, %332
  br i1 %384, label %386, label %391

385:                                              ; preds = %320, %248, %199, %297
  ret void

386:                                              ; preds = %375
  %387 = trunc i64 %380 to i32
  %388 = sub i32 %339, %387
  %389 = mul nsw i32 %388, %179
  %390 = sext i32 %389 to i64
  br label %391

391:                                              ; preds = %375, %386
  %392 = phi i64 [ %390, %386 ], [ %382, %375 ]
  %393 = getelementptr inbounds i32, i32* %6, i64 %392
  %394 = bitcast i32* %393 to i8*
  %395 = bitcast i32* %383 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %394, i8* align 4 %395, i64 %304, i1 false)
  %396 = add nuw nsw i64 %364, 2
  %397 = add i64 %365, -2
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %343, label %363
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops15ReverseSequenceIliEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i32*, i32, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*) local_unnamed_addr #1 comdat {
  %8 = icmp slt i32 %1, %2
  %9 = select i1 %8, i32 %1, i32 %2
  %10 = icmp slt i32 %2, %1
  %11 = select i1 %10, i32 %1, i32 %2
  %12 = icmp sgt i32 %9, 0
  br i1 %12, label %13, label %44

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 5
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = bitcast %union.anon* %17 to [5 x i32]*
  %21 = sext i32 %9 to i64
  %22 = add nsw i64 %21, -1
  %23 = and i64 %21, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  %26 = sub nsw i64 %21, %23
  br label %65

27:                                               ; preds = %65, %13
  %28 = phi i32 [ undef, %13 ], [ %91, %65 ]
  %29 = phi i64 [ 0, %13 ], [ %92, %65 ]
  %30 = phi i32 [ 1, %13 ], [ %91, %65 ]
  %31 = icmp eq i64 %23, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %27, %32
  %33 = phi i64 [ %41, %32 ], [ %29, %27 ]
  %34 = phi i32 [ %40, %32 ], [ %30, %27 ]
  %35 = phi i64 [ %42, %32 ], [ %23, %27 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %33
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %38 = select i1 %16, i32* %36, i32* %37
  %39 = load i32, i32* %38, align 4
  %40 = mul nsw i32 %39, %34
  %41 = add nuw nsw i64 %33, 1
  %42 = add i64 %35, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %32, !llvm.loop !87

44:                                               ; preds = %27, %32, %7
  %45 = phi i32 [ 1, %7 ], [ %28, %27 ], [ %40, %32 ]
  %46 = add i32 %9, 1
  %47 = icmp slt i32 %46, %11
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  br i1 %47, label %50, label %112

50:                                               ; preds = %44
  %51 = icmp sgt i32 %49, 5
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %union.anon, %union.anon* %52, i64 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = bitcast %union.anon* %52 to [5 x i32]*
  %56 = sext i32 %46 to i64
  %57 = sext i32 %11 to i64
  %58 = sub nsw i64 %57, %56
  %59 = xor i64 %56, -1
  %60 = add nsw i64 %59, %57
  %61 = and i64 %58, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %50
  %64 = sub nsw i64 %58, %61
  br label %131

65:                                               ; preds = %65, %25
  %66 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %68 = phi i64 [ %26, %25 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %19, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %16, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %19, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %16, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %19, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %16, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %19, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %16, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %27, label %65

95:                                               ; preds = %131, %50
  %96 = phi i32 [ undef, %50 ], [ %157, %131 ]
  %97 = phi i64 [ %56, %50 ], [ %158, %131 ]
  %98 = phi i32 [ 1, %50 ], [ %157, %131 ]
  %99 = icmp eq i64 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i64 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %54, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %101
  %106 = select i1 %51, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !88

112:                                              ; preds = %95, %100, %44
  %113 = phi i32 [ 1, %44 ], [ %96, %95 ], [ %108, %100 ]
  %114 = add i32 %11, 1
  %115 = icmp slt i32 %114, %49
  %116 = icmp sgt i32 %49, 5
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %115, label %118, label %178

118:                                              ; preds = %112
  %119 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = bitcast %union.anon* %117 to [5 x i32]*
  %122 = sext i32 %114 to i64
  %123 = sext i32 %49 to i64
  %124 = sub nsw i64 %123, %122
  %125 = xor i64 %122, -1
  %126 = add nsw i64 %125, %123
  %127 = and i64 %124, 3
  %128 = icmp ult i64 %126, 3
  br i1 %128, label %161, label %129

129:                                              ; preds = %118
  %130 = sub nsw i64 %124, %127
  br label %213

131:                                              ; preds = %131, %63
  %132 = phi i64 [ %56, %63 ], [ %158, %131 ]
  %133 = phi i32 [ 1, %63 ], [ %157, %131 ]
  %134 = phi i64 [ %64, %63 ], [ %159, %131 ]
  %135 = getelementptr inbounds i32, i32* %54, i64 %132
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %132
  %137 = select i1 %51, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %132, 1
  %141 = getelementptr inbounds i32, i32* %54, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %140
  %143 = select i1 %51, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %132, 2
  %147 = getelementptr inbounds i32, i32* %54, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %146
  %149 = select i1 %51, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %132, 3
  %153 = getelementptr inbounds i32, i32* %54, i64 %152
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %152
  %155 = select i1 %51, i32* %153, i32* %154
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = add nsw i64 %132, 4
  %159 = add i64 %134, -4
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %95, label %131

161:                                              ; preds = %213, %118
  %162 = phi i32 [ undef, %118 ], [ %239, %213 ]
  %163 = phi i64 [ %122, %118 ], [ %240, %213 ]
  %164 = phi i32 [ 1, %118 ], [ %239, %213 ]
  %165 = icmp eq i64 %127, 0
  br i1 %165, label %178, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %175, %166 ], [ %163, %161 ]
  %168 = phi i32 [ %174, %166 ], [ %164, %161 ]
  %169 = phi i64 [ %176, %166 ], [ %127, %161 ]
  %170 = getelementptr inbounds i32, i32* %120, i64 %167
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %167
  %172 = select i1 %116, i32* %170, i32* %171
  %173 = load i32, i32* %172, align 4
  %174 = mul nsw i32 %173, %168
  %175 = add nsw i64 %167, 1
  %176 = add i64 %169, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %166, !llvm.loop !89

178:                                              ; preds = %161, %166, %112
  %179 = phi i32 [ 1, %112 ], [ %162, %161 ], [ %174, %166 ]
  br i1 %116, label %180, label %187

180:                                              ; preds = %178
  %181 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = sext i32 %9 to i64
  %184 = getelementptr inbounds i32, i32* %182, i64 %183
  %185 = sext i32 %11 to i64
  %186 = getelementptr inbounds i32, i32* %182, i64 %185
  br label %193

187:                                              ; preds = %178
  %188 = bitcast %union.anon* %117 to [5 x i32]*
  %189 = sext i32 %9 to i64
  %190 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %189
  %191 = sext i32 %11 to i64
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %191
  br label %193

193:                                              ; preds = %180, %187
  %194 = phi i32* [ %184, %180 ], [ %190, %187 ]
  %195 = phi i32* [ %186, %180 ], [ %192, %187 ]
  %196 = load i32, i32* %194, align 4
  %197 = load i32, i32* %195, align 4
  %198 = icmp sgt i32 %45, 0
  br i1 %8, label %199, label %296

199:                                              ; preds = %193
  br i1 %198, label %200, label %383

200:                                              ; preds = %199
  %201 = icmp sgt i32 %196, 0
  %202 = icmp sgt i32 %113, 0
  %203 = icmp sgt i32 %197, 0
  %204 = sext i32 %179 to i64
  %205 = shl nsw i64 %204, 3
  %206 = sext i32 %197 to i64
  %207 = sext i32 %113 to i64
  %208 = sext i32 %196 to i64
  %209 = zext i32 %45 to i64
  %210 = zext i32 %196 to i64
  %211 = zext i32 %113 to i64
  %212 = zext i32 %197 to i64
  br label %243

213:                                              ; preds = %213, %129
  %214 = phi i64 [ %122, %129 ], [ %240, %213 ]
  %215 = phi i32 [ 1, %129 ], [ %239, %213 ]
  %216 = phi i64 [ %130, %129 ], [ %241, %213 ]
  %217 = getelementptr inbounds i32, i32* %120, i64 %214
  %218 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %214
  %219 = select i1 %116, i32* %217, i32* %218
  %220 = load i32, i32* %219, align 4
  %221 = mul nsw i32 %220, %215
  %222 = add nsw i64 %214, 1
  %223 = getelementptr inbounds i32, i32* %120, i64 %222
  %224 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %222
  %225 = select i1 %116, i32* %223, i32* %224
  %226 = load i32, i32* %225, align 4
  %227 = mul nsw i32 %226, %221
  %228 = add nsw i64 %214, 2
  %229 = getelementptr inbounds i32, i32* %120, i64 %228
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %228
  %231 = select i1 %116, i32* %229, i32* %230
  %232 = load i32, i32* %231, align 4
  %233 = mul nsw i32 %232, %227
  %234 = add nsw i64 %214, 3
  %235 = getelementptr inbounds i32, i32* %120, i64 %234
  %236 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %234
  %237 = select i1 %116, i32* %235, i32* %236
  %238 = load i32, i32* %237, align 4
  %239 = mul nsw i32 %238, %233
  %240 = add nsw i64 %214, 4
  %241 = add i64 %216, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %161, label %213

243:                                              ; preds = %248, %200
  %244 = phi i64 [ 0, %200 ], [ %249, %248 ]
  br i1 %201, label %245, label %248

245:                                              ; preds = %243
  %246 = mul nsw i64 %244, %208
  %247 = trunc i64 %246 to i32
  br label %251

248:                                              ; preds = %265, %243
  %249 = add nuw nsw i64 %244, 1
  %250 = icmp eq i64 %249, %209
  br i1 %250, label %383, label %243

251:                                              ; preds = %265, %245
  %252 = phi i64 [ 0, %245 ], [ %266, %265 ]
  %253 = add nsw i64 %252, %246
  %254 = mul nsw i64 %253, %207
  br i1 %202, label %255, label %265

255:                                              ; preds = %251
  %256 = trunc i64 %252 to i32
  %257 = xor i32 %256, -1
  %258 = add i32 %247, %257
  br label %259

259:                                              ; preds = %268, %255
  %260 = phi i64 [ 0, %255 ], [ %269, %268 ]
  br i1 %203, label %261, label %268

261:                                              ; preds = %259
  %262 = add nsw i64 %260, %254
  %263 = mul nsw i64 %262, %206
  %264 = trunc i64 %260 to i32
  br label %271

265:                                              ; preds = %268, %251
  %266 = add nuw nsw i64 %252, 1
  %267 = icmp eq i64 %266, %210
  br i1 %267, label %248, label %251

268:                                              ; preds = %289, %259
  %269 = add nuw nsw i64 %260, 1
  %270 = icmp eq i64 %269, %211
  br i1 %270, label %265, label %259

271:                                              ; preds = %289, %261
  %272 = phi i64 [ 0, %261 ], [ %294, %289 ]
  %273 = add nsw i64 %272, %263
  %274 = mul nsw i64 %273, %204
  %275 = getelementptr inbounds i64, i64* %4, i64 %274
  %276 = getelementptr inbounds i32, i32* %0, i64 %272
  %277 = load i32, i32* %276, align 4
  %278 = sext i32 %277 to i64
  %279 = icmp slt i64 %252, %278
  br i1 %279, label %280, label %289

280:                                              ; preds = %271
  %281 = add i32 %258, %277
  %282 = mul nsw i32 %281, %113
  %283 = add nsw i32 %282, %264
  %284 = mul nsw i32 %283, %197
  %285 = trunc i64 %272 to i32
  %286 = add nsw i32 %284, %285
  %287 = mul nsw i32 %286, %179
  %288 = sext i32 %287 to i64
  br label %289

289:                                              ; preds = %271, %280
  %290 = phi i64 [ %288, %280 ], [ %274, %271 ]
  %291 = getelementptr inbounds i64, i64* %6, i64 %290
  %292 = bitcast i64* %291 to i8*
  %293 = bitcast i64* %275 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %292, i8* align 8 %293, i64 %205, i1 false)
  %294 = add nuw nsw i64 %272, 1
  %295 = icmp eq i64 %294, %212
  br i1 %295, label %268, label %271

296:                                              ; preds = %193
  %297 = and i1 %10, %198
  br i1 %297, label %298, label %383

298:                                              ; preds = %296
  %299 = icmp sgt i32 %196, 0
  %300 = icmp sgt i32 %113, 0
  %301 = icmp sgt i32 %197, 0
  %302 = sext i32 %179 to i64
  %303 = shl nsw i64 %302, 3
  %304 = sext i32 %197 to i64
  %305 = sext i32 %113 to i64
  %306 = sext i32 %196 to i64
  %307 = zext i32 %45 to i64
  %308 = zext i32 %196 to i64
  %309 = zext i32 %113 to i64
  %310 = zext i32 %197 to i64
  %311 = and i64 %310, 1
  %312 = icmp eq i32 %197, 1
  %313 = sub nsw i64 %310, %311
  %314 = icmp eq i64 %311, 0
  br label %315

315:                                              ; preds = %319, %298
  %316 = phi i64 [ 0, %298 ], [ %320, %319 ]
  br i1 %299, label %317, label %319

317:                                              ; preds = %315
  %318 = mul nsw i64 %316, %306
  br label %322

319:                                              ; preds = %338, %315
  %320 = add nuw nsw i64 %316, 1
  %321 = icmp eq i64 %320, %307
  br i1 %321, label %383, label %315

322:                                              ; preds = %338, %317
  %323 = phi i64 [ 0, %317 ], [ %339, %338 ]
  %324 = add nsw i64 %323, %318
  %325 = mul nsw i64 %324, %305
  %326 = getelementptr inbounds i32, i32* %0, i64 %323
  %327 = load i32, i32* %326, align 4
  br i1 %300, label %328, label %338

328:                                              ; preds = %322
  %329 = add nsw i32 %327, -1
  %330 = sext i32 %327 to i64
  br label %331

331:                                              ; preds = %358, %328
  %332 = phi i64 [ 0, %328 ], [ %359, %358 ]
  br i1 %301, label %333, label %358

333:                                              ; preds = %331
  %334 = add nsw i64 %332, %325
  %335 = mul nsw i64 %334, %304
  %336 = trunc i64 %335 to i32
  %337 = add i32 %329, %336
  br i1 %312, label %341, label %361

338:                                              ; preds = %358, %322
  %339 = add nuw nsw i64 %323, 1
  %340 = icmp eq i64 %339, %308
  br i1 %340, label %319, label %322

341:                                              ; preds = %389, %333
  %342 = phi i64 [ 0, %333 ], [ %394, %389 ]
  br i1 %314, label %358, label %343

343:                                              ; preds = %341
  %344 = add nsw i64 %342, %335
  %345 = mul nsw i64 %344, %302
  %346 = getelementptr inbounds i64, i64* %4, i64 %345
  %347 = icmp slt i64 %342, %330
  br i1 %347, label %348, label %353

348:                                              ; preds = %343
  %349 = trunc i64 %342 to i32
  %350 = sub i32 %337, %349
  %351 = mul nsw i32 %350, %179
  %352 = sext i32 %351 to i64
  br label %353

353:                                              ; preds = %348, %343
  %354 = phi i64 [ %352, %348 ], [ %345, %343 ]
  %355 = getelementptr inbounds i64, i64* %6, i64 %354
  %356 = bitcast i64* %355 to i8*
  %357 = bitcast i64* %346 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %356, i8* align 8 %357, i64 %303, i1 false)
  br label %358

358:                                              ; preds = %353, %341, %331
  %359 = add nuw nsw i64 %332, 1
  %360 = icmp eq i64 %359, %309
  br i1 %360, label %338, label %331

361:                                              ; preds = %333, %389
  %362 = phi i64 [ %394, %389 ], [ 0, %333 ]
  %363 = phi i64 [ %395, %389 ], [ %313, %333 ]
  %364 = add nsw i64 %362, %335
  %365 = mul nsw i64 %364, %302
  %366 = getelementptr inbounds i64, i64* %4, i64 %365
  %367 = icmp slt i64 %362, %330
  br i1 %367, label %368, label %373

368:                                              ; preds = %361
  %369 = trunc i64 %362 to i32
  %370 = sub i32 %337, %369
  %371 = mul nsw i32 %370, %179
  %372 = sext i32 %371 to i64
  br label %373

373:                                              ; preds = %361, %368
  %374 = phi i64 [ %372, %368 ], [ %365, %361 ]
  %375 = getelementptr inbounds i64, i64* %6, i64 %374
  %376 = bitcast i64* %375 to i8*
  %377 = bitcast i64* %366 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %376, i8* align 8 %377, i64 %303, i1 false)
  %378 = or i64 %362, 1
  %379 = add nsw i64 %378, %335
  %380 = mul nsw i64 %379, %302
  %381 = getelementptr inbounds i64, i64* %4, i64 %380
  %382 = icmp slt i64 %378, %330
  br i1 %382, label %384, label %389

383:                                              ; preds = %319, %248, %199, %296
  ret void

384:                                              ; preds = %373
  %385 = trunc i64 %378 to i32
  %386 = sub i32 %337, %385
  %387 = mul nsw i32 %386, %179
  %388 = sext i32 %387 to i64
  br label %389

389:                                              ; preds = %384, %373
  %390 = phi i64 [ %388, %384 ], [ %380, %373 ]
  %391 = getelementptr inbounds i64, i64* %6, i64 %390
  %392 = bitcast i64* %391 to i8*
  %393 = bitcast i64* %381 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %392, i8* align 8 %393, i64 %303, i1 false)
  %394 = add nuw nsw i64 %362, 2
  %395 = add i64 %363, -2
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %341, label %361
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops15ReverseSequenceIllEEvPKT0_iiRKNS_12RuntimeShapeEPKT_S7_PS8_(i64*, i32, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*) local_unnamed_addr #1 comdat {
  %8 = icmp slt i32 %1, %2
  %9 = select i1 %8, i32 %1, i32 %2
  %10 = icmp slt i32 %2, %1
  %11 = select i1 %10, i32 %1, i32 %2
  %12 = icmp sgt i32 %9, 0
  br i1 %12, label %13, label %44

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 5
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = bitcast %union.anon* %17 to [5 x i32]*
  %21 = sext i32 %9 to i64
  %22 = add nsw i64 %21, -1
  %23 = and i64 %21, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  %26 = sub nsw i64 %21, %23
  br label %65

27:                                               ; preds = %65, %13
  %28 = phi i32 [ undef, %13 ], [ %91, %65 ]
  %29 = phi i64 [ 0, %13 ], [ %92, %65 ]
  %30 = phi i32 [ 1, %13 ], [ %91, %65 ]
  %31 = icmp eq i64 %23, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %27, %32
  %33 = phi i64 [ %41, %32 ], [ %29, %27 ]
  %34 = phi i32 [ %40, %32 ], [ %30, %27 ]
  %35 = phi i64 [ %42, %32 ], [ %23, %27 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %33
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %38 = select i1 %16, i32* %36, i32* %37
  %39 = load i32, i32* %38, align 4
  %40 = mul nsw i32 %39, %34
  %41 = add nuw nsw i64 %33, 1
  %42 = add i64 %35, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %32, !llvm.loop !90

44:                                               ; preds = %27, %32, %7
  %45 = phi i32 [ 1, %7 ], [ %28, %27 ], [ %40, %32 ]
  %46 = add i32 %9, 1
  %47 = icmp slt i32 %46, %11
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  br i1 %47, label %50, label %112

50:                                               ; preds = %44
  %51 = icmp sgt i32 %49, 5
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %union.anon, %union.anon* %52, i64 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = bitcast %union.anon* %52 to [5 x i32]*
  %56 = sext i32 %46 to i64
  %57 = sext i32 %11 to i64
  %58 = sub nsw i64 %57, %56
  %59 = xor i64 %56, -1
  %60 = add nsw i64 %59, %57
  %61 = and i64 %58, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %50
  %64 = sub nsw i64 %58, %61
  br label %131

65:                                               ; preds = %65, %25
  %66 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %68 = phi i64 [ %26, %25 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %19, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %16, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %19, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %16, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %19, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %16, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %19, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %16, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %27, label %65

95:                                               ; preds = %131, %50
  %96 = phi i32 [ undef, %50 ], [ %157, %131 ]
  %97 = phi i64 [ %56, %50 ], [ %158, %131 ]
  %98 = phi i32 [ 1, %50 ], [ %157, %131 ]
  %99 = icmp eq i64 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i64 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %54, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %101
  %106 = select i1 %51, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !91

112:                                              ; preds = %95, %100, %44
  %113 = phi i32 [ 1, %44 ], [ %96, %95 ], [ %108, %100 ]
  %114 = add i32 %11, 1
  %115 = icmp slt i32 %114, %49
  %116 = icmp sgt i32 %49, 5
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %115, label %118, label %178

118:                                              ; preds = %112
  %119 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = bitcast %union.anon* %117 to [5 x i32]*
  %122 = sext i32 %114 to i64
  %123 = sext i32 %49 to i64
  %124 = sub nsw i64 %123, %122
  %125 = xor i64 %122, -1
  %126 = add nsw i64 %125, %123
  %127 = and i64 %124, 3
  %128 = icmp ult i64 %126, 3
  br i1 %128, label %161, label %129

129:                                              ; preds = %118
  %130 = sub nsw i64 %124, %127
  br label %213

131:                                              ; preds = %131, %63
  %132 = phi i64 [ %56, %63 ], [ %158, %131 ]
  %133 = phi i32 [ 1, %63 ], [ %157, %131 ]
  %134 = phi i64 [ %64, %63 ], [ %159, %131 ]
  %135 = getelementptr inbounds i32, i32* %54, i64 %132
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %132
  %137 = select i1 %51, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %132, 1
  %141 = getelementptr inbounds i32, i32* %54, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %140
  %143 = select i1 %51, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %132, 2
  %147 = getelementptr inbounds i32, i32* %54, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %146
  %149 = select i1 %51, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %132, 3
  %153 = getelementptr inbounds i32, i32* %54, i64 %152
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %55, i64 0, i64 %152
  %155 = select i1 %51, i32* %153, i32* %154
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = add nsw i64 %132, 4
  %159 = add i64 %134, -4
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %95, label %131

161:                                              ; preds = %213, %118
  %162 = phi i32 [ undef, %118 ], [ %239, %213 ]
  %163 = phi i64 [ %122, %118 ], [ %240, %213 ]
  %164 = phi i32 [ 1, %118 ], [ %239, %213 ]
  %165 = icmp eq i64 %127, 0
  br i1 %165, label %178, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %175, %166 ], [ %163, %161 ]
  %168 = phi i32 [ %174, %166 ], [ %164, %161 ]
  %169 = phi i64 [ %176, %166 ], [ %127, %161 ]
  %170 = getelementptr inbounds i32, i32* %120, i64 %167
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %167
  %172 = select i1 %116, i32* %170, i32* %171
  %173 = load i32, i32* %172, align 4
  %174 = mul nsw i32 %173, %168
  %175 = add nsw i64 %167, 1
  %176 = add i64 %169, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %166, !llvm.loop !92

178:                                              ; preds = %161, %166, %112
  %179 = phi i32 [ 1, %112 ], [ %162, %161 ], [ %174, %166 ]
  br i1 %116, label %180, label %187

180:                                              ; preds = %178
  %181 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = sext i32 %9 to i64
  %184 = getelementptr inbounds i32, i32* %182, i64 %183
  %185 = sext i32 %11 to i64
  %186 = getelementptr inbounds i32, i32* %182, i64 %185
  br label %193

187:                                              ; preds = %178
  %188 = bitcast %union.anon* %117 to [5 x i32]*
  %189 = sext i32 %9 to i64
  %190 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %189
  %191 = sext i32 %11 to i64
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %188, i64 0, i64 %191
  br label %193

193:                                              ; preds = %180, %187
  %194 = phi i32* [ %184, %180 ], [ %190, %187 ]
  %195 = phi i32* [ %186, %180 ], [ %192, %187 ]
  %196 = load i32, i32* %194, align 4
  %197 = load i32, i32* %195, align 4
  %198 = icmp sgt i32 %45, 0
  br i1 %8, label %199, label %297

199:                                              ; preds = %193
  br i1 %198, label %200, label %385

200:                                              ; preds = %199
  %201 = icmp sgt i32 %196, 0
  %202 = icmp sgt i32 %113, 0
  %203 = icmp sgt i32 %197, 0
  %204 = sext i32 %179 to i64
  %205 = shl nsw i64 %204, 3
  %206 = sext i32 %197 to i64
  %207 = sext i32 %113 to i64
  %208 = sext i32 %196 to i64
  %209 = zext i32 %45 to i64
  %210 = zext i32 %196 to i64
  %211 = zext i32 %113 to i64
  %212 = zext i32 %197 to i64
  br label %243

213:                                              ; preds = %213, %129
  %214 = phi i64 [ %122, %129 ], [ %240, %213 ]
  %215 = phi i32 [ 1, %129 ], [ %239, %213 ]
  %216 = phi i64 [ %130, %129 ], [ %241, %213 ]
  %217 = getelementptr inbounds i32, i32* %120, i64 %214
  %218 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %214
  %219 = select i1 %116, i32* %217, i32* %218
  %220 = load i32, i32* %219, align 4
  %221 = mul nsw i32 %220, %215
  %222 = add nsw i64 %214, 1
  %223 = getelementptr inbounds i32, i32* %120, i64 %222
  %224 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %222
  %225 = select i1 %116, i32* %223, i32* %224
  %226 = load i32, i32* %225, align 4
  %227 = mul nsw i32 %226, %221
  %228 = add nsw i64 %214, 2
  %229 = getelementptr inbounds i32, i32* %120, i64 %228
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %228
  %231 = select i1 %116, i32* %229, i32* %230
  %232 = load i32, i32* %231, align 4
  %233 = mul nsw i32 %232, %227
  %234 = add nsw i64 %214, 3
  %235 = getelementptr inbounds i32, i32* %120, i64 %234
  %236 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 %234
  %237 = select i1 %116, i32* %235, i32* %236
  %238 = load i32, i32* %237, align 4
  %239 = mul nsw i32 %238, %233
  %240 = add nsw i64 %214, 4
  %241 = add i64 %216, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %161, label %213

243:                                              ; preds = %248, %200
  %244 = phi i64 [ 0, %200 ], [ %249, %248 ]
  br i1 %201, label %245, label %248

245:                                              ; preds = %243
  %246 = mul nsw i64 %244, %208
  %247 = trunc i64 %246 to i32
  br label %251

248:                                              ; preds = %264, %243
  %249 = add nuw nsw i64 %244, 1
  %250 = icmp eq i64 %249, %209
  br i1 %250, label %385, label %243

251:                                              ; preds = %264, %245
  %252 = phi i64 [ 0, %245 ], [ %265, %264 ]
  %253 = add nsw i64 %252, %246
  %254 = mul nsw i64 %253, %207
  br i1 %202, label %255, label %264

255:                                              ; preds = %251
  %256 = trunc i64 %252 to i32
  %257 = sub i32 %247, %256
  br label %258

258:                                              ; preds = %267, %255
  %259 = phi i64 [ 0, %255 ], [ %268, %267 ]
  br i1 %203, label %260, label %267

260:                                              ; preds = %258
  %261 = add nsw i64 %259, %254
  %262 = mul nsw i64 %261, %206
  %263 = trunc i64 %259 to i32
  br label %270

264:                                              ; preds = %267, %251
  %265 = add nuw nsw i64 %252, 1
  %266 = icmp eq i64 %265, %210
  br i1 %266, label %248, label %251

267:                                              ; preds = %290, %258
  %268 = add nuw nsw i64 %259, 1
  %269 = icmp eq i64 %268, %211
  br i1 %269, label %264, label %258

270:                                              ; preds = %290, %260
  %271 = phi i64 [ 0, %260 ], [ %295, %290 ]
  %272 = add nsw i64 %271, %262
  %273 = mul nsw i64 %272, %204
  %274 = getelementptr inbounds i64, i64* %4, i64 %273
  %275 = getelementptr inbounds i64, i64* %0, i64 %271
  %276 = load i64, i64* %275, align 8
  %277 = trunc i64 %276 to i32
  %278 = add i32 %277, -1
  %279 = sext i32 %278 to i64
  %280 = icmp sgt i64 %252, %279
  br i1 %280, label %290, label %281

281:                                              ; preds = %270
  %282 = add i32 %257, %278
  %283 = mul nsw i32 %282, %113
  %284 = add nsw i32 %283, %263
  %285 = mul nsw i32 %284, %197
  %286 = trunc i64 %271 to i32
  %287 = add nsw i32 %285, %286
  %288 = mul nsw i32 %287, %179
  %289 = sext i32 %288 to i64
  br label %290

290:                                              ; preds = %270, %281
  %291 = phi i64 [ %289, %281 ], [ %273, %270 ]
  %292 = getelementptr inbounds i64, i64* %6, i64 %291
  %293 = bitcast i64* %292 to i8*
  %294 = bitcast i64* %274 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %293, i8* align 8 %294, i64 %205, i1 false)
  %295 = add nuw nsw i64 %271, 1
  %296 = icmp eq i64 %295, %212
  br i1 %296, label %267, label %270

297:                                              ; preds = %193
  %298 = and i1 %10, %198
  br i1 %298, label %299, label %385

299:                                              ; preds = %297
  %300 = icmp sgt i32 %196, 0
  %301 = icmp sgt i32 %113, 0
  %302 = icmp sgt i32 %197, 0
  %303 = sext i32 %179 to i64
  %304 = shl nsw i64 %303, 3
  %305 = sext i32 %197 to i64
  %306 = sext i32 %113 to i64
  %307 = sext i32 %196 to i64
  %308 = zext i32 %45 to i64
  %309 = zext i32 %196 to i64
  %310 = zext i32 %113 to i64
  %311 = zext i32 %197 to i64
  %312 = and i64 %311, 1
  %313 = icmp eq i32 %197, 1
  %314 = sub nsw i64 %311, %312
  %315 = icmp eq i64 %312, 0
  br label %316

316:                                              ; preds = %320, %299
  %317 = phi i64 [ 0, %299 ], [ %321, %320 ]
  br i1 %300, label %318, label %320

318:                                              ; preds = %316
  %319 = mul nsw i64 %317, %307
  br label %323

320:                                              ; preds = %340, %316
  %321 = add nuw nsw i64 %317, 1
  %322 = icmp eq i64 %321, %308
  br i1 %322, label %385, label %316

323:                                              ; preds = %340, %318
  %324 = phi i64 [ 0, %318 ], [ %341, %340 ]
  %325 = add nsw i64 %324, %319
  %326 = mul nsw i64 %325, %306
  br i1 %301, label %327, label %340

327:                                              ; preds = %323
  %328 = getelementptr inbounds i64, i64* %0, i64 %324
  %329 = load i64, i64* %328, align 8
  %330 = shl i64 %329, 32
  %331 = add i64 %330, -4294967296
  %332 = ashr exact i64 %331, 32
  br label %333

333:                                              ; preds = %360, %327
  %334 = phi i64 [ 0, %327 ], [ %361, %360 ]
  br i1 %302, label %335, label %360

335:                                              ; preds = %333
  %336 = add nsw i64 %334, %326
  %337 = mul nsw i64 %336, %305
  %338 = add nsw i64 %337, %332
  %339 = trunc i64 %338 to i32
  br i1 %313, label %343, label %363

340:                                              ; preds = %360, %323
  %341 = add nuw nsw i64 %324, 1
  %342 = icmp eq i64 %341, %309
  br i1 %342, label %320, label %323

343:                                              ; preds = %391, %335
  %344 = phi i64 [ 0, %335 ], [ %396, %391 ]
  br i1 %315, label %360, label %345

345:                                              ; preds = %343
  %346 = add nsw i64 %344, %337
  %347 = mul nsw i64 %346, %303
  %348 = getelementptr inbounds i64, i64* %4, i64 %347
  %349 = icmp sgt i64 %344, %332
  br i1 %349, label %355, label %350

350:                                              ; preds = %345
  %351 = trunc i64 %344 to i32
  %352 = sub i32 %339, %351
  %353 = mul nsw i32 %352, %179
  %354 = sext i32 %353 to i64
  br label %355

355:                                              ; preds = %350, %345
  %356 = phi i64 [ %354, %350 ], [ %347, %345 ]
  %357 = getelementptr inbounds i64, i64* %6, i64 %356
  %358 = bitcast i64* %357 to i8*
  %359 = bitcast i64* %348 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %358, i8* align 8 %359, i64 %304, i1 false)
  br label %360

360:                                              ; preds = %355, %343, %333
  %361 = add nuw nsw i64 %334, 1
  %362 = icmp eq i64 %361, %310
  br i1 %362, label %340, label %333

363:                                              ; preds = %335, %391
  %364 = phi i64 [ %396, %391 ], [ 0, %335 ]
  %365 = phi i64 [ %397, %391 ], [ %314, %335 ]
  %366 = add nsw i64 %364, %337
  %367 = mul nsw i64 %366, %303
  %368 = getelementptr inbounds i64, i64* %4, i64 %367
  %369 = icmp sgt i64 %364, %332
  br i1 %369, label %375, label %370

370:                                              ; preds = %363
  %371 = trunc i64 %364 to i32
  %372 = sub i32 %339, %371
  %373 = mul nsw i32 %372, %179
  %374 = sext i32 %373 to i64
  br label %375

375:                                              ; preds = %363, %370
  %376 = phi i64 [ %374, %370 ], [ %367, %363 ]
  %377 = getelementptr inbounds i64, i64* %6, i64 %376
  %378 = bitcast i64* %377 to i8*
  %379 = bitcast i64* %368 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %378, i8* align 8 %379, i64 %304, i1 false)
  %380 = or i64 %364, 1
  %381 = add nsw i64 %380, %337
  %382 = mul nsw i64 %381, %303
  %383 = getelementptr inbounds i64, i64* %4, i64 %382
  %384 = icmp slt i64 %364, %332
  br i1 %384, label %386, label %391

385:                                              ; preds = %320, %248, %199, %297
  ret void

386:                                              ; preds = %375
  %387 = trunc i64 %380 to i32
  %388 = sub i32 %339, %387
  %389 = mul nsw i32 %388, %179
  %390 = sext i32 %389 to i64
  br label %391

391:                                              ; preds = %375, %386
  %392 = phi i64 [ %390, %386 ], [ %382, %375 ]
  %393 = getelementptr inbounds i64, i64* %6, i64 %392
  %394 = bitcast i64* %393 to i8*
  %395 = bitcast i64* %383 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %394, i8* align 8 %395, i64 %304, i1 false)
  %396 = add nuw nsw i64 %364, 2
  %397 = add i64 %365, -2
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %343, label %363
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!7 = distinct !{!7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!10 = distinct !{!10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!13 = distinct !{!13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!16 = distinct !{!16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!19 = distinct !{!19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!25 = distinct !{!25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!28 = distinct !{!28, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!31 = distinct !{!31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!34 = distinct !{!34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!37 = distinct !{!37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!40 = distinct !{!40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!43 = distinct !{!43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!46 = distinct !{!46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!49 = distinct !{!49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!52 = distinct !{!52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!55 = distinct !{!55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!58 = distinct !{!58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!61 = distinct !{!61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!62 = distinct !{!62, !63}
!63 = !{!"llvm.loop.unroll.disable"}
!64 = distinct !{!64, !63}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !63}
!67 = distinct !{!67, !63}
!68 = distinct !{!68, !63}
!69 = distinct !{!69, !63}
!70 = distinct !{!70, !63}
!71 = distinct !{!71, !63}
!72 = distinct !{!72, !63}
!73 = distinct !{!73, !63}
!74 = distinct !{!74, !63}
!75 = distinct !{!75, !63}
!76 = distinct !{!76, !63}
!77 = distinct !{!77, !63}
!78 = distinct !{!78, !63}
!79 = distinct !{!79, !63}
!80 = distinct !{!80, !63}
!81 = distinct !{!81, !63}
!82 = distinct !{!82, !63}
!83 = distinct !{!83, !63}
!84 = distinct !{!84, !63}
!85 = distinct !{!85, !63}
!86 = distinct !{!86, !63}
!87 = distinct !{!87, !63}
!88 = distinct !{!88, !63}
!89 = distinct !{!89, !63}
!90 = distinct !{!90, !63}
!91 = distinct !{!91, !63}
!92 = distinct !{!92, !63}
