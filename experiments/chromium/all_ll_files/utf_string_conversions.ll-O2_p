; ModuleID = '../../base/strings/utf_string_conversions.cc'
source_filename = "../../base/strings/utf_string_conversions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"class.std::__1::basic_string.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__rep" }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__rep" = type { %union.anon.15 }
%union.anon.15 = type { %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__long" }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__long" = type { i32*, i64, i64 }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short" = type { [5 x i32], %struct.anon.16 }
%struct.anon.16 = type { %"struct.std::__1::__padding.17", i8 }
%"struct.std::__1::__padding.17" = type { [3 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE18__shrink_or_extendEm = comdat any

@.str.1 = private unnamed_addr constant [17 x i8] c" 000000000000\1000\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00\1E\0F\0F\0F\00\00\00\00\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11UTF8ToUTF16EPKcmPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %0, i64 %1) #8
  br i1 %4, label %5, label %128

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8, i8* %0, i64 %1
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 9223372036854775807
  %15 = add nsw i64 %14, -1
  br label %16

16:                                               ; preds = %11, %5
  %17 = phi i64 [ %15, %11 ], [ 10, %5 ]
  %18 = icmp ult i64 %17, %1
  br i1 %18, label %19, label %29

19:                                               ; preds = %16
  br i1 %10, label %20, label %23

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %25

23:                                               ; preds = %19
  %24 = zext i8 %9 to i64
  br label %25

25:                                               ; preds = %23, %20
  %26 = phi i64 [ %22, %20 ], [ %24, %23 ]
  %27 = sub i64 %1, %17
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %17, i64 %27, i64 %26, i64 0, i64 %26, i64 0) #8
  %28 = load i8, i8* %8, align 1
  br label %29

29:                                               ; preds = %25, %16
  %30 = phi i8 [ %9, %16 ], [ %28, %25 ]
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  br label %37

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  br label %37

37:                                               ; preds = %35, %32
  %38 = phi i16* [ %34, %32 ], [ %36, %35 ]
  %39 = bitcast i16* %38 to i8*
  %40 = icmp eq i64 %1, 0
  br i1 %40, label %120, label %41

41:                                               ; preds = %37
  %42 = icmp ult i64 %1, 16
  br i1 %42, label %109, label %43

43:                                               ; preds = %41
  %44 = getelementptr i16, i16* %38, i64 %1
  %45 = bitcast i16* %44 to i8*
  %46 = icmp ugt i8* %6, %39
  %47 = icmp ugt i8* %45, %0
  %48 = and i1 %46, %47
  br i1 %48, label %109, label %49

49:                                               ; preds = %43
  %50 = and i64 %1, -16
  %51 = getelementptr i16, i16* %38, i64 %50
  %52 = getelementptr i8, i8* %0, i64 %50
  %53 = add i64 %50, -16
  %54 = lshr exact i64 %53, 4
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %53, 0
  br i1 %57, label %91, label %58

58:                                               ; preds = %49
  %59 = sub nuw nsw i64 %55, %56
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %88, %60 ]
  %62 = phi i64 [ %59, %58 ], [ %89, %60 ]
  %63 = getelementptr i16, i16* %38, i64 %61
  %64 = getelementptr i8, i8* %0, i64 %61
  %65 = bitcast i8* %64 to <8 x i8>*
  %66 = load <8 x i8>, <8 x i8>* %65, align 1, !alias.scope !2
  %67 = getelementptr i8, i8* %64, i64 8
  %68 = bitcast i8* %67 to <8 x i8>*
  %69 = load <8 x i8>, <8 x i8>* %68, align 1, !alias.scope !2
  %70 = sext <8 x i8> %66 to <8 x i16>
  %71 = sext <8 x i8> %69 to <8 x i16>
  %72 = bitcast i16* %63 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %72, align 2, !alias.scope !5, !noalias !2
  %73 = getelementptr i16, i16* %63, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !5, !noalias !2
  %75 = or i64 %61, 16
  %76 = getelementptr i16, i16* %38, i64 %75
  %77 = getelementptr i8, i8* %0, i64 %75
  %78 = bitcast i8* %77 to <8 x i8>*
  %79 = load <8 x i8>, <8 x i8>* %78, align 1, !alias.scope !2
  %80 = getelementptr i8, i8* %77, i64 8
  %81 = bitcast i8* %80 to <8 x i8>*
  %82 = load <8 x i8>, <8 x i8>* %81, align 1, !alias.scope !2
  %83 = sext <8 x i8> %79 to <8 x i16>
  %84 = sext <8 x i8> %82 to <8 x i16>
  %85 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %85, align 2, !alias.scope !5, !noalias !2
  %86 = getelementptr i16, i16* %76, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !5, !noalias !2
  %88 = add i64 %61, 32
  %89 = add i64 %62, -2
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %60, !llvm.loop !7

91:                                               ; preds = %60, %49
  %92 = phi i64 [ 0, %49 ], [ %88, %60 ]
  %93 = icmp eq i64 %56, 0
  br i1 %93, label %107, label %94

94:                                               ; preds = %91
  %95 = getelementptr i16, i16* %38, i64 %92
  %96 = getelementptr i8, i8* %0, i64 %92
  %97 = bitcast i8* %96 to <8 x i8>*
  %98 = load <8 x i8>, <8 x i8>* %97, align 1, !alias.scope !2
  %99 = getelementptr i8, i8* %96, i64 8
  %100 = bitcast i8* %99 to <8 x i8>*
  %101 = load <8 x i8>, <8 x i8>* %100, align 1, !alias.scope !2
  %102 = sext <8 x i8> %98 to <8 x i16>
  %103 = sext <8 x i8> %101 to <8 x i16>
  %104 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %104, align 2, !alias.scope !5, !noalias !2
  %105 = getelementptr i16, i16* %95, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !5, !noalias !2
  br label %107

107:                                              ; preds = %91, %94
  %108 = icmp eq i64 %50, %1
  br i1 %108, label %120, label %109

109:                                              ; preds = %107, %43, %41
  %110 = phi i16* [ %38, %43 ], [ %38, %41 ], [ %51, %107 ]
  %111 = phi i8* [ %0, %43 ], [ %0, %41 ], [ %52, %107 ]
  br label %112

112:                                              ; preds = %109, %112
  %113 = phi i16* [ %118, %112 ], [ %110, %109 ]
  %114 = phi i8* [ %117, %112 ], [ %111, %109 ]
  %115 = load i8, i8* %114, align 1
  %116 = sext i8 %115 to i16
  store i16 %116, i16* %113, align 2
  %117 = getelementptr inbounds i8, i8* %114, i64 1
  %118 = getelementptr inbounds i16, i16* %113, i64 1
  %119 = icmp eq i8* %117, %6
  br i1 %119, label %120, label %112, !llvm.loop !9

120:                                              ; preds = %112, %107, %37
  %121 = phi i16* [ %38, %37 ], [ %51, %107 ], [ %118, %112 ]
  store i16 0, i16* %121, align 2
  %122 = load i8, i8* %8, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1, i64* %125, align 8
  br label %625

126:                                              ; preds = %120
  %127 = trunc i64 %1 to i8
  store i8 %127, i8* %8, align 1
  br label %625

128:                                              ; preds = %3
  %129 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %129, i64 0, i32 1, i32 1
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %135 = load i64, i64* %134, align 8
  br label %138

136:                                              ; preds = %128
  %137 = zext i8 %131 to i64
  br label %138

138:                                              ; preds = %136, %133
  %139 = phi i64 [ %135, %133 ], [ %137, %136 ]
  %140 = icmp ult i64 %139, %1
  br i1 %140, label %141, label %185

141:                                              ; preds = %138
  %142 = sub i64 %1, %139
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %195, label %144

144:                                              ; preds = %141
  br i1 %132, label %145, label %152

145:                                              ; preds = %144
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %147 = load i64, i64* %146, align 8
  %148 = and i64 %147, 9223372036854775807
  %149 = add nsw i64 %148, -1
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  br label %154

152:                                              ; preds = %144
  %153 = zext i8 %131 to i64
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i64 [ %149, %145 ], [ 10, %152 ]
  %156 = phi i64 [ %151, %145 ], [ %153, %152 ]
  %157 = sub i64 %155, %156
  %158 = icmp ult i64 %157, %142
  br i1 %158, label %159, label %163

159:                                              ; preds = %154
  %160 = add i64 %156, %142
  %161 = sub i64 %160, %155
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %155, i64 %161, i64 %156, i64 %156, i64 0, i64 0) #8
  %162 = load i8, i8* %130, align 1
  br label %163

163:                                              ; preds = %159, %154
  %164 = phi i8 [ %162, %159 ], [ %131, %154 ]
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i16*, i16** %167, align 8
  br label %171

169:                                              ; preds = %163
  %170 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  br label %171

171:                                              ; preds = %169, %166
  %172 = phi i16* [ %168, %166 ], [ %170, %169 ]
  %173 = getelementptr inbounds i16, i16* %172, i64 %156
  %174 = bitcast i16* %173 to i8*
  %175 = shl i64 %142, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %174, i8 0, i64 %175, i1 false) #8
  %176 = add i64 %156, %142
  %177 = load i8, i8* %130, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %179, label %181

179:                                              ; preds = %171
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %176, i64* %180, align 8
  br label %183

181:                                              ; preds = %171
  %182 = trunc i64 %176 to i8
  store i8 %182, i8* %130, align 1
  br label %183

183:                                              ; preds = %181, %179
  %184 = getelementptr inbounds i16, i16* %172, i64 %176
  store i16 0, i16* %184, align 2
  br label %195

185:                                              ; preds = %138
  br i1 %132, label %186, label %191

186:                                              ; preds = %185
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i16*, i16** %187, align 8
  %189 = getelementptr inbounds i16, i16* %188, i64 %1
  store i16 0, i16* %189, align 2
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1, i64* %190, align 8
  br label %195

191:                                              ; preds = %185
  %192 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %193 = getelementptr inbounds i16, i16* %192, i64 %1
  store i16 0, i16* %193, align 2
  %194 = trunc i64 %1 to i8
  store i8 %194, i8* %130, align 1
  br label %197

195:                                              ; preds = %186, %183, %141
  %196 = load i8, i8* %130, align 1
  br label %197

197:                                              ; preds = %195, %191
  %198 = phi i8 [ %196, %195 ], [ %194, %191 ]
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i16*, i16** %201, align 8
  br label %205

203:                                              ; preds = %197
  %204 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  br label %205

205:                                              ; preds = %203, %200
  %206 = phi i16* [ %202, %200 ], [ %204, %203 ]
  %207 = trunc i64 %1 to i32
  %208 = icmp sgt i32 %207, 0
  br i1 %208, label %213, label %329

209:                                              ; preds = %321
  %210 = and i8 %306, 1
  %211 = icmp ne i8 %210, 0
  %212 = load i8, i8* %130, align 1
  br label %329

213:                                              ; preds = %205, %321
  %214 = phi i32 [ %325, %321 ], [ 0, %205 ]
  %215 = phi i32 [ %300, %321 ], [ 0, %205 ]
  %216 = phi i8 [ %306, %321 ], [ 1, %205 ]
  %217 = add nsw i32 %215, 1
  %218 = sext i32 %215 to i64
  %219 = getelementptr inbounds i8, i8* %0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = icmp sgt i8 %220, -1
  br i1 %222, label %299, label %223

223:                                              ; preds = %213
  %224 = icmp eq i32 %217, %207
  br i1 %224, label %299, label %225

225:                                              ; preds = %223
  %226 = icmp ugt i8 %220, -33
  br i1 %226, label %227, label %282

227:                                              ; preds = %225
  %228 = icmp ult i8 %220, -16
  br i1 %228, label %229, label %245

229:                                              ; preds = %227
  %230 = and i32 %221, 15
  %231 = zext i32 %230 to i64
  %232 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = sext i8 %233 to i32
  %235 = sext i32 %217 to i64
  %236 = getelementptr inbounds i8, i8* %0, i64 %235
  %237 = load i8, i8* %236, align 1
  %238 = lshr i8 %237, 5
  %239 = zext i8 %238 to i32
  %240 = shl i32 1, %239
  %241 = and i32 %240, %234
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %299, label %243

243:                                              ; preds = %229
  %244 = and i8 %237, 63
  br label %273

245:                                              ; preds = %227
  %246 = add nsw i32 %221, -240
  %247 = icmp slt i32 %246, 5
  br i1 %247, label %248, label %299

248:                                              ; preds = %245
  %249 = sext i32 %217 to i64
  %250 = getelementptr inbounds i8, i8* %0, i64 %249
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  %253 = lshr i32 %252, 4
  %254 = zext i32 %253 to i64
  %255 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.2, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = shl i32 1, %246
  %259 = and i32 %258, %257
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %299, label %261

261:                                              ; preds = %248
  %262 = add nsw i32 %215, 2
  %263 = icmp eq i32 %262, %207
  br i1 %263, label %299, label %264

264:                                              ; preds = %261
  %265 = shl nsw i32 %246, 6
  %266 = and i32 %252, 63
  %267 = or i32 %266, %265
  %268 = sext i32 %262 to i64
  %269 = getelementptr inbounds i8, i8* %0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = xor i8 %270, -128
  %272 = icmp ult i8 %271, 64
  br i1 %272, label %273, label %299

273:                                              ; preds = %264, %243
  %274 = phi i32 [ %217, %243 ], [ %262, %264 ]
  %275 = phi i32 [ %230, %243 ], [ %267, %264 ]
  %276 = phi i8 [ %244, %243 ], [ %271, %264 ]
  %277 = shl nsw i32 %275, 6
  %278 = zext i8 %276 to i32
  %279 = or i32 %277, %278
  %280 = add nsw i32 %274, 1
  %281 = icmp eq i32 %280, %207
  br i1 %281, label %299, label %286

282:                                              ; preds = %225
  %283 = icmp ugt i8 %220, -63
  br i1 %283, label %284, label %299

284:                                              ; preds = %282
  %285 = and i32 %221, 31
  br label %286

286:                                              ; preds = %284, %273
  %287 = phi i32 [ %280, %273 ], [ %217, %284 ]
  %288 = phi i32 [ %279, %273 ], [ %285, %284 ]
  %289 = sext i32 %287 to i64
  %290 = getelementptr inbounds i8, i8* %0, i64 %289
  %291 = load i8, i8* %290, align 1
  %292 = xor i8 %291, -128
  %293 = icmp ult i8 %292, 64
  br i1 %293, label %294, label %299

294:                                              ; preds = %286
  %295 = zext i8 %292 to i32
  %296 = shl i32 %288, 6
  %297 = or i32 %296, %295
  %298 = add nsw i32 %287, 1
  br label %299

299:                                              ; preds = %294, %286, %282, %273, %264, %261, %248, %245, %229, %223, %213
  %300 = phi i32 [ %217, %213 ], [ %298, %294 ], [ %287, %286 ], [ %207, %273 ], [ %217, %229 ], [ %262, %264 ], [ %207, %261 ], [ %217, %248 ], [ %217, %245 ], [ %217, %282 ], [ %207, %223 ]
  %301 = phi i32 [ %221, %213 ], [ %297, %294 ], [ -1, %286 ], [ -1, %273 ], [ -1, %229 ], [ -1, %264 ], [ -1, %261 ], [ -1, %248 ], [ -1, %245 ], [ -1, %282 ], [ -1, %223 ]
  %302 = icmp ult i32 %301, 55296
  %303 = add i32 %301, -57344
  %304 = icmp ult i32 %303, 1056768
  %305 = or i1 %302, %304
  %306 = select i1 %305, i8 %216, i8 0
  %307 = select i1 %305, i32 %301, i32 65533
  %308 = icmp ult i32 %307, 65536
  br i1 %308, label %309, label %311

309:                                              ; preds = %299
  %310 = trunc i32 %307 to i16
  br label %321

311:                                              ; preds = %299
  %312 = lshr i32 %307, 10
  %313 = trunc i32 %312 to i16
  %314 = add i16 %313, -10304
  %315 = add nuw nsw i32 %214, 1
  %316 = zext i32 %214 to i64
  %317 = getelementptr inbounds i16, i16* %206, i64 %316
  store i16 %314, i16* %317, align 2
  %318 = trunc i32 %307 to i16
  %319 = and i16 %318, 1023
  %320 = or i16 %319, -9216
  br label %321

321:                                              ; preds = %311, %309
  %322 = phi i32 [ 2, %311 ], [ 1, %309 ]
  %323 = phi i32 [ %315, %311 ], [ %214, %309 ]
  %324 = phi i16 [ %320, %311 ], [ %310, %309 ]
  %325 = add nuw nsw i32 %214, %322
  %326 = sext i32 %323 to i64
  %327 = getelementptr inbounds i16, i16* %206, i64 %326
  store i16 %324, i16* %327, align 2
  %328 = icmp slt i32 %300, %207
  br i1 %328, label %213, label %209

329:                                              ; preds = %209, %205
  %330 = phi i8 [ %212, %209 ], [ %198, %205 ]
  %331 = phi i32 [ %325, %209 ], [ 0, %205 ]
  %332 = phi i1 [ %211, %209 ], [ true, %205 ]
  %333 = sext i32 %331 to i64
  %334 = icmp slt i8 %330, 0
  br i1 %334, label %335, label %338

335:                                              ; preds = %329
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %337 = load i64, i64* %336, align 8
  br label %340

338:                                              ; preds = %329
  %339 = zext i8 %330 to i64
  br label %340

340:                                              ; preds = %338, %335
  %341 = phi i64 [ %337, %335 ], [ %339, %338 ]
  %342 = icmp ult i64 %341, %333
  br i1 %342, label %343, label %387

343:                                              ; preds = %340
  %344 = sub i64 %333, %341
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %397, label %346

346:                                              ; preds = %343
  br i1 %334, label %347, label %354

347:                                              ; preds = %346
  %348 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %349 = load i64, i64* %348, align 8
  %350 = and i64 %349, 9223372036854775807
  %351 = add nsw i64 %350, -1
  %352 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %353 = load i64, i64* %352, align 8
  br label %356

354:                                              ; preds = %346
  %355 = zext i8 %330 to i64
  br label %356

356:                                              ; preds = %354, %347
  %357 = phi i64 [ %351, %347 ], [ 10, %354 ]
  %358 = phi i64 [ %353, %347 ], [ %355, %354 ]
  %359 = sub i64 %357, %358
  %360 = icmp ult i64 %359, %344
  br i1 %360, label %361, label %365

361:                                              ; preds = %356
  %362 = add i64 %358, %344
  %363 = sub i64 %362, %357
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %357, i64 %363, i64 %358, i64 %358, i64 0, i64 0) #8
  %364 = load i8, i8* %130, align 1
  br label %365

365:                                              ; preds = %361, %356
  %366 = phi i8 [ %364, %361 ], [ %330, %356 ]
  %367 = icmp slt i8 %366, 0
  br i1 %367, label %368, label %371

368:                                              ; preds = %365
  %369 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = load i16*, i16** %369, align 8
  br label %373

371:                                              ; preds = %365
  %372 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  br label %373

373:                                              ; preds = %371, %368
  %374 = phi i16* [ %370, %368 ], [ %372, %371 ]
  %375 = getelementptr inbounds i16, i16* %374, i64 %358
  %376 = bitcast i16* %375 to i8*
  %377 = shl i64 %344, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %376, i8 0, i64 %377, i1 false) #8
  %378 = add i64 %358, %344
  %379 = load i8, i8* %130, align 1
  %380 = icmp slt i8 %379, 0
  br i1 %380, label %381, label %383

381:                                              ; preds = %373
  %382 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %378, i64* %382, align 8
  br label %385

383:                                              ; preds = %373
  %384 = trunc i64 %378 to i8
  store i8 %384, i8* %130, align 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = getelementptr inbounds i16, i16* %374, i64 %378
  store i16 0, i16* %386, align 2
  br label %397

387:                                              ; preds = %340
  br i1 %334, label %388, label %393

388:                                              ; preds = %387
  %389 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %390 = load i16*, i16** %389, align 8
  %391 = getelementptr inbounds i16, i16* %390, i64 %333
  store i16 0, i16* %391, align 2
  %392 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %333, i64* %392, align 8
  br label %397

393:                                              ; preds = %387
  %394 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %395 = getelementptr inbounds i16, i16* %394, i64 %333
  store i16 0, i16* %395, align 2
  %396 = trunc i32 %331 to i8
  store i8 %396, i8* %130, align 1
  br label %399

397:                                              ; preds = %388, %385, %343
  %398 = load i8, i8* %130, align 1
  br label %399

399:                                              ; preds = %397, %393
  %400 = phi i8 [ %398, %397 ], [ %396, %393 ]
  %401 = icmp slt i8 %400, 0
  br i1 %401, label %402, label %405

402:                                              ; preds = %399
  %403 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %404 = load i64, i64* %403, align 8
  br label %407

405:                                              ; preds = %399
  %406 = zext i8 %400 to i64
  br label %407

407:                                              ; preds = %405, %402
  %408 = phi i64 [ %404, %402 ], [ %406, %405 ]
  %409 = icmp ult i64 %408, 11
  br i1 %409, label %414, label %410

410:                                              ; preds = %407
  %411 = add i64 %408, 8
  %412 = and i64 %411, -8
  %413 = add i64 %412, -1
  br label %414

414:                                              ; preds = %410, %407
  %415 = phi i64 [ %413, %410 ], [ 10, %407 ]
  br i1 %401, label %416, label %421

416:                                              ; preds = %414
  %417 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %418 = load i64, i64* %417, align 8
  %419 = and i64 %418, 9223372036854775807
  %420 = add nsw i64 %419, -1
  br label %421

421:                                              ; preds = %416, %414
  %422 = phi i64 [ %420, %416 ], [ 10, %414 ]
  %423 = icmp eq i64 %415, %422
  br i1 %423, label %625, label %424

424:                                              ; preds = %421
  br i1 %401, label %425, label %428

425:                                              ; preds = %424
  %426 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %427 = load i64, i64* %426, align 8
  br label %430

428:                                              ; preds = %424
  %429 = zext i8 %400 to i64
  br label %430

430:                                              ; preds = %428, %425
  %431 = phi i64 [ %427, %425 ], [ %429, %428 ]
  %432 = icmp eq i64 %415, 10
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = add i64 %415, 1
  %435 = icmp slt i64 %434, 0
  br i1 %435, label %436, label %437

436:                                              ; preds = %433
  tail call void @abort() #9
  unreachable

437:                                              ; preds = %433
  %438 = shl i64 %434, 1
  %439 = tail call i8* @_Znwm(i64 %438) #10
  %440 = bitcast i8* %439 to i16*
  br i1 %401, label %441, label %444

441:                                              ; preds = %437
  %442 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %443 = load i16*, i16** %442, align 8
  br label %450

444:                                              ; preds = %437
  %445 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  br label %456

446:                                              ; preds = %430
  %447 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %448 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %449 = load i16*, i16** %448, align 8
  br i1 %401, label %450, label %456

450:                                              ; preds = %446, %441
  %451 = phi i1 [ true, %441 ], [ false, %446 ]
  %452 = phi i16* [ %443, %441 ], [ %449, %446 ]
  %453 = phi i16* [ %440, %441 ], [ %447, %446 ]
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %455 = load i64, i64* %454, align 8
  br label %462

456:                                              ; preds = %446, %444
  %457 = phi i1 [ true, %444 ], [ false, %446 ]
  %458 = phi i1 [ false, %444 ], [ true, %446 ]
  %459 = phi i16* [ %445, %444 ], [ %449, %446 ]
  %460 = phi i16* [ %440, %444 ], [ %447, %446 ]
  %461 = zext i8 %400 to i64
  br label %462

462:                                              ; preds = %456, %450
  %463 = phi i1 [ %451, %450 ], [ %457, %456 ]
  %464 = phi i1 [ true, %450 ], [ %458, %456 ]
  %465 = phi i16* [ %452, %450 ], [ %459, %456 ]
  %466 = phi i16* [ %453, %450 ], [ %460, %456 ]
  %467 = phi i64 [ %455, %450 ], [ %461, %456 ]
  %468 = bitcast i16* %465 to i8*
  %469 = add i64 %467, 1
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %614, label %471

471:                                              ; preds = %462
  %472 = icmp ult i64 %469, 16
  br i1 %472, label %561, label %473

473:                                              ; preds = %471
  %474 = getelementptr i16, i16* %466, i64 %469
  %475 = getelementptr i16, i16* %465, i64 %469
  %476 = icmp ult i16* %466, %475
  %477 = icmp ult i16* %465, %474
  %478 = and i1 %476, %477
  br i1 %478, label %561, label %479

479:                                              ; preds = %473
  %480 = and i64 %469, -16
  %481 = sub i64 %469, %480
  %482 = getelementptr i16, i16* %465, i64 %480
  %483 = getelementptr i16, i16* %466, i64 %480
  %484 = add i64 %480, -16
  %485 = lshr exact i64 %484, 4
  %486 = add nuw nsw i64 %485, 1
  %487 = and i64 %486, 3
  %488 = icmp ult i64 %484, 48
  br i1 %488, label %540, label %489

489:                                              ; preds = %479
  %490 = sub nsw i64 %486, %487
  br label %491

491:                                              ; preds = %491, %489
  %492 = phi i64 [ 0, %489 ], [ %537, %491 ]
  %493 = phi i64 [ %490, %489 ], [ %538, %491 ]
  %494 = getelementptr i16, i16* %465, i64 %492
  %495 = getelementptr i16, i16* %466, i64 %492
  %496 = bitcast i16* %494 to <8 x i16>*
  %497 = load <8 x i16>, <8 x i16>* %496, align 2, !alias.scope !10
  %498 = getelementptr i16, i16* %494, i64 8
  %499 = bitcast i16* %498 to <8 x i16>*
  %500 = load <8 x i16>, <8 x i16>* %499, align 2, !alias.scope !10
  %501 = bitcast i16* %495 to <8 x i16>*
  store <8 x i16> %497, <8 x i16>* %501, align 2, !alias.scope !13, !noalias !10
  %502 = getelementptr i16, i16* %495, i64 8
  %503 = bitcast i16* %502 to <8 x i16>*
  store <8 x i16> %500, <8 x i16>* %503, align 2, !alias.scope !13, !noalias !10
  %504 = or i64 %492, 16
  %505 = getelementptr i16, i16* %465, i64 %504
  %506 = getelementptr i16, i16* %466, i64 %504
  %507 = bitcast i16* %505 to <8 x i16>*
  %508 = load <8 x i16>, <8 x i16>* %507, align 2, !alias.scope !10
  %509 = getelementptr i16, i16* %505, i64 8
  %510 = bitcast i16* %509 to <8 x i16>*
  %511 = load <8 x i16>, <8 x i16>* %510, align 2, !alias.scope !10
  %512 = bitcast i16* %506 to <8 x i16>*
  store <8 x i16> %508, <8 x i16>* %512, align 2, !alias.scope !13, !noalias !10
  %513 = getelementptr i16, i16* %506, i64 8
  %514 = bitcast i16* %513 to <8 x i16>*
  store <8 x i16> %511, <8 x i16>* %514, align 2, !alias.scope !13, !noalias !10
  %515 = or i64 %492, 32
  %516 = getelementptr i16, i16* %465, i64 %515
  %517 = getelementptr i16, i16* %466, i64 %515
  %518 = bitcast i16* %516 to <8 x i16>*
  %519 = load <8 x i16>, <8 x i16>* %518, align 2, !alias.scope !10
  %520 = getelementptr i16, i16* %516, i64 8
  %521 = bitcast i16* %520 to <8 x i16>*
  %522 = load <8 x i16>, <8 x i16>* %521, align 2, !alias.scope !10
  %523 = bitcast i16* %517 to <8 x i16>*
  store <8 x i16> %519, <8 x i16>* %523, align 2, !alias.scope !13, !noalias !10
  %524 = getelementptr i16, i16* %517, i64 8
  %525 = bitcast i16* %524 to <8 x i16>*
  store <8 x i16> %522, <8 x i16>* %525, align 2, !alias.scope !13, !noalias !10
  %526 = or i64 %492, 48
  %527 = getelementptr i16, i16* %465, i64 %526
  %528 = getelementptr i16, i16* %466, i64 %526
  %529 = bitcast i16* %527 to <8 x i16>*
  %530 = load <8 x i16>, <8 x i16>* %529, align 2, !alias.scope !10
  %531 = getelementptr i16, i16* %527, i64 8
  %532 = bitcast i16* %531 to <8 x i16>*
  %533 = load <8 x i16>, <8 x i16>* %532, align 2, !alias.scope !10
  %534 = bitcast i16* %528 to <8 x i16>*
  store <8 x i16> %530, <8 x i16>* %534, align 2, !alias.scope !13, !noalias !10
  %535 = getelementptr i16, i16* %528, i64 8
  %536 = bitcast i16* %535 to <8 x i16>*
  store <8 x i16> %533, <8 x i16>* %536, align 2, !alias.scope !13, !noalias !10
  %537 = add i64 %492, 64
  %538 = add i64 %493, -4
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %540, label %491, !llvm.loop !15

540:                                              ; preds = %491, %479
  %541 = phi i64 [ 0, %479 ], [ %537, %491 ]
  %542 = icmp eq i64 %487, 0
  br i1 %542, label %559, label %543

543:                                              ; preds = %540, %543
  %544 = phi i64 [ %556, %543 ], [ %541, %540 ]
  %545 = phi i64 [ %557, %543 ], [ %487, %540 ]
  %546 = getelementptr i16, i16* %465, i64 %544
  %547 = getelementptr i16, i16* %466, i64 %544
  %548 = bitcast i16* %546 to <8 x i16>*
  %549 = load <8 x i16>, <8 x i16>* %548, align 2, !alias.scope !10
  %550 = getelementptr i16, i16* %546, i64 8
  %551 = bitcast i16* %550 to <8 x i16>*
  %552 = load <8 x i16>, <8 x i16>* %551, align 2, !alias.scope !10
  %553 = bitcast i16* %547 to <8 x i16>*
  store <8 x i16> %549, <8 x i16>* %553, align 2, !alias.scope !13, !noalias !10
  %554 = getelementptr i16, i16* %547, i64 8
  %555 = bitcast i16* %554 to <8 x i16>*
  store <8 x i16> %552, <8 x i16>* %555, align 2, !alias.scope !13, !noalias !10
  %556 = add i64 %544, 16
  %557 = add i64 %545, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %559, label %543, !llvm.loop !16

559:                                              ; preds = %543, %540
  %560 = icmp eq i64 %469, %480
  br i1 %560, label %614, label %561

561:                                              ; preds = %559, %473, %471
  %562 = phi i64 [ %469, %473 ], [ %469, %471 ], [ %481, %559 ]
  %563 = phi i16* [ %465, %473 ], [ %465, %471 ], [ %482, %559 ]
  %564 = phi i16* [ %466, %473 ], [ %466, %471 ], [ %483, %559 ]
  %565 = add i64 %562, -1
  %566 = and i64 %562, 7
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %579, label %568

568:                                              ; preds = %561, %568
  %569 = phi i64 [ %574, %568 ], [ %562, %561 ]
  %570 = phi i16* [ %576, %568 ], [ %563, %561 ]
  %571 = phi i16* [ %575, %568 ], [ %564, %561 ]
  %572 = phi i64 [ %577, %568 ], [ %566, %561 ]
  %573 = load i16, i16* %570, align 2
  store i16 %573, i16* %571, align 2
  %574 = add i64 %569, -1
  %575 = getelementptr inbounds i16, i16* %571, i64 1
  %576 = getelementptr inbounds i16, i16* %570, i64 1
  %577 = add i64 %572, -1
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %579, label %568, !llvm.loop !18

579:                                              ; preds = %568, %561
  %580 = phi i64 [ %562, %561 ], [ %574, %568 ]
  %581 = phi i16* [ %563, %561 ], [ %576, %568 ]
  %582 = phi i16* [ %564, %561 ], [ %575, %568 ]
  %583 = icmp ult i64 %565, 7
  br i1 %583, label %614, label %584

584:                                              ; preds = %579, %584
  %585 = phi i64 [ %610, %584 ], [ %580, %579 ]
  %586 = phi i16* [ %612, %584 ], [ %581, %579 ]
  %587 = phi i16* [ %611, %584 ], [ %582, %579 ]
  %588 = load i16, i16* %586, align 2
  store i16 %588, i16* %587, align 2
  %589 = getelementptr inbounds i16, i16* %587, i64 1
  %590 = getelementptr inbounds i16, i16* %586, i64 1
  %591 = load i16, i16* %590, align 2
  store i16 %591, i16* %589, align 2
  %592 = getelementptr inbounds i16, i16* %587, i64 2
  %593 = getelementptr inbounds i16, i16* %586, i64 2
  %594 = load i16, i16* %593, align 2
  store i16 %594, i16* %592, align 2
  %595 = getelementptr inbounds i16, i16* %587, i64 3
  %596 = getelementptr inbounds i16, i16* %586, i64 3
  %597 = load i16, i16* %596, align 2
  store i16 %597, i16* %595, align 2
  %598 = getelementptr inbounds i16, i16* %587, i64 4
  %599 = getelementptr inbounds i16, i16* %586, i64 4
  %600 = load i16, i16* %599, align 2
  store i16 %600, i16* %598, align 2
  %601 = getelementptr inbounds i16, i16* %587, i64 5
  %602 = getelementptr inbounds i16, i16* %586, i64 5
  %603 = load i16, i16* %602, align 2
  store i16 %603, i16* %601, align 2
  %604 = getelementptr inbounds i16, i16* %587, i64 6
  %605 = getelementptr inbounds i16, i16* %586, i64 6
  %606 = load i16, i16* %605, align 2
  store i16 %606, i16* %604, align 2
  %607 = getelementptr inbounds i16, i16* %587, i64 7
  %608 = getelementptr inbounds i16, i16* %586, i64 7
  %609 = load i16, i16* %608, align 2
  store i16 %609, i16* %607, align 2
  %610 = add i64 %585, -8
  %611 = getelementptr inbounds i16, i16* %587, i64 8
  %612 = getelementptr inbounds i16, i16* %586, i64 8
  %613 = icmp eq i64 %610, 0
  br i1 %613, label %614, label %584, !llvm.loop !19

614:                                              ; preds = %579, %584, %559, %462
  br i1 %464, label %615, label %616

615:                                              ; preds = %614
  tail call void @_ZdlPv(i8* %468) #10
  br label %616

616:                                              ; preds = %615, %614
  br i1 %463, label %617, label %623

617:                                              ; preds = %616
  %618 = add i64 %415, 1
  %619 = or i64 %618, -9223372036854775808
  %620 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %619, i64* %620, align 8
  %621 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %431, i64* %621, align 8
  %622 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %466, i16** %622, align 8
  br label %625

623:                                              ; preds = %616
  %624 = trunc i64 %431 to i8
  store i8 %624, i8* %130, align 1
  br label %625

625:                                              ; preds = %124, %126, %421, %617, %623
  %626 = phi i1 [ true, %124 ], [ true, %126 ], [ %332, %623 ], [ %332, %617 ], [ %332, %421 ]
  ret i1 %626
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #8
  %5 = tail call zeroext i1 @_ZN4base11UTF8ToUTF16EPKcmPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i8* %1, i64 %2, %"class.std::__1::basic_string"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11UTF16ToUTF8EPKDsmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i16*, i64, %"class.std::__1::basic_string.1"*) local_unnamed_addr #0 {
  %4 = bitcast i16* %0 to i8*
  %5 = tail call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(i16* %0, i64 %1) #8
  br i1 %5, label %6, label %191

6:                                                ; preds = %3
  %7 = getelementptr inbounds i16, i16* %0, i64 %1
  %8 = shl nuw i64 %1, 1
  %9 = ashr exact i64 %8, 1
  %10 = bitcast %"class.std::__1::basic_string.1"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 9223372036854775807
  %18 = add nsw i64 %17, -1
  br label %19

19:                                               ; preds = %14, %6
  %20 = phi i64 [ %18, %14 ], [ 22, %6 ]
  %21 = icmp ugt i64 %9, %20
  br i1 %21, label %22, label %32

22:                                               ; preds = %19
  br i1 %13, label %23, label %26

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  br label %28

26:                                               ; preds = %22
  %27 = zext i8 %12 to i64
  br label %28

28:                                               ; preds = %26, %23
  %29 = phi i64 [ %25, %23 ], [ %27, %26 ]
  %30 = sub i64 %9, %20
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.1"* %2, i64 %20, i64 %30, i64 %29, i64 0, i64 %29, i64 0) #8
  %31 = load i8, i8* %11, align 1
  br label %32

32:                                               ; preds = %28, %19
  %33 = phi i8 [ %12, %19 ], [ %31, %28 ]
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  br label %40

38:                                               ; preds = %32
  %39 = bitcast %"class.std::__1::basic_string.1"* %2 to i8*
  br label %40

40:                                               ; preds = %38, %35
  %41 = phi i8* [ %37, %35 ], [ %39, %38 ]
  %42 = icmp eq i64 %1, 0
  br i1 %42, label %183, label %43

43:                                               ; preds = %40
  %44 = shl nsw i64 %1, 1
  %45 = add i64 %44, -2
  %46 = lshr exact i64 %45, 1
  %47 = add nuw i64 %46, 1
  %48 = icmp ult i64 %47, 16
  br i1 %48, label %120, label %49

49:                                               ; preds = %43
  %50 = shl nsw i64 %1, 1
  %51 = add i64 %50, -2
  %52 = lshr exact i64 %51, 1
  %53 = add nuw i64 %52, 1
  %54 = getelementptr i8, i8* %41, i64 %53
  %55 = getelementptr i16, i16* %0, i64 %53
  %56 = bitcast i16* %55 to i8*
  %57 = icmp ult i8* %41, %56
  %58 = icmp ugt i8* %54, %4
  %59 = and i1 %57, %58
  br i1 %59, label %120, label %60

60:                                               ; preds = %49
  %61 = and i64 %47, -16
  %62 = getelementptr i8, i8* %41, i64 %61
  %63 = getelementptr i16, i16* %0, i64 %61
  %64 = add i64 %61, -16
  %65 = lshr exact i64 %64, 4
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %64, 0
  br i1 %68, label %102, label %69

69:                                               ; preds = %60
  %70 = sub nuw nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %99, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %100, %71 ]
  %74 = getelementptr i8, i8* %41, i64 %72
  %75 = getelementptr i16, i16* %0, i64 %72
  %76 = bitcast i16* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !20
  %78 = getelementptr i16, i16* %75, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !20
  %81 = trunc <8 x i16> %77 to <8 x i8>
  %82 = trunc <8 x i16> %80 to <8 x i8>
  %83 = bitcast i8* %74 to <8 x i8>*
  store <8 x i8> %81, <8 x i8>* %83, align 1, !alias.scope !23, !noalias !20
  %84 = getelementptr i8, i8* %74, i64 8
  %85 = bitcast i8* %84 to <8 x i8>*
  store <8 x i8> %82, <8 x i8>* %85, align 1, !alias.scope !23, !noalias !20
  %86 = or i64 %72, 16
  %87 = getelementptr i8, i8* %41, i64 %86
  %88 = getelementptr i16, i16* %0, i64 %86
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !20
  %91 = getelementptr i16, i16* %88, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !20
  %94 = trunc <8 x i16> %90 to <8 x i8>
  %95 = trunc <8 x i16> %93 to <8 x i8>
  %96 = bitcast i8* %87 to <8 x i8>*
  store <8 x i8> %94, <8 x i8>* %96, align 1, !alias.scope !23, !noalias !20
  %97 = getelementptr i8, i8* %87, i64 8
  %98 = bitcast i8* %97 to <8 x i8>*
  store <8 x i8> %95, <8 x i8>* %98, align 1, !alias.scope !23, !noalias !20
  %99 = add i64 %72, 32
  %100 = add i64 %73, -2
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %71, !llvm.loop !25

102:                                              ; preds = %71, %60
  %103 = phi i64 [ 0, %60 ], [ %99, %71 ]
  %104 = icmp eq i64 %67, 0
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr i8, i8* %41, i64 %103
  %107 = getelementptr i16, i16* %0, i64 %103
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !20
  %110 = getelementptr i16, i16* %107, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !20
  %113 = trunc <8 x i16> %109 to <8 x i8>
  %114 = trunc <8 x i16> %112 to <8 x i8>
  %115 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %113, <8 x i8>* %115, align 1, !alias.scope !23, !noalias !20
  %116 = getelementptr i8, i8* %106, i64 8
  %117 = bitcast i8* %116 to <8 x i8>*
  store <8 x i8> %114, <8 x i8>* %117, align 1, !alias.scope !23, !noalias !20
  br label %118

118:                                              ; preds = %102, %105
  %119 = icmp eq i64 %47, %61
  br i1 %119, label %183, label %120

120:                                              ; preds = %118, %49, %43
  %121 = phi i8* [ %41, %49 ], [ %41, %43 ], [ %62, %118 ]
  %122 = phi i16* [ %0, %49 ], [ %0, %43 ], [ %63, %118 ]
  %123 = ptrtoint i16* %122 to i64
  %124 = add i64 %1, -1
  %125 = getelementptr i16, i16* %0, i64 %124
  %126 = ptrtoint i16* %125 to i64
  %127 = sub i64 %126, %123
  %128 = lshr i64 %127, 1
  %129 = add nuw i64 %128, 1
  %130 = and i64 %129, 7
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %142, label %132

132:                                              ; preds = %120, %132
  %133 = phi i8* [ %139, %132 ], [ %121, %120 ]
  %134 = phi i16* [ %138, %132 ], [ %122, %120 ]
  %135 = phi i64 [ %140, %132 ], [ %130, %120 ]
  %136 = load i16, i16* %134, align 2
  %137 = trunc i16 %136 to i8
  store i8 %137, i8* %133, align 1
  %138 = getelementptr inbounds i16, i16* %134, i64 1
  %139 = getelementptr inbounds i8, i8* %133, i64 1
  %140 = add i64 %135, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %132, !llvm.loop !26

142:                                              ; preds = %132, %120
  %143 = phi i8* [ undef, %120 ], [ %139, %132 ]
  %144 = phi i8* [ %121, %120 ], [ %139, %132 ]
  %145 = phi i16* [ %122, %120 ], [ %138, %132 ]
  %146 = icmp ult i64 %127, 14
  br i1 %146, label %183, label %147

147:                                              ; preds = %142, %147
  %148 = phi i8* [ %181, %147 ], [ %144, %142 ]
  %149 = phi i16* [ %180, %147 ], [ %145, %142 ]
  %150 = load i16, i16* %149, align 2
  %151 = trunc i16 %150 to i8
  store i8 %151, i8* %148, align 1
  %152 = getelementptr inbounds i16, i16* %149, i64 1
  %153 = getelementptr inbounds i8, i8* %148, i64 1
  %154 = load i16, i16* %152, align 2
  %155 = trunc i16 %154 to i8
  store i8 %155, i8* %153, align 1
  %156 = getelementptr inbounds i16, i16* %149, i64 2
  %157 = getelementptr inbounds i8, i8* %148, i64 2
  %158 = load i16, i16* %156, align 2
  %159 = trunc i16 %158 to i8
  store i8 %159, i8* %157, align 1
  %160 = getelementptr inbounds i16, i16* %149, i64 3
  %161 = getelementptr inbounds i8, i8* %148, i64 3
  %162 = load i16, i16* %160, align 2
  %163 = trunc i16 %162 to i8
  store i8 %163, i8* %161, align 1
  %164 = getelementptr inbounds i16, i16* %149, i64 4
  %165 = getelementptr inbounds i8, i8* %148, i64 4
  %166 = load i16, i16* %164, align 2
  %167 = trunc i16 %166 to i8
  store i8 %167, i8* %165, align 1
  %168 = getelementptr inbounds i16, i16* %149, i64 5
  %169 = getelementptr inbounds i8, i8* %148, i64 5
  %170 = load i16, i16* %168, align 2
  %171 = trunc i16 %170 to i8
  store i8 %171, i8* %169, align 1
  %172 = getelementptr inbounds i16, i16* %149, i64 6
  %173 = getelementptr inbounds i8, i8* %148, i64 6
  %174 = load i16, i16* %172, align 2
  %175 = trunc i16 %174 to i8
  store i8 %175, i8* %173, align 1
  %176 = getelementptr inbounds i16, i16* %149, i64 7
  %177 = getelementptr inbounds i8, i8* %148, i64 7
  %178 = load i16, i16* %176, align 2
  %179 = trunc i16 %178 to i8
  store i8 %179, i8* %177, align 1
  %180 = getelementptr inbounds i16, i16* %149, i64 8
  %181 = getelementptr inbounds i8, i8* %148, i64 8
  %182 = icmp eq i16* %180, %7
  br i1 %182, label %183, label %147, !llvm.loop !27

183:                                              ; preds = %142, %147, %118, %40
  %184 = phi i8* [ %41, %40 ], [ %62, %118 ], [ %143, %142 ], [ %181, %147 ]
  store i8 0, i8* %184, align 1
  %185 = load i8, i8* %11, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %9, i64* %188, align 8
  br label %458

189:                                              ; preds = %183
  %190 = trunc i64 %9 to i8
  store i8 %190, i8* %11, align 1
  br label %458

191:                                              ; preds = %3
  %192 = mul i64 %1, 3
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string.1"* %2, i64 %192, i8 signext 0) #8
  %193 = bitcast %"class.std::__1::basic_string.1"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load i8*, i8** %198, align 8
  br label %202

200:                                              ; preds = %191
  %201 = bitcast %"class.std::__1::basic_string.1"* %2 to i8*
  br label %202

202:                                              ; preds = %200, %197
  %203 = phi i8* [ %199, %197 ], [ %201, %200 ]
  %204 = trunc i64 %1 to i32
  %205 = add nsw i32 %204, -1
  %206 = icmp sgt i32 %205, 0
  br i1 %206, label %207, label %317

207:                                              ; preds = %202, %308
  %208 = phi i32 [ %311, %308 ], [ 0, %202 ]
  %209 = phi i32 [ %312, %308 ], [ 0, %202 ]
  %210 = phi i8 [ %313, %308 ], [ 1, %202 ]
  %211 = sext i32 %209 to i64
  %212 = getelementptr inbounds i16, i16* %0, i64 %211
  %213 = load i16, i16* %212, align 2
  %214 = zext i16 %213 to i32
  %215 = and i32 %214, 64512
  %216 = icmp eq i32 %215, 55296
  br i1 %216, label %217, label %234

217:                                              ; preds = %207
  %218 = add nsw i32 %209, 1
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i16, i16* %0, i64 %219
  %221 = load i16, i16* %220, align 2
  %222 = zext i16 %221 to i32
  %223 = and i32 %222, 64512
  %224 = icmp eq i32 %223, 56320
  br i1 %224, label %225, label %234

225:                                              ; preds = %217
  %226 = shl nuw nsw i32 %214, 10
  %227 = add nuw nsw i32 %226, %222
  %228 = add nsw i32 %227, -56613888
  %229 = icmp ult i32 %228, 55296
  %230 = add nsw i32 %227, -56671232
  %231 = icmp ult i32 %230, 1056768
  %232 = or i1 %229, %231
  %233 = add nsw i32 %209, 2
  br i1 %232, label %247, label %263

234:                                              ; preds = %217, %207
  %235 = and i32 %214, 63488
  %236 = icmp eq i32 %235, 55296
  br i1 %236, label %242, label %237

237:                                              ; preds = %234
  %238 = icmp ult i16 %213, -10240
  %239 = add nsw i32 %214, -57344
  %240 = icmp ult i32 %239, 1056768
  %241 = or i1 %238, %240
  br i1 %241, label %243, label %242

242:                                              ; preds = %237, %234
  br label %243

243:                                              ; preds = %242, %237
  %244 = phi i8 [ 0, %242 ], [ %210, %237 ]
  %245 = phi i32 [ 65533, %242 ], [ %214, %237 ]
  %246 = add nsw i32 %209, 1
  br label %247

247:                                              ; preds = %243, %225
  %248 = phi i8 [ %244, %243 ], [ %210, %225 ]
  %249 = phi i32 [ %246, %243 ], [ %233, %225 ]
  %250 = phi i32 [ %245, %243 ], [ %228, %225 ]
  %251 = icmp ult i32 %250, 128
  br i1 %251, label %252, label %255

252:                                              ; preds = %247
  %253 = trunc i32 %250 to i8
  %254 = add nsw i32 %208, 1
  br label %308

255:                                              ; preds = %247
  %256 = icmp ult i32 %250, 2048
  br i1 %256, label %257, label %261

257:                                              ; preds = %255
  %258 = lshr i32 %250, 6
  %259 = trunc i32 %258 to i8
  %260 = or i8 %259, -64
  br label %295

261:                                              ; preds = %255
  %262 = icmp ult i32 %250, 65536
  br i1 %262, label %263, label %270

263:                                              ; preds = %261, %225
  %264 = phi i32 [ %250, %261 ], [ 65533, %225 ]
  %265 = phi i32 [ %249, %261 ], [ %233, %225 ]
  %266 = phi i8 [ %248, %261 ], [ 0, %225 ]
  %267 = lshr i32 %264, 12
  %268 = trunc i32 %267 to i8
  %269 = or i8 %268, -32
  br label %281

270:                                              ; preds = %261
  %271 = lshr i32 %250, 18
  %272 = trunc i32 %271 to i8
  %273 = or i8 %272, -16
  %274 = add nsw i32 %208, 1
  %275 = sext i32 %208 to i64
  %276 = getelementptr inbounds i8, i8* %203, i64 %275
  store i8 %273, i8* %276, align 1
  %277 = lshr i32 %250, 12
  %278 = trunc i32 %277 to i8
  %279 = and i8 %278, 63
  %280 = or i8 %279, -128
  br label %281

281:                                              ; preds = %270, %263
  %282 = phi i32 [ 2, %270 ], [ 1, %263 ]
  %283 = phi i32 [ %274, %270 ], [ %208, %263 ]
  %284 = phi i8 [ %280, %270 ], [ %269, %263 ]
  %285 = phi i32 [ %249, %270 ], [ %265, %263 ]
  %286 = phi i8 [ %248, %270 ], [ %266, %263 ]
  %287 = phi i32 [ %250, %270 ], [ %264, %263 ]
  %288 = add nsw i32 %208, %282
  %289 = sext i32 %283 to i64
  %290 = getelementptr inbounds i8, i8* %203, i64 %289
  store i8 %284, i8* %290, align 1
  %291 = lshr i32 %287, 6
  %292 = trunc i32 %291 to i8
  %293 = and i8 %292, 63
  %294 = or i8 %293, -128
  br label %295

295:                                              ; preds = %281, %257
  %296 = phi i32 [ %288, %281 ], [ %208, %257 ]
  %297 = phi i8 [ %294, %281 ], [ %260, %257 ]
  %298 = phi i8 [ %286, %281 ], [ %248, %257 ]
  %299 = phi i32 [ %285, %281 ], [ %249, %257 ]
  %300 = phi i32 [ %287, %281 ], [ %250, %257 ]
  %301 = sext i32 %296 to i64
  %302 = getelementptr inbounds i8, i8* %203, i64 %301
  store i8 %297, i8* %302, align 1
  %303 = add nsw i32 %296, 1
  %304 = trunc i32 %300 to i8
  %305 = and i8 %304, 63
  %306 = or i8 %305, -128
  %307 = add nsw i32 %296, 2
  br label %308

308:                                              ; preds = %295, %252
  %309 = phi i32 [ %303, %295 ], [ %208, %252 ]
  %310 = phi i8 [ %306, %295 ], [ %253, %252 ]
  %311 = phi i32 [ %307, %295 ], [ %254, %252 ]
  %312 = phi i32 [ %299, %295 ], [ %249, %252 ]
  %313 = phi i8 [ %298, %295 ], [ %248, %252 ]
  %314 = sext i32 %309 to i64
  %315 = getelementptr inbounds i8, i8* %203, i64 %314
  store i8 %310, i8* %315, align 1
  %316 = icmp slt i32 %312, %205
  br i1 %316, label %207, label %317

317:                                              ; preds = %308, %202
  %318 = phi i32 [ 0, %202 ], [ %311, %308 ]
  %319 = phi i8 [ 1, %202 ], [ %313, %308 ]
  %320 = phi i32 [ 0, %202 ], [ %312, %308 ]
  %321 = icmp slt i32 %320, %204
  br i1 %321, label %322, label %376

322:                                              ; preds = %317
  %323 = sext i32 %320 to i64
  %324 = getelementptr inbounds i16, i16* %0, i64 %323
  %325 = load i16, i16* %324, align 2
  %326 = zext i16 %325 to i32
  %327 = and i32 %326, 63488
  %328 = icmp eq i32 %327, 55296
  br i1 %328, label %344, label %329

329:                                              ; preds = %322
  %330 = icmp ult i16 %325, -10240
  %331 = add nsw i32 %326, -57344
  %332 = icmp ult i32 %331, 1056768
  %333 = or i1 %330, %332
  br i1 %333, label %334, label %344

334:                                              ; preds = %329
  %335 = icmp ult i16 %325, 128
  br i1 %335, label %336, label %338

336:                                              ; preds = %334
  %337 = trunc i16 %325 to i8
  br label %369

338:                                              ; preds = %334
  %339 = icmp ult i16 %325, 2048
  br i1 %339, label %340, label %344

340:                                              ; preds = %338
  %341 = lshr i16 %325, 6
  %342 = trunc i16 %341 to i8
  %343 = or i8 %342, -64
  br label %357

344:                                              ; preds = %338, %329, %322
  %345 = phi i8 [ %319, %338 ], [ 0, %329 ], [ 0, %322 ]
  %346 = phi i32 [ %326, %338 ], [ 65533, %329 ], [ 65533, %322 ]
  %347 = lshr i32 %346, 12
  %348 = trunc i32 %347 to i8
  %349 = or i8 %348, -32
  %350 = add nsw i32 %318, 1
  %351 = sext i32 %318 to i64
  %352 = getelementptr inbounds i8, i8* %203, i64 %351
  store i8 %349, i8* %352, align 1
  %353 = lshr i32 %346, 6
  %354 = trunc i32 %353 to i8
  %355 = and i8 %354, 63
  %356 = or i8 %355, -128
  br label %357

357:                                              ; preds = %344, %340
  %358 = phi i32 [ 2, %344 ], [ 1, %340 ]
  %359 = phi i32 [ %350, %344 ], [ %318, %340 ]
  %360 = phi i8 [ %356, %344 ], [ %343, %340 ]
  %361 = phi i8 [ %345, %344 ], [ %319, %340 ]
  %362 = phi i32 [ %346, %344 ], [ %326, %340 ]
  %363 = add nsw i32 %318, %358
  %364 = sext i32 %359 to i64
  %365 = getelementptr inbounds i8, i8* %203, i64 %364
  store i8 %360, i8* %365, align 1
  %366 = trunc i32 %362 to i8
  %367 = and i8 %366, 63
  %368 = or i8 %367, -128
  br label %369

369:                                              ; preds = %336, %357
  %370 = phi i32 [ %363, %357 ], [ %318, %336 ]
  %371 = phi i8 [ %368, %357 ], [ %337, %336 ]
  %372 = phi i8 [ %361, %357 ], [ %319, %336 ]
  %373 = add nsw i32 %370, 1
  %374 = sext i32 %370 to i64
  %375 = getelementptr inbounds i8, i8* %203, i64 %374
  store i8 %371, i8* %375, align 1
  br label %376

376:                                              ; preds = %369, %317
  %377 = phi i32 [ %318, %317 ], [ %373, %369 ]
  %378 = phi i8 [ %319, %317 ], [ %372, %369 ]
  %379 = icmp ne i8 %378, 0
  %380 = sext i32 %377 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string.1"* %2, i64 %380, i8 signext 0) #8
  %381 = load i8, i8* %194, align 1
  %382 = icmp slt i8 %381, 0
  br i1 %382, label %383, label %386

383:                                              ; preds = %376
  %384 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %385 = load i64, i64* %384, align 8
  br label %388

386:                                              ; preds = %376
  %387 = zext i8 %381 to i64
  br label %388

388:                                              ; preds = %386, %383
  %389 = phi i64 [ %385, %383 ], [ %387, %386 ]
  %390 = icmp ult i64 %389, 23
  br i1 %390, label %395, label %391

391:                                              ; preds = %388
  %392 = add i64 %389, 16
  %393 = and i64 %392, -16
  %394 = add i64 %393, -1
  br label %395

395:                                              ; preds = %391, %388
  %396 = phi i64 [ %394, %391 ], [ 22, %388 ]
  br i1 %382, label %397, label %402

397:                                              ; preds = %395
  %398 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %399 = load i64, i64* %398, align 8
  %400 = and i64 %399, 9223372036854775807
  %401 = add nsw i64 %400, -1
  br label %402

402:                                              ; preds = %397, %395
  %403 = phi i64 [ %401, %397 ], [ 22, %395 ]
  %404 = icmp eq i64 %396, %403
  br i1 %404, label %458, label %405

405:                                              ; preds = %402
  br i1 %382, label %406, label %409

406:                                              ; preds = %405
  %407 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %408 = load i64, i64* %407, align 8
  br label %411

409:                                              ; preds = %405
  %410 = zext i8 %381 to i64
  br label %411

411:                                              ; preds = %409, %406
  %412 = phi i64 [ %408, %406 ], [ %410, %409 ]
  %413 = icmp eq i64 %396, 22
  br i1 %413, label %422, label %414

414:                                              ; preds = %411
  %415 = add i64 %396, 1
  %416 = tail call i8* @_Znwm(i64 %415) #10
  br i1 %382, label %417, label %420

417:                                              ; preds = %414
  %418 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load i8*, i8** %418, align 8
  br label %426

420:                                              ; preds = %414
  %421 = bitcast %"class.std::__1::basic_string.1"* %2 to i8*
  br label %432

422:                                              ; preds = %411
  %423 = bitcast %"class.std::__1::basic_string.1"* %2 to i8*
  %424 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load i8*, i8** %424, align 8
  br i1 %382, label %426, label %432

426:                                              ; preds = %422, %417
  %427 = phi i1 [ true, %417 ], [ false, %422 ]
  %428 = phi i8* [ %419, %417 ], [ %425, %422 ]
  %429 = phi i8* [ %416, %417 ], [ %423, %422 ]
  %430 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %431 = load i64, i64* %430, align 8
  br label %438

432:                                              ; preds = %422, %420
  %433 = phi i1 [ true, %420 ], [ false, %422 ]
  %434 = phi i1 [ false, %420 ], [ true, %422 ]
  %435 = phi i8* [ %421, %420 ], [ %425, %422 ]
  %436 = phi i8* [ %416, %420 ], [ %423, %422 ]
  %437 = zext i8 %381 to i64
  br label %438

438:                                              ; preds = %432, %426
  %439 = phi i1 [ %427, %426 ], [ %433, %432 ]
  %440 = phi i1 [ true, %426 ], [ %434, %432 ]
  %441 = phi i8* [ %428, %426 ], [ %435, %432 ]
  %442 = phi i8* [ %429, %426 ], [ %436, %432 ]
  %443 = phi i64 [ %431, %426 ], [ %437, %432 ]
  %444 = add i64 %443, 1
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %447, label %446

446:                                              ; preds = %438
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %442, i8* align 1 %441, i64 %444, i1 false) #8
  br label %447

447:                                              ; preds = %446, %438
  br i1 %440, label %448, label %449

448:                                              ; preds = %447
  tail call void @_ZdlPv(i8* %441) #10
  br label %449

449:                                              ; preds = %448, %447
  br i1 %439, label %450, label %456

450:                                              ; preds = %449
  %451 = add i64 %396, 1
  %452 = or i64 %451, -9223372036854775808
  %453 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %452, i64* %453, align 8
  %454 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %412, i64* %454, align 8
  %455 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %442, i8** %455, align 8
  br label %458

456:                                              ; preds = %449
  %457 = trunc i64 %412 to i8
  store i8 %457, i8* %194, align 1
  br label %458

458:                                              ; preds = %187, %189, %402, %450, %456
  %459 = phi i1 [ true, %187 ], [ true, %189 ], [ %379, %402 ], [ %379, %450 ], [ %379, %456 ]
  ret i1 %459
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* noalias sret, i16*, i64) local_unnamed_addr #0 {
  %4 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #8
  %5 = tail call zeroext i1 @_ZN4base11UTF16ToUTF8EPKDsmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i16* %1, i64 %2, %"class.std::__1::basic_string.1"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11WideToUTF16EPKwmPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i32*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIwNSt3__111char_traitsIwEEEE(i32* %0, i64 %1) #8
  br i1 %4, label %5, label %191

5:                                                ; preds = %3
  %6 = getelementptr inbounds i32, i32* %0, i64 %1
  %7 = shl nuw i64 %1, 2
  %8 = ashr exact i64 %7, 2
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 9223372036854775807
  %17 = add nsw i64 %16, -1
  br label %18

18:                                               ; preds = %13, %5
  %19 = phi i64 [ %17, %13 ], [ 10, %5 ]
  %20 = icmp ugt i64 %8, %19
  br i1 %20, label %21, label %31

21:                                               ; preds = %18
  br i1 %12, label %22, label %25

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  br label %27

25:                                               ; preds = %21
  %26 = zext i8 %11 to i64
  br label %27

27:                                               ; preds = %25, %22
  %28 = phi i64 [ %24, %22 ], [ %26, %25 ]
  %29 = sub i64 %8, %19
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %19, i64 %29, i64 %28, i64 0, i64 %28, i64 0) #8
  %30 = load i8, i8* %10, align 1
  br label %31

31:                                               ; preds = %27, %18
  %32 = phi i8 [ %11, %18 ], [ %30, %27 ]
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  br label %39

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  br label %39

39:                                               ; preds = %37, %34
  %40 = phi i16* [ %36, %34 ], [ %38, %37 ]
  %41 = icmp eq i64 %1, 0
  br i1 %41, label %183, label %42

42:                                               ; preds = %39
  %43 = shl nsw i64 %1, 2
  %44 = add i64 %43, -4
  %45 = lshr exact i64 %44, 2
  %46 = add nuw nsw i64 %45, 1
  %47 = icmp ult i64 %46, 4
  br i1 %47, label %120, label %48

48:                                               ; preds = %42
  %49 = shl nsw i64 %1, 2
  %50 = add i64 %49, -4
  %51 = lshr exact i64 %50, 2
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = getelementptr i32, i32* %0, i64 %52
  %55 = bitcast i32* %54 to i16*
  %56 = icmp ult i16* %40, %55
  %57 = bitcast i16* %53 to i32*
  %58 = icmp ugt i32* %57, %0
  %59 = and i1 %56, %58
  br i1 %59, label %120, label %60

60:                                               ; preds = %48
  %61 = and i64 %46, 9223372036854775804
  %62 = getelementptr i16, i16* %40, i64 %61
  %63 = getelementptr i32, i32* %0, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %64, 0
  br i1 %68, label %102, label %69

69:                                               ; preds = %60
  %70 = sub nuw nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %99, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %100, %71 ]
  %74 = getelementptr i16, i16* %40, i64 %72
  %75 = getelementptr i32, i32* %0, i64 %72
  %76 = bitcast i32* %75 to <2 x i32>*
  %77 = load <2 x i32>, <2 x i32>* %76, align 4, !alias.scope !28
  %78 = getelementptr i32, i32* %75, i64 2
  %79 = bitcast i32* %78 to <2 x i32>*
  %80 = load <2 x i32>, <2 x i32>* %79, align 4, !alias.scope !28
  %81 = trunc <2 x i32> %77 to <2 x i16>
  %82 = trunc <2 x i32> %80 to <2 x i16>
  %83 = bitcast i16* %74 to <2 x i16>*
  store <2 x i16> %81, <2 x i16>* %83, align 2, !alias.scope !31, !noalias !28
  %84 = getelementptr i16, i16* %74, i64 2
  %85 = bitcast i16* %84 to <2 x i16>*
  store <2 x i16> %82, <2 x i16>* %85, align 2, !alias.scope !31, !noalias !28
  %86 = or i64 %72, 4
  %87 = getelementptr i16, i16* %40, i64 %86
  %88 = getelementptr i32, i32* %0, i64 %86
  %89 = bitcast i32* %88 to <2 x i32>*
  %90 = load <2 x i32>, <2 x i32>* %89, align 4, !alias.scope !28
  %91 = getelementptr i32, i32* %88, i64 2
  %92 = bitcast i32* %91 to <2 x i32>*
  %93 = load <2 x i32>, <2 x i32>* %92, align 4, !alias.scope !28
  %94 = trunc <2 x i32> %90 to <2 x i16>
  %95 = trunc <2 x i32> %93 to <2 x i16>
  %96 = bitcast i16* %87 to <2 x i16>*
  store <2 x i16> %94, <2 x i16>* %96, align 2, !alias.scope !31, !noalias !28
  %97 = getelementptr i16, i16* %87, i64 2
  %98 = bitcast i16* %97 to <2 x i16>*
  store <2 x i16> %95, <2 x i16>* %98, align 2, !alias.scope !31, !noalias !28
  %99 = add i64 %72, 8
  %100 = add i64 %73, -2
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %71, !llvm.loop !33

102:                                              ; preds = %71, %60
  %103 = phi i64 [ 0, %60 ], [ %99, %71 ]
  %104 = icmp eq i64 %67, 0
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr i16, i16* %40, i64 %103
  %107 = getelementptr i32, i32* %0, i64 %103
  %108 = bitcast i32* %107 to <2 x i32>*
  %109 = load <2 x i32>, <2 x i32>* %108, align 4, !alias.scope !28
  %110 = getelementptr i32, i32* %107, i64 2
  %111 = bitcast i32* %110 to <2 x i32>*
  %112 = load <2 x i32>, <2 x i32>* %111, align 4, !alias.scope !28
  %113 = trunc <2 x i32> %109 to <2 x i16>
  %114 = trunc <2 x i32> %112 to <2 x i16>
  %115 = bitcast i16* %106 to <2 x i16>*
  store <2 x i16> %113, <2 x i16>* %115, align 2, !alias.scope !31, !noalias !28
  %116 = getelementptr i16, i16* %106, i64 2
  %117 = bitcast i16* %116 to <2 x i16>*
  store <2 x i16> %114, <2 x i16>* %117, align 2, !alias.scope !31, !noalias !28
  br label %118

118:                                              ; preds = %102, %105
  %119 = icmp eq i64 %46, %61
  br i1 %119, label %183, label %120

120:                                              ; preds = %118, %48, %42
  %121 = phi i16* [ %40, %48 ], [ %40, %42 ], [ %62, %118 ]
  %122 = phi i32* [ %0, %48 ], [ %0, %42 ], [ %63, %118 ]
  %123 = ptrtoint i32* %122 to i64
  %124 = add i64 %1, -1
  %125 = getelementptr i32, i32* %0, i64 %124
  %126 = ptrtoint i32* %125 to i64
  %127 = sub i64 %126, %123
  %128 = lshr i64 %127, 2
  %129 = add nuw nsw i64 %128, 1
  %130 = and i64 %129, 7
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %142, label %132

132:                                              ; preds = %120, %132
  %133 = phi i16* [ %139, %132 ], [ %121, %120 ]
  %134 = phi i32* [ %138, %132 ], [ %122, %120 ]
  %135 = phi i64 [ %140, %132 ], [ %130, %120 ]
  %136 = load i32, i32* %134, align 4
  %137 = trunc i32 %136 to i16
  store i16 %137, i16* %133, align 2
  %138 = getelementptr inbounds i32, i32* %134, i64 1
  %139 = getelementptr inbounds i16, i16* %133, i64 1
  %140 = add i64 %135, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %132, !llvm.loop !34

142:                                              ; preds = %132, %120
  %143 = phi i16* [ undef, %120 ], [ %139, %132 ]
  %144 = phi i16* [ %121, %120 ], [ %139, %132 ]
  %145 = phi i32* [ %122, %120 ], [ %138, %132 ]
  %146 = icmp ult i64 %127, 28
  br i1 %146, label %183, label %147

147:                                              ; preds = %142, %147
  %148 = phi i16* [ %181, %147 ], [ %144, %142 ]
  %149 = phi i32* [ %180, %147 ], [ %145, %142 ]
  %150 = load i32, i32* %149, align 4
  %151 = trunc i32 %150 to i16
  store i16 %151, i16* %148, align 2
  %152 = getelementptr inbounds i32, i32* %149, i64 1
  %153 = getelementptr inbounds i16, i16* %148, i64 1
  %154 = load i32, i32* %152, align 4
  %155 = trunc i32 %154 to i16
  store i16 %155, i16* %153, align 2
  %156 = getelementptr inbounds i32, i32* %149, i64 2
  %157 = getelementptr inbounds i16, i16* %148, i64 2
  %158 = load i32, i32* %156, align 4
  %159 = trunc i32 %158 to i16
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i32, i32* %149, i64 3
  %161 = getelementptr inbounds i16, i16* %148, i64 3
  %162 = load i32, i32* %160, align 4
  %163 = trunc i32 %162 to i16
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i32, i32* %149, i64 4
  %165 = getelementptr inbounds i16, i16* %148, i64 4
  %166 = load i32, i32* %164, align 4
  %167 = trunc i32 %166 to i16
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i32, i32* %149, i64 5
  %169 = getelementptr inbounds i16, i16* %148, i64 5
  %170 = load i32, i32* %168, align 4
  %171 = trunc i32 %170 to i16
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i32, i32* %149, i64 6
  %173 = getelementptr inbounds i16, i16* %148, i64 6
  %174 = load i32, i32* %172, align 4
  %175 = trunc i32 %174 to i16
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i32, i32* %149, i64 7
  %177 = getelementptr inbounds i16, i16* %148, i64 7
  %178 = load i32, i32* %176, align 4
  %179 = trunc i32 %178 to i16
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i32, i32* %149, i64 8
  %181 = getelementptr inbounds i16, i16* %148, i64 8
  %182 = icmp eq i32* %180, %6
  br i1 %182, label %183, label %147, !llvm.loop !35

183:                                              ; preds = %142, %147, %118, %39
  %184 = phi i16* [ %40, %39 ], [ %62, %118 ], [ %143, %142 ], [ %181, %147 ]
  store i16 0, i16* %184, align 2
  %185 = load i8, i8* %10, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %188, align 8
  br label %609

189:                                              ; preds = %183
  %190 = trunc i64 %8 to i8
  store i8 %190, i8* %10, align 1
  br label %609

191:                                              ; preds = %3
  %192 = shl i64 %1, 1
  %193 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %193, i64 0, i32 1, i32 1
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  br label %202

200:                                              ; preds = %191
  %201 = zext i8 %195 to i64
  br label %202

202:                                              ; preds = %200, %197
  %203 = phi i64 [ %199, %197 ], [ %201, %200 ]
  %204 = icmp ugt i64 %192, %203
  br i1 %204, label %205, label %249

205:                                              ; preds = %202
  %206 = sub i64 %192, %203
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %259, label %208

208:                                              ; preds = %205
  br i1 %196, label %209, label %216

209:                                              ; preds = %208
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %211 = load i64, i64* %210, align 8
  %212 = and i64 %211, 9223372036854775807
  %213 = add nsw i64 %212, -1
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  br label %218

216:                                              ; preds = %208
  %217 = zext i8 %195 to i64
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i64 [ %213, %209 ], [ 10, %216 ]
  %220 = phi i64 [ %215, %209 ], [ %217, %216 ]
  %221 = sub i64 %219, %220
  %222 = icmp ult i64 %221, %206
  br i1 %222, label %223, label %227

223:                                              ; preds = %218
  %224 = add i64 %220, %206
  %225 = sub i64 %224, %219
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %219, i64 %225, i64 %220, i64 %220, i64 0, i64 0) #8
  %226 = load i8, i8* %194, align 1
  br label %227

227:                                              ; preds = %223, %218
  %228 = phi i8 [ %226, %223 ], [ %195, %218 ]
  %229 = icmp slt i8 %228, 0
  br i1 %229, label %230, label %233

230:                                              ; preds = %227
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load i16*, i16** %231, align 8
  br label %235

233:                                              ; preds = %227
  %234 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  br label %235

235:                                              ; preds = %233, %230
  %236 = phi i16* [ %232, %230 ], [ %234, %233 ]
  %237 = getelementptr inbounds i16, i16* %236, i64 %220
  %238 = bitcast i16* %237 to i8*
  %239 = shl i64 %206, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %238, i8 0, i64 %239, i1 false) #8
  %240 = add i64 %220, %206
  %241 = load i8, i8* %194, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %245

243:                                              ; preds = %235
  %244 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %240, i64* %244, align 8
  br label %247

245:                                              ; preds = %235
  %246 = trunc i64 %240 to i8
  store i8 %246, i8* %194, align 1
  br label %247

247:                                              ; preds = %245, %243
  %248 = getelementptr inbounds i16, i16* %236, i64 %240
  store i16 0, i16* %248, align 2
  br label %259

249:                                              ; preds = %202
  br i1 %196, label %250, label %255

250:                                              ; preds = %249
  %251 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load i16*, i16** %251, align 8
  %253 = getelementptr inbounds i16, i16* %252, i64 %192
  store i16 0, i16* %253, align 2
  %254 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %192, i64* %254, align 8
  br label %259

255:                                              ; preds = %249
  %256 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %257 = getelementptr inbounds i16, i16* %256, i64 %192
  store i16 0, i16* %257, align 2
  %258 = trunc i64 %192 to i8
  store i8 %258, i8* %194, align 1
  br label %261

259:                                              ; preds = %250, %247, %205
  %260 = load i8, i8* %194, align 1
  br label %261

261:                                              ; preds = %259, %255
  %262 = phi i8 [ %260, %259 ], [ %258, %255 ]
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %264, label %267

264:                                              ; preds = %261
  %265 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load i16*, i16** %265, align 8
  br label %269

267:                                              ; preds = %261
  %268 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  br label %269

269:                                              ; preds = %267, %264
  %270 = phi i16* [ %266, %264 ], [ %268, %267 ]
  %271 = trunc i64 %1 to i32
  %272 = icmp sgt i32 %271, 0
  br i1 %272, label %273, label %313

273:                                              ; preds = %269
  %274 = and i64 %1, 4294967295
  br label %279

275:                                              ; preds = %304
  %276 = and i8 %289, 1
  %277 = icmp ne i8 %276, 0
  %278 = load i8, i8* %194, align 1
  br label %313

279:                                              ; preds = %304, %273
  %280 = phi i32 [ 0, %273 ], [ %308, %304 ]
  %281 = phi i64 [ 0, %273 ], [ %311, %304 ]
  %282 = phi i8 [ 1, %273 ], [ %289, %304 ]
  %283 = getelementptr inbounds i32, i32* %0, i64 %281
  %284 = load i32, i32* %283, align 4
  %285 = icmp ult i32 %284, 55296
  %286 = add i32 %284, -57344
  %287 = icmp ult i32 %286, 1056768
  %288 = or i1 %285, %287
  %289 = select i1 %288, i8 %282, i8 0
  %290 = select i1 %288, i32 %284, i32 65533
  %291 = icmp ult i32 %290, 65536
  br i1 %291, label %292, label %294

292:                                              ; preds = %279
  %293 = trunc i32 %290 to i16
  br label %304

294:                                              ; preds = %279
  %295 = lshr i32 %290, 10
  %296 = trunc i32 %295 to i16
  %297 = add i16 %296, -10304
  %298 = add nuw nsw i32 %280, 1
  %299 = zext i32 %280 to i64
  %300 = getelementptr inbounds i16, i16* %270, i64 %299
  store i16 %297, i16* %300, align 2
  %301 = trunc i32 %290 to i16
  %302 = and i16 %301, 1023
  %303 = or i16 %302, -9216
  br label %304

304:                                              ; preds = %294, %292
  %305 = phi i32 [ 2, %294 ], [ 1, %292 ]
  %306 = phi i32 [ %298, %294 ], [ %280, %292 ]
  %307 = phi i16 [ %303, %294 ], [ %293, %292 ]
  %308 = add nuw nsw i32 %280, %305
  %309 = sext i32 %306 to i64
  %310 = getelementptr inbounds i16, i16* %270, i64 %309
  store i16 %307, i16* %310, align 2
  %311 = add nuw nsw i64 %281, 1
  %312 = icmp eq i64 %311, %274
  br i1 %312, label %275, label %279

313:                                              ; preds = %275, %269
  %314 = phi i8 [ %278, %275 ], [ %262, %269 ]
  %315 = phi i32 [ %308, %275 ], [ 0, %269 ]
  %316 = phi i1 [ %277, %275 ], [ true, %269 ]
  %317 = sext i32 %315 to i64
  %318 = icmp slt i8 %314, 0
  br i1 %318, label %319, label %322

319:                                              ; preds = %313
  %320 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %321 = load i64, i64* %320, align 8
  br label %324

322:                                              ; preds = %313
  %323 = zext i8 %314 to i64
  br label %324

324:                                              ; preds = %322, %319
  %325 = phi i64 [ %321, %319 ], [ %323, %322 ]
  %326 = icmp ult i64 %325, %317
  br i1 %326, label %327, label %371

327:                                              ; preds = %324
  %328 = sub i64 %317, %325
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %381, label %330

330:                                              ; preds = %327
  br i1 %318, label %331, label %338

331:                                              ; preds = %330
  %332 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %333 = load i64, i64* %332, align 8
  %334 = and i64 %333, 9223372036854775807
  %335 = add nsw i64 %334, -1
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %337 = load i64, i64* %336, align 8
  br label %340

338:                                              ; preds = %330
  %339 = zext i8 %314 to i64
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i64 [ %335, %331 ], [ 10, %338 ]
  %342 = phi i64 [ %337, %331 ], [ %339, %338 ]
  %343 = sub i64 %341, %342
  %344 = icmp ult i64 %343, %328
  br i1 %344, label %345, label %349

345:                                              ; preds = %340
  %346 = add i64 %342, %328
  %347 = sub i64 %346, %341
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %341, i64 %347, i64 %342, i64 %342, i64 0, i64 0) #8
  %348 = load i8, i8* %194, align 1
  br label %349

349:                                              ; preds = %345, %340
  %350 = phi i8 [ %348, %345 ], [ %314, %340 ]
  %351 = icmp slt i8 %350, 0
  br i1 %351, label %352, label %355

352:                                              ; preds = %349
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = load i16*, i16** %353, align 8
  br label %357

355:                                              ; preds = %349
  %356 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  br label %357

357:                                              ; preds = %355, %352
  %358 = phi i16* [ %354, %352 ], [ %356, %355 ]
  %359 = getelementptr inbounds i16, i16* %358, i64 %342
  %360 = bitcast i16* %359 to i8*
  %361 = shl i64 %328, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %360, i8 0, i64 %361, i1 false) #8
  %362 = add i64 %342, %328
  %363 = load i8, i8* %194, align 1
  %364 = icmp slt i8 %363, 0
  br i1 %364, label %365, label %367

365:                                              ; preds = %357
  %366 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %362, i64* %366, align 8
  br label %369

367:                                              ; preds = %357
  %368 = trunc i64 %362 to i8
  store i8 %368, i8* %194, align 1
  br label %369

369:                                              ; preds = %367, %365
  %370 = getelementptr inbounds i16, i16* %358, i64 %362
  store i16 0, i16* %370, align 2
  br label %381

371:                                              ; preds = %324
  br i1 %318, label %372, label %377

372:                                              ; preds = %371
  %373 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = load i16*, i16** %373, align 8
  %375 = getelementptr inbounds i16, i16* %374, i64 %317
  store i16 0, i16* %375, align 2
  %376 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %317, i64* %376, align 8
  br label %381

377:                                              ; preds = %371
  %378 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %379 = getelementptr inbounds i16, i16* %378, i64 %317
  store i16 0, i16* %379, align 2
  %380 = trunc i32 %315 to i8
  store i8 %380, i8* %194, align 1
  br label %383

381:                                              ; preds = %372, %369, %327
  %382 = load i8, i8* %194, align 1
  br label %383

383:                                              ; preds = %381, %377
  %384 = phi i8 [ %382, %381 ], [ %380, %377 ]
  %385 = icmp slt i8 %384, 0
  br i1 %385, label %386, label %389

386:                                              ; preds = %383
  %387 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %388 = load i64, i64* %387, align 8
  br label %391

389:                                              ; preds = %383
  %390 = zext i8 %384 to i64
  br label %391

391:                                              ; preds = %389, %386
  %392 = phi i64 [ %388, %386 ], [ %390, %389 ]
  %393 = icmp ult i64 %392, 11
  br i1 %393, label %398, label %394

394:                                              ; preds = %391
  %395 = add i64 %392, 8
  %396 = and i64 %395, -8
  %397 = add i64 %396, -1
  br label %398

398:                                              ; preds = %394, %391
  %399 = phi i64 [ %397, %394 ], [ 10, %391 ]
  br i1 %385, label %400, label %405

400:                                              ; preds = %398
  %401 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %402 = load i64, i64* %401, align 8
  %403 = and i64 %402, 9223372036854775807
  %404 = add nsw i64 %403, -1
  br label %405

405:                                              ; preds = %400, %398
  %406 = phi i64 [ %404, %400 ], [ 10, %398 ]
  %407 = icmp eq i64 %399, %406
  br i1 %407, label %609, label %408

408:                                              ; preds = %405
  br i1 %385, label %409, label %412

409:                                              ; preds = %408
  %410 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %411 = load i64, i64* %410, align 8
  br label %414

412:                                              ; preds = %408
  %413 = zext i8 %384 to i64
  br label %414

414:                                              ; preds = %412, %409
  %415 = phi i64 [ %411, %409 ], [ %413, %412 ]
  %416 = icmp eq i64 %399, 10
  br i1 %416, label %430, label %417

417:                                              ; preds = %414
  %418 = add i64 %399, 1
  %419 = icmp slt i64 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %417
  tail call void @abort() #9
  unreachable

421:                                              ; preds = %417
  %422 = shl i64 %418, 1
  %423 = tail call i8* @_Znwm(i64 %422) #10
  %424 = bitcast i8* %423 to i16*
  br i1 %385, label %425, label %428

425:                                              ; preds = %421
  %426 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %427 = load i16*, i16** %426, align 8
  br label %434

428:                                              ; preds = %421
  %429 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  br label %440

430:                                              ; preds = %414
  %431 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %432 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load i16*, i16** %432, align 8
  br i1 %385, label %434, label %440

434:                                              ; preds = %430, %425
  %435 = phi i1 [ true, %425 ], [ false, %430 ]
  %436 = phi i16* [ %427, %425 ], [ %433, %430 ]
  %437 = phi i16* [ %424, %425 ], [ %431, %430 ]
  %438 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %439 = load i64, i64* %438, align 8
  br label %446

440:                                              ; preds = %430, %428
  %441 = phi i1 [ true, %428 ], [ false, %430 ]
  %442 = phi i1 [ false, %428 ], [ true, %430 ]
  %443 = phi i16* [ %429, %428 ], [ %433, %430 ]
  %444 = phi i16* [ %424, %428 ], [ %431, %430 ]
  %445 = zext i8 %384 to i64
  br label %446

446:                                              ; preds = %440, %434
  %447 = phi i1 [ %435, %434 ], [ %441, %440 ]
  %448 = phi i1 [ true, %434 ], [ %442, %440 ]
  %449 = phi i16* [ %436, %434 ], [ %443, %440 ]
  %450 = phi i16* [ %437, %434 ], [ %444, %440 ]
  %451 = phi i64 [ %439, %434 ], [ %445, %440 ]
  %452 = bitcast i16* %449 to i8*
  %453 = add i64 %451, 1
  %454 = icmp eq i64 %453, 0
  br i1 %454, label %598, label %455

455:                                              ; preds = %446
  %456 = icmp ult i64 %453, 16
  br i1 %456, label %545, label %457

457:                                              ; preds = %455
  %458 = getelementptr i16, i16* %450, i64 %453
  %459 = getelementptr i16, i16* %449, i64 %453
  %460 = icmp ult i16* %450, %459
  %461 = icmp ult i16* %449, %458
  %462 = and i1 %460, %461
  br i1 %462, label %545, label %463

463:                                              ; preds = %457
  %464 = and i64 %453, -16
  %465 = sub i64 %453, %464
  %466 = getelementptr i16, i16* %449, i64 %464
  %467 = getelementptr i16, i16* %450, i64 %464
  %468 = add i64 %464, -16
  %469 = lshr exact i64 %468, 4
  %470 = add nuw nsw i64 %469, 1
  %471 = and i64 %470, 3
  %472 = icmp ult i64 %468, 48
  br i1 %472, label %524, label %473

473:                                              ; preds = %463
  %474 = sub nsw i64 %470, %471
  br label %475

475:                                              ; preds = %475, %473
  %476 = phi i64 [ 0, %473 ], [ %521, %475 ]
  %477 = phi i64 [ %474, %473 ], [ %522, %475 ]
  %478 = getelementptr i16, i16* %449, i64 %476
  %479 = getelementptr i16, i16* %450, i64 %476
  %480 = bitcast i16* %478 to <8 x i16>*
  %481 = load <8 x i16>, <8 x i16>* %480, align 2, !alias.scope !36
  %482 = getelementptr i16, i16* %478, i64 8
  %483 = bitcast i16* %482 to <8 x i16>*
  %484 = load <8 x i16>, <8 x i16>* %483, align 2, !alias.scope !36
  %485 = bitcast i16* %479 to <8 x i16>*
  store <8 x i16> %481, <8 x i16>* %485, align 2, !alias.scope !39, !noalias !36
  %486 = getelementptr i16, i16* %479, i64 8
  %487 = bitcast i16* %486 to <8 x i16>*
  store <8 x i16> %484, <8 x i16>* %487, align 2, !alias.scope !39, !noalias !36
  %488 = or i64 %476, 16
  %489 = getelementptr i16, i16* %449, i64 %488
  %490 = getelementptr i16, i16* %450, i64 %488
  %491 = bitcast i16* %489 to <8 x i16>*
  %492 = load <8 x i16>, <8 x i16>* %491, align 2, !alias.scope !36
  %493 = getelementptr i16, i16* %489, i64 8
  %494 = bitcast i16* %493 to <8 x i16>*
  %495 = load <8 x i16>, <8 x i16>* %494, align 2, !alias.scope !36
  %496 = bitcast i16* %490 to <8 x i16>*
  store <8 x i16> %492, <8 x i16>* %496, align 2, !alias.scope !39, !noalias !36
  %497 = getelementptr i16, i16* %490, i64 8
  %498 = bitcast i16* %497 to <8 x i16>*
  store <8 x i16> %495, <8 x i16>* %498, align 2, !alias.scope !39, !noalias !36
  %499 = or i64 %476, 32
  %500 = getelementptr i16, i16* %449, i64 %499
  %501 = getelementptr i16, i16* %450, i64 %499
  %502 = bitcast i16* %500 to <8 x i16>*
  %503 = load <8 x i16>, <8 x i16>* %502, align 2, !alias.scope !36
  %504 = getelementptr i16, i16* %500, i64 8
  %505 = bitcast i16* %504 to <8 x i16>*
  %506 = load <8 x i16>, <8 x i16>* %505, align 2, !alias.scope !36
  %507 = bitcast i16* %501 to <8 x i16>*
  store <8 x i16> %503, <8 x i16>* %507, align 2, !alias.scope !39, !noalias !36
  %508 = getelementptr i16, i16* %501, i64 8
  %509 = bitcast i16* %508 to <8 x i16>*
  store <8 x i16> %506, <8 x i16>* %509, align 2, !alias.scope !39, !noalias !36
  %510 = or i64 %476, 48
  %511 = getelementptr i16, i16* %449, i64 %510
  %512 = getelementptr i16, i16* %450, i64 %510
  %513 = bitcast i16* %511 to <8 x i16>*
  %514 = load <8 x i16>, <8 x i16>* %513, align 2, !alias.scope !36
  %515 = getelementptr i16, i16* %511, i64 8
  %516 = bitcast i16* %515 to <8 x i16>*
  %517 = load <8 x i16>, <8 x i16>* %516, align 2, !alias.scope !36
  %518 = bitcast i16* %512 to <8 x i16>*
  store <8 x i16> %514, <8 x i16>* %518, align 2, !alias.scope !39, !noalias !36
  %519 = getelementptr i16, i16* %512, i64 8
  %520 = bitcast i16* %519 to <8 x i16>*
  store <8 x i16> %517, <8 x i16>* %520, align 2, !alias.scope !39, !noalias !36
  %521 = add i64 %476, 64
  %522 = add i64 %477, -4
  %523 = icmp eq i64 %522, 0
  br i1 %523, label %524, label %475, !llvm.loop !41

524:                                              ; preds = %475, %463
  %525 = phi i64 [ 0, %463 ], [ %521, %475 ]
  %526 = icmp eq i64 %471, 0
  br i1 %526, label %543, label %527

527:                                              ; preds = %524, %527
  %528 = phi i64 [ %540, %527 ], [ %525, %524 ]
  %529 = phi i64 [ %541, %527 ], [ %471, %524 ]
  %530 = getelementptr i16, i16* %449, i64 %528
  %531 = getelementptr i16, i16* %450, i64 %528
  %532 = bitcast i16* %530 to <8 x i16>*
  %533 = load <8 x i16>, <8 x i16>* %532, align 2, !alias.scope !36
  %534 = getelementptr i16, i16* %530, i64 8
  %535 = bitcast i16* %534 to <8 x i16>*
  %536 = load <8 x i16>, <8 x i16>* %535, align 2, !alias.scope !36
  %537 = bitcast i16* %531 to <8 x i16>*
  store <8 x i16> %533, <8 x i16>* %537, align 2, !alias.scope !39, !noalias !36
  %538 = getelementptr i16, i16* %531, i64 8
  %539 = bitcast i16* %538 to <8 x i16>*
  store <8 x i16> %536, <8 x i16>* %539, align 2, !alias.scope !39, !noalias !36
  %540 = add i64 %528, 16
  %541 = add i64 %529, -1
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %543, label %527, !llvm.loop !42

543:                                              ; preds = %527, %524
  %544 = icmp eq i64 %453, %464
  br i1 %544, label %598, label %545

545:                                              ; preds = %543, %457, %455
  %546 = phi i64 [ %453, %457 ], [ %453, %455 ], [ %465, %543 ]
  %547 = phi i16* [ %449, %457 ], [ %449, %455 ], [ %466, %543 ]
  %548 = phi i16* [ %450, %457 ], [ %450, %455 ], [ %467, %543 ]
  %549 = add i64 %546, -1
  %550 = and i64 %546, 7
  %551 = icmp eq i64 %550, 0
  br i1 %551, label %563, label %552

552:                                              ; preds = %545, %552
  %553 = phi i64 [ %558, %552 ], [ %546, %545 ]
  %554 = phi i16* [ %560, %552 ], [ %547, %545 ]
  %555 = phi i16* [ %559, %552 ], [ %548, %545 ]
  %556 = phi i64 [ %561, %552 ], [ %550, %545 ]
  %557 = load i16, i16* %554, align 2
  store i16 %557, i16* %555, align 2
  %558 = add i64 %553, -1
  %559 = getelementptr inbounds i16, i16* %555, i64 1
  %560 = getelementptr inbounds i16, i16* %554, i64 1
  %561 = add i64 %556, -1
  %562 = icmp eq i64 %561, 0
  br i1 %562, label %563, label %552, !llvm.loop !43

563:                                              ; preds = %552, %545
  %564 = phi i64 [ %546, %545 ], [ %558, %552 ]
  %565 = phi i16* [ %547, %545 ], [ %560, %552 ]
  %566 = phi i16* [ %548, %545 ], [ %559, %552 ]
  %567 = icmp ult i64 %549, 7
  br i1 %567, label %598, label %568

568:                                              ; preds = %563, %568
  %569 = phi i64 [ %594, %568 ], [ %564, %563 ]
  %570 = phi i16* [ %596, %568 ], [ %565, %563 ]
  %571 = phi i16* [ %595, %568 ], [ %566, %563 ]
  %572 = load i16, i16* %570, align 2
  store i16 %572, i16* %571, align 2
  %573 = getelementptr inbounds i16, i16* %571, i64 1
  %574 = getelementptr inbounds i16, i16* %570, i64 1
  %575 = load i16, i16* %574, align 2
  store i16 %575, i16* %573, align 2
  %576 = getelementptr inbounds i16, i16* %571, i64 2
  %577 = getelementptr inbounds i16, i16* %570, i64 2
  %578 = load i16, i16* %577, align 2
  store i16 %578, i16* %576, align 2
  %579 = getelementptr inbounds i16, i16* %571, i64 3
  %580 = getelementptr inbounds i16, i16* %570, i64 3
  %581 = load i16, i16* %580, align 2
  store i16 %581, i16* %579, align 2
  %582 = getelementptr inbounds i16, i16* %571, i64 4
  %583 = getelementptr inbounds i16, i16* %570, i64 4
  %584 = load i16, i16* %583, align 2
  store i16 %584, i16* %582, align 2
  %585 = getelementptr inbounds i16, i16* %571, i64 5
  %586 = getelementptr inbounds i16, i16* %570, i64 5
  %587 = load i16, i16* %586, align 2
  store i16 %587, i16* %585, align 2
  %588 = getelementptr inbounds i16, i16* %571, i64 6
  %589 = getelementptr inbounds i16, i16* %570, i64 6
  %590 = load i16, i16* %589, align 2
  store i16 %590, i16* %588, align 2
  %591 = getelementptr inbounds i16, i16* %571, i64 7
  %592 = getelementptr inbounds i16, i16* %570, i64 7
  %593 = load i16, i16* %592, align 2
  store i16 %593, i16* %591, align 2
  %594 = add i64 %569, -8
  %595 = getelementptr inbounds i16, i16* %571, i64 8
  %596 = getelementptr inbounds i16, i16* %570, i64 8
  %597 = icmp eq i64 %594, 0
  br i1 %597, label %598, label %568, !llvm.loop !44

598:                                              ; preds = %563, %568, %543, %446
  br i1 %448, label %599, label %600

599:                                              ; preds = %598
  tail call void @_ZdlPv(i8* %452) #10
  br label %600

600:                                              ; preds = %599, %598
  br i1 %447, label %601, label %607

601:                                              ; preds = %600
  %602 = add i64 %399, 1
  %603 = or i64 %602, -9223372036854775808
  %604 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %603, i64* %604, align 8
  %605 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %415, i64* %605, align 8
  %606 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %450, i16** %606, align 8
  br label %609

607:                                              ; preds = %600
  %608 = trunc i64 %415 to i8
  store i8 %608, i8* %194, align 1
  br label %609

609:                                              ; preds = %187, %189, %405, %601, %607
  %610 = phi i1 [ true, %187 ], [ true, %189 ], [ %316, %607 ], [ %316, %601 ], [ %316, %405 ]
  ret i1 %610
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11WideToUTF16ENS_16BasicStringPieceIwNSt3__111char_traitsIwEEEE(%"class.std::__1::basic_string"* noalias sret, i32*, i64) local_unnamed_addr #0 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #8
  %5 = tail call zeroext i1 @_ZN4base11WideToUTF16EPKwmPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i32* %1, i64 %2, %"class.std::__1::basic_string"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11UTF16ToWideEPKDsmPNSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEE(i16*, i64, %"class.std::__1::basic_string.12"*) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(i16* %0, i64 %1) #8
  br i1 %4, label %5, label %191

5:                                                ; preds = %3
  %6 = getelementptr inbounds i16, i16* %0, i64 %1
  %7 = shl nuw i64 %1, 1
  %8 = ashr exact i64 %7, 1
  %9 = bitcast %"class.std::__1::basic_string.12"* %2 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 9223372036854775807
  %17 = add nsw i64 %16, -1
  br label %18

18:                                               ; preds = %13, %5
  %19 = phi i64 [ %17, %13 ], [ 4, %5 ]
  %20 = icmp ugt i64 %8, %19
  br i1 %20, label %21, label %31

21:                                               ; preds = %18
  br i1 %12, label %22, label %25

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  br label %27

25:                                               ; preds = %21
  %26 = zext i8 %11 to i64
  br label %27

27:                                               ; preds = %25, %22
  %28 = phi i64 [ %24, %22 ], [ %26, %25 ]
  %29 = sub i64 %8, %19
  tail call void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.12"* %2, i64 %19, i64 %29, i64 %28, i64 0, i64 %28, i64 0) #8
  %30 = load i8, i8* %10, align 1
  br label %31

31:                                               ; preds = %27, %18
  %32 = phi i8 [ %11, %18 ], [ %30, %27 ]
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  br label %39

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string.12"* %2 to i32*
  br label %39

39:                                               ; preds = %37, %34
  %40 = phi i32* [ %36, %34 ], [ %38, %37 ]
  %41 = icmp eq i64 %1, 0
  br i1 %41, label %183, label %42

42:                                               ; preds = %39
  %43 = shl nsw i64 %1, 1
  %44 = add i64 %43, -2
  %45 = lshr exact i64 %44, 1
  %46 = add nuw i64 %45, 1
  %47 = icmp ult i64 %46, 8
  br i1 %47, label %120, label %48

48:                                               ; preds = %42
  %49 = shl nsw i64 %1, 1
  %50 = add i64 %49, -2
  %51 = lshr exact i64 %50, 1
  %52 = add nuw i64 %51, 1
  %53 = getelementptr i32, i32* %40, i64 %52
  %54 = getelementptr i16, i16* %0, i64 %52
  %55 = bitcast i16* %54 to i32*
  %56 = icmp ult i32* %40, %55
  %57 = bitcast i32* %53 to i16*
  %58 = icmp ugt i16* %57, %0
  %59 = and i1 %56, %58
  br i1 %59, label %120, label %60

60:                                               ; preds = %48
  %61 = and i64 %46, -8
  %62 = getelementptr i32, i32* %40, i64 %61
  %63 = getelementptr i16, i16* %0, i64 %61
  %64 = add i64 %61, -8
  %65 = lshr exact i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %64, 0
  br i1 %68, label %102, label %69

69:                                               ; preds = %60
  %70 = sub nuw nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %99, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %100, %71 ]
  %74 = getelementptr i32, i32* %40, i64 %72
  %75 = getelementptr i16, i16* %0, i64 %72
  %76 = bitcast i16* %75 to <4 x i16>*
  %77 = load <4 x i16>, <4 x i16>* %76, align 2, !alias.scope !45
  %78 = getelementptr i16, i16* %75, i64 4
  %79 = bitcast i16* %78 to <4 x i16>*
  %80 = load <4 x i16>, <4 x i16>* %79, align 2, !alias.scope !45
  %81 = zext <4 x i16> %77 to <4 x i32>
  %82 = zext <4 x i16> %80 to <4 x i32>
  %83 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %83, align 4, !alias.scope !48, !noalias !45
  %84 = getelementptr i32, i32* %74, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %85, align 4, !alias.scope !48, !noalias !45
  %86 = or i64 %72, 8
  %87 = getelementptr i32, i32* %40, i64 %86
  %88 = getelementptr i16, i16* %0, i64 %86
  %89 = bitcast i16* %88 to <4 x i16>*
  %90 = load <4 x i16>, <4 x i16>* %89, align 2, !alias.scope !45
  %91 = getelementptr i16, i16* %88, i64 4
  %92 = bitcast i16* %91 to <4 x i16>*
  %93 = load <4 x i16>, <4 x i16>* %92, align 2, !alias.scope !45
  %94 = zext <4 x i16> %90 to <4 x i32>
  %95 = zext <4 x i16> %93 to <4 x i32>
  %96 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %94, <4 x i32>* %96, align 4, !alias.scope !48, !noalias !45
  %97 = getelementptr i32, i32* %87, i64 4
  %98 = bitcast i32* %97 to <4 x i32>*
  store <4 x i32> %95, <4 x i32>* %98, align 4, !alias.scope !48, !noalias !45
  %99 = add i64 %72, 16
  %100 = add i64 %73, -2
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %71, !llvm.loop !50

102:                                              ; preds = %71, %60
  %103 = phi i64 [ 0, %60 ], [ %99, %71 ]
  %104 = icmp eq i64 %67, 0
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr i32, i32* %40, i64 %103
  %107 = getelementptr i16, i16* %0, i64 %103
  %108 = bitcast i16* %107 to <4 x i16>*
  %109 = load <4 x i16>, <4 x i16>* %108, align 2, !alias.scope !45
  %110 = getelementptr i16, i16* %107, i64 4
  %111 = bitcast i16* %110 to <4 x i16>*
  %112 = load <4 x i16>, <4 x i16>* %111, align 2, !alias.scope !45
  %113 = zext <4 x i16> %109 to <4 x i32>
  %114 = zext <4 x i16> %112 to <4 x i32>
  %115 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %115, align 4, !alias.scope !48, !noalias !45
  %116 = getelementptr i32, i32* %106, i64 4
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %114, <4 x i32>* %117, align 4, !alias.scope !48, !noalias !45
  br label %118

118:                                              ; preds = %102, %105
  %119 = icmp eq i64 %46, %61
  br i1 %119, label %183, label %120

120:                                              ; preds = %118, %48, %42
  %121 = phi i32* [ %40, %48 ], [ %40, %42 ], [ %62, %118 ]
  %122 = phi i16* [ %0, %48 ], [ %0, %42 ], [ %63, %118 ]
  %123 = ptrtoint i16* %122 to i64
  %124 = add i64 %1, -1
  %125 = getelementptr i16, i16* %0, i64 %124
  %126 = ptrtoint i16* %125 to i64
  %127 = sub i64 %126, %123
  %128 = lshr i64 %127, 1
  %129 = add nuw i64 %128, 1
  %130 = and i64 %129, 7
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %142, label %132

132:                                              ; preds = %120, %132
  %133 = phi i32* [ %139, %132 ], [ %121, %120 ]
  %134 = phi i16* [ %138, %132 ], [ %122, %120 ]
  %135 = phi i64 [ %140, %132 ], [ %130, %120 ]
  %136 = load i16, i16* %134, align 2
  %137 = zext i16 %136 to i32
  store i32 %137, i32* %133, align 4
  %138 = getelementptr inbounds i16, i16* %134, i64 1
  %139 = getelementptr inbounds i32, i32* %133, i64 1
  %140 = add i64 %135, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %132, !llvm.loop !51

142:                                              ; preds = %132, %120
  %143 = phi i32* [ undef, %120 ], [ %139, %132 ]
  %144 = phi i32* [ %121, %120 ], [ %139, %132 ]
  %145 = phi i16* [ %122, %120 ], [ %138, %132 ]
  %146 = icmp ult i64 %127, 14
  br i1 %146, label %183, label %147

147:                                              ; preds = %142, %147
  %148 = phi i32* [ %181, %147 ], [ %144, %142 ]
  %149 = phi i16* [ %180, %147 ], [ %145, %142 ]
  %150 = load i16, i16* %149, align 2
  %151 = zext i16 %150 to i32
  store i32 %151, i32* %148, align 4
  %152 = getelementptr inbounds i16, i16* %149, i64 1
  %153 = getelementptr inbounds i32, i32* %148, i64 1
  %154 = load i16, i16* %152, align 2
  %155 = zext i16 %154 to i32
  store i32 %155, i32* %153, align 4
  %156 = getelementptr inbounds i16, i16* %149, i64 2
  %157 = getelementptr inbounds i32, i32* %148, i64 2
  %158 = load i16, i16* %156, align 2
  %159 = zext i16 %158 to i32
  store i32 %159, i32* %157, align 4
  %160 = getelementptr inbounds i16, i16* %149, i64 3
  %161 = getelementptr inbounds i32, i32* %148, i64 3
  %162 = load i16, i16* %160, align 2
  %163 = zext i16 %162 to i32
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds i16, i16* %149, i64 4
  %165 = getelementptr inbounds i32, i32* %148, i64 4
  %166 = load i16, i16* %164, align 2
  %167 = zext i16 %166 to i32
  store i32 %167, i32* %165, align 4
  %168 = getelementptr inbounds i16, i16* %149, i64 5
  %169 = getelementptr inbounds i32, i32* %148, i64 5
  %170 = load i16, i16* %168, align 2
  %171 = zext i16 %170 to i32
  store i32 %171, i32* %169, align 4
  %172 = getelementptr inbounds i16, i16* %149, i64 6
  %173 = getelementptr inbounds i32, i32* %148, i64 6
  %174 = load i16, i16* %172, align 2
  %175 = zext i16 %174 to i32
  store i32 %175, i32* %173, align 4
  %176 = getelementptr inbounds i16, i16* %149, i64 7
  %177 = getelementptr inbounds i32, i32* %148, i64 7
  %178 = load i16, i16* %176, align 2
  %179 = zext i16 %178 to i32
  store i32 %179, i32* %177, align 4
  %180 = getelementptr inbounds i16, i16* %149, i64 8
  %181 = getelementptr inbounds i32, i32* %148, i64 8
  %182 = icmp eq i16* %180, %6
  br i1 %182, label %183, label %147, !llvm.loop !52

183:                                              ; preds = %142, %147, %118, %39
  %184 = phi i32* [ %40, %39 ], [ %62, %118 ], [ %143, %142 ], [ %181, %147 ]
  store i32 0, i32* %184, align 4
  %185 = load i8, i8* %10, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %188, align 8
  br label %307

189:                                              ; preds = %183
  %190 = trunc i64 %8 to i8
  store i8 %190, i8* %10, align 1
  br label %307

191:                                              ; preds = %3
  tail call void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6resizeEmw(%"class.std::__1::basic_string.12"* %2, i64 %1, i32 signext 0) #8
  %192 = bitcast %"class.std::__1::basic_string.12"* %2 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %192, i64 0, i32 1, i32 1
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i32*, i32** %197, align 8
  br label %201

199:                                              ; preds = %191
  %200 = bitcast %"class.std::__1::basic_string.12"* %2 to i32*
  br label %201

201:                                              ; preds = %199, %196
  %202 = phi i32* [ %198, %196 ], [ %200, %199 ]
  %203 = trunc i64 %1 to i32
  %204 = add nsw i32 %203, -1
  %205 = icmp sgt i32 %204, 0
  br i1 %205, label %206, label %253

206:                                              ; preds = %201, %243
  %207 = phi i64 [ %248, %243 ], [ 0, %201 ]
  %208 = phi i32 [ %247, %243 ], [ 0, %201 ]
  %209 = phi i8 [ %245, %243 ], [ 1, %201 ]
  %210 = zext i32 %208 to i64
  %211 = getelementptr inbounds i16, i16* %0, i64 %210
  %212 = load i16, i16* %211, align 2
  %213 = zext i16 %212 to i32
  %214 = and i32 %213, 64512
  %215 = icmp eq i32 %214, 55296
  br i1 %215, label %216, label %234

216:                                              ; preds = %206
  %217 = add nuw nsw i32 %208, 1
  %218 = zext i32 %217 to i64
  %219 = getelementptr inbounds i16, i16* %0, i64 %218
  %220 = load i16, i16* %219, align 2
  %221 = zext i16 %220 to i32
  %222 = and i32 %221, 64512
  %223 = icmp eq i32 %222, 56320
  br i1 %223, label %224, label %234

224:                                              ; preds = %216
  %225 = shl nuw nsw i32 %213, 10
  %226 = add nuw nsw i32 %225, %221
  %227 = add nsw i32 %226, -56613888
  %228 = icmp ult i32 %227, 55296
  %229 = add nsw i32 %226, -56671232
  %230 = icmp ult i32 %229, 1056768
  %231 = or i1 %228, %230
  %232 = select i1 %231, i8 %209, i8 0
  %233 = select i1 %231, i32 %227, i32 65533
  br label %243

234:                                              ; preds = %216, %206
  %235 = and i32 %213, 63488
  %236 = icmp eq i32 %235, 55296
  br i1 %236, label %242, label %237

237:                                              ; preds = %234
  %238 = icmp ult i16 %212, -10240
  %239 = add nsw i32 %213, -57344
  %240 = icmp ult i32 %239, 1056768
  %241 = or i1 %238, %240
  br i1 %241, label %243, label %242

242:                                              ; preds = %237, %234
  br label %243

243:                                              ; preds = %237, %242, %224
  %244 = phi i32 [ 2, %224 ], [ 1, %242 ], [ 1, %237 ]
  %245 = phi i8 [ %232, %224 ], [ 0, %242 ], [ %209, %237 ]
  %246 = phi i32 [ %233, %224 ], [ 65533, %242 ], [ %213, %237 ]
  %247 = add nuw nsw i32 %208, %244
  %248 = add nuw i64 %207, 1
  %249 = getelementptr inbounds i32, i32* %202, i64 %207
  store i32 %246, i32* %249, align 4
  %250 = icmp slt i32 %247, %204
  br i1 %250, label %206, label %251

251:                                              ; preds = %243
  %252 = trunc i64 %248 to i32
  br label %253

253:                                              ; preds = %251, %201
  %254 = phi i32 [ 0, %201 ], [ %252, %251 ]
  %255 = phi i8 [ 1, %201 ], [ %245, %251 ]
  %256 = phi i32 [ 0, %201 ], [ %247, %251 ]
  %257 = icmp slt i32 %256, %203
  br i1 %257, label %258, label %277

258:                                              ; preds = %253
  %259 = sext i32 %256 to i64
  %260 = getelementptr inbounds i16, i16* %0, i64 %259
  %261 = load i16, i16* %260, align 2
  %262 = zext i16 %261 to i32
  %263 = and i32 %262, 63488
  %264 = icmp eq i32 %263, 55296
  br i1 %264, label %270, label %265

265:                                              ; preds = %258
  %266 = icmp ult i16 %261, -10240
  %267 = add nsw i32 %262, -57344
  %268 = icmp ult i32 %267, 1056768
  %269 = or i1 %266, %268
  br i1 %269, label %271, label %270

270:                                              ; preds = %265, %258
  br label %271

271:                                              ; preds = %270, %265
  %272 = phi i8 [ 0, %270 ], [ %255, %265 ]
  %273 = phi i32 [ 65533, %270 ], [ %262, %265 ]
  %274 = add nsw i32 %254, 1
  %275 = sext i32 %254 to i64
  %276 = getelementptr inbounds i32, i32* %202, i64 %275
  store i32 %273, i32* %276, align 4
  br label %277

277:                                              ; preds = %271, %253
  %278 = phi i32 [ %274, %271 ], [ %254, %253 ]
  %279 = phi i8 [ %272, %271 ], [ %255, %253 ]
  %280 = icmp ne i8 %279, 0
  %281 = sext i32 %278 to i64
  tail call void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6resizeEmw(%"class.std::__1::basic_string.12"* %2, i64 %281, i32 signext 0) #8
  %282 = load i8, i8* %193, align 1
  %283 = icmp slt i8 %282, 0
  br i1 %283, label %284, label %287

284:                                              ; preds = %277
  %285 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %286 = load i64, i64* %285, align 8
  br label %289

287:                                              ; preds = %277
  %288 = zext i8 %282 to i64
  br label %289

289:                                              ; preds = %287, %284
  %290 = phi i64 [ %286, %284 ], [ %288, %287 ]
  %291 = icmp ult i64 %290, 5
  br i1 %291, label %296, label %292

292:                                              ; preds = %289
  %293 = add i64 %290, 4
  %294 = and i64 %293, -4
  %295 = add i64 %294, -1
  br label %296

296:                                              ; preds = %292, %289
  %297 = phi i64 [ %295, %292 ], [ 4, %289 ]
  br i1 %283, label %298, label %303

298:                                              ; preds = %296
  %299 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %300 = load i64, i64* %299, align 8
  %301 = and i64 %300, 9223372036854775807
  %302 = add nsw i64 %301, -1
  br label %303

303:                                              ; preds = %298, %296
  %304 = phi i64 [ %302, %298 ], [ 4, %296 ]
  %305 = icmp eq i64 %297, %304
  br i1 %305, label %307, label %306

306:                                              ; preds = %303
  tail call void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE18__shrink_or_extendEm(%"class.std::__1::basic_string.12"* %2, i64 %297) #8
  br label %307

307:                                              ; preds = %187, %189, %303, %306
  %308 = phi i1 [ true, %187 ], [ true, %189 ], [ %280, %303 ], [ %280, %306 ]
  ret i1 %308
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11UTF16ToWideENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.12"* noalias sret, i16*, i64) local_unnamed_addr #0 {
  %4 = bitcast %"class.std::__1::basic_string.12"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #8
  %5 = tail call zeroext i1 @_ZN4base11UTF16ToWideEPKDsmPNSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEE(i16* %1, i64 %2, %"class.std::__1::basic_string.12"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base10UTF8ToWideEPKcmPNSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEE(i8*, i64, %"class.std::__1::basic_string.12"*) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %0, i64 %1) #8
  br i1 %4, label %5, label %128

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8, i8* %0, i64 %1
  %7 = bitcast %"class.std::__1::basic_string.12"* %2 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 9223372036854775807
  %15 = add nsw i64 %14, -1
  br label %16

16:                                               ; preds = %11, %5
  %17 = phi i64 [ %15, %11 ], [ 4, %5 ]
  %18 = icmp ult i64 %17, %1
  br i1 %18, label %19, label %29

19:                                               ; preds = %16
  br i1 %10, label %20, label %23

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %25

23:                                               ; preds = %19
  %24 = zext i8 %9 to i64
  br label %25

25:                                               ; preds = %23, %20
  %26 = phi i64 [ %22, %20 ], [ %24, %23 ]
  %27 = sub i64 %1, %17
  tail call void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.12"* %2, i64 %17, i64 %27, i64 %26, i64 0, i64 %26, i64 0) #8
  %28 = load i8, i8* %8, align 1
  br label %29

29:                                               ; preds = %25, %16
  %30 = phi i8 [ %9, %16 ], [ %28, %25 ]
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  br label %37

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string.12"* %2 to i32*
  br label %37

37:                                               ; preds = %35, %32
  %38 = phi i32* [ %34, %32 ], [ %36, %35 ]
  %39 = bitcast i32* %38 to i8*
  %40 = icmp eq i64 %1, 0
  br i1 %40, label %120, label %41

41:                                               ; preds = %37
  %42 = icmp ult i64 %1, 8
  br i1 %42, label %109, label %43

43:                                               ; preds = %41
  %44 = getelementptr i32, i32* %38, i64 %1
  %45 = bitcast i32* %44 to i8*
  %46 = icmp ugt i8* %6, %39
  %47 = icmp ugt i8* %45, %0
  %48 = and i1 %46, %47
  br i1 %48, label %109, label %49

49:                                               ; preds = %43
  %50 = and i64 %1, -8
  %51 = getelementptr i32, i32* %38, i64 %50
  %52 = getelementptr i8, i8* %0, i64 %50
  %53 = add i64 %50, -8
  %54 = lshr exact i64 %53, 3
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %53, 0
  br i1 %57, label %91, label %58

58:                                               ; preds = %49
  %59 = sub nuw nsw i64 %55, %56
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %88, %60 ]
  %62 = phi i64 [ %59, %58 ], [ %89, %60 ]
  %63 = getelementptr i32, i32* %38, i64 %61
  %64 = getelementptr i8, i8* %0, i64 %61
  %65 = bitcast i8* %64 to <4 x i8>*
  %66 = load <4 x i8>, <4 x i8>* %65, align 1, !alias.scope !53
  %67 = getelementptr i8, i8* %64, i64 4
  %68 = bitcast i8* %67 to <4 x i8>*
  %69 = load <4 x i8>, <4 x i8>* %68, align 1, !alias.scope !53
  %70 = sext <4 x i8> %66 to <4 x i32>
  %71 = sext <4 x i8> %69 to <4 x i32>
  %72 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %70, <4 x i32>* %72, align 4, !alias.scope !56, !noalias !53
  %73 = getelementptr i32, i32* %63, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %74, align 4, !alias.scope !56, !noalias !53
  %75 = or i64 %61, 8
  %76 = getelementptr i32, i32* %38, i64 %75
  %77 = getelementptr i8, i8* %0, i64 %75
  %78 = bitcast i8* %77 to <4 x i8>*
  %79 = load <4 x i8>, <4 x i8>* %78, align 1, !alias.scope !53
  %80 = getelementptr i8, i8* %77, i64 4
  %81 = bitcast i8* %80 to <4 x i8>*
  %82 = load <4 x i8>, <4 x i8>* %81, align 1, !alias.scope !53
  %83 = sext <4 x i8> %79 to <4 x i32>
  %84 = sext <4 x i8> %82 to <4 x i32>
  %85 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %85, align 4, !alias.scope !56, !noalias !53
  %86 = getelementptr i32, i32* %76, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> %84, <4 x i32>* %87, align 4, !alias.scope !56, !noalias !53
  %88 = add i64 %61, 16
  %89 = add i64 %62, -2
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %60, !llvm.loop !58

91:                                               ; preds = %60, %49
  %92 = phi i64 [ 0, %49 ], [ %88, %60 ]
  %93 = icmp eq i64 %56, 0
  br i1 %93, label %107, label %94

94:                                               ; preds = %91
  %95 = getelementptr i32, i32* %38, i64 %92
  %96 = getelementptr i8, i8* %0, i64 %92
  %97 = bitcast i8* %96 to <4 x i8>*
  %98 = load <4 x i8>, <4 x i8>* %97, align 1, !alias.scope !53
  %99 = getelementptr i8, i8* %96, i64 4
  %100 = bitcast i8* %99 to <4 x i8>*
  %101 = load <4 x i8>, <4 x i8>* %100, align 1, !alias.scope !53
  %102 = sext <4 x i8> %98 to <4 x i32>
  %103 = sext <4 x i8> %101 to <4 x i32>
  %104 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %104, align 4, !alias.scope !56, !noalias !53
  %105 = getelementptr i32, i32* %95, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %103, <4 x i32>* %106, align 4, !alias.scope !56, !noalias !53
  br label %107

107:                                              ; preds = %91, %94
  %108 = icmp eq i64 %50, %1
  br i1 %108, label %120, label %109

109:                                              ; preds = %107, %43, %41
  %110 = phi i32* [ %38, %43 ], [ %38, %41 ], [ %51, %107 ]
  %111 = phi i8* [ %0, %43 ], [ %0, %41 ], [ %52, %107 ]
  br label %112

112:                                              ; preds = %109, %112
  %113 = phi i32* [ %118, %112 ], [ %110, %109 ]
  %114 = phi i8* [ %117, %112 ], [ %111, %109 ]
  %115 = load i8, i8* %114, align 1
  %116 = sext i8 %115 to i32
  store i32 %116, i32* %113, align 4
  %117 = getelementptr inbounds i8, i8* %114, i64 1
  %118 = getelementptr inbounds i32, i32* %113, i64 1
  %119 = icmp eq i8* %117, %6
  br i1 %119, label %120, label %112, !llvm.loop !59

120:                                              ; preds = %112, %107, %37
  %121 = phi i32* [ %38, %37 ], [ %51, %107 ], [ %118, %112 ]
  store i32 0, i32* %121, align 4
  %122 = load i8, i8* %8, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1, i64* %125, align 8
  br label %272

126:                                              ; preds = %120
  %127 = trunc i64 %1 to i8
  store i8 %127, i8* %8, align 1
  br label %272

128:                                              ; preds = %3
  tail call void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6resizeEmw(%"class.std::__1::basic_string.12"* %2, i64 %1, i32 signext 0) #8
  %129 = bitcast %"class.std::__1::basic_string.12"* %2 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %129, i64 0, i32 1, i32 1
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  br label %138

136:                                              ; preds = %128
  %137 = bitcast %"class.std::__1::basic_string.12"* %2 to i32*
  br label %138

138:                                              ; preds = %136, %133
  %139 = phi i32* [ %135, %133 ], [ %137, %136 ]
  %140 = trunc i64 %1 to i32
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %146, label %244

142:                                              ; preds = %232
  %143 = and i8 %239, 1
  %144 = icmp ne i8 %143, 0
  %145 = and i64 %241, 4294967295
  br label %244

146:                                              ; preds = %138, %232
  %147 = phi i64 [ %241, %232 ], [ 0, %138 ]
  %148 = phi i32 [ %233, %232 ], [ 0, %138 ]
  %149 = phi i8 [ %239, %232 ], [ 1, %138 ]
  %150 = add nsw i32 %148, 1
  %151 = sext i32 %148 to i64
  %152 = getelementptr inbounds i8, i8* %0, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = icmp sgt i8 %153, -1
  br i1 %155, label %232, label %156

156:                                              ; preds = %146
  %157 = icmp eq i32 %150, %140
  br i1 %157, label %232, label %158

158:                                              ; preds = %156
  %159 = icmp ugt i8 %153, -33
  br i1 %159, label %160, label %215

160:                                              ; preds = %158
  %161 = icmp ult i8 %153, -16
  br i1 %161, label %162, label %178

162:                                              ; preds = %160
  %163 = and i32 %154, 15
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = sext i32 %150 to i64
  %169 = getelementptr inbounds i8, i8* %0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = lshr i8 %170, 5
  %172 = zext i8 %171 to i32
  %173 = shl i32 1, %172
  %174 = and i32 %173, %167
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %232, label %176

176:                                              ; preds = %162
  %177 = and i8 %170, 63
  br label %206

178:                                              ; preds = %160
  %179 = add nsw i32 %154, -240
  %180 = icmp slt i32 %179, 5
  br i1 %180, label %181, label %232

181:                                              ; preds = %178
  %182 = sext i32 %150 to i64
  %183 = getelementptr inbounds i8, i8* %0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = lshr i32 %185, 4
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.2, i64 0, i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = sext i8 %189 to i32
  %191 = shl i32 1, %179
  %192 = and i32 %191, %190
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %232, label %194

194:                                              ; preds = %181
  %195 = add nsw i32 %148, 2
  %196 = icmp eq i32 %195, %140
  br i1 %196, label %232, label %197

197:                                              ; preds = %194
  %198 = shl nsw i32 %179, 6
  %199 = and i32 %185, 63
  %200 = or i32 %199, %198
  %201 = sext i32 %195 to i64
  %202 = getelementptr inbounds i8, i8* %0, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = xor i8 %203, -128
  %205 = icmp ult i8 %204, 64
  br i1 %205, label %206, label %232

206:                                              ; preds = %197, %176
  %207 = phi i32 [ %150, %176 ], [ %195, %197 ]
  %208 = phi i32 [ %163, %176 ], [ %200, %197 ]
  %209 = phi i8 [ %177, %176 ], [ %204, %197 ]
  %210 = shl nsw i32 %208, 6
  %211 = zext i8 %209 to i32
  %212 = or i32 %210, %211
  %213 = add nsw i32 %207, 1
  %214 = icmp eq i32 %213, %140
  br i1 %214, label %232, label %219

215:                                              ; preds = %158
  %216 = icmp ugt i8 %153, -63
  br i1 %216, label %217, label %232

217:                                              ; preds = %215
  %218 = and i32 %154, 31
  br label %219

219:                                              ; preds = %217, %206
  %220 = phi i32 [ %213, %206 ], [ %150, %217 ]
  %221 = phi i32 [ %212, %206 ], [ %218, %217 ]
  %222 = sext i32 %220 to i64
  %223 = getelementptr inbounds i8, i8* %0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = xor i8 %224, -128
  %226 = icmp ult i8 %225, 64
  br i1 %226, label %227, label %232

227:                                              ; preds = %219
  %228 = zext i8 %225 to i32
  %229 = shl i32 %221, 6
  %230 = or i32 %229, %228
  %231 = add nsw i32 %220, 1
  br label %232

232:                                              ; preds = %227, %219, %215, %206, %197, %194, %181, %178, %162, %156, %146
  %233 = phi i32 [ %150, %146 ], [ %231, %227 ], [ %220, %219 ], [ %140, %206 ], [ %150, %162 ], [ %195, %197 ], [ %140, %194 ], [ %150, %181 ], [ %150, %178 ], [ %150, %215 ], [ %140, %156 ]
  %234 = phi i32 [ %154, %146 ], [ %230, %227 ], [ -1, %219 ], [ -1, %206 ], [ -1, %162 ], [ -1, %197 ], [ -1, %194 ], [ -1, %181 ], [ -1, %178 ], [ -1, %215 ], [ -1, %156 ]
  %235 = icmp ult i32 %234, 55296
  %236 = add i32 %234, -57344
  %237 = icmp ult i32 %236, 1056768
  %238 = or i1 %235, %237
  %239 = select i1 %238, i8 %149, i8 0
  %240 = select i1 %238, i32 %234, i32 65533
  %241 = add nuw i64 %147, 1
  %242 = getelementptr inbounds i32, i32* %139, i64 %147
  store i32 %240, i32* %242, align 4
  %243 = icmp slt i32 %233, %140
  br i1 %243, label %146, label %142

244:                                              ; preds = %142, %138
  %245 = phi i64 [ %145, %142 ], [ 0, %138 ]
  %246 = phi i1 [ %144, %142 ], [ true, %138 ]
  tail call void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6resizeEmw(%"class.std::__1::basic_string.12"* %2, i64 %245, i32 signext 0) #8
  %247 = load i8, i8* %130, align 1
  %248 = icmp slt i8 %247, 0
  br i1 %248, label %249, label %252

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %251 = load i64, i64* %250, align 8
  br label %254

252:                                              ; preds = %244
  %253 = zext i8 %247 to i64
  br label %254

254:                                              ; preds = %252, %249
  %255 = phi i64 [ %251, %249 ], [ %253, %252 ]
  %256 = icmp ult i64 %255, 5
  br i1 %256, label %261, label %257

257:                                              ; preds = %254
  %258 = add i64 %255, 4
  %259 = and i64 %258, -4
  %260 = add i64 %259, -1
  br label %261

261:                                              ; preds = %257, %254
  %262 = phi i64 [ %260, %257 ], [ 4, %254 ]
  br i1 %248, label %263, label %268

263:                                              ; preds = %261
  %264 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %265 = load i64, i64* %264, align 8
  %266 = and i64 %265, 9223372036854775807
  %267 = add nsw i64 %266, -1
  br label %268

268:                                              ; preds = %263, %261
  %269 = phi i64 [ %267, %263 ], [ 4, %261 ]
  %270 = icmp eq i64 %262, %269
  br i1 %270, label %272, label %271

271:                                              ; preds = %268
  tail call void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE18__shrink_or_extendEm(%"class.std::__1::basic_string.12"* %2, i64 %262) #8
  br label %272

272:                                              ; preds = %124, %126, %268, %271
  %273 = phi i1 [ true, %124 ], [ true, %126 ], [ %246, %268 ], [ %246, %271 ]
  ret i1 %273
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base10UTF8ToWideENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.12"* noalias sret, i8*, i64) local_unnamed_addr #0 {
  %4 = bitcast %"class.std::__1::basic_string.12"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #8
  %5 = tail call zeroext i1 @_ZN4base10UTF8ToWideEPKcmPNSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEE(i8* %1, i64 %2, %"class.std::__1::basic_string.12"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base10WideToUTF8EPKwmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32*, i64, %"class.std::__1::basic_string.1"*) local_unnamed_addr #0 {
  %4 = bitcast i32* %0 to i8*
  %5 = tail call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIwNSt3__111char_traitsIwEEEE(i32* %0, i64 %1) #8
  br i1 %5, label %6, label %191

6:                                                ; preds = %3
  %7 = getelementptr inbounds i32, i32* %0, i64 %1
  %8 = shl nuw i64 %1, 2
  %9 = ashr exact i64 %8, 2
  %10 = bitcast %"class.std::__1::basic_string.1"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 9223372036854775807
  %18 = add nsw i64 %17, -1
  br label %19

19:                                               ; preds = %14, %6
  %20 = phi i64 [ %18, %14 ], [ 22, %6 ]
  %21 = icmp ugt i64 %9, %20
  br i1 %21, label %22, label %32

22:                                               ; preds = %19
  br i1 %13, label %23, label %26

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  br label %28

26:                                               ; preds = %22
  %27 = zext i8 %12 to i64
  br label %28

28:                                               ; preds = %26, %23
  %29 = phi i64 [ %25, %23 ], [ %27, %26 ]
  %30 = sub i64 %9, %20
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.1"* %2, i64 %20, i64 %30, i64 %29, i64 0, i64 %29, i64 0) #8
  %31 = load i8, i8* %11, align 1
  br label %32

32:                                               ; preds = %28, %19
  %33 = phi i8 [ %12, %19 ], [ %31, %28 ]
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  br label %40

38:                                               ; preds = %32
  %39 = bitcast %"class.std::__1::basic_string.1"* %2 to i8*
  br label %40

40:                                               ; preds = %38, %35
  %41 = phi i8* [ %37, %35 ], [ %39, %38 ]
  %42 = icmp eq i64 %1, 0
  br i1 %42, label %183, label %43

43:                                               ; preds = %40
  %44 = shl nsw i64 %1, 2
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = icmp ult i64 %47, 4
  br i1 %48, label %120, label %49

49:                                               ; preds = %43
  %50 = shl nsw i64 %1, 2
  %51 = add i64 %50, -4
  %52 = lshr exact i64 %51, 2
  %53 = add nuw nsw i64 %52, 1
  %54 = getelementptr i8, i8* %41, i64 %53
  %55 = getelementptr i32, i32* %0, i64 %53
  %56 = bitcast i32* %55 to i8*
  %57 = icmp ult i8* %41, %56
  %58 = icmp ugt i8* %54, %4
  %59 = and i1 %57, %58
  br i1 %59, label %120, label %60

60:                                               ; preds = %49
  %61 = and i64 %47, 9223372036854775804
  %62 = getelementptr i8, i8* %41, i64 %61
  %63 = getelementptr i32, i32* %0, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %64, 0
  br i1 %68, label %102, label %69

69:                                               ; preds = %60
  %70 = sub nuw nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %99, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %100, %71 ]
  %74 = getelementptr i8, i8* %41, i64 %72
  %75 = getelementptr i32, i32* %0, i64 %72
  %76 = bitcast i32* %75 to <2 x i32>*
  %77 = load <2 x i32>, <2 x i32>* %76, align 4, !alias.scope !60
  %78 = getelementptr i32, i32* %75, i64 2
  %79 = bitcast i32* %78 to <2 x i32>*
  %80 = load <2 x i32>, <2 x i32>* %79, align 4, !alias.scope !60
  %81 = trunc <2 x i32> %77 to <2 x i8>
  %82 = trunc <2 x i32> %80 to <2 x i8>
  %83 = bitcast i8* %74 to <2 x i8>*
  store <2 x i8> %81, <2 x i8>* %83, align 1, !alias.scope !63, !noalias !60
  %84 = getelementptr i8, i8* %74, i64 2
  %85 = bitcast i8* %84 to <2 x i8>*
  store <2 x i8> %82, <2 x i8>* %85, align 1, !alias.scope !63, !noalias !60
  %86 = or i64 %72, 4
  %87 = getelementptr i8, i8* %41, i64 %86
  %88 = getelementptr i32, i32* %0, i64 %86
  %89 = bitcast i32* %88 to <2 x i32>*
  %90 = load <2 x i32>, <2 x i32>* %89, align 4, !alias.scope !60
  %91 = getelementptr i32, i32* %88, i64 2
  %92 = bitcast i32* %91 to <2 x i32>*
  %93 = load <2 x i32>, <2 x i32>* %92, align 4, !alias.scope !60
  %94 = trunc <2 x i32> %90 to <2 x i8>
  %95 = trunc <2 x i32> %93 to <2 x i8>
  %96 = bitcast i8* %87 to <2 x i8>*
  store <2 x i8> %94, <2 x i8>* %96, align 1, !alias.scope !63, !noalias !60
  %97 = getelementptr i8, i8* %87, i64 2
  %98 = bitcast i8* %97 to <2 x i8>*
  store <2 x i8> %95, <2 x i8>* %98, align 1, !alias.scope !63, !noalias !60
  %99 = add i64 %72, 8
  %100 = add i64 %73, -2
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %71, !llvm.loop !65

102:                                              ; preds = %71, %60
  %103 = phi i64 [ 0, %60 ], [ %99, %71 ]
  %104 = icmp eq i64 %67, 0
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr i8, i8* %41, i64 %103
  %107 = getelementptr i32, i32* %0, i64 %103
  %108 = bitcast i32* %107 to <2 x i32>*
  %109 = load <2 x i32>, <2 x i32>* %108, align 4, !alias.scope !60
  %110 = getelementptr i32, i32* %107, i64 2
  %111 = bitcast i32* %110 to <2 x i32>*
  %112 = load <2 x i32>, <2 x i32>* %111, align 4, !alias.scope !60
  %113 = trunc <2 x i32> %109 to <2 x i8>
  %114 = trunc <2 x i32> %112 to <2 x i8>
  %115 = bitcast i8* %106 to <2 x i8>*
  store <2 x i8> %113, <2 x i8>* %115, align 1, !alias.scope !63, !noalias !60
  %116 = getelementptr i8, i8* %106, i64 2
  %117 = bitcast i8* %116 to <2 x i8>*
  store <2 x i8> %114, <2 x i8>* %117, align 1, !alias.scope !63, !noalias !60
  br label %118

118:                                              ; preds = %102, %105
  %119 = icmp eq i64 %47, %61
  br i1 %119, label %183, label %120

120:                                              ; preds = %118, %49, %43
  %121 = phi i8* [ %41, %49 ], [ %41, %43 ], [ %62, %118 ]
  %122 = phi i32* [ %0, %49 ], [ %0, %43 ], [ %63, %118 ]
  %123 = ptrtoint i32* %122 to i64
  %124 = add i64 %1, -1
  %125 = getelementptr i32, i32* %0, i64 %124
  %126 = ptrtoint i32* %125 to i64
  %127 = sub i64 %126, %123
  %128 = lshr i64 %127, 2
  %129 = add nuw nsw i64 %128, 1
  %130 = and i64 %129, 7
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %142, label %132

132:                                              ; preds = %120, %132
  %133 = phi i8* [ %139, %132 ], [ %121, %120 ]
  %134 = phi i32* [ %138, %132 ], [ %122, %120 ]
  %135 = phi i64 [ %140, %132 ], [ %130, %120 ]
  %136 = load i32, i32* %134, align 4
  %137 = trunc i32 %136 to i8
  store i8 %137, i8* %133, align 1
  %138 = getelementptr inbounds i32, i32* %134, i64 1
  %139 = getelementptr inbounds i8, i8* %133, i64 1
  %140 = add i64 %135, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %132, !llvm.loop !66

142:                                              ; preds = %132, %120
  %143 = phi i8* [ undef, %120 ], [ %139, %132 ]
  %144 = phi i8* [ %121, %120 ], [ %139, %132 ]
  %145 = phi i32* [ %122, %120 ], [ %138, %132 ]
  %146 = icmp ult i64 %127, 28
  br i1 %146, label %183, label %147

147:                                              ; preds = %142, %147
  %148 = phi i8* [ %181, %147 ], [ %144, %142 ]
  %149 = phi i32* [ %180, %147 ], [ %145, %142 ]
  %150 = load i32, i32* %149, align 4
  %151 = trunc i32 %150 to i8
  store i8 %151, i8* %148, align 1
  %152 = getelementptr inbounds i32, i32* %149, i64 1
  %153 = getelementptr inbounds i8, i8* %148, i64 1
  %154 = load i32, i32* %152, align 4
  %155 = trunc i32 %154 to i8
  store i8 %155, i8* %153, align 1
  %156 = getelementptr inbounds i32, i32* %149, i64 2
  %157 = getelementptr inbounds i8, i8* %148, i64 2
  %158 = load i32, i32* %156, align 4
  %159 = trunc i32 %158 to i8
  store i8 %159, i8* %157, align 1
  %160 = getelementptr inbounds i32, i32* %149, i64 3
  %161 = getelementptr inbounds i8, i8* %148, i64 3
  %162 = load i32, i32* %160, align 4
  %163 = trunc i32 %162 to i8
  store i8 %163, i8* %161, align 1
  %164 = getelementptr inbounds i32, i32* %149, i64 4
  %165 = getelementptr inbounds i8, i8* %148, i64 4
  %166 = load i32, i32* %164, align 4
  %167 = trunc i32 %166 to i8
  store i8 %167, i8* %165, align 1
  %168 = getelementptr inbounds i32, i32* %149, i64 5
  %169 = getelementptr inbounds i8, i8* %148, i64 5
  %170 = load i32, i32* %168, align 4
  %171 = trunc i32 %170 to i8
  store i8 %171, i8* %169, align 1
  %172 = getelementptr inbounds i32, i32* %149, i64 6
  %173 = getelementptr inbounds i8, i8* %148, i64 6
  %174 = load i32, i32* %172, align 4
  %175 = trunc i32 %174 to i8
  store i8 %175, i8* %173, align 1
  %176 = getelementptr inbounds i32, i32* %149, i64 7
  %177 = getelementptr inbounds i8, i8* %148, i64 7
  %178 = load i32, i32* %176, align 4
  %179 = trunc i32 %178 to i8
  store i8 %179, i8* %177, align 1
  %180 = getelementptr inbounds i32, i32* %149, i64 8
  %181 = getelementptr inbounds i8, i8* %148, i64 8
  %182 = icmp eq i32* %180, %7
  br i1 %182, label %183, label %147, !llvm.loop !67

183:                                              ; preds = %142, %147, %118, %40
  %184 = phi i8* [ %41, %40 ], [ %62, %118 ], [ %143, %142 ], [ %181, %147 ]
  store i8 0, i8* %184, align 1
  %185 = load i8, i8* %11, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %9, i64* %188, align 8
  br label %360

189:                                              ; preds = %183
  %190 = trunc i64 %9 to i8
  store i8 %190, i8* %11, align 1
  br label %360

191:                                              ; preds = %3
  %192 = shl i64 %1, 2
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string.1"* %2, i64 %192, i8 signext 0) #8
  %193 = bitcast %"class.std::__1::basic_string.1"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load i8*, i8** %198, align 8
  br label %202

200:                                              ; preds = %191
  %201 = bitcast %"class.std::__1::basic_string.1"* %2 to i8*
  br label %202

202:                                              ; preds = %200, %197
  %203 = phi i8* [ %199, %197 ], [ %201, %200 ]
  %204 = trunc i64 %1 to i32
  %205 = icmp sgt i32 %204, 0
  br i1 %205, label %206, label %279

206:                                              ; preds = %202
  %207 = and i64 %1, 4294967295
  br label %211

208:                                              ; preds = %271
  %209 = and i8 %221, 1
  %210 = icmp ne i8 %209, 0
  br label %279

211:                                              ; preds = %271, %206
  %212 = phi i32 [ 0, %206 ], [ %274, %271 ]
  %213 = phi i64 [ 0, %206 ], [ %277, %271 ]
  %214 = phi i8 [ 1, %206 ], [ %221, %271 ]
  %215 = getelementptr inbounds i32, i32* %0, i64 %213
  %216 = load i32, i32* %215, align 4
  %217 = icmp ult i32 %216, 55296
  %218 = add i32 %216, -57344
  %219 = icmp ult i32 %218, 1056768
  %220 = or i1 %217, %219
  %221 = select i1 %220, i8 %214, i8 0
  %222 = select i1 %220, i32 %216, i32 65533
  %223 = icmp ult i32 %222, 128
  br i1 %223, label %224, label %227

224:                                              ; preds = %211
  %225 = trunc i32 %222 to i8
  %226 = add nsw i32 %212, 1
  br label %271

227:                                              ; preds = %211
  %228 = icmp ult i32 %222, 2048
  br i1 %228, label %229, label %233

229:                                              ; preds = %227
  %230 = lshr i32 %222, 6
  %231 = trunc i32 %230 to i8
  %232 = or i8 %231, -64
  br label %261

233:                                              ; preds = %227
  %234 = icmp ult i32 %222, 65536
  br i1 %234, label %235, label %239

235:                                              ; preds = %233
  %236 = lshr i32 %222, 12
  %237 = trunc i32 %236 to i8
  %238 = or i8 %237, -32
  br label %250

239:                                              ; preds = %233
  %240 = lshr i32 %222, 18
  %241 = trunc i32 %240 to i8
  %242 = or i8 %241, -16
  %243 = add nsw i32 %212, 1
  %244 = sext i32 %212 to i64
  %245 = getelementptr inbounds i8, i8* %203, i64 %244
  store i8 %242, i8* %245, align 1
  %246 = lshr i32 %222, 12
  %247 = trunc i32 %246 to i8
  %248 = and i8 %247, 63
  %249 = or i8 %248, -128
  br label %250

250:                                              ; preds = %239, %235
  %251 = phi i32 [ 2, %239 ], [ 1, %235 ]
  %252 = phi i32 [ %243, %239 ], [ %212, %235 ]
  %253 = phi i8 [ %249, %239 ], [ %238, %235 ]
  %254 = add nsw i32 %212, %251
  %255 = sext i32 %252 to i64
  %256 = getelementptr inbounds i8, i8* %203, i64 %255
  store i8 %253, i8* %256, align 1
  %257 = lshr i32 %222, 6
  %258 = trunc i32 %257 to i8
  %259 = and i8 %258, 63
  %260 = or i8 %259, -128
  br label %261

261:                                              ; preds = %250, %229
  %262 = phi i32 [ %254, %250 ], [ %212, %229 ]
  %263 = phi i8 [ %260, %250 ], [ %232, %229 ]
  %264 = sext i32 %262 to i64
  %265 = getelementptr inbounds i8, i8* %203, i64 %264
  store i8 %263, i8* %265, align 1
  %266 = add nsw i32 %262, 1
  %267 = trunc i32 %222 to i8
  %268 = and i8 %267, 63
  %269 = or i8 %268, -128
  %270 = add nsw i32 %262, 2
  br label %271

271:                                              ; preds = %261, %224
  %272 = phi i32 [ %266, %261 ], [ %212, %224 ]
  %273 = phi i8 [ %269, %261 ], [ %225, %224 ]
  %274 = phi i32 [ %270, %261 ], [ %226, %224 ]
  %275 = sext i32 %272 to i64
  %276 = getelementptr inbounds i8, i8* %203, i64 %275
  store i8 %273, i8* %276, align 1
  %277 = add nuw nsw i64 %213, 1
  %278 = icmp eq i64 %277, %207
  br i1 %278, label %208, label %211

279:                                              ; preds = %208, %202
  %280 = phi i32 [ %274, %208 ], [ 0, %202 ]
  %281 = phi i1 [ %210, %208 ], [ true, %202 ]
  %282 = sext i32 %280 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string.1"* %2, i64 %282, i8 signext 0) #8
  %283 = load i8, i8* %194, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %279
  %286 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %287 = load i64, i64* %286, align 8
  br label %290

288:                                              ; preds = %279
  %289 = zext i8 %283 to i64
  br label %290

290:                                              ; preds = %288, %285
  %291 = phi i64 [ %287, %285 ], [ %289, %288 ]
  %292 = icmp ult i64 %291, 23
  br i1 %292, label %297, label %293

293:                                              ; preds = %290
  %294 = add i64 %291, 16
  %295 = and i64 %294, -16
  %296 = add i64 %295, -1
  br label %297

297:                                              ; preds = %293, %290
  %298 = phi i64 [ %296, %293 ], [ 22, %290 ]
  br i1 %284, label %299, label %304

299:                                              ; preds = %297
  %300 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %301 = load i64, i64* %300, align 8
  %302 = and i64 %301, 9223372036854775807
  %303 = add nsw i64 %302, -1
  br label %304

304:                                              ; preds = %299, %297
  %305 = phi i64 [ %303, %299 ], [ 22, %297 ]
  %306 = icmp eq i64 %298, %305
  br i1 %306, label %360, label %307

307:                                              ; preds = %304
  br i1 %284, label %308, label %311

308:                                              ; preds = %307
  %309 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %310 = load i64, i64* %309, align 8
  br label %313

311:                                              ; preds = %307
  %312 = zext i8 %283 to i64
  br label %313

313:                                              ; preds = %311, %308
  %314 = phi i64 [ %310, %308 ], [ %312, %311 ]
  %315 = icmp eq i64 %298, 22
  br i1 %315, label %324, label %316

316:                                              ; preds = %313
  %317 = add i64 %298, 1
  %318 = tail call i8* @_Znwm(i64 %317) #10
  br i1 %284, label %319, label %322

319:                                              ; preds = %316
  %320 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load i8*, i8** %320, align 8
  br label %328

322:                                              ; preds = %316
  %323 = bitcast %"class.std::__1::basic_string.1"* %2 to i8*
  br label %334

324:                                              ; preds = %313
  %325 = bitcast %"class.std::__1::basic_string.1"* %2 to i8*
  %326 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load i8*, i8** %326, align 8
  br i1 %284, label %328, label %334

328:                                              ; preds = %324, %319
  %329 = phi i1 [ true, %319 ], [ false, %324 ]
  %330 = phi i8* [ %321, %319 ], [ %327, %324 ]
  %331 = phi i8* [ %318, %319 ], [ %325, %324 ]
  %332 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %333 = load i64, i64* %332, align 8
  br label %340

334:                                              ; preds = %324, %322
  %335 = phi i1 [ true, %322 ], [ false, %324 ]
  %336 = phi i1 [ false, %322 ], [ true, %324 ]
  %337 = phi i8* [ %323, %322 ], [ %327, %324 ]
  %338 = phi i8* [ %318, %322 ], [ %325, %324 ]
  %339 = zext i8 %283 to i64
  br label %340

340:                                              ; preds = %334, %328
  %341 = phi i1 [ %329, %328 ], [ %335, %334 ]
  %342 = phi i1 [ true, %328 ], [ %336, %334 ]
  %343 = phi i8* [ %330, %328 ], [ %337, %334 ]
  %344 = phi i8* [ %331, %328 ], [ %338, %334 ]
  %345 = phi i64 [ %333, %328 ], [ %339, %334 ]
  %346 = add i64 %345, 1
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %349, label %348

348:                                              ; preds = %340
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %344, i8* align 1 %343, i64 %346, i1 false) #8
  br label %349

349:                                              ; preds = %348, %340
  br i1 %342, label %350, label %351

350:                                              ; preds = %349
  tail call void @_ZdlPv(i8* %343) #10
  br label %351

351:                                              ; preds = %350, %349
  br i1 %341, label %352, label %358

352:                                              ; preds = %351
  %353 = add i64 %298, 1
  %354 = or i64 %353, -9223372036854775808
  %355 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %354, i64* %355, align 8
  %356 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %314, i64* %356, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %344, i8** %357, align 8
  br label %360

358:                                              ; preds = %351
  %359 = trunc i64 %314 to i8
  store i8 %359, i8* %194, align 1
  br label %360

360:                                              ; preds = %187, %189, %304, %352, %358
  %361 = phi i1 [ true, %187 ], [ true, %189 ], [ %281, %304 ], [ %281, %352 ], [ %281, %358 ]
  ret i1 %361
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base10WideToUTF8ENS_16BasicStringPieceIwNSt3__111char_traitsIwEEEE(%"class.std::__1::basic_string.1"* noalias sret, i32*, i64) local_unnamed_addr #0 {
  %4 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #8
  %5 = tail call zeroext i1 @_ZN4base10WideToUTF8EPKwmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32* %1, i64 %2, %"class.std::__1::basic_string.1"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds i8, i8* %1, i64 %2
  %5 = icmp ugt i64 %2, 9223372036854775791
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %7) #9
  unreachable

8:                                                ; preds = %3
  %9 = icmp ult i64 %2, 11
  br i1 %9, label %23, label %10

10:                                               ; preds = %8
  %11 = add nuw nsw i64 %2, 8
  %12 = and i64 %11, -8
  %13 = icmp slt i64 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @abort() #9
  unreachable

15:                                               ; preds = %10
  %16 = shl i64 %12, 1
  %17 = tail call i8* @_Znwm(i64 %16) #10
  %18 = bitcast i8* %17 to i16*
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %17, i8** %19, align 8
  %20 = or i64 %12, -9223372036854775808
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %22, align 8
  br label %29

23:                                               ; preds = %8
  %24 = trunc i64 %2 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  store i8 %24, i8* %26, align 1
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %28 = icmp eq i64 %2, 0
  br i1 %28, label %103, label %29

29:                                               ; preds = %15, %23
  %30 = phi i16* [ %18, %15 ], [ %27, %23 ]
  %31 = icmp ult i64 %2, 16
  br i1 %31, label %92, label %32

32:                                               ; preds = %29
  %33 = and i64 %2, -16
  %34 = getelementptr i8, i8* %1, i64 %33
  %35 = getelementptr i16, i16* %30, i64 %33
  %36 = add i64 %33, -16
  %37 = lshr exact i64 %36, 4
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %36, 0
  br i1 %40, label %74, label %41

41:                                               ; preds = %32
  %42 = sub nuw nsw i64 %38, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %71, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %72, %43 ]
  %46 = getelementptr i8, i8* %1, i64 %44
  %47 = getelementptr i16, i16* %30, i64 %44
  %48 = bitcast i8* %46 to <8 x i8>*
  %49 = load <8 x i8>, <8 x i8>* %48, align 1
  %50 = getelementptr i8, i8* %46, i64 8
  %51 = bitcast i8* %50 to <8 x i8>*
  %52 = load <8 x i8>, <8 x i8>* %51, align 1
  %53 = sext <8 x i8> %49 to <8 x i16>
  %54 = sext <8 x i8> %52 to <8 x i16>
  %55 = bitcast i16* %47 to <8 x i16>*
  store <8 x i16> %53, <8 x i16>* %55, align 2
  %56 = getelementptr i16, i16* %47, i64 8
  %57 = bitcast i16* %56 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %57, align 2
  %58 = or i64 %44, 16
  %59 = getelementptr i8, i8* %1, i64 %58
  %60 = getelementptr i16, i16* %30, i64 %58
  %61 = bitcast i8* %59 to <8 x i8>*
  %62 = load <8 x i8>, <8 x i8>* %61, align 1
  %63 = getelementptr i8, i8* %59, i64 8
  %64 = bitcast i8* %63 to <8 x i8>*
  %65 = load <8 x i8>, <8 x i8>* %64, align 1
  %66 = sext <8 x i8> %62 to <8 x i16>
  %67 = sext <8 x i8> %65 to <8 x i16>
  %68 = bitcast i16* %60 to <8 x i16>*
  store <8 x i16> %66, <8 x i16>* %68, align 2
  %69 = getelementptr i16, i16* %60, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %70, align 2
  %71 = add i64 %44, 32
  %72 = add i64 %45, -2
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %43, !llvm.loop !68

74:                                               ; preds = %43, %32
  %75 = phi i64 [ 0, %32 ], [ %71, %43 ]
  %76 = icmp eq i64 %39, 0
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = getelementptr i8, i8* %1, i64 %75
  %79 = getelementptr i16, i16* %30, i64 %75
  %80 = bitcast i8* %78 to <8 x i8>*
  %81 = load <8 x i8>, <8 x i8>* %80, align 1
  %82 = getelementptr i8, i8* %78, i64 8
  %83 = bitcast i8* %82 to <8 x i8>*
  %84 = load <8 x i8>, <8 x i8>* %83, align 1
  %85 = sext <8 x i8> %81 to <8 x i16>
  %86 = sext <8 x i8> %84 to <8 x i16>
  %87 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %87, align 2
  %88 = getelementptr i16, i16* %79, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2
  br label %90

90:                                               ; preds = %74, %77
  %91 = icmp eq i64 %33, %2
  br i1 %91, label %103, label %92

92:                                               ; preds = %90, %29
  %93 = phi i8* [ %1, %29 ], [ %34, %90 ]
  %94 = phi i16* [ %30, %29 ], [ %35, %90 ]
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i8* [ %100, %95 ], [ %93, %92 ]
  %97 = phi i16* [ %101, %95 ], [ %94, %92 ]
  %98 = load i8, i8* %96, align 1
  %99 = sext i8 %98 to i16
  store i16 %99, i16* %97, align 2
  %100 = getelementptr inbounds i8, i8* %96, i64 1
  %101 = getelementptr inbounds i16, i16* %97, i64 1
  %102 = icmp eq i8* %100, %4
  br i1 %102, label %103, label %95, !llvm.loop !69

103:                                              ; preds = %95, %90, %23
  %104 = phi i16* [ %27, %23 ], [ %35, %90 ], [ %101, %95 ]
  store i16 0, i16* %104, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* noalias sret, i16*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds i16, i16* %1, i64 %2
  %5 = shl nuw i64 %2, 1
  %6 = ashr exact i64 %5, 1
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %9) #9
  unreachable

10:                                               ; preds = %3
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %12, label %17

12:                                               ; preds = %10
  %13 = trunc i64 %6 to i8
  %14 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 %13, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  br label %25

17:                                               ; preds = %10
  %18 = add nsw i64 %6, 16
  %19 = and i64 %18, -16
  %20 = tail call i8* @_Znwm(i64 %19) #10
  %21 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = or i64 %19, -9223372036854775808
  %23 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %24, align 8
  br label %25

25:                                               ; preds = %17, %12
  %26 = phi i8* [ %16, %12 ], [ %20, %17 ]
  %27 = icmp eq i64 %2, 0
  br i1 %27, label %105, label %28

28:                                               ; preds = %25
  %29 = shl nsw i64 %2, 1
  %30 = add i64 %29, -2
  %31 = lshr exact i64 %30, 1
  %32 = add nuw i64 %31, 1
  %33 = icmp ult i64 %32, 16
  br i1 %33, label %94, label %34

34:                                               ; preds = %28
  %35 = and i64 %32, -16
  %36 = getelementptr i16, i16* %1, i64 %35
  %37 = getelementptr i8, i8* %26, i64 %35
  %38 = add i64 %35, -16
  %39 = lshr exact i64 %38, 4
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 1
  %42 = icmp eq i64 %38, 0
  br i1 %42, label %76, label %43

43:                                               ; preds = %34
  %44 = sub nuw nsw i64 %40, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %73, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %74, %45 ]
  %48 = getelementptr i16, i16* %1, i64 %46
  %49 = getelementptr i8, i8* %26, i64 %46
  %50 = bitcast i16* %48 to <8 x i16>*
  %51 = load <8 x i16>, <8 x i16>* %50, align 2
  %52 = getelementptr i16, i16* %48, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2
  %55 = trunc <8 x i16> %51 to <8 x i8>
  %56 = trunc <8 x i16> %54 to <8 x i8>
  %57 = bitcast i8* %49 to <8 x i8>*
  store <8 x i8> %55, <8 x i8>* %57, align 1
  %58 = getelementptr i8, i8* %49, i64 8
  %59 = bitcast i8* %58 to <8 x i8>*
  store <8 x i8> %56, <8 x i8>* %59, align 1
  %60 = or i64 %46, 16
  %61 = getelementptr i16, i16* %1, i64 %60
  %62 = getelementptr i8, i8* %26, i64 %60
  %63 = bitcast i16* %61 to <8 x i16>*
  %64 = load <8 x i16>, <8 x i16>* %63, align 2
  %65 = getelementptr i16, i16* %61, i64 8
  %66 = bitcast i16* %65 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2
  %68 = trunc <8 x i16> %64 to <8 x i8>
  %69 = trunc <8 x i16> %67 to <8 x i8>
  %70 = bitcast i8* %62 to <8 x i8>*
  store <8 x i8> %68, <8 x i8>* %70, align 1
  %71 = getelementptr i8, i8* %62, i64 8
  %72 = bitcast i8* %71 to <8 x i8>*
  store <8 x i8> %69, <8 x i8>* %72, align 1
  %73 = add i64 %46, 32
  %74 = add i64 %47, -2
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %45, !llvm.loop !71

76:                                               ; preds = %45, %34
  %77 = phi i64 [ 0, %34 ], [ %73, %45 ]
  %78 = icmp eq i64 %41, 0
  br i1 %78, label %92, label %79

79:                                               ; preds = %76
  %80 = getelementptr i16, i16* %1, i64 %77
  %81 = getelementptr i8, i8* %26, i64 %77
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2
  %87 = trunc <8 x i16> %83 to <8 x i8>
  %88 = trunc <8 x i16> %86 to <8 x i8>
  %89 = bitcast i8* %81 to <8 x i8>*
  store <8 x i8> %87, <8 x i8>* %89, align 1
  %90 = getelementptr i8, i8* %81, i64 8
  %91 = bitcast i8* %90 to <8 x i8>*
  store <8 x i8> %88, <8 x i8>* %91, align 1
  br label %92

92:                                               ; preds = %76, %79
  %93 = icmp eq i64 %32, %35
  br i1 %93, label %105, label %94

94:                                               ; preds = %92, %28
  %95 = phi i16* [ %1, %28 ], [ %36, %92 ]
  %96 = phi i8* [ %26, %28 ], [ %37, %92 ]
  br label %97

97:                                               ; preds = %94, %97
  %98 = phi i16* [ %102, %97 ], [ %95, %94 ]
  %99 = phi i8* [ %103, %97 ], [ %96, %94 ]
  %100 = load i16, i16* %98, align 2
  %101 = trunc i16 %100 to i8
  store i8 %101, i8* %99, align 1
  %102 = getelementptr inbounds i16, i16* %98, i64 1
  %103 = getelementptr inbounds i8, i8* %99, i64 1
  %104 = icmp eq i16* %102, %4
  br i1 %104, label %105, label %97, !llvm.loop !72

105:                                              ; preds = %97, %92, %25
  %106 = phi i8* [ %26, %25 ], [ %37, %92 ], [ %103, %97 ]
  store i8 0, i8* %106, align 1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #9
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #9
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #10
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !73
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !73
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !76, !noalias !73
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !76, !noalias !73
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !73
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !73
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !76, !noalias !73
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !76, !noalias !73
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !73
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !73
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !76, !noalias !73
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !76, !noalias !73
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !73
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !73
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !76, !noalias !73
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !76, !noalias !73
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !78

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !73
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !73
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !76, !noalias !73
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !76, !noalias !73
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !79

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !80

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !81

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !82
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !82
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !85, !noalias !82
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !85, !noalias !82
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !82
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !82
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !85, !noalias !82
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !85, !noalias !82
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !82
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !82
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !85, !noalias !82
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !85, !noalias !82
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !82
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !82
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !85, !noalias !82
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !85, !noalias !82
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !87

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !82
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !82
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !85, !noalias !82
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !85, !noalias !82
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !88

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !89

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !90

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #10
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(i16*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.1"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string.1"*, i64, i8 signext) local_unnamed_addr #2

declare zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIwNSt3__111char_traitsIwEEEE(i32*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.12"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6resizeEmw(%"class.std::__1::basic_string.12"*, i64, i32 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE18__shrink_or_extendEm(%"class.std::__1::basic_string.12"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.12"* %0 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %2
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = icmp eq i64 %1, 4
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = add i64 %1, 1
  %17 = icmp ugt i64 %16, 4611686018427387903
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @abort() #9
  unreachable

19:                                               ; preds = %15
  %20 = shl i64 %16, 2
  %21 = tail call i8* @_Znwm(i64 %20) #10
  %22 = bitcast i8* %21 to i32*
  br i1 %6, label %23, label %26

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  br label %32

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string.12"* %0 to i32*
  br label %38

28:                                               ; preds = %12
  %29 = bitcast %"class.std::__1::basic_string.12"* %0 to i32*
  %30 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  br i1 %6, label %32, label %38

32:                                               ; preds = %23, %28
  %33 = phi i1 [ true, %23 ], [ false, %28 ]
  %34 = phi i32* [ %25, %23 ], [ %31, %28 ]
  %35 = phi i32* [ %22, %23 ], [ %29, %28 ]
  %36 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  br label %44

38:                                               ; preds = %26, %28
  %39 = phi i1 [ true, %26 ], [ false, %28 ]
  %40 = phi i1 [ false, %26 ], [ true, %28 ]
  %41 = phi i32* [ %27, %26 ], [ %31, %28 ]
  %42 = phi i32* [ %22, %26 ], [ %29, %28 ]
  %43 = zext i8 %5 to i64
  br label %44

44:                                               ; preds = %32, %38
  %45 = phi i1 [ %33, %32 ], [ %39, %38 ]
  %46 = phi i1 [ true, %32 ], [ %40, %38 ]
  %47 = phi i32* [ %34, %32 ], [ %41, %38 ]
  %48 = phi i32* [ %35, %32 ], [ %42, %38 ]
  %49 = phi i64 [ %37, %32 ], [ %43, %38 ]
  %50 = add i64 %49, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %44
  %53 = tail call i32* @wmemcpy(i32* %48, i32* %47, i64 %50) #8
  br label %54

54:                                               ; preds = %44, %52
  br i1 %46, label %55, label %57

55:                                               ; preds = %54
  %56 = bitcast i32* %47 to i8*
  tail call void @_ZdlPv(i8* %56) #10
  br label %57

57:                                               ; preds = %55, %54
  br i1 %45, label %58, label %64

58:                                               ; preds = %57
  %59 = add nsw i64 %1, 1
  %60 = or i64 %59, -9223372036854775808
  %61 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %13, i64* %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32* %48, i32** %63, align 8
  br label %66

64:                                               ; preds = %57
  %65 = trunc i64 %13 to i8
  store i8 %65, i8* %4, align 1
  br label %66

66:                                               ; preds = %58, %64
  ret void
}

; Function Attrs: nounwind
declare i32* @wmemcpy(i32*, i32*, i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !8}
!10 = !{!11}
!11 = distinct !{!11, !12}
!12 = distinct !{!12, !"LVerDomain"}
!13 = !{!14}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !8}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !17}
!19 = distinct !{!19, !8}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !8}
!26 = distinct !{!26, !17}
!27 = distinct !{!27, !8}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !8}
!34 = distinct !{!34, !17}
!35 = distinct !{!35, !8}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !8}
!42 = distinct !{!42, !17}
!43 = distinct !{!43, !17}
!44 = distinct !{!44, !8}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !8}
!51 = distinct !{!51, !17}
!52 = distinct !{!52, !8}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !8}
!59 = distinct !{!59, !8}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !8}
!66 = distinct !{!66, !17}
!67 = distinct !{!67, !8}
!68 = distinct !{!68, !8}
!69 = distinct !{!69, !70, !8}
!70 = !{!"llvm.loop.unroll.runtime.disable"}
!71 = distinct !{!71, !8}
!72 = distinct !{!72, !70, !8}
!73 = !{!74}
!74 = distinct !{!74, !75}
!75 = distinct !{!75, !"LVerDomain"}
!76 = !{!77}
!77 = distinct !{!77, !75}
!78 = distinct !{!78, !8}
!79 = distinct !{!79, !17}
!80 = distinct !{!80, !17}
!81 = distinct !{!81, !8}
!82 = !{!83}
!83 = distinct !{!83, !84}
!84 = distinct !{!84, !"LVerDomain"}
!85 = !{!86}
!86 = distinct !{!86, !84}
!87 = distinct !{!87, !8}
!88 = distinct !{!88, !17}
!89 = distinct !{!89, !17}
!90 = distinct !{!90, !8}
