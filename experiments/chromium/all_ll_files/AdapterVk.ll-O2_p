; ModuleID = '../../third_party/dawn/src/dawn_native/vulkan/AdapterVk.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/vulkan/AdapterVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.44" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.46" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.ityp::bitset.11" = type { %"class.std::__1::bitset.12" }
%"class.std::__1::bitset.12" = type { %"class.std::__1::__bitset.13" }
%"class.std::__1::__bitset.13" = type { i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.16" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %struct.VkMemoryType*, %struct.VkMemoryType*, %"class.std::__1::__compressed_pair.23" }
%struct.VkMemoryType = type { i32, i32 }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %struct.VkMemoryType* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %struct.VkMemoryHeap*, %struct.VkMemoryHeap*, %"class.std::__1::__compressed_pair.30" }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %struct.VkMemoryHeap* }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.37" }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %struct.VkLayerProperties* }
%"class.dawn_native::vulkan::Adapter" = type { %"class.dawn_native::AdapterBase.base", %struct.VkPhysicalDevice_T*, %"class.dawn_native::vulkan::Backend"*, %"struct.dawn_native::vulkan::VulkanDeviceInfo" }
%"class.dawn_native::AdapterBase.base" = type <{ i32 (...)**, %"struct.dawn_native::PCIInfo", i32, [4 x i8], %"class.std::__1::basic_string", %"struct.dawn_native::ExtensionsSet", %"class.dawn_native::InstanceBase"*, i32 }>
%"struct.dawn_native::PCIInfo" = type { i32, i32, %"class.std::__1::basic_string" }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.dawn_native::InstanceBase" = type opaque
%"struct.dawn_native::vulkan::VulkanDeviceInfo" = type { %"struct.dawn_native::vulkan::VulkanDeviceKnobs", %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT, %"class.std::__1::vector.14", %"class.std::__1::vector.21", %"class.std::__1::vector.28", %"class.std::__1::vector.35" }
%"struct.dawn_native::vulkan::VulkanDeviceKnobs" = type { %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDevice16BitStorageFeatures, %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT, %"class.ityp::bitset.11" }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDevice16BitStorageFeatures = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT = type { i32, i8*, i32, i32, i32, i32 }
%"class.dawn_native::vulkan::Backend" = type { %"class.dawn_native::BackendConnection.base", %class.DynamicLib, %"struct.dawn_native::vulkan::VulkanGlobalInfo", %struct.VkInstance_T*, %"struct.dawn_native::vulkan::VulkanFunctions", %"class.dawn_native::vulkan::detail::VkHandle", %"class.std::__1::vector" }
%"class.dawn_native::BackendConnection.base" = type <{ i32 (...)**, %"class.dawn_native::InstanceBase"*, i32 }>
%class.DynamicLib = type { i8* }
%"struct.dawn_native::vulkan::VulkanGlobalInfo" = type <{ %"struct.dawn_native::vulkan::VulkanGlobalKnobs", i32, [4 x i8] }>
%"struct.dawn_native::vulkan::VulkanGlobalKnobs" = type { %"class.ityp::bitset", %"class.ityp::array", %"class.ityp::bitset.3" }
%"class.ityp::bitset" = type { %"class.std::__1::bitset.1" }
%"class.std::__1::bitset.1" = type { %"class.std::__1::__bitset.2" }
%"class.std::__1::__bitset.2" = type { i64 }
%"class.ityp::array" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [4 x %"class.ityp::bitset.3"] }
%"class.ityp::bitset.3" = type { %"class.std::__1::bitset.4" }
%"class.std::__1::bitset.4" = type { %"class.std::__1::__bitset.5" }
%"class.std::__1::__bitset.5" = type { i64 }
%struct.VkInstance_T = type opaque
%"struct.dawn_native::vulkan::VulkanFunctions" = type { void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void ()* (%struct.VkDevice_T*, i8*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, %struct.VkXlibSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct._XDisplay*, i64)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)*, void (%struct.VkCommandBuffer_T*, float*)*, void (%struct.VkCommandBuffer_T*, float, float, float)*, void (%struct.VkCommandBuffer_T*, float, float)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, float)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*)*, i32 (%struct.VkCommandBuffer_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)*, void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkFence_T*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)*, i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*)*, i32 (%struct.VkCommandBuffer_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)*, i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkDevice_T = type opaque
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkCommandBuffer_T = type opaque
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkDebugUtilsMessengerCreateInfoEXT = type { i32, i8*, i32, i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%struct.VkDebugUtilsMessengerCallbackDataEXT = type { i32, i8*, i32, i8*, i32, i8*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsObjectNameInfoEXT* }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkQueue_T = type opaque
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkXlibSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct._XDisplay*, i64 }
%struct._XDisplay = type opaque
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkImage_T = type opaque
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkQueryPool_T = type opaque
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkEvent_T = type opaque
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineCache_T = type opaque
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"class.dawn_native::vulkan::detail::VkHandle" = type { %struct.VkDebugUtilsMessengerEXT_T* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T**, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %struct.VkPhysicalDevice_T** }
%struct.VkPhysicalDevice_T = type opaque
%"class.dawn_native::AdapterBase" = type <{ i32 (...)**, %"struct.dawn_native::PCIInfo", i32, [4 x i8], %"class.std::__1::basic_string", %"struct.dawn_native::ExtensionsSet", %"class.dawn_native::InstanceBase"*, i32, [4 x i8] }>
%"class.dawn_native::BackendConnection" = type <{ i32 (...)**, %"class.dawn_native::InstanceBase"*, i32, [4 x i8] }>
%class.Result = type { %"class.std::__1::unique_ptr" }
%class.Result.52 = type { i32, %"class.std::__1::unique_ptr", %"struct.dawn_native::vulkan::VulkanDeviceInfo" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.Result.60 = type { i64 }
%"struct.dawn_native::DeviceDescriptor" = type { %"class.std::__1::vector.53", %"class.std::__1::vector.53", %"class.std::__1::vector.53" }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { i8**, i8**, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { i8** }
%class.Result.61 = type { i64 }

$_ZN6ResultIN11dawn_native6vulkan16VulkanDeviceInfoENS0_9ErrorDataEED2Ev = comdat any

$_ZN11dawn_native6vulkan7AdapterD2Ev = comdat any

$_ZN11dawn_native6vulkan7AdapterD0Ev = comdat any

@_ZTVN11dawn_native6vulkan7AdapterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::vulkan::Adapter"*)* @_ZN11dawn_native6vulkan7AdapterD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::vulkan::Adapter"*)* @_ZN11dawn_native6vulkan7AdapterD0Ev to i8*), i8* bitcast (void (%class.Result.60*, %"class.dawn_native::vulkan::Adapter"*, %"struct.dawn_native::DeviceDescriptor"*)* @_ZN11dawn_native6vulkan7Adapter16CreateDeviceImplEPKNS_16DeviceDescriptorE to i8*), i8* bitcast (void (%class.Result*, %"class.dawn_native::AdapterBase"*)* @_ZN11dawn_native11AdapterBase33ResetInternalDeviceForTestingImplEv to i8*)] }, align 8
@__const._ZN11dawn_native6vulkan7Adapter10InitializeEv._localVar41 = private unnamed_addr constant { i32, [4 x i8], %"class.std::__1::unique_ptr", { { %struct.VkPhysicalDeviceFeatures, [4 x i8], { i32, [4 x i8], i8*, i32, i32 }, { i32, [4 x i8], i8*, i32, i32, i32, i32 }, { i32, [4 x i8], i8*, i32, i32 }, %"class.ityp::bitset.11" }, { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [4 x i8], { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 }, %struct.VkPhysicalDeviceSparseProperties, [4 x i8] }, { i32, [4 x i8], i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }, { i32, [4 x i8], i8*, i32, i32, i32, i32 }, %"class.std::__1::vector.14", %"class.std::__1::vector.21", %"class.std::__1::vector.28", %"class.std::__1::vector.35" } } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.42" { %"struct.std::__1::__compressed_pair_elem.43" { %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*) } } }, { { %struct.VkPhysicalDeviceFeatures, [4 x i8], { i32, [4 x i8], i8*, i32, i32 }, { i32, [4 x i8], i8*, i32, i32, i32, i32 }, { i32, [4 x i8], i8*, i32, i32 }, %"class.ityp::bitset.11" }, { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [4 x i8], { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 }, %struct.VkPhysicalDeviceSparseProperties, [4 x i8] }, { i32, [4 x i8], i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }, { i32, [4 x i8], i8*, i32, i32, i32, i32 }, %"class.std::__1::vector.14", %"class.std::__1::vector.21", %"class.std::__1::vector.28", %"class.std::__1::vector.35" } { { %struct.VkPhysicalDeviceFeatures, [4 x i8], { i32, [4 x i8], i8*, i32, i32 }, { i32, [4 x i8], i8*, i32, i32, i32, i32 }, { i32, [4 x i8], i8*, i32, i32 }, %"class.ityp::bitset.11" } { %struct.VkPhysicalDeviceFeatures { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", { i32, [4 x i8], i8*, i32, i32 } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, { i32, [4 x i8], i8*, i32, i32, i32, i32 } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, { i32, [4 x i8], i8*, i32, i32 } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.ityp::bitset.11" { %"class.std::__1::bitset.12" { %"class.std::__1::__bitset.13" { i64 -6148914691236517206 } } } }, { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [4 x i8], { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 }, %struct.VkPhysicalDeviceSparseProperties, [4 x i8] } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [256 x i8] cx i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", [4 x i8] c"\AA\AA\AA\AA", { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i32 -1431655766, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, [2 x i32] [i32 -1431655766, i32 -1431655766], [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206 }, %struct.VkPhysicalDeviceSparseProperties { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }, { i32, [4 x i8], i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, [256 x i8] cx i8] cstruct.VkConformanceVersion { i8 -86, i8 -86, i8 -86, i8 -86 } }, { i32, [4 x i8], i8*, i32, i32, i32, i32 } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %"class.std::__1::vector.14" { %"class.std::__1::__vector_base.15" { %struct.VkQueueFamilyProperties* inttoptr (i64 -6148914691236517206 to %struct.VkQueueFamilyProperties*), %struct.VkQueueFamilyProperties* inttoptr (i64 -6148914691236517206 to %struct.VkQueueFamilyProperties*), %"class.std::__1::__compressed_pair.16" { %"struct.std::__1::__compressed_pair_elem.17" { %struct.VkQueueFamilyProperties* inttoptr (i64 -6148914691236517206 to %struct.VkQueueFamilyProperties*) } } } }, %"class.std::__1::vector.21" { %"class.std::__1::__vector_base.22" { %struct.VkMemoryType* inttoptr (i64 -6148914691236517206 to %struct.VkMemoryType*), %struct.VkMemoryType* inttoptr (i64 -6148914691236517206 to %struct.VkMemoryType*), %"class.std::__1::__compressed_pair.23" { %"struct.std::__1::__compressed_pair_elem.24" { %struct.VkMemoryType* inttoptr (i64 -6148914691236517206 to %struct.VkMemoryType*) } } } }, %"class.std::__1::vector.28" { %"class.std::__1::__vector_base.29" { %struct.VkMemoryHeap* inttoptr (i64 -6148914691236517206 to %struct.VkMemoryHeap*), %struct.VkMemoryHeap* inttoptr (i64 -6148914691236517206 to %struct.VkMemoryHeap*), %"class.std::__1::__compressed_pair.30" { %"struct.std::__1::__compressed_pair_elem.31" { %struct.VkMemoryHeap* inttoptr (i64 -6148914691236517206 to %struct.VkMemoryHeap*) } } } }, %"class.std::__1::vector.35" { %"class.std::__1::__vector_base.36" { %struct.VkLayerProperties* inttoptr (i64 -6148914691236517206 to %struct.VkLayerProperties*), %struct.VkLayerProperties* inttoptr (i64 -6148914691236517206 to %struct.VkLayerProperties*), %"class.std::__1::__compressed_pair.37" { %"struct.std::__1::__compressed_pair_elem.38" { %struct.VkLayerProperties* inttoptr (i64 -6148914691236517206 to %struct.VkLayerProperties*) } } } } } }, align 8
@.str = private unnamed_addr constant [60 x i8] c"../../third_party/dawn/src/dawn_native/vulkan/AdapterVk.cpp\00", align 1
@__func__._ZN11dawn_native6vulkan7Adapter10InitializeEv = private unnamed_addr constant [11 x i8] c"Initialize\00", align 1
@.str.1 = private unnamed_addr constant [96 x i8] c"Dawn requires Vulkan 1.1 or Vulkan 1.0 with KHR_Maintenance1 in order to support viewport flipY\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"Vulkan driver version: \00", align 1
@_ZTVN11dawn_native11AdapterBaseE = external unnamed_addr constant { [6 x i8*] }, align 8
@switch.table._ZN11dawn_native6vulkan7Adapter10InitializeEv = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4

@_ZN11dawn_native6vulkan7AdapterC1EPNS0_7BackendEP18VkPhysicalDevice_T = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::Adapter"*, %"class.dawn_native::vulkan::Backend"*, %struct.VkPhysicalDevice_T*), void (%"class.dawn_native::vulkan::Adapter"*, %"class.dawn_native::vulkan::Backend"*, %struct.VkPhysicalDevice_T*)* @_ZN11dawn_native6vulkan7AdapterC2EPNS0_7BackendEP18VkPhysicalDevice_T

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan7AdapterC2EPNS0_7BackendEP18VkPhysicalDevice_T(%"class.dawn_native::vulkan::Adapter"*, %"class.dawn_native::vulkan::Backend"*, %struct.VkPhysicalDevice_T*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.dawn_native::vulkan::Adapter"* %0 to %"class.dawn_native::AdapterBase"*
  %5 = bitcast %"class.dawn_native::vulkan::Backend"* %1 to %"class.dawn_native::BackendConnection"*
  %6 = tail call %"class.dawn_native::InstanceBase"* @_ZNK11dawn_native17BackendConnection11GetInstanceEv(%"class.dawn_native::BackendConnection"* %5) #9
  tail call void @_ZN11dawn_native11AdapterBaseC2EPNS_12InstanceBaseEN4wgpu11BackendTypeE(%"class.dawn_native::AdapterBase"* %4, %"class.dawn_native::InstanceBase"* %6, i32 4) #9
  %7 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan7AdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 1
  store %struct.VkPhysicalDevice_T* %2, %struct.VkPhysicalDevice_T** %8, align 8
  %9 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 2
  store %"class.dawn_native::vulkan::Backend"* %1, %"class.dawn_native::vulkan::Backend"** %9, align 8
  %10 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3
  %11 = bitcast %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 1800, i1 false)
  ret void
}

declare %"class.dawn_native::InstanceBase"* @_ZNK11dawn_native17BackendConnection11GetInstanceEv(%"class.dawn_native::BackendConnection"*) local_unnamed_addr #1

declare void @_ZN11dawn_native11AdapterBaseC2EPNS_12InstanceBaseEN4wgpu11BackendTypeE(%"class.dawn_native::AdapterBase"*, %"class.dawn_native::InstanceBase"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(1800) %"struct.dawn_native::vulkan::VulkanDeviceInfo"* @_ZNK11dawn_native6vulkan7Adapter13GetDeviceInfoEv(%"class.dawn_native::vulkan::Adapter"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3
  ret %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.VkPhysicalDevice_T* @_ZNK11dawn_native6vulkan7Adapter17GetPhysicalDeviceEv(%"class.dawn_native::vulkan::Adapter"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 1
  %3 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %2, align 8
  ret %struct.VkPhysicalDevice_T* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.dawn_native::vulkan::Backend"* @_ZNK11dawn_native6vulkan7Adapter10GetBackendEv(%"class.dawn_native::vulkan::Adapter"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 2
  %3 = load %"class.dawn_native::vulkan::Backend"*, %"class.dawn_native::vulkan::Backend"** %2, align 8
  ret %"class.dawn_native::vulkan::Backend"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan7Adapter10InitializeEv(%class.Result* noalias nocapture sret, %"class.dawn_native::vulkan::Adapter"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.Result.52, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca [15 x i8], align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %class.Result.52* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1816, i8* nonnull %9) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast ({ i32, [4 x i8], %"class.std::__1::unique_ptr", { { %struct.VkPhysicalDeviceFeatures, [4 x i8], { i32, [4 x i8], i8*, i32, i32 }, { i32, [4 x i8], i8*, i32, i32, i32, i32 }, { i32, [4 x i8], i8*, i32, i32 }, %"class.ityp::bitset.11" }, { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [4 x i8], { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 }, %struct.VkPhysicalDeviceSparseProperties, [4 x i8] }, { i32, [4 x i8], i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }, { i32, [4 x i8], i8*, i32, i32, i32, i32 }, %"class.std::__1::vector.14", %"class.std::__1::vector.21", %"class.std::__1::vector.28", %"class.std::__1::vector.35" } }* @__const._ZN11dawn_native6vulkan7Adapter10InitializeEv._localVar41 to i8*), i64 1816, i1 false)
  call void @_ZN11dawn_native6vulkan16GatherDeviceInfoERKNS0_7AdapterE(%class.Result.52* nonnull sret %3, %"class.dawn_native::vulkan::Adapter"* dereferenceable(1912) %1) #9
  %10 = getelementptr inbounds %class.Result.52, %class.Result.52* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  store i32 2, i32* %10, align 8
  br i1 %12, label %13, label %18, !prof !2

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.Result.52, %class.Result.52* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %14, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %14, align 8
  %16 = ptrtoint %"class.dawn_native::ErrorData"* %15 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %15, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan7Adapter10InitializeEv, i64 0, i64 0), i32 41) #9
  %17 = bitcast %class.Result* %0 to i64*
  store i64 %16, i64* %17, align 8
  call void @_ZN6ResultIN11dawn_native6vulkan16VulkanDeviceInfoENS0_9ErrorDataEED2Ev(%class.Result.52* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 1816, i8* nonnull %9) #9
  br label %281

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.Result.52, %class.Result.52* %3, i64 0, i32 2
  %20 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3
  %21 = bitcast %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %20 to i8*
  %22 = bitcast %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 312, i1 false) #9
  %23 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 1
  %24 = getelementptr inbounds %class.Result.52, %class.Result.52* %3, i64 0, i32 2, i32 1
  %25 = bitcast %struct.VkPhysicalDeviceProperties* %23 to i8*
  %26 = bitcast %struct.VkPhysicalDeviceProperties* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 1392, i1 false) #9
  %27 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 4
  %28 = getelementptr inbounds %class.Result.52, %class.Result.52* %3, i64 0, i32 2, i32 4
  %29 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %27, i64 0, i32 0, i32 0
  %30 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %29, align 8
  %31 = icmp eq %struct.VkQueueFamilyProperties* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %18
  %33 = ptrtoint %struct.VkQueueFamilyProperties* %30 to i64
  %34 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 4, i32 0, i32 1
  %35 = bitcast %struct.VkQueueFamilyProperties** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast %struct.VkQueueFamilyProperties* %30 to i8*
  call void @_ZdlPv(i8* %36) #10
  %37 = bitcast %"class.std::__1::vector.14"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #9
  br label %38

38:                                               ; preds = %18, %32
  %39 = bitcast %"class.std::__1::vector.14"* %28 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 8
  %41 = bitcast %"class.std::__1::vector.14"* %27 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %41, align 8
  %42 = getelementptr inbounds %class.Result.52, %class.Result.52* %3, i64 0, i32 2, i32 4, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %struct.VkQueueFamilyProperties** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 4, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %struct.VkQueueFamilyProperties** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = bitcast %"class.std::__1::vector.14"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #9
  %48 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 5
  %49 = getelementptr inbounds %class.Result.52, %class.Result.52* %3, i64 0, i32 2, i32 5
  %50 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %48, i64 0, i32 0, i32 0
  %51 = load %struct.VkMemoryType*, %struct.VkMemoryType** %50, align 8
  %52 = icmp eq %struct.VkMemoryType* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %38
  %54 = ptrtoint %struct.VkMemoryType* %51 to i64
  %55 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 5, i32 0, i32 1
  %56 = bitcast %struct.VkMemoryType** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast %struct.VkMemoryType* %51 to i8*
  call void @_ZdlPv(i8* %57) #10
  %58 = bitcast %"class.std::__1::vector.21"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #9
  br label %59

59:                                               ; preds = %38, %53
  %60 = bitcast %"class.std::__1::vector.21"* %49 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8
  %62 = bitcast %"class.std::__1::vector.21"* %48 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %62, align 8
  %63 = getelementptr inbounds %class.Result.52, %class.Result.52* %3, i64 0, i32 2, i32 5, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast %struct.VkMemoryType** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 5, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast %struct.VkMemoryType** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = bitcast %"class.std::__1::vector.21"* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #9
  %69 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 6
  %70 = getelementptr inbounds %class.Result.52, %class.Result.52* %3, i64 0, i32 2, i32 6
  %71 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %69, i64 0, i32 0, i32 0
  %72 = load %struct.VkMemoryHeap*, %struct.VkMemoryHeap** %71, align 8
  %73 = icmp eq %struct.VkMemoryHeap* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %59
  %75 = ptrtoint %struct.VkMemoryHeap* %72 to i64
  %76 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 6, i32 0, i32 1
  %77 = bitcast %struct.VkMemoryHeap** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = bitcast %struct.VkMemoryHeap* %72 to i8*
  call void @_ZdlPv(i8* %78) #10
  %79 = bitcast %"class.std::__1::vector.28"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #9
  br label %80

80:                                               ; preds = %59, %74
  %81 = bitcast %"class.std::__1::vector.28"* %70 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8
  %83 = bitcast %"class.std::__1::vector.28"* %69 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %83, align 8
  %84 = getelementptr inbounds %class.Result.52, %class.Result.52* %3, i64 0, i32 2, i32 6, i32 0, i32 2, i32 0, i32 0
  %85 = bitcast %struct.VkMemoryHeap** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 6, i32 0, i32 2, i32 0, i32 0
  %88 = bitcast %struct.VkMemoryHeap** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = bitcast %"class.std::__1::vector.28"* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #9
  %90 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 7
  %91 = getelementptr inbounds %class.Result.52, %class.Result.52* %3, i64 0, i32 2, i32 7
  %92 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %90, i64 0, i32 0, i32 0
  %93 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %92, align 8
  %94 = icmp eq %struct.VkLayerProperties* %93, null
  br i1 %94, label %101, label %95

95:                                               ; preds = %80
  %96 = ptrtoint %struct.VkLayerProperties* %93 to i64
  %97 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 7, i32 0, i32 1
  %98 = bitcast %struct.VkLayerProperties** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %93, i64 0, i32 0, i64 0
  call void @_ZdlPv(i8* %99) #10
  %100 = bitcast %"class.std::__1::vector.35"* %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false) #9
  br label %101

101:                                              ; preds = %80, %95
  %102 = bitcast %"class.std::__1::vector.35"* %91 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8
  %104 = bitcast %"class.std::__1::vector.35"* %90 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %104, align 8
  %105 = getelementptr inbounds %class.Result.52, %class.Result.52* %3, i64 0, i32 2, i32 7, i32 0, i32 2, i32 0, i32 0
  %106 = bitcast %struct.VkLayerProperties** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 7, i32 0, i32 2, i32 0, i32 0
  %109 = bitcast %struct.VkLayerProperties** %108 to i64*
  store i64 %107, i64* %109, align 8
  %110 = bitcast %"class.std::__1::vector.35"* %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false) #9
  call void @_ZN6ResultIN11dawn_native6vulkan16VulkanDeviceInfoENS0_9ErrorDataEED2Ev(%class.Result.52* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 1816, i8* nonnull %9) #9
  %111 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 0
  %112 = call zeroext i1 @_ZNK11dawn_native6vulkan17VulkanDeviceKnobs6HasExtENS0_9DeviceExtE(%"struct.dawn_native::vulkan::VulkanDeviceKnobs"* %111, i32 1) #9
  br i1 %112, label %128, label %113

113:                                              ; preds = %101
  %114 = call i8* @_Znwm(i64 96) #10
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %114, i8** %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = bitcast i64* %116 to <2 x i64>*
  store <2 x i64> <i64 95, i64 -9223372036854775712>, <2 x i64>* %117, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %114, i8* align 1 getelementptr inbounds ([96 x i8], [96 x i8]* @.str.1, i64 0, i64 0), i64 95, i1 false) #9
  %118 = getelementptr inbounds i8, i8* %114, i64 95
  store i8 0, i8* %118, align 1
  %119 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan7Adapter10InitializeEv, i64 0, i64 0), i32 45) #9
  %120 = ptrtoint %"class.dawn_native::ErrorData"* %119 to i64
  %121 = bitcast %class.Result* %0 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %281

126:                                              ; preds = %113
  %127 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %127) #10
  br label %281

128:                                              ; preds = %101
  %129 = call zeroext i1 @_ZNK11dawn_native6vulkan17VulkanDeviceKnobs6HasExtENS0_9DeviceExtE(%"struct.dawn_native::vulkan::VulkanDeviceKnobs"* %111, i32 11) #9
  br i1 %129, label %130, label %196

130:                                              ; preds = %128
  %131 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 2, i32 3, i64 0
  %132 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 0, i32 4
  %133 = load i8, i8* %131, align 1
  %134 = call i1 @llvm.is.constant.i8(i8 %133) #9
  br i1 %134, label %135, label %158

135:                                              ; preds = %130
  %136 = call i64 @strlen(i8* %131) #9
  %137 = icmp ult i64 %136, 23
  br i1 %137, label %138, label %156

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::basic_string"* %132 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %147

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %136, i64* %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  br label %150

147:                                              ; preds = %138
  %148 = trunc i64 %136 to i8
  store i8 %148, i8* %140, align 1
  %149 = bitcast %"class.std::__1::basic_string"* %132 to i8*
  br label %150

150:                                              ; preds = %147, %143
  %151 = phi i8* [ %146, %143 ], [ %149, %147 ]
  %152 = icmp eq i64 %136, 0
  br i1 %152, label %154, label %153

153:                                              ; preds = %150
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %131, i64 %136, i1 false) #9
  br label %154

154:                                              ; preds = %153, %150
  %155 = getelementptr inbounds i8, i8* %151, i64 %136
  store i8 0, i8* %155, align 1
  br label %160

156:                                              ; preds = %135
  %157 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %132, i8* %131, i64 %136) #9
  br label %160

158:                                              ; preds = %130
  %159 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %132, i8* %131) #9
  br label %160

160:                                              ; preds = %154, %156, %158
  %161 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 2, i32 4, i64 0
  %162 = load i8, i8* %161, align 4
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %232, label %164

164:                                              ; preds = %160
  %165 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #9
  %166 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #9
  %167 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  store i8 2, i8* %168, align 1
  %169 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  store i16 8250, i16* %169, align 8
  %170 = getelementptr inbounds i8, i8* %166, i64 2
  store i8 0, i8* %170, align 2
  %171 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* %161) #9, !noalias !3
  %172 = bitcast %"class.std::__1::basic_string"* %171 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %165, i8* align 8 %172, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %172, i8 0, i64 24, i1 false) #9, !noalias !3
  %173 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  %177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load i8*, i8** %177, align 8
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %180 = load i64, i64* %179, align 8
  %181 = zext i8 %175 to i64
  %182 = select i1 %176, i8* %178, i8* %165
  %183 = select i1 %176, i64 %180, i64 %181
  %184 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %132, i8* %182, i64 %183) #9
  %185 = load i8, i8* %174, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %164
  %188 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %188) #10
  br label %189

189:                                              ; preds = %164, %187
  %190 = load i8, i8* %168, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %189
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  call void @_ZdlPv(i8* %194) #10
  br label %195

195:                                              ; preds = %189, %192
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #9
  br label %232

196:                                              ; preds = %128
  %197 = getelementptr inbounds [15 x i8], [15 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %197)
  %198 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %198) #9
  %199 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 1, i32 1
  %200 = load i32, i32* %199, align 4
  call void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* nonnull sret %8, i32 %200) #9
  %201 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %8, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #9, !noalias !6
  %202 = bitcast %"class.std::__1::basic_string"* %201 to i8*
  %203 = bitcast %"class.std::__1::basic_string"* %201 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %201, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %206 = bitcast i64* %205 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %197, i8* align 8 %206, i64 15, i1 false)
  %207 = getelementptr inbounds i8, i8* %202, i64 23
  %208 = load i8, i8* %207, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %202, i8 0, i64 24, i1 false) #9, !noalias !6
  %209 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 0, i32 4
  %210 = bitcast %"class.std::__1::basic_string"* %209 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %196
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  call void @_ZdlPv(i8* %216) #10
  br label %217

217:                                              ; preds = %214, %196
  %218 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = bitcast i8** %218 to i64*
  store i64 %204, i64* %219, align 8
  %220 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %221 = bitcast i64* %220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %221, i8* nonnull align 8 %197, i64 15, i1 false)
  %222 = bitcast %"class.dawn_native::vulkan::Adapter"* %1 to i8*
  %223 = getelementptr inbounds i8, i8* %222, i64 71
  store i8 %208, i8* %223, align 1
  %224 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %225 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %224, i64 0, i32 1, i32 0
  %226 = load i8, i8* %225, align 1
  %227 = icmp slt i8 %226, 0
  br i1 %227, label %228, label %231

228:                                              ; preds = %217
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load i8*, i8** %229, align 8
  call void @_ZdlPv(i8* %230) #10
  br label %231

231:                                              ; preds = %217, %228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %198) #9
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %197)
  br label %232

232:                                              ; preds = %160, %195, %231
  call void @_ZN11dawn_native6vulkan7Adapter29InitializeSupportedExtensionsEv(%"class.dawn_native::vulkan::Adapter"* %1)
  %233 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 1, i32 3
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 0, i32 1, i32 0
  store i32 %234, i32* %235, align 8
  %236 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 1, i32 2
  %237 = load i32, i32* %236, align 8
  %238 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 0, i32 1, i32 1
  store i32 %237, i32* %238, align 4
  %239 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 1, i32 5, i64 0
  %240 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 0, i32 1, i32 2
  %241 = load i8, i8* %239, align 1
  %242 = call i1 @llvm.is.constant.i8(i8 %241) #9
  br i1 %242, label %243, label %266

243:                                              ; preds = %232
  %244 = call i64 @strlen(i8* %239) #9
  %245 = icmp ult i64 %244, 23
  br i1 %245, label %246, label %264

246:                                              ; preds = %243
  %247 = bitcast %"class.std::__1::basic_string"* %240 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %247, i64 0, i32 1, i32 0
  %249 = load i8, i8* %248, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %255

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %244, i64* %252, align 8
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i8*, i8** %253, align 8
  br label %258

255:                                              ; preds = %246
  %256 = trunc i64 %244 to i8
  store i8 %256, i8* %248, align 1
  %257 = bitcast %"class.std::__1::basic_string"* %240 to i8*
  br label %258

258:                                              ; preds = %255, %251
  %259 = phi i8* [ %254, %251 ], [ %257, %255 ]
  %260 = icmp eq i64 %244, 0
  br i1 %260, label %262, label %261

261:                                              ; preds = %258
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %259, i8* align 1 %239, i64 %244, i1 false) #9
  br label %262

262:                                              ; preds = %261, %258
  %263 = getelementptr inbounds i8, i8* %259, i64 %244
  store i8 0, i8* %263, align 1
  br label %268

264:                                              ; preds = %243
  %265 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %240, i8* %239, i64 %244) #9
  br label %268

266:                                              ; preds = %232
  %267 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %240, i8* %239) #9
  br label %268

268:                                              ; preds = %262, %264, %266
  %269 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 3, i32 1, i32 4
  %270 = load i32, i32* %269, align 8
  %271 = add i32 %270, -1
  %272 = icmp ult i32 %271, 4
  br i1 %272, label %273, label %277

273:                                              ; preds = %268
  %274 = sext i32 %271 to i64
  %275 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN11dawn_native6vulkan7Adapter10InitializeEv, i64 0, i64 %274
  %276 = load i32, i32* %275, align 4
  br label %277

277:                                              ; preds = %268, %273
  %278 = phi i32 [ %276, %273 ], [ 3, %268 ]
  %279 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %1, i64 0, i32 0, i32 2
  store i32 %278, i32* %279, align 8
  %280 = bitcast %class.Result* %0 to i64*
  store i64 0, i64* %280, align 8
  br label %281

281:                                              ; preds = %126, %113, %13, %277
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN11dawn_native6vulkan16GatherDeviceInfoERKNS0_7AdapterE(%class.Result.52* sret, %"class.dawn_native::vulkan::Adapter"* dereferenceable(1912)) local_unnamed_addr #1

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6ResultIN11dawn_native6vulkan16VulkanDeviceInfoENS0_9ErrorDataEED2Ev(%class.Result.52*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.Result.52, %class.Result.52* %0, i64 0, i32 2, i32 7, i32 0, i32 0
  %3 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %2, align 8
  %4 = icmp eq %struct.VkLayerProperties* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %struct.VkLayerProperties* %3 to i64
  %7 = getelementptr inbounds %class.Result.52, %class.Result.52* %0, i64 0, i32 2, i32 7, i32 0, i32 1
  %8 = bitcast %struct.VkLayerProperties** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %3, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %class.Result.52, %class.Result.52* %0, i64 0, i32 2, i32 6, i32 0, i32 0
  %12 = load %struct.VkMemoryHeap*, %struct.VkMemoryHeap** %11, align 8
  %13 = icmp eq %struct.VkMemoryHeap* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %struct.VkMemoryHeap* %12 to i64
  %16 = getelementptr inbounds %class.Result.52, %class.Result.52* %0, i64 0, i32 2, i32 6, i32 0, i32 1
  %17 = bitcast %struct.VkMemoryHeap** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %struct.VkMemoryHeap* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %14, %10
  %20 = getelementptr inbounds %class.Result.52, %class.Result.52* %0, i64 0, i32 2, i32 5, i32 0, i32 0
  %21 = load %struct.VkMemoryType*, %struct.VkMemoryType** %20, align 8
  %22 = icmp eq %struct.VkMemoryType* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %struct.VkMemoryType* %21 to i64
  %25 = getelementptr inbounds %class.Result.52, %class.Result.52* %0, i64 0, i32 2, i32 5, i32 0, i32 1
  %26 = bitcast %struct.VkMemoryType** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %struct.VkMemoryType* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %23, %19
  %29 = getelementptr inbounds %class.Result.52, %class.Result.52* %0, i64 0, i32 2, i32 4, i32 0, i32 0
  %30 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %29, align 8
  %31 = icmp eq %struct.VkQueueFamilyProperties* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = ptrtoint %struct.VkQueueFamilyProperties* %30 to i64
  %34 = getelementptr inbounds %class.Result.52, %class.Result.52* %0, i64 0, i32 2, i32 4, i32 0, i32 1
  %35 = bitcast %struct.VkQueueFamilyProperties** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast %struct.VkQueueFamilyProperties* %30 to i8*
  tail call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %28, %32
  %38 = getelementptr inbounds %class.Result.52, %class.Result.52* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %38, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %38, align 8
  %40 = icmp eq %"class.dawn_native::ErrorData"* %39, null
  br i1 %40, label %61, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %39, i64 0, i32 2, i32 0, i32 0
  %43 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %42, align 8
  %44 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %43 to i64
  %47 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %39, i64 0, i32 2, i32 0, i32 1
  %48 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %45, %41
  %51 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %39, i64 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void @_ZdlPv(i8* %58) #10
  br label %59

59:                                               ; preds = %56, %50
  %60 = bitcast %"class.dawn_native::ErrorData"* %39 to i8*
  tail call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %37, %59
  ret void
}

declare zeroext i1 @_ZNK11dawn_native6vulkan17VulkanDeviceKnobs6HasExtENS0_9DeviceExtE(%"struct.dawn_native::vulkan::VulkanDeviceKnobs"*, i32) local_unnamed_addr #1

declare %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32, %"class.std::__1::basic_string"*, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan7Adapter29InitializeSupportedExtensionsEv(%"class.dawn_native::vulkan::Adapter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 0
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 0, i32 0, i32 22
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN11dawn_native13ExtensionsSet15EnableExtensionENS_9ExtensionE(%"struct.dawn_native::ExtensionsSet"* %7, i32 0) #9
  br label %8

8:                                                ; preds = %6, %1
  %9 = tail call zeroext i1 @_ZNK11dawn_native6vulkan17VulkanDeviceKnobs6HasExtENS0_9DeviceExtE(%"struct.dawn_native::vulkan::VulkanDeviceKnobs"* %2, i32 13) #9
  br i1 %9, label %10, label %26

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 0, i32 1, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZNK11dawn_native6vulkan17VulkanDeviceKnobs6HasExtENS0_9DeviceExtE(%"struct.dawn_native::vulkan::VulkanDeviceKnobs"* %2, i32 9) #9
  br i1 %15, label %16, label %26

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 0, i32 2, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 0, i32 2, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN11dawn_native13ExtensionsSet15EnableExtensionENS_9ExtensionE(%"struct.dawn_native::ExtensionsSet"* %25, i32 1) #9
  br label %26

26:                                               ; preds = %24, %20, %16, %14, %10, %8
  %27 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 0, i32 0, i32 24
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN11dawn_native13ExtensionsSet15EnableExtensionENS_9ExtensionE(%"struct.dawn_native::ExtensionsSet"* %31, i32 2) #9
  br label %32

32:                                               ; preds = %30, %26
  %33 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 1, i32 7, i32 91
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN11dawn_native13ExtensionsSet15EnableExtensionENS_9ExtensionE(%"struct.dawn_native::ExtensionsSet"* %37, i32 3) #9
  br label %38

38:                                               ; preds = %36, %32
  ret void
}

declare void @_ZN11dawn_native13ExtensionsSet15EnableExtensionENS_9ExtensionE(%"struct.dawn_native::ExtensionsSet"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan7Adapter16CreateDeviceImplEPKNS_16DeviceDescriptorE(%class.Result.60* noalias nocapture sret, %"class.dawn_native::vulkan::Adapter"*, %"struct.dawn_native::DeviceDescriptor"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.Result.61, align 8
  %5 = bitcast %class.Result.61* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  call void @_ZN11dawn_native6vulkan6Device6CreateEPNS0_7AdapterEPKNS_16DeviceDescriptorE(%class.Result.61* nonnull sret %4, %"class.dawn_native::vulkan::Adapter"* %1, %"struct.dawn_native::DeviceDescriptor"* %2) #9
  %6 = getelementptr inbounds %class.Result.60, %class.Result.60* %0, i64 0, i32 0
  %7 = getelementptr inbounds %class.Result.61, %class.Result.61* %4, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

declare void @_ZN11dawn_native6vulkan6Device6CreateEPNS0_7AdapterEPKNS_16DeviceDescriptorE(%class.Result.61* sret, %"class.dawn_native::vulkan::Adapter"*, %"struct.dawn_native::DeviceDescriptor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native6vulkan7AdapterD2Ev(%"class.dawn_native::vulkan::Adapter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan7AdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 7, i32 0, i32 0
  %4 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %3, align 8
  %5 = icmp eq %struct.VkLayerProperties* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %struct.VkLayerProperties* %4 to i64
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 7, i32 0, i32 1
  %9 = bitcast %struct.VkLayerProperties** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %4, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 6, i32 0, i32 0
  %13 = load %struct.VkMemoryHeap*, %struct.VkMemoryHeap** %12, align 8
  %14 = icmp eq %struct.VkMemoryHeap* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %struct.VkMemoryHeap* %13 to i64
  %17 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 6, i32 0, i32 1
  %18 = bitcast %struct.VkMemoryHeap** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %struct.VkMemoryHeap* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 5, i32 0, i32 0
  %22 = load %struct.VkMemoryType*, %struct.VkMemoryType** %21, align 8
  %23 = icmp eq %struct.VkMemoryType* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %struct.VkMemoryType* %22 to i64
  %26 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 5, i32 0, i32 1
  %27 = bitcast %struct.VkMemoryType** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %struct.VkMemoryType* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %24, %20
  %30 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %31 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %30, align 8
  %32 = icmp eq %struct.VkQueueFamilyProperties* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %struct.VkQueueFamilyProperties* %31 to i64
  %35 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 3, i32 4, i32 0, i32 1
  %36 = bitcast %struct.VkQueueFamilyProperties** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %struct.VkQueueFamilyProperties* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %29, %33
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native11AdapterBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 0, i32 4
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #10
  br label %47

47:                                               ; preds = %44, %38
  %48 = getelementptr inbounds %"class.dawn_native::vulkan::Adapter", %"class.dawn_native::vulkan::Adapter"* %0, i64 0, i32 0, i32 1, i32 2
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #10
  br label %56

56:                                               ; preds = %47, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native6vulkan7AdapterD0Ev(%"class.dawn_native::vulkan::Adapter"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN11dawn_native6vulkan7AdapterD2Ev(%"class.dawn_native::vulkan::Adapter"* %0) #9
  %2 = bitcast %"class.dawn_native::vulkan::Adapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

declare void @_ZN11dawn_native11AdapterBase33ResetInternalDeviceForTestingImplEv(%class.Result* sret, %"class.dawn_native::AdapterBase"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
