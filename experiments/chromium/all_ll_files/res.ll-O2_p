; ModuleID = 'gen/ui/gfx/x/res.cc'
source_filename = "gen/ui/gfx/x/res.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.x11::Res" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.175", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.188", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.234", %"class.base::circular_deque", %"class.base::ObserverList.240", %"class.x11::Event"*, %"class.base::circular_deque.244", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.256" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.x11::Res"* }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.181" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.178" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.181" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.182", i64, i32, [4 x i8] }>
%"class.base::LinkedList.182" = type { %"class.base::LinkNode.183" }
%"class.base::LinkNode.183" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.199", %"class.std::__1::vector.206" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.201" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.208" }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.210" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.227" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.229" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.240" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.241", i64, i32, [4 x i8] }>
%"class.base::LinkedList.241" = type { %"class.base::LinkNode.242" }
%"class.base::LinkNode.242" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type opaque
%"class.base::circular_deque.244" = type { %"class.base::internal::VectorBuffer.245", i64, i64 }
%"class.base::internal::VectorBuffer.245" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.247, %"class.std::__1::unique_ptr.249" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.247 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.248", [4 x i8] }>
%"class.base::RefCountedThreadSafe.248" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.255 }
%union.anon.255 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.256" = type { %"class.base::internal::CallbackBase" }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"struct.x11::Res::QueryVersionRequest" = type { i8, i8 }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector.270"* }
%"class.std::__1::vector.270" = type { %"class.std::__1::__vector_base.271" }
%"class.std::__1::__vector_base.271" = type { i8*, i8*, %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { i8* }
%"class.x11::WriteBuffer" = type { %"class.std::__1::vector.263", %"class.std::__1::vector.270", i64, %"class.std::__1::vector.277" }
%"class.std::__1::vector.263" = type { %"class.std::__1::__vector_base.264" }
%"class.std::__1::__vector_base.264" = type { %class.scoped_refptr.247*, %class.scoped_refptr.247*, %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %class.scoped_refptr.247* }
%"class.std::__1::vector.277" = type { %"class.std::__1::__vector_base.278" }
%"class.std::__1::__vector_base.278" = type { i32*, i32*, %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { i32* }
%"struct.x11::Res::QueryVersionReply" = type { i16, i16, i16 }
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.247, i64, i32* }
%"struct.x11::Res::QueryClientsRequest" = type { i8 }
%"struct.x11::Res::QueryClientsReply" = type { i16, %"class.std::__1::vector.294" }
%"class.std::__1::vector.294" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { %"struct.x11::Res::Client"*, %"struct.x11::Res::Client"*, %"class.std::__1::__compressed_pair.296" }
%"struct.x11::Res::Client" = type { i32, i32 }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.x11::Res::Client"* }
%"struct.x11::Res::QueryClientResourcesRequest" = type { i32 }
%"struct.x11::Res::QueryClientResourcesReply" = type { i16, %"class.std::__1::vector.308" }
%"class.std::__1::vector.308" = type { %"class.std::__1::__vector_base.309" }
%"class.std::__1::__vector_base.309" = type { %"struct.x11::Res::Type"*, %"struct.x11::Res::Type"*, %"class.std::__1::__compressed_pair.310" }
%"struct.x11::Res::Type" = type { i32, i32 }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.x11::Res::Type"* }
%"struct.x11::Res::QueryClientPixmapBytesRequest" = type { i32 }
%"struct.x11::Res::QueryClientPixmapBytesReply" = type { i16, i32, i32 }
%"struct.x11::Res::QueryClientIdsRequest" = type { %"class.std::__1::vector.327" }
%"class.std::__1::vector.327" = type { %"class.std::__1::__vector_base.328" }
%"class.std::__1::__vector_base.328" = type { %"struct.x11::Res::ClientIdSpec"*, %"struct.x11::Res::ClientIdSpec"*, %"class.std::__1::__compressed_pair.329" }
%"struct.x11::Res::ClientIdSpec" = type { i32, i32 }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"struct.x11::Res::ClientIdSpec"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.x11::Res::QueryClientIdsReply" = type { i16, %"class.std::__1::vector.338" }
%"class.std::__1::vector.338" = type { %"class.std::__1::__vector_base.339" }
%"class.std::__1::__vector_base.339" = type { %"struct.x11::Res::ClientIdValue"*, %"struct.x11::Res::ClientIdValue"*, %"class.std::__1::__compressed_pair.347" }
%"struct.x11::Res::ClientIdValue" = type { %"struct.x11::Res::ClientIdSpec", i32, %"class.std::__1::vector.340" }
%"class.std::__1::vector.340" = type { %"class.std::__1::__vector_base.341" }
%"class.std::__1::__vector_base.341" = type { i32*, i32*, %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { i32* }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"struct.x11::Res::ClientIdValue"* }
%"struct.x11::Res::QueryResourceBytesRequest" = type { i32, %"class.std::__1::vector.358" }
%"class.std::__1::vector.358" = type { %"class.std::__1::__vector_base.359" }
%"class.std::__1::__vector_base.359" = type { %"struct.x11::Res::ResourceIdSpec"*, %"struct.x11::Res::ResourceIdSpec"*, %"class.std::__1::__compressed_pair.360" }
%"struct.x11::Res::ResourceIdSpec" = type { i32, i32 }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"struct.x11::Res::ResourceIdSpec"* }
%"struct.x11::Res::QueryResourceBytesReply" = type { i16, %"class.std::__1::vector.369" }
%"class.std::__1::vector.369" = type { %"class.std::__1::__vector_base.370" }
%"class.std::__1::__vector_base.370" = type { %"struct.x11::Res::ResourceSizeValue"*, %"struct.x11::Res::ResourceSizeValue"*, %"class.std::__1::__compressed_pair.378" }
%"struct.x11::Res::ResourceSizeValue" = type { %"struct.x11::Res::ResourceSizeSpec", %"class.std::__1::vector.371" }
%"struct.x11::Res::ResourceSizeSpec" = type { %"struct.x11::Res::ResourceIdSpec", i32, i32, i32 }
%"class.std::__1::vector.371" = type { %"class.std::__1::__vector_base.372" }
%"class.std::__1::__vector_base.372" = type { %"struct.x11::Res::ResourceSizeSpec"*, %"struct.x11::Res::ResourceSizeSpec"*, %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"struct.x11::Res::ResourceSizeSpec"* }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"struct.x11::Res::ResourceSizeValue"* }

$_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh = comdat any

$_ZNSt3__16vectorIN3x113Res6ClientENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Res4TypeENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Res13ClientIdValueENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Res17ResourceSizeValueENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Res16ResourceSizeSpecENS_9allocatorIS3_EEE8__appendEm = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Res::QueryVersion\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Res::QueryClients\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"Res::QueryClientResources\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"Res::QueryClientPixmapBytes\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Res::QueryClientIds\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"Res::QueryResourceBytes\00", align 1

@_ZN3x113ResC1EPNS_10ConnectionERKNS_19QueryExtensionReplyE = hidden unnamed_addr alias void (%"class.x11::Res"*, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"*), void (%"class.x11::Res"*, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"*)* @_ZN3x113ResC2EPNS_10ConnectionERKNS_19QueryExtensionReplyE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x113ResC2EPNS_10ConnectionERKNS_19QueryExtensionReplyE(%"class.x11::Res"* nocapture, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"* nocapture readonly dereferenceable(6)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 0
  store %"class.x11::Connection"* %1, %"class.x11::Connection"** %4, align 8
  %5 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 1
  %6 = bitcast %"struct.x11::QueryExtensionReply"* %5 to i8*
  %7 = bitcast %"struct.x11::QueryExtensionReply"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 2 %7, i64 6, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Res12QueryVersionERKNS0_19QueryVersionRequestE(%"class.x11::Res"* nocapture readonly, %"struct.x11::Res::QueryVersionRequest"* dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.x11::WriteBuffer", align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 0
  %15 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %15) #8
  br i1 %16, label %17, label %73

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %73, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.x11::WriteBuffer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  %23 = getelementptr inbounds %"struct.x11::Res::QueryVersionRequest", %"struct.x11::Res::QueryVersionRequest"* %1, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  %24 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 1, i32 2
  %25 = load i8, i8* %24, align 1
  store i8 %25, i8* %12, align 1
  %26 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 1
  %27 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.270"* %26, %"class.std::__1::vector.270"** %28, align 8
  %29 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %12) #8
  %30 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  store i8 0, i8* %13, align 1
  %33 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %26, %"class.std::__1::vector.270"** %34, align 8
  %35 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %36 = load i64, i64* %30, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 0, i8* %6, align 1
  %38 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %39 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #8
  store %"class.std::__1::vector.270"* %26, %"class.std::__1::vector.270"** %39, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8
  %41 = load i64, i64* %30, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #8
  store %"class.std::__1::vector.270"* %26, %"class.std::__1::vector.270"** %39, align 8
  %43 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8
  %44 = load i64, i64* %30, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %30, align 8
  %46 = getelementptr inbounds %"struct.x11::Res::QueryVersionRequest", %"struct.x11::Res::QueryVersionRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.270"* %26, %"class.std::__1::vector.270"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %23) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %50 = load i64, i64* %30, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %30, align 8
  %52 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #8
  %53 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %26, %"class.std::__1::vector.270"** %53, align 8
  %54 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %46) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #8
  %55 = load i64, i64* %30, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %30, align 8
  %57 = and i64 %55, 3
  %58 = xor i64 %57, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  store i8 0, i8* %10, align 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %21
  %61 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %62 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  br label %63

63:                                               ; preds = %63, %60
  %64 = phi i64 [ 0, %60 ], [ %68, %63 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #8
  store %"class.std::__1::vector.270"* %26, %"class.std::__1::vector.270"** %62, align 8
  %65 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #8
  %66 = load i64, i64* %30, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %30, align 8
  %68 = add nuw nsw i64 %64, 1
  %69 = icmp eq i64 %68, %58
  br i1 %69, label %70, label %63

70:                                               ; preds = %63, %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  %71 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %72 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %71, %"class.x11::WriteBuffer"* nonnull %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #8
  br label %73

73:                                               ; preds = %2, %17, %70
  %74 = phi %"class.x11::Connection::FutureImpl"* [ %72, %70 ], [ null, %17 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %74
}

declare zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Res12QueryVersionERKhS2_(%"class.x11::Res"* nocapture readonly, i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::Res::QueryVersionRequest", align 1
  %5 = getelementptr inbounds %"struct.x11::Res::QueryVersionRequest", %"struct.x11::Res::QueryVersionRequest"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5) #8
  %6 = load i8, i8* %1, align 1
  store i8 %6, i8* %5, align 1
  %7 = getelementptr inbounds %"struct.x11::Res::QueryVersionRequest", %"struct.x11::Res::QueryVersionRequest"* %4, i64 0, i32 1
  %8 = load i8, i8* %2, align 1
  store i8 %8, i8* %7, align 1
  %9 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Res12QueryVersionERKNS0_19QueryVersionRequestE(%"class.x11::Res"* %0, %"struct.x11::Res::QueryVersionRequest"* nonnull dereferenceable(2) %4)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5) #8
  ret %"class.x11::Connection::FutureImpl"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Res::QueryVersionReply"* @_ZN3x116detail9ReadReplyINS_3Res17QueryVersionReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 6) #9
  %3 = bitcast i8* %2 to %"struct.x11::Res::QueryVersionReply"*
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 2
  %6 = bitcast i8* %5 to i16*
  %7 = getelementptr inbounds i8, i8* %2, i64 4
  %8 = bitcast i8* %7 to i16*
  %9 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %12 = bitcast %"class.base::RefCountedMemory"* %11 to i8* (%"class.base::RefCountedMemory"*)***
  %13 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %12, align 8
  %14 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %13, align 8
  %15 = tail call i8* %14(%"class.base::RefCountedMemory"* %11) #8
  %16 = load i64, i64* %9, align 8
  %17 = add i64 %16, 2
  store i64 %17, i64* %9, align 8
  %18 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %19 = bitcast %"class.base::RefCountedMemory"* %18 to i8* (%"class.base::RefCountedMemory"*)***
  %20 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %19, align 8
  %21 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %20, align 8
  %22 = tail call i8* %21(%"class.base::RefCountedMemory"* %18) #8
  %23 = load i64, i64* %9, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to i16*
  %26 = load i16, i16* %25, align 1
  store i16 %26, i16* %4, align 2
  %27 = add i64 %23, 2
  store i64 %27, i64* %9, align 8
  %28 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %29 = bitcast %"class.base::RefCountedMemory"* %28 to i8* (%"class.base::RefCountedMemory"*)***
  %30 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %29, align 8
  %31 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %30, align 8
  %32 = tail call i8* %31(%"class.base::RefCountedMemory"* %28) #8
  %33 = load i64, i64* %9, align 8
  %34 = add i64 %33, 4
  store i64 %34, i64* %9, align 8
  %35 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %36 = bitcast %"class.base::RefCountedMemory"* %35 to i8* (%"class.base::RefCountedMemory"*)***
  %37 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %37, align 8
  %39 = tail call i8* %38(%"class.base::RefCountedMemory"* %35) #8
  %40 = load i64, i64* %9, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  %42 = bitcast i8* %41 to i16*
  %43 = load i16, i16* %42, align 1
  store i16 %43, i16* %6, align 2
  %44 = add i64 %40, 2
  store i64 %44, i64* %9, align 8
  %45 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %46 = bitcast %"class.base::RefCountedMemory"* %45 to i8* (%"class.base::RefCountedMemory"*)***
  %47 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %46, align 8
  %48 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %47, align 8
  %49 = tail call i8* %48(%"class.base::RefCountedMemory"* %45) #8
  %50 = load i64, i64* %9, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  %52 = bitcast i8* %51 to i16*
  %53 = load i16, i16* %52, align 1
  store i16 %53, i16* %8, align 2
  %54 = add i64 %50, 2
  %55 = sub i64 2, %50
  %56 = and i64 %55, 3
  %57 = add i64 %54, %56
  store i64 %57, i64* %9, align 8
  ret %"struct.x11::Res::QueryVersionReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Res12QueryClientsERKNS0_19QueryClientsRequestE(%"class.x11::Res"* nocapture readonly, %"struct.x11::Res::QueryClientsRequest"* nocapture readnone dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.x11::WriteBuffer", align 8
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 0
  %13 = load %"class.x11::Connection"*, %"class.x11::Connection"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %13) #8
  br i1 %14, label %15, label %59

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %59, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.x11::WriteBuffer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %9) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  %21 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 1, i32 2
  %22 = load i8, i8* %21, align 1
  store i8 %22, i8* %10, align 1
  %23 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %9, i64 0, i32 1
  %24 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %25, align 8
  %26 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %10) #8
  %27 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %9, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  store i8 1, i8* %11, align 1
  %30 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %31, align 8
  %32 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  %33 = load i64, i64* %27, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 0, i8* %4, align 1
  %35 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %36 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %36, align 8
  %37 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  %38 = load i64, i64* %27, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %36, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  %41 = load i64, i64* %27, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  %43 = and i64 %41, 3
  %44 = xor i64 %43, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #8
  store i8 0, i8* %8, align 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %19
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  br label %49

49:                                               ; preds = %49, %46
  %50 = phi i64 [ 0, %46 ], [ %54, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %48, align 8
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %52 = load i64, i64* %27, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %27, align 8
  %54 = add nuw nsw i64 %50, 1
  %55 = icmp eq i64 %54, %44
  br i1 %55, label %56, label %49

56:                                               ; preds = %49, %19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #8
  %57 = load %"class.x11::Connection"*, %"class.x11::Connection"** %12, align 8
  %58 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %57, %"class.x11::WriteBuffer"* nonnull %9, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %20) #8
  br label %59

59:                                               ; preds = %2, %15, %56
  %60 = phi %"class.x11::Connection::FutureImpl"* [ %58, %56 ], [ null, %15 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %60
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Res12QueryClientsEv(%"class.x11::Res"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x113Res12QueryClientsERKNS0_19QueryClientsRequestE(%"class.x11::Res"* %0, %"struct.x11::Res::QueryClientsRequest"* dereferenceable(1) undef)
  ret %"class.x11::Connection::FutureImpl"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Res::QueryClientsReply"* @_ZN3x116detail9ReadReplyINS_3Res17QueryClientsReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 32) #9
  %3 = bitcast i8* %2 to %"struct.x11::Res::QueryClientsReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 32, i1 false) #8
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %9 = bitcast %"class.base::RefCountedMemory"* %8 to i8* (%"class.base::RefCountedMemory"*)***
  %10 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %9, align 8
  %11 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %10, align 8
  %12 = tail call i8* %11(%"class.base::RefCountedMemory"* %8) #8
  %13 = load i64, i64* %6, align 8
  %14 = add i64 %13, 2
  store i64 %14, i64* %6, align 8
  %15 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %16 = bitcast %"class.base::RefCountedMemory"* %15 to i8* (%"class.base::RefCountedMemory"*)***
  %17 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %16, align 8
  %18 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %17, align 8
  %19 = tail call i8* %18(%"class.base::RefCountedMemory"* %15) #8
  %20 = load i64, i64* %6, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 1
  store i16 %23, i16* %4, align 2
  %24 = add i64 %20, 2
  store i64 %24, i64* %6, align 8
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %26 = bitcast %"class.base::RefCountedMemory"* %25 to i8* (%"class.base::RefCountedMemory"*)***
  %27 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %26, align 8
  %28 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %27, align 8
  %29 = tail call i8* %28(%"class.base::RefCountedMemory"* %25) #8
  %30 = load i64, i64* %6, align 8
  %31 = add i64 %30, 4
  store i64 %31, i64* %6, align 8
  %32 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %33 = bitcast %"class.base::RefCountedMemory"* %32 to i8* (%"class.base::RefCountedMemory"*)***
  %34 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %33, align 8
  %35 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %34, align 8
  %36 = tail call i8* %35(%"class.base::RefCountedMemory"* %32) #8
  %37 = load i64, i64* %6, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = add i64 %37, 24
  store i64 %41, i64* %6, align 8
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %1
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds i8, i8* %2, i64 16
  %46 = bitcast i8* %45 to %"struct.x11::Res::Client"**
  %47 = bitcast i8* %5 to %"class.std::__1::vector.294"*
  tail call void @_ZNSt3__16vectorIN3x113Res6ClientENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.294"* %47, i64 %44) #8
  %48 = bitcast i8* %5 to %"struct.x11::Res::Client"**
  %49 = load %"struct.x11::Res::Client"*, %"struct.x11::Res::Client"** %48, align 8
  %50 = load %"struct.x11::Res::Client"*, %"struct.x11::Res::Client"** %46, align 8
  %51 = icmp eq %"struct.x11::Res::Client"* %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %1, %43
  %53 = load i64, i64* %6, align 8
  br label %54

54:                                               ; preds = %59, %52
  %55 = phi i64 [ %53, %52 ], [ %84, %59 ]
  %56 = sub i64 0, %55
  %57 = and i64 %56, 3
  %58 = add i64 %57, %55
  store i64 %58, i64* %6, align 8
  ret %"struct.x11::Res::QueryClientsReply"* %3

59:                                               ; preds = %43, %59
  %60 = phi %"struct.x11::Res::Client"* [ %85, %59 ], [ %49, %43 ]
  %61 = getelementptr inbounds %"struct.x11::Res::Client", %"struct.x11::Res::Client"* %60, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.x11::Res::Client", %"struct.x11::Res::Client"* %60, i64 0, i32 1
  %63 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %64 = bitcast %"class.base::RefCountedMemory"* %63 to i8* (%"class.base::RefCountedMemory"*)***
  %65 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %64, align 8
  %66 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %65, align 8
  %67 = tail call i8* %66(%"class.base::RefCountedMemory"* %63) #8
  %68 = load i64, i64* %6, align 8
  %69 = getelementptr inbounds i8, i8* %67, i64 %68
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 1
  store i32 %71, i32* %61, align 4
  %72 = load i64, i64* %6, align 8
  %73 = add i64 %72, 4
  store i64 %73, i64* %6, align 8
  %74 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %75 = bitcast %"class.base::RefCountedMemory"* %74 to i8* (%"class.base::RefCountedMemory"*)***
  %76 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %75, align 8
  %77 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %76, align 8
  %78 = tail call i8* %77(%"class.base::RefCountedMemory"* %74) #8
  %79 = load i64, i64* %6, align 8
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 1
  store i32 %82, i32* %62, align 4
  %83 = load i64, i64* %6, align 8
  %84 = add i64 %83, 4
  store i64 %84, i64* %6, align 8
  %85 = getelementptr inbounds %"struct.x11::Res::Client", %"struct.x11::Res::Client"* %60, i64 1
  %86 = icmp eq %"struct.x11::Res::Client"* %85, %50
  br i1 %86, label %54, label %59
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Res20QueryClientResourcesERKNS0_27QueryClientResourcesRequestE(%"class.x11::Res"* nocapture readonly, %"struct.x11::Res::QueryClientResourcesRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.x11::WriteBuffer", align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 0
  %14 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %14) #8
  br i1 %15, label %16, label %72

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.x11::WriteBuffer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  %22 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 1, i32 2
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %11, align 1
  %24 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 1
  %25 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %26, align 8
  %27 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %11) #8
  %28 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 2, i8* %12, align 1
  %31 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %32, align 8
  %33 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %36 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %42 = load i64, i64* %28, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %44 = bitcast %"struct.x11::Res::QueryClientResourcesRequest"* %1 to i8*
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %44) #8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %48) #8
  %50 = getelementptr inbounds i8, i8* %44, i64 2
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %44, i64 3
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %52) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %54 = load i64, i64* %28, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %28, align 8
  %56 = sub i64 0, %54
  %57 = and i64 %56, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %20
  %60 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %61 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i64 [ 0, %59 ], [ %67, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %61, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %65 = load i64, i64* %28, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %28, align 8
  %67 = add nuw nsw i64 %63, 1
  %68 = icmp eq i64 %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %70 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %71 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %70, %"class.x11::WriteBuffer"* nonnull %10, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #8
  br label %72

72:                                               ; preds = %2, %16, %69
  %73 = phi %"class.x11::Connection::FutureImpl"* [ %71, %69 ], [ null, %16 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Res20QueryClientResourcesERKj(%"class.x11::Res"* nocapture readonly, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::Res::QueryClientResourcesRequest", align 4
  %4 = bitcast %"struct.x11::Res::QueryClientResourcesRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.x11::Res::QueryClientResourcesRequest", %"struct.x11::Res::QueryClientResourcesRequest"* %3, i64 0, i32 0
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Res20QueryClientResourcesERKNS0_27QueryClientResourcesRequestE(%"class.x11::Res"* %0, %"struct.x11::Res::QueryClientResourcesRequest"* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Res::QueryClientResourcesReply"* @_ZN3x116detail9ReadReplyINS_3Res25QueryClientResourcesReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 32) #9
  %3 = bitcast i8* %2 to %"struct.x11::Res::QueryClientResourcesReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 32, i1 false) #8
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %9 = bitcast %"class.base::RefCountedMemory"* %8 to i8* (%"class.base::RefCountedMemory"*)***
  %10 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %9, align 8
  %11 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %10, align 8
  %12 = tail call i8* %11(%"class.base::RefCountedMemory"* %8) #8
  %13 = load i64, i64* %6, align 8
  %14 = add i64 %13, 2
  store i64 %14, i64* %6, align 8
  %15 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %16 = bitcast %"class.base::RefCountedMemory"* %15 to i8* (%"class.base::RefCountedMemory"*)***
  %17 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %16, align 8
  %18 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %17, align 8
  %19 = tail call i8* %18(%"class.base::RefCountedMemory"* %15) #8
  %20 = load i64, i64* %6, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 1
  store i16 %23, i16* %4, align 2
  %24 = add i64 %20, 2
  store i64 %24, i64* %6, align 8
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %26 = bitcast %"class.base::RefCountedMemory"* %25 to i8* (%"class.base::RefCountedMemory"*)***
  %27 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %26, align 8
  %28 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %27, align 8
  %29 = tail call i8* %28(%"class.base::RefCountedMemory"* %25) #8
  %30 = load i64, i64* %6, align 8
  %31 = add i64 %30, 4
  store i64 %31, i64* %6, align 8
  %32 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %33 = bitcast %"class.base::RefCountedMemory"* %32 to i8* (%"class.base::RefCountedMemory"*)***
  %34 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %33, align 8
  %35 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %34, align 8
  %36 = tail call i8* %35(%"class.base::RefCountedMemory"* %32) #8
  %37 = load i64, i64* %6, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = add i64 %37, 24
  store i64 %41, i64* %6, align 8
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %1
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds i8, i8* %2, i64 16
  %46 = bitcast i8* %45 to %"struct.x11::Res::Type"**
  %47 = bitcast i8* %5 to %"class.std::__1::vector.308"*
  tail call void @_ZNSt3__16vectorIN3x113Res4TypeENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.308"* %47, i64 %44) #8
  %48 = bitcast i8* %5 to %"struct.x11::Res::Type"**
  %49 = load %"struct.x11::Res::Type"*, %"struct.x11::Res::Type"** %48, align 8
  %50 = load %"struct.x11::Res::Type"*, %"struct.x11::Res::Type"** %46, align 8
  %51 = icmp eq %"struct.x11::Res::Type"* %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %1, %43
  %53 = load i64, i64* %6, align 8
  br label %54

54:                                               ; preds = %59, %52
  %55 = phi i64 [ %53, %52 ], [ %84, %59 ]
  %56 = sub i64 0, %55
  %57 = and i64 %56, 3
  %58 = add i64 %57, %55
  store i64 %58, i64* %6, align 8
  ret %"struct.x11::Res::QueryClientResourcesReply"* %3

59:                                               ; preds = %43, %59
  %60 = phi %"struct.x11::Res::Type"* [ %85, %59 ], [ %49, %43 ]
  %61 = getelementptr inbounds %"struct.x11::Res::Type", %"struct.x11::Res::Type"* %60, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.x11::Res::Type", %"struct.x11::Res::Type"* %60, i64 0, i32 1
  %63 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %64 = bitcast %"class.base::RefCountedMemory"* %63 to i8* (%"class.base::RefCountedMemory"*)***
  %65 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %64, align 8
  %66 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %65, align 8
  %67 = tail call i8* %66(%"class.base::RefCountedMemory"* %63) #8
  %68 = load i64, i64* %6, align 8
  %69 = getelementptr inbounds i8, i8* %67, i64 %68
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 1
  store i32 %71, i32* %61, align 4
  %72 = load i64, i64* %6, align 8
  %73 = add i64 %72, 4
  store i64 %73, i64* %6, align 8
  %74 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %75 = bitcast %"class.base::RefCountedMemory"* %74 to i8* (%"class.base::RefCountedMemory"*)***
  %76 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %75, align 8
  %77 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %76, align 8
  %78 = tail call i8* %77(%"class.base::RefCountedMemory"* %74) #8
  %79 = load i64, i64* %6, align 8
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 1
  store i32 %82, i32* %62, align 4
  %83 = load i64, i64* %6, align 8
  %84 = add i64 %83, 4
  store i64 %84, i64* %6, align 8
  %85 = getelementptr inbounds %"struct.x11::Res::Type", %"struct.x11::Res::Type"* %60, i64 1
  %86 = icmp eq %"struct.x11::Res::Type"* %85, %50
  br i1 %86, label %54, label %59
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Res22QueryClientPixmapBytesERKNS0_29QueryClientPixmapBytesRequestE(%"class.x11::Res"* nocapture readonly, %"struct.x11::Res::QueryClientPixmapBytesRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.x11::WriteBuffer", align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 0
  %14 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %14) #8
  br i1 %15, label %16, label %72

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.x11::WriteBuffer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  %22 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 1, i32 2
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %11, align 1
  %24 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 1
  %25 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %26, align 8
  %27 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %11) #8
  %28 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 3, i8* %12, align 1
  %31 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %32, align 8
  %33 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %36 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %42 = load i64, i64* %28, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %44 = bitcast %"struct.x11::Res::QueryClientPixmapBytesRequest"* %1 to i8*
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %44) #8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %48) #8
  %50 = getelementptr inbounds i8, i8* %44, i64 2
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %44, i64 3
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %52) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %54 = load i64, i64* %28, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %28, align 8
  %56 = sub i64 0, %54
  %57 = and i64 %56, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %20
  %60 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %61 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i64 [ 0, %59 ], [ %67, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %61, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %65 = load i64, i64* %28, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %28, align 8
  %67 = add nuw nsw i64 %63, 1
  %68 = icmp eq i64 %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %70 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %71 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %70, %"class.x11::WriteBuffer"* nonnull %10, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #8
  br label %72

72:                                               ; preds = %2, %16, %69
  %73 = phi %"class.x11::Connection::FutureImpl"* [ %71, %69 ], [ null, %16 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Res22QueryClientPixmapBytesERKj(%"class.x11::Res"* nocapture readonly, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::Res::QueryClientPixmapBytesRequest", align 4
  %4 = bitcast %"struct.x11::Res::QueryClientPixmapBytesRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.x11::Res::QueryClientPixmapBytesRequest", %"struct.x11::Res::QueryClientPixmapBytesRequest"* %3, i64 0, i32 0
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Res22QueryClientPixmapBytesERKNS0_29QueryClientPixmapBytesRequestE(%"class.x11::Res"* %0, %"struct.x11::Res::QueryClientPixmapBytesRequest"* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Res::QueryClientPixmapBytesReply"* @_ZN3x116detail9ReadReplyINS_3Res27QueryClientPixmapBytesReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 12) #9
  %3 = bitcast i8* %2 to %"struct.x11::Res::QueryClientPixmapBytesReply"*
  %4 = bitcast i8* %2 to i32*
  store i32 0, i32* %4, align 4
  %5 = bitcast i8* %2 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %13 = bitcast %"class.base::RefCountedMemory"* %12 to i8* (%"class.base::RefCountedMemory"*)***
  %14 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %13, align 8
  %15 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %14, align 8
  %16 = tail call i8* %15(%"class.base::RefCountedMemory"* %12) #8
  %17 = load i64, i64* %10, align 8
  %18 = add i64 %17, 2
  store i64 %18, i64* %10, align 8
  %19 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %20 = bitcast %"class.base::RefCountedMemory"* %19 to i8* (%"class.base::RefCountedMemory"*)***
  %21 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %20, align 8
  %22 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %21, align 8
  %23 = tail call i8* %22(%"class.base::RefCountedMemory"* %19) #8
  %24 = load i64, i64* %10, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 1
  store i16 %27, i16* %5, align 2
  %28 = add i64 %24, 2
  store i64 %28, i64* %10, align 8
  %29 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %30 = bitcast %"class.base::RefCountedMemory"* %29 to i8* (%"class.base::RefCountedMemory"*)***
  %31 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %30, align 8
  %32 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %31, align 8
  %33 = tail call i8* %32(%"class.base::RefCountedMemory"* %29) #8
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 4
  store i64 %35, i64* %10, align 8
  %36 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %37 = bitcast %"class.base::RefCountedMemory"* %36 to i8* (%"class.base::RefCountedMemory"*)***
  %38 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %37, align 8
  %39 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %38, align 8
  %40 = tail call i8* %39(%"class.base::RefCountedMemory"* %36) #8
  %41 = load i64, i64* %10, align 8
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 1
  store i32 %44, i32* %7, align 4
  %45 = add i64 %41, 4
  store i64 %45, i64* %10, align 8
  %46 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %47 = bitcast %"class.base::RefCountedMemory"* %46 to i8* (%"class.base::RefCountedMemory"*)***
  %48 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %47, align 8
  %49 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %48, align 8
  %50 = tail call i8* %49(%"class.base::RefCountedMemory"* %46) #8
  %51 = load i64, i64* %10, align 8
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 1
  store i32 %54, i32* %9, align 4
  %55 = add i64 %51, 4
  %56 = sub i64 0, %51
  %57 = and i64 %56, 3
  %58 = add i64 %55, %57
  store i64 %58, i64* %10, align 8
  ret %"struct.x11::Res::QueryClientPixmapBytesReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Res14QueryClientIdsERKNS0_21QueryClientIdsRequestE(%"class.x11::Res"* nocapture readonly, %"struct.x11::Res::QueryClientIdsRequest"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.x11::WriteBuffer", align 8
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 0
  %18 = load %"class.x11::Connection"*, %"class.x11::Connection"** %17, align 8
  %19 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %18) #8
  br i1 %19, label %20, label %121

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %121, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.x11::WriteBuffer"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %25) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %12) #8
  %26 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"struct.x11::Res::QueryClientIdsRequest", %"struct.x11::Res::QueryClientIdsRequest"* %1, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"struct.x11::Res::ClientIdSpec"** %27 to i64*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #8
  %29 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 1, i32 2
  %30 = load i8, i8* %29, align 1
  store i8 %30, i8* %14, align 1
  %31 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %12, i64 0, i32 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %14) #8
  %35 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %12, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #8
  store i8 4, i8* %15, align 1
  %38 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #8
  %39 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %39, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8
  %41 = load i64, i64* %35, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #8
  store i8 0, i8* %8, align 1
  %43 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  %44 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %44, align 8
  %45 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %46 = load i64, i64* %35, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %44, align 8
  %48 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %49 = load i64, i64* %35, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %35, align 8
  %51 = bitcast %"struct.x11::Res::QueryClientIdsRequest"* %1 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #8
  %52 = load i64, i64* %28, align 8
  %53 = load i64, i64* %51, align 8
  %54 = sub i64 %52, %53
  %55 = lshr exact i64 %54, 3
  %56 = trunc i64 %55 to i32
  store i32 %56, i32* %13, align 4
  %57 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #8
  %58 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %58, align 8
  %59 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %26) #8
  %60 = getelementptr inbounds i8, i8* %26, i64 1
  %61 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %60) #8
  %62 = getelementptr inbounds i8, i8* %26, i64 2
  %63 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %62) #8
  %64 = getelementptr inbounds i8, i8* %26, i64 3
  %65 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %64) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  %66 = load i64, i64* %35, align 8
  %67 = add i64 %66, 4
  store i64 %67, i64* %35, align 8
  %68 = getelementptr inbounds %"struct.x11::Res::QueryClientIdsRequest", %"struct.x11::Res::QueryClientIdsRequest"* %1, i64 0, i32 0, i32 0, i32 0
  %69 = load %"struct.x11::Res::ClientIdSpec"*, %"struct.x11::Res::ClientIdSpec"** %68, align 8
  %70 = load %"struct.x11::Res::ClientIdSpec"*, %"struct.x11::Res::ClientIdSpec"** %27, align 8
  %71 = icmp eq %"struct.x11::Res::ClientIdSpec"* %69, %70
  br i1 %71, label %81, label %72

72:                                               ; preds = %24
  %73 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %74 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  %75 = bitcast i32* %16 to i8*
  %76 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  %77 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  %78 = getelementptr inbounds i8, i8* %75, i64 1
  %79 = getelementptr inbounds i8, i8* %75, i64 2
  %80 = getelementptr inbounds i8, i8* %75, i64 3
  br label %99

81:                                               ; preds = %99, %24
  %82 = phi i64 [ %67, %24 ], [ %118, %99 ]
  %83 = sub i64 0, %82
  %84 = and i64 %83, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %96, label %86

86:                                               ; preds = %81
  %87 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %88 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  br label %89

89:                                               ; preds = %89, %86
  %90 = phi i64 [ 0, %86 ], [ %94, %89 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #8
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %88, align 8
  %91 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #8
  %92 = load i64, i64* %35, align 8
  %93 = add i64 %92, 1
  store i64 %93, i64* %35, align 8
  %94 = add nuw nsw i64 %90, 1
  %95 = icmp eq i64 %94, %84
  br i1 %95, label %96, label %89

96:                                               ; preds = %89, %81
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %97 = load %"class.x11::Connection"*, %"class.x11::Connection"** %17, align 8
  %98 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %97, %"class.x11::WriteBuffer"* nonnull %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %25) #8
  br label %121

99:                                               ; preds = %72, %99
  %100 = phi %"struct.x11::Res::ClientIdSpec"* [ %69, %72 ], [ %119, %99 ]
  %101 = getelementptr inbounds %"struct.x11::Res::ClientIdSpec", %"struct.x11::Res::ClientIdSpec"* %100, i64 0, i32 1
  %102 = bitcast %"struct.x11::Res::ClientIdSpec"* %100 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #8
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %74, align 8
  %103 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %102) #8
  %104 = getelementptr inbounds i8, i8* %102, i64 1
  %105 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %104) #8
  %106 = getelementptr inbounds i8, i8* %102, i64 2
  %107 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %106) #8
  %108 = getelementptr inbounds i8, i8* %102, i64 3
  %109 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %108) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #8
  %110 = load i64, i64* %35, align 8
  %111 = add i64 %110, 4
  store i64 %111, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #8
  %112 = load i32, i32* %101, align 4
  store i32 %112, i32* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #8
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %77, align 8
  %113 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %75) #8
  %114 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* dereferenceable(1) %78) #8
  %115 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* dereferenceable(1) %79) #8
  %116 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* dereferenceable(1) %80) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #8
  %117 = load i64, i64* %35, align 8
  %118 = add i64 %117, 4
  store i64 %118, i64* %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #8
  %119 = getelementptr inbounds %"struct.x11::Res::ClientIdSpec", %"struct.x11::Res::ClientIdSpec"* %100, i64 1
  %120 = icmp eq %"struct.x11::Res::ClientIdSpec"* %119, %70
  br i1 %120, label %81, label %99

121:                                              ; preds = %2, %20, %96
  %122 = phi %"class.x11::Connection::FutureImpl"* [ %98, %96 ], [ null, %20 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %122
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Res14QueryClientIdsERKNSt3__16vectorINS0_12ClientIdSpecENS1_9allocatorIS3_EEEE(%"class.x11::Res"* nocapture readonly, %"class.std::__1::vector.327"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::Res::QueryClientIdsRequest", align 8
  %4 = bitcast %"struct.x11::Res::QueryClientIdsRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #8
  %5 = getelementptr inbounds %"class.std::__1::vector.327", %"class.std::__1::vector.327"* %1, i64 0, i32 0, i32 1
  %6 = bitcast %"struct.x11::Res::ClientIdSpec"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.327"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %35, label %13

13:                                               ; preds = %2
  %14 = icmp ugt i64 %11, 2305843009213693951
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = bitcast %"struct.x11::Res::QueryClientIdsRequest"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #10
  unreachable

17:                                               ; preds = %13
  %18 = tail call i8* @_Znwm(i64 %10) #9
  %19 = bitcast i8* %18 to %"struct.x11::Res::ClientIdSpec"*
  %20 = getelementptr inbounds %"struct.x11::Res::QueryClientIdsRequest", %"struct.x11::Res::QueryClientIdsRequest"* %3, i64 0, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.x11::Res::ClientIdSpec"** %20 to i8**
  store i8* %18, i8** %21, align 8
  %22 = bitcast %"struct.x11::Res::QueryClientIdsRequest"* %3 to i8**
  store i8* %18, i8** %22, align 8
  %23 = getelementptr inbounds %"struct.x11::Res::ClientIdSpec", %"struct.x11::Res::ClientIdSpec"* %19, i64 %11
  %24 = getelementptr inbounds %"struct.x11::Res::QueryClientIdsRequest", %"struct.x11::Res::QueryClientIdsRequest"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Res::ClientIdSpec"* %23, %"struct.x11::Res::ClientIdSpec"** %24, align 8
  %25 = bitcast %"struct.x11::Res::ClientIdSpec"** %20 to i64*
  %26 = ptrtoint i8* %18 to i64
  %27 = icmp sgt i64 %10, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %17
  %29 = lshr exact i64 %10, 3
  %30 = inttoptr i64 %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 %30, i64 %10, i1 false) #8
  %31 = getelementptr inbounds %"struct.x11::Res::ClientIdSpec", %"struct.x11::Res::ClientIdSpec"* %19, i64 %29
  %32 = ptrtoint %"struct.x11::Res::ClientIdSpec"* %31 to i64
  br label %33

33:                                               ; preds = %28, %17
  %34 = phi i64 [ %32, %28 ], [ %26, %17 ]
  store i64 %34, i64* %25, align 8
  br label %35

35:                                               ; preds = %2, %33
  %36 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Res14QueryClientIdsERKNS0_21QueryClientIdsRequestE(%"class.x11::Res"* %0, %"struct.x11::Res::QueryClientIdsRequest"* nonnull dereferenceable(24) %3)
  %37 = getelementptr inbounds %"struct.x11::Res::QueryClientIdsRequest", %"struct.x11::Res::QueryClientIdsRequest"* %3, i64 0, i32 0, i32 0, i32 0
  %38 = load %"struct.x11::Res::ClientIdSpec"*, %"struct.x11::Res::ClientIdSpec"** %37, align 8
  %39 = icmp eq %"struct.x11::Res::ClientIdSpec"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = ptrtoint %"struct.x11::Res::ClientIdSpec"* %38 to i64
  %42 = getelementptr inbounds %"struct.x11::Res::QueryClientIdsRequest", %"struct.x11::Res::QueryClientIdsRequest"* %3, i64 0, i32 0, i32 0, i32 1
  %43 = bitcast %"struct.x11::Res::ClientIdSpec"** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = bitcast %"struct.x11::Res::ClientIdSpec"* %38 to i8*
  tail call void @_ZdlPv(i8* %44) #9
  br label %45

45:                                               ; preds = %35, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret %"class.x11::Connection::FutureImpl"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Res::QueryClientIdsReply"* @_ZN3x116detail9ReadReplyINS_3Res19QueryClientIdsReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 32) #9
  %3 = bitcast i8* %2 to %"struct.x11::Res::QueryClientIdsReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 32, i1 false) #8
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %9 = bitcast %"class.base::RefCountedMemory"* %8 to i8* (%"class.base::RefCountedMemory"*)***
  %10 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %9, align 8
  %11 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %10, align 8
  %12 = tail call i8* %11(%"class.base::RefCountedMemory"* %8) #8
  %13 = load i64, i64* %6, align 8
  %14 = add i64 %13, 2
  store i64 %14, i64* %6, align 8
  %15 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %16 = bitcast %"class.base::RefCountedMemory"* %15 to i8* (%"class.base::RefCountedMemory"*)***
  %17 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %16, align 8
  %18 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %17, align 8
  %19 = tail call i8* %18(%"class.base::RefCountedMemory"* %15) #8
  %20 = load i64, i64* %6, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 1
  store i16 %23, i16* %4, align 2
  %24 = add i64 %20, 2
  store i64 %24, i64* %6, align 8
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %26 = bitcast %"class.base::RefCountedMemory"* %25 to i8* (%"class.base::RefCountedMemory"*)***
  %27 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %26, align 8
  %28 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %27, align 8
  %29 = tail call i8* %28(%"class.base::RefCountedMemory"* %25) #8
  %30 = load i64, i64* %6, align 8
  %31 = add i64 %30, 4
  store i64 %31, i64* %6, align 8
  %32 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %33 = bitcast %"class.base::RefCountedMemory"* %32 to i8* (%"class.base::RefCountedMemory"*)***
  %34 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %33, align 8
  %35 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %34, align 8
  %36 = tail call i8* %35(%"class.base::RefCountedMemory"* %32) #8
  %37 = load i64, i64* %6, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = add i64 %37, 24
  store i64 %41, i64* %6, align 8
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %1
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds i8, i8* %2, i64 16
  %46 = bitcast i8* %45 to %"struct.x11::Res::ClientIdValue"**
  %47 = bitcast i8* %5 to %"class.std::__1::vector.338"*
  tail call void @_ZNSt3__16vectorIN3x113Res13ClientIdValueENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.338"* %47, i64 %44) #8
  %48 = bitcast i8* %5 to %"struct.x11::Res::ClientIdValue"**
  %49 = load %"struct.x11::Res::ClientIdValue"*, %"struct.x11::Res::ClientIdValue"** %48, align 8
  %50 = load %"struct.x11::Res::ClientIdValue"*, %"struct.x11::Res::ClientIdValue"** %46, align 8
  %51 = icmp eq %"struct.x11::Res::ClientIdValue"* %49, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %121, %1, %43
  %53 = load i64, i64* %6, align 8
  %54 = sub i64 0, %53
  %55 = and i64 %54, 3
  %56 = add i64 %55, %53
  store i64 %56, i64* %6, align 8
  ret %"struct.x11::Res::QueryClientIdsReply"* %3

57:                                               ; preds = %43, %121
  %58 = phi %"struct.x11::Res::ClientIdValue"* [ %122, %121 ], [ %49, %43 ]
  %59 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %58, i64 0, i32 1
  %60 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %58, i64 0, i32 2
  %61 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %58, i64 0, i32 2, i32 0, i32 1
  %62 = bitcast i32** %61 to i64*
  %63 = bitcast %"class.std::__1::vector.340"* %60 to i64*
  %64 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %58, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %58, i64 0, i32 0, i32 1
  %66 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %67 = bitcast %"class.base::RefCountedMemory"* %66 to i8* (%"class.base::RefCountedMemory"*)***
  %68 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %67, align 8
  %69 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %68, align 8
  %70 = tail call i8* %69(%"class.base::RefCountedMemory"* %66) #8
  %71 = load i64, i64* %6, align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 1
  store i32 %74, i32* %64, align 4
  %75 = load i64, i64* %6, align 8
  %76 = add i64 %75, 4
  store i64 %76, i64* %6, align 8
  %77 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %78 = bitcast %"class.base::RefCountedMemory"* %77 to i8* (%"class.base::RefCountedMemory"*)***
  %79 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %78, align 8
  %80 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %79, align 8
  %81 = tail call i8* %80(%"class.base::RefCountedMemory"* %77) #8
  %82 = load i64, i64* %6, align 8
  %83 = getelementptr inbounds i8, i8* %81, i64 %82
  %84 = bitcast i8* %83 to i32*
  %85 = load i32, i32* %84, align 1
  %86 = add i64 %82, 4
  store i64 %86, i64* %6, align 8
  store i32 %85, i32* %65, align 4
  %87 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %88 = bitcast %"class.base::RefCountedMemory"* %87 to i8* (%"class.base::RefCountedMemory"*)***
  %89 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %88, align 8
  %90 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %89, align 8
  %91 = tail call i8* %90(%"class.base::RefCountedMemory"* %87) #8
  %92 = load i64, i64* %6, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 %92
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 1
  store i32 %95, i32* %59, align 4
  %96 = load i64, i64* %6, align 8
  %97 = add i64 %96, 4
  store i64 %97, i64* %6, align 8
  %98 = load i32, i32* %59, align 4
  %99 = lshr i32 %98, 2
  %100 = zext i32 %99 to i64
  %101 = load i64, i64* %62, align 8
  %102 = load i64, i64* %63, align 8
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 2
  %105 = icmp ult i64 %104, %100
  %106 = inttoptr i64 %102 to i32*
  br i1 %105, label %107, label %112

107:                                              ; preds = %57
  %108 = sub nsw i64 %100, %104
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.340"* %60, i64 %108) #8
  %109 = getelementptr inbounds %"class.std::__1::vector.340", %"class.std::__1::vector.340"* %60, i64 0, i32 0, i32 0
  %110 = load i32*, i32** %109, align 8
  %111 = load i32*, i32** %61, align 8
  br label %117

112:                                              ; preds = %57
  %113 = inttoptr i64 %101 to i32*
  %114 = icmp ugt i64 %104, %100
  br i1 %114, label %115, label %117

115:                                              ; preds = %112
  %116 = getelementptr inbounds i32, i32* %106, i64 %100
  store i32* %116, i32** %61, align 8
  br label %117

117:                                              ; preds = %107, %112, %115
  %118 = phi i32* [ %111, %107 ], [ %113, %112 ], [ %116, %115 ]
  %119 = phi i32* [ %110, %107 ], [ %106, %112 ], [ %106, %115 ]
  %120 = icmp eq i32* %119, %118
  br i1 %120, label %121, label %124

121:                                              ; preds = %124, %117
  %122 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %58, i64 1
  %123 = icmp eq %"struct.x11::Res::ClientIdValue"* %122, %50
  br i1 %123, label %52, label %57

124:                                              ; preds = %117, %124
  %125 = phi i32* [ %137, %124 ], [ %119, %117 ]
  %126 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %127 = bitcast %"class.base::RefCountedMemory"* %126 to i8* (%"class.base::RefCountedMemory"*)***
  %128 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %127, align 8
  %129 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %128, align 8
  %130 = tail call i8* %129(%"class.base::RefCountedMemory"* %126) #8
  %131 = load i64, i64* %6, align 8
  %132 = getelementptr inbounds i8, i8* %130, i64 %131
  %133 = bitcast i8* %132 to i32*
  %134 = load i32, i32* %133, align 1
  store i32 %134, i32* %125, align 4
  %135 = load i64, i64* %6, align 8
  %136 = add i64 %135, 4
  store i64 %136, i64* %6, align 8
  %137 = getelementptr inbounds i32, i32* %125, i64 1
  %138 = icmp eq i32* %137, %118
  br i1 %138, label %121, label %124
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Res18QueryResourceBytesERKNS0_25QueryResourceBytesRequestE(%"class.x11::Res"* nocapture readonly, %"struct.x11::Res::QueryResourceBytesRequest"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.x11::WriteBuffer", align 8
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 0
  %18 = load %"class.x11::Connection"*, %"class.x11::Connection"** %17, align 8
  %19 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %18) #8
  br i1 %19, label %20, label %133

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %133, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.x11::WriteBuffer"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %25) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %13) #8
  %26 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"struct.x11::Res::QueryResourceBytesRequest", %"struct.x11::Res::QueryResourceBytesRequest"* %1, i64 0, i32 1, i32 0, i32 1
  %28 = bitcast %"struct.x11::Res::ResourceIdSpec"** %27 to i64*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #8
  %29 = getelementptr inbounds %"class.x11::Res", %"class.x11::Res"* %0, i64 0, i32 1, i32 2
  %30 = load i8, i8* %29, align 1
  store i8 %30, i8* %15, align 1
  %31 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %13, i64 0, i32 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %15) #8
  %35 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %13, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #8
  store i8 5, i8* %16, align 1
  %38 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #8
  %39 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %39, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %16) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8
  %41 = load i64, i64* %35, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %43 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %44 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %44, align 8
  %45 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %46 = load i64, i64* %35, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %44, align 8
  %48 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %49 = load i64, i64* %35, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %35, align 8
  %51 = getelementptr inbounds %"struct.x11::Res::QueryResourceBytesRequest", %"struct.x11::Res::QueryResourceBytesRequest"* %1, i64 0, i32 1
  %52 = bitcast %"class.std::__1::vector.358"* %51 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %53 = bitcast %"struct.x11::Res::QueryResourceBytesRequest"* %1 to i8*
  %54 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #8
  %55 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %55, align 8
  %56 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %53) #8
  %57 = getelementptr inbounds i8, i8* %53, i64 1
  %58 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %57) #8
  %59 = getelementptr inbounds i8, i8* %53, i64 2
  %60 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %59) #8
  %61 = getelementptr inbounds i8, i8* %53, i64 3
  %62 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %61) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #8
  %63 = load i64, i64* %35, align 8
  %64 = add i64 %63, 4
  store i64 %64, i64* %35, align 8
  %65 = load i64, i64* %28, align 8
  %66 = load i64, i64* %52, align 8
  %67 = sub i64 %65, %66
  %68 = lshr exact i64 %67, 3
  %69 = trunc i64 %68 to i32
  store i32 %69, i32* %14, align 4
  %70 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #8
  %71 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %71, align 8
  %72 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %26) #8
  %73 = getelementptr inbounds i8, i8* %26, i64 1
  %74 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %73) #8
  %75 = getelementptr inbounds i8, i8* %26, i64 2
  %76 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %75) #8
  %77 = getelementptr inbounds i8, i8* %26, i64 3
  %78 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %77) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #8
  %79 = load i64, i64* %35, align 8
  %80 = add i64 %79, 4
  store i64 %80, i64* %35, align 8
  %81 = getelementptr inbounds %"class.std::__1::vector.358", %"class.std::__1::vector.358"* %51, i64 0, i32 0, i32 0
  %82 = load %"struct.x11::Res::ResourceIdSpec"*, %"struct.x11::Res::ResourceIdSpec"** %81, align 8
  %83 = load %"struct.x11::Res::ResourceIdSpec"*, %"struct.x11::Res::ResourceIdSpec"** %27, align 8
  %84 = icmp eq %"struct.x11::Res::ResourceIdSpec"* %82, %83
  br i1 %84, label %90, label %85

85:                                               ; preds = %24
  %86 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %87 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  %88 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  %89 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  br label %108

90:                                               ; preds = %108, %24
  %91 = phi i64 [ %80, %24 ], [ %130, %108 ]
  %92 = sub i64 0, %91
  %93 = and i64 %92, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %90
  %96 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %97 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  br label %98

98:                                               ; preds = %98, %95
  %99 = phi i64 [ 0, %95 ], [ %103, %98 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #8
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %97, align 8
  %100 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #8
  %101 = load i64, i64* %35, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %35, align 8
  %103 = add nuw nsw i64 %99, 1
  %104 = icmp eq i64 %103, %93
  br i1 %104, label %105, label %98

105:                                              ; preds = %98, %90
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %106 = load %"class.x11::Connection"*, %"class.x11::Connection"** %17, align 8
  %107 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %106, %"class.x11::WriteBuffer"* nonnull %13, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %25) #8
  br label %133

108:                                              ; preds = %85, %108
  %109 = phi %"struct.x11::Res::ResourceIdSpec"* [ %82, %85 ], [ %131, %108 ]
  %110 = getelementptr inbounds %"struct.x11::Res::ResourceIdSpec", %"struct.x11::Res::ResourceIdSpec"* %109, i64 0, i32 1
  %111 = bitcast %"struct.x11::Res::ResourceIdSpec"* %109 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #8
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %87, align 8
  %112 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %111) #8
  %113 = getelementptr inbounds i8, i8* %111, i64 1
  %114 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %113) #8
  %115 = getelementptr inbounds i8, i8* %111, i64 2
  %116 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %115) #8
  %117 = getelementptr inbounds i8, i8* %111, i64 3
  %118 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %117) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #8
  %119 = load i64, i64* %35, align 8
  %120 = add i64 %119, 4
  store i64 %120, i64* %35, align 8
  %121 = bitcast i32* %110 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #8
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %89, align 8
  %122 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %121) #8
  %123 = getelementptr inbounds i8, i8* %121, i64 1
  %124 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %123) #8
  %125 = getelementptr inbounds i8, i8* %121, i64 2
  %126 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %125) #8
  %127 = getelementptr inbounds i8, i8* %121, i64 3
  %128 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %127) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #8
  %129 = load i64, i64* %35, align 8
  %130 = add i64 %129, 4
  store i64 %130, i64* %35, align 8
  %131 = getelementptr inbounds %"struct.x11::Res::ResourceIdSpec", %"struct.x11::Res::ResourceIdSpec"* %109, i64 1
  %132 = icmp eq %"struct.x11::Res::ResourceIdSpec"* %131, %83
  br i1 %132, label %90, label %108

133:                                              ; preds = %2, %20, %105
  %134 = phi %"class.x11::Connection::FutureImpl"* [ %107, %105 ], [ null, %20 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %134
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Res18QueryResourceBytesERKjRKNSt3__16vectorINS0_14ResourceIdSpecENS3_9allocatorIS5_EEEE(%"class.x11::Res"* nocapture readonly, i32* nocapture readonly dereferenceable(4), %"class.std::__1::vector.358"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::Res::QueryResourceBytesRequest", align 8
  %5 = bitcast %"struct.x11::Res::QueryResourceBytesRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"struct.x11::Res::QueryResourceBytesRequest", %"struct.x11::Res::QueryResourceBytesRequest"* %4, i64 0, i32 0
  %7 = load i32, i32* %1, align 4
  store i32 %7, i32* %6, align 8
  %8 = getelementptr inbounds %"struct.x11::Res::QueryResourceBytesRequest", %"struct.x11::Res::QueryResourceBytesRequest"* %4, i64 0, i32 1
  %9 = bitcast %"class.std::__1::vector.358"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #8
  %10 = getelementptr inbounds %"class.std::__1::vector.358", %"class.std::__1::vector.358"* %2, i64 0, i32 0, i32 1
  %11 = bitcast %"struct.x11::Res::ResourceIdSpec"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.358"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %40, label %18

18:                                               ; preds = %3
  %19 = icmp ugt i64 %16, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector.358"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #10
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #9
  %24 = bitcast i8* %23 to %"struct.x11::Res::ResourceIdSpec"*
  %25 = getelementptr inbounds %"struct.x11::Res::QueryResourceBytesRequest", %"struct.x11::Res::QueryResourceBytesRequest"* %4, i64 0, i32 1, i32 0, i32 1
  %26 = bitcast %"struct.x11::Res::ResourceIdSpec"** %25 to i8**
  store i8* %23, i8** %26, align 8
  %27 = bitcast %"class.std::__1::vector.358"* %8 to i8**
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds %"struct.x11::Res::ResourceIdSpec", %"struct.x11::Res::ResourceIdSpec"* %24, i64 %16
  %29 = getelementptr inbounds %"struct.x11::Res::QueryResourceBytesRequest", %"struct.x11::Res::QueryResourceBytesRequest"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Res::ResourceIdSpec"* %28, %"struct.x11::Res::ResourceIdSpec"** %29, align 8
  %30 = bitcast %"struct.x11::Res::ResourceIdSpec"** %25 to i64*
  %31 = ptrtoint i8* %23 to i64
  %32 = icmp sgt i64 %15, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %22
  %34 = lshr exact i64 %15, 3
  %35 = inttoptr i64 %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %35, i64 %15, i1 false) #8
  %36 = getelementptr inbounds %"struct.x11::Res::ResourceIdSpec", %"struct.x11::Res::ResourceIdSpec"* %24, i64 %34
  %37 = ptrtoint %"struct.x11::Res::ResourceIdSpec"* %36 to i64
  br label %38

38:                                               ; preds = %33, %22
  %39 = phi i64 [ %37, %33 ], [ %31, %22 ]
  store i64 %39, i64* %30, align 8
  br label %40

40:                                               ; preds = %3, %38
  %41 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Res18QueryResourceBytesERKNS0_25QueryResourceBytesRequestE(%"class.x11::Res"* %0, %"struct.x11::Res::QueryResourceBytesRequest"* nonnull dereferenceable(32) %4)
  %42 = getelementptr inbounds %"struct.x11::Res::QueryResourceBytesRequest", %"struct.x11::Res::QueryResourceBytesRequest"* %4, i64 0, i32 1, i32 0, i32 0
  %43 = load %"struct.x11::Res::ResourceIdSpec"*, %"struct.x11::Res::ResourceIdSpec"** %42, align 8
  %44 = icmp eq %"struct.x11::Res::ResourceIdSpec"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = ptrtoint %"struct.x11::Res::ResourceIdSpec"* %43 to i64
  %47 = getelementptr inbounds %"struct.x11::Res::QueryResourceBytesRequest", %"struct.x11::Res::QueryResourceBytesRequest"* %4, i64 0, i32 1, i32 0, i32 1
  %48 = bitcast %"struct.x11::Res::ResourceIdSpec"** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast %"struct.x11::Res::ResourceIdSpec"* %43 to i8*
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %40, %45
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8
  ret %"class.x11::Connection::FutureImpl"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Res::QueryResourceBytesReply"* @_ZN3x116detail9ReadReplyINS_3Res23QueryResourceBytesReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 32) #9
  %3 = bitcast i8* %2 to %"struct.x11::Res::QueryResourceBytesReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 32, i1 false) #8
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %9 = bitcast %"class.base::RefCountedMemory"* %8 to i8* (%"class.base::RefCountedMemory"*)***
  %10 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %9, align 8
  %11 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %10, align 8
  %12 = tail call i8* %11(%"class.base::RefCountedMemory"* %8) #8
  %13 = load i64, i64* %6, align 8
  %14 = add i64 %13, 2
  store i64 %14, i64* %6, align 8
  %15 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %16 = bitcast %"class.base::RefCountedMemory"* %15 to i8* (%"class.base::RefCountedMemory"*)***
  %17 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %16, align 8
  %18 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %17, align 8
  %19 = tail call i8* %18(%"class.base::RefCountedMemory"* %15) #8
  %20 = load i64, i64* %6, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 1
  store i16 %23, i16* %4, align 2
  %24 = add i64 %20, 2
  store i64 %24, i64* %6, align 8
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %26 = bitcast %"class.base::RefCountedMemory"* %25 to i8* (%"class.base::RefCountedMemory"*)***
  %27 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %26, align 8
  %28 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %27, align 8
  %29 = tail call i8* %28(%"class.base::RefCountedMemory"* %25) #8
  %30 = load i64, i64* %6, align 8
  %31 = add i64 %30, 4
  store i64 %31, i64* %6, align 8
  %32 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %33 = bitcast %"class.base::RefCountedMemory"* %32 to i8* (%"class.base::RefCountedMemory"*)***
  %34 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %33, align 8
  %35 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %34, align 8
  %36 = tail call i8* %35(%"class.base::RefCountedMemory"* %32) #8
  %37 = load i64, i64* %6, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = add i64 %37, 24
  store i64 %41, i64* %6, align 8
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %1
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds i8, i8* %2, i64 16
  %46 = bitcast i8* %45 to %"struct.x11::Res::ResourceSizeValue"**
  %47 = bitcast i8* %5 to %"class.std::__1::vector.369"*
  tail call void @_ZNSt3__16vectorIN3x113Res17ResourceSizeValueENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.369"* %47, i64 %44) #8
  %48 = bitcast i8* %5 to %"struct.x11::Res::ResourceSizeValue"**
  %49 = load %"struct.x11::Res::ResourceSizeValue"*, %"struct.x11::Res::ResourceSizeValue"** %48, align 8
  %50 = load %"struct.x11::Res::ResourceSizeValue"*, %"struct.x11::Res::ResourceSizeValue"** %46, align 8
  %51 = icmp eq %"struct.x11::Res::ResourceSizeValue"* %49, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %154, %1, %43
  %53 = load i64, i64* %6, align 8
  %54 = sub i64 0, %53
  %55 = and i64 %54, 3
  %56 = add i64 %55, %53
  store i64 %56, i64* %6, align 8
  ret %"struct.x11::Res::QueryResourceBytesReply"* %3

57:                                               ; preds = %43, %154
  %58 = phi %"struct.x11::Res::ResourceSizeValue"* [ %155, %154 ], [ %49, %43 ]
  %59 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %58, i64 0, i32 1
  %60 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %58, i64 0, i32 1, i32 0, i32 1
  %61 = bitcast %"struct.x11::Res::ResourceSizeSpec"** %60 to i64*
  %62 = bitcast %"class.std::__1::vector.371"* %59 to i64*
  %63 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %58, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %58, i64 0, i32 0, i32 2
  %65 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %58, i64 0, i32 0, i32 3
  %66 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %58, i64 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %58, i64 0, i32 0, i32 0, i32 1
  %68 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %69 = bitcast %"class.base::RefCountedMemory"* %68 to i8* (%"class.base::RefCountedMemory"*)***
  %70 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %69, align 8
  %71 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %70, align 8
  %72 = tail call i8* %71(%"class.base::RefCountedMemory"* %68) #8
  %73 = load i64, i64* %6, align 8
  %74 = getelementptr inbounds i8, i8* %72, i64 %73
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 1
  store i32 %76, i32* %66, align 4
  %77 = load i64, i64* %6, align 8
  %78 = add i64 %77, 4
  store i64 %78, i64* %6, align 8
  %79 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %80 = bitcast %"class.base::RefCountedMemory"* %79 to i8* (%"class.base::RefCountedMemory"*)***
  %81 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %80, align 8
  %82 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %81, align 8
  %83 = tail call i8* %82(%"class.base::RefCountedMemory"* %79) #8
  %84 = load i64, i64* %6, align 8
  %85 = getelementptr inbounds i8, i8* %83, i64 %84
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 1
  store i32 %87, i32* %67, align 4
  %88 = load i64, i64* %6, align 8
  %89 = add i64 %88, 4
  store i64 %89, i64* %6, align 8
  %90 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %91 = bitcast %"class.base::RefCountedMemory"* %90 to i8* (%"class.base::RefCountedMemory"*)***
  %92 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %91, align 8
  %93 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %92, align 8
  %94 = tail call i8* %93(%"class.base::RefCountedMemory"* %90) #8
  %95 = load i64, i64* %6, align 8
  %96 = getelementptr inbounds i8, i8* %94, i64 %95
  %97 = bitcast i8* %96 to i32*
  %98 = load i32, i32* %97, align 1
  store i32 %98, i32* %63, align 4
  %99 = load i64, i64* %6, align 8
  %100 = add i64 %99, 4
  store i64 %100, i64* %6, align 8
  %101 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %102 = bitcast %"class.base::RefCountedMemory"* %101 to i8* (%"class.base::RefCountedMemory"*)***
  %103 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %102, align 8
  %104 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %103, align 8
  %105 = tail call i8* %104(%"class.base::RefCountedMemory"* %101) #8
  %106 = load i64, i64* %6, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 %106
  %108 = bitcast i8* %107 to i32*
  %109 = load i32, i32* %108, align 1
  store i32 %109, i32* %64, align 4
  %110 = load i64, i64* %6, align 8
  %111 = add i64 %110, 4
  store i64 %111, i64* %6, align 8
  %112 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %113 = bitcast %"class.base::RefCountedMemory"* %112 to i8* (%"class.base::RefCountedMemory"*)***
  %114 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %113, align 8
  %115 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %114, align 8
  %116 = tail call i8* %115(%"class.base::RefCountedMemory"* %112) #8
  %117 = load i64, i64* %6, align 8
  %118 = getelementptr inbounds i8, i8* %116, i64 %117
  %119 = bitcast i8* %118 to i32*
  %120 = load i32, i32* %119, align 1
  store i32 %120, i32* %65, align 4
  %121 = load i64, i64* %6, align 8
  %122 = add i64 %121, 4
  store i64 %122, i64* %6, align 8
  %123 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %124 = bitcast %"class.base::RefCountedMemory"* %123 to i8* (%"class.base::RefCountedMemory"*)***
  %125 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %124, align 8
  %126 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %125, align 8
  %127 = tail call i8* %126(%"class.base::RefCountedMemory"* %123) #8
  %128 = load i64, i64* %6, align 8
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  %130 = bitcast i8* %129 to i32*
  %131 = load i32, i32* %130, align 1
  %132 = add i64 %128, 4
  store i64 %132, i64* %6, align 8
  %133 = zext i32 %131 to i64
  %134 = load i64, i64* %61, align 8
  %135 = load i64, i64* %62, align 8
  %136 = sub i64 %134, %135
  %137 = sdiv exact i64 %136, 20
  %138 = icmp ult i64 %137, %133
  %139 = inttoptr i64 %135 to %"struct.x11::Res::ResourceSizeSpec"*
  br i1 %138, label %140, label %145

140:                                              ; preds = %57
  %141 = sub nsw i64 %133, %137
  tail call void @_ZNSt3__16vectorIN3x113Res16ResourceSizeSpecENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.371"* %59, i64 %141) #8
  %142 = getelementptr inbounds %"class.std::__1::vector.371", %"class.std::__1::vector.371"* %59, i64 0, i32 0, i32 0
  %143 = load %"struct.x11::Res::ResourceSizeSpec"*, %"struct.x11::Res::ResourceSizeSpec"** %142, align 8
  %144 = load %"struct.x11::Res::ResourceSizeSpec"*, %"struct.x11::Res::ResourceSizeSpec"** %60, align 8
  br label %150

145:                                              ; preds = %57
  %146 = inttoptr i64 %134 to %"struct.x11::Res::ResourceSizeSpec"*
  %147 = icmp ugt i64 %137, %133
  br i1 %147, label %148, label %150

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"struct.x11::Res::ResourceSizeSpec", %"struct.x11::Res::ResourceSizeSpec"* %139, i64 %133
  store %"struct.x11::Res::ResourceSizeSpec"* %149, %"struct.x11::Res::ResourceSizeSpec"** %60, align 8
  br label %150

150:                                              ; preds = %140, %145, %148
  %151 = phi %"struct.x11::Res::ResourceSizeSpec"* [ %144, %140 ], [ %146, %145 ], [ %149, %148 ]
  %152 = phi %"struct.x11::Res::ResourceSizeSpec"* [ %143, %140 ], [ %139, %145 ], [ %139, %148 ]
  %153 = icmp eq %"struct.x11::Res::ResourceSizeSpec"* %152, %151
  br i1 %153, label %154, label %157

154:                                              ; preds = %157, %150
  %155 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %58, i64 1
  %156 = icmp eq %"struct.x11::Res::ResourceSizeValue"* %155, %50
  br i1 %156, label %52, label %57

157:                                              ; preds = %150, %157
  %158 = phi %"struct.x11::Res::ResourceSizeSpec"* [ %219, %157 ], [ %152, %150 ]
  %159 = getelementptr inbounds %"struct.x11::Res::ResourceSizeSpec", %"struct.x11::Res::ResourceSizeSpec"* %158, i64 0, i32 1
  %160 = getelementptr inbounds %"struct.x11::Res::ResourceSizeSpec", %"struct.x11::Res::ResourceSizeSpec"* %158, i64 0, i32 2
  %161 = getelementptr inbounds %"struct.x11::Res::ResourceSizeSpec", %"struct.x11::Res::ResourceSizeSpec"* %158, i64 0, i32 3
  %162 = getelementptr inbounds %"struct.x11::Res::ResourceSizeSpec", %"struct.x11::Res::ResourceSizeSpec"* %158, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.x11::Res::ResourceSizeSpec", %"struct.x11::Res::ResourceSizeSpec"* %158, i64 0, i32 0, i32 1
  %164 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %165 = bitcast %"class.base::RefCountedMemory"* %164 to i8* (%"class.base::RefCountedMemory"*)***
  %166 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %165, align 8
  %167 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %166, align 8
  %168 = tail call i8* %167(%"class.base::RefCountedMemory"* %164) #8
  %169 = load i64, i64* %6, align 8
  %170 = getelementptr inbounds i8, i8* %168, i64 %169
  %171 = bitcast i8* %170 to i32*
  %172 = load i32, i32* %171, align 1
  store i32 %172, i32* %162, align 4
  %173 = load i64, i64* %6, align 8
  %174 = add i64 %173, 4
  store i64 %174, i64* %6, align 8
  %175 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %176 = bitcast %"class.base::RefCountedMemory"* %175 to i8* (%"class.base::RefCountedMemory"*)***
  %177 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %176, align 8
  %178 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %177, align 8
  %179 = tail call i8* %178(%"class.base::RefCountedMemory"* %175) #8
  %180 = load i64, i64* %6, align 8
  %181 = getelementptr inbounds i8, i8* %179, i64 %180
  %182 = bitcast i8* %181 to i32*
  %183 = load i32, i32* %182, align 1
  store i32 %183, i32* %163, align 4
  %184 = load i64, i64* %6, align 8
  %185 = add i64 %184, 4
  store i64 %185, i64* %6, align 8
  %186 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %187 = bitcast %"class.base::RefCountedMemory"* %186 to i8* (%"class.base::RefCountedMemory"*)***
  %188 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %187, align 8
  %189 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %188, align 8
  %190 = tail call i8* %189(%"class.base::RefCountedMemory"* %186) #8
  %191 = load i64, i64* %6, align 8
  %192 = getelementptr inbounds i8, i8* %190, i64 %191
  %193 = bitcast i8* %192 to i32*
  %194 = load i32, i32* %193, align 1
  store i32 %194, i32* %159, align 4
  %195 = load i64, i64* %6, align 8
  %196 = add i64 %195, 4
  store i64 %196, i64* %6, align 8
  %197 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %198 = bitcast %"class.base::RefCountedMemory"* %197 to i8* (%"class.base::RefCountedMemory"*)***
  %199 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %198, align 8
  %200 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %199, align 8
  %201 = tail call i8* %200(%"class.base::RefCountedMemory"* %197) #8
  %202 = load i64, i64* %6, align 8
  %203 = getelementptr inbounds i8, i8* %201, i64 %202
  %204 = bitcast i8* %203 to i32*
  %205 = load i32, i32* %204, align 1
  store i32 %205, i32* %160, align 4
  %206 = load i64, i64* %6, align 8
  %207 = add i64 %206, 4
  store i64 %207, i64* %6, align 8
  %208 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %209 = bitcast %"class.base::RefCountedMemory"* %208 to i8* (%"class.base::RefCountedMemory"*)***
  %210 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %209, align 8
  %211 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %210, align 8
  %212 = tail call i8* %211(%"class.base::RefCountedMemory"* %208) #8
  %213 = load i64, i64* %6, align 8
  %214 = getelementptr inbounds i8, i8* %212, i64 %213
  %215 = bitcast i8* %214 to i32*
  %216 = load i32, i32* %215, align 1
  store i32 %216, i32* %161, align 4
  %217 = load i64, i64* %6, align 8
  %218 = add i64 %217, 4
  store i64 %218, i64* %6, align 8
  %219 = getelementptr inbounds %"struct.x11::Res::ResourceSizeSpec", %"struct.x11::Res::ResourceSizeSpec"* %158, i64 1
  %220 = icmp eq %"struct.x11::Res::ResourceSizeSpec"* %219, %151
  br i1 %220, label %154, label %157
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector.270"*, %"class.std::__1::vector.270"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.270", %"class.std::__1::vector.270"* %4, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.270", %"class.std::__1::vector.270"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %6, %8
  %10 = ptrtoint i8* %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = load i8, i8* %1, align 1
  store i8 %12, i8* %6, align 1
  %13 = getelementptr inbounds i8, i8* %6, i64 1
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast i8** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %62

16:                                               ; preds = %2
  %17 = ptrtoint i8* %6 to i64
  %18 = bitcast i8** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.270"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = add i64 %21, 1
  %23 = icmp slt i64 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = bitcast %"class.std::__1::vector.270"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #10
  unreachable

26:                                               ; preds = %16
  %27 = bitcast i8** %7 to i64*
  %28 = sub i64 %10, %20
  %29 = icmp ult i64 %28, 4611686018427387903
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = shl i64 %28, 1
  %32 = icmp ult i64 %31, %22
  %33 = select i1 %32, i64 %22, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30, %26
  %36 = phi i64 [ %33, %30 ], [ 9223372036854775807, %26 ]
  %37 = tail call i8* @_Znwm(i64 %36) #9
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi i64 [ %36, %35 ], [ 0, %30 ]
  %40 = phi i8* [ %37, %35 ], [ null, %30 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %21
  %42 = getelementptr inbounds i8, i8* %40, i64 %39
  %43 = ptrtoint i8* %42 to i64
  %44 = load i8, i8* %1, align 1
  store i8 %44, i8* %41, align 1
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  %46 = ptrtoint i8* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.270", %"class.std::__1::vector.270"* %4, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i64, i64* %18, align 8
  %50 = ptrtoint i8* %48 to i64
  %51 = sub i64 %49, %50
  %52 = sub i64 0, %51
  %53 = getelementptr inbounds i8, i8* %41, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = icmp sgt i64 %51, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %38
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %48, i64 %51, i1 false) #8
  %57 = load i8*, i8** %47, align 8
  br label %58

58:                                               ; preds = %56, %38
  %59 = phi i8* [ %48, %38 ], [ %57, %56 ]
  store i64 %54, i64* %19, align 8
  store i64 %46, i64* %18, align 8
  store i64 %43, i64* %27, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  tail call void @_ZdlPv(i8* nonnull %59) #9
  br label %62

62:                                               ; preds = %11, %58, %61
  ret %"class.std::__1::back_insert_iterator"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"*, %"class.x11::WriteBuffer"*, i8*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Res6ClientENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.294"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.294", %"class.std::__1::vector.294"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Res::Client"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.294", %"class.std::__1::vector.294"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Res::Client"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Res::Client"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Res::Client", %"struct.x11::Res::Client"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Res::Client", %"struct.x11::Res::Client"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint %"struct.x11::Res::Client"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.294"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.294"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #10
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to %"struct.x11::Res::Client"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.x11::Res::Client"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.x11::Res::Client", %"struct.x11::Res::Client"* %57, i64 %33
  %59 = bitcast %"struct.x11::Res::Client"* %58 to i8*
  %60 = getelementptr inbounds %"struct.x11::Res::Client", %"struct.x11::Res::Client"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.x11::Res::Client", %"struct.x11::Res::Client"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"struct.x11::Res::Client"* %60 to i64
  %64 = ptrtoint %"struct.x11::Res::Client"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.294", %"class.std::__1::vector.294"* %0, i64 0, i32 0, i32 0
  %66 = load %"struct.x11::Res::Client"*, %"struct.x11::Res::Client"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"struct.x11::Res::Client"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"struct.x11::Res::Client", %"struct.x11::Res::Client"* %58, i64 %71
  %73 = ptrtoint %"struct.x11::Res::Client"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"struct.x11::Res::Client"* %72 to i8*
  %77 = bitcast %"struct.x11::Res::Client"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #8
  %78 = load %"struct.x11::Res::Client"*, %"struct.x11::Res::Client"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"struct.x11::Res::Client"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"struct.x11::Res::Client"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"struct.x11::Res::Client"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Res4TypeENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.308"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.308", %"class.std::__1::vector.308"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Res::Type"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.308", %"class.std::__1::vector.308"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Res::Type"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Res::Type"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Res::Type", %"struct.x11::Res::Type"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Res::Type", %"struct.x11::Res::Type"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint %"struct.x11::Res::Type"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.308"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.308"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #10
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to %"struct.x11::Res::Type"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.x11::Res::Type"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.x11::Res::Type", %"struct.x11::Res::Type"* %57, i64 %33
  %59 = bitcast %"struct.x11::Res::Type"* %58 to i8*
  %60 = getelementptr inbounds %"struct.x11::Res::Type", %"struct.x11::Res::Type"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.x11::Res::Type", %"struct.x11::Res::Type"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"struct.x11::Res::Type"* %60 to i64
  %64 = ptrtoint %"struct.x11::Res::Type"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.308", %"class.std::__1::vector.308"* %0, i64 0, i32 0, i32 0
  %66 = load %"struct.x11::Res::Type"*, %"struct.x11::Res::Type"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"struct.x11::Res::Type"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"struct.x11::Res::Type", %"struct.x11::Res::Type"* %58, i64 %71
  %73 = ptrtoint %"struct.x11::Res::Type"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"struct.x11::Res::Type"* %72 to i8*
  %77 = bitcast %"struct.x11::Res::Type"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #8
  %78 = load %"struct.x11::Res::Type"*, %"struct.x11::Res::Type"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"struct.x11::Res::Type"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"struct.x11::Res::Type"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"struct.x11::Res::Type"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Res13ClientIdValueENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.338"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.338", %"class.std::__1::vector.338"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Res::ClientIdValue"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.338", %"class.std::__1::vector.338"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Res::ClientIdValue"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 40
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Res::ClientIdValue"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 40
  %25 = add i64 %23, 40
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #8
  %27 = ptrtoint %"struct.x11::Res::ClientIdValue"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %128

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.338"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 40
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 461168601842738790
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.338"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #10
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 40
  %42 = icmp ult i64 %41, 230584300921369395
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 461168601842738790, %39 ]
  %50 = mul i64 %49, 40
  %51 = tail call i8* @_Znwm(i64 %50) #9
  %52 = bitcast i8* %51 to %"struct.x11::Res::ClientIdValue"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.x11::Res::ClientIdValue"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %55, i64 %34
  %57 = ptrtoint %"struct.x11::Res::ClientIdValue"* %56 to i64
  %58 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"struct.x11::Res::ClientIdValue"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 40, i1 false) #8
  %64 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %61, i64 1
  %65 = ptrtoint %"struct.x11::Res::ClientIdValue"* %64 to i64
  %66 = icmp eq %"struct.x11::Res::ClientIdValue"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"struct.x11::Res::ClientIdValue"* %58 to i64
  %69 = ptrtoint %"struct.x11::Res::ClientIdValue"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.338", %"class.std::__1::vector.338"* %0, i64 0, i32 0, i32 0
  %71 = load %"struct.x11::Res::ClientIdValue"*, %"struct.x11::Res::ClientIdValue"** %70, align 8
  %72 = load %"struct.x11::Res::ClientIdValue"*, %"struct.x11::Res::ClientIdValue"** %6, align 8
  %73 = icmp eq %"struct.x11::Res::ClientIdValue"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"struct.x11::Res::ClientIdValue"* %71 to i64
  br label %105

76:                                               ; preds = %67, %76
  %77 = phi %"struct.x11::Res::ClientIdValue"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"struct.x11::Res::ClientIdValue"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %77, i64 -1
  %80 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %78, i64 -1
  %81 = bitcast %"struct.x11::Res::ClientIdValue"* %79 to i8*
  %82 = bitcast %"struct.x11::Res::ClientIdValue"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 12, i1 false) #8
  %83 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %77, i64 -1, i32 2
  %84 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %78, i64 -1, i32 2
  %85 = bitcast %"class.std::__1::vector.340"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #8
  %86 = bitcast %"class.std::__1::vector.340"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.std::__1::vector.340"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %78, i64 -1, i32 2, i32 0, i32 1
  %90 = bitcast i32** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %77, i64 -1, i32 2, i32 0, i32 1
  %93 = bitcast i32** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %78, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %95 = bitcast i32** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %77, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %98 = bitcast i32** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = bitcast %"class.std::__1::vector.340"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #8
  %100 = icmp eq %"struct.x11::Res::ClientIdValue"* %80, %71
  br i1 %100, label %101, label %76

101:                                              ; preds = %76
  %102 = ptrtoint %"struct.x11::Res::ClientIdValue"* %79 to i64
  %103 = load i64, i64* %31, align 8
  %104 = load %"struct.x11::Res::ClientIdValue"*, %"struct.x11::Res::ClientIdValue"** %6, align 8
  br label %105

105:                                              ; preds = %74, %101
  %106 = phi %"struct.x11::Res::ClientIdValue"* [ %71, %74 ], [ %104, %101 ]
  %107 = phi i64 [ %57, %74 ], [ %102, %101 ]
  %108 = phi i64 [ %75, %74 ], [ %103, %101 ]
  store i64 %107, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %109 = inttoptr i64 %108 to %"struct.x11::Res::ClientIdValue"*
  %110 = icmp eq %"struct.x11::Res::ClientIdValue"* %106, %109
  br i1 %110, label %124, label %111

111:                                              ; preds = %105, %122
  %112 = phi %"struct.x11::Res::ClientIdValue"* [ %113, %122 ], [ %106, %105 ]
  %113 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %112, i64 -1
  %114 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %112, i64 -1, i32 2, i32 0, i32 0
  %115 = load i32*, i32** %114, align 8
  %116 = icmp eq i32* %115, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %111
  %118 = ptrtoint i32* %115 to i64
  %119 = getelementptr inbounds %"struct.x11::Res::ClientIdValue", %"struct.x11::Res::ClientIdValue"* %112, i64 -1, i32 2, i32 0, i32 1
  %120 = bitcast i32** %119 to i64*
  store i64 %118, i64* %120, align 8
  %121 = bitcast i32* %115 to i8*
  tail call void @_ZdlPv(i8* %121) #9
  br label %122

122:                                              ; preds = %117, %111
  %123 = icmp eq %"struct.x11::Res::ClientIdValue"* %113, %109
  br i1 %123, label %124, label %111

124:                                              ; preds = %122, %105
  %125 = icmp eq i64 %108, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %124
  %127 = inttoptr i64 %108 to i8*
  tail call void @_ZdlPv(i8* %127) #9
  br label %128

128:                                              ; preds = %126, %124, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.340"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.340", %"class.std::__1::vector.340"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.340", %"class.std::__1::vector.340"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.340"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.340"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #10
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #8
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.340", %"class.std::__1::vector.340"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #8
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Res17ResourceSizeValueENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.369"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.369", %"class.std::__1::vector.369"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Res::ResourceSizeValue"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.369", %"class.std::__1::vector.369"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Res::ResourceSizeValue"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 48
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Res::ResourceSizeValue"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %13, i64 %18, i32 0, i32 0, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 48
  %25 = add i64 %23, 48
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #8
  %27 = ptrtoint %"struct.x11::Res::ResourceSizeValue"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %128

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.369"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 48
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 384307168202282325
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.369"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #10
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 48
  %42 = icmp ult i64 %41, 192153584101141162
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 384307168202282325, %39 ]
  %50 = mul i64 %49, 48
  %51 = tail call i8* @_Znwm(i64 %50) #9
  %52 = bitcast i8* %51 to %"struct.x11::Res::ResourceSizeValue"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.x11::Res::ResourceSizeValue"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %55, i64 %34
  %57 = ptrtoint %"struct.x11::Res::ResourceSizeValue"* %56 to i64
  %58 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"struct.x11::Res::ResourceSizeValue"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 48, i1 false) #8
  %64 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %61, i64 1
  %65 = ptrtoint %"struct.x11::Res::ResourceSizeValue"* %64 to i64
  %66 = icmp eq %"struct.x11::Res::ResourceSizeValue"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"struct.x11::Res::ResourceSizeValue"* %58 to i64
  %69 = ptrtoint %"struct.x11::Res::ResourceSizeValue"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.369", %"class.std::__1::vector.369"* %0, i64 0, i32 0, i32 0
  %71 = load %"struct.x11::Res::ResourceSizeValue"*, %"struct.x11::Res::ResourceSizeValue"** %70, align 8
  %72 = load %"struct.x11::Res::ResourceSizeValue"*, %"struct.x11::Res::ResourceSizeValue"** %6, align 8
  %73 = icmp eq %"struct.x11::Res::ResourceSizeValue"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"struct.x11::Res::ResourceSizeValue"* %71 to i64
  br label %105

76:                                               ; preds = %67, %76
  %77 = phi %"struct.x11::Res::ResourceSizeValue"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"struct.x11::Res::ResourceSizeValue"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %77, i64 -1
  %80 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %78, i64 -1
  %81 = bitcast %"struct.x11::Res::ResourceSizeValue"* %79 to i8*
  %82 = bitcast %"struct.x11::Res::ResourceSizeValue"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 20, i1 false) #8
  %83 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %77, i64 -1, i32 1
  %84 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %78, i64 -1, i32 1
  %85 = bitcast %"class.std::__1::vector.371"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #8
  %86 = bitcast %"class.std::__1::vector.371"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.std::__1::vector.371"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %78, i64 -1, i32 1, i32 0, i32 1
  %90 = bitcast %"struct.x11::Res::ResourceSizeSpec"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %77, i64 -1, i32 1, i32 0, i32 1
  %93 = bitcast %"struct.x11::Res::ResourceSizeSpec"** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %78, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %95 = bitcast %"struct.x11::Res::ResourceSizeSpec"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %77, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %98 = bitcast %"struct.x11::Res::ResourceSizeSpec"** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = bitcast %"class.std::__1::vector.371"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #8
  %100 = icmp eq %"struct.x11::Res::ResourceSizeValue"* %80, %71
  br i1 %100, label %101, label %76

101:                                              ; preds = %76
  %102 = ptrtoint %"struct.x11::Res::ResourceSizeValue"* %79 to i64
  %103 = load i64, i64* %31, align 8
  %104 = load %"struct.x11::Res::ResourceSizeValue"*, %"struct.x11::Res::ResourceSizeValue"** %6, align 8
  br label %105

105:                                              ; preds = %74, %101
  %106 = phi %"struct.x11::Res::ResourceSizeValue"* [ %71, %74 ], [ %104, %101 ]
  %107 = phi i64 [ %57, %74 ], [ %102, %101 ]
  %108 = phi i64 [ %75, %74 ], [ %103, %101 ]
  store i64 %107, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %109 = inttoptr i64 %108 to %"struct.x11::Res::ResourceSizeValue"*
  %110 = icmp eq %"struct.x11::Res::ResourceSizeValue"* %106, %109
  br i1 %110, label %124, label %111

111:                                              ; preds = %105, %122
  %112 = phi %"struct.x11::Res::ResourceSizeValue"* [ %113, %122 ], [ %106, %105 ]
  %113 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %112, i64 -1
  %114 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %112, i64 -1, i32 1, i32 0, i32 0
  %115 = load %"struct.x11::Res::ResourceSizeSpec"*, %"struct.x11::Res::ResourceSizeSpec"** %114, align 8
  %116 = icmp eq %"struct.x11::Res::ResourceSizeSpec"* %115, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %111
  %118 = ptrtoint %"struct.x11::Res::ResourceSizeSpec"* %115 to i64
  %119 = getelementptr inbounds %"struct.x11::Res::ResourceSizeValue", %"struct.x11::Res::ResourceSizeValue"* %112, i64 -1, i32 1, i32 0, i32 1
  %120 = bitcast %"struct.x11::Res::ResourceSizeSpec"** %119 to i64*
  store i64 %118, i64* %120, align 8
  %121 = bitcast %"struct.x11::Res::ResourceSizeSpec"* %115 to i8*
  tail call void @_ZdlPv(i8* %121) #9
  br label %122

122:                                              ; preds = %117, %111
  %123 = icmp eq %"struct.x11::Res::ResourceSizeValue"* %113, %109
  br i1 %123, label %124, label %111

124:                                              ; preds = %122, %105
  %125 = icmp eq i64 %108, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %124
  %127 = inttoptr i64 %108 to i8*
  tail call void @_ZdlPv(i8* %127) #9
  br label %128

128:                                              ; preds = %126, %124, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Res16ResourceSizeSpecENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.371"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.371", %"class.std::__1::vector.371"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Res::ResourceSizeSpec"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.371", %"class.std::__1::vector.371"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Res::ResourceSizeSpec"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 20
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Res::ResourceSizeSpec"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Res::ResourceSizeSpec", %"struct.x11::Res::ResourceSizeSpec"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Res::ResourceSizeSpec", %"struct.x11::Res::ResourceSizeSpec"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 20
  %25 = add i64 %23, 20
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %26, i1 false) #8
  %27 = ptrtoint %"struct.x11::Res::ResourceSizeSpec"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %85

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.371"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 20
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 922337203685477580
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.371"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #10
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 20
  %42 = icmp ult i64 %41, 461168601842738790
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 922337203685477580, %39 ]
  %50 = mul i64 %49, 20
  %51 = tail call i8* @_Znwm(i64 %50) #9
  %52 = bitcast i8* %51 to %"struct.x11::Res::ResourceSizeSpec"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.x11::Res::ResourceSizeSpec"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.x11::Res::ResourceSizeSpec", %"struct.x11::Res::ResourceSizeSpec"* %55, i64 %34
  %57 = bitcast %"struct.x11::Res::ResourceSizeSpec"* %56 to i8*
  %58 = getelementptr inbounds %"struct.x11::Res::ResourceSizeSpec", %"struct.x11::Res::ResourceSizeSpec"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.x11::Res::ResourceSizeSpec", %"struct.x11::Res::ResourceSizeSpec"* %56, i64 %1
  %60 = mul nsw i64 %1, 20
  %61 = add i64 %60, -20
  %62 = urem i64 %61, 20
  %63 = sub i64 %61, %62
  %64 = add i64 %63, 20
  call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 %64, i1 false)
  %65 = ptrtoint %"struct.x11::Res::ResourceSizeSpec"* %58 to i64
  %66 = ptrtoint %"struct.x11::Res::ResourceSizeSpec"* %59 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.371", %"class.std::__1::vector.371"* %0, i64 0, i32 0, i32 0
  %68 = load %"struct.x11::Res::ResourceSizeSpec"*, %"struct.x11::Res::ResourceSizeSpec"** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = ptrtoint %"struct.x11::Res::ResourceSizeSpec"* %68 to i64
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, -20
  %73 = getelementptr inbounds %"struct.x11::Res::ResourceSizeSpec", %"struct.x11::Res::ResourceSizeSpec"* %56, i64 %72
  %74 = ptrtoint %"struct.x11::Res::ResourceSizeSpec"* %73 to i64
  %75 = icmp sgt i64 %71, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %53
  %77 = bitcast %"struct.x11::Res::ResourceSizeSpec"* %73 to i8*
  %78 = bitcast %"struct.x11::Res::ResourceSizeSpec"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 %71, i1 false) #8
  %79 = load %"struct.x11::Res::ResourceSizeSpec"*, %"struct.x11::Res::ResourceSizeSpec"** %67, align 8
  br label %80

80:                                               ; preds = %53, %76
  %81 = phi %"struct.x11::Res::ResourceSizeSpec"* [ %68, %53 ], [ %79, %76 ]
  store i64 %74, i64* %31, align 8
  store i64 %66, i64* %7, align 8
  store i64 %65, i64* %4, align 8
  %82 = icmp eq %"struct.x11::Res::ResourceSizeSpec"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %"struct.x11::Res::ResourceSizeSpec"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #9
  br label %85

85:                                               ; preds = %83, %80, %28
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
