; ModuleID = '../../third_party/webrtc/api/video_codecs/h264_profile_level_id.cc'
source_filename = "../../third_party/webrtc/api/video_codecs/h264_profile_level_id.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.webrtc::(anonymous namespace)::ProfilePattern" = type { i8, %"class.webrtc::(anonymous namespace)::BitPattern", i32 }
%"class.webrtc::(anonymous namespace)::BitPattern" = type { i8, i8 }
%"struct.webrtc::(anonymous namespace)::LevelConstraint" = type { i32, i32, i32 }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.webrtc::H264ProfileLevelId" }
%"struct.webrtc::H264ProfileLevelId" = type { i32, i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.11 }
%union.anon.11 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.absl::optional.15" = type { %"class.absl::optional_internal::optional_data.16" }
%"class.absl::optional_internal::optional_data.16" = type { %"class.absl::optional_internal::optional_data_base.17" }
%"class.absl::optional_internal::optional_data_base.17" = type { %"class.absl::optional_internal::optional_data_dtor_base.18" }
%"class.absl::optional_internal::optional_data_dtor_base.18" = type { i8, %union.anon.19 }
%union.anon.19 = type { %"class.std::__1::basic_string" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_ = comdat any

@_ZN6webrtc12_GLOBAL__N_116kProfilePatternsE = internal unnamed_addr constant [8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"] [%"struct.webrtc::(anonymous namespace)::ProfilePattern" { i8 66, %"class.webrtc::(anonymous namespace)::BitPattern" { i8 79, i8 64 }, i32 0 }, %"struct.webrtc::(anonymous namespace)::ProfilePattern" { i8 77, %"class.webrtc::(anonymous namespace)::BitPattern" { i8 -113, i8 -128 }, i32 0 }, %"struct.webrtc::(anonymous namespace)::ProfilePattern" { i8 88, %"class.webrtc::(anonymous namespace)::BitPattern" { i8 -49, i8 -64 }, i32 0 }, %"struct.webrtc::(anonymous namespace)::ProfilePattern" { i8 66, %"class.webrtc::(anonymous namespace)::BitPattern" { i8 79, i8 0 }, i32 1 }, %"struct.webrtc::(anonymous namespace)::ProfilePattern" { i8 88, %"class.webrtc::(anonymous namespace)::BitPattern" { i8 -49, i8 -128 }, i32 1 }, %"struct.webrtc::(anonymous namespace)::ProfilePattern" { i8 77, %"class.webrtc::(anonymous namespace)::BitPattern" { i8 -81, i8 0 }, i32 2 }, %"struct.webrtc::(anonymous namespace)::ProfilePattern" { i8 100, %"class.webrtc::(anonymous namespace)::BitPattern" { i8 -1, i8 0 }, i32 4 }, %"struct.webrtc::(anonymous namespace)::ProfilePattern" { i8 100, %"class.webrtc::(anonymous namespace)::BitPattern" { i8 -1, i8 12 }, i32 3 }], align 16
@_ZN6webrtc12_GLOBAL__N_117kLevelConstraintsE = internal unnamed_addr constant [17 x %"struct.webrtc::(anonymous namespace)::LevelConstraint"] [%"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 1485, i32 99, i32 10 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 1485, i32 99, i32 0 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 3000, i32 396, i32 11 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 6000, i32 396, i32 12 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 11880, i32 396, i32 13 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 11880, i32 396, i32 20 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 19800, i32 792, i32 21 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 20250, i32 1620, i32 22 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 40500, i32 1620, i32 30 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 108000, i32 3600, i32 31 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 216000, i32 5120, i32 32 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 245760, i32 8192, i32 40 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 245760, i32 8192, i32 41 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 522240, i32 8704, i32 42 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 589824, i32 22080, i32 50 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 983040, i32 36864, i32 51 }, %"struct.webrtc::(anonymous namespace)::LevelConstraint" { i32 2073600, i32 36864, i32 52 }], align 16
@_ZN6webrtc12_GLOBAL__N_115kProfileLevelIdE = internal unnamed_addr constant [17 x i8] c"profile-level-id\00", align 16
@.str = private unnamed_addr constant [7 x i8] c"42f00b\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"42100b\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"4d100b\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"42e0\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"4200\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"4d00\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"640c\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"6400\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"%s%02x\00", align 1
@switch.table._ZN6webrtc26H264ProfileLevelIdToStringERKNS_18H264ProfileLevelIdE = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN6webrtc23ParseH264ProfileLevelIdEPKc(i8* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca %"class.absl::optional_internal::optional_data_dtor_base", align 8
  %3 = tail call i64 @strlen(i8* %0) #9
  %4 = icmp eq i64 %3, 6
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 0
  store i8 0, i8* %6, align 8
  br label %44

7:                                                ; preds = %1
  %8 = tail call i64 @strtol(i8* nocapture %0, i8** null, i32 16) #10
  %9 = trunc i64 %8 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 0
  store i8 0, i8* %12, align 8
  br label %44

13:                                               ; preds = %7
  %14 = lshr i32 %9, 8
  %15 = trunc i32 %14 to i8
  %16 = lshr i32 %9, 16
  %17 = trunc i64 %8 to i8
  switch i8 %17, label %24 [
    i8 11, label %18
    i8 10, label %22
    i8 12, label %22
    i8 13, label %22
    i8 20, label %22
    i8 21, label %22
    i8 22, label %22
    i8 30, label %22
    i8 31, label %22
    i8 32, label %22
    i8 40, label %22
    i8 41, label %22
    i8 42, label %22
    i8 50, label %22
    i8 51, label %22
    i8 52, label %22
  ]

18:                                               ; preds = %13
  %19 = and i32 %9, 4096
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i64 11, i64 0
  br label %26

22:                                               ; preds = %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13
  %23 = and i64 %8, 255
  br label %26

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 0
  store i8 0, i8* %25, align 8
  br label %44

26:                                               ; preds = %22, %18
  %27 = phi i64 [ %23, %22 ], [ %21, %18 ]
  %28 = trunc i32 %16 to i8
  switch i8 %28, label %66 [
    i8 66, label %29
    i8 77, label %50
    i8 88, label %53
    i8 100, label %65
  ]

29:                                               ; preds = %26
  %30 = and i8 %15, 79
  %31 = icmp eq i8 %30, 64
  br i1 %31, label %33, label %56

32:                                               ; preds = %65
  br label %33

33:                                               ; preds = %65, %32, %62, %59, %56, %53, %50, %29
  %34 = phi %"struct.webrtc::(anonymous namespace)::ProfilePattern"* [ getelementptr inbounds ([8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"], [8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"]* @_ZN6webrtc12_GLOBAL__N_116kProfilePatternsE, i64 0, i64 0), %29 ], [ getelementptr inbounds ([8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"], [8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"]* @_ZN6webrtc12_GLOBAL__N_116kProfilePatternsE, i64 0, i64 1), %50 ], [ getelementptr inbounds ([8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"], [8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"]* @_ZN6webrtc12_GLOBAL__N_116kProfilePatternsE, i64 0, i64 2), %53 ], [ getelementptr inbounds ([8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"], [8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"]* @_ZN6webrtc12_GLOBAL__N_116kProfilePatternsE, i64 0, i64 3), %56 ], [ getelementptr inbounds ([8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"], [8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"]* @_ZN6webrtc12_GLOBAL__N_116kProfilePatternsE, i64 0, i64 4), %59 ], [ getelementptr inbounds ([8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"], [8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"]* @_ZN6webrtc12_GLOBAL__N_116kProfilePatternsE, i64 0, i64 5), %62 ], [ getelementptr inbounds ([8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"], [8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"]* @_ZN6webrtc12_GLOBAL__N_116kProfilePatternsE, i64 0, i64 6), %65 ], [ getelementptr inbounds ([8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"], [8 x %"struct.webrtc::(anonymous namespace)::ProfilePattern"]* @_ZN6webrtc12_GLOBAL__N_116kProfilePatternsE, i64 0, i64 7), %32 ]
  %35 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ProfilePattern", %"struct.webrtc::(anonymous namespace)::ProfilePattern"* %34, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 0
  store i8 1, i8* %37, align 8
  %38 = shl nuw nsw i64 %27, 32
  %39 = zext i32 %36 to i64
  %40 = or i64 %38, %39
  %41 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 1
  %42 = bitcast %union.anon* %41 to i64*
  store i64 %40, i64* %42, align 4
  %43 = trunc i64 %27 to i32
  br label %44

44:                                               ; preds = %33, %11, %66, %24, %5
  %45 = phi i32 [ %43, %33 ], [ undef, %11 ], [ undef, %66 ], [ undef, %24 ], [ undef, %5 ]
  %46 = bitcast %"class.absl::optional_internal::optional_data_dtor_base"* %2 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = insertvalue { i64, i32 } undef, i64 %47, 0
  %49 = insertvalue { i64, i32 } %48, i32 %45, 1
  ret { i64, i32 } %49

50:                                               ; preds = %26
  %51 = and i8 %15, -113
  %52 = icmp eq i8 %51, -128
  br i1 %52, label %33, label %62

53:                                               ; preds = %26
  %54 = and i8 %15, -49
  %55 = icmp eq i8 %54, -64
  br i1 %55, label %33, label %59

56:                                               ; preds = %29
  %57 = and i8 %15, 79
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %33, label %66

59:                                               ; preds = %53
  %60 = and i8 %15, -49
  %61 = icmp eq i8 %60, -128
  br i1 %61, label %33, label %66

62:                                               ; preds = %50
  %63 = and i8 %15, -81
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %33, label %66

65:                                               ; preds = %26
  switch i8 %15, label %66 [
    i8 0, label %33
    i8 12, label %32
  ]

66:                                               ; preds = %65, %26, %59, %56, %62
  %67 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 0
  store i8 0, i8* %67, align 8
  br label %44
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN6webrtc18H264SupportedLevelEif(i32, float) local_unnamed_addr #4 {
  br label %3

3:                                                ; preds = %41, %2
  %4 = phi i64 [ 16, %2 ], [ %42, %41 ]
  %5 = getelementptr inbounds [17 x %"struct.webrtc::(anonymous namespace)::LevelConstraint"], [17 x %"struct.webrtc::(anonymous namespace)::LevelConstraint"]* @_ZN6webrtc12_GLOBAL__N_117kLevelConstraintsE, i64 0, i64 %4, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = shl nsw i32 %6, 8
  %8 = icmp sgt i32 %7, %0
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds [17 x %"struct.webrtc::(anonymous namespace)::LevelConstraint"], [17 x %"struct.webrtc::(anonymous namespace)::LevelConstraint"]* @_ZN6webrtc12_GLOBAL__N_117kLevelConstraintsE, i64 0, i64 %4, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = sitofp i32 %11 to float
  %13 = sitofp i32 %6 to float
  %14 = fmul float %13, %1
  %15 = fcmp ult float %14, %12
  br i1 %15, label %16, label %19

16:                                               ; preds = %9, %3
  %17 = add nsw i64 %4, -1
  %18 = icmp eq i64 %4, 0
  br i1 %18, label %25, label %29

19:                                               ; preds = %34, %9
  %20 = phi i64 [ %4, %9 ], [ %17, %34 ]
  %21 = getelementptr inbounds [17 x %"struct.webrtc::(anonymous namespace)::LevelConstraint"], [17 x %"struct.webrtc::(anonymous namespace)::LevelConstraint"]* @_ZN6webrtc12_GLOBAL__N_117kLevelConstraintsE, i64 0, i64 %20, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = shl nuw i64 %23, 32
  br label %25

25:                                               ; preds = %16, %19
  %26 = phi i64 [ %24, %19 ], [ 0, %16 ]
  %27 = phi i64 [ 1, %19 ], [ 0, %16 ]
  %28 = or i64 %27, %26
  ret i64 %28

29:                                               ; preds = %16
  %30 = getelementptr inbounds [17 x %"struct.webrtc::(anonymous namespace)::LevelConstraint"], [17 x %"struct.webrtc::(anonymous namespace)::LevelConstraint"]* @_ZN6webrtc12_GLOBAL__N_117kLevelConstraintsE, i64 0, i64 %17, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = shl nsw i32 %31, 8
  %33 = icmp sgt i32 %32, %0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds [17 x %"struct.webrtc::(anonymous namespace)::LevelConstraint"], [17 x %"struct.webrtc::(anonymous namespace)::LevelConstraint"]* @_ZN6webrtc12_GLOBAL__N_117kLevelConstraintsE, i64 0, i64 %17, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = sitofp i32 %36 to float
  %38 = sitofp i32 %31 to float
  %39 = fmul float %38, %1
  %40 = fcmp ult float %39, %37
  br i1 %40, label %41, label %19

41:                                               ; preds = %34, %29
  %42 = add nsw i64 %4, -2
  br label %3
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN6webrtc29ParseSdpForH264ProfileLevelIdERKNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEE(%"class.std::__1::map"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.absl::optional_internal::optional_data_dtor_base", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 16, i8* %6, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 16 getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN6webrtc12_GLOBAL__N_115kProfileLevelIdE, i64 0, i64 0), i64 16, i1 false) #10
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %8 = bitcast i64* %7 to i8*
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0
  %10 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"* %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #10
  %11 = load i8, i8* %6, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  %17 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %10, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 0
  store i8 1, i8* %20, align 8
  %21 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 1
  %22 = bitcast %union.anon* %21 to i64*
  store i64 133143986176, i64* %22, align 4
  %23 = bitcast %"class.absl::optional_internal::optional_data_dtor_base"* %2 to i64*
  %24 = load i64, i64* %23, align 8
  br label %43

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 7
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::__tree_end_node"* %26 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %36

34:                                               ; preds = %25
  %35 = bitcast %"class.std::__1::__tree_end_node"* %26 to i8*
  br label %36

36:                                               ; preds = %31, %34
  %37 = phi i8* [ %33, %31 ], [ %35, %34 ]
  %38 = call { i64, i32 } @_ZN6webrtc23ParseH264ProfileLevelIdEPKc(i8* %37)
  %39 = extractvalue { i64, i32 } %38, 0
  %40 = extractvalue { i64, i32 } %38, 1
  %41 = bitcast %"class.absl::optional_internal::optional_data_dtor_base"* %2 to i64*
  store i64 %39, i64* %41, align 8
  %42 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 1, i32 0, i32 1
  store i32 %40, i32* %42, align 8
  br label %43

43:                                               ; preds = %36, %19
  %44 = phi i32 [ %40, %36 ], [ 31, %19 ]
  %45 = phi i64 [ %39, %36 ], [ %24, %19 ]
  %46 = insertvalue { i64, i32 } undef, i64 %45, 0
  %47 = insertvalue { i64, i32 } %46, i32 %44, 1
  ret { i64, i32 } %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc26H264ProfileLevelIdToStringERKNS_18H264ProfileLevelIdE(%"class.absl::optional.15"* noalias sret, %"struct.webrtc::H264ProfileLevelId"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca [7 x i8], align 1
  %4 = getelementptr inbounds %"struct.webrtc::H264ProfileLevelId", %"struct.webrtc::H264ProfileLevelId"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"struct.webrtc::H264ProfileLevelId", %"struct.webrtc::H264ProfileLevelId"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  br i1 %6, label %9, label %35

9:                                                ; preds = %2
  switch i32 %8, label %31 [
    i32 0, label %10
    i32 1, label %17
    i32 2, label %24
  ]

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  store i8 6, i8* %14, align 1
  %15 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6, i1 false) #10
  %16 = getelementptr inbounds i8, i8* %15, i64 6
  store i8 0, i8* %16, align 2
  br label %74

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %18, align 8
  %19 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 6, i8* %21, align 1
  %22 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 6, i1 false) #10
  %23 = getelementptr inbounds i8, i8* %22, i64 6
  store i8 0, i8* %23, align 2
  br label %74

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %25, align 8
  %26 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 6, i8* %28, align 1
  %29 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6, i1 false) #10
  %30 = getelementptr inbounds i8, i8* %29, i64 6
  store i8 0, i8* %30, align 2
  br label %74

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %union.anon.19* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #10
  br label %74

35:                                               ; preds = %2
  %36 = icmp ult i32 %8, 5
  br i1 %36, label %41, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %union.anon.19* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #10
  br label %74

41:                                               ; preds = %35
  %42 = sext i32 %8 to i64
  %43 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table._ZN6webrtc26H264ProfileLevelIdToStringERKNS_18H264ProfileLevelIdE, i64 0, i64 %42
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %45) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %45, i8 -86, i64 7, i1 false)
  %46 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %45, i64 7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* nonnull %44, i32 %5) #10
  %47 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %47, align 8
  %48 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = call i64 @strlen(i8* nonnull %45) #10
  %50 = icmp ugt i64 %49, -17
  br i1 %50, label %51, label %53

51:                                               ; preds = %41
  %52 = bitcast %"class.std::__1::basic_string"* %48 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %52) #12
  unreachable

53:                                               ; preds = %41
  %54 = icmp ult i64 %49, 23
  br i1 %54, label %63, label %55

55:                                               ; preds = %53
  %56 = add nuw i64 %49, 16
  %57 = and i64 %56, -16
  %58 = tail call i8* @_Znwm(i64 %57) #11
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %58, i8** %59, align 8
  %60 = or i64 %57, -9223372036854775808
  %61 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %49, i64* %62, align 8
  br label %69

63:                                               ; preds = %53
  %64 = trunc i64 %49 to i8
  %65 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  store i8 %64, i8* %66, align 1
  %67 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %68 = icmp eq i64 %49, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %63, %55
  %70 = phi i8* [ %58, %55 ], [ %67, %63 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* nonnull align 1 %45, i64 %49, i1 false) #10
  br label %71

71:                                               ; preds = %63, %69
  %72 = phi i8* [ %67, %63 ], [ %70, %69 ]
  %73 = getelementptr inbounds i8, i8* %72, i64 %49
  store i8 0, i8* %73, align 1
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %45) #10
  br label %74

74:                                               ; preds = %37, %71, %31, %24, %17, %10
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc17H264IsSameProfileERKNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEESG_(%"class.std::__1::map"* dereferenceable(24), %"class.std::__1::map"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.absl::optional_internal::optional_data_dtor_base", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.absl::optional_internal::optional_data_dtor_base", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7)
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 16, i8* %10, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 16 getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN6webrtc12_GLOBAL__N_115kProfileLevelIdE, i64 0, i64 0), i64 16, i1 false) #10
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = bitcast i64* %11 to i8*
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0
  %14 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"* %13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #10
  %15 = load i8, i8* %10, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %17, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  %21 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %14, %21
  br i1 %22, label %23, label %28

23:                                               ; preds = %20
  store i8 1, i8* %7, align 8
  %24 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %5, i64 0, i32 1
  %25 = bitcast %union.anon* %24 to i64*
  store i64 133143986176, i64* %25, align 4
  %26 = bitcast %"class.absl::optional_internal::optional_data_dtor_base"* %5 to i64*
  %27 = load i64, i64* %26, align 8
  br label %46

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 7
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = bitcast %"class.std::__1::__tree_end_node"* %29 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %39

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::__tree_end_node"* %29 to i8*
  br label %39

39:                                               ; preds = %37, %34
  %40 = phi i8* [ %36, %34 ], [ %38, %37 ]
  %41 = call { i64, i32 } @_ZN6webrtc23ParseH264ProfileLevelIdEPKc(i8* %40) #10
  %42 = extractvalue { i64, i32 } %41, 0
  %43 = extractvalue { i64, i32 } %41, 1
  %44 = bitcast %"class.absl::optional_internal::optional_data_dtor_base"* %5 to i64*
  store i64 %42, i64* %44, align 8
  %45 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %5, i64 0, i32 1, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %46

46:                                               ; preds = %23, %39
  %47 = phi i64 [ %42, %39 ], [ %27, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7)
  %48 = trunc i64 %47 to i8
  %49 = lshr i64 %47, 32
  %50 = trunc i64 %49 to i32
  %51 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %51)
  %52 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #10
  %53 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  store i8 16, i8* %54, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 16 getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN6webrtc12_GLOBAL__N_115kProfileLevelIdE, i64 0, i64 0), i64 16, i1 false) #10
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %56 = bitcast i64* %55 to i8*
  store i8 0, i8* %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0
  %58 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"* %57, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #10
  %59 = load i8, i8* %54, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #11
  br label %64

64:                                               ; preds = %61, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #10
  %65 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %66 = icmp eq %"class.std::__1::__tree_end_node"* %58, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %64
  store i8 1, i8* %51, align 8
  %68 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %3, i64 0, i32 1
  %69 = bitcast %union.anon* %68 to i64*
  store i64 133143986176, i64* %69, align 4
  %70 = bitcast %"class.absl::optional_internal::optional_data_dtor_base"* %3 to i64*
  %71 = load i64, i64* %70, align 8
  br label %90

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 7
  %74 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = bitcast %"class.std::__1::__tree_end_node"* %73 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %83

81:                                               ; preds = %72
  %82 = bitcast %"class.std::__1::__tree_end_node"* %73 to i8*
  br label %83

83:                                               ; preds = %81, %78
  %84 = phi i8* [ %80, %78 ], [ %82, %81 ]
  %85 = call { i64, i32 } @_ZN6webrtc23ParseH264ProfileLevelIdEPKc(i8* %84) #10
  %86 = extractvalue { i64, i32 } %85, 0
  %87 = extractvalue { i64, i32 } %85, 1
  %88 = bitcast %"class.absl::optional_internal::optional_data_dtor_base"* %3 to i64*
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %3, i64 0, i32 1, i32 0, i32 1
  store i32 %87, i32* %89, align 8
  br label %90

90:                                               ; preds = %67, %83
  %91 = phi i64 [ %86, %83 ], [ %71, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %51)
  %92 = trunc i64 %91 to i8
  %93 = icmp ne i8 %48, 0
  %94 = icmp ne i8 %92, 0
  %95 = and i1 %93, %94
  br i1 %95, label %96, label %100

96:                                               ; preds = %90
  %97 = lshr i64 %91, 32
  %98 = trunc i64 %97 to i32
  %99 = icmp eq i32 %50, %98
  br label %100

100:                                              ; preds = %96, %90
  %101 = phi i1 [ false, %90 ], [ %99, %96 ]
  ret i1 %101
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #10
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #10
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
