; ModuleID = '../../base/metrics/sparse_histogram.cc'
source_filename = "../../base/metrics/sparse_histogram.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%"class.base::SparseHistogram" = type { %"class.base::HistogramBase.base", %"class.base::Lock", i8, %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23" }
%"class.base::HistogramBase.base" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.base::HistogramSamples"* }
%"class.base::HistogramSamples" = type { i32 (...)**, %"struct.base::HistogramSamples::Metadata"* }
%"struct.base::HistogramSamples::Metadata" = type { i64, i64, i32, %"union.base::HistogramSamples::AtomicSingleSample" }
%"union.base::HistogramSamples::AtomicSingleSample" = type { i32 }
%"class.base::PersistentHistogramAllocator" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.5", %"class.base::PersistentSparseHistogramDataManager", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.base::PersistentMemoryAllocator"* }
%"class.base::PersistentMemoryAllocator" = type { i32 (...)**, i8*, i32, i32, i32, i64, i8, %"struct.std::__1::atomic.8", %"class.base::HistogramBase"*, %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::PersistentSparseHistogramDataManager" = type { %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator::Iterator", %"class.std::__1::map", %"class.base::Lock" }
%"class.base::PersistentMemoryAllocator::Iterator" = type { %"class.base::PersistentMemoryAllocator"*, %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::GlobalHistogramAllocator" = type { %"class.base::PersistentHistogramAllocator.base", %"class.base::PersistentHistogramAllocator::Iterator", %"class.base::FilePath" }
%"class.base::PersistentHistogramAllocator.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.5", %"class.base::PersistentSparseHistogramDataManager", i32 }>
%"class.base::PersistentHistogramAllocator::Iterator" = type { %"class.base::PersistentHistogramAllocator"*, %"class.base::PersistentMemoryAllocator::Iterator" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::BucketRanges" = type opaque
%"class.base::DummyHistogram" = type { %"class.base::HistogramBase.base", [4 x i8] }
%"class.base::SampleMap" = type { %"class.base::HistogramSamples", %"class.std::__1::map.38" }
%"class.std::__1::map.38" = type { %"class.std::__1::__tree.39" }
%"class.std::__1::__tree.39" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.52" }
%"union.absl::variant_internal::DestructibleUnionImpl.52" = type { %"union.absl::variant_internal::DestructibleUnionImpl.53" }
%"union.absl::variant_internal::DestructibleUnionImpl.53" = type { %"union.absl::variant_internal::DestructibleUnionImpl.54" }
%"union.absl::variant_internal::DestructibleUnionImpl.54" = type { %"union.absl::variant_internal::DestructibleUnionImpl.55" }
%"union.absl::variant_internal::DestructibleUnionImpl.55" = type { %"class.std::__1::basic_string" }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::PersistentSampleMap" = type { %"class.base::HistogramSamples", %"class.std::__1::map.79", %"class.base::PersistentHistogramAllocator"*, %"class.base::PersistentSampleMapRecords"* }
%"class.std::__1::map.79" = type { %"class.std::__1::__tree.80" }
%"class.std::__1::__tree.80" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::PersistentSampleMapRecords" = type { %"class.base::PersistentSparseHistogramDataManager"*, i64, i8*, i64, %"class.std::__1::vector.88", %"class.std::__1::vector.88" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { i32*, i32*, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { i32* }

$_ZZN7logging15CheckOpValueStrIN4base13HistogramTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

@.str = private unnamed_addr constant [50 x i8] c"SPARSE_HISTOGRAM == histogram->GetHistogramType()\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"../../base/metrics/sparse_histogram.cc\00", align 1
@_ZTVN4base15SparseHistogramE = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::SparseHistogram"*)* @_ZN4base15SparseHistogramD2Ev to i8*), i8* bitcast (void (%"class.base::SparseHistogram"*)* @_ZN4base15SparseHistogramD0Ev to i8*), i8* bitcast (void (%"class.base::HistogramBase"*, %"class.base::BasicStringPiece"*)* @_ZNK4base13HistogramBase9CheckNameERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (i64 (%"class.base::SparseHistogram"*)* @_ZNK4base15SparseHistogram9name_hashEv to i8*), i8* bitcast (i32 (%"class.base::SparseHistogram"*)* @_ZNK4base15SparseHistogram16GetHistogramTypeEv to i8*), i8* bitcast (i1 (%"class.base::SparseHistogram"*, i32, i32, i32)* @_ZNK4base15SparseHistogram24HasConstructionArgumentsEiij to i8*), i8* bitcast (void (%"class.base::SparseHistogram"*, i32)* @_ZN4base15SparseHistogram3AddEi to i8*), i8* bitcast (void (%"class.base::SparseHistogram"*, i32, i32)* @_ZN4base15SparseHistogram8AddCountEii to i8*), i8* bitcast (void (%"class.base::SparseHistogram"*, %"class.base::HistogramSamples"*)* @_ZN4base15SparseHistogram10AddSamplesERKNS_16HistogramSamplesE to i8*), i8* bitcast (i1 (%"class.base::SparseHistogram"*, %"class.base::PickleIterator"*)* @_ZN4base15SparseHistogram20AddSamplesFromPickleEPNS_14PickleIteratorE to i8*), i8* bitcast (i32 (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)* @_ZNK4base13HistogramBase14FindCorruptionERKNS_16HistogramSamplesE to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::SparseHistogram"*)* @_ZNK4base15SparseHistogram15SnapshotSamplesEv to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::SparseHistogram"*)* @_ZN4base15SparseHistogram13SnapshotDeltaEv to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::SparseHistogram"*)* @_ZNK4base15SparseHistogram18SnapshotFinalDeltaEv to i8*), i8* bitcast (void (%"class.base::HistogramBase"*, %"class.std::__1::basic_string"*)* @_ZNK4base13HistogramBase10WriteAsciiEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.base::DictionaryValue"*, %"class.base::SparseHistogram"*)* @_ZNK4base15SparseHistogram11ToGraphDictEv to i8*), i8* bitcast (void (%"class.base::HistogramBase"*)* @_ZNK4base13HistogramBase25ValidateHistogramContentsEv to i8*), i8* bitcast (void (%"class.base::SparseHistogram"*, %"class.base::Pickle"*)* @_ZNK4base15SparseHistogram17SerializeInfoImplEPNS_6PickleE to i8*), i8* bitcast (void (%"class.base::SparseHistogram"*, %"class.base::DictionaryValue"*)* @_ZNK4base15SparseHistogram13GetParametersEPNS_15DictionaryValueE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@_ZN4base18StatisticsRecorder22have_active_callbacks_E = external local_unnamed_addr global %"struct.std::__1::atomic.8", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"s\00", align 1

@_ZN4base15SparseHistogramD1Ev = hidden unnamed_addr alias void (%"class.base::SparseHistogram"*), void (%"class.base::SparseHistogram"*)* @_ZN4base15SparseHistogramD2Ev
@_ZN4base15SparseHistogramC1EPKc = hidden unnamed_addr alias void (%"class.base::SparseHistogram"*, i8*), void (%"class.base::SparseHistogram"*, i8*)* @_ZN4base15SparseHistogramC2EPKc
@_ZN4base15SparseHistogramC1EPNS_28PersistentHistogramAllocatorEPKcPNS_16HistogramSamples8MetadataES7_ = hidden unnamed_addr alias void (%"class.base::SparseHistogram"*, %"class.base::PersistentHistogramAllocator"*, i8*, %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*), void (%"class.base::SparseHistogram"*, %"class.base::PersistentHistogramAllocator"*, i8*, %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*)* @_ZN4base15SparseHistogramC2EPNS_28PersistentHistogramAllocatorEPKcPNS_16HistogramSamples8MetadataES7_

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15SparseHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i64 %18, i64 %19
  %21 = tail call %"class.base::HistogramBase"* @_ZN4base18StatisticsRecorder13FindHistogramENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %16, i64 %20) #10
  %22 = icmp eq %"class.base::HistogramBase"* %21, null
  br i1 %22, label %23, label %62

23:                                               ; preds = %2
  %24 = load i8, i8* %10, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %13, align 8
  %27 = select i1 %25, i8* %26, i8* %15
  %28 = load i64, i64* %17, align 8
  %29 = zext i8 %24 to i64
  %30 = select i1 %25, i64 %28, i64 %29
  %31 = tail call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %27, i64 %30) #10
  %32 = trunc i64 %31 to i32
  %33 = tail call zeroext i1 @_ZN4base18StatisticsRecorder21ShouldRecordHistogramEj(i32 %32) #10
  br i1 %33, label %34, label %59

34:                                               ; preds = %23
  %35 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #10
  store i32 0, i32* %4, align 4
  %36 = tail call %"class.base::GlobalHistogramAllocator"* @_ZN4base24GlobalHistogramAllocator3GetEv() #10
  %37 = bitcast %"class.base::GlobalHistogramAllocator"* %36 to %"class.base::PersistentHistogramAllocator"*
  %38 = icmp eq %"class.base::GlobalHistogramAllocator"* %36, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %34
  %40 = call %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator17AllocateHistogramENS_13HistogramTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiiPKNS_12BucketRangesEiPj(%"class.base::PersistentHistogramAllocator"* nonnull %37, i32 4, %"class.std::__1::basic_string"* dereferenceable(24) %0, i32 0, i32 0, %"class.base::BucketRanges"* null, i32 %1, i32* nonnull %4) #10
  %41 = ptrtoint %"class.base::HistogramBase"* %40 to i64
  %42 = icmp eq %"class.base::HistogramBase"* %40, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39, %34
  %44 = and i32 %1, -65
  %45 = call i8* @_Znwm(i64 88) #11
  %46 = bitcast i8* %45 to %"class.base::SparseHistogram"*
  %47 = call i8* @_ZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %0) #10
  call void @_ZN4base15SparseHistogramC2EPKc(%"class.base::SparseHistogram"* nonnull %46, i8* %47)
  %48 = bitcast i8* %45 to %"class.base::HistogramBase"*
  %49 = ptrtoint i8* %45 to i64
  call void @_ZN4base13HistogramBase8SetFlagsEi(%"class.base::HistogramBase"* nonnull %48, i32 %44) #10
  br label %50

50:                                               ; preds = %39, %43
  %51 = phi i64 [ %41, %39 ], [ %49, %43 ]
  %52 = inttoptr i64 %51 to %"class.base::HistogramBase"*
  %53 = call %"class.base::HistogramBase"* @_ZN4base18StatisticsRecorder25RegisterOrDeleteDuplicateEPNS_13HistogramBaseE(%"class.base::HistogramBase"* %52) #10
  %54 = load i32, i32* %4, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %50
  %57 = icmp eq %"class.base::HistogramBase"* %53, %52
  call void @_ZN4base28PersistentHistogramAllocator17FinalizeHistogramEjb(%"class.base::PersistentHistogramAllocator"* %37, i32 %54, i1 zeroext %57) #10
  br label %58

58:                                               ; preds = %50, %56
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #10
  br label %62

59:                                               ; preds = %23
  %60 = tail call %"class.base::DummyHistogram"* @_ZN4base14DummyHistogram11GetInstanceEv() #10
  %61 = bitcast %"class.base::DummyHistogram"* %60 to %"class.base::HistogramBase"*
  br label %89

62:                                               ; preds = %58, %2
  %63 = phi %"class.base::HistogramBase"* [ %21, %2 ], [ %53, %58 ]
  %64 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #10
  %65 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %65, align 8
  %66 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #10
  store i32 4, i32* %6, align 4
  %67 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #10
  %68 = bitcast %"class.base::HistogramBase"* %63 to i32 (%"class.base::HistogramBase"*)***
  %69 = load i32 (%"class.base::HistogramBase"*)**, i32 (%"class.base::HistogramBase"*)*** %68, align 8
  %70 = getelementptr inbounds i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %69, i64 4
  %71 = load i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %70, align 8
  %72 = call i32 %71(%"class.base::HistogramBase"* %63) #10
  store i32 %72, i32* %7, align 4
  %73 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73)
  %74 = icmp eq i32 %72, 4
  br i1 %74, label %75, label %77

75:                                               ; preds = %62
  %76 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* null, i8** %76, align 8
  br label %82

77:                                               ; preds = %62
  %78 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %66, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN4base13HistogramTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #10
  %79 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %67, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN4base13HistogramTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i8* %78, i8* %79) #10
  %80 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %75, %77
  %83 = phi i8* [ %81, %77 ], [ null, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73)
  store i8* %83, i8** %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #10
  %84 = icmp eq i8* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 76, %"class.logging::CheckOpResult"* nonnull %5) #10
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #10
  br label %88

88:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #10
  br label %89

89:                                               ; preds = %59, %88
  %90 = phi %"class.base::HistogramBase"* [ %63, %88 ], [ %61, %59 ]
  ret %"class.base::HistogramBase"* %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::HistogramBase"* @_ZN4base18StatisticsRecorder13FindHistogramENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base18StatisticsRecorder21ShouldRecordHistogramEj(i32) local_unnamed_addr #2

declare i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare %"class.base::DummyHistogram"* @_ZN4base14DummyHistogram11GetInstanceEv() local_unnamed_addr #2

declare %"class.base::GlobalHistogramAllocator"* @_ZN4base24GlobalHistogramAllocator3GetEv() local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator17AllocateHistogramENS_13HistogramTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiiPKNS_12BucketRangesEiPj(%"class.base::PersistentHistogramAllocator"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, %"class.base::BucketRanges"*, i32, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare i8* @_ZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase8SetFlagsEi(%"class.base::HistogramBase"*, i32) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base18StatisticsRecorder25RegisterOrDeleteDuplicateEPNS_13HistogramBaseE(%"class.base::HistogramBase"*) local_unnamed_addr #2

declare void @_ZN4base28PersistentHistogramAllocator17FinalizeHistogramEjb(%"class.base::PersistentHistogramAllocator"*, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15SparseHistogram16PersistentCreateEPNS_28PersistentHistogramAllocatorEPKcPNS_16HistogramSamples8MetadataES7_(%"class.base::PersistentHistogramAllocator"*, i8*, %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 88) #11
  %6 = bitcast i8* %5 to %"class.base::SparseHistogram"*
  tail call void @_ZN4base15SparseHistogramC2EPNS_28PersistentHistogramAllocatorEPKcPNS_16HistogramSamples8MetadataES7_(%"class.base::SparseHistogram"* nonnull %6, %"class.base::PersistentHistogramAllocator"* %0, i8* %1, %"struct.base::HistogramSamples::Metadata"* %2, %"struct.base::HistogramSamples::Metadata"* %3)
  %7 = bitcast i8* %5 to %"class.base::HistogramBase"*
  ret %"class.base::HistogramBase"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15SparseHistogramD2Ev(%"class.base::SparseHistogram"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN4base15SparseHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %3, align 8
  store %"class.base::HistogramSamples"* null, %"class.base::HistogramSamples"** %3, align 8
  %5 = icmp eq %"class.base::HistogramSamples"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::HistogramSamples"* %4 to void (%"class.base::HistogramSamples"*)***
  %8 = load void (%"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %8, i64 1
  %10 = load void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %9, align 8
  tail call void %10(%"class.base::HistogramSamples"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %12, align 8
  store %"class.base::HistogramSamples"* null, %"class.base::HistogramSamples"** %12, align 8
  %14 = icmp eq %"class.base::HistogramSamples"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.base::HistogramSamples"* %13 to void (%"class.base::HistogramSamples"*)***
  %17 = load void (%"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %17, i64 1
  %19 = load void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %18, align 8
  tail call void %19(%"class.base::HistogramSamples"* nonnull %13) #10
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %21) #10
  %22 = bitcast %"class.base::SparseHistogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZN4base13HistogramBaseD2Ev(%"class.base::HistogramBase"* %22) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base13HistogramBaseD2Ev(%"class.base::HistogramBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15SparseHistogramD0Ev(%"class.base::SparseHistogram"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN4base15SparseHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %3, align 8
  store %"class.base::HistogramSamples"* null, %"class.base::HistogramSamples"** %3, align 8
  %5 = icmp eq %"class.base::HistogramSamples"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::HistogramSamples"* %4 to void (%"class.base::HistogramSamples"*)***
  %8 = load void (%"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %8, i64 1
  %10 = load void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %9, align 8
  tail call void %10(%"class.base::HistogramSamples"* nonnull %4) #10
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %12, align 8
  store %"class.base::HistogramSamples"* null, %"class.base::HistogramSamples"** %12, align 8
  %14 = icmp eq %"class.base::HistogramSamples"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.base::HistogramSamples"* %13 to void (%"class.base::HistogramSamples"*)***
  %17 = load void (%"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %17, i64 1
  %19 = load void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %18, align 8
  tail call void %19(%"class.base::HistogramSamples"* nonnull %13) #10
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %21) #10
  %22 = bitcast %"class.base::SparseHistogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZN4base13HistogramBaseD2Ev(%"class.base::HistogramBase"* %22) #10
  %23 = bitcast %"class.base::SparseHistogram"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4base15SparseHistogram9name_hashEv(%"class.base::SparseHistogram"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %2, align 8
  %4 = getelementptr inbounds %"class.base::HistogramSamples", %"class.base::HistogramSamples"* %3, i64 0, i32 1
  %5 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %4, align 8
  %6 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  ret i64 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK4base15SparseHistogram16GetHistogramTypeEv(%"class.base::SparseHistogram"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i32 4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK4base15SparseHistogram24HasConstructionArgumentsEiij(%"class.base::SparseHistogram"* nocapture readnone, i32, i32, i32) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15SparseHistogram3AddEi(%"class.base::SparseHistogram"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.base::SparseHistogram"* %0 to void (%"class.base::SparseHistogram"*, i32, i32)***
  %4 = load void (%"class.base::SparseHistogram"*, i32, i32)**, void (%"class.base::SparseHistogram"*, i32, i32)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.base::SparseHistogram"*, i32, i32)*, void (%"class.base::SparseHistogram"*, i32, i32)** %4, i64 7
  %6 = load void (%"class.base::SparseHistogram"*, i32, i32)*, void (%"class.base::SparseHistogram"*, i32, i32)** %5, align 8
  tail call void %6(%"class.base::SparseHistogram"* %0, i32 %1, i32 1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15SparseHistogram8AddCountEii(%"class.base::SparseHistogram"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %2, 1
  br i1 %4, label %25, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #10
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #10
  br label %12

12:                                               ; preds = %5, %10
  %13 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %13, align 8
  %15 = bitcast %"class.base::HistogramSamples"* %14 to void (%"class.base::HistogramSamples"*, i32, i32)***
  %16 = load void (%"class.base::HistogramSamples"*, i32, i32)**, void (%"class.base::HistogramSamples"*, i32, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.base::HistogramSamples"*, i32, i32)*, void (%"class.base::HistogramSamples"*, i32, i32)** %16, i64 2
  %18 = load void (%"class.base::HistogramSamples"*, i32, i32)*, void (%"class.base::HistogramSamples"*, i32, i32)** %17, align 8
  tail call void %18(%"class.base::HistogramSamples"* %14, i32 %1, i32 %2) #10
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #10
  %20 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.8", %"struct.std::__1::atomic.8"* @_ZN4base18StatisticsRecorder22have_active_callbacks_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %21 = and i8 %20, 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %12
  %24 = bitcast %"class.base::SparseHistogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZNK4base13HistogramBase18FindAndRunCallbackEi(%"class.base::HistogramBase"* %24, i32 %1) #10
  br label %25

25:                                               ; preds = %12, %3, %23
  ret void
}

declare void @_ZNK4base13HistogramBase18FindAndRunCallbackEi(%"class.base::HistogramBase"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramSamples"* @_ZNK4base15SparseHistogram15SnapshotSamplesEv(%"class.base::SparseHistogram"*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #11
  %3 = bitcast i8* %2 to %"class.base::SampleMap"*
  %4 = bitcast %"class.base::SparseHistogram"* %0 to i64 (%"class.base::SparseHistogram"*)***
  %5 = load i64 (%"class.base::SparseHistogram"*)**, i64 (%"class.base::SparseHistogram"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.base::SparseHistogram"*)*, i64 (%"class.base::SparseHistogram"*)** %5, i64 3
  %7 = load i64 (%"class.base::SparseHistogram"*)*, i64 (%"class.base::SparseHistogram"*)** %6, align 8
  %8 = tail call i64 %7(%"class.base::SparseHistogram"* %0) #10
  tail call void @_ZN4base9SampleMapC1Em(%"class.base::SampleMap"* nonnull %3, i64 %8) #10
  %9 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %9, i64 0, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %10) #10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13, !prof !2

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %14) #10
  br label %15

15:                                               ; preds = %13, %1
  %16 = bitcast i8* %2 to %"class.base::HistogramSamples"*
  %17 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %17, align 8
  %19 = bitcast i8* %2 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %20 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %20, i64 5
  %22 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %21, align 8
  tail call void %22(%"class.base::HistogramSamples"* nonnull %16, %"class.base::HistogramSamples"* dereferenceable(16) %18) #10
  %23 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %23, align 8
  %25 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %19, align 8
  %26 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %25, i64 5
  %27 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %26, align 8
  tail call void %27(%"class.base::HistogramSamples"* nonnull %16, %"class.base::HistogramSamples"* dereferenceable(16) %24) #10
  %28 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #10
  ret %"class.base::HistogramSamples"* %16
}

declare void @_ZN4base9SampleMapC1Em(%"class.base::SampleMap"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramSamples"* @_ZN4base15SparseHistogram13SnapshotDeltaEv(%"class.base::SparseHistogram"*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #11
  %3 = bitcast i8* %2 to %"class.base::SampleMap"*
  %4 = bitcast %"class.base::SparseHistogram"* %0 to i64 (%"class.base::SparseHistogram"*)***
  %5 = load i64 (%"class.base::SparseHistogram"*)**, i64 (%"class.base::SparseHistogram"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.base::SparseHistogram"*)*, i64 (%"class.base::SparseHistogram"*)** %5, i64 3
  %7 = load i64 (%"class.base::SparseHistogram"*)*, i64 (%"class.base::SparseHistogram"*)** %6, align 8
  %8 = tail call i64 %7(%"class.base::SparseHistogram"* %0) #10
  tail call void @_ZN4base9SampleMapC1Em(%"class.base::SampleMap"* nonnull %3, i64 %8) #10
  %9 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %9, i64 0, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %10) #10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13, !prof !2

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %14) #10
  br label %15

15:                                               ; preds = %13, %1
  %16 = bitcast i8* %2 to %"class.base::HistogramSamples"*
  %17 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %17, align 8
  %19 = bitcast i8* %2 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %20 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %20, i64 5
  %22 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %21, align 8
  tail call void %22(%"class.base::HistogramSamples"* nonnull %16, %"class.base::HistogramSamples"* dereferenceable(16) %18) #10
  %23 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %17, align 8
  %24 = bitcast %"class.base::HistogramSamples"* %23 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %25 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %25, i64 7
  %27 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %26, align 8
  tail call void %27(%"class.base::HistogramSamples"* %23, %"class.base::HistogramSamples"* nonnull dereferenceable(16) %16) #10
  %28 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %28, align 8
  %30 = bitcast %"class.base::HistogramSamples"* %29 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %31 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %31, i64 5
  %33 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %32, align 8
  tail call void %33(%"class.base::HistogramSamples"* %29, %"class.base::HistogramSamples"* nonnull dereferenceable(16) %16) #10
  %34 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #10
  ret %"class.base::HistogramSamples"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramSamples"* @_ZNK4base15SparseHistogram18SnapshotFinalDeltaEv(%"class.base::SparseHistogram"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 2
  store i8 1, i8* %2, align 8
  %3 = tail call i8* @_Znwm(i64 40) #11
  %4 = bitcast i8* %3 to %"class.base::SampleMap"*
  %5 = bitcast %"class.base::SparseHistogram"* %0 to i64 (%"class.base::SparseHistogram"*)***
  %6 = load i64 (%"class.base::SparseHistogram"*)**, i64 (%"class.base::SparseHistogram"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.base::SparseHistogram"*)*, i64 (%"class.base::SparseHistogram"*)** %6, i64 3
  %8 = load i64 (%"class.base::SparseHistogram"*)*, i64 (%"class.base::SparseHistogram"*)** %7, align 8
  %9 = tail call i64 %8(%"class.base::SparseHistogram"* %0) #10
  tail call void @_ZN4base9SampleMapC1Em(%"class.base::SampleMap"* nonnull %4, i64 %9) #10
  %10 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #10
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #10
  br label %16

16:                                               ; preds = %14, %1
  %17 = bitcast i8* %3 to %"class.base::HistogramSamples"*
  %18 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %18, align 8
  %20 = bitcast i8* %3 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %21 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %21, i64 5
  %23 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %22, align 8
  tail call void %23(%"class.base::HistogramSamples"* nonnull %17, %"class.base::HistogramSamples"* dereferenceable(16) %19) #10
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #10
  ret %"class.base::HistogramSamples"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15SparseHistogram10AddSamplesERKNS_16HistogramSamplesE(%"class.base::SparseHistogram"*, %"class.base::HistogramSamples"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #10
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %10, align 8
  %12 = bitcast %"class.base::HistogramSamples"* %11 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %13 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %13, i64 5
  %15 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %14, align 8
  tail call void %15(%"class.base::HistogramSamples"* %11, %"class.base::HistogramSamples"* dereferenceable(16) %1) #10
  %16 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15SparseHistogram20AddSamplesFromPickleEPNS_14PickleIteratorE(%"class.base::SparseHistogram"*, %"class.base::PickleIterator"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #10
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.base::HistogramSamples"*, %"class.base::HistogramSamples"** %10, align 8
  %12 = bitcast %"class.base::HistogramSamples"* %11 to i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)***
  %13 = load i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)**, i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)*, i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)** %13, i64 6
  %15 = load i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)*, i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.base::HistogramSamples"* %11, %"class.base::PickleIterator"* %1) #10
  %17 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #10
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base15SparseHistogram11ToGraphDictEv(%"class.base::DictionaryValue"* noalias sret, %"class.base::SparseHistogram"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.base::SparseHistogram"* %1 to %"class.base::HistogramSamples"* (%"class.base::SparseHistogram"*)***
  %5 = load %"class.base::HistogramSamples"* (%"class.base::SparseHistogram"*)**, %"class.base::HistogramSamples"* (%"class.base::SparseHistogram"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.base::HistogramSamples"* (%"class.base::SparseHistogram"*)*, %"class.base::HistogramSamples"* (%"class.base::SparseHistogram"*)** %5, i64 11
  %7 = load %"class.base::HistogramSamples"* (%"class.base::SparseHistogram"*)*, %"class.base::HistogramSamples"* (%"class.base::SparseHistogram"*)** %6, align 8
  %8 = tail call %"class.base::HistogramSamples"* %7(%"class.base::SparseHistogram"* %1) #10
  %9 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %1, i64 0, i32 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @strlen(i8* nonnull %10) #10
  br label %17

14:                                               ; preds = %2
  %15 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #10
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %17

17:                                               ; preds = %12, %14
  %18 = phi i64 [ 0, %14 ], [ %13, %12 ]
  %19 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  call void @_ZNK4base16HistogramSamples11ToGraphDictENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* sret %0, %"class.base::HistogramSamples"* %8, i8* %10, i64 %18, i32 %20) #10
  %21 = icmp eq %"class.base::HistogramSamples"* %8, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.base::HistogramSamples"* %8 to void (%"class.base::HistogramSamples"*)***
  %24 = load void (%"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %24, i64 1
  %26 = load void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %25, align 8
  call void %26(%"class.base::HistogramSamples"* nonnull %8) #10
  br label %27

27:                                               ; preds = %17, %22
  ret void
}

declare void @_ZNK4base16HistogramSamples11ToGraphDictENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* sret, %"class.base::HistogramSamples"*, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base15SparseHistogram17SerializeInfoImplEPNS_6PickleE(%"class.base::SparseHistogram"* nocapture readonly, %"class.base::Pickle"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %11 = icmp eq i8* %8, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @strlen(i8* nonnull %8) #10
  store i64 %13, i64* %10, align 8
  br label %17

14:                                               ; preds = %2
  store i64 0, i64* %10, align 8
  %15 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #10
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %17

17:                                               ; preds = %12, %14
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  %18 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20)
  store i32 %19, i32* %4, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20)
  ret void
}

declare void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15SparseHistogramC2EPKc(%"class.base::SparseHistogram"*, i8*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.base::SparseHistogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZN4base13HistogramBaseC2EPKc(%"class.base::HistogramBase"* %4, i8* %1) #10
  %5 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN4base15SparseHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %6) #10
  %7 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 3
  %9 = tail call i8* @_Znwm(i64 40) #11
  %10 = bitcast i8* %9 to %"class.base::SampleMap"*
  %11 = icmp eq i8* %1, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @strlen(i8* nonnull %1) #10
  br label %17

14:                                               ; preds = %2
  %15 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #10
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %17

17:                                               ; preds = %12, %14
  %18 = phi i64 [ 0, %14 ], [ %13, %12 ]
  %19 = call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %1, i64 %18) #10
  call void @_ZN4base9SampleMapC1Em(%"class.base::SampleMap"* nonnull %10, i64 %19) #10
  %20 = ptrtoint i8* %9 to i64
  %21 = bitcast %"class.std::__1::unique_ptr.23"* %8 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 4
  %23 = call i8* @_Znwm(i64 40) #11
  %24 = bitcast i8* %23 to %"class.base::SampleMap"*
  %25 = getelementptr inbounds i8, i8* %9, i64 8
  %26 = bitcast i8* %25 to %"struct.base::HistogramSamples::Metadata"**
  %27 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %26, align 8
  %28 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %27, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  call void @_ZN4base9SampleMapC1Em(%"class.base::SampleMap"* nonnull %24, i64 %29) #10
  %30 = ptrtoint i8* %23 to i64
  %31 = bitcast %"class.std::__1::unique_ptr.23"* %22 to i64*
  store i64 %30, i64* %31, align 8
  ret void
}

declare void @_ZN4base13HistogramBaseC2EPKc(%"class.base::HistogramBase"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15SparseHistogramC2EPNS_28PersistentHistogramAllocatorEPKcPNS_16HistogramSamples8MetadataES7_(%"class.base::SparseHistogram"*, %"class.base::PersistentHistogramAllocator"*, i8*, %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.base::SparseHistogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZN4base13HistogramBaseC2EPKc(%"class.base::HistogramBase"* %7, i8* %2) #10
  %8 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN4base15SparseHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %9) #10
  %10 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 2
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 3
  %12 = tail call i8* @_Znwm(i64 56) #11
  %13 = bitcast i8* %12 to %"class.base::PersistentSampleMap"*
  %14 = icmp eq i8* %2, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %5
  %16 = tail call i64 @strlen(i8* nonnull %2) #10
  br label %20

17:                                               ; preds = %5
  %18 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #10
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i64 [ 0, %17 ], [ %16, %15 ]
  %22 = call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %2, i64 %21) #10
  call void @_ZN4base19PersistentSampleMapC1EmPNS_28PersistentHistogramAllocatorEPNS_16HistogramSamples8MetadataE(%"class.base::PersistentSampleMap"* nonnull %13, i64 %22, %"class.base::PersistentHistogramAllocator"* %1, %"struct.base::HistogramSamples::Metadata"* %3) #10
  %23 = ptrtoint i8* %12 to i64
  %24 = bitcast %"class.std::__1::unique_ptr.23"* %11 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.base::SparseHistogram", %"class.base::SparseHistogram"* %0, i64 0, i32 4
  %26 = call i8* @_Znwm(i64 56) #11
  %27 = bitcast i8* %26 to %"class.base::PersistentSampleMap"*
  %28 = getelementptr inbounds i8, i8* %12, i64 8
  %29 = bitcast i8* %28 to %"struct.base::HistogramSamples::Metadata"**
  %30 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %29, align 8
  %31 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %30, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 1
  call void @_ZN4base19PersistentSampleMapC1EmPNS_28PersistentHistogramAllocatorEPNS_16HistogramSamples8MetadataE(%"class.base::PersistentSampleMap"* nonnull %27, i64 %33, %"class.base::PersistentHistogramAllocator"* %1, %"struct.base::HistogramSamples::Metadata"* %4) #10
  %34 = ptrtoint i8* %26 to i64
  %35 = bitcast %"class.std::__1::unique_ptr.23"* %25 to i64*
  store i64 %34, i64* %35, align 8
  ret void
}

declare void @_ZN4base19PersistentSampleMapC1EmPNS_28PersistentHistogramAllocatorEPNS_16HistogramSamples8MetadataE(%"class.base::PersistentSampleMap"*, i64, %"class.base::PersistentHistogramAllocator"*, %"struct.base::HistogramSamples::Metadata"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15SparseHistogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca i32, align 4
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #10
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #10
  store i32 -1431655766, i32* %3, align 4
  %7 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* %0, %"class.std::__1::basic_string"* nonnull %2) #10
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %0, i32* nonnull %3) #10
  br i1 %9, label %10, label %14

10:                                               ; preds = %8
  %11 = load i32, i32* %3, align 4
  %12 = and i32 %11, -17
  store i32 %12, i32* %3, align 4
  %13 = call %"class.base::HistogramBase"* @_ZN4base15SparseHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 %12)
  br label %14

14:                                               ; preds = %1, %8, %10
  %15 = phi %"class.base::HistogramBase"* [ %13, %10 ], [ null, %8 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %14
  %21 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %14, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret %"class.base::HistogramBase"* %15
}

declare zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base15SparseHistogram13GetParametersEPNS_15DictionaryValueE(%"class.base::SparseHistogram"*, %"class.base::DictionaryValue"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = bitcast %"class.base::SparseHistogram"* %0 to i32 (%"class.base::SparseHistogram"*)***
  %6 = load i32 (%"class.base::SparseHistogram"*)**, i32 (%"class.base::SparseHistogram"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.base::SparseHistogram"*)*, i32 (%"class.base::SparseHistogram"*)** %6, i64 4
  %8 = load i32 (%"class.base::SparseHistogram"*)*, i32 (%"class.base::SparseHistogram"*)** %7, align 8
  %9 = tail call i32 %8(%"class.base::SparseHistogram"* %0) #10
  call void @_ZN4base21HistogramTypeToStringENS_13HistogramTypeE(%"class.std::__1::basic_string"* nonnull sret %3, i32 %9) #10
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i64 %18, i64 %19
  %21 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4, i8* %16, i64 %20) #10
  %22 = load i8, i8* %11, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %2
  %25 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"*, i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base21HistogramTypeToStringENS_13HistogramTypeE(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

declare void @_ZNK4base13HistogramBase9CheckNameERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::HistogramBase"*, %"class.base::BasicStringPiece"* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZNK4base13HistogramBase14FindCorruptionERKNS_16HistogramSamplesE(%"class.base::HistogramBase"*, %"class.base::HistogramSamples"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK4base13HistogramBase10WriteAsciiEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::HistogramBase"*, %"class.std::__1::basic_string"*) unnamed_addr #2

declare void @_ZNK4base13HistogramBase25ValidateHistogramContentsEv(%"class.base::HistogramBase"*) unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIN4base13HistogramTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #2

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
