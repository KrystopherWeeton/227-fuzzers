; ModuleID = '../../third_party/icu/source/i18n/rematch.cpp'
source_filename = "../../third_party/icu/source/i18n/rematch.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::RegexStaticSets" = type { [8 x i8], [13 x %"class.icu_69::UnicodeSet"], [13 x %"struct.icu_69::Regex8BitSet"], [3 x %"class.icu_69::UnicodeSet"], %"class.icu_69::UnicodeSet", %"class.icu_69::UnicodeSet"*, %struct.UText* }
%"struct.icu_69::Regex8BitSet" = type { [32 x i8] }
%"class.icu_69::UnicodeSet" = type <{ %"class.icu_69::UnicodeFilter", i32*, i32, i32, i8, [7 x i8], %"class.icu_69::BMPSet"*, i32*, i32, [4 x i8], i16*, i32, [4 x i8], %"class.icu_69::UVector"*, %"class.icu_69::UnicodeSetStringSpan"*, [25 x i32], [4 x i8] }>
%"class.icu_69::UnicodeFilter" = type { %"class.icu_69::UnicodeFunctor", %"class.icu_69::UnicodeMatcher" }
%"class.icu_69::UnicodeFunctor" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::UnicodeMatcher" = type { i32 (...)** }
%"class.icu_69::BMPSet" = type opaque
%"class.icu_69::UVector" = type { %"class.icu_69::UObject", i32, i32, %union.UElement*, void (i8*)*, i8 (i8*, i8*)* }
%union.UElement = type { i8* }
%"class.icu_69::UnicodeSetStringSpan" = type opaque
%struct.UText = type { i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i16*, %struct.UTextFuncs*, i8*, i8*, i8*, i8*, i8*, i8*, i64, i32, i32, i64, i32, i32 }
%struct.UTextFuncs = type { i32, i32, i32, i32, %struct.UText* (%struct.UText*, %struct.UText*, i8, i32*)*, i64 (%struct.UText*)*, i8 (%struct.UText*, i64, i8)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, void (%struct.UText*, i64, i64, i64, i8, i32*)*, i64 (%struct.UText*)*, i32 (%struct.UText*, i64)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)* }
%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"class.icu_69::RegexMatcher" = type { %"class.icu_69::UObject", %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"*, %"class.icu_69::UnicodeString"*, %struct.UText*, %struct.UText*, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i8, i8, i8, i64, i64, i64, i64, i8, i8, %"class.icu_69::UVector64"*, %"struct.icu_69::REStackFrame"*, i64*, [8 x i64], i32, i32, i32, i32, i8 (i8*, i32)*, i8*, i8 (i8*, i64)*, i8*, i8, i8, i32, %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"* }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.0, [32 x i8] }
%struct.anon.0 = type { i16, i32, i32, i16* }
%"class.icu_69::UVector64" = type { %"class.icu_69::UObject", i32, i32, i32, i64* }
%"struct.icu_69::REStackFrame" = type { i64, i64, [1 x i64] }
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.icu_69::RegexPattern" = type { %"class.icu_69::UObject", %struct.UText*, %"class.icu_69::UnicodeString"*, i32, %"class.icu_69::UVector64"*, %"class.icu_69::UnicodeString", %"class.icu_69::UVector"*, %"struct.icu_69::Regex8BitSet"*, i32, i32, i32, i32, %"class.icu_69::UVector32"*, i32, i32, i32, %"class.icu_69::UnicodeSet"*, i32, %"struct.icu_69::Regex8BitSet"*, i8, %struct.UHashtable* }
%"class.icu_69::UVector32" = type { %"class.icu_69::UObject", i32, i32, i32, i32* }
%struct.UHashtable = type { %struct.UHashElement*, i32 (i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, void (i8*)*, void (i8*)*, i32, i32, i32, i32, float, float, i8, i8 }
%struct.UHashElement = type { i32, %union.UElement, %union.UElement }
%struct.UParseError = type { i32, i32, [16 x i16], [16 x i16] }
%"struct.icu_69::URegexUTextUnescapeCharContext" = type { %struct.UText*, i32 }
%"class.icu_69::CaseFoldingUTextIterator" = type { %struct.UText*, i16*, i32, i32 }
%struct.anon = type { i16, [27 x i16] }
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.icu_69::CaseFoldingUCharIterator" = type { i16*, i64, i64, i16*, i32, i32 }
%"class.icu_69::MaybeStackArray.1" = type <{ i16*, i32, i8, i8, [40 x i16], [2 x i8] }>

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

@_ZTVN6icu_6912RegexMatcherE = hidden unnamed_addr constant { [64 x i8*] } { [64 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6912RegexMatcherE to i8*), i8* bitcast (void (%"class.icu_69::RegexMatcher"*)* @_ZN6icu_6912RegexMatcherD2Ev to i8*), i8* bitcast (void (%"class.icu_69::RegexMatcher"*)* @_ZN6icu_6912RegexMatcherD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher17getDynamicClassIDEv to i8*), i8* bitcast (i8 (%"class.icu_69::RegexMatcher"*, i32*)* @_ZN6icu_6912RegexMatcher7matchesER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::RegexMatcher"*, i64, i32*)* @_ZN6icu_6912RegexMatcher7matchesElR10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::RegexMatcher"*, i32*)* @_ZN6icu_6912RegexMatcher9lookingAtER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::RegexMatcher"*, i64, i32*)* @_ZN6icu_6912RegexMatcher9lookingAtElR10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::RegexMatcher"*)* @_ZN6icu_6912RegexMatcher4findEv to i8*), i8* bitcast (i8 (%"class.icu_69::RegexMatcher"*, i32*)* @_ZN6icu_6912RegexMatcher4findER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::RegexMatcher"*, i64, i32*)* @_ZN6icu_6912RegexMatcher4findElR10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::UnicodeString"*, %"class.icu_69::RegexMatcher"*, i32*)* @_ZNK6icu_6912RegexMatcher5groupER10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::UnicodeString"*, %"class.icu_69::RegexMatcher"*, i32, i32*)* @_ZNK6icu_6912RegexMatcher5groupEiR10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher10groupCountEv to i8*), i8* bitcast (%struct.UText* (%"class.icu_69::RegexMatcher"*, %struct.UText*, i64*, i32*)* @_ZNK6icu_6912RegexMatcher5groupEP5UTextRlR10UErrorCode to i8*), i8* bitcast (%struct.UText* (%"class.icu_69::RegexMatcher"*, i32, %struct.UText*, i64*, i32*)* @_ZNK6icu_6912RegexMatcher5groupEiP5UTextRlR10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::RegexMatcher"*, i32*)* @_ZNK6icu_6912RegexMatcher5startER10UErrorCode to i8*), i8* bitcast (i64 (%"class.icu_69::RegexMatcher"*, i32*)* @_ZNK6icu_6912RegexMatcher7start64ER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::RegexMatcher"*, i32, i32*)* @_ZNK6icu_6912RegexMatcher5startEiR10UErrorCode to i8*), i8* bitcast (i64 (%"class.icu_69::RegexMatcher"*, i32, i32*)* @_ZNK6icu_6912RegexMatcher7start64EiR10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::RegexMatcher"*, i32*)* @_ZNK6icu_6912RegexMatcher3endER10UErrorCode to i8*), i8* bitcast (i64 (%"class.icu_69::RegexMatcher"*, i32*)* @_ZNK6icu_6912RegexMatcher5end64ER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::RegexMatcher"*, i32, i32*)* @_ZNK6icu_6912RegexMatcher3endEiR10UErrorCode to i8*), i8* bitcast (i64 (%"class.icu_69::RegexMatcher"*, i32, i32*)* @_ZNK6icu_6912RegexMatcher5end64EiR10UErrorCode to i8*), i8* bitcast (%"class.icu_69::RegexMatcher"* (%"class.icu_69::RegexMatcher"*)* @_ZN6icu_6912RegexMatcher5resetEv to i8*), i8* bitcast (%"class.icu_69::RegexMatcher"* (%"class.icu_69::RegexMatcher"*, i64, i32*)* @_ZN6icu_6912RegexMatcher5resetElR10UErrorCode to i8*), i8* bitcast (%"class.icu_69::RegexMatcher"* (%"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"*)* @_ZN6icu_6912RegexMatcher5resetERKNS_13UnicodeStringE to i8*), i8* bitcast (%"class.icu_69::RegexMatcher"* (%"class.icu_69::RegexMatcher"*, %struct.UText*)* @_ZN6icu_6912RegexMatcher5resetEP5UText to i8*), i8* bitcast (%"class.icu_69::RegexMatcher"* (%"class.icu_69::RegexMatcher"*, %struct.UText*, i32*)* @_ZN6icu_6912RegexMatcher16refreshInputTextEP5UTextR10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher5inputEv to i8*), i8* bitcast (%struct.UText* (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher9inputTextEv to i8*), i8* bitcast (%struct.UText* (%"class.icu_69::RegexMatcher"*, %struct.UText*, i32*)* @_ZNK6icu_6912RegexMatcher8getInputEP5UTextR10UErrorCode to i8*), i8* bitcast (%"class.icu_69::RegexMatcher"* (%"class.icu_69::RegexMatcher"*, i64, i64, i32*)* @_ZN6icu_6912RegexMatcher6regionEllR10UErrorCode to i8*), i8* bitcast (%"class.icu_69::RegexMatcher"* (%"class.icu_69::RegexMatcher"*, i64, i64, i64, i32*)* @_ZN6icu_6912RegexMatcher6regionElllR10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher11regionStartEv to i8*), i8* bitcast (i64 (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher13regionStart64Ev to i8*), i8* bitcast (i32 (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher9regionEndEv to i8*), i8* bitcast (i64 (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher11regionEnd64Ev to i8*), i8* bitcast (i8 (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher20hasTransparentBoundsEv to i8*), i8* bitcast (%"class.icu_69::RegexMatcher"* (%"class.icu_69::RegexMatcher"*, i8)* @_ZN6icu_6912RegexMatcher20useTransparentBoundsEa to i8*), i8* bitcast (i8 (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher18hasAnchoringBoundsEv to i8*), i8* bitcast (%"class.icu_69::RegexMatcher"* (%"class.icu_69::RegexMatcher"*, i8)* @_ZN6icu_6912RegexMatcher18useAnchoringBoundsEa to i8*), i8* bitcast (i8 (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher6hitEndEv to i8*), i8* bitcast (i8 (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher10requireEndEv to i8*), i8* bitcast (%"class.icu_69::RegexPattern"* (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher7patternEv to i8*), i8* bitcast (void (%"class.icu_69::UnicodeString"*, %"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZN6icu_6912RegexMatcher10replaceAllERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (%struct.UText* (%"class.icu_69::RegexMatcher"*, %struct.UText*, %struct.UText*, i32*)* @_ZN6icu_6912RegexMatcher10replaceAllEP5UTextS2_R10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::UnicodeString"*, %"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZN6icu_6912RegexMatcher12replaceFirstERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (%struct.UText* (%"class.icu_69::RegexMatcher"*, %struct.UText*, %struct.UText*, i32*)* @_ZN6icu_6912RegexMatcher12replaceFirstEP5UTextS2_R10UErrorCode to i8*), i8* bitcast (%"class.icu_69::RegexMatcher"* (%"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZN6icu_6912RegexMatcher17appendReplacementERNS_13UnicodeStringERKS1_R10UErrorCode to i8*), i8* bitcast (%"class.icu_69::RegexMatcher"* (%"class.icu_69::RegexMatcher"*, %struct.UText*, %struct.UText*, i32*)* @_ZN6icu_6912RegexMatcher17appendReplacementEP5UTextS2_R10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"*)* @_ZN6icu_6912RegexMatcher10appendTailERNS_13UnicodeStringE to i8*), i8* bitcast (%struct.UText* (%"class.icu_69::RegexMatcher"*, %struct.UText*, i32*)* @_ZN6icu_6912RegexMatcher10appendTailEP5UTextR10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32, i32*)* @_ZN6icu_6912RegexMatcher5splitERKNS_13UnicodeStringEPS1_iR10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::RegexMatcher"*, %struct.UText*, %struct.UText**, i32, i32*)* @_ZN6icu_6912RegexMatcher5splitEP5UTextPS2_iR10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::RegexMatcher"*, i32, i32*)* @_ZN6icu_6912RegexMatcher12setTimeLimitEiR10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher12getTimeLimitEv to i8*), i8* bitcast (void (%"class.icu_69::RegexMatcher"*, i32, i32*)* @_ZN6icu_6912RegexMatcher13setStackLimitEiR10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::RegexMatcher"*)* @_ZNK6icu_6912RegexMatcher13getStackLimitEv to i8*), i8* bitcast (void (%"class.icu_69::RegexMatcher"*, i8 (i8*, i32)*, i8*, i32*)* @_ZN6icu_6912RegexMatcher16setMatchCallbackEPFaPKviES2_R10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::RegexMatcher"*, i8 (i8*, i32)**, i8**, i32*)* @_ZN6icu_6912RegexMatcher16getMatchCallbackERPFaPKviERS2_R10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::RegexMatcher"*, i8 (i8*, i64)*, i8*, i32*)* @_ZN6icu_6912RegexMatcher23setFindProgressCallbackEPFaPKvlES2_R10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::RegexMatcher"*, i8 (i8*, i64)**, i8**, i32*)* @_ZN6icu_6912RegexMatcher23getFindProgressCallbackERPFaPKvlERS2_R10UErrorCode to i8*)] }, align 8
@_ZN6icu_6915RegexStaticSets11gStaticSetsE = external local_unnamed_addr global %"class.icu_69::RegexStaticSets"*, align 8
@_ZZN6icu_6912RegexMatcher5splitEP5UTextPS2_iR10UErrorCodeE11emptyString = internal constant [1 x i16] zeroinitializer, align 2
@_ZZN6icu_6912RegexMatcher16getStaticClassIDEvE7classID = internal global i8 0, align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6912RegexMatcherE = hidden constant [24 x i8] c"N6icu_6912RegexMatcherE\00", align 1
@_ZTIN6icu_697UObjectE = external constant i8*
@_ZTIN6icu_6912RegexMatcherE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN6icu_6912RegexMatcherE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_697UObjectE to i8*) }, align 8
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_
@_ZN6icu_6912RegexMatcherC1EPKNS_12RegexPatternE = hidden unnamed_addr alias void (%"class.icu_69::RegexMatcher"*, %"class.icu_69::RegexPattern"*), void (%"class.icu_69::RegexMatcher"*, %"class.icu_69::RegexPattern"*)* @_ZN6icu_6912RegexMatcherC2EPKNS_12RegexPatternE
@_ZN6icu_6912RegexMatcherC1ERKNS_13UnicodeStringES3_jR10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32, i32*), void (%"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32, i32*)* @_ZN6icu_6912RegexMatcherC2ERKNS_13UnicodeStringES3_jR10UErrorCode
@_ZN6icu_6912RegexMatcherC1EP5UTextS2_jR10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::RegexMatcher"*, %struct.UText*, %struct.UText*, i32, i32*), void (%"class.icu_69::RegexMatcher"*, %struct.UText*, %struct.UText*, i32, i32*)* @_ZN6icu_6912RegexMatcherC2EP5UTextS2_jR10UErrorCode
@_ZN6icu_6912RegexMatcherC1ERKNS_13UnicodeStringEjR10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"*, i32, i32*), void (%"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"*, i32, i32*)* @_ZN6icu_6912RegexMatcherC2ERKNS_13UnicodeStringEjR10UErrorCode
@_ZN6icu_6912RegexMatcherC1EP5UTextjR10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::RegexMatcher"*, %struct.UText*, i32, i32*), void (%"class.icu_69::RegexMatcher"*, %struct.UText*, i32, i32*)* @_ZN6icu_6912RegexMatcherC2EP5UTextjR10UErrorCode
@_ZN6icu_6912RegexMatcherD1Ev = hidden unnamed_addr alias void (%"class.icu_69::RegexMatcher"*), void (%"class.icu_69::RegexMatcher"*)* @_ZN6icu_6912RegexMatcherD2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #11
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #12
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #12
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #12
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #12
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #12
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #12
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #11
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #11
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #12
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcherC2EPKNS_12RegexPatternE(%"class.icu_69::RegexMatcher"*, %"class.icu_69::RegexPattern"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [64 x i8*] }, { [64 x i8*] }* @_ZTVN6icu_6912RegexMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %5 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 7
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 17
  %9 = bitcast %"class.icu_69::RegexPattern"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #12
  %10 = bitcast i64* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 65, i1 false) #12
  store i8 1, i8* %8, align 1
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %11, align 2
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %13 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %14 = bitcast i64* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #12
  %15 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 25
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 29
  %20 = getelementptr inbounds %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %18, i64 1
  %21 = bitcast %"class.icu_69::UVector64"** %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 8000000>, <4 x i32>* %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 33
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 38
  store i8 0, i8* %24, align 1
  %25 = bitcast i8 (i8*, i32)** %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #12
  store i32 0, i32* %4, align 4
  %26 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 28, i64 0
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 27
  store i64* %26, i64** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 40
  store %"class.icu_69::UVector64"* null, %"class.icu_69::UVector64"** %18, align 8
  %29 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 3
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 37
  store i8 0, i8* %30, align 8
  %31 = bitcast %"class.icu_69::UnicodeString"** %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false) #12
  %32 = bitcast %"class.icu_69::BreakIterator"** %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #12
  %33 = icmp eq %"class.icu_69::RegexPattern"* %1, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %2
  store i32 1, i32* %4, align 4
  br label %39

35:                                               ; preds = %2
  store %"class.icu_69::RegexPattern"* %1, %"class.icu_69::RegexPattern"** %5, align 8
  %36 = load %"class.icu_69::RegexStaticSets"*, %"class.icu_69::RegexStaticSets"** @_ZN6icu_6915RegexStaticSets11gStaticSetsE, align 8
  %37 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %36, i64 0, i32 6
  %38 = load %struct.UText*, %struct.UText** %37, align 8
  tail call void @_ZN6icu_6912RegexMatcher5init2EP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* %38, i32* dereferenceable(4) %4)
  br label %39

39:                                               ; preds = %35, %34
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcher4initER10UErrorCode(%"class.icu_69::RegexMatcher"*, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 7
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 17
  %7 = bitcast %"class.icu_69::RegexPattern"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  %8 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 65, i1 false)
  store i8 1, i8* %6, align 1
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %9, align 2
  %10 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %12 = bitcast i64* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  %13 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 25
  %17 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 29
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 32
  %21 = bitcast %"class.icu_69::UVector64"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  store i32 8000000, i32* %20, align 4
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 33
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 38
  store i8 0, i8* %23, align 1
  %24 = bitcast i8 (i8*, i32)** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false)
  %25 = load i32, i32* %1, align 4
  %26 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 28, i64 0
  %28 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 27
  store i64* %27, i64** %28, align 8
  %29 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 40
  store %"class.icu_69::UVector64"* null, %"class.icu_69::UVector64"** %16, align 8
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 37
  store i8 0, i8* %31, align 8
  %32 = bitcast %"class.icu_69::UnicodeString"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 32, i1 false)
  %33 = bitcast %"class.icu_69::BreakIterator"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcher5init2EP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"*, %struct.UText*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  store i32 %4, i32* %7, align 4
  br label %73

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %10 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %9, align 8
  %11 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 8
  br i1 %13, label %14, label %23

14:                                               ; preds = %8
  %15 = sext i32 %12 to i64
  %16 = shl nsw i64 %15, 3
  %17 = tail call noalias i8* @uprv_malloc_69(i64 %16) #11
  %18 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 27
  %19 = bitcast i64** %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = icmp eq i8* %17, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  store i32 7, i32* %22, align 4
  store i32 7, i32* %2, align 4
  br label %73

23:                                               ; preds = %14, %8
  %24 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 32) #12
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 25
  store %"class.icu_69::UVector64"* null, %"class.icu_69::UVector64"** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  store i32 7, i32* %28, align 4
  store i32 7, i32* %2, align 4
  br label %73

29:                                               ; preds = %23
  %30 = bitcast i8* %24 to %"class.icu_69::UVector64"*
  tail call void @_ZN6icu_699UVector64C1ER10UErrorCode(%"class.icu_69::UVector64"* nonnull %30, i32* dereferenceable(4) %2) #12
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 25
  %32 = bitcast %"class.icu_69::UVector64"** %31 to i8**
  store i8* %24, i8** %32, align 8
  %33 = tail call dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher5resetEP5UText(%"class.icu_69::RegexMatcher"* %0, %struct.UText* %1)
  %34 = load i32, i32* %2, align 4
  %35 = icmp slt i32 %34, 1
  br i1 %35, label %36, label %70

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 1
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  store i32 %38, i32* %2, align 4
  br label %70

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %44, i64* %47, align 8
  %48 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %44, i64* %49, align 8
  %50 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %44, i64* %51, align 8
  %52 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %53 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %54 = bitcast i64* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #12
  %55 = bitcast i64* %53 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %55, align 8
  %56 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %56, align 2
  %57 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %57, align 8
  %58 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %58, align 1
  %59 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %60, align 8
  %61 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %9, align 8
  %62 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %61, i64 0, i32 10
  %63 = load i32, i32* %62, align 8
  %64 = icmp sgt i32 %63, 2000000
  %65 = select i1 %64, i32 %63, i32 2000000
  %66 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %31, align 8
  tail call void @_ZN6icu_699UVector6414setMaxCapacityEi(%"class.icu_69::UVector64"* %66, i32 %65) #12
  %67 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 32
  store i32 8000000, i32* %67, align 4
  %68 = load i32, i32* %2, align 4
  %69 = icmp slt i32 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %40, %29, %41
  %71 = phi i32 [ %68, %41 ], [ %38, %40 ], [ %34, %29 ]
  %72 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  store i32 %71, i32* %72, align 4
  br label %73

73:                                               ; preds = %41, %6, %21, %26, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcherC2ERKNS_13UnicodeStringES3_jR10UErrorCode(%"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeString"* dereferenceable(64), i32, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %6 = alloca %struct.UParseError, align 4
  %7 = alloca %struct.UText, align 8
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [64 x i8*] }, { [64 x i8*] }* @_ZTVN6icu_6912RegexMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 7
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 17
  %13 = bitcast %"class.icu_69::RegexPattern"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #12
  %14 = bitcast i64* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 65, i1 false) #12
  store i8 1, i8* %12, align 1
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %15, align 2
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %17 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %18 = bitcast i64* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #12
  %19 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %19, align 8
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 25
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 29
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 32
  %27 = bitcast %"class.icu_69::UVector64"** %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #12
  store i32 8000000, i32* %26, align 4
  %28 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 33
  %29 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 38
  store i8 0, i8* %29, align 1
  %30 = bitcast i8 (i8*, i32)** %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #12
  %31 = load i32, i32* %4, align 4
  %32 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 28, i64 0
  %34 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 27
  store i64* %33, i64** %34, align 8
  %35 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 40
  store %"class.icu_69::UVector64"* null, %"class.icu_69::UVector64"** %22, align 8
  %36 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 3
  %37 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 37
  store i8 0, i8* %37, align 8
  %38 = bitcast %"class.icu_69::UnicodeString"** %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #12
  %39 = bitcast %"class.icu_69::BreakIterator"** %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #12
  %40 = load i32, i32* %4, align 4
  %41 = icmp slt i32 %40, 1
  br i1 %41, label %42, label %51

42:                                               ; preds = %5
  %43 = bitcast %struct.UParseError* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %43, i8 -86, i64 72, i1 false)
  %44 = call %"class.icu_69::RegexPattern"* @_ZN6icu_6912RegexPattern7compileERKNS_13UnicodeStringEjR11UParseErrorR10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64) %1, i32 %3, %struct.UParseError* nonnull dereferenceable(72) %6, i32* dereferenceable(4) %4) #12
  %45 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 2
  store %"class.icu_69::RegexPattern"* %44, %"class.icu_69::RegexPattern"** %45, align 8
  store %"class.icu_69::RegexPattern"* %44, %"class.icu_69::RegexPattern"** %9, align 8
  %46 = bitcast %struct.UText* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %46) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 144, i1 false)
  %47 = getelementptr inbounds %struct.UText, %struct.UText* %7, i64 0, i32 0
  store i32 878368812, i32* %47, align 8
  %48 = getelementptr inbounds %struct.UText, %struct.UText* %7, i64 0, i32 3
  store i32 144, i32* %48, align 4
  %49 = call %struct.UText* @utext_openConstUnicodeString_69(%struct.UText* nonnull %7, %"class.icu_69::UnicodeString"* %2, i32* %4) #12
  call void @_ZN6icu_6912RegexMatcher5init2EP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* nonnull %7, i32* dereferenceable(4) %4)
  %50 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %7) #12
  store i8 1, i8* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #12
  br label %51

51:                                               ; preds = %5, %42
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.icu_69::RegexPattern"* @_ZN6icu_6912RegexPattern7compileERKNS_13UnicodeStringEjR11UParseErrorR10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), i32, %struct.UParseError* dereferenceable(72), i32* dereferenceable(4)) local_unnamed_addr #4

declare %struct.UText* @utext_openConstUnicodeString_69(%struct.UText*, %"class.icu_69::UnicodeString"*, i32*) local_unnamed_addr #4

declare %struct.UText* @utext_close_69(%struct.UText*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcherC2EP5UTextS2_jR10UErrorCode(%"class.icu_69::RegexMatcher"*, %struct.UText*, %struct.UText*, i32, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %6 = alloca %struct.UParseError, align 4
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [64 x i8*] }, { [64 x i8*] }* @_ZTVN6icu_6912RegexMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 7
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 17
  %12 = bitcast %"class.icu_69::RegexPattern"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #12
  %13 = bitcast i64* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 65, i1 false) #12
  store i8 1, i8* %11, align 1
  %14 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %14, align 2
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %17 = bitcast i64* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #12
  %18 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 25
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 29
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 32
  %26 = bitcast %"class.icu_69::UVector64"** %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  store i32 8000000, i32* %25, align 4
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 33
  %28 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 38
  store i8 0, i8* %28, align 1
  %29 = bitcast i8 (i8*, i32)** %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #12
  %30 = load i32, i32* %4, align 4
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 28, i64 0
  %33 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 27
  store i64* %32, i64** %33, align 8
  %34 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 40
  store %"class.icu_69::UVector64"* null, %"class.icu_69::UVector64"** %21, align 8
  %35 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 3
  %36 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 37
  store i8 0, i8* %36, align 8
  %37 = bitcast %"class.icu_69::UnicodeString"** %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #12
  %38 = bitcast %"class.icu_69::BreakIterator"** %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #12
  %39 = load i32, i32* %4, align 4
  %40 = icmp slt i32 %39, 1
  br i1 %40, label %41, label %51

41:                                               ; preds = %5
  %42 = bitcast %struct.UParseError* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %42) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %42, i8 -86, i64 72, i1 false)
  %43 = call %"class.icu_69::RegexPattern"* @_ZN6icu_6912RegexPattern7compileEP5UTextjR11UParseErrorR10UErrorCode(%struct.UText* %1, i32 %3, %struct.UParseError* nonnull dereferenceable(72) %6, i32* dereferenceable(4) %4) #12
  %44 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 2
  store %"class.icu_69::RegexPattern"* %43, %"class.icu_69::RegexPattern"** %44, align 8
  %45 = load i32, i32* %4, align 4
  %46 = icmp slt i32 %45, 1
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  %48 = ptrtoint %"class.icu_69::RegexPattern"* %43 to i64
  %49 = bitcast %"class.icu_69::RegexPattern"** %8 to i64*
  store i64 %48, i64* %49, align 8
  call void @_ZN6icu_6912RegexMatcher5init2EP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* %2, i32* dereferenceable(4) %4)
  br label %50

50:                                               ; preds = %41, %47
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %42) #12
  br label %51

51:                                               ; preds = %5, %50
  ret void
}

declare %"class.icu_69::RegexPattern"* @_ZN6icu_6912RegexPattern7compileEP5UTextjR11UParseErrorR10UErrorCode(%struct.UText*, i32, %struct.UParseError* dereferenceable(72), i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcherC2ERKNS_13UnicodeStringEjR10UErrorCode(%"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = alloca %struct.UParseError, align 4
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [64 x i8*] }, { [64 x i8*] }* @_ZTVN6icu_6912RegexMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 7
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  %10 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 17
  %11 = bitcast %"class.icu_69::RegexPattern"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #12
  %12 = bitcast i64* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 65, i1 false) #12
  store i8 1, i8* %10, align 1
  %13 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %13, align 2
  %14 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %16 = bitcast i64* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #12
  %17 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 25
  %21 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 29
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 32
  %25 = bitcast %"class.icu_69::UVector64"** %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #12
  store i32 8000000, i32* %24, align 4
  %26 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 33
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 38
  store i8 0, i8* %27, align 1
  %28 = bitcast i8 (i8*, i32)** %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 32, i1 false) #12
  %29 = load i32, i32* %3, align 4
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 28, i64 0
  %32 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 27
  store i64* %31, i64** %32, align 8
  %33 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 40
  store %"class.icu_69::UVector64"* null, %"class.icu_69::UVector64"** %20, align 8
  %34 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 3
  %35 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 37
  store i8 0, i8* %35, align 8
  %36 = bitcast %"class.icu_69::UnicodeString"** %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #12
  %37 = bitcast %"class.icu_69::BreakIterator"** %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #12
  %38 = load i32, i32* %3, align 4
  %39 = icmp slt i32 %38, 1
  br i1 %39, label %40, label %53

40:                                               ; preds = %4
  %41 = bitcast %struct.UParseError* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %41) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %41, i8 -86, i64 72, i1 false)
  %42 = call %"class.icu_69::RegexPattern"* @_ZN6icu_6912RegexPattern7compileERKNS_13UnicodeStringEjR11UParseErrorR10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64) %1, i32 %2, %struct.UParseError* nonnull dereferenceable(72) %5, i32* dereferenceable(4) %3) #12
  %43 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 2
  store %"class.icu_69::RegexPattern"* %42, %"class.icu_69::RegexPattern"** %43, align 8
  %44 = load i32, i32* %3, align 4
  %45 = icmp slt i32 %44, 1
  br i1 %45, label %46, label %52

46:                                               ; preds = %40
  %47 = ptrtoint %"class.icu_69::RegexPattern"* %42 to i64
  %48 = bitcast %"class.icu_69::RegexPattern"** %7 to i64*
  store i64 %47, i64* %48, align 8
  %49 = load %"class.icu_69::RegexStaticSets"*, %"class.icu_69::RegexStaticSets"** @_ZN6icu_6915RegexStaticSets11gStaticSetsE, align 8
  %50 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %49, i64 0, i32 6
  %51 = load %struct.UText*, %struct.UText** %50, align 8
  call void @_ZN6icu_6912RegexMatcher5init2EP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* %51, i32* dereferenceable(4) %3)
  br label %52

52:                                               ; preds = %40, %46
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %41) #12
  br label %53

53:                                               ; preds = %4, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcherC2EP5UTextjR10UErrorCode(%"class.icu_69::RegexMatcher"*, %struct.UText*, i32, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = alloca %struct.UParseError, align 4
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [64 x i8*] }, { [64 x i8*] }* @_ZTVN6icu_6912RegexMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 7
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  %10 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 17
  %11 = bitcast %"class.icu_69::RegexPattern"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #12
  %12 = bitcast i64* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 65, i1 false) #12
  store i8 1, i8* %10, align 1
  %13 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %13, align 2
  %14 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %16 = bitcast i64* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #12
  %17 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 25
  %21 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 29
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 32
  %25 = bitcast %"class.icu_69::UVector64"** %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #12
  store i32 8000000, i32* %24, align 4
  %26 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 33
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 38
  store i8 0, i8* %27, align 1
  %28 = bitcast i8 (i8*, i32)** %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 32, i1 false) #12
  %29 = load i32, i32* %3, align 4
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 28, i64 0
  %32 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 27
  store i64* %31, i64** %32, align 8
  %33 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 40
  store %"class.icu_69::UVector64"* null, %"class.icu_69::UVector64"** %20, align 8
  %34 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 3
  %35 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 37
  store i8 0, i8* %35, align 8
  %36 = bitcast %"class.icu_69::UnicodeString"** %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #12
  %37 = bitcast %"class.icu_69::BreakIterator"** %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #12
  %38 = load i32, i32* %3, align 4
  %39 = icmp slt i32 %38, 1
  br i1 %39, label %40, label %53

40:                                               ; preds = %4
  %41 = bitcast %struct.UParseError* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %41) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %41, i8 -86, i64 72, i1 false)
  %42 = call %"class.icu_69::RegexPattern"* @_ZN6icu_6912RegexPattern7compileEP5UTextjR11UParseErrorR10UErrorCode(%struct.UText* %1, i32 %2, %struct.UParseError* nonnull dereferenceable(72) %5, i32* dereferenceable(4) %3) #12
  %43 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 2
  store %"class.icu_69::RegexPattern"* %42, %"class.icu_69::RegexPattern"** %43, align 8
  %44 = load i32, i32* %3, align 4
  %45 = icmp slt i32 %44, 1
  br i1 %45, label %46, label %52

46:                                               ; preds = %40
  %47 = ptrtoint %"class.icu_69::RegexPattern"* %42 to i64
  %48 = bitcast %"class.icu_69::RegexPattern"** %7 to i64*
  store i64 %47, i64* %48, align 8
  %49 = load %"class.icu_69::RegexStaticSets"*, %"class.icu_69::RegexStaticSets"** @_ZN6icu_6915RegexStaticSets11gStaticSetsE, align 8
  %50 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %49, i64 0, i32 6
  %51 = load %struct.UText*, %struct.UText** %50, align 8
  call void @_ZN6icu_6912RegexMatcher5init2EP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* %51, i32* dereferenceable(4) %3)
  br label %52

52:                                               ; preds = %40, %46
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %41) #12
  br label %53

53:                                               ; preds = %4, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcherD2Ev(%"class.icu_69::RegexMatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [64 x i8*] }, { [64 x i8*] }* @_ZTVN6icu_6912RegexMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 25
  %4 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %3, align 8
  %5 = icmp eq %"class.icu_69::UVector64"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.icu_69::UVector64"* %4 to void (%"class.icu_69::UVector64"*)***
  %8 = load void (%"class.icu_69::UVector64"*)**, void (%"class.icu_69::UVector64"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.icu_69::UVector64"*)*, void (%"class.icu_69::UVector64"*)** %8, i64 1
  %10 = load void (%"class.icu_69::UVector64"*)*, void (%"class.icu_69::UVector64"*)** %9, align 8
  tail call void %10(%"class.icu_69::UVector64"* nonnull %4) #12
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 27
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 28, i64 0
  %15 = icmp eq i64* %13, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = bitcast i64* %13 to i8*
  tail call void @uprv_free_69(i8* %17) #12
  store i64* null, i64** %12, align 8
  br label %18

18:                                               ; preds = %11, %16
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 2
  %20 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %19, align 8
  %21 = icmp eq %"class.icu_69::RegexPattern"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.icu_69::RegexPattern"* %20 to void (%"class.icu_69::RegexPattern"*)***
  %24 = load void (%"class.icu_69::RegexPattern"*)**, void (%"class.icu_69::RegexPattern"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.icu_69::RegexPattern"*)*, void (%"class.icu_69::RegexPattern"*)** %24, i64 1
  %26 = load void (%"class.icu_69::RegexPattern"*)*, void (%"class.icu_69::RegexPattern"*)** %25, align 8
  tail call void %26(%"class.icu_69::RegexPattern"* nonnull %20) #12
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %28 = bitcast %"class.icu_69::RegexPattern"** %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false)
  br label %29

29:                                               ; preds = %18, %22
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 3
  %31 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %30, align 8
  %32 = icmp eq %"class.icu_69::UnicodeString"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.icu_69::UnicodeString"* %31 to void (%"class.icu_69::UnicodeString"*)***
  %35 = load void (%"class.icu_69::UnicodeString"*)**, void (%"class.icu_69::UnicodeString"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %35, i64 1
  %37 = load void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %36, align 8
  tail call void %37(%"class.icu_69::UnicodeString"* nonnull %31) #12
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %40 = load %struct.UText*, %struct.UText** %39, align 8
  %41 = icmp eq %struct.UText* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = tail call %struct.UText* @utext_close_69(%struct.UText* nonnull %40) #12
  br label %44

44:                                               ; preds = %38, %42
  %45 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 5
  %46 = load %struct.UText*, %struct.UText** %45, align 8
  %47 = icmp eq %struct.UText* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = tail call %struct.UText* @utext_close_69(%struct.UText* nonnull %46) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 40
  %52 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %51, align 8
  %53 = icmp eq %"class.icu_69::BreakIterator"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.icu_69::BreakIterator"* %52 to void (%"class.icu_69::BreakIterator"*)***
  %56 = load void (%"class.icu_69::BreakIterator"*)**, void (%"class.icu_69::BreakIterator"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %56, i64 1
  %58 = load void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %57, align 8
  tail call void %58(%"class.icu_69::BreakIterator"* nonnull %52) #12
  br label %59

59:                                               ; preds = %54, %50
  %60 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 41
  %61 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %60, align 8
  %62 = icmp eq %"class.icu_69::BreakIterator"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.icu_69::BreakIterator"* %61 to void (%"class.icu_69::BreakIterator"*)***
  %65 = load void (%"class.icu_69::BreakIterator"*)**, void (%"class.icu_69::BreakIterator"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %65, i64 1
  %67 = load void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %66, align 8
  tail call void %67(%"class.icu_69::BreakIterator"* nonnull %61) #12
  br label %68

68:                                               ; preds = %63, %59
  %69 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %69) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcherD0Ev(%"class.icu_69::RegexMatcher"*) unnamed_addr #0 align 2 {
  tail call void @_ZN6icu_6912RegexMatcherD2Ev(%"class.icu_69::RegexMatcher"* %0) #12
  %2 = bitcast %"class.icu_69::RegexMatcher"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #6

declare void @_ZN6icu_699UVector64C1ER10UErrorCode(%"class.icu_69::UVector64"*, i32* dereferenceable(4)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher5resetEP5UText(%"class.icu_69::RegexMatcher"* returned, %struct.UText*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %4 = load %struct.UText*, %struct.UText** %3, align 8
  %5 = icmp eq %struct.UText* %4, %1
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %8 = tail call %struct.UText* @utext_clone_69(%struct.UText* %4, %struct.UText* %1, i8 signext 0, i8 signext 1, i32* %7) #12
  store %struct.UText* %8, %struct.UText** %3, align 8
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %10 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %9, align 8
  %11 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %10, i64 0, i32 19
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 5
  %16 = load %struct.UText*, %struct.UText** %15, align 8
  %17 = tail call %struct.UText* @utext_clone_69(%struct.UText* %16, %struct.UText* %8, i8 signext 0, i8 signext 1, i32* %7) #12
  store %struct.UText* %17, %struct.UText** %15, align 8
  br label %18

18:                                               ; preds = %6, %14
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %21, label %73

21:                                               ; preds = %18
  %22 = load %struct.UText*, %struct.UText** %3, align 8
  %23 = tail call i64 @utext_nativeLength_69(%struct.UText* %22) #12
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 3
  %26 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %25, align 8
  %27 = icmp eq %"class.icu_69::UnicodeString"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %21
  %29 = bitcast %"class.icu_69::UnicodeString"* %26 to void (%"class.icu_69::UnicodeString"*)***
  %30 = load void (%"class.icu_69::UnicodeString"*)**, void (%"class.icu_69::UnicodeString"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %30, i64 1
  %32 = load void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %31, align 8
  tail call void %32(%"class.icu_69::UnicodeString"* nonnull %26) #12
  br label %33

33:                                               ; preds = %28, %21
  store %"class.icu_69::UnicodeString"* null, %"class.icu_69::UnicodeString"** %25, align 8
  %34 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 40
  %35 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %34, align 8
  %36 = icmp eq %"class.icu_69::BreakIterator"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.icu_69::BreakIterator"* %35 to void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)***
  %39 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)**, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %39, i64 8
  %41 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %40, align 8
  tail call void %41(%"class.icu_69::BreakIterator"* nonnull %35, %struct.UText* %1, i32* dereferenceable(4) %7) #12
  br label %42

42:                                               ; preds = %33, %37
  %43 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 41
  %44 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %43, align 8
  %45 = icmp eq %"class.icu_69::BreakIterator"* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %42
  %47 = load %struct.UText*, %struct.UText** %3, align 8
  %48 = bitcast %"class.icu_69::BreakIterator"* %44 to void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)***
  %49 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)**, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %49, i64 8
  %51 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %50, align 8
  tail call void %51(%"class.icu_69::BreakIterator"* nonnull %44, %struct.UText* %47, i32* dereferenceable(4) %7) #12
  br label %52

52:                                               ; preds = %42, %2, %46
  %53 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %57, align 8
  %58 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %55, i64* %58, align 8
  %59 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %55, i64* %60, align 8
  %61 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %55, i64* %62, align 8
  %63 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %64 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %65 = bitcast i64* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #12
  %66 = bitcast i64* %64 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %66, align 8
  %67 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %67, align 2
  %68 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %68, align 8
  %69 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %70, align 4
  %71 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %71, align 8
  %72 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 37
  store i8 0, i8* %72, align 8
  br label %73

73:                                               ; preds = %18, %52
  ret %"class.icu_69::RegexMatcher"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcher13setStackLimitEiR10UErrorCode(%"class.icu_69::RegexMatcher"*, i32, i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %48

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 %8, i32* %2, align 4
  br label %48

11:                                               ; preds = %6
  %12 = icmp slt i32 %1, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  store i32 1, i32* %2, align 4
  br label %48

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %17, i64* %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %17, i64* %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %17, i64* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %26 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %27 = bitcast i64* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #12
  %28 = bitcast i64* %26 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %28, align 8
  %29 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %29, align 2
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %33, align 8
  %34 = icmp eq i32 %1, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %14
  %36 = lshr i32 %1, 2
  %37 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %38 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %37, align 8
  %39 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %38, i64 0, i32 10
  %40 = load i32, i32* %39, align 8
  %41 = icmp slt i32 %36, %40
  %42 = select i1 %41, i32 %40, i32 %36
  br label %43

43:                                               ; preds = %14, %35
  %44 = phi i32 [ %42, %35 ], [ 0, %14 ]
  %45 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 25
  %46 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %45, align 8
  tail call void @_ZN6icu_699UVector6414setMaxCapacityEi(%"class.icu_69::UVector64"* %46, i32 %44) #12
  %47 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 32
  store i32 %1, i32* %47, align 4
  br label %48

48:                                               ; preds = %3, %43, %13, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher17appendReplacementERNS_13UnicodeStringERKS1_R10UErrorCode(%"class.icu_69::RegexMatcher"* returned, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = alloca %struct.UText, align 8
  %6 = alloca %struct.UText, align 8
  %7 = bitcast %struct.UText* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 144, i1 false)
  %8 = getelementptr inbounds %struct.UText, %struct.UText* %5, i64 0, i32 0
  store i32 878368812, i32* %8, align 8
  %9 = getelementptr inbounds %struct.UText, %struct.UText* %5, i64 0, i32 3
  store i32 144, i32* %9, align 4
  %10 = call %struct.UText* @utext_openConstUnicodeString_69(%struct.UText* nonnull %5, %"class.icu_69::UnicodeString"* %2, i32* %3) #12
  %11 = load i32, i32* %3, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %4
  %14 = bitcast %struct.UText* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 144, i1 false)
  %15 = getelementptr inbounds %struct.UText, %struct.UText* %6, i64 0, i32 0
  store i32 878368812, i32* %15, align 8
  %16 = getelementptr inbounds %struct.UText, %struct.UText* %6, i64 0, i32 3
  store i32 144, i32* %16, align 4
  %17 = call %struct.UText* @utext_openUnicodeString_69(%struct.UText* nonnull %6, %"class.icu_69::UnicodeString"* %1, i32* %3) #12
  %18 = load i32, i32* %3, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = call dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher17appendReplacementEP5UTextS2_R10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* nonnull %6, %struct.UText* nonnull %5, i32* dereferenceable(4) %3)
  %22 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %6) #12
  br label %23

23:                                               ; preds = %13, %20
  %24 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %14) #12
  br label %25

25:                                               ; preds = %4, %23
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %7) #12
  ret %"class.icu_69::RegexMatcher"* %0
}

declare %struct.UText* @utext_openUnicodeString_69(%struct.UText*, %"class.icu_69::UnicodeString"*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher17appendReplacementEP5UTextS2_R10UErrorCode(%"class.icu_69::RegexMatcher"* returned, %struct.UText*, %struct.UText*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"struct.icu_69::URegexUTextUnescapeCharContext", align 8
  %8 = alloca i16, align 2
  %9 = alloca [2 x i16], align 2
  %10 = alloca i16, align 2
  %11 = alloca [2 x i16], align 2
  %12 = alloca i16, align 2
  %13 = alloca [2 x i16], align 2
  %14 = alloca %"class.icu_69::UnicodeString", align 8
  %15 = load i32, i32* %3, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %412

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  store i32 %19, i32* %3, align 4
  br label %412

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %24 = load i8, i8* %23, align 2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  store i32 66306, i32* %3, align 4
  br label %412

27:                                               ; preds = %22
  %28 = tail call i64 @utext_nativeLength_69(%struct.UText* %1) #12
  %29 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 22
  %32 = load i64, i64* %31, align 8
  %33 = icmp sgt i64 %30, %32
  br i1 %33, label %34, label %89

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %36 = load %struct.UText*, %struct.UText** %35, align 8
  %37 = getelementptr inbounds %struct.UText, %struct.UText* %36, i64 0, i32 7
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %60

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %struct.UText, %struct.UText* %36, i64 0, i32 4
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %42, %44
  br i1 %45, label %46, label %60

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.UText, %struct.UText* %36, i64 0, i32 6
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = icmp eq i64 %42, %49
  br i1 %50, label %51, label %60

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.UText, %struct.UText* %36, i64 0, i32 10
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds i16, i16* %53, i64 %32
  %55 = sub nsw i64 %30, %32
  %56 = trunc i64 %55 to i32
  %57 = tail call i32 @utext_replace_69(%struct.UText* %1, i64 %28, i64 %28, i16* %54, i32 %56, i32* %3) #12
  %58 = sext i32 %57 to i64
  %59 = add nsw i64 %28, %58
  br label %89

60:                                               ; preds = %46, %40, %34
  %61 = getelementptr inbounds %struct.UText, %struct.UText* %36, i64 0, i32 11
  %62 = load %struct.UTextFuncs*, %struct.UTextFuncs** %61, align 8
  %63 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %62, i64 0, i32 11
  %64 = load i32 (%struct.UText*, i64)*, i32 (%struct.UText*, i64)** %63, align 8
  %65 = icmp eq i32 (%struct.UText*, i64)* %64, null
  br i1 %65, label %66, label %69

66:                                               ; preds = %60
  %67 = sub nsw i64 %30, %32
  %68 = trunc i64 %67 to i32
  br label %72

69:                                               ; preds = %60
  %70 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #12
  store i32 0, i32* %5, align 4
  %71 = call i32 @utext_extract_69(%struct.UText* %36, i64 %32, i64 %30, i16* null, i32 0, i32* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #12
  br label %72

72:                                               ; preds = %69, %66
  %73 = phi i32 [ %68, %66 ], [ %71, %69 ]
  %74 = add nsw i32 %73, 1
  %75 = sext i32 %74 to i64
  %76 = shl nsw i64 %75, 1
  %77 = call noalias i8* @uprv_malloc_69(i64 %76) #11
  %78 = bitcast i8* %77 to i16*
  %79 = icmp eq i8* %77, null
  br i1 %79, label %88, label %80

80:                                               ; preds = %72
  %81 = load %struct.UText*, %struct.UText** %35, align 8
  %82 = load i64, i64* %31, align 8
  %83 = load i64, i64* %29, align 8
  %84 = call i32 @utext_extract_69(%struct.UText* %81, i64 %82, i64 %83, i16* nonnull %78, i32 %74, i32* %3) #12
  %85 = call i32 @utext_replace_69(%struct.UText* %1, i64 %28, i64 %28, i16* nonnull %78, i32 %73, i32* %3) #12
  %86 = sext i32 %85 to i64
  %87 = add nsw i64 %28, %86
  call void @uprv_free_69(i8* nonnull %77) #12
  br label %89

88:                                               ; preds = %72
  store i32 7, i32* %3, align 4
  br label %412

89:                                               ; preds = %80, %51, %27
  %90 = phi i64 [ %59, %51 ], [ %28, %27 ], [ %87, %80 ]
  %91 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %31, align 8
  %93 = getelementptr inbounds %struct.UText, %struct.UText* %2, i64 0, i32 7
  %94 = load i64, i64* %93, align 8
  %95 = sub nsw i64 0, %94
  %96 = icmp slt i64 %94, 1
  br i1 %96, label %97, label %111

97:                                               ; preds = %89
  %98 = getelementptr inbounds %struct.UText, %struct.UText* %2, i64 0, i32 6
  %99 = load i32, i32* %98, align 4
  %100 = sext i32 %99 to i64
  %101 = icmp slt i64 %95, %100
  br i1 %101, label %102, label %111

102:                                              ; preds = %97
  %103 = getelementptr inbounds %struct.UText, %struct.UText* %2, i64 0, i32 10
  %104 = load i16*, i16** %103, align 8
  %105 = getelementptr inbounds i16, i16* %104, i64 %95
  %106 = load i16, i16* %105, align 2
  %107 = icmp ult i16 %106, -9216
  br i1 %107, label %108, label %111

108:                                              ; preds = %102
  %109 = trunc i64 %95 to i32
  %110 = getelementptr inbounds %struct.UText, %struct.UText* %2, i64 0, i32 8
  store i32 %109, i32* %110, align 8
  br label %114

111:                                              ; preds = %102, %97, %89
  call void @utext_setNativeIndex_69(%struct.UText* %2, i64 0) #12
  %112 = getelementptr inbounds %struct.UText, %struct.UText* %2, i64 0, i32 8
  %113 = load i32, i32* %112, align 8
  br label %114

114:                                              ; preds = %111, %108
  %115 = phi i32 [ %113, %111 ], [ %109, %108 ]
  %116 = getelementptr inbounds %struct.UText, %struct.UText* %2, i64 0, i32 8
  %117 = getelementptr inbounds %struct.UText, %struct.UText* %2, i64 0, i32 9
  %118 = load i32, i32* %117, align 4
  %119 = icmp slt i32 %115, %118
  br i1 %119, label %120, label %131

120:                                              ; preds = %114
  %121 = getelementptr inbounds %struct.UText, %struct.UText* %2, i64 0, i32 10
  %122 = load i16*, i16** %121, align 8
  %123 = sext i32 %115 to i64
  %124 = getelementptr inbounds i16, i16* %122, i64 %123
  %125 = load i16, i16* %124, align 2
  %126 = icmp ult i16 %125, -10240
  br i1 %126, label %127, label %131

127:                                              ; preds = %120
  %128 = add nsw i32 %115, 1
  store i32 %128, i32* %116, align 8
  %129 = load i16, i16* %124, align 2
  %130 = zext i16 %129 to i32
  br label %133

131:                                              ; preds = %120, %114
  %132 = call i32 @utext_next32_69(%struct.UText* %2) #12
  br label %133

133:                                              ; preds = %131, %127
  %134 = phi i32 [ %130, %127 ], [ %132, %131 ]
  %135 = load i32, i32* %3, align 4
  %136 = icmp slt i32 %135, 1
  %137 = icmp ne i32 %134, -1
  %138 = and i1 %137, %136
  br i1 %138, label %139, label %412

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %141 = getelementptr inbounds %struct.UText, %struct.UText* %2, i64 0, i32 10
  %142 = bitcast %"class.icu_69::UnicodeString"* %14 to i8*
  %143 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %14, i64 0, i32 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %14, i64 0, i32 1, i32 0, i32 0
  %145 = bitcast [2 x i16]* %11 to i8*
  %146 = getelementptr inbounds [2 x i16], [2 x i16]* %11, i64 0, i64 0
  %147 = getelementptr inbounds [2 x i16], [2 x i16]* %11, i64 0, i64 1
  %148 = bitcast i16* %10 to i8*
  %149 = bitcast i32* %6 to i8*
  %150 = bitcast %"struct.icu_69::URegexUTextUnescapeCharContext"* %7 to i8*
  %151 = getelementptr inbounds %"struct.icu_69::URegexUTextUnescapeCharContext", %"struct.icu_69::URegexUTextUnescapeCharContext"* %7, i64 0, i32 0
  %152 = getelementptr inbounds %"struct.icu_69::URegexUTextUnescapeCharContext", %"struct.icu_69::URegexUTextUnescapeCharContext"* %7, i64 0, i32 1
  %153 = bitcast [2 x i16]* %9 to i8*
  %154 = getelementptr inbounds [2 x i16], [2 x i16]* %9, i64 0, i64 0
  %155 = getelementptr inbounds [2 x i16], [2 x i16]* %9, i64 0, i64 1
  %156 = bitcast i16* %8 to i8*
  %157 = bitcast [2 x i16]* %13 to i8*
  %158 = getelementptr inbounds [2 x i16], [2 x i16]* %13, i64 0, i64 0
  %159 = getelementptr inbounds [2 x i16], [2 x i16]* %13, i64 0, i64 1
  %160 = bitcast i16* %12 to i8*
  br label %161

161:                                              ; preds = %139, %406
  %162 = phi i32 [ %134, %139 ], [ %407, %406 ]
  %163 = phi i64 [ %90, %139 ], [ %390, %406 ]
  switch i32 %162, label %271 [
    i32 92, label %164
    i32 36, label %288
  ]

164:                                              ; preds = %161
  %165 = load i32, i32* %116, align 8
  %166 = load i32, i32* %117, align 4
  %167 = icmp slt i32 %165, %166
  br i1 %167, label %168, label %176

168:                                              ; preds = %164
  %169 = load i16*, i16** %141, align 8
  %170 = sext i32 %165 to i64
  %171 = getelementptr inbounds i16, i16* %169, i64 %170
  %172 = load i16, i16* %171, align 2
  %173 = icmp ult i16 %172, -10240
  br i1 %173, label %174, label %176

174:                                              ; preds = %168
  %175 = zext i16 %172 to i32
  br label %179

176:                                              ; preds = %164, %168
  %177 = call i32 @utext_current32_69(%struct.UText* %2) #12
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %412, label %179

179:                                              ; preds = %174, %176
  %180 = phi i32 [ %175, %174 ], [ %177, %176 ]
  %181 = or i32 %180, 32
  %182 = icmp eq i32 %181, 117
  br i1 %182, label %183, label %235

183:                                              ; preds = %179
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #12
  store i32 0, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 16, i1 false)
  store %struct.UText* %2, %struct.UText** %151, align 8
  store i32 -1, i32* %152, align 8
  %184 = call i32 @u_unescapeAt_69(i16 (i32, i8*)* nonnull @uregex_utext_unescape_charAt_69, i32* nonnull %6, i32 2147483647, i8* nonnull %150) #12
  %185 = icmp eq i32 %184, -1
  br i1 %185, label %233, label %186

186:                                              ; preds = %183
  %187 = icmp ult i32 %184, 65536
  br i1 %187, label %188, label %193

188:                                              ; preds = %186
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %156) #12
  %189 = trunc i32 %184 to i16
  store i16 %189, i16* %8, align 2
  %190 = call i32 @utext_replace_69(%struct.UText* %1, i64 %163, i64 %163, i16* nonnull %8, i32 1, i32* %3) #12
  %191 = sext i32 %190 to i64
  %192 = add nsw i64 %163, %191
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %156) #12
  br label %208

193:                                              ; preds = %186
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153) #12
  %194 = lshr i32 %184, 10
  %195 = trunc i32 %194 to i16
  %196 = add i16 %195, -10304
  store i16 %196, i16* %154, align 2
  %197 = trunc i32 %184 to i16
  %198 = and i16 %197, 1023
  %199 = or i16 %198, -9216
  store i16 %199, i16* %155, align 2
  %200 = load i32, i32* %3, align 4
  %201 = icmp sgt i32 %200, 0
  br i1 %201, label %206, label %202

202:                                              ; preds = %193
  %203 = call i32 @utext_replace_69(%struct.UText* %1, i64 %163, i64 %163, i16* nonnull %154, i32 2, i32* %3) #12
  %204 = sext i32 %203 to i64
  %205 = add nsw i64 %163, %204
  br label %206

206:                                              ; preds = %193, %202
  %207 = phi i64 [ %205, %202 ], [ %163, %193 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #12
  br label %208

208:                                              ; preds = %206, %188
  %209 = phi i64 [ %192, %188 ], [ %207, %206 ]
  %210 = load i32, i32* %152, align 8
  %211 = load i32, i32* %6, align 4
  %212 = icmp eq i32 %211, %210
  br i1 %212, label %213, label %226

213:                                              ; preds = %208
  %214 = load i32, i32* %116, align 8
  %215 = icmp sgt i32 %214, 0
  br i1 %215, label %216, label %224

216:                                              ; preds = %213
  %217 = load i16*, i16** %141, align 8
  %218 = add nsw i32 %214, -1
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i16, i16* %217, i64 %219
  %221 = load i16, i16* %220, align 2
  %222 = icmp ult i16 %221, -10240
  br i1 %222, label %223, label %224

223:                                              ; preds = %216
  store i32 %218, i32* %116, align 8
  br label %233

224:                                              ; preds = %216, %213
  %225 = call i32 @utext_previous32_69(%struct.UText* %2) #12
  br label %233

226:                                              ; preds = %208
  %227 = add nsw i32 %211, -1
  %228 = icmp eq i32 %210, %227
  br i1 %228, label %233, label %229

229:                                              ; preds = %226
  %230 = xor i32 %210, -1
  %231 = add i32 %211, %230
  %232 = call signext i8 @utext_moveIndex32_69(%struct.UText* %2, i32 %231) #12
  br label %233

233:                                              ; preds = %226, %183, %224, %223, %229
  %234 = phi i64 [ %209, %223 ], [ %209, %224 ], [ %209, %229 ], [ %209, %226 ], [ %163, %183 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #12
  br label %389

235:                                              ; preds = %179
  %236 = load i32, i32* %116, align 8
  %237 = load i32, i32* %117, align 4
  %238 = icmp slt i32 %236, %237
  br i1 %238, label %239, label %247

239:                                              ; preds = %235
  %240 = load i16*, i16** %141, align 8
  %241 = sext i32 %236 to i64
  %242 = getelementptr inbounds i16, i16* %240, i64 %241
  %243 = load i16, i16* %242, align 2
  %244 = icmp ult i16 %243, -10240
  br i1 %244, label %245, label %247

245:                                              ; preds = %239
  %246 = add nsw i32 %236, 1
  store i32 %246, i32* %116, align 8
  br label %249

247:                                              ; preds = %239, %235
  %248 = call i32 @utext_next32_69(%struct.UText* %2) #12
  br label %249

249:                                              ; preds = %247, %245
  %250 = icmp ult i32 %180, 65536
  br i1 %250, label %251, label %256

251:                                              ; preds = %249
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %148) #12
  %252 = trunc i32 %180 to i16
  store i16 %252, i16* %10, align 2
  %253 = call i32 @utext_replace_69(%struct.UText* %1, i64 %163, i64 %163, i16* nonnull %10, i32 1, i32* %3) #12
  %254 = sext i32 %253 to i64
  %255 = add nsw i64 %163, %254
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %148) #12
  br label %389

256:                                              ; preds = %249
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #12
  %257 = lshr i32 %180, 10
  %258 = trunc i32 %257 to i16
  %259 = add i16 %258, -10304
  store i16 %259, i16* %146, align 2
  %260 = trunc i32 %180 to i16
  %261 = and i16 %260, 1023
  %262 = or i16 %261, -9216
  store i16 %262, i16* %147, align 2
  %263 = load i32, i32* %3, align 4
  %264 = icmp sgt i32 %263, 0
  br i1 %264, label %269, label %265

265:                                              ; preds = %256
  %266 = call i32 @utext_replace_69(%struct.UText* %1, i64 %163, i64 %163, i16* nonnull %146, i32 2, i32* %3) #12
  %267 = sext i32 %266 to i64
  %268 = add nsw i64 %163, %267
  br label %269

269:                                              ; preds = %256, %265
  %270 = phi i64 [ %268, %265 ], [ %163, %256 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145) #12
  br label %389

271:                                              ; preds = %161
  %272 = icmp ult i32 %162, 65536
  br i1 %272, label %273, label %278

273:                                              ; preds = %271
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %160) #12
  %274 = trunc i32 %162 to i16
  store i16 %274, i16* %12, align 2
  %275 = call i32 @utext_replace_69(%struct.UText* %1, i64 %163, i64 %163, i16* nonnull %12, i32 1, i32* %3) #12
  %276 = sext i32 %275 to i64
  %277 = add nsw i64 %163, %276
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %160) #12
  br label %389

278:                                              ; preds = %271
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %157) #12
  %279 = lshr i32 %162, 10
  %280 = trunc i32 %279 to i16
  %281 = add i16 %280, -10304
  store i16 %281, i16* %158, align 2
  %282 = trunc i32 %162 to i16
  %283 = and i16 %282, 1023
  %284 = or i16 %283, -9216
  store i16 %284, i16* %159, align 2
  %285 = call i32 @utext_replace_69(%struct.UText* %1, i64 %163, i64 %163, i16* nonnull %158, i32 2, i32* %3) #12
  %286 = sext i32 %285 to i64
  %287 = add nsw i64 %163, %286
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %157) #12
  br label %389

288:                                              ; preds = %161
  %289 = call i32 @utext_current32_69(%struct.UText* %2) #12
  %290 = icmp eq i32 %289, 123
  br i1 %290, label %291, label %327

291:                                              ; preds = %288
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %142) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 -86, i64 64, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %143, align 8
  store i16 2, i16* %144, align 8
  %292 = call i32 @utext_next32_69(%struct.UText* %2) #12
  %293 = load i32, i32* %3, align 4
  %294 = icmp slt i32 %293, 1
  br i1 %294, label %295, label %325

295:                                              ; preds = %291, %320
  %296 = call i32 @utext_next32_69(%struct.UText* %2) #12
  %297 = icmp eq i32 %296, -1
  br i1 %297, label %298, label %299

298:                                              ; preds = %295
  store i32 66325, i32* %3, align 4
  br label %320

299:                                              ; preds = %295
  %300 = and i32 %296, -33
  %301 = add i32 %300, -65
  %302 = icmp ult i32 %301, 26
  %303 = add i32 %296, -49
  %304 = icmp ult i32 %303, 9
  %305 = or i1 %304, %302
  br i1 %305, label %306, label %308

306:                                              ; preds = %299
  %307 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* nonnull %14, i32 %296) #12
  br label %320

308:                                              ; preds = %299
  %309 = icmp eq i32 %296, 125
  br i1 %309, label %310, label %319

310:                                              ; preds = %308
  %311 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %140, align 8
  %312 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %311, i64 0, i32 20
  %313 = load %struct.UHashtable*, %struct.UHashtable** %312, align 8
  %314 = icmp eq %struct.UHashtable* %313, null
  br i1 %314, label %318, label %315

315:                                              ; preds = %310
  %316 = call i32 @uhash_geti_69(%struct.UHashtable* nonnull %313, i8* nonnull %142) #12
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %325

318:                                              ; preds = %310, %315
  store i32 66325, i32* %3, align 4
  br label %325

319:                                              ; preds = %308
  store i32 66325, i32* %3, align 4
  br label %320

320:                                              ; preds = %306, %319, %298
  %321 = load i32, i32* %3, align 4
  %322 = icmp slt i32 %321, 1
  %323 = icmp ne i32 %296, 125
  %324 = and i1 %323, %322
  br i1 %324, label %295, label %325

325:                                              ; preds = %320, %318, %315, %291
  %326 = phi i32 [ 0, %291 ], [ %316, %315 ], [ 0, %318 ], [ 0, %320 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %142) #12
  br label %382

327:                                              ; preds = %288
  %328 = call signext i8 @u_isdigit_69(i32 %289) #12
  %329 = icmp eq i8 %328, 0
  br i1 %329, label %381, label %330

330:                                              ; preds = %327
  %331 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %140, align 8
  %332 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %331, i64 0, i32 12
  %333 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %332, align 8
  %334 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %333, i64 0, i32 1
  %335 = load i32, i32* %334, align 8
  br label %336

336:                                              ; preds = %379, %330
  %337 = phi i32 [ 0, %330 ], [ %360, %379 ]
  %338 = phi i32 [ 0, %330 ], [ %380, %379 ]
  %339 = load i32, i32* %116, align 8
  %340 = load i32, i32* %117, align 4
  %341 = icmp slt i32 %339, %340
  br i1 %341, label %342, label %350

342:                                              ; preds = %336
  %343 = load i16*, i16** %141, align 8
  %344 = sext i32 %339 to i64
  %345 = getelementptr inbounds i16, i16* %343, i64 %344
  %346 = load i16, i16* %345, align 2
  %347 = icmp ult i16 %346, -10240
  br i1 %347, label %348, label %350

348:                                              ; preds = %342
  %349 = zext i16 %346 to i32
  br label %353

350:                                              ; preds = %336, %342
  %351 = call i32 @utext_current32_69(%struct.UText* %2) #12
  %352 = icmp eq i32 %351, -1
  br i1 %352, label %382, label %353

353:                                              ; preds = %348, %350
  %354 = phi i32 [ %349, %348 ], [ %351, %350 ]
  %355 = call signext i8 @u_isdigit_69(i32 %354) #12
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %382, label %357

357:                                              ; preds = %353
  %358 = call i32 @u_charDigitValue_69(i32 %354) #12
  %359 = mul nsw i32 %337, 10
  %360 = add nsw i32 %358, %359
  %361 = icmp sgt i32 %360, %335
  br i1 %361, label %362, label %365

362:                                              ; preds = %357
  %363 = icmp eq i32 %338, 0
  br i1 %363, label %364, label %382

364:                                              ; preds = %362
  store i32 8, i32* %3, align 4
  br label %389

365:                                              ; preds = %357
  %366 = load i32, i32* %116, align 8
  %367 = load i32, i32* %117, align 4
  %368 = icmp slt i32 %366, %367
  br i1 %368, label %369, label %377

369:                                              ; preds = %365
  %370 = load i16*, i16** %141, align 8
  %371 = sext i32 %366 to i64
  %372 = getelementptr inbounds i16, i16* %370, i64 %371
  %373 = load i16, i16* %372, align 2
  %374 = icmp ult i16 %373, -10240
  br i1 %374, label %375, label %377

375:                                              ; preds = %369
  %376 = add nsw i32 %366, 1
  store i32 %376, i32* %116, align 8
  br label %379

377:                                              ; preds = %369, %365
  %378 = call i32 @utext_next32_69(%struct.UText* %2) #12
  br label %379

379:                                              ; preds = %375, %377
  %380 = add nuw nsw i32 %338, 1
  br label %336

381:                                              ; preds = %327
  store i32 66325, i32* %3, align 4
  br label %389

382:                                              ; preds = %350, %353, %362, %325
  %383 = phi i32 [ %337, %362 ], [ %326, %325 ], [ %337, %353 ], [ %337, %350 ]
  %384 = load i32, i32* %3, align 4
  %385 = icmp sgt i32 %384, 0
  br i1 %385, label %389, label %386

386:                                              ; preds = %382
  %387 = call i64 @_ZNK6icu_6912RegexMatcher11appendGroupEiP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 %383, %struct.UText* %1, i32* dereferenceable(4) %3)
  %388 = add nsw i64 %387, %163
  br label %389

389:                                              ; preds = %381, %364, %386, %382, %251, %269, %233, %273, %278
  %390 = phi i64 [ %234, %233 ], [ %255, %251 ], [ %270, %269 ], [ %277, %273 ], [ %287, %278 ], [ %388, %386 ], [ %163, %382 ], [ %163, %364 ], [ %163, %381 ]
  %391 = load i32, i32* %116, align 8
  %392 = load i32, i32* %117, align 4
  %393 = icmp slt i32 %391, %392
  br i1 %393, label %394, label %404

394:                                              ; preds = %389
  %395 = load i16*, i16** %141, align 8
  %396 = sext i32 %391 to i64
  %397 = getelementptr inbounds i16, i16* %395, i64 %396
  %398 = load i16, i16* %397, align 2
  %399 = icmp ult i16 %398, -10240
  br i1 %399, label %400, label %404

400:                                              ; preds = %394
  %401 = add nsw i32 %391, 1
  store i32 %401, i32* %116, align 8
  %402 = load i16, i16* %397, align 2
  %403 = zext i16 %402 to i32
  br label %406

404:                                              ; preds = %394, %389
  %405 = call i32 @utext_next32_69(%struct.UText* %2) #12
  br label %406

406:                                              ; preds = %404, %400
  %407 = phi i32 [ %403, %400 ], [ %405, %404 ]
  %408 = load i32, i32* %3, align 4
  %409 = icmp slt i32 %408, 1
  %410 = icmp ne i32 %407, -1
  %411 = and i1 %410, %409
  br i1 %411, label %161, label %412

412:                                              ; preds = %406, %176, %133, %88, %4, %26, %21
  ret %"class.icu_69::RegexMatcher"* %0
}

declare i64 @utext_nativeLength_69(%struct.UText*) local_unnamed_addr #4

declare i32 @utext_replace_69(%struct.UText*, i64, i64, i16*, i32, i32*) local_unnamed_addr #4

declare i32 @utext_extract_69(%struct.UText*, i64, i64, i16*, i32, i32*) local_unnamed_addr #4

declare void @utext_setNativeIndex_69(%struct.UText*, i64) local_unnamed_addr #4

declare i32 @utext_next32_69(%struct.UText*) local_unnamed_addr #4

declare i32 @utext_current32_69(%struct.UText*) local_unnamed_addr #4

declare i32 @u_unescapeAt_69(i16 (i32, i8*)*, i32*, i32, i8*) local_unnamed_addr #4

declare zeroext i16 @uregex_utext_unescape_charAt_69(i32, i8*) #4

declare i32 @utext_previous32_69(%struct.UText*) local_unnamed_addr #4

declare signext i8 @utext_moveIndex32_69(%struct.UText*, i32) local_unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #4

declare i32 @uhash_geti_69(%struct.UHashtable*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #6

declare signext i8 @u_isdigit_69(i32) local_unnamed_addr #4

declare i32 @u_charDigitValue_69(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK6icu_6912RegexMatcher11appendGroupEiP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, i32, %struct.UText*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = load i32, i32* %3, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %117

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  store i32 %10, i32* %3, align 4
  br label %117

13:                                               ; preds = %8
  %14 = tail call i64 @utext_nativeLength_69(%struct.UText* %2) #12
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %16 = load i8, i8* %15, align 2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  store i32 66306, i32* %3, align 4
  %19 = tail call i32 @utext_replace_69(%struct.UText* %2, i64 %14, i64 %14, i16* null, i32 0, i32* %3) #12
  %20 = sext i32 %19 to i64
  br label %117

21:                                               ; preds = %13
  %22 = icmp slt i32 %1, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %25 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %24, align 8
  %26 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %25, i64 0, i32 12
  %27 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %26, align 8
  %28 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp slt i32 %29, %1
  br i1 %30, label %31, label %34

31:                                               ; preds = %23, %21
  store i32 8, i32* %3, align 4
  %32 = tail call i32 @utext_replace_69(%struct.UText* %2, i64 %14, i64 %14, i16* null, i32 0, i32* %3) #12
  %33 = sext i32 %32 to i64
  br label %117

34:                                               ; preds = %23
  %35 = icmp eq i32 %1, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %38 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  br label %57

39:                                               ; preds = %34
  %40 = icmp sgt i32 %29, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %39
  %42 = add nsw i32 %1, -1
  %43 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %27, i64 0, i32 4
  %44 = load i32*, i32** %43, align 8
  %45 = sext i32 %42 to i64
  %46 = getelementptr inbounds i32, i32* %44, i64 %45
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %39, %41
  %49 = phi i32 [ %47, %41 ], [ 0, %39 ]
  %50 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 26
  %51 = load %"struct.icu_69::REStackFrame"*, %"struct.icu_69::REStackFrame"** %50, align 8
  %52 = sext i32 %49 to i64
  %53 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %51, i64 0, i32 2, i64 %52
  %54 = add nsw i32 %49, 1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %51, i64 0, i32 2, i64 %55
  br label %57

57:                                               ; preds = %48, %36
  %58 = phi i64* [ %37, %36 ], [ %53, %48 ]
  %59 = phi i64* [ %38, %36 ], [ %56, %48 ]
  %60 = load i64, i64* %59, align 8
  %61 = load i64, i64* %58, align 8
  %62 = icmp slt i64 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %57
  %64 = tail call i32 @utext_replace_69(%struct.UText* %2, i64 %14, i64 %14, i16* null, i32 0, i32* %3) #12
  %65 = sext i32 %64 to i64
  br label %117

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %68 = load %struct.UText*, %struct.UText** %67, align 8
  %69 = getelementptr inbounds %struct.UText, %struct.UText* %68, i64 0, i32 7
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %91

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %struct.UText, %struct.UText* %68, i64 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %74, %76
  br i1 %77, label %78, label %91

78:                                               ; preds = %72
  %79 = getelementptr inbounds %struct.UText, %struct.UText* %68, i64 0, i32 6
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = icmp eq i64 %74, %81
  br i1 %82, label %83, label %91

83:                                               ; preds = %78
  %84 = getelementptr inbounds %struct.UText, %struct.UText* %68, i64 0, i32 10
  %85 = load i16*, i16** %84, align 8
  %86 = getelementptr inbounds i16, i16* %85, i64 %61
  %87 = sub nsw i64 %60, %61
  %88 = trunc i64 %87 to i32
  %89 = tail call i32 @utext_replace_69(%struct.UText* %2, i64 %14, i64 %14, i16* %86, i32 %88, i32* %3) #12
  %90 = sext i32 %89 to i64
  br label %117

91:                                               ; preds = %78, %72, %66
  %92 = getelementptr inbounds %struct.UText, %struct.UText* %68, i64 0, i32 11
  %93 = load %struct.UTextFuncs*, %struct.UTextFuncs** %92, align 8
  %94 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %93, i64 0, i32 11
  %95 = load i32 (%struct.UText*, i64)*, i32 (%struct.UText*, i64)** %94, align 8
  %96 = icmp eq i32 (%struct.UText*, i64)* %95, null
  br i1 %96, label %97, label %100

97:                                               ; preds = %91
  %98 = sub nsw i64 %60, %61
  %99 = trunc i64 %98 to i32
  br label %103

100:                                              ; preds = %91
  %101 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %101) #12
  store i32 0, i32* %5, align 4
  %102 = call i32 @utext_extract_69(%struct.UText* %68, i64 %61, i64 %60, i16* null, i32 0, i32* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %101) #12
  br label %103

103:                                              ; preds = %100, %97
  %104 = phi i32 [ %99, %97 ], [ %102, %100 ]
  %105 = add nsw i32 %104, 1
  %106 = sext i32 %105 to i64
  %107 = shl nsw i64 %106, 1
  %108 = call noalias i8* @uprv_malloc_69(i64 %107) #11
  %109 = bitcast i8* %108 to i16*
  %110 = icmp eq i8* %108, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %103
  %112 = load %struct.UText*, %struct.UText** %67, align 8
  %113 = call i32 @utext_extract_69(%struct.UText* %112, i64 %61, i64 %60, i16* nonnull %109, i32 %105, i32* %3) #12
  %114 = call i32 @utext_replace_69(%struct.UText* %2, i64 %14, i64 %14, i16* nonnull %109, i32 %104, i32* %3) #12
  %115 = sext i32 %114 to i64
  call void @uprv_free_69(i8* nonnull %108) #12
  br label %117

116:                                              ; preds = %103
  store i32 7, i32* %3, align 4
  br label %117

117:                                              ; preds = %83, %111, %116, %18, %31, %63, %4, %12
  %118 = phi i64 [ 0, %12 ], [ 0, %4 ], [ %20, %18 ], [ %33, %31 ], [ %65, %63 ], [ 0, %116 ], [ %90, %83 ], [ %115, %111 ]
  ret i64 %118
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6912RegexMatcher10appendTailERNS_13UnicodeStringE(%"class.icu_69::RegexMatcher"* nocapture, %"class.icu_69::UnicodeString"* returned dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.UText, align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #12
  store i32 0, i32* %3, align 4
  %6 = bitcast %struct.UText* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 144, i1 false)
  %7 = getelementptr inbounds %struct.UText, %struct.UText* %4, i64 0, i32 0
  store i32 878368812, i32* %7, align 8
  %8 = getelementptr inbounds %struct.UText, %struct.UText* %4, i64 0, i32 3
  store i32 144, i32* %8, align 4
  %9 = call %struct.UText* @utext_openUnicodeString_69(%struct.UText* nonnull %4, %"class.icu_69::UnicodeString"* %1, i32* nonnull %3) #12
  %10 = load i32, i32* %3, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = call %struct.UText* @_ZN6icu_6912RegexMatcher10appendTailEP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* nonnull %4, i32* nonnull dereferenceable(4) %3)
  %14 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %4) #12
  br label %15

15:                                               ; preds = %2, %12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #12
  ret %"class.icu_69::UnicodeString"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UText* @_ZN6icu_6912RegexMatcher10appendTailEP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture, %struct.UText* returned, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %69

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 %8, i32* %2, align 4
  br label %69

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 22
  %15 = load i64, i64* %14, align 8
  %16 = icmp sgt i64 %13, %15
  br i1 %16, label %17, label %69

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %19 = load %struct.UText*, %struct.UText** %18, align 8
  %20 = getelementptr inbounds %struct.UText, %struct.UText* %19, i64 0, i32 7
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %43

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.UText, %struct.UText* %19, i64 0, i32 4
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %13, %25
  br i1 %26, label %27, label %43

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.UText, %struct.UText* %19, i64 0, i32 6
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = icmp eq i64 %13, %30
  br i1 %31, label %32, label %43

32:                                               ; preds = %27
  %33 = tail call i64 @utext_nativeLength_69(%struct.UText* %1) #12
  %34 = load %struct.UText*, %struct.UText** %18, align 8
  %35 = getelementptr inbounds %struct.UText, %struct.UText* %34, i64 0, i32 10
  %36 = load i16*, i16** %35, align 8
  %37 = load i64, i64* %14, align 8
  %38 = getelementptr inbounds i16, i16* %36, i64 %37
  %39 = load i64, i64* %12, align 8
  %40 = sub nsw i64 %39, %37
  %41 = trunc i64 %40 to i32
  %42 = tail call i32 @utext_replace_69(%struct.UText* %1, i64 %33, i64 %33, i16* %38, i32 %41, i32* %2) #12
  br label %69

43:                                               ; preds = %27, %23, %17
  %44 = getelementptr inbounds %struct.UText, %struct.UText* %19, i64 0, i32 11
  %45 = load %struct.UTextFuncs*, %struct.UTextFuncs** %44, align 8
  %46 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %45, i64 0, i32 11
  %47 = load i32 (%struct.UText*, i64)*, i32 (%struct.UText*, i64)** %46, align 8
  %48 = icmp eq i32 (%struct.UText*, i64)* %47, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = sub nsw i64 %13, %15
  %51 = trunc i64 %50 to i32
  br label %54

52:                                               ; preds = %43
  %53 = tail call i32 @utext_extract_69(%struct.UText* %19, i64 %15, i64 %13, i16* null, i32 0, i32* %2) #12
  store i32 0, i32* %2, align 4
  br label %54

54:                                               ; preds = %52, %49
  %55 = phi i32 [ %51, %49 ], [ %53, %52 ]
  %56 = sext i32 %55 to i64
  %57 = shl nsw i64 %56, 1
  %58 = tail call noalias i8* @uprv_malloc_69(i64 %57) #11
  %59 = bitcast i8* %58 to i16*
  %60 = icmp eq i8* %58, null
  br i1 %60, label %61, label %62

61:                                               ; preds = %54
  store i32 7, i32* %7, align 4
  br label %69

62:                                               ; preds = %54
  %63 = load %struct.UText*, %struct.UText** %18, align 8
  %64 = load i64, i64* %14, align 8
  %65 = load i64, i64* %12, align 8
  %66 = tail call i32 @utext_extract_69(%struct.UText* %63, i64 %64, i64 %65, i16* nonnull %59, i32 %55, i32* %2) #12
  %67 = tail call i64 @utext_nativeLength_69(%struct.UText* %1) #12
  %68 = tail call i32 @utext_replace_69(%struct.UText* %1, i64 %67, i64 %67, i16* nonnull %59, i32 %55, i32* %2) #12
  tail call void @uprv_free_69(i8* nonnull %58) #12
  br label %69

69:                                               ; preds = %11, %32, %62, %61, %3, %10
  ret %struct.UText* %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6912RegexMatcher3endER10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, i32* nocapture dereferenceable(4)) unnamed_addr #5 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %23

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %7 = load i8, i8* %6, align 2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store i32 66306, i32* %1, align 4
  br label %23

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %12 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %13 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %12, i64 0, i32 12
  %14 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %13, align 8
  %15 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  store i32 8, i32* %1, align 4
  br label %23

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  br label %23

23:                                               ; preds = %2, %9, %18, %19
  %24 = phi i32 [ -1, %9 ], [ -1, %18 ], [ %22, %19 ], [ -1, %2 ]
  ret i32 %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6912RegexMatcher3endEiR10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, i32, i32* nocapture dereferenceable(4)) unnamed_addr #5 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %46

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %8 = load i8, i8* %7, align 2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i32 66306, i32* %2, align 4
  br label %46

11:                                               ; preds = %6
  %12 = icmp slt i32 %1, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %15 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %14, align 8
  %16 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %15, i64 0, i32 12
  %17 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %16, align 8
  %18 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %19, %1
  br i1 %20, label %21, label %22

21:                                               ; preds = %13, %11
  store i32 8, i32* %2, align 4
  br label %46

22:                                               ; preds = %13
  %23 = icmp eq i32 %1, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  br label %42

26:                                               ; preds = %22
  %27 = icmp sgt i32 %19, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %26
  %29 = add nsw i32 %1, -1
  %30 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %17, i64 0, i32 4
  %31 = load i32*, i32** %30, align 8
  %32 = sext i32 %29 to i64
  %33 = getelementptr inbounds i32, i32* %31, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, 1
  %36 = sext i32 %35 to i64
  br label %37

37:                                               ; preds = %28, %26
  %38 = phi i64 [ %36, %28 ], [ 1, %26 ]
  %39 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 26
  %40 = load %"struct.icu_69::REStackFrame"*, %"struct.icu_69::REStackFrame"** %39, align 8
  %41 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %40, i64 0, i32 2, i64 %38
  br label %42

42:                                               ; preds = %37, %24
  %43 = phi i64* [ %25, %24 ], [ %41, %37 ]
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  br label %46

46:                                               ; preds = %3, %10, %21, %42
  %47 = phi i32 [ -1, %10 ], [ -1, %21 ], [ %45, %42 ], [ -1, %3 ]
  ret i32 %47
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZNK6icu_6912RegexMatcher5end64ER10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, i32* nocapture dereferenceable(4)) unnamed_addr #5 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %22

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %7 = load i8, i8* %6, align 2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store i32 66306, i32* %1, align 4
  br label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %12 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %13 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %12, i64 0, i32 12
  %14 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %13, align 8
  %15 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  store i32 8, i32* %1, align 4
  br label %22

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %2, %9, %18, %19
  %23 = phi i64 [ -1, %9 ], [ -1, %18 ], [ %21, %19 ], [ -1, %2 ]
  ret i64 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZNK6icu_6912RegexMatcher5end64EiR10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, i32, i32* nocapture dereferenceable(4)) unnamed_addr #5 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %45

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %8 = load i8, i8* %7, align 2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i32 66306, i32* %2, align 4
  br label %45

11:                                               ; preds = %6
  %12 = icmp slt i32 %1, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %15 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %14, align 8
  %16 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %15, i64 0, i32 12
  %17 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %16, align 8
  %18 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %19, %1
  br i1 %20, label %21, label %22

21:                                               ; preds = %13, %11
  store i32 8, i32* %2, align 4
  br label %45

22:                                               ; preds = %13
  %23 = icmp eq i32 %1, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  br label %42

26:                                               ; preds = %22
  %27 = icmp sgt i32 %19, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %26
  %29 = add nsw i32 %1, -1
  %30 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %17, i64 0, i32 4
  %31 = load i32*, i32** %30, align 8
  %32 = sext i32 %29 to i64
  %33 = getelementptr inbounds i32, i32* %31, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, 1
  %36 = sext i32 %35 to i64
  br label %37

37:                                               ; preds = %26, %28
  %38 = phi i64 [ %36, %28 ], [ 1, %26 ]
  %39 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 26
  %40 = load %"struct.icu_69::REStackFrame"*, %"struct.icu_69::REStackFrame"** %39, align 8
  %41 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %40, i64 0, i32 2, i64 %38
  br label %42

42:                                               ; preds = %37, %24
  %43 = phi i64* [ %25, %24 ], [ %41, %37 ]
  %44 = load i64, i64* %43, align 8
  br label %45

45:                                               ; preds = %3, %42, %21, %10
  %46 = phi i64 [ -1, %10 ], [ -1, %21 ], [ %44, %42 ], [ -1, %3 ]
  ret i64 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6912RegexMatcher4findEv(%"class.icu_69::RegexMatcher"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #12
  store i32 0, i32* %2, align 4
  %8 = call signext i8 @_ZN6icu_6912RegexMatcher4findER10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32* nonnull dereferenceable(4) %2)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #12
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i8 [ %8, %6 ], [ 0, %1 ]
  ret i8 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6912RegexMatcher4findER10UErrorCode(%"class.icu_69::RegexMatcher"*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %841

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  store i32 %7, i32* %1, align 4
  br label %841

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %12 = load %struct.UText*, %struct.UText** %11, align 8
  %13 = getelementptr inbounds %struct.UText, %struct.UText* %12, i64 0, i32 7
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %29

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.UText, %struct.UText* %12, i64 0, i32 4
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %22, label %29

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.UText, %struct.UText* %12, i64 0, i32 6
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = icmp eq i64 %18, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = tail call signext i8 @_ZN6icu_6912RegexMatcher14findUsingChunkER10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32* dereferenceable(4) %1)
  br label %841

29:                                               ; preds = %22, %16, %10
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  %35 = load i64, i64* %34, align 8
  br label %36

36:                                               ; preds = %33, %29
  %37 = phi i64 [ %35, %33 ], [ %31, %29 ]
  %38 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %39 = load i8, i8* %38, align 2
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  br i1 %40, label %108, label %42

42:                                               ; preds = %36
  store i64 %31, i64* %41, align 8
  %43 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, %31
  br i1 %45, label %46, label %113

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  %48 = load i64, i64* %47, align 8
  %49 = icmp slt i64 %37, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  store i8 0, i8* %38, align 2
  %51 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %51, align 8
  br label %841

52:                                               ; preds = %46
  %53 = load i64, i64* %13, align 8
  %54 = sub nsw i64 %37, %53
  %55 = icmp sgt i64 %54, -1
  br i1 %55, label %56, label %70

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.UText, %struct.UText* %12, i64 0, i32 6
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = icmp slt i64 %54, %59
  br i1 %60, label %61, label %70

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.UText, %struct.UText* %12, i64 0, i32 10
  %63 = load i16*, i16** %62, align 8
  %64 = getelementptr inbounds i16, i16* %63, i64 %54
  %65 = load i16, i16* %64, align 2
  %66 = icmp ult i16 %65, -9216
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = trunc i64 %54 to i32
  %69 = getelementptr inbounds %struct.UText, %struct.UText* %12, i64 0, i32 8
  store i32 %68, i32* %69, align 8
  br label %71

70:                                               ; preds = %61, %56, %52
  tail call void @utext_setNativeIndex_69(%struct.UText* %12, i64 %37) #12
  br label %71

71:                                               ; preds = %70, %67
  %72 = load %struct.UText*, %struct.UText** %11, align 8
  %73 = getelementptr inbounds %struct.UText, %struct.UText* %72, i64 0, i32 8
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %struct.UText, %struct.UText* %72, i64 0, i32 9
  %76 = load i32, i32* %75, align 4
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %78, label %87

78:                                               ; preds = %71
  %79 = getelementptr inbounds %struct.UText, %struct.UText* %72, i64 0, i32 10
  %80 = load i16*, i16** %79, align 8
  %81 = sext i32 %74 to i64
  %82 = getelementptr inbounds i16, i16* %80, i64 %81
  %83 = load i16, i16* %82, align 2
  %84 = icmp ult i16 %83, -10240
  br i1 %84, label %85, label %87

85:                                               ; preds = %78
  %86 = add nsw i32 %74, 1
  store i32 %86, i32* %73, align 8
  br label %89

87:                                               ; preds = %78, %71
  %88 = tail call i32 @utext_next32_69(%struct.UText* %72) #12
  br label %89

89:                                               ; preds = %87, %85
  %90 = load %struct.UText*, %struct.UText** %11, align 8
  %91 = getelementptr inbounds %struct.UText, %struct.UText* %90, i64 0, i32 8
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %struct.UText, %struct.UText* %90, i64 0, i32 6
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %92, %94
  br i1 %95, label %101, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %struct.UText, %struct.UText* %90, i64 0, i32 7
  %98 = load i64, i64* %97, align 8
  %99 = sext i32 %92 to i64
  %100 = add nsw i64 %98, %99
  br label %113

101:                                              ; preds = %89
  %102 = getelementptr inbounds %struct.UText, %struct.UText* %90, i64 0, i32 11
  %103 = load %struct.UTextFuncs*, %struct.UTextFuncs** %102, align 8
  %104 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %103, i64 0, i32 10
  %105 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %104, align 8
  %106 = tail call i64 %105(%struct.UText* %90) #12
  %107 = load %struct.UText*, %struct.UText** %11, align 8
  br label %113

108:                                              ; preds = %36
  %109 = load i64, i64* %41, align 8
  %110 = icmp sgt i64 %109, -1
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %112, align 8
  br label %841

113:                                              ; preds = %96, %101, %108, %42
  %114 = phi %struct.UText* [ %12, %42 ], [ %12, %108 ], [ %90, %96 ], [ %107, %101 ]
  %115 = phi i64 [ %37, %42 ], [ %37, %108 ], [ %100, %96 ], [ %106, %101 ]
  %116 = getelementptr inbounds %struct.UText, %struct.UText* %114, i64 0, i32 11
  %117 = load %struct.UTextFuncs*, %struct.UTextFuncs** %116, align 8
  %118 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %117, i64 0, i32 11
  %119 = load i32 (%struct.UText*, i64)*, i32 (%struct.UText*, i64)** %118, align 8
  %120 = icmp eq i32 (%struct.UText*, i64)* %119, null
  %121 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %124 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %123, align 8
  %125 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %124, i64 0, i32 9
  %126 = load i32, i32* %125, align 4
  br i1 %120, label %127, label %133

127:                                              ; preds = %113
  %128 = sext i32 %126 to i64
  %129 = sub nsw i64 %122, %128
  %130 = icmp sgt i64 %115, %129
  br i1 %130, label %131, label %137

131:                                              ; preds = %127
  store i8 0, i8* %38, align 2
  %132 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %132, align 8
  br label %841

133:                                              ; preds = %113
  %134 = icmp sgt i32 %126, 0
  %135 = zext i1 %134 to i64
  %136 = sub nsw i64 %122, %135
  br label %137

137:                                              ; preds = %127, %133
  %138 = phi i64 [ %129, %127 ], [ %136, %133 ]
  %139 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %124, i64 0, i32 13
  %140 = load i32, i32* %139, align 8
  switch i32 %140, label %840 [
    i32 0, label %141
    i32 3, label %224
    i32 2, label %234
    i32 5, label %360
    i32 1, label %360
    i32 4, label %468
  ]

141:                                              ; preds = %137
  tail call void @_ZN6icu_6912RegexMatcher7MatchAtElaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i64 %115, i8 signext 0, i32* dereferenceable(4) %1)
  %142 = load i32, i32* %1, align 4
  %143 = icmp slt i32 %142, 1
  br i1 %143, label %144, label %841

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 35
  %146 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 36
  br label %147

147:                                              ; preds = %144, %221
  %148 = phi i64 [ %115, %144 ], [ %213, %221 ]
  %149 = load i8, i8* %38, align 2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %841

151:                                              ; preds = %147
  %152 = icmp slt i64 %148, %138
  br i1 %152, label %155, label %153

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %154, align 8
  br label %841

155:                                              ; preds = %151
  %156 = load %struct.UText*, %struct.UText** %11, align 8
  %157 = getelementptr inbounds %struct.UText, %struct.UText* %156, i64 0, i32 7
  %158 = load i64, i64* %157, align 8
  %159 = sub nsw i64 %148, %158
  %160 = icmp sgt i64 %159, -1
  br i1 %160, label %161, label %175

161:                                              ; preds = %155
  %162 = getelementptr inbounds %struct.UText, %struct.UText* %156, i64 0, i32 6
  %163 = load i32, i32* %162, align 4
  %164 = sext i32 %163 to i64
  %165 = icmp slt i64 %159, %164
  br i1 %165, label %166, label %175

166:                                              ; preds = %161
  %167 = getelementptr inbounds %struct.UText, %struct.UText* %156, i64 0, i32 10
  %168 = load i16*, i16** %167, align 8
  %169 = getelementptr inbounds i16, i16* %168, i64 %159
  %170 = load i16, i16* %169, align 2
  %171 = icmp ult i16 %170, -9216
  br i1 %171, label %172, label %175

172:                                              ; preds = %166
  %173 = trunc i64 %159 to i32
  %174 = getelementptr inbounds %struct.UText, %struct.UText* %156, i64 0, i32 8
  store i32 %173, i32* %174, align 8
  br label %176

175:                                              ; preds = %166, %161, %155
  tail call void @utext_setNativeIndex_69(%struct.UText* %156, i64 %148) #12
  br label %176

176:                                              ; preds = %175, %172
  %177 = load %struct.UText*, %struct.UText** %11, align 8
  %178 = getelementptr inbounds %struct.UText, %struct.UText* %177, i64 0, i32 8
  %179 = load i32, i32* %178, align 8
  %180 = getelementptr inbounds %struct.UText, %struct.UText* %177, i64 0, i32 9
  %181 = load i32, i32* %180, align 4
  %182 = icmp slt i32 %179, %181
  br i1 %182, label %183, label %192

183:                                              ; preds = %176
  %184 = getelementptr inbounds %struct.UText, %struct.UText* %177, i64 0, i32 10
  %185 = load i16*, i16** %184, align 8
  %186 = sext i32 %179 to i64
  %187 = getelementptr inbounds i16, i16* %185, i64 %186
  %188 = load i16, i16* %187, align 2
  %189 = icmp ult i16 %188, -10240
  br i1 %189, label %190, label %192

190:                                              ; preds = %183
  %191 = add nsw i32 %179, 1
  store i32 %191, i32* %178, align 8
  br label %194

192:                                              ; preds = %183, %176
  %193 = tail call i32 @utext_next32_69(%struct.UText* %177) #12
  br label %194

194:                                              ; preds = %192, %190
  %195 = load %struct.UText*, %struct.UText** %11, align 8
  %196 = getelementptr inbounds %struct.UText, %struct.UText* %195, i64 0, i32 8
  %197 = load i32, i32* %196, align 8
  %198 = getelementptr inbounds %struct.UText, %struct.UText* %195, i64 0, i32 6
  %199 = load i32, i32* %198, align 4
  %200 = icmp sgt i32 %197, %199
  br i1 %200, label %206, label %201

201:                                              ; preds = %194
  %202 = getelementptr inbounds %struct.UText, %struct.UText* %195, i64 0, i32 7
  %203 = load i64, i64* %202, align 8
  %204 = sext i32 %197 to i64
  %205 = add nsw i64 %203, %204
  br label %212

206:                                              ; preds = %194
  %207 = getelementptr inbounds %struct.UText, %struct.UText* %195, i64 0, i32 11
  %208 = load %struct.UTextFuncs*, %struct.UTextFuncs** %207, align 8
  %209 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %208, i64 0, i32 10
  %210 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %209, align 8
  %211 = tail call i64 %210(%struct.UText* %195) #12
  br label %212

212:                                              ; preds = %206, %201
  %213 = phi i64 [ %205, %201 ], [ %211, %206 ]
  %214 = load i8 (i8*, i64)*, i8 (i8*, i64)** %145, align 8
  %215 = icmp eq i8 (i8*, i64)* %214, null
  br i1 %215, label %221, label %216

216:                                              ; preds = %212
  %217 = load i8*, i8** %146, align 8
  %218 = tail call signext i8 %214(i8* %217, i64 %213) #12
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %220, label %221

220:                                              ; preds = %216
  store i32 66323, i32* %1, align 4
  br label %841

221:                                              ; preds = %212, %216
  tail call void @_ZN6icu_6912RegexMatcher7MatchAtElaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i64 %213, i8 signext 0, i32* dereferenceable(4) %1)
  %222 = load i32, i32* %1, align 4
  %223 = icmp slt i32 %222, 1
  br i1 %223, label %147, label %841

224:                                              ; preds = %137
  %225 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  %226 = load i64, i64* %225, align 8
  %227 = icmp sgt i64 %115, %226
  br i1 %227, label %228, label %229

228:                                              ; preds = %224
  store i8 0, i8* %38, align 2
  br label %841

229:                                              ; preds = %224
  tail call void @_ZN6icu_6912RegexMatcher7MatchAtElaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i64 %115, i8 signext 0, i32* dereferenceable(4) %1)
  %230 = load i32, i32* %1, align 4
  %231 = icmp slt i32 %230, 1
  br i1 %231, label %232, label %841

232:                                              ; preds = %229
  %233 = load i8, i8* %38, align 2
  br label %841

234:                                              ; preds = %137
  %235 = getelementptr inbounds %struct.UText, %struct.UText* %114, i64 0, i32 7
  %236 = load i64, i64* %235, align 8
  %237 = sub nsw i64 %115, %236
  %238 = icmp sgt i64 %237, -1
  br i1 %238, label %239, label %253

239:                                              ; preds = %234
  %240 = getelementptr inbounds %struct.UText, %struct.UText* %114, i64 0, i32 6
  %241 = load i32, i32* %240, align 4
  %242 = sext i32 %241 to i64
  %243 = icmp slt i64 %237, %242
  br i1 %243, label %244, label %253

244:                                              ; preds = %239
  %245 = getelementptr inbounds %struct.UText, %struct.UText* %114, i64 0, i32 10
  %246 = load i16*, i16** %245, align 8
  %247 = getelementptr inbounds i16, i16* %246, i64 %237
  %248 = load i16, i16* %247, align 2
  %249 = icmp ult i16 %248, -9216
  br i1 %249, label %250, label %253

250:                                              ; preds = %244
  %251 = trunc i64 %237 to i32
  %252 = getelementptr inbounds %struct.UText, %struct.UText* %114, i64 0, i32 8
  store i32 %251, i32* %252, align 8
  br label %254

253:                                              ; preds = %244, %239, %234
  tail call void @utext_setNativeIndex_69(%struct.UText* %114, i64 %115) #12
  br label %254

254:                                              ; preds = %253, %250
  %255 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 35
  %256 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 36
  br label %257

257:                                              ; preds = %358, %254
  %258 = phi i64 [ %115, %254 ], [ %298, %358 ]
  %259 = load %struct.UText*, %struct.UText** %11, align 8
  %260 = getelementptr inbounds %struct.UText, %struct.UText* %259, i64 0, i32 8
  %261 = load i32, i32* %260, align 8
  %262 = getelementptr inbounds %struct.UText, %struct.UText* %259, i64 0, i32 9
  %263 = load i32, i32* %262, align 4
  %264 = icmp slt i32 %261, %263
  br i1 %264, label %265, label %276

265:                                              ; preds = %257
  %266 = getelementptr inbounds %struct.UText, %struct.UText* %259, i64 0, i32 10
  %267 = load i16*, i16** %266, align 8
  %268 = sext i32 %261 to i64
  %269 = getelementptr inbounds i16, i16* %267, i64 %268
  %270 = load i16, i16* %269, align 2
  %271 = icmp ult i16 %270, -10240
  br i1 %271, label %272, label %276

272:                                              ; preds = %265
  %273 = add nsw i32 %261, 1
  store i32 %273, i32* %260, align 8
  %274 = load i16, i16* %269, align 2
  %275 = zext i16 %274 to i32
  br label %278

276:                                              ; preds = %265, %257
  %277 = tail call i32 @utext_next32_69(%struct.UText* %259) #12
  br label %278

278:                                              ; preds = %276, %272
  %279 = phi i32 [ %275, %272 ], [ %277, %276 ]
  %280 = load %struct.UText*, %struct.UText** %11, align 8
  %281 = getelementptr inbounds %struct.UText, %struct.UText* %280, i64 0, i32 8
  %282 = load i32, i32* %281, align 8
  %283 = getelementptr inbounds %struct.UText, %struct.UText* %280, i64 0, i32 6
  %284 = load i32, i32* %283, align 4
  %285 = icmp sgt i32 %282, %284
  br i1 %285, label %291, label %286

286:                                              ; preds = %278
  %287 = getelementptr inbounds %struct.UText, %struct.UText* %280, i64 0, i32 7
  %288 = load i64, i64* %287, align 8
  %289 = sext i32 %282 to i64
  %290 = add nsw i64 %288, %289
  br label %297

291:                                              ; preds = %278
  %292 = getelementptr inbounds %struct.UText, %struct.UText* %280, i64 0, i32 11
  %293 = load %struct.UTextFuncs*, %struct.UTextFuncs** %292, align 8
  %294 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %293, i64 0, i32 10
  %295 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %294, align 8
  %296 = tail call i64 %295(%struct.UText* %280) #12
  br label %297

297:                                              ; preds = %291, %286
  %298 = phi i64 [ %290, %286 ], [ %296, %291 ]
  %299 = icmp sgt i32 %279, -1
  br i1 %299, label %300, label %347

300:                                              ; preds = %297
  %301 = icmp slt i32 %279, 256
  %302 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %123, align 8
  br i1 %301, label %303, label %315

303:                                              ; preds = %300
  %304 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %302, i64 0, i32 18
  %305 = load %"struct.icu_69::Regex8BitSet"*, %"struct.icu_69::Regex8BitSet"** %304, align 8
  %306 = lshr i32 %279, 3
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds %"struct.icu_69::Regex8BitSet", %"struct.icu_69::Regex8BitSet"* %305, i64 0, i32 0, i64 %307
  %309 = load i8, i8* %308, align 1
  %310 = sext i8 %309 to i32
  %311 = and i32 %279, 7
  %312 = shl i32 1, %311
  %313 = and i32 %312, %310
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %347, label %320

315:                                              ; preds = %300
  %316 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %302, i64 0, i32 16
  %317 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %316, align 8
  %318 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %317, i32 %279) #12
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %347, label %320

320:                                              ; preds = %303, %315
  tail call void @_ZN6icu_6912RegexMatcher7MatchAtElaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i64 %258, i8 signext 0, i32* dereferenceable(4) %1)
  %321 = load i32, i32* %1, align 4
  %322 = icmp slt i32 %321, 1
  br i1 %322, label %323, label %841

323:                                              ; preds = %320
  %324 = load i8, i8* %38, align 2
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %326, label %841

326:                                              ; preds = %323
  %327 = load %struct.UText*, %struct.UText** %11, align 8
  %328 = getelementptr inbounds %struct.UText, %struct.UText* %327, i64 0, i32 7
  %329 = load i64, i64* %328, align 8
  %330 = sub nsw i64 %258, %329
  %331 = icmp sgt i64 %330, -1
  br i1 %331, label %332, label %346

332:                                              ; preds = %326
  %333 = getelementptr inbounds %struct.UText, %struct.UText* %327, i64 0, i32 6
  %334 = load i32, i32* %333, align 4
  %335 = sext i32 %334 to i64
  %336 = icmp slt i64 %330, %335
  br i1 %336, label %337, label %346

337:                                              ; preds = %332
  %338 = getelementptr inbounds %struct.UText, %struct.UText* %327, i64 0, i32 10
  %339 = load i16*, i16** %338, align 8
  %340 = getelementptr inbounds i16, i16* %339, i64 %330
  %341 = load i16, i16* %340, align 2
  %342 = icmp ult i16 %341, -9216
  br i1 %342, label %343, label %346

343:                                              ; preds = %337
  %344 = trunc i64 %330 to i32
  %345 = getelementptr inbounds %struct.UText, %struct.UText* %327, i64 0, i32 8
  store i32 %344, i32* %345, align 8
  br label %347

346:                                              ; preds = %337, %332, %326
  tail call void @utext_setNativeIndex_69(%struct.UText* %327, i64 %258) #12
  br label %347

347:                                              ; preds = %303, %343, %346, %315, %297
  %348 = icmp sgt i64 %298, %138
  br i1 %348, label %349, label %351

349:                                              ; preds = %347
  store i8 0, i8* %38, align 2
  %350 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %350, align 8
  br label %841

351:                                              ; preds = %347
  %352 = load i8 (i8*, i64)*, i8 (i8*, i64)** %255, align 8
  %353 = icmp eq i8 (i8*, i64)* %352, null
  br i1 %353, label %358, label %354

354:                                              ; preds = %351
  %355 = load i8*, i8** %256, align 8
  %356 = tail call signext i8 %352(i8* %355, i64 %298) #12
  %357 = icmp eq i8 %356, 0
  br i1 %357, label %359, label %358

358:                                              ; preds = %354, %351
  br label %257

359:                                              ; preds = %354
  store i32 66323, i32* %1, align 4
  br label %841

360:                                              ; preds = %137, %137
  %361 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %124, i64 0, i32 17
  %362 = load i32, i32* %361, align 8
  %363 = getelementptr inbounds %struct.UText, %struct.UText* %114, i64 0, i32 7
  %364 = load i64, i64* %363, align 8
  %365 = sub nsw i64 %115, %364
  %366 = icmp sgt i64 %365, -1
  br i1 %366, label %367, label %381

367:                                              ; preds = %360
  %368 = getelementptr inbounds %struct.UText, %struct.UText* %114, i64 0, i32 6
  %369 = load i32, i32* %368, align 4
  %370 = sext i32 %369 to i64
  %371 = icmp slt i64 %365, %370
  br i1 %371, label %372, label %381

372:                                              ; preds = %367
  %373 = getelementptr inbounds %struct.UText, %struct.UText* %114, i64 0, i32 10
  %374 = load i16*, i16** %373, align 8
  %375 = getelementptr inbounds i16, i16* %374, i64 %365
  %376 = load i16, i16* %375, align 2
  %377 = icmp ult i16 %376, -9216
  br i1 %377, label %378, label %381

378:                                              ; preds = %372
  %379 = trunc i64 %365 to i32
  %380 = getelementptr inbounds %struct.UText, %struct.UText* %114, i64 0, i32 8
  store i32 %379, i32* %380, align 8
  br label %382

381:                                              ; preds = %372, %367, %360
  tail call void @utext_setNativeIndex_69(%struct.UText* %114, i64 %115) #12
  br label %382

382:                                              ; preds = %381, %378
  %383 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 35
  %384 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 36
  br label %385

385:                                              ; preds = %466, %382
  %386 = phi i64 [ %115, %382 ], [ %426, %466 ]
  %387 = load %struct.UText*, %struct.UText** %11, align 8
  %388 = getelementptr inbounds %struct.UText, %struct.UText* %387, i64 0, i32 8
  %389 = load i32, i32* %388, align 8
  %390 = getelementptr inbounds %struct.UText, %struct.UText* %387, i64 0, i32 9
  %391 = load i32, i32* %390, align 4
  %392 = icmp slt i32 %389, %391
  br i1 %392, label %393, label %404

393:                                              ; preds = %385
  %394 = getelementptr inbounds %struct.UText, %struct.UText* %387, i64 0, i32 10
  %395 = load i16*, i16** %394, align 8
  %396 = sext i32 %389 to i64
  %397 = getelementptr inbounds i16, i16* %395, i64 %396
  %398 = load i16, i16* %397, align 2
  %399 = icmp ult i16 %398, -10240
  br i1 %399, label %400, label %404

400:                                              ; preds = %393
  %401 = add nsw i32 %389, 1
  store i32 %401, i32* %388, align 8
  %402 = load i16, i16* %397, align 2
  %403 = zext i16 %402 to i32
  br label %406

404:                                              ; preds = %393, %385
  %405 = tail call i32 @utext_next32_69(%struct.UText* %387) #12
  br label %406

406:                                              ; preds = %404, %400
  %407 = phi i32 [ %403, %400 ], [ %405, %404 ]
  %408 = load %struct.UText*, %struct.UText** %11, align 8
  %409 = getelementptr inbounds %struct.UText, %struct.UText* %408, i64 0, i32 8
  %410 = load i32, i32* %409, align 8
  %411 = getelementptr inbounds %struct.UText, %struct.UText* %408, i64 0, i32 6
  %412 = load i32, i32* %411, align 4
  %413 = icmp sgt i32 %410, %412
  br i1 %413, label %419, label %414

414:                                              ; preds = %406
  %415 = getelementptr inbounds %struct.UText, %struct.UText* %408, i64 0, i32 7
  %416 = load i64, i64* %415, align 8
  %417 = sext i32 %410 to i64
  %418 = add nsw i64 %416, %417
  br label %425

419:                                              ; preds = %406
  %420 = getelementptr inbounds %struct.UText, %struct.UText* %408, i64 0, i32 11
  %421 = load %struct.UTextFuncs*, %struct.UTextFuncs** %420, align 8
  %422 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %421, i64 0, i32 10
  %423 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %422, align 8
  %424 = tail call i64 %423(%struct.UText* %408) #12
  br label %425

425:                                              ; preds = %419, %414
  %426 = phi i64 [ %418, %414 ], [ %424, %419 ]
  %427 = icmp eq i32 %407, %362
  br i1 %427, label %428, label %455

428:                                              ; preds = %425
  tail call void @_ZN6icu_6912RegexMatcher7MatchAtElaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i64 %386, i8 signext 0, i32* dereferenceable(4) %1)
  %429 = load i32, i32* %1, align 4
  %430 = icmp slt i32 %429, 1
  br i1 %430, label %431, label %841

431:                                              ; preds = %428
  %432 = load i8, i8* %38, align 2
  %433 = icmp eq i8 %432, 0
  br i1 %433, label %434, label %841

434:                                              ; preds = %431
  %435 = load %struct.UText*, %struct.UText** %11, align 8
  %436 = getelementptr inbounds %struct.UText, %struct.UText* %435, i64 0, i32 7
  %437 = load i64, i64* %436, align 8
  %438 = sub nsw i64 %426, %437
  %439 = icmp sgt i64 %438, -1
  br i1 %439, label %440, label %454

440:                                              ; preds = %434
  %441 = getelementptr inbounds %struct.UText, %struct.UText* %435, i64 0, i32 6
  %442 = load i32, i32* %441, align 4
  %443 = sext i32 %442 to i64
  %444 = icmp slt i64 %438, %443
  br i1 %444, label %445, label %454

445:                                              ; preds = %440
  %446 = getelementptr inbounds %struct.UText, %struct.UText* %435, i64 0, i32 10
  %447 = load i16*, i16** %446, align 8
  %448 = getelementptr inbounds i16, i16* %447, i64 %438
  %449 = load i16, i16* %448, align 2
  %450 = icmp ult i16 %449, -9216
  br i1 %450, label %451, label %454

451:                                              ; preds = %445
  %452 = trunc i64 %438 to i32
  %453 = getelementptr inbounds %struct.UText, %struct.UText* %435, i64 0, i32 8
  store i32 %452, i32* %453, align 8
  br label %455

454:                                              ; preds = %445, %440, %434
  tail call void @utext_setNativeIndex_69(%struct.UText* %435, i64 %426) #12
  br label %455

455:                                              ; preds = %451, %454, %425
  %456 = icmp sgt i64 %426, %138
  br i1 %456, label %457, label %459

457:                                              ; preds = %455
  store i8 0, i8* %38, align 2
  %458 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %458, align 8
  br label %841

459:                                              ; preds = %455
  %460 = load i8 (i8*, i64)*, i8 (i8*, i64)** %383, align 8
  %461 = icmp eq i8 (i8*, i64)* %460, null
  br i1 %461, label %466, label %462

462:                                              ; preds = %459
  %463 = load i8*, i8** %384, align 8
  %464 = tail call signext i8 %460(i8* %463, i64 %426) #12
  %465 = icmp eq i8 %464, 0
  br i1 %465, label %467, label %466

466:                                              ; preds = %462, %459
  br label %385

467:                                              ; preds = %462
  store i32 66323, i32* %1, align 4
  br label %841

468:                                              ; preds = %137
  %469 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  %470 = load i64, i64* %469, align 8
  %471 = icmp eq i64 %115, %470
  br i1 %471, label %472, label %538

472:                                              ; preds = %468
  tail call void @_ZN6icu_6912RegexMatcher7MatchAtElaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i64 %115, i8 signext 0, i32* dereferenceable(4) %1)
  %473 = load i32, i32* %1, align 4
  %474 = icmp slt i32 %473, 1
  br i1 %474, label %475, label %841

475:                                              ; preds = %472
  %476 = load i8, i8* %38, align 2
  %477 = icmp eq i8 %476, 0
  br i1 %477, label %478, label %841

478:                                              ; preds = %475
  %479 = load %struct.UText*, %struct.UText** %11, align 8
  %480 = getelementptr inbounds %struct.UText, %struct.UText* %479, i64 0, i32 7
  %481 = load i64, i64* %480, align 8
  %482 = sub nsw i64 %115, %481
  %483 = icmp sgt i64 %482, -1
  br i1 %483, label %484, label %498

484:                                              ; preds = %478
  %485 = getelementptr inbounds %struct.UText, %struct.UText* %479, i64 0, i32 6
  %486 = load i32, i32* %485, align 4
  %487 = sext i32 %486 to i64
  %488 = icmp slt i64 %482, %487
  br i1 %488, label %489, label %498

489:                                              ; preds = %484
  %490 = getelementptr inbounds %struct.UText, %struct.UText* %479, i64 0, i32 10
  %491 = load i16*, i16** %490, align 8
  %492 = getelementptr inbounds i16, i16* %491, i64 %482
  %493 = load i16, i16* %492, align 2
  %494 = icmp ult i16 %493, -9216
  br i1 %494, label %495, label %498

495:                                              ; preds = %489
  %496 = trunc i64 %482 to i32
  %497 = getelementptr inbounds %struct.UText, %struct.UText* %479, i64 0, i32 8
  store i32 %496, i32* %497, align 8
  br label %499

498:                                              ; preds = %489, %484, %478
  tail call void @utext_setNativeIndex_69(%struct.UText* %479, i64 %115) #12
  br label %499

499:                                              ; preds = %498, %495
  %500 = load %struct.UText*, %struct.UText** %11, align 8
  %501 = getelementptr inbounds %struct.UText, %struct.UText* %500, i64 0, i32 8
  %502 = load i32, i32* %501, align 8
  %503 = getelementptr inbounds %struct.UText, %struct.UText* %500, i64 0, i32 9
  %504 = load i32, i32* %503, align 4
  %505 = icmp slt i32 %502, %504
  br i1 %505, label %506, label %517

506:                                              ; preds = %499
  %507 = getelementptr inbounds %struct.UText, %struct.UText* %500, i64 0, i32 10
  %508 = load i16*, i16** %507, align 8
  %509 = sext i32 %502 to i64
  %510 = getelementptr inbounds i16, i16* %508, i64 %509
  %511 = load i16, i16* %510, align 2
  %512 = icmp ult i16 %511, -10240
  br i1 %512, label %513, label %517

513:                                              ; preds = %506
  %514 = add nsw i32 %502, 1
  store i32 %514, i32* %501, align 8
  %515 = load i16, i16* %510, align 2
  %516 = zext i16 %515 to i32
  br label %519

517:                                              ; preds = %506, %499
  %518 = tail call i32 @utext_next32_69(%struct.UText* %500) #12
  br label %519

519:                                              ; preds = %517, %513
  %520 = phi i32 [ %516, %513 ], [ %518, %517 ]
  %521 = load %struct.UText*, %struct.UText** %11, align 8
  %522 = getelementptr inbounds %struct.UText, %struct.UText* %521, i64 0, i32 8
  %523 = load i32, i32* %522, align 8
  %524 = getelementptr inbounds %struct.UText, %struct.UText* %521, i64 0, i32 6
  %525 = load i32, i32* %524, align 4
  %526 = icmp sgt i32 %523, %525
  br i1 %526, label %532, label %527

527:                                              ; preds = %519
  %528 = getelementptr inbounds %struct.UText, %struct.UText* %521, i64 0, i32 7
  %529 = load i64, i64* %528, align 8
  %530 = sext i32 %523 to i64
  %531 = add nsw i64 %529, %530
  br label %598

532:                                              ; preds = %519
  %533 = getelementptr inbounds %struct.UText, %struct.UText* %521, i64 0, i32 11
  %534 = load %struct.UTextFuncs*, %struct.UTextFuncs** %533, align 8
  %535 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %534, i64 0, i32 10
  %536 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %535, align 8
  %537 = tail call i64 %536(%struct.UText* %521) #12
  br label %598

538:                                              ; preds = %468
  %539 = getelementptr inbounds %struct.UText, %struct.UText* %114, i64 0, i32 7
  %540 = load i64, i64* %539, align 8
  %541 = sub nsw i64 %115, %540
  %542 = icmp sgt i64 %541, -1
  br i1 %542, label %543, label %557

543:                                              ; preds = %538
  %544 = getelementptr inbounds %struct.UText, %struct.UText* %114, i64 0, i32 6
  %545 = load i32, i32* %544, align 4
  %546 = sext i32 %545 to i64
  %547 = icmp slt i64 %541, %546
  br i1 %547, label %548, label %557

548:                                              ; preds = %543
  %549 = getelementptr inbounds %struct.UText, %struct.UText* %114, i64 0, i32 10
  %550 = load i16*, i16** %549, align 8
  %551 = getelementptr inbounds i16, i16* %550, i64 %541
  %552 = load i16, i16* %551, align 2
  %553 = icmp ult i16 %552, -9216
  br i1 %553, label %554, label %557

554:                                              ; preds = %548
  %555 = trunc i64 %541 to i32
  %556 = getelementptr inbounds %struct.UText, %struct.UText* %114, i64 0, i32 8
  store i32 %555, i32* %556, align 8
  br label %558

557:                                              ; preds = %548, %543, %538
  tail call void @utext_setNativeIndex_69(%struct.UText* %114, i64 %115) #12
  br label %558

558:                                              ; preds = %557, %554
  %559 = load %struct.UText*, %struct.UText** %11, align 8
  %560 = getelementptr inbounds %struct.UText, %struct.UText* %559, i64 0, i32 8
  %561 = load i32, i32* %560, align 8
  %562 = icmp sgt i32 %561, 0
  br i1 %562, label %563, label %574

563:                                              ; preds = %558
  %564 = getelementptr inbounds %struct.UText, %struct.UText* %559, i64 0, i32 10
  %565 = load i16*, i16** %564, align 8
  %566 = add nsw i32 %561, -1
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds i16, i16* %565, i64 %567
  %569 = load i16, i16* %568, align 2
  %570 = icmp ult i16 %569, -10240
  br i1 %570, label %571, label %574

571:                                              ; preds = %563
  store i32 %566, i32* %560, align 8
  %572 = load i16, i16* %568, align 2
  %573 = zext i16 %572 to i32
  br label %576

574:                                              ; preds = %563, %558
  %575 = tail call i32 @utext_previous32_69(%struct.UText* %559) #12
  br label %576

576:                                              ; preds = %574, %571
  %577 = phi i32 [ %573, %571 ], [ %575, %574 ]
  %578 = load %struct.UText*, %struct.UText** %11, align 8
  %579 = getelementptr inbounds %struct.UText, %struct.UText* %578, i64 0, i32 7
  %580 = load i64, i64* %579, align 8
  %581 = sub nsw i64 %115, %580
  %582 = icmp sgt i64 %581, -1
  br i1 %582, label %583, label %597

583:                                              ; preds = %576
  %584 = getelementptr inbounds %struct.UText, %struct.UText* %578, i64 0, i32 6
  %585 = load i32, i32* %584, align 4
  %586 = sext i32 %585 to i64
  %587 = icmp slt i64 %581, %586
  br i1 %587, label %588, label %597

588:                                              ; preds = %583
  %589 = getelementptr inbounds %struct.UText, %struct.UText* %578, i64 0, i32 10
  %590 = load i16*, i16** %589, align 8
  %591 = getelementptr inbounds i16, i16* %590, i64 %581
  %592 = load i16, i16* %591, align 2
  %593 = icmp ult i16 %592, -9216
  br i1 %593, label %594, label %597

594:                                              ; preds = %588
  %595 = trunc i64 %581 to i32
  %596 = getelementptr inbounds %struct.UText, %struct.UText* %578, i64 0, i32 8
  store i32 %595, i32* %596, align 8
  br label %598

597:                                              ; preds = %588, %583, %576
  tail call void @utext_setNativeIndex_69(%struct.UText* %578, i64 %115) #12
  br label %598

598:                                              ; preds = %594, %597, %527, %532
  %599 = phi i64 [ %531, %527 ], [ %537, %532 ], [ %115, %597 ], [ %115, %594 ]
  %600 = phi i32 [ %520, %527 ], [ %520, %532 ], [ %577, %597 ], [ %577, %594 ]
  %601 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %123, align 8
  %602 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %601, i64 0, i32 3
  %603 = load i32, i32* %602, align 8
  %604 = and i32 %603, 1
  %605 = icmp eq i32 %604, 0
  %606 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 35
  %607 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 36
  br i1 %605, label %692, label %608

608:                                              ; preds = %598, %686
  %609 = phi i64 [ %683, %686 ], [ %599, %598 ]
  %610 = phi i32 [ %664, %686 ], [ %600, %598 ]
  %611 = icmp eq i32 %610, 10
  br i1 %611, label %612, label %639

612:                                              ; preds = %608
  tail call void @_ZN6icu_6912RegexMatcher7MatchAtElaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i64 %609, i8 signext 0, i32* dereferenceable(4) %1)
  %613 = load i32, i32* %1, align 4
  %614 = icmp slt i32 %613, 1
  br i1 %614, label %615, label %841

615:                                              ; preds = %612
  %616 = load i8, i8* %38, align 2
  %617 = icmp eq i8 %616, 0
  br i1 %617, label %618, label %841

618:                                              ; preds = %615
  %619 = load %struct.UText*, %struct.UText** %11, align 8
  %620 = getelementptr inbounds %struct.UText, %struct.UText* %619, i64 0, i32 7
  %621 = load i64, i64* %620, align 8
  %622 = sub nsw i64 %609, %621
  %623 = icmp sgt i64 %622, -1
  br i1 %623, label %624, label %638

624:                                              ; preds = %618
  %625 = getelementptr inbounds %struct.UText, %struct.UText* %619, i64 0, i32 6
  %626 = load i32, i32* %625, align 4
  %627 = sext i32 %626 to i64
  %628 = icmp slt i64 %622, %627
  br i1 %628, label %629, label %638

629:                                              ; preds = %624
  %630 = getelementptr inbounds %struct.UText, %struct.UText* %619, i64 0, i32 10
  %631 = load i16*, i16** %630, align 8
  %632 = getelementptr inbounds i16, i16* %631, i64 %622
  %633 = load i16, i16* %632, align 2
  %634 = icmp ult i16 %633, -9216
  br i1 %634, label %635, label %638

635:                                              ; preds = %629
  %636 = trunc i64 %622 to i32
  %637 = getelementptr inbounds %struct.UText, %struct.UText* %619, i64 0, i32 8
  store i32 %636, i32* %637, align 8
  br label %639

638:                                              ; preds = %629, %624, %618
  tail call void @utext_setNativeIndex_69(%struct.UText* %619, i64 %609) #12
  br label %639

639:                                              ; preds = %635, %638, %608
  %640 = icmp slt i64 %609, %138
  br i1 %640, label %643, label %641

641:                                              ; preds = %639
  store i8 0, i8* %38, align 2
  %642 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %642, align 8
  br label %841

643:                                              ; preds = %639
  %644 = load %struct.UText*, %struct.UText** %11, align 8
  %645 = getelementptr inbounds %struct.UText, %struct.UText* %644, i64 0, i32 8
  %646 = load i32, i32* %645, align 8
  %647 = getelementptr inbounds %struct.UText, %struct.UText* %644, i64 0, i32 9
  %648 = load i32, i32* %647, align 4
  %649 = icmp slt i32 %646, %648
  br i1 %649, label %650, label %661

650:                                              ; preds = %643
  %651 = getelementptr inbounds %struct.UText, %struct.UText* %644, i64 0, i32 10
  %652 = load i16*, i16** %651, align 8
  %653 = sext i32 %646 to i64
  %654 = getelementptr inbounds i16, i16* %652, i64 %653
  %655 = load i16, i16* %654, align 2
  %656 = icmp ult i16 %655, -10240
  br i1 %656, label %657, label %661

657:                                              ; preds = %650
  %658 = add nsw i32 %646, 1
  store i32 %658, i32* %645, align 8
  %659 = load i16, i16* %654, align 2
  %660 = zext i16 %659 to i32
  br label %663

661:                                              ; preds = %650, %643
  %662 = tail call i32 @utext_next32_69(%struct.UText* %644) #12
  br label %663

663:                                              ; preds = %661, %657
  %664 = phi i32 [ %660, %657 ], [ %662, %661 ]
  %665 = load %struct.UText*, %struct.UText** %11, align 8
  %666 = getelementptr inbounds %struct.UText, %struct.UText* %665, i64 0, i32 8
  %667 = load i32, i32* %666, align 8
  %668 = getelementptr inbounds %struct.UText, %struct.UText* %665, i64 0, i32 6
  %669 = load i32, i32* %668, align 4
  %670 = icmp sgt i32 %667, %669
  br i1 %670, label %676, label %671

671:                                              ; preds = %663
  %672 = getelementptr inbounds %struct.UText, %struct.UText* %665, i64 0, i32 7
  %673 = load i64, i64* %672, align 8
  %674 = sext i32 %667 to i64
  %675 = add nsw i64 %673, %674
  br label %682

676:                                              ; preds = %663
  %677 = getelementptr inbounds %struct.UText, %struct.UText* %665, i64 0, i32 11
  %678 = load %struct.UTextFuncs*, %struct.UTextFuncs** %677, align 8
  %679 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %678, i64 0, i32 10
  %680 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %679, align 8
  %681 = tail call i64 %680(%struct.UText* %665) #12
  br label %682

682:                                              ; preds = %676, %671
  %683 = phi i64 [ %675, %671 ], [ %681, %676 ]
  %684 = load i8 (i8*, i64)*, i8 (i8*, i64)** %606, align 8
  %685 = icmp eq i8 (i8*, i64)* %684, null
  br i1 %685, label %686, label %687

686:                                              ; preds = %682, %687
  br label %608

687:                                              ; preds = %682
  %688 = load i8*, i8** %607, align 8
  %689 = tail call signext i8 %684(i8* %688, i64 %683) #12
  %690 = icmp eq i8 %689, 0
  br i1 %690, label %691, label %686

691:                                              ; preds = %687
  store i32 66323, i32* %1, align 4
  br label %841

692:                                              ; preds = %598, %834
  %693 = phi i64 [ %831, %834 ], [ %599, %598 ]
  %694 = phi i32 [ %812, %834 ], [ %600, %598 ]
  %695 = and i32 %694, -8368
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %697, label %786

697:                                              ; preds = %692
  switch i32 %694, label %786 [
    i32 13, label %698
    i32 10, label %758
    i32 11, label %758
    i32 12, label %758
    i32 133, label %758
    i32 8232, label %758
    i32 8233, label %758
  ]

698:                                              ; preds = %697
  %699 = load i64, i64* %121, align 8
  %700 = icmp slt i64 %693, %699
  br i1 %700, label %701, label %758

701:                                              ; preds = %698
  %702 = load %struct.UText*, %struct.UText** %11, align 8
  %703 = getelementptr inbounds %struct.UText, %struct.UText* %702, i64 0, i32 8
  %704 = load i32, i32* %703, align 8
  %705 = getelementptr inbounds %struct.UText, %struct.UText* %702, i64 0, i32 9
  %706 = load i32, i32* %705, align 4
  %707 = icmp slt i32 %704, %706
  br i1 %707, label %708, label %717

708:                                              ; preds = %701
  %709 = getelementptr inbounds %struct.UText, %struct.UText* %702, i64 0, i32 10
  %710 = load i16*, i16** %709, align 8
  %711 = sext i32 %704 to i64
  %712 = getelementptr inbounds i16, i16* %710, i64 %711
  %713 = load i16, i16* %712, align 2
  %714 = icmp ult i16 %713, -10240
  br i1 %714, label %715, label %717

715:                                              ; preds = %708
  %716 = zext i16 %713 to i32
  br label %719

717:                                              ; preds = %708, %701
  %718 = tail call i32 @utext_current32_69(%struct.UText* %702) #12
  br label %719

719:                                              ; preds = %717, %715
  %720 = phi i32 [ %716, %715 ], [ %718, %717 ]
  %721 = icmp eq i32 %720, 10
  br i1 %721, label %722, label %758

722:                                              ; preds = %719
  %723 = load %struct.UText*, %struct.UText** %11, align 8
  %724 = getelementptr inbounds %struct.UText, %struct.UText* %723, i64 0, i32 8
  %725 = load i32, i32* %724, align 8
  %726 = getelementptr inbounds %struct.UText, %struct.UText* %723, i64 0, i32 9
  %727 = load i32, i32* %726, align 4
  %728 = icmp slt i32 %725, %727
  br i1 %728, label %729, label %738

729:                                              ; preds = %722
  %730 = getelementptr inbounds %struct.UText, %struct.UText* %723, i64 0, i32 10
  %731 = load i16*, i16** %730, align 8
  %732 = sext i32 %725 to i64
  %733 = getelementptr inbounds i16, i16* %731, i64 %732
  %734 = load i16, i16* %733, align 2
  %735 = icmp ult i16 %734, -10240
  br i1 %735, label %736, label %738

736:                                              ; preds = %729
  %737 = add nsw i32 %725, 1
  store i32 %737, i32* %724, align 8
  br label %740

738:                                              ; preds = %729, %722
  %739 = tail call i32 @utext_next32_69(%struct.UText* %723) #12
  br label %740

740:                                              ; preds = %738, %736
  %741 = load %struct.UText*, %struct.UText** %11, align 8
  %742 = getelementptr inbounds %struct.UText, %struct.UText* %741, i64 0, i32 8
  %743 = load i32, i32* %742, align 8
  %744 = getelementptr inbounds %struct.UText, %struct.UText* %741, i64 0, i32 6
  %745 = load i32, i32* %744, align 4
  %746 = icmp sgt i32 %743, %745
  br i1 %746, label %752, label %747

747:                                              ; preds = %740
  %748 = getelementptr inbounds %struct.UText, %struct.UText* %741, i64 0, i32 7
  %749 = load i64, i64* %748, align 8
  %750 = sext i32 %743 to i64
  %751 = add nsw i64 %749, %750
  br label %758

752:                                              ; preds = %740
  %753 = getelementptr inbounds %struct.UText, %struct.UText* %741, i64 0, i32 11
  %754 = load %struct.UTextFuncs*, %struct.UTextFuncs** %753, align 8
  %755 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %754, i64 0, i32 10
  %756 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %755, align 8
  %757 = tail call i64 %756(%struct.UText* %741) #12
  br label %758

758:                                              ; preds = %697, %697, %697, %697, %697, %697, %747, %752, %719, %698
  %759 = phi i64 [ %693, %719 ], [ %693, %698 ], [ %751, %747 ], [ %757, %752 ], [ %693, %697 ], [ %693, %697 ], [ %693, %697 ], [ %693, %697 ], [ %693, %697 ], [ %693, %697 ]
  tail call void @_ZN6icu_6912RegexMatcher7MatchAtElaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i64 %759, i8 signext 0, i32* dereferenceable(4) %1)
  %760 = load i32, i32* %1, align 4
  %761 = icmp slt i32 %760, 1
  br i1 %761, label %762, label %841

762:                                              ; preds = %758
  %763 = load i8, i8* %38, align 2
  %764 = icmp eq i8 %763, 0
  br i1 %764, label %765, label %841

765:                                              ; preds = %762
  %766 = load %struct.UText*, %struct.UText** %11, align 8
  %767 = getelementptr inbounds %struct.UText, %struct.UText* %766, i64 0, i32 7
  %768 = load i64, i64* %767, align 8
  %769 = sub nsw i64 %759, %768
  %770 = icmp sgt i64 %769, -1
  br i1 %770, label %771, label %785

771:                                              ; preds = %765
  %772 = getelementptr inbounds %struct.UText, %struct.UText* %766, i64 0, i32 6
  %773 = load i32, i32* %772, align 4
  %774 = sext i32 %773 to i64
  %775 = icmp slt i64 %769, %774
  br i1 %775, label %776, label %785

776:                                              ; preds = %771
  %777 = getelementptr inbounds %struct.UText, %struct.UText* %766, i64 0, i32 10
  %778 = load i16*, i16** %777, align 8
  %779 = getelementptr inbounds i16, i16* %778, i64 %769
  %780 = load i16, i16* %779, align 2
  %781 = icmp ult i16 %780, -9216
  br i1 %781, label %782, label %785

782:                                              ; preds = %776
  %783 = trunc i64 %769 to i32
  %784 = getelementptr inbounds %struct.UText, %struct.UText* %766, i64 0, i32 8
  store i32 %783, i32* %784, align 8
  br label %786

785:                                              ; preds = %776, %771, %765
  tail call void @utext_setNativeIndex_69(%struct.UText* %766, i64 %759) #12
  br label %786

786:                                              ; preds = %697, %692, %782, %785
  %787 = phi i64 [ %759, %785 ], [ %759, %782 ], [ %693, %692 ], [ %693, %697 ]
  %788 = icmp slt i64 %787, %138
  br i1 %788, label %791, label %789

789:                                              ; preds = %786
  store i8 0, i8* %38, align 2
  %790 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %790, align 8
  br label %841

791:                                              ; preds = %786
  %792 = load %struct.UText*, %struct.UText** %11, align 8
  %793 = getelementptr inbounds %struct.UText, %struct.UText* %792, i64 0, i32 8
  %794 = load i32, i32* %793, align 8
  %795 = getelementptr inbounds %struct.UText, %struct.UText* %792, i64 0, i32 9
  %796 = load i32, i32* %795, align 4
  %797 = icmp slt i32 %794, %796
  br i1 %797, label %798, label %809

798:                                              ; preds = %791
  %799 = getelementptr inbounds %struct.UText, %struct.UText* %792, i64 0, i32 10
  %800 = load i16*, i16** %799, align 8
  %801 = sext i32 %794 to i64
  %802 = getelementptr inbounds i16, i16* %800, i64 %801
  %803 = load i16, i16* %802, align 2
  %804 = icmp ult i16 %803, -10240
  br i1 %804, label %805, label %809

805:                                              ; preds = %798
  %806 = add nsw i32 %794, 1
  store i32 %806, i32* %793, align 8
  %807 = load i16, i16* %802, align 2
  %808 = zext i16 %807 to i32
  br label %811

809:                                              ; preds = %798, %791
  %810 = tail call i32 @utext_next32_69(%struct.UText* %792) #12
  br label %811

811:                                              ; preds = %809, %805
  %812 = phi i32 [ %808, %805 ], [ %810, %809 ]
  %813 = load %struct.UText*, %struct.UText** %11, align 8
  %814 = getelementptr inbounds %struct.UText, %struct.UText* %813, i64 0, i32 8
  %815 = load i32, i32* %814, align 8
  %816 = getelementptr inbounds %struct.UText, %struct.UText* %813, i64 0, i32 6
  %817 = load i32, i32* %816, align 4
  %818 = icmp sgt i32 %815, %817
  br i1 %818, label %824, label %819

819:                                              ; preds = %811
  %820 = getelementptr inbounds %struct.UText, %struct.UText* %813, i64 0, i32 7
  %821 = load i64, i64* %820, align 8
  %822 = sext i32 %815 to i64
  %823 = add nsw i64 %821, %822
  br label %830

824:                                              ; preds = %811
  %825 = getelementptr inbounds %struct.UText, %struct.UText* %813, i64 0, i32 11
  %826 = load %struct.UTextFuncs*, %struct.UTextFuncs** %825, align 8
  %827 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %826, i64 0, i32 10
  %828 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %827, align 8
  %829 = tail call i64 %828(%struct.UText* %813) #12
  br label %830

830:                                              ; preds = %824, %819
  %831 = phi i64 [ %823, %819 ], [ %829, %824 ]
  %832 = load i8 (i8*, i64)*, i8 (i8*, i64)** %606, align 8
  %833 = icmp eq i8 (i8*, i64)* %832, null
  br i1 %833, label %834, label %835

834:                                              ; preds = %830, %835
  br label %692

835:                                              ; preds = %830
  %836 = load i8*, i8** %607, align 8
  %837 = tail call signext i8 %832(i8* %836, i64 %831) #12
  %838 = icmp eq i8 %837, 0
  br i1 %838, label %839, label %834

839:                                              ; preds = %835
  store i32 66323, i32* %1, align 4
  br label %841

840:                                              ; preds = %137
  tail call void @abort() #13
  unreachable

841:                                              ; preds = %615, %612, %762, %758, %431, %428, %323, %320, %147, %221, %141, %457, %349, %839, %691, %467, %359, %220, %50, %111, %153, %228, %232, %229, %475, %472, %789, %641, %131, %2, %27, %9
  %842 = phi i8 [ 0, %9 ], [ %28, %27 ], [ 0, %2 ], [ 0, %50 ], [ 0, %111 ], [ 0, %131 ], [ 0, %228 ], [ %233, %232 ], [ 0, %153 ], [ 0, %229 ], [ 0, %641 ], [ 0, %789 ], [ 0, %472 ], [ 1, %475 ], [ 0, %220 ], [ 0, %359 ], [ 0, %467 ], [ 0, %691 ], [ 0, %839 ], [ 0, %349 ], [ 0, %457 ], [ 0, %141 ], [ 1, %147 ], [ 0, %221 ], [ 0, %320 ], [ 1, %323 ], [ 0, %428 ], [ 1, %431 ], [ 1, %762 ], [ 0, %758 ], [ 1, %615 ], [ 0, %612 ]
  ret i8 %842
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6912RegexMatcher14findUsingChunkER10UErrorCode(%"class.icu_69::RegexMatcher"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  br label %11

11:                                               ; preds = %7, %2
  %12 = phi i32 [ %10, %7 ], [ %5, %2 ]
  %13 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %14 = load %struct.UText*, %struct.UText** %13, align 8
  %15 = getelementptr inbounds %struct.UText, %struct.UText* %14, i64 0, i32 10
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  br i1 %19, label %50, label %21

21:                                               ; preds = %11
  store i64 %4, i64* %20, align 8
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, %4
  br i1 %24, label %25, label %55

25:                                               ; preds = %21
  %26 = sext i32 %12 to i64
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  %28 = load i64, i64* %27, align 8
  %29 = icmp sgt i64 %28, %26
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  store i8 0, i8* %17, align 2
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %31, align 8
  br label %393

32:                                               ; preds = %25
  %33 = add nsw i32 %12, 1
  %34 = getelementptr inbounds i16, i16* %16, i64 %26
  %35 = load i16, i16* %34, align 2
  %36 = and i16 %35, -1024
  %37 = icmp eq i16 %36, -10240
  br i1 %37, label %38, label %55

38:                                               ; preds = %32
  %39 = sext i32 %33 to i64
  %40 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, %39
  br i1 %42, label %55, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds i16, i16* %16, i64 %39
  %45 = load i16, i16* %44, align 2
  %46 = and i16 %45, -1024
  %47 = icmp eq i16 %46, -9216
  %48 = add nsw i32 %12, 2
  %49 = select i1 %47, i32 %48, i32 %33
  br label %55

50:                                               ; preds = %11
  %51 = load i64, i64* %20, align 8
  %52 = icmp sgt i64 %51, -1
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %54, align 8
  br label %393

55:                                               ; preds = %43, %38, %50, %21, %32
  %56 = phi i32 [ %33, %38 ], [ %33, %32 ], [ %12, %21 ], [ %12, %50 ], [ %49, %43 ]
  %57 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %60 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %59, align 8
  %61 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %60, i64 0, i32 9
  %62 = load i32, i32* %61, align 4
  %63 = trunc i64 %58 to i32
  %64 = sub i32 %63, %62
  %65 = icmp sgt i32 %56, %64
  br i1 %65, label %66, label %68

66:                                               ; preds = %55
  store i8 0, i8* %17, align 2
  %67 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %67, align 8
  br label %393

68:                                               ; preds = %55
  %69 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %60, i64 0, i32 13
  %70 = load i32, i32* %69, align 8
  switch i32 %70, label %392 [
    i32 0, label %74
    i32 3, label %119
    i32 2, label %71
    i32 5, label %196
    i32 1, label %196
    i32 4, label %249
  ]

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 35
  %73 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 36
  br label %130

74:                                               ; preds = %68
  tail call void @_ZN6icu_6912RegexMatcher12MatchChunkAtEiaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 %56, i8 signext 0, i32* dereferenceable(4) %1)
  %75 = load i32, i32* %1, align 4
  %76 = icmp slt i32 %75, 1
  br i1 %76, label %77, label %393

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 35
  %79 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 36
  br label %80

80:                                               ; preds = %77, %116
  %81 = phi i32 [ %56, %77 ], [ %107, %116 ]
  %82 = load i8, i8* %17, align 2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %393

84:                                               ; preds = %80
  %85 = icmp slt i32 %81, %64
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %87, align 8
  br label %393

88:                                               ; preds = %84
  %89 = add nsw i32 %81, 1
  %90 = sext i32 %81 to i64
  %91 = getelementptr inbounds i16, i16* %16, i64 %90
  %92 = load i16, i16* %91, align 2
  %93 = and i16 %92, -1024
  %94 = icmp eq i16 %93, -10240
  br i1 %94, label %95, label %106

95:                                               ; preds = %88
  %96 = sext i32 %89 to i64
  %97 = load i64, i64* %57, align 8
  %98 = icmp eq i64 %97, %96
  br i1 %98, label %106, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds i16, i16* %16, i64 %96
  %101 = load i16, i16* %100, align 2
  %102 = and i16 %101, -1024
  %103 = icmp eq i16 %102, -9216
  %104 = add nsw i32 %81, 2
  %105 = select i1 %103, i32 %104, i32 %89
  br label %106

106:                                              ; preds = %99, %95, %88
  %107 = phi i32 [ %89, %95 ], [ %89, %88 ], [ %105, %99 ]
  %108 = load i8 (i8*, i64)*, i8 (i8*, i64)** %78, align 8
  %109 = icmp eq i8 (i8*, i64)* %108, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %106
  %111 = sext i32 %107 to i64
  %112 = load i8*, i8** %79, align 8
  %113 = tail call signext i8 %108(i8* %112, i64 %111) #12
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %110
  store i32 66323, i32* %1, align 4
  br label %393

116:                                              ; preds = %106, %110
  tail call void @_ZN6icu_6912RegexMatcher12MatchChunkAtEiaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 %107, i8 signext 0, i32* dereferenceable(4) %1)
  %117 = load i32, i32* %1, align 4
  %118 = icmp slt i32 %117, 1
  br i1 %118, label %80, label %393

119:                                              ; preds = %68
  %120 = sext i32 %56 to i64
  %121 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  %122 = load i64, i64* %121, align 8
  %123 = icmp slt i64 %122, %120
  br i1 %123, label %124, label %125

124:                                              ; preds = %119
  store i8 0, i8* %17, align 2
  br label %393

125:                                              ; preds = %119
  tail call void @_ZN6icu_6912RegexMatcher12MatchChunkAtEiaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 %56, i8 signext 0, i32* dereferenceable(4) %1)
  %126 = load i32, i32* %1, align 4
  %127 = icmp slt i32 %126, 1
  br i1 %127, label %128, label %393

128:                                              ; preds = %125
  %129 = load i8, i8* %17, align 2
  br label %393

130:                                              ; preds = %194, %71
  %131 = phi i32 [ %56, %71 ], [ %155, %194 ]
  %132 = add nsw i32 %131, 1
  %133 = sext i32 %131 to i64
  %134 = getelementptr inbounds i16, i16* %16, i64 %133
  %135 = load i16, i16* %134, align 2
  %136 = zext i16 %135 to i32
  %137 = and i32 %136, 64512
  %138 = icmp eq i32 %137, 55296
  br i1 %138, label %139, label %154

139:                                              ; preds = %130
  %140 = sext i32 %132 to i64
  %141 = load i64, i64* %57, align 8
  %142 = icmp eq i64 %141, %140
  br i1 %142, label %154, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds i16, i16* %16, i64 %140
  %145 = load i16, i16* %144, align 2
  %146 = zext i16 %145 to i32
  %147 = and i32 %146, 64512
  %148 = icmp eq i32 %147, 56320
  br i1 %148, label %149, label %154

149:                                              ; preds = %143
  %150 = add nsw i32 %131, 2
  %151 = shl nuw nsw i32 %136, 10
  %152 = add nsw i32 %151, -56613888
  %153 = add nsw i32 %152, %146
  br label %154

154:                                              ; preds = %143, %149, %139, %130
  %155 = phi i32 [ %132, %130 ], [ %150, %149 ], [ %132, %143 ], [ %132, %139 ]
  %156 = phi i32 [ %136, %130 ], [ %153, %149 ], [ %136, %143 ], [ %136, %139 ]
  %157 = icmp slt i32 %156, 256
  %158 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %59, align 8
  br i1 %157, label %159, label %171

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %158, i64 0, i32 18
  %161 = load %"struct.icu_69::Regex8BitSet"*, %"struct.icu_69::Regex8BitSet"** %160, align 8
  %162 = ashr i32 %156, 3
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds %"struct.icu_69::Regex8BitSet", %"struct.icu_69::Regex8BitSet"* %161, i64 0, i32 0, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = sext i8 %165 to i32
  %167 = and i32 %156, 7
  %168 = shl i32 1, %167
  %169 = and i32 %168, %166
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %182, label %176

171:                                              ; preds = %154
  %172 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %158, i64 0, i32 16
  %173 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %172, align 8
  %174 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %173, i32 %156) #12
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %182, label %176

176:                                              ; preds = %159, %171
  tail call void @_ZN6icu_6912RegexMatcher12MatchChunkAtEiaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 %131, i8 signext 0, i32* dereferenceable(4) %1)
  %177 = load i32, i32* %1, align 4
  %178 = icmp slt i32 %177, 1
  br i1 %178, label %179, label %393

179:                                              ; preds = %176
  %180 = load i8, i8* %17, align 2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %182, label %393

182:                                              ; preds = %159, %179, %171
  %183 = icmp sgt i32 %155, %64
  br i1 %183, label %184, label %186

184:                                              ; preds = %182
  store i8 0, i8* %17, align 2
  %185 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %185, align 8
  br label %393

186:                                              ; preds = %182
  %187 = load i8 (i8*, i64)*, i8 (i8*, i64)** %72, align 8
  %188 = icmp eq i8 (i8*, i64)* %187, null
  br i1 %188, label %194, label %189

189:                                              ; preds = %186
  %190 = sext i32 %155 to i64
  %191 = load i8*, i8** %73, align 8
  %192 = tail call signext i8 %187(i8* %191, i64 %190) #12
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %195, label %194

194:                                              ; preds = %189, %186
  br label %130

195:                                              ; preds = %189
  store i32 66323, i32* %1, align 4
  br label %393

196:                                              ; preds = %68, %68
  %197 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %60, i64 0, i32 17
  %198 = load i32, i32* %197, align 8
  %199 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 35
  %200 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 36
  br label %201

201:                                              ; preds = %247, %196
  %202 = phi i32 [ %56, %196 ], [ %226, %247 ]
  %203 = add nsw i32 %202, 1
  %204 = sext i32 %202 to i64
  %205 = getelementptr inbounds i16, i16* %16, i64 %204
  %206 = load i16, i16* %205, align 2
  %207 = zext i16 %206 to i32
  %208 = and i32 %207, 64512
  %209 = icmp eq i32 %208, 55296
  br i1 %209, label %210, label %225

210:                                              ; preds = %201
  %211 = sext i32 %203 to i64
  %212 = load i64, i64* %57, align 8
  %213 = icmp eq i64 %212, %211
  br i1 %213, label %225, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds i16, i16* %16, i64 %211
  %216 = load i16, i16* %215, align 2
  %217 = zext i16 %216 to i32
  %218 = and i32 %217, 64512
  %219 = icmp eq i32 %218, 56320
  br i1 %219, label %220, label %225

220:                                              ; preds = %214
  %221 = add nsw i32 %202, 2
  %222 = shl nuw nsw i32 %207, 10
  %223 = add nsw i32 %222, -56613888
  %224 = add nsw i32 %223, %217
  br label %225

225:                                              ; preds = %214, %220, %210, %201
  %226 = phi i32 [ %203, %201 ], [ %221, %220 ], [ %203, %214 ], [ %203, %210 ]
  %227 = phi i32 [ %207, %201 ], [ %224, %220 ], [ %207, %214 ], [ %207, %210 ]
  %228 = icmp eq i32 %227, %198
  br i1 %228, label %229, label %235

229:                                              ; preds = %225
  tail call void @_ZN6icu_6912RegexMatcher12MatchChunkAtEiaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 %202, i8 signext 0, i32* dereferenceable(4) %1)
  %230 = load i32, i32* %1, align 4
  %231 = icmp slt i32 %230, 1
  br i1 %231, label %232, label %393

232:                                              ; preds = %229
  %233 = load i8, i8* %17, align 2
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %235, label %393

235:                                              ; preds = %232, %225
  %236 = icmp sgt i32 %226, %64
  br i1 %236, label %237, label %239

237:                                              ; preds = %235
  store i8 0, i8* %17, align 2
  %238 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %238, align 8
  br label %393

239:                                              ; preds = %235
  %240 = load i8 (i8*, i64)*, i8 (i8*, i64)** %199, align 8
  %241 = icmp eq i8 (i8*, i64)* %240, null
  br i1 %241, label %247, label %242

242:                                              ; preds = %239
  %243 = sext i32 %226 to i64
  %244 = load i8*, i8** %200, align 8
  %245 = tail call signext i8 %240(i8* %244, i64 %243) #12
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %248, label %247

247:                                              ; preds = %242, %239
  br label %201

248:                                              ; preds = %242
  store i32 66323, i32* %1, align 4
  br label %393

249:                                              ; preds = %68
  %250 = sext i32 %56 to i64
  %251 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  %252 = load i64, i64* %251, align 8
  %253 = icmp eq i64 %252, %250
  br i1 %253, label %254, label %277

254:                                              ; preds = %249
  tail call void @_ZN6icu_6912RegexMatcher12MatchChunkAtEiaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 %56, i8 signext 0, i32* dereferenceable(4) %1)
  %255 = load i32, i32* %1, align 4
  %256 = icmp slt i32 %255, 1
  br i1 %256, label %257, label %393

257:                                              ; preds = %254
  %258 = load i8, i8* %17, align 2
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %260, label %393

260:                                              ; preds = %257
  %261 = add nsw i32 %56, 1
  %262 = getelementptr inbounds i16, i16* %16, i64 %250
  %263 = load i16, i16* %262, align 2
  %264 = and i16 %263, -1024
  %265 = icmp eq i16 %264, -10240
  br i1 %265, label %266, label %277

266:                                              ; preds = %260
  %267 = sext i32 %261 to i64
  %268 = load i64, i64* %57, align 8
  %269 = icmp eq i64 %268, %267
  br i1 %269, label %277, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds i16, i16* %16, i64 %267
  %272 = load i16, i16* %271, align 2
  %273 = and i16 %272, -1024
  %274 = icmp eq i16 %273, -9216
  %275 = add nsw i32 %56, 2
  %276 = select i1 %274, i32 %275, i32 %261
  br label %277

277:                                              ; preds = %270, %266, %260, %249
  %278 = phi i32 [ %261, %266 ], [ %261, %260 ], [ %56, %249 ], [ %276, %270 ]
  %279 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %59, align 8
  %280 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %279, i64 0, i32 3
  %281 = load i32, i32* %280, align 8
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 35
  %285 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 36
  br i1 %283, label %332, label %286

286:                                              ; preds = %277, %325
  %287 = phi i32 [ %322, %325 ], [ %278, %277 ]
  %288 = add nsw i32 %287, -1
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i16, i16* %16, i64 %289
  %291 = load i16, i16* %290, align 2
  %292 = icmp eq i16 %291, 10
  br i1 %292, label %293, label %299

293:                                              ; preds = %286
  tail call void @_ZN6icu_6912RegexMatcher12MatchChunkAtEiaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 %287, i8 signext 0, i32* dereferenceable(4) %1)
  %294 = load i32, i32* %1, align 4
  %295 = icmp slt i32 %294, 1
  br i1 %295, label %296, label %393

296:                                              ; preds = %293
  %297 = load i8, i8* %17, align 2
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %299, label %393

299:                                              ; preds = %296, %286
  %300 = icmp slt i32 %287, %64
  br i1 %300, label %303, label %301

301:                                              ; preds = %299
  store i8 0, i8* %17, align 2
  %302 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %302, align 8
  br label %393

303:                                              ; preds = %299
  %304 = add nsw i32 %287, 1
  %305 = sext i32 %287 to i64
  %306 = getelementptr inbounds i16, i16* %16, i64 %305
  %307 = load i16, i16* %306, align 2
  %308 = and i16 %307, -1024
  %309 = icmp eq i16 %308, -10240
  br i1 %309, label %310, label %321

310:                                              ; preds = %303
  %311 = sext i32 %304 to i64
  %312 = load i64, i64* %57, align 8
  %313 = icmp eq i64 %312, %311
  br i1 %313, label %321, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds i16, i16* %16, i64 %311
  %316 = load i16, i16* %315, align 2
  %317 = and i16 %316, -1024
  %318 = icmp eq i16 %317, -9216
  %319 = add nsw i32 %287, 2
  %320 = select i1 %318, i32 %319, i32 %304
  br label %321

321:                                              ; preds = %314, %310, %303
  %322 = phi i32 [ %304, %310 ], [ %304, %303 ], [ %320, %314 ]
  %323 = load i8 (i8*, i64)*, i8 (i8*, i64)** %284, align 8
  %324 = icmp eq i8 (i8*, i64)* %323, null
  br i1 %324, label %325, label %326

325:                                              ; preds = %321, %326
  br label %286

326:                                              ; preds = %321
  %327 = sext i32 %322 to i64
  %328 = load i8*, i8** %285, align 8
  %329 = tail call signext i8 %323(i8* %328, i64 %327) #12
  %330 = icmp eq i8 %329, 0
  br i1 %330, label %331, label %325

331:                                              ; preds = %326
  store i32 66323, i32* %1, align 4
  br label %393

332:                                              ; preds = %277, %385
  %333 = phi i32 [ %382, %385 ], [ %278, %277 ]
  %334 = add nsw i32 %333, -1
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds i16, i16* %16, i64 %335
  %337 = load i16, i16* %336, align 2
  %338 = and i16 %337, -8368
  %339 = icmp eq i16 %338, 0
  br i1 %339, label %340, label %358

340:                                              ; preds = %332
  switch i16 %337, label %358 [
    i16 13, label %341
    i16 10, label %351
    i16 11, label %351
    i16 12, label %351
    i16 133, label %351
    i16 8232, label %351
    i16 8233, label %351
  ]

341:                                              ; preds = %340
  %342 = sext i32 %333 to i64
  %343 = load i64, i64* %57, align 8
  %344 = icmp sgt i64 %343, %342
  br i1 %344, label %345, label %351

345:                                              ; preds = %341
  %346 = getelementptr inbounds i16, i16* %16, i64 %342
  %347 = load i16, i16* %346, align 2
  %348 = icmp eq i16 %347, 10
  %349 = zext i1 %348 to i32
  %350 = add nsw i32 %333, %349
  br label %351

351:                                              ; preds = %340, %340, %340, %340, %340, %340, %345, %341
  %352 = phi i32 [ %333, %341 ], [ %350, %345 ], [ %333, %340 ], [ %333, %340 ], [ %333, %340 ], [ %333, %340 ], [ %333, %340 ], [ %333, %340 ]
  tail call void @_ZN6icu_6912RegexMatcher12MatchChunkAtEiaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 %352, i8 signext 0, i32* dereferenceable(4) %1)
  %353 = load i32, i32* %1, align 4
  %354 = icmp slt i32 %353, 1
  br i1 %354, label %355, label %393

355:                                              ; preds = %351
  %356 = load i8, i8* %17, align 2
  %357 = icmp eq i8 %356, 0
  br i1 %357, label %358, label %393

358:                                              ; preds = %340, %332, %355
  %359 = phi i32 [ %352, %355 ], [ %333, %332 ], [ %333, %340 ]
  %360 = icmp slt i32 %359, %64
  br i1 %360, label %363, label %361

361:                                              ; preds = %358
  store i8 0, i8* %17, align 2
  %362 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %362, align 8
  br label %393

363:                                              ; preds = %358
  %364 = add nsw i32 %359, 1
  %365 = sext i32 %359 to i64
  %366 = getelementptr inbounds i16, i16* %16, i64 %365
  %367 = load i16, i16* %366, align 2
  %368 = and i16 %367, -1024
  %369 = icmp eq i16 %368, -10240
  br i1 %369, label %370, label %381

370:                                              ; preds = %363
  %371 = sext i32 %364 to i64
  %372 = load i64, i64* %57, align 8
  %373 = icmp eq i64 %372, %371
  br i1 %373, label %381, label %374

374:                                              ; preds = %370
  %375 = getelementptr inbounds i16, i16* %16, i64 %371
  %376 = load i16, i16* %375, align 2
  %377 = and i16 %376, -1024
  %378 = icmp eq i16 %377, -9216
  %379 = add nsw i32 %359, 2
  %380 = select i1 %378, i32 %379, i32 %364
  br label %381

381:                                              ; preds = %374, %370, %363
  %382 = phi i32 [ %364, %370 ], [ %364, %363 ], [ %380, %374 ]
  %383 = load i8 (i8*, i64)*, i8 (i8*, i64)** %284, align 8
  %384 = icmp eq i8 (i8*, i64)* %383, null
  br i1 %384, label %385, label %386

385:                                              ; preds = %381, %386
  br label %332

386:                                              ; preds = %381
  %387 = sext i32 %382 to i64
  %388 = load i8*, i8** %285, align 8
  %389 = tail call signext i8 %383(i8* %388, i64 %387) #12
  %390 = icmp eq i8 %389, 0
  br i1 %390, label %391, label %385

391:                                              ; preds = %386
  store i32 66323, i32* %1, align 4
  br label %393

392:                                              ; preds = %68
  tail call void @abort() #13
  unreachable

393:                                              ; preds = %293, %296, %351, %355, %232, %229, %179, %176, %116, %80, %74, %237, %184, %391, %331, %248, %195, %115, %66, %301, %361, %254, %257, %125, %128, %124, %86, %53, %30
  %394 = phi i8 [ 0, %30 ], [ 0, %53 ], [ 0, %66 ], [ 0, %124 ], [ %129, %128 ], [ 0, %86 ], [ 0, %125 ], [ 0, %301 ], [ 0, %361 ], [ 0, %254 ], [ 1, %257 ], [ 0, %115 ], [ 0, %195 ], [ 0, %248 ], [ 0, %331 ], [ 0, %391 ], [ 0, %184 ], [ 0, %237 ], [ 0, %74 ], [ 0, %116 ], [ 1, %80 ], [ 0, %176 ], [ 1, %179 ], [ 0, %229 ], [ 1, %232 ], [ 1, %355 ], [ 0, %351 ], [ 1, %296 ], [ 0, %293 ]
  ret i8 %394
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcher7MatchAtElaR10UErrorCode(%"class.icu_69::RegexMatcher"*, i64, i8 signext, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::CaseFoldingUTextIterator", align 8
  %6 = alloca %"class.icu_69::CaseFoldingUTextIterator", align 8
  %7 = alloca %"class.icu_69::CaseFoldingUTextIterator", align 8
  %8 = load i32, i32* %3, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %6503

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %12 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %13 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %12, i64 0, i32 4
  %14 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %13, align 8
  %15 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %14, i64 0, i32 4
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %12, i64 0, i32 5, i32 1
  %18 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %17, i64 0, i32 0, i32 0
  %19 = load i16, i16* %18, align 8
  %20 = sext i16 %19 to i32
  %21 = and i32 %20, 17
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %32

23:                                               ; preds = %10
  %24 = and i32 %20, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %17 to %struct.anon*
  %28 = getelementptr inbounds %struct.anon, %struct.anon* %27, i64 0, i32 1, i64 0
  br label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %12, i64 0, i32 5, i32 1, i32 0, i32 3
  %31 = load i16*, i16** %30, align 8
  br label %32

32:                                               ; preds = %10, %26, %29
  %33 = phi i16* [ %28, %26 ], [ %31, %29 ], [ null, %10 ]
  %34 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %12, i64 0, i32 6
  %35 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %34, align 8
  %36 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %12, i64 0, i32 10
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 7
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 25
  %40 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  tail call void @_ZN6icu_699UVector6417removeAllElementsEv(%"class.icu_69::UVector64"* %40) #12
  %41 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %42 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %43 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %42, i64 0, i32 10
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %46 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %41, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = add nsw i32 %47, %44
  %49 = icmp sgt i32 %48, -1
  br i1 %49, label %50, label %54

50:                                               ; preds = %32
  %51 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %41, i64 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, %48
  br i1 %53, label %54, label %60

54:                                               ; preds = %50, %32
  %55 = tail call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %41, i32 %48, i32* dereferenceable(4) %45) #12
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %67, label %57

57:                                               ; preds = %54
  %58 = load i32, i32* %46, align 8
  %59 = add nsw i32 %58, %44
  br label %60

60:                                               ; preds = %57, %50
  %61 = phi i32 [ %59, %57 ], [ %48, %50 ]
  %62 = phi i32 [ %58, %57 ], [ %47, %50 ]
  %63 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %41, i64 0, i32 4
  %64 = load i64*, i64** %63, align 8
  %65 = sext i32 %62 to i64
  %66 = getelementptr inbounds i64, i64* %64, i64 %65
  store i32 %61, i32* %46, align 8
  br label %67

67:                                               ; preds = %60, %54
  %68 = phi i64* [ %66, %60 ], [ null, %54 ]
  %69 = bitcast i64* %68 to %"struct.icu_69::REStackFrame"*
  %70 = load i32, i32* %45, align 4
  %71 = icmp slt i32 %70, 1
  br i1 %71, label %72, label %92

72:                                               ; preds = %67
  %73 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %74 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %73, i64 0, i32 10
  %75 = load i32, i32* %74, align 8
  %76 = icmp sgt i32 %75, 2
  br i1 %76, label %77, label %94

77:                                               ; preds = %72
  %78 = getelementptr inbounds i64, i64* %68, i64 2
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %82, %79 ]
  %81 = getelementptr inbounds i64, i64* %78, i64 %80
  store i64 -1, i64* %81, align 8
  %82 = add nuw nsw i64 %80, 1
  %83 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %84 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %83, i64 0, i32 10
  %85 = load i32, i32* %84, align 8
  %86 = add nsw i32 %85, -2
  %87 = sext i32 %86 to i64
  %88 = icmp slt i64 %82, %87
  br i1 %88, label %79, label %89

89:                                               ; preds = %79
  %90 = load i32, i32* %45, align 4
  %91 = icmp slt i32 %90, 1
  br i1 %91, label %94, label %92

92:                                               ; preds = %67, %89
  %93 = phi i32 [ %90, %89 ], [ %70, %67 ]
  store i32 %93, i32* %3, align 4
  br label %6503

94:                                               ; preds = %72, %89
  %95 = getelementptr inbounds i64, i64* %68, i64 1
  store i64 0, i64* %95, align 8
  store i64 %1, i64* %68, align 8
  %96 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %97 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %96, i64 0, i32 11
  %98 = load i32, i32* %97, align 4
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 27
  br label %133

102:                                              ; preds = %133, %94
  %103 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %104 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  %105 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  %106 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 33
  %107 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 34
  %108 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 29
  %109 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  %110 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  %111 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 27
  %112 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  %113 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  %114 = bitcast %"class.icu_69::CaseFoldingUTextIterator"* %7 to i8*
  %115 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  %116 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  %117 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 5
  %118 = bitcast %"class.icu_69::CaseFoldingUTextIterator"* %5 to i8*
  %119 = bitcast %"class.icu_69::CaseFoldingUTextIterator"* %6 to i8*
  %120 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  %121 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  %122 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 41
  %123 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %124 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  %125 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 40
  %126 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  %127 = icmp eq i8 %2, 0
  %128 = bitcast %"class.icu_69::CaseFoldingUTextIterator"* %7 to i8*
  %129 = bitcast %"class.icu_69::CaseFoldingUTextIterator"* %5 to i8*
  %130 = bitcast %"class.icu_69::CaseFoldingUTextIterator"* %6 to i8*
  %131 = bitcast i64* %115 to <2 x i64>*
  %132 = bitcast i64* %112 to <2 x i64>*
  br label %143

133:                                              ; preds = %100, %133
  %134 = phi i64 [ 0, %100 ], [ %137, %133 ]
  %135 = load i64*, i64** %101, align 8
  %136 = getelementptr inbounds i64, i64* %135, i64 %134
  store i64 0, i64* %136, align 8
  %137 = add nuw nsw i64 %134, 1
  %138 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %139 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %138, i64 0, i32 11
  %140 = load i32, i32* %139, align 4
  %141 = sext i32 %140 to i64
  %142 = icmp slt i64 %137, %141
  br i1 %142, label %133, label %102

143:                                              ; preds = %102, %6488
  %144 = phi %"struct.icu_69::REStackFrame"* [ %6489, %6488 ], [ %69, %102 ]
  %145 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds i64, i64* %16, i64 %146
  %148 = load i64, i64* %147, align 8
  %149 = trunc i64 %148 to i32
  %150 = lshr i32 %149, 24
  %151 = and i32 %149, 16777215
  %152 = add nsw i64 %146, 1
  store i64 %152, i64* %145, align 8
  %153 = trunc i32 %150 to i8
  switch i8 %153, label %6487 [
    i8 7, label %6488
    i8 1, label %154
    i8 3, label %170
    i8 4, label %256
    i8 6, label %390
    i8 2, label %602
    i8 8, label %624
    i8 9, label %630
    i8 24, label %642
    i8 54, label %822
    i8 42, label %911
    i8 55, label %1002
    i8 23, label %1066
    i8 43, label %1087
    i8 30, label %1156
    i8 16, label %1219
    i8 53, label %1242
    i8 22, label %1291
    i8 17, label %1395
    i8 56, label %1422
    i8 57, label %1528
    i8 58, label %1638
    i8 19, label %1749
    i8 20, label %1801
    i8 10, label %1823
    i8 49, label %1950
    i8 11, label %2087
    i8 12, label %2227
    i8 21, label %2330
    i8 27, label %2476
    i8 13, label %2577
    i8 14, label %6492
    i8 15, label %2579
    i8 18, label %2794
    i8 25, label %3023
    i8 28, label %3279
    i8 26, label %3554
    i8 29, label %3799
    i8 32, label %4073
    i8 33, label %4081
    i8 34, label %4115
    i8 41, label %4236
    i8 35, label %4329
    i8 36, label %4334
    i8 37, label %4364
    i8 38, label %4389
    i8 39, label %4444
    i8 40, label %4531
    i8 44, label %4660
    i8 45, label %4690
    i8 46, label %5068
    i8 47, label %5099
    i8 48, label %5467
    i8 50, label %5518
    i8 52, label %5838
    i8 51, label %6155
  ]

154:                                              ; preds = %143
  %155 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %156 = load i32, i32* %38, align 8
  %157 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %155, i64 0, i32 1
  %158 = load i32, i32* %157, align 8
  %159 = sub nsw i32 %158, %156
  %160 = icmp sgt i32 %159, 0
  %161 = select i1 %160, i32 %159, i32 0
  store i32 %161, i32* %157, align 8
  %162 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %155, i64 0, i32 4
  %163 = load i64*, i64** %162, align 8
  %164 = zext i32 %161 to i64
  %165 = getelementptr inbounds i64, i64* %163, i64 %164
  %166 = sext i32 %156 to i64
  %167 = sub nsw i64 0, %166
  %168 = getelementptr inbounds i64, i64* %165, i64 %167
  %169 = bitcast i64* %168 to %"struct.icu_69::REStackFrame"*
  br label %6488

170:                                              ; preds = %143
  %171 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = load i64, i64* %109, align 8
  %174 = icmp slt i64 %172, %173
  br i1 %174, label %175, label %239

175:                                              ; preds = %170
  %176 = load %struct.UText*, %struct.UText** %103, align 8
  %177 = getelementptr inbounds %struct.UText, %struct.UText* %176, i64 0, i32 7
  %178 = load i64, i64* %177, align 8
  %179 = sub nsw i64 %172, %178
  %180 = icmp sgt i64 %179, -1
  br i1 %180, label %181, label %195

181:                                              ; preds = %175
  %182 = getelementptr inbounds %struct.UText, %struct.UText* %176, i64 0, i32 6
  %183 = load i32, i32* %182, align 4
  %184 = sext i32 %183 to i64
  %185 = icmp slt i64 %179, %184
  br i1 %185, label %186, label %195

186:                                              ; preds = %181
  %187 = getelementptr inbounds %struct.UText, %struct.UText* %176, i64 0, i32 10
  %188 = load i16*, i16** %187, align 8
  %189 = getelementptr inbounds i16, i16* %188, i64 %179
  %190 = load i16, i16* %189, align 2
  %191 = icmp ult i16 %190, -9216
  br i1 %191, label %192, label %195

192:                                              ; preds = %186
  %193 = trunc i64 %179 to i32
  %194 = getelementptr inbounds %struct.UText, %struct.UText* %176, i64 0, i32 8
  store i32 %193, i32* %194, align 8
  br label %196

195:                                              ; preds = %186, %181, %175
  call void @utext_setNativeIndex_69(%struct.UText* %176, i64 %172) #12
  br label %196

196:                                              ; preds = %195, %192
  %197 = load %struct.UText*, %struct.UText** %103, align 8
  %198 = getelementptr inbounds %struct.UText, %struct.UText* %197, i64 0, i32 8
  %199 = load i32, i32* %198, align 8
  %200 = getelementptr inbounds %struct.UText, %struct.UText* %197, i64 0, i32 9
  %201 = load i32, i32* %200, align 4
  %202 = icmp slt i32 %199, %201
  br i1 %202, label %203, label %214

203:                                              ; preds = %196
  %204 = getelementptr inbounds %struct.UText, %struct.UText* %197, i64 0, i32 10
  %205 = load i16*, i16** %204, align 8
  %206 = sext i32 %199 to i64
  %207 = getelementptr inbounds i16, i16* %205, i64 %206
  %208 = load i16, i16* %207, align 2
  %209 = icmp ult i16 %208, -10240
  br i1 %209, label %210, label %214

210:                                              ; preds = %203
  %211 = add nsw i32 %199, 1
  store i32 %211, i32* %198, align 8
  %212 = load i16, i16* %207, align 2
  %213 = zext i16 %212 to i32
  br label %216

214:                                              ; preds = %203, %196
  %215 = call i32 @utext_next32_69(%struct.UText* %197) #12
  br label %216

216:                                              ; preds = %214, %210
  %217 = phi i32 [ %213, %210 ], [ %215, %214 ]
  %218 = icmp eq i32 %217, %151
  br i1 %218, label %219, label %240

219:                                              ; preds = %216
  %220 = load %struct.UText*, %struct.UText** %103, align 8
  %221 = getelementptr inbounds %struct.UText, %struct.UText* %220, i64 0, i32 8
  %222 = load i32, i32* %221, align 8
  %223 = getelementptr inbounds %struct.UText, %struct.UText* %220, i64 0, i32 6
  %224 = load i32, i32* %223, align 4
  %225 = icmp sgt i32 %222, %224
  br i1 %225, label %231, label %226

226:                                              ; preds = %219
  %227 = getelementptr inbounds %struct.UText, %struct.UText* %220, i64 0, i32 7
  %228 = load i64, i64* %227, align 8
  %229 = sext i32 %222 to i64
  %230 = add nsw i64 %228, %229
  br label %237

231:                                              ; preds = %219
  %232 = getelementptr inbounds %struct.UText, %struct.UText* %220, i64 0, i32 11
  %233 = load %struct.UTextFuncs*, %struct.UTextFuncs** %232, align 8
  %234 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %233, i64 0, i32 10
  %235 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %234, align 8
  %236 = call i64 %235(%struct.UText* %220) #12
  br label %237

237:                                              ; preds = %231, %226
  %238 = phi i64 [ %230, %226 ], [ %236, %231 ]
  store i64 %238, i64* %171, align 8
  br label %6488

239:                                              ; preds = %170
  store i8 1, i8* %110, align 8
  br label %240

240:                                              ; preds = %216, %239
  %241 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %242 = load i32, i32* %38, align 8
  %243 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %241, i64 0, i32 1
  %244 = load i32, i32* %243, align 8
  %245 = sub nsw i32 %244, %242
  %246 = icmp sgt i32 %245, 0
  %247 = select i1 %246, i32 %245, i32 0
  store i32 %247, i32* %243, align 8
  %248 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %241, i64 0, i32 4
  %249 = load i64*, i64** %248, align 8
  %250 = zext i32 %247 to i64
  %251 = getelementptr inbounds i64, i64* %249, i64 %250
  %252 = sext i32 %242 to i64
  %253 = sub nsw i64 0, %252
  %254 = getelementptr inbounds i64, i64* %251, i64 %253
  %255 = bitcast i64* %254 to %"struct.icu_69::REStackFrame"*
  br label %6488

256:                                              ; preds = %143
  %257 = getelementptr inbounds i64, i64* %16, i64 %152
  %258 = load i64, i64* %257, align 8
  %259 = trunc i64 %258 to i32
  %260 = add nsw i64 %146, 2
  store i64 %260, i64* %145, align 8
  %261 = and i32 %259, 16777215
  %262 = zext i32 %151 to i64
  %263 = getelementptr inbounds i16, i16* %33, i64 %262
  %264 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %265 = load i64, i64* %264, align 8
  %266 = load %struct.UText*, %struct.UText** %103, align 8
  %267 = getelementptr inbounds %struct.UText, %struct.UText* %266, i64 0, i32 7
  %268 = load i64, i64* %267, align 8
  %269 = sub nsw i64 %265, %268
  %270 = icmp sgt i64 %269, -1
  br i1 %270, label %271, label %285

271:                                              ; preds = %256
  %272 = getelementptr inbounds %struct.UText, %struct.UText* %266, i64 0, i32 6
  %273 = load i32, i32* %272, align 4
  %274 = sext i32 %273 to i64
  %275 = icmp slt i64 %269, %274
  br i1 %275, label %276, label %285

276:                                              ; preds = %271
  %277 = getelementptr inbounds %struct.UText, %struct.UText* %266, i64 0, i32 10
  %278 = load i16*, i16** %277, align 8
  %279 = getelementptr inbounds i16, i16* %278, i64 %269
  %280 = load i16, i16* %279, align 2
  %281 = icmp ult i16 %280, -9216
  br i1 %281, label %282, label %285

282:                                              ; preds = %276
  %283 = trunc i64 %269 to i32
  %284 = getelementptr inbounds %struct.UText, %struct.UText* %266, i64 0, i32 8
  store i32 %283, i32* %284, align 8
  br label %286

285:                                              ; preds = %276, %271, %256
  call void @utext_setNativeIndex_69(%struct.UText* %266, i64 %265) #12
  br label %286

286:                                              ; preds = %285, %282
  br label %287

287:                                              ; preds = %286, %356
  %288 = phi i32 [ %358, %356 ], [ 0, %286 ]
  %289 = icmp slt i32 %288, %261
  %290 = load %struct.UText*, %struct.UText** %103, align 8
  %291 = getelementptr inbounds %struct.UText, %struct.UText* %290, i64 0, i32 8
  %292 = load i32, i32* %291, align 8
  %293 = getelementptr inbounds %struct.UText, %struct.UText* %290, i64 0, i32 6
  %294 = load i32, i32* %293, align 4
  %295 = icmp sgt i32 %292, %294
  br i1 %289, label %296, label %360

296:                                              ; preds = %287
  br i1 %295, label %302, label %297

297:                                              ; preds = %296
  %298 = getelementptr inbounds %struct.UText, %struct.UText* %290, i64 0, i32 7
  %299 = load i64, i64* %298, align 8
  %300 = sext i32 %292 to i64
  %301 = add nsw i64 %299, %300
  br label %308

302:                                              ; preds = %296
  %303 = getelementptr inbounds %struct.UText, %struct.UText* %290, i64 0, i32 11
  %304 = load %struct.UTextFuncs*, %struct.UTextFuncs** %303, align 8
  %305 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %304, i64 0, i32 10
  %306 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %305, align 8
  %307 = call i64 %306(%struct.UText* %290) #12
  br label %308

308:                                              ; preds = %302, %297
  %309 = phi i64 [ %301, %297 ], [ %307, %302 ]
  %310 = load i64, i64* %109, align 8
  %311 = icmp slt i64 %309, %310
  br i1 %311, label %313, label %312

312:                                              ; preds = %308
  store i8 1, i8* %110, align 8
  br label %374

313:                                              ; preds = %308
  %314 = load %struct.UText*, %struct.UText** %103, align 8
  %315 = getelementptr inbounds %struct.UText, %struct.UText* %314, i64 0, i32 8
  %316 = load i32, i32* %315, align 8
  %317 = getelementptr inbounds %struct.UText, %struct.UText* %314, i64 0, i32 9
  %318 = load i32, i32* %317, align 4
  %319 = icmp slt i32 %316, %318
  br i1 %319, label %320, label %331

320:                                              ; preds = %313
  %321 = getelementptr inbounds %struct.UText, %struct.UText* %314, i64 0, i32 10
  %322 = load i16*, i16** %321, align 8
  %323 = sext i32 %316 to i64
  %324 = getelementptr inbounds i16, i16* %322, i64 %323
  %325 = load i16, i16* %324, align 2
  %326 = icmp ult i16 %325, -10240
  br i1 %326, label %327, label %331

327:                                              ; preds = %320
  %328 = add nsw i32 %316, 1
  store i32 %328, i32* %315, align 8
  %329 = load i16, i16* %324, align 2
  %330 = zext i16 %329 to i32
  br label %333

331:                                              ; preds = %320, %313
  %332 = call i32 @utext_next32_69(%struct.UText* %314) #12
  br label %333

333:                                              ; preds = %331, %327
  %334 = phi i32 [ %330, %327 ], [ %332, %331 ]
  %335 = add nsw i32 %288, 1
  %336 = sext i32 %288 to i64
  %337 = getelementptr inbounds i16, i16* %263, i64 %336
  %338 = load i16, i16* %337, align 2
  %339 = zext i16 %338 to i32
  %340 = and i32 %339, 64512
  %341 = icmp ne i32 %340, 55296
  %342 = icmp eq i32 %335, %261
  %343 = or i1 %342, %341
  br i1 %343, label %356, label %344

344:                                              ; preds = %333
  %345 = sext i32 %335 to i64
  %346 = getelementptr inbounds i16, i16* %263, i64 %345
  %347 = load i16, i16* %346, align 2
  %348 = zext i16 %347 to i32
  %349 = and i32 %348, 64512
  %350 = icmp eq i32 %349, 56320
  br i1 %350, label %351, label %356

351:                                              ; preds = %344
  %352 = add nsw i32 %288, 2
  %353 = shl nuw nsw i32 %339, 10
  %354 = add nsw i32 %353, -56613888
  %355 = add nsw i32 %354, %348
  br label %356

356:                                              ; preds = %333, %344, %351
  %357 = phi i32 [ %339, %333 ], [ %355, %351 ], [ %339, %344 ]
  %358 = phi i32 [ %335, %333 ], [ %352, %351 ], [ %335, %344 ]
  %359 = icmp eq i32 %357, %334
  br i1 %359, label %287, label %374

360:                                              ; preds = %287
  br i1 %295, label %366, label %361

361:                                              ; preds = %360
  %362 = getelementptr inbounds %struct.UText, %struct.UText* %290, i64 0, i32 7
  %363 = load i64, i64* %362, align 8
  %364 = sext i32 %292 to i64
  %365 = add nsw i64 %363, %364
  br label %372

366:                                              ; preds = %360
  %367 = getelementptr inbounds %struct.UText, %struct.UText* %290, i64 0, i32 11
  %368 = load %struct.UTextFuncs*, %struct.UTextFuncs** %367, align 8
  %369 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %368, i64 0, i32 10
  %370 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %369, align 8
  %371 = call i64 %370(%struct.UText* %290) #12
  br label %372

372:                                              ; preds = %366, %361
  %373 = phi i64 [ %365, %361 ], [ %371, %366 ]
  store i64 %373, i64* %264, align 8
  br label %6488

374:                                              ; preds = %356, %312
  %375 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %376 = load i32, i32* %38, align 8
  %377 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %375, i64 0, i32 1
  %378 = load i32, i32* %377, align 8
  %379 = sub nsw i32 %378, %376
  %380 = icmp sgt i32 %379, 0
  %381 = select i1 %380, i32 %379, i32 0
  store i32 %381, i32* %377, align 8
  %382 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %375, i64 0, i32 4
  %383 = load i64*, i64** %382, align 8
  %384 = zext i32 %381 to i64
  %385 = getelementptr inbounds i64, i64* %383, i64 %384
  %386 = sext i32 %376 to i64
  %387 = sub nsw i64 0, %386
  %388 = getelementptr inbounds i64, i64* %385, i64 %387
  %389 = bitcast i64* %388 to %"struct.icu_69::REStackFrame"*
  br label %6488

390:                                              ; preds = %143
  %391 = zext i32 %151 to i64
  %392 = load i32, i32* %3, align 4
  %393 = icmp slt i32 %392, 1
  br i1 %393, label %394, label %6492

394:                                              ; preds = %390
  %395 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %396 = load i32, i32* %38, align 8
  %397 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %395, i64 0, i32 1
  %398 = load i32, i32* %397, align 8
  %399 = add nsw i32 %398, %396
  %400 = icmp sgt i32 %399, -1
  br i1 %400, label %401, label %405

401:                                              ; preds = %394
  %402 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %395, i64 0, i32 2
  %403 = load i32, i32* %402, align 4
  %404 = icmp slt i32 %403, %399
  br i1 %404, label %405, label %411

405:                                              ; preds = %401, %394
  %406 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %395, i32 %399, i32* dereferenceable(4) %3) #12
  %407 = icmp eq i8 %406, 0
  br i1 %407, label %418, label %408

408:                                              ; preds = %405
  %409 = load i32, i32* %397, align 8
  %410 = add nsw i32 %409, %396
  br label %411

411:                                              ; preds = %408, %401
  %412 = phi i32 [ %410, %408 ], [ %399, %401 ]
  %413 = phi i32 [ %409, %408 ], [ %398, %401 ]
  %414 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %395, i64 0, i32 4
  %415 = load i64*, i64** %414, align 8
  %416 = sext i32 %413 to i64
  %417 = getelementptr inbounds i64, i64* %415, i64 %416
  store i32 %412, i32* %397, align 8
  br label %418

418:                                              ; preds = %411, %405
  %419 = phi i64* [ %417, %411 ], [ null, %405 ]
  %420 = load i32, i32* %3, align 4
  %421 = icmp slt i32 %420, 1
  br i1 %421, label %423, label %422

422:                                              ; preds = %418
  store i32 66321, i32* %3, align 4
  br label %6492

423:                                              ; preds = %418
  %424 = load i32, i32* %38, align 8
  %425 = sext i32 %424 to i64
  %426 = sub nsw i64 0, %425
  %427 = getelementptr inbounds i64, i64* %419, i64 %426
  %428 = shl nsw i64 %425, 3
  %429 = add nsw i64 %428, -8
  %430 = lshr exact i64 %429, 3
  %431 = add nuw nsw i64 %430, 1
  %432 = icmp ult i64 %431, 4
  br i1 %432, label %526, label %433

433:                                              ; preds = %423
  %434 = getelementptr i64, i64* %419, i64 1
  %435 = shl nsw i64 %425, 3
  %436 = add nsw i64 %435, -8
  %437 = lshr exact i64 %436, 3
  %438 = getelementptr i64, i64* %434, i64 %437
  %439 = getelementptr i64, i64* %419, i64 1
  %440 = sub nsw i64 %437, %425
  %441 = getelementptr i64, i64* %439, i64 %440
  %442 = icmp ult i64* %419, %441
  %443 = icmp ult i64* %427, %438
  %444 = and i1 %442, %443
  br i1 %444, label %526, label %445

445:                                              ; preds = %433
  %446 = and i64 %431, 4611686018427387900
  %447 = getelementptr i64, i64* %427, i64 %446
  %448 = getelementptr i64, i64* %419, i64 %446
  %449 = add nsw i64 %446, -4
  %450 = lshr exact i64 %449, 2
  %451 = add nuw nsw i64 %450, 1
  %452 = and i64 %451, 3
  %453 = icmp ult i64 %449, 12
  br i1 %453, label %505, label %454

454:                                              ; preds = %445
  %455 = sub nsw i64 %451, %452
  br label %456

456:                                              ; preds = %456, %454
  %457 = phi i64 [ 0, %454 ], [ %502, %456 ]
  %458 = phi i64 [ %455, %454 ], [ %503, %456 ]
  %459 = getelementptr i64, i64* %427, i64 %457
  %460 = getelementptr i64, i64* %419, i64 %457
  %461 = bitcast i64* %459 to <2 x i64>*
  %462 = load <2 x i64>, <2 x i64>* %461, align 8, !alias.scope !2
  %463 = getelementptr i64, i64* %459, i64 2
  %464 = bitcast i64* %463 to <2 x i64>*
  %465 = load <2 x i64>, <2 x i64>* %464, align 8, !alias.scope !2
  %466 = bitcast i64* %460 to <2 x i64>*
  store <2 x i64> %462, <2 x i64>* %466, align 8, !alias.scope !5, !noalias !2
  %467 = getelementptr i64, i64* %460, i64 2
  %468 = bitcast i64* %467 to <2 x i64>*
  store <2 x i64> %465, <2 x i64>* %468, align 8, !alias.scope !5, !noalias !2
  %469 = or i64 %457, 4
  %470 = getelementptr i64, i64* %427, i64 %469
  %471 = getelementptr i64, i64* %419, i64 %469
  %472 = bitcast i64* %470 to <2 x i64>*
  %473 = load <2 x i64>, <2 x i64>* %472, align 8, !alias.scope !2
  %474 = getelementptr i64, i64* %470, i64 2
  %475 = bitcast i64* %474 to <2 x i64>*
  %476 = load <2 x i64>, <2 x i64>* %475, align 8, !alias.scope !2
  %477 = bitcast i64* %471 to <2 x i64>*
  store <2 x i64> %473, <2 x i64>* %477, align 8, !alias.scope !5, !noalias !2
  %478 = getelementptr i64, i64* %471, i64 2
  %479 = bitcast i64* %478 to <2 x i64>*
  store <2 x i64> %476, <2 x i64>* %479, align 8, !alias.scope !5, !noalias !2
  %480 = or i64 %457, 8
  %481 = getelementptr i64, i64* %427, i64 %480
  %482 = getelementptr i64, i64* %419, i64 %480
  %483 = bitcast i64* %481 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 8, !alias.scope !2
  %485 = getelementptr i64, i64* %481, i64 2
  %486 = bitcast i64* %485 to <2 x i64>*
  %487 = load <2 x i64>, <2 x i64>* %486, align 8, !alias.scope !2
  %488 = bitcast i64* %482 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %488, align 8, !alias.scope !5, !noalias !2
  %489 = getelementptr i64, i64* %482, i64 2
  %490 = bitcast i64* %489 to <2 x i64>*
  store <2 x i64> %487, <2 x i64>* %490, align 8, !alias.scope !5, !noalias !2
  %491 = or i64 %457, 12
  %492 = getelementptr i64, i64* %427, i64 %491
  %493 = getelementptr i64, i64* %419, i64 %491
  %494 = bitcast i64* %492 to <2 x i64>*
  %495 = load <2 x i64>, <2 x i64>* %494, align 8, !alias.scope !2
  %496 = getelementptr i64, i64* %492, i64 2
  %497 = bitcast i64* %496 to <2 x i64>*
  %498 = load <2 x i64>, <2 x i64>* %497, align 8, !alias.scope !2
  %499 = bitcast i64* %493 to <2 x i64>*
  store <2 x i64> %495, <2 x i64>* %499, align 8, !alias.scope !5, !noalias !2
  %500 = getelementptr i64, i64* %493, i64 2
  %501 = bitcast i64* %500 to <2 x i64>*
  store <2 x i64> %498, <2 x i64>* %501, align 8, !alias.scope !5, !noalias !2
  %502 = add i64 %457, 16
  %503 = add i64 %458, -4
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %505, label %456, !llvm.loop !7

505:                                              ; preds = %456, %445
  %506 = phi i64 [ 0, %445 ], [ %502, %456 ]
  %507 = icmp eq i64 %452, 0
  br i1 %507, label %524, label %508

508:                                              ; preds = %505, %508
  %509 = phi i64 [ %521, %508 ], [ %506, %505 ]
  %510 = phi i64 [ %522, %508 ], [ %452, %505 ]
  %511 = getelementptr i64, i64* %427, i64 %509
  %512 = getelementptr i64, i64* %419, i64 %509
  %513 = bitcast i64* %511 to <2 x i64>*
  %514 = load <2 x i64>, <2 x i64>* %513, align 8, !alias.scope !2
  %515 = getelementptr i64, i64* %511, i64 2
  %516 = bitcast i64* %515 to <2 x i64>*
  %517 = load <2 x i64>, <2 x i64>* %516, align 8, !alias.scope !2
  %518 = bitcast i64* %512 to <2 x i64>*
  store <2 x i64> %514, <2 x i64>* %518, align 8, !alias.scope !5, !noalias !2
  %519 = getelementptr i64, i64* %512, i64 2
  %520 = bitcast i64* %519 to <2 x i64>*
  store <2 x i64> %517, <2 x i64>* %520, align 8, !alias.scope !5, !noalias !2
  %521 = add i64 %509, 4
  %522 = add i64 %510, -1
  %523 = icmp eq i64 %522, 0
  br i1 %523, label %524, label %508, !llvm.loop !9

524:                                              ; preds = %508, %505
  %525 = icmp eq i64 %431, %446
  br i1 %525, label %578, label %526

526:                                              ; preds = %524, %433, %423
  %527 = phi i64* [ %427, %433 ], [ %427, %423 ], [ %447, %524 ]
  %528 = phi i64* [ %419, %433 ], [ %419, %423 ], [ %448, %524 ]
  %529 = ptrtoint i64* %527 to i64
  %530 = getelementptr i64, i64* %419, i64 -1
  %531 = ptrtoint i64* %530 to i64
  %532 = sub i64 %531, %529
  %533 = lshr i64 %532, 3
  %534 = add nuw nsw i64 %533, 1
  %535 = and i64 %534, 7
  %536 = icmp eq i64 %535, 0
  br i1 %536, label %546, label %537

537:                                              ; preds = %526, %537
  %538 = phi i64* [ %541, %537 ], [ %527, %526 ]
  %539 = phi i64* [ %543, %537 ], [ %528, %526 ]
  %540 = phi i64 [ %544, %537 ], [ %535, %526 ]
  %541 = getelementptr inbounds i64, i64* %538, i64 1
  %542 = load i64, i64* %538, align 8
  %543 = getelementptr inbounds i64, i64* %539, i64 1
  store i64 %542, i64* %539, align 8
  %544 = add i64 %540, -1
  %545 = icmp eq i64 %544, 0
  br i1 %545, label %546, label %537, !llvm.loop !11

546:                                              ; preds = %537, %526
  %547 = phi i64* [ %527, %526 ], [ %541, %537 ]
  %548 = phi i64* [ %528, %526 ], [ %543, %537 ]
  %549 = icmp ult i64 %532, 56
  br i1 %549, label %578, label %550

550:                                              ; preds = %546, %550
  %551 = phi i64* [ %574, %550 ], [ %547, %546 ]
  %552 = phi i64* [ %576, %550 ], [ %548, %546 ]
  %553 = getelementptr inbounds i64, i64* %551, i64 1
  %554 = load i64, i64* %551, align 8
  %555 = getelementptr inbounds i64, i64* %552, i64 1
  store i64 %554, i64* %552, align 8
  %556 = getelementptr inbounds i64, i64* %551, i64 2
  %557 = load i64, i64* %553, align 8
  %558 = getelementptr inbounds i64, i64* %552, i64 2
  store i64 %557, i64* %555, align 8
  %559 = getelementptr inbounds i64, i64* %551, i64 3
  %560 = load i64, i64* %556, align 8
  %561 = getelementptr inbounds i64, i64* %552, i64 3
  store i64 %560, i64* %558, align 8
  %562 = getelementptr inbounds i64, i64* %551, i64 4
  %563 = load i64, i64* %559, align 8
  %564 = getelementptr inbounds i64, i64* %552, i64 4
  store i64 %563, i64* %561, align 8
  %565 = getelementptr inbounds i64, i64* %551, i64 5
  %566 = load i64, i64* %562, align 8
  %567 = getelementptr inbounds i64, i64* %552, i64 5
  store i64 %566, i64* %564, align 8
  %568 = getelementptr inbounds i64, i64* %551, i64 6
  %569 = load i64, i64* %565, align 8
  %570 = getelementptr inbounds i64, i64* %552, i64 6
  store i64 %569, i64* %567, align 8
  %571 = getelementptr inbounds i64, i64* %551, i64 7
  %572 = load i64, i64* %568, align 8
  %573 = getelementptr inbounds i64, i64* %552, i64 7
  store i64 %572, i64* %570, align 8
  %574 = getelementptr inbounds i64, i64* %551, i64 8
  %575 = load i64, i64* %571, align 8
  %576 = getelementptr inbounds i64, i64* %552, i64 8
  store i64 %575, i64* %573, align 8
  %577 = icmp eq i64* %574, %419
  br i1 %577, label %578, label %550, !llvm.loop !12

578:                                              ; preds = %546, %550, %524
  %579 = load i32, i32* %104, align 8
  %580 = add nsw i32 %579, -1
  store i32 %580, i32* %104, align 8
  %581 = icmp slt i32 %579, 2
  br i1 %581, label %582, label %599

582:                                              ; preds = %578
  store i32 10000, i32* %104, align 8
  %583 = load i32, i32* %105, align 4
  %584 = add nsw i32 %583, 1
  store i32 %584, i32* %105, align 4
  %585 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %586 = icmp eq i8 (i8*, i32)* %585, null
  br i1 %586, label %592, label %587

587:                                              ; preds = %582
  %588 = load i8*, i8** %107, align 8
  %589 = call signext i8 %585(i8* %588, i32 %584) #12
  %590 = icmp eq i8 %589, 0
  br i1 %590, label %591, label %592

591:                                              ; preds = %587
  store i32 66323, i32* %3, align 4
  br label %599

592:                                              ; preds = %587, %582
  %593 = load i32, i32* %108, align 8
  %594 = icmp sgt i32 %593, 0
  br i1 %594, label %595, label %599

595:                                              ; preds = %592
  %596 = load i32, i32* %105, align 4
  %597 = icmp slt i32 %596, %593
  br i1 %597, label %599, label %598

598:                                              ; preds = %595
  store i32 66322, i32* %3, align 4
  br label %599

599:                                              ; preds = %598, %595, %592, %591, %578
  %600 = getelementptr inbounds i64, i64* %427, i64 1
  store i64 %391, i64* %600, align 8
  %601 = bitcast i64* %419 to %"struct.icu_69::REStackFrame"*
  br label %6488

602:                                              ; preds = %143
  br i1 %127, label %6494, label %603

603:                                              ; preds = %602
  %604 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %605 = load i64, i64* %604, align 8
  %606 = load i64, i64* %109, align 8
  %607 = icmp eq i64 %605, %606
  br i1 %607, label %6494, label %608

608:                                              ; preds = %603
  %609 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %610 = load i32, i32* %38, align 8
  %611 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %609, i64 0, i32 1
  %612 = load i32, i32* %611, align 8
  %613 = sub nsw i32 %612, %610
  %614 = icmp sgt i32 %613, 0
  %615 = select i1 %614, i32 %613, i32 0
  store i32 %615, i32* %611, align 8
  %616 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %609, i64 0, i32 4
  %617 = load i64*, i64** %616, align 8
  %618 = zext i32 %615 to i64
  %619 = getelementptr inbounds i64, i64* %617, i64 %618
  %620 = sext i32 %610 to i64
  %621 = sub nsw i64 0, %620
  %622 = getelementptr inbounds i64, i64* %619, i64 %621
  %623 = bitcast i64* %622 to %"struct.icu_69::REStackFrame"*
  br label %6488

624:                                              ; preds = %143
  %625 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %626 = load i64, i64* %625, align 8
  %627 = add nuw nsw i32 %151, 2
  %628 = zext i32 %627 to i64
  %629 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %628
  store i64 %626, i64* %629, align 8
  br label %6488

630:                                              ; preds = %143
  %631 = add nuw nsw i32 %151, 2
  %632 = zext i32 %631 to i64
  %633 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %632
  %634 = load i64, i64* %633, align 8
  %635 = zext i32 %151 to i64
  %636 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %635
  store i64 %634, i64* %636, align 8
  %637 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %638 = load i64, i64* %637, align 8
  %639 = add nuw nsw i32 %151, 1
  %640 = zext i32 %639 to i64
  %641 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %640
  store i64 %638, i64* %641, align 8
  br label %6488

642:                                              ; preds = %143
  %643 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %644 = load i64, i64* %643, align 8
  %645 = load i64, i64* %120, align 8
  %646 = icmp slt i64 %644, %645
  br i1 %646, label %648, label %647

647:                                              ; preds = %642
  store i8 1, i8* %110, align 8
  store i8 1, i8* %121, align 1
  br label %6488

648:                                              ; preds = %642
  %649 = load %struct.UText*, %struct.UText** %103, align 8
  %650 = getelementptr inbounds %struct.UText, %struct.UText* %649, i64 0, i32 7
  %651 = load i64, i64* %650, align 8
  %652 = sub nsw i64 %644, %651
  %653 = icmp sgt i64 %652, -1
  br i1 %653, label %654, label %668

654:                                              ; preds = %648
  %655 = getelementptr inbounds %struct.UText, %struct.UText* %649, i64 0, i32 6
  %656 = load i32, i32* %655, align 4
  %657 = sext i32 %656 to i64
  %658 = icmp slt i64 %652, %657
  br i1 %658, label %659, label %668

659:                                              ; preds = %654
  %660 = getelementptr inbounds %struct.UText, %struct.UText* %649, i64 0, i32 10
  %661 = load i16*, i16** %660, align 8
  %662 = getelementptr inbounds i16, i16* %661, i64 %652
  %663 = load i16, i16* %662, align 2
  %664 = icmp ult i16 %663, -9216
  br i1 %664, label %665, label %668

665:                                              ; preds = %659
  %666 = trunc i64 %652 to i32
  %667 = getelementptr inbounds %struct.UText, %struct.UText* %649, i64 0, i32 8
  store i32 %666, i32* %667, align 8
  br label %669

668:                                              ; preds = %659, %654, %648
  call void @utext_setNativeIndex_69(%struct.UText* %649, i64 %644) #12
  br label %669

669:                                              ; preds = %668, %665
  %670 = load %struct.UText*, %struct.UText** %103, align 8
  %671 = getelementptr inbounds %struct.UText, %struct.UText* %670, i64 0, i32 8
  %672 = load i32, i32* %671, align 8
  %673 = getelementptr inbounds %struct.UText, %struct.UText* %670, i64 0, i32 9
  %674 = load i32, i32* %673, align 4
  %675 = icmp slt i32 %672, %674
  br i1 %675, label %676, label %687

676:                                              ; preds = %669
  %677 = getelementptr inbounds %struct.UText, %struct.UText* %670, i64 0, i32 10
  %678 = load i16*, i16** %677, align 8
  %679 = sext i32 %672 to i64
  %680 = getelementptr inbounds i16, i16* %678, i64 %679
  %681 = load i16, i16* %680, align 2
  %682 = icmp ult i16 %681, -10240
  br i1 %682, label %683, label %687

683:                                              ; preds = %676
  %684 = add nsw i32 %672, 1
  store i32 %684, i32* %671, align 8
  %685 = load i16, i16* %680, align 2
  %686 = zext i16 %685 to i32
  br label %689

687:                                              ; preds = %676, %669
  %688 = call i32 @utext_next32_69(%struct.UText* %670) #12
  br label %689

689:                                              ; preds = %687, %683
  %690 = phi i32 [ %686, %683 ], [ %688, %687 ]
  %691 = load %struct.UText*, %struct.UText** %103, align 8
  %692 = getelementptr inbounds %struct.UText, %struct.UText* %691, i64 0, i32 8
  %693 = load i32, i32* %692, align 8
  %694 = getelementptr inbounds %struct.UText, %struct.UText* %691, i64 0, i32 6
  %695 = load i32, i32* %694, align 4
  %696 = icmp sgt i32 %693, %695
  br i1 %696, label %702, label %697

697:                                              ; preds = %689
  %698 = getelementptr inbounds %struct.UText, %struct.UText* %691, i64 0, i32 7
  %699 = load i64, i64* %698, align 8
  %700 = sext i32 %693 to i64
  %701 = add nsw i64 %699, %700
  br label %708

702:                                              ; preds = %689
  %703 = getelementptr inbounds %struct.UText, %struct.UText* %691, i64 0, i32 11
  %704 = load %struct.UTextFuncs*, %struct.UTextFuncs** %703, align 8
  %705 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %704, i64 0, i32 10
  %706 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %705, align 8
  %707 = call i64 %706(%struct.UText* %691) #12
  br label %708

708:                                              ; preds = %702, %697
  %709 = phi i64 [ %701, %697 ], [ %707, %702 ]
  %710 = load i64, i64* %120, align 8
  %711 = icmp slt i64 %709, %710
  br i1 %711, label %758, label %712

712:                                              ; preds = %708
  %713 = and i32 %690, -8368
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %715, label %806

715:                                              ; preds = %712
  switch i32 %690, label %806 [
    i32 10, label %716
    i32 11, label %757
    i32 12, label %757
    i32 13, label %757
    i32 133, label %757
    i32 8232, label %757
    i32 8233, label %757
  ]

716:                                              ; preds = %715
  %717 = load i64, i64* %643, align 8
  %718 = load i64, i64* %126, align 8
  %719 = icmp sgt i64 %717, %718
  br i1 %719, label %720, label %757

720:                                              ; preds = %716
  %721 = load %struct.UText*, %struct.UText** %103, align 8
  %722 = getelementptr inbounds %struct.UText, %struct.UText* %721, i64 0, i32 8
  %723 = load i32, i32* %722, align 8
  %724 = icmp sgt i32 %723, 0
  br i1 %724, label %725, label %734

725:                                              ; preds = %720
  %726 = getelementptr inbounds %struct.UText, %struct.UText* %721, i64 0, i32 10
  %727 = load i16*, i16** %726, align 8
  %728 = add nsw i32 %723, -1
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds i16, i16* %727, i64 %729
  %731 = load i16, i16* %730, align 2
  %732 = icmp ult i16 %731, -10240
  br i1 %732, label %733, label %734

733:                                              ; preds = %725
  store i32 %728, i32* %722, align 8
  br label %736

734:                                              ; preds = %725, %720
  %735 = call i32 @utext_previous32_69(%struct.UText* %721) #12
  br label %736

736:                                              ; preds = %734, %733
  %737 = load %struct.UText*, %struct.UText** %103, align 8
  %738 = getelementptr inbounds %struct.UText, %struct.UText* %737, i64 0, i32 8
  %739 = load i32, i32* %738, align 8
  %740 = icmp sgt i32 %739, 0
  br i1 %740, label %741, label %752

741:                                              ; preds = %736
  %742 = getelementptr inbounds %struct.UText, %struct.UText* %737, i64 0, i32 10
  %743 = load i16*, i16** %742, align 8
  %744 = add nsw i32 %739, -1
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds i16, i16* %743, i64 %745
  %747 = load i16, i16* %746, align 2
  %748 = icmp ult i16 %747, -10240
  br i1 %748, label %749, label %752

749:                                              ; preds = %741
  store i32 %744, i32* %738, align 8
  %750 = load i16, i16* %746, align 2
  %751 = zext i16 %750 to i32
  br label %754

752:                                              ; preds = %741, %736
  %753 = call i32 @utext_previous32_69(%struct.UText* %737) #12
  br label %754

754:                                              ; preds = %752, %749
  %755 = phi i32 [ %751, %749 ], [ %753, %752 ]
  %756 = icmp eq i32 %755, 13
  br i1 %756, label %806, label %757

757:                                              ; preds = %715, %715, %715, %715, %715, %715, %754, %716
  store i8 1, i8* %110, align 8
  store i8 1, i8* %121, align 1
  br label %6488

758:                                              ; preds = %708
  %759 = load %struct.UText*, %struct.UText** %103, align 8
  %760 = getelementptr inbounds %struct.UText, %struct.UText* %759, i64 0, i32 8
  %761 = load i32, i32* %760, align 8
  %762 = getelementptr inbounds %struct.UText, %struct.UText* %759, i64 0, i32 9
  %763 = load i32, i32* %762, align 4
  %764 = icmp slt i32 %761, %763
  br i1 %764, label %765, label %776

765:                                              ; preds = %758
  %766 = getelementptr inbounds %struct.UText, %struct.UText* %759, i64 0, i32 10
  %767 = load i16*, i16** %766, align 8
  %768 = sext i32 %761 to i64
  %769 = getelementptr inbounds i16, i16* %767, i64 %768
  %770 = load i16, i16* %769, align 2
  %771 = icmp ult i16 %770, -10240
  br i1 %771, label %772, label %776

772:                                              ; preds = %765
  %773 = add nsw i32 %761, 1
  store i32 %773, i32* %760, align 8
  %774 = load i16, i16* %769, align 2
  %775 = zext i16 %774 to i32
  br label %778

776:                                              ; preds = %765, %758
  %777 = call i32 @utext_next32_69(%struct.UText* %759) #12
  br label %778

778:                                              ; preds = %776, %772
  %779 = phi i32 [ %775, %772 ], [ %777, %776 ]
  %780 = icmp eq i32 %690, 13
  %781 = icmp eq i32 %779, 10
  %782 = and i1 %780, %781
  br i1 %782, label %783, label %806

783:                                              ; preds = %778
  %784 = load %struct.UText*, %struct.UText** %103, align 8
  %785 = getelementptr inbounds %struct.UText, %struct.UText* %784, i64 0, i32 8
  %786 = load i32, i32* %785, align 8
  %787 = getelementptr inbounds %struct.UText, %struct.UText* %784, i64 0, i32 6
  %788 = load i32, i32* %787, align 4
  %789 = icmp sgt i32 %786, %788
  br i1 %789, label %795, label %790

790:                                              ; preds = %783
  %791 = getelementptr inbounds %struct.UText, %struct.UText* %784, i64 0, i32 7
  %792 = load i64, i64* %791, align 8
  %793 = sext i32 %786 to i64
  %794 = add nsw i64 %792, %793
  br label %801

795:                                              ; preds = %783
  %796 = getelementptr inbounds %struct.UText, %struct.UText* %784, i64 0, i32 11
  %797 = load %struct.UTextFuncs*, %struct.UTextFuncs** %796, align 8
  %798 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %797, i64 0, i32 10
  %799 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %798, align 8
  %800 = call i64 %799(%struct.UText* %784) #12
  br label %801

801:                                              ; preds = %795, %790
  %802 = phi i64 [ %794, %790 ], [ %800, %795 ]
  %803 = load i64, i64* %120, align 8
  %804 = icmp slt i64 %802, %803
  br i1 %804, label %806, label %805

805:                                              ; preds = %801
  store i8 1, i8* %110, align 8
  store i8 1, i8* %121, align 1
  br label %6488

806:                                              ; preds = %715, %712, %801, %778, %754
  %807 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %808 = load i32, i32* %38, align 8
  %809 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %807, i64 0, i32 1
  %810 = load i32, i32* %809, align 8
  %811 = sub nsw i32 %810, %808
  %812 = icmp sgt i32 %811, 0
  %813 = select i1 %812, i32 %811, i32 0
  store i32 %813, i32* %809, align 8
  %814 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %807, i64 0, i32 4
  %815 = load i64*, i64** %814, align 8
  %816 = zext i32 %813 to i64
  %817 = getelementptr inbounds i64, i64* %815, i64 %816
  %818 = sext i32 %808 to i64
  %819 = sub nsw i64 0, %818
  %820 = getelementptr inbounds i64, i64* %817, i64 %819
  %821 = bitcast i64* %820 to %"struct.icu_69::REStackFrame"*
  br label %6488

822:                                              ; preds = %143
  %823 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %824 = load i64, i64* %823, align 8
  %825 = load i64, i64* %120, align 8
  %826 = icmp slt i64 %824, %825
  br i1 %826, label %828, label %827

827:                                              ; preds = %822
  store i8 1, i8* %110, align 8
  store i8 1, i8* %121, align 1
  br label %6488

828:                                              ; preds = %822
  %829 = load %struct.UText*, %struct.UText** %103, align 8
  %830 = getelementptr inbounds %struct.UText, %struct.UText* %829, i64 0, i32 7
  %831 = load i64, i64* %830, align 8
  %832 = sub nsw i64 %824, %831
  %833 = icmp sgt i64 %832, -1
  br i1 %833, label %834, label %848

834:                                              ; preds = %828
  %835 = getelementptr inbounds %struct.UText, %struct.UText* %829, i64 0, i32 6
  %836 = load i32, i32* %835, align 4
  %837 = sext i32 %836 to i64
  %838 = icmp slt i64 %832, %837
  br i1 %838, label %839, label %848

839:                                              ; preds = %834
  %840 = getelementptr inbounds %struct.UText, %struct.UText* %829, i64 0, i32 10
  %841 = load i16*, i16** %840, align 8
  %842 = getelementptr inbounds i16, i16* %841, i64 %832
  %843 = load i16, i16* %842, align 2
  %844 = icmp ult i16 %843, -9216
  br i1 %844, label %845, label %848

845:                                              ; preds = %839
  %846 = trunc i64 %832 to i32
  %847 = getelementptr inbounds %struct.UText, %struct.UText* %829, i64 0, i32 8
  store i32 %846, i32* %847, align 8
  br label %849

848:                                              ; preds = %839, %834, %828
  call void @utext_setNativeIndex_69(%struct.UText* %829, i64 %824) #12
  br label %849

849:                                              ; preds = %848, %845
  %850 = load %struct.UText*, %struct.UText** %103, align 8
  %851 = getelementptr inbounds %struct.UText, %struct.UText* %850, i64 0, i32 8
  %852 = load i32, i32* %851, align 8
  %853 = getelementptr inbounds %struct.UText, %struct.UText* %850, i64 0, i32 9
  %854 = load i32, i32* %853, align 4
  %855 = icmp slt i32 %852, %854
  br i1 %855, label %856, label %867

856:                                              ; preds = %849
  %857 = getelementptr inbounds %struct.UText, %struct.UText* %850, i64 0, i32 10
  %858 = load i16*, i16** %857, align 8
  %859 = sext i32 %852 to i64
  %860 = getelementptr inbounds i16, i16* %858, i64 %859
  %861 = load i16, i16* %860, align 2
  %862 = icmp ult i16 %861, -10240
  br i1 %862, label %863, label %867

863:                                              ; preds = %856
  %864 = add nsw i32 %852, 1
  store i32 %864, i32* %851, align 8
  %865 = load i16, i16* %860, align 2
  %866 = zext i16 %865 to i32
  br label %869

867:                                              ; preds = %856, %849
  %868 = call i32 @utext_next32_69(%struct.UText* %850) #12
  br label %869

869:                                              ; preds = %867, %863
  %870 = phi i32 [ %866, %863 ], [ %868, %867 ]
  %871 = icmp eq i32 %870, 10
  br i1 %871, label %872, label %895

872:                                              ; preds = %869
  %873 = load %struct.UText*, %struct.UText** %103, align 8
  %874 = getelementptr inbounds %struct.UText, %struct.UText* %873, i64 0, i32 8
  %875 = load i32, i32* %874, align 8
  %876 = getelementptr inbounds %struct.UText, %struct.UText* %873, i64 0, i32 6
  %877 = load i32, i32* %876, align 4
  %878 = icmp sgt i32 %875, %877
  br i1 %878, label %884, label %879

879:                                              ; preds = %872
  %880 = getelementptr inbounds %struct.UText, %struct.UText* %873, i64 0, i32 7
  %881 = load i64, i64* %880, align 8
  %882 = sext i32 %875 to i64
  %883 = add nsw i64 %881, %882
  br label %890

884:                                              ; preds = %872
  %885 = getelementptr inbounds %struct.UText, %struct.UText* %873, i64 0, i32 11
  %886 = load %struct.UTextFuncs*, %struct.UTextFuncs** %885, align 8
  %887 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %886, i64 0, i32 10
  %888 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %887, align 8
  %889 = call i64 %888(%struct.UText* %873) #12
  br label %890

890:                                              ; preds = %884, %879
  %891 = phi i64 [ %883, %879 ], [ %889, %884 ]
  %892 = load i64, i64* %120, align 8
  %893 = icmp eq i64 %891, %892
  br i1 %893, label %894, label %895

894:                                              ; preds = %890
  store i8 1, i8* %110, align 8
  store i8 1, i8* %121, align 1
  br label %6488

895:                                              ; preds = %890, %869
  %896 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %897 = load i32, i32* %38, align 8
  %898 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %896, i64 0, i32 1
  %899 = load i32, i32* %898, align 8
  %900 = sub nsw i32 %899, %897
  %901 = icmp sgt i32 %900, 0
  %902 = select i1 %901, i32 %900, i32 0
  store i32 %902, i32* %898, align 8
  %903 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %896, i64 0, i32 4
  %904 = load i64*, i64** %903, align 8
  %905 = zext i32 %902 to i64
  %906 = getelementptr inbounds i64, i64* %904, i64 %905
  %907 = sext i32 %897 to i64
  %908 = sub nsw i64 0, %907
  %909 = getelementptr inbounds i64, i64* %906, i64 %908
  %910 = bitcast i64* %909 to %"struct.icu_69::REStackFrame"*
  br label %6488

911:                                              ; preds = %143
  %912 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %913 = load i64, i64* %912, align 8
  %914 = load i64, i64* %120, align 8
  %915 = icmp slt i64 %913, %914
  br i1 %915, label %917, label %916

916:                                              ; preds = %911
  store i8 1, i8* %110, align 8
  store i8 1, i8* %121, align 1
  br label %6488

917:                                              ; preds = %911
  %918 = load %struct.UText*, %struct.UText** %103, align 8
  %919 = getelementptr inbounds %struct.UText, %struct.UText* %918, i64 0, i32 7
  %920 = load i64, i64* %919, align 8
  %921 = sub nsw i64 %913, %920
  %922 = icmp sgt i64 %921, -1
  br i1 %922, label %923, label %937

923:                                              ; preds = %917
  %924 = getelementptr inbounds %struct.UText, %struct.UText* %918, i64 0, i32 6
  %925 = load i32, i32* %924, align 4
  %926 = sext i32 %925 to i64
  %927 = icmp slt i64 %921, %926
  br i1 %927, label %928, label %937

928:                                              ; preds = %923
  %929 = getelementptr inbounds %struct.UText, %struct.UText* %918, i64 0, i32 10
  %930 = load i16*, i16** %929, align 8
  %931 = getelementptr inbounds i16, i16* %930, i64 %921
  %932 = load i16, i16* %931, align 2
  %933 = icmp ult i16 %932, -9216
  br i1 %933, label %934, label %937

934:                                              ; preds = %928
  %935 = trunc i64 %921 to i32
  %936 = getelementptr inbounds %struct.UText, %struct.UText* %918, i64 0, i32 8
  store i32 %935, i32* %936, align 8
  br label %938

937:                                              ; preds = %928, %923, %917
  call void @utext_setNativeIndex_69(%struct.UText* %918, i64 %913) #12
  br label %938

938:                                              ; preds = %937, %934
  %939 = load %struct.UText*, %struct.UText** %103, align 8
  %940 = getelementptr inbounds %struct.UText, %struct.UText* %939, i64 0, i32 8
  %941 = load i32, i32* %940, align 8
  %942 = getelementptr inbounds %struct.UText, %struct.UText* %939, i64 0, i32 9
  %943 = load i32, i32* %942, align 4
  %944 = icmp slt i32 %941, %943
  br i1 %944, label %945, label %954

945:                                              ; preds = %938
  %946 = getelementptr inbounds %struct.UText, %struct.UText* %939, i64 0, i32 10
  %947 = load i16*, i16** %946, align 8
  %948 = sext i32 %941 to i64
  %949 = getelementptr inbounds i16, i16* %947, i64 %948
  %950 = load i16, i16* %949, align 2
  %951 = icmp ult i16 %950, -10240
  br i1 %951, label %952, label %954

952:                                              ; preds = %945
  %953 = zext i16 %950 to i32
  br label %956

954:                                              ; preds = %945, %938
  %955 = call i32 @utext_current32_69(%struct.UText* %939) #12
  br label %956

956:                                              ; preds = %954, %952
  %957 = phi i32 [ %953, %952 ], [ %955, %954 ]
  %958 = and i32 %957, -8368
  %959 = icmp eq i32 %958, 0
  br i1 %959, label %960, label %986

960:                                              ; preds = %956
  switch i32 %957, label %986 [
    i32 10, label %961
    i32 11, label %6488
    i32 12, label %6488
    i32 13, label %6488
    i32 133, label %6488
    i32 8232, label %6488
    i32 8233, label %6488
  ]

961:                                              ; preds = %960
  %962 = load i64, i64* %912, align 8
  %963 = load i64, i64* %126, align 8
  %964 = icmp sgt i64 %962, %963
  br i1 %964, label %965, label %6488

965:                                              ; preds = %961
  %966 = load %struct.UText*, %struct.UText** %103, align 8
  %967 = getelementptr inbounds %struct.UText, %struct.UText* %966, i64 0, i32 8
  %968 = load i32, i32* %967, align 8
  %969 = icmp sgt i32 %968, 0
  br i1 %969, label %970, label %981

970:                                              ; preds = %965
  %971 = getelementptr inbounds %struct.UText, %struct.UText* %966, i64 0, i32 10
  %972 = load i16*, i16** %971, align 8
  %973 = add nsw i32 %968, -1
  %974 = sext i32 %973 to i64
  %975 = getelementptr inbounds i16, i16* %972, i64 %974
  %976 = load i16, i16* %975, align 2
  %977 = icmp ult i16 %976, -10240
  br i1 %977, label %978, label %981

978:                                              ; preds = %970
  store i32 %973, i32* %967, align 8
  %979 = load i16, i16* %975, align 2
  %980 = zext i16 %979 to i32
  br label %983

981:                                              ; preds = %970, %965
  %982 = call i32 @utext_previous32_69(%struct.UText* %966) #12
  br label %983

983:                                              ; preds = %981, %978
  %984 = phi i32 [ %980, %978 ], [ %982, %981 ]
  %985 = icmp eq i32 %984, 13
  br i1 %985, label %986, label %6488

986:                                              ; preds = %960, %956, %983
  %987 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %988 = load i32, i32* %38, align 8
  %989 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %987, i64 0, i32 1
  %990 = load i32, i32* %989, align 8
  %991 = sub nsw i32 %990, %988
  %992 = icmp sgt i32 %991, 0
  %993 = select i1 %992, i32 %991, i32 0
  store i32 %993, i32* %989, align 8
  %994 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %987, i64 0, i32 4
  %995 = load i64*, i64** %994, align 8
  %996 = zext i32 %993 to i64
  %997 = getelementptr inbounds i64, i64* %995, i64 %996
  %998 = sext i32 %988 to i64
  %999 = sub nsw i64 0, %998
  %1000 = getelementptr inbounds i64, i64* %997, i64 %999
  %1001 = bitcast i64* %1000 to %"struct.icu_69::REStackFrame"*
  br label %6488

1002:                                             ; preds = %143
  %1003 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1004 = load i64, i64* %1003, align 8
  %1005 = load i64, i64* %120, align 8
  %1006 = icmp slt i64 %1004, %1005
  br i1 %1006, label %1008, label %1007

1007:                                             ; preds = %1002
  store i8 1, i8* %110, align 8
  store i8 1, i8* %121, align 1
  br label %6488

1008:                                             ; preds = %1002
  %1009 = load %struct.UText*, %struct.UText** %103, align 8
  %1010 = getelementptr inbounds %struct.UText, %struct.UText* %1009, i64 0, i32 7
  %1011 = load i64, i64* %1010, align 8
  %1012 = sub nsw i64 %1004, %1011
  %1013 = icmp sgt i64 %1012, -1
  br i1 %1013, label %1014, label %1028

1014:                                             ; preds = %1008
  %1015 = getelementptr inbounds %struct.UText, %struct.UText* %1009, i64 0, i32 6
  %1016 = load i32, i32* %1015, align 4
  %1017 = sext i32 %1016 to i64
  %1018 = icmp slt i64 %1012, %1017
  br i1 %1018, label %1019, label %1028

1019:                                             ; preds = %1014
  %1020 = getelementptr inbounds %struct.UText, %struct.UText* %1009, i64 0, i32 10
  %1021 = load i16*, i16** %1020, align 8
  %1022 = getelementptr inbounds i16, i16* %1021, i64 %1012
  %1023 = load i16, i16* %1022, align 2
  %1024 = icmp ult i16 %1023, -9216
  br i1 %1024, label %1025, label %1028

1025:                                             ; preds = %1019
  %1026 = trunc i64 %1012 to i32
  %1027 = getelementptr inbounds %struct.UText, %struct.UText* %1009, i64 0, i32 8
  store i32 %1026, i32* %1027, align 8
  br label %1029

1028:                                             ; preds = %1019, %1014, %1008
  call void @utext_setNativeIndex_69(%struct.UText* %1009, i64 %1004) #12
  br label %1029

1029:                                             ; preds = %1028, %1025
  %1030 = load %struct.UText*, %struct.UText** %103, align 8
  %1031 = getelementptr inbounds %struct.UText, %struct.UText* %1030, i64 0, i32 8
  %1032 = load i32, i32* %1031, align 8
  %1033 = getelementptr inbounds %struct.UText, %struct.UText* %1030, i64 0, i32 9
  %1034 = load i32, i32* %1033, align 4
  %1035 = icmp slt i32 %1032, %1034
  br i1 %1035, label %1036, label %1045

1036:                                             ; preds = %1029
  %1037 = getelementptr inbounds %struct.UText, %struct.UText* %1030, i64 0, i32 10
  %1038 = load i16*, i16** %1037, align 8
  %1039 = sext i32 %1032 to i64
  %1040 = getelementptr inbounds i16, i16* %1038, i64 %1039
  %1041 = load i16, i16* %1040, align 2
  %1042 = icmp ult i16 %1041, -10240
  br i1 %1042, label %1043, label %1045

1043:                                             ; preds = %1036
  %1044 = zext i16 %1041 to i32
  br label %1047

1045:                                             ; preds = %1036, %1029
  %1046 = call i32 @utext_current32_69(%struct.UText* %1030) #12
  br label %1047

1047:                                             ; preds = %1045, %1043
  %1048 = phi i32 [ %1044, %1043 ], [ %1046, %1045 ]
  %1049 = icmp eq i32 %1048, 10
  br i1 %1049, label %6488, label %1050

1050:                                             ; preds = %1047
  %1051 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1052 = load i32, i32* %38, align 8
  %1053 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1051, i64 0, i32 1
  %1054 = load i32, i32* %1053, align 8
  %1055 = sub nsw i32 %1054, %1052
  %1056 = icmp sgt i32 %1055, 0
  %1057 = select i1 %1056, i32 %1055, i32 0
  store i32 %1057, i32* %1053, align 8
  %1058 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1051, i64 0, i32 4
  %1059 = load i64*, i64** %1058, align 8
  %1060 = zext i32 %1057 to i64
  %1061 = getelementptr inbounds i64, i64* %1059, i64 %1060
  %1062 = sext i32 %1052 to i64
  %1063 = sub nsw i64 0, %1062
  %1064 = getelementptr inbounds i64, i64* %1061, i64 %1063
  %1065 = bitcast i64* %1064 to %"struct.icu_69::REStackFrame"*
  br label %6488

1066:                                             ; preds = %143
  %1067 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1068 = load i64, i64* %1067, align 8
  %1069 = load i64, i64* %126, align 8
  %1070 = icmp eq i64 %1068, %1069
  br i1 %1070, label %6488, label %1071

1071:                                             ; preds = %1066
  %1072 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1073 = load i32, i32* %38, align 8
  %1074 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1072, i64 0, i32 1
  %1075 = load i32, i32* %1074, align 8
  %1076 = sub nsw i32 %1075, %1073
  %1077 = icmp sgt i32 %1076, 0
  %1078 = select i1 %1077, i32 %1076, i32 0
  store i32 %1078, i32* %1074, align 8
  %1079 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1072, i64 0, i32 4
  %1080 = load i64*, i64** %1079, align 8
  %1081 = zext i32 %1078 to i64
  %1082 = getelementptr inbounds i64, i64* %1080, i64 %1081
  %1083 = sext i32 %1073 to i64
  %1084 = sub nsw i64 0, %1083
  %1085 = getelementptr inbounds i64, i64* %1082, i64 %1084
  %1086 = bitcast i64* %1085 to %"struct.icu_69::REStackFrame"*
  br label %6488

1087:                                             ; preds = %143
  %1088 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1089 = load i64, i64* %1088, align 8
  %1090 = load i64, i64* %126, align 8
  %1091 = icmp eq i64 %1089, %1090
  br i1 %1091, label %6488, label %1092

1092:                                             ; preds = %1087
  %1093 = load %struct.UText*, %struct.UText** %103, align 8
  %1094 = getelementptr inbounds %struct.UText, %struct.UText* %1093, i64 0, i32 7
  %1095 = load i64, i64* %1094, align 8
  %1096 = sub nsw i64 %1089, %1095
  %1097 = icmp sgt i64 %1096, -1
  br i1 %1097, label %1098, label %1112

1098:                                             ; preds = %1092
  %1099 = getelementptr inbounds %struct.UText, %struct.UText* %1093, i64 0, i32 6
  %1100 = load i32, i32* %1099, align 4
  %1101 = sext i32 %1100 to i64
  %1102 = icmp slt i64 %1096, %1101
  br i1 %1102, label %1103, label %1112

1103:                                             ; preds = %1098
  %1104 = getelementptr inbounds %struct.UText, %struct.UText* %1093, i64 0, i32 10
  %1105 = load i16*, i16** %1104, align 8
  %1106 = getelementptr inbounds i16, i16* %1105, i64 %1096
  %1107 = load i16, i16* %1106, align 2
  %1108 = icmp ult i16 %1107, -9216
  br i1 %1108, label %1109, label %1112

1109:                                             ; preds = %1103
  %1110 = trunc i64 %1096 to i32
  %1111 = getelementptr inbounds %struct.UText, %struct.UText* %1093, i64 0, i32 8
  store i32 %1110, i32* %1111, align 8
  br label %1113

1112:                                             ; preds = %1103, %1098, %1092
  call void @utext_setNativeIndex_69(%struct.UText* %1093, i64 %1089) #12
  br label %1113

1113:                                             ; preds = %1112, %1109
  %1114 = load %struct.UText*, %struct.UText** %103, align 8
  %1115 = getelementptr inbounds %struct.UText, %struct.UText* %1114, i64 0, i32 8
  %1116 = load i32, i32* %1115, align 8
  %1117 = icmp sgt i32 %1116, 0
  br i1 %1117, label %1118, label %1129

1118:                                             ; preds = %1113
  %1119 = getelementptr inbounds %struct.UText, %struct.UText* %1114, i64 0, i32 10
  %1120 = load i16*, i16** %1119, align 8
  %1121 = add nsw i32 %1116, -1
  %1122 = sext i32 %1121 to i64
  %1123 = getelementptr inbounds i16, i16* %1120, i64 %1122
  %1124 = load i16, i16* %1123, align 2
  %1125 = icmp ult i16 %1124, -10240
  br i1 %1125, label %1126, label %1129

1126:                                             ; preds = %1118
  store i32 %1121, i32* %1115, align 8
  %1127 = load i16, i16* %1123, align 2
  %1128 = zext i16 %1127 to i32
  br label %1131

1129:                                             ; preds = %1118, %1113
  %1130 = call i32 @utext_previous32_69(%struct.UText* %1114) #12
  br label %1131

1131:                                             ; preds = %1129, %1126
  %1132 = phi i32 [ %1128, %1126 ], [ %1130, %1129 ]
  %1133 = load i64, i64* %1088, align 8
  %1134 = load i64, i64* %120, align 8
  %1135 = icmp slt i64 %1133, %1134
  %1136 = and i32 %1132, -8368
  %1137 = icmp eq i32 %1136, 0
  %1138 = and i1 %1137, %1135
  br i1 %1138, label %1139, label %1140

1139:                                             ; preds = %1131
  switch i32 %1132, label %1140 [
    i32 8232, label %6488
    i32 133, label %6488
    i32 13, label %6488
    i32 12, label %6488
    i32 11, label %6488
    i32 10, label %6488
    i32 8233, label %6488
  ]

1140:                                             ; preds = %1139, %1131
  %1141 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1142 = load i32, i32* %38, align 8
  %1143 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1141, i64 0, i32 1
  %1144 = load i32, i32* %1143, align 8
  %1145 = sub nsw i32 %1144, %1142
  %1146 = icmp sgt i32 %1145, 0
  %1147 = select i1 %1146, i32 %1145, i32 0
  store i32 %1147, i32* %1143, align 8
  %1148 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1141, i64 0, i32 4
  %1149 = load i64*, i64** %1148, align 8
  %1150 = zext i32 %1147 to i64
  %1151 = getelementptr inbounds i64, i64* %1149, i64 %1150
  %1152 = sext i32 %1142 to i64
  %1153 = sub nsw i64 0, %1152
  %1154 = getelementptr inbounds i64, i64* %1151, i64 %1153
  %1155 = bitcast i64* %1154 to %"struct.icu_69::REStackFrame"*
  br label %6488

1156:                                             ; preds = %143
  %1157 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1158 = load i64, i64* %1157, align 8
  %1159 = load i64, i64* %126, align 8
  %1160 = icmp sgt i64 %1158, %1159
  br i1 %1160, label %1161, label %6488

1161:                                             ; preds = %1156
  %1162 = load %struct.UText*, %struct.UText** %103, align 8
  %1163 = getelementptr inbounds %struct.UText, %struct.UText* %1162, i64 0, i32 7
  %1164 = load i64, i64* %1163, align 8
  %1165 = sub nsw i64 %1158, %1164
  %1166 = icmp sgt i64 %1165, -1
  br i1 %1166, label %1167, label %1181

1167:                                             ; preds = %1161
  %1168 = getelementptr inbounds %struct.UText, %struct.UText* %1162, i64 0, i32 6
  %1169 = load i32, i32* %1168, align 4
  %1170 = sext i32 %1169 to i64
  %1171 = icmp slt i64 %1165, %1170
  br i1 %1171, label %1172, label %1181

1172:                                             ; preds = %1167
  %1173 = getelementptr inbounds %struct.UText, %struct.UText* %1162, i64 0, i32 10
  %1174 = load i16*, i16** %1173, align 8
  %1175 = getelementptr inbounds i16, i16* %1174, i64 %1165
  %1176 = load i16, i16* %1175, align 2
  %1177 = icmp ult i16 %1176, -9216
  br i1 %1177, label %1178, label %1181

1178:                                             ; preds = %1172
  %1179 = trunc i64 %1165 to i32
  %1180 = getelementptr inbounds %struct.UText, %struct.UText* %1162, i64 0, i32 8
  store i32 %1179, i32* %1180, align 8
  br label %1182

1181:                                             ; preds = %1172, %1167, %1161
  call void @utext_setNativeIndex_69(%struct.UText* %1162, i64 %1158) #12
  br label %1182

1182:                                             ; preds = %1181, %1178
  %1183 = load %struct.UText*, %struct.UText** %103, align 8
  %1184 = getelementptr inbounds %struct.UText, %struct.UText* %1183, i64 0, i32 8
  %1185 = load i32, i32* %1184, align 8
  %1186 = icmp sgt i32 %1185, 0
  br i1 %1186, label %1187, label %1198

1187:                                             ; preds = %1182
  %1188 = getelementptr inbounds %struct.UText, %struct.UText* %1183, i64 0, i32 10
  %1189 = load i16*, i16** %1188, align 8
  %1190 = add nsw i32 %1185, -1
  %1191 = sext i32 %1190 to i64
  %1192 = getelementptr inbounds i16, i16* %1189, i64 %1191
  %1193 = load i16, i16* %1192, align 2
  %1194 = icmp ult i16 %1193, -10240
  br i1 %1194, label %1195, label %1198

1195:                                             ; preds = %1187
  store i32 %1190, i32* %1184, align 8
  %1196 = load i16, i16* %1192, align 2
  %1197 = zext i16 %1196 to i32
  br label %1200

1198:                                             ; preds = %1187, %1182
  %1199 = call i32 @utext_previous32_69(%struct.UText* %1183) #12
  br label %1200

1200:                                             ; preds = %1198, %1195
  %1201 = phi i32 [ %1197, %1195 ], [ %1199, %1198 ]
  %1202 = icmp eq i32 %1201, 10
  br i1 %1202, label %6488, label %1203

1203:                                             ; preds = %1200
  %1204 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1205 = load i32, i32* %38, align 8
  %1206 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1204, i64 0, i32 1
  %1207 = load i32, i32* %1206, align 8
  %1208 = sub nsw i32 %1207, %1205
  %1209 = icmp sgt i32 %1208, 0
  %1210 = select i1 %1209, i32 %1208, i32 0
  store i32 %1210, i32* %1206, align 8
  %1211 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1204, i64 0, i32 4
  %1212 = load i64*, i64** %1211, align 8
  %1213 = zext i32 %1210 to i64
  %1214 = getelementptr inbounds i64, i64* %1212, i64 %1213
  %1215 = sext i32 %1205 to i64
  %1216 = sub nsw i64 0, %1215
  %1217 = getelementptr inbounds i64, i64* %1214, i64 %1216
  %1218 = bitcast i64* %1217 to %"struct.icu_69::REStackFrame"*
  br label %6488

1219:                                             ; preds = %143
  %1220 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1221 = load i64, i64* %1220, align 8
  %1222 = call signext i8 @_ZN6icu_6912RegexMatcher14isWordBoundaryEl(%"class.icu_69::RegexMatcher"* %0, i64 %1221)
  %1223 = icmp ne i32 %151, 0
  %1224 = zext i1 %1223 to i8
  %1225 = icmp eq i8 %1222, %1224
  br i1 %1225, label %1226, label %6488

1226:                                             ; preds = %1219
  %1227 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1228 = load i32, i32* %38, align 8
  %1229 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1227, i64 0, i32 1
  %1230 = load i32, i32* %1229, align 8
  %1231 = sub nsw i32 %1230, %1228
  %1232 = icmp sgt i32 %1231, 0
  %1233 = select i1 %1232, i32 %1231, i32 0
  store i32 %1233, i32* %1229, align 8
  %1234 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1227, i64 0, i32 4
  %1235 = load i64*, i64** %1234, align 8
  %1236 = zext i32 %1233 to i64
  %1237 = getelementptr inbounds i64, i64* %1235, i64 %1236
  %1238 = sext i32 %1228 to i64
  %1239 = sub nsw i64 0, %1238
  %1240 = getelementptr inbounds i64, i64* %1237, i64 %1239
  %1241 = bitcast i64* %1240 to %"struct.icu_69::REStackFrame"*
  br label %6488

1242:                                             ; preds = %143
  %1243 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1244 = load i64, i64* %1243, align 8
  %1245 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %125, align 8
  %1246 = icmp eq %"class.icu_69::BreakIterator"* %1245, null
  br i1 %1246, label %1247, label %1258

1247:                                             ; preds = %1242
  %1248 = call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getEnglishEv() #12
  %1249 = call %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIterator18createWordInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224) %1248, i32* dereferenceable(4) %3) #12
  store %"class.icu_69::BreakIterator"* %1249, %"class.icu_69::BreakIterator"** %125, align 8
  %1250 = load i32, i32* %3, align 4
  %1251 = icmp slt i32 %1250, 1
  br i1 %1251, label %1252, label %1270

1252:                                             ; preds = %1247
  %1253 = load %struct.UText*, %struct.UText** %103, align 8
  %1254 = bitcast %"class.icu_69::BreakIterator"* %1249 to void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)***
  %1255 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)**, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*** %1254, align 8
  %1256 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %1255, i64 8
  %1257 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %1256, align 8
  call void %1257(%"class.icu_69::BreakIterator"* %1249, %struct.UText* %1253, i32* dereferenceable(4) %3) #12
  br label %1258

1258:                                             ; preds = %1252, %1242
  %1259 = load i64, i64* %116, align 8
  %1260 = icmp sgt i64 %1259, %1244
  br i1 %1260, label %1262, label %1261

1261:                                             ; preds = %1258
  store i8 1, i8* %110, align 8
  br label %1270

1262:                                             ; preds = %1258
  %1263 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %125, align 8
  %1264 = trunc i64 %1244 to i32
  %1265 = bitcast %"class.icu_69::BreakIterator"* %1263 to i8 (%"class.icu_69::BreakIterator"*, i32)***
  %1266 = load i8 (%"class.icu_69::BreakIterator"*, i32)**, i8 (%"class.icu_69::BreakIterator"*, i32)*** %1265, align 8
  %1267 = getelementptr inbounds i8 (%"class.icu_69::BreakIterator"*, i32)*, i8 (%"class.icu_69::BreakIterator"*, i32)** %1266, i64 17
  %1268 = load i8 (%"class.icu_69::BreakIterator"*, i32)*, i8 (%"class.icu_69::BreakIterator"*, i32)** %1267, align 8
  %1269 = call signext i8 %1268(%"class.icu_69::BreakIterator"* %1263, i32 %1264) #12
  br label %1270

1270:                                             ; preds = %1247, %1261, %1262
  %1271 = phi i8 [ 0, %1247 ], [ 1, %1261 ], [ %1269, %1262 ]
  %1272 = icmp ne i32 %151, 0
  %1273 = zext i1 %1272 to i8
  %1274 = icmp eq i8 %1271, %1273
  br i1 %1274, label %1275, label %6488

1275:                                             ; preds = %1270
  %1276 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1277 = load i32, i32* %38, align 8
  %1278 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1276, i64 0, i32 1
  %1279 = load i32, i32* %1278, align 8
  %1280 = sub nsw i32 %1279, %1277
  %1281 = icmp sgt i32 %1280, 0
  %1282 = select i1 %1281, i32 %1280, i32 0
  store i32 %1282, i32* %1278, align 8
  %1283 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1276, i64 0, i32 4
  %1284 = load i64*, i64** %1283, align 8
  %1285 = zext i32 %1282 to i64
  %1286 = getelementptr inbounds i64, i64* %1284, i64 %1285
  %1287 = sext i32 %1277 to i64
  %1288 = sub nsw i64 0, %1287
  %1289 = getelementptr inbounds i64, i64* %1286, i64 %1288
  %1290 = bitcast i64* %1289 to %"struct.icu_69::REStackFrame"*
  br label %6488

1291:                                             ; preds = %143
  %1292 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1293 = load i64, i64* %1292, align 8
  %1294 = load i64, i64* %109, align 8
  %1295 = icmp slt i64 %1293, %1294
  br i1 %1295, label %1312, label %1296

1296:                                             ; preds = %1291
  store i8 1, i8* %110, align 8
  %1297 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1298 = load i32, i32* %38, align 8
  %1299 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1297, i64 0, i32 1
  %1300 = load i32, i32* %1299, align 8
  %1301 = sub nsw i32 %1300, %1298
  %1302 = icmp sgt i32 %1301, 0
  %1303 = select i1 %1302, i32 %1301, i32 0
  store i32 %1303, i32* %1299, align 8
  %1304 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1297, i64 0, i32 4
  %1305 = load i64*, i64** %1304, align 8
  %1306 = zext i32 %1303 to i64
  %1307 = getelementptr inbounds i64, i64* %1305, i64 %1306
  %1308 = sext i32 %1298 to i64
  %1309 = sub nsw i64 0, %1308
  %1310 = getelementptr inbounds i64, i64* %1307, i64 %1309
  %1311 = bitcast i64* %1310 to %"struct.icu_69::REStackFrame"*
  br label %6488

1312:                                             ; preds = %1291
  %1313 = load %struct.UText*, %struct.UText** %103, align 8
  %1314 = getelementptr inbounds %struct.UText, %struct.UText* %1313, i64 0, i32 7
  %1315 = load i64, i64* %1314, align 8
  %1316 = sub nsw i64 %1293, %1315
  %1317 = icmp sgt i64 %1316, -1
  br i1 %1317, label %1318, label %1332

1318:                                             ; preds = %1312
  %1319 = getelementptr inbounds %struct.UText, %struct.UText* %1313, i64 0, i32 6
  %1320 = load i32, i32* %1319, align 4
  %1321 = sext i32 %1320 to i64
  %1322 = icmp slt i64 %1316, %1321
  br i1 %1322, label %1323, label %1332

1323:                                             ; preds = %1318
  %1324 = getelementptr inbounds %struct.UText, %struct.UText* %1313, i64 0, i32 10
  %1325 = load i16*, i16** %1324, align 8
  %1326 = getelementptr inbounds i16, i16* %1325, i64 %1316
  %1327 = load i16, i16* %1326, align 2
  %1328 = icmp ult i16 %1327, -9216
  br i1 %1328, label %1329, label %1332

1329:                                             ; preds = %1323
  %1330 = trunc i64 %1316 to i32
  %1331 = getelementptr inbounds %struct.UText, %struct.UText* %1313, i64 0, i32 8
  store i32 %1330, i32* %1331, align 8
  br label %1333

1332:                                             ; preds = %1323, %1318, %1312
  call void @utext_setNativeIndex_69(%struct.UText* %1313, i64 %1293) #12
  br label %1333

1333:                                             ; preds = %1332, %1329
  %1334 = load %struct.UText*, %struct.UText** %103, align 8
  %1335 = getelementptr inbounds %struct.UText, %struct.UText* %1334, i64 0, i32 8
  %1336 = load i32, i32* %1335, align 8
  %1337 = getelementptr inbounds %struct.UText, %struct.UText* %1334, i64 0, i32 9
  %1338 = load i32, i32* %1337, align 4
  %1339 = icmp slt i32 %1336, %1338
  br i1 %1339, label %1340, label %1351

1340:                                             ; preds = %1333
  %1341 = getelementptr inbounds %struct.UText, %struct.UText* %1334, i64 0, i32 10
  %1342 = load i16*, i16** %1341, align 8
  %1343 = sext i32 %1336 to i64
  %1344 = getelementptr inbounds i16, i16* %1342, i64 %1343
  %1345 = load i16, i16* %1344, align 2
  %1346 = icmp ult i16 %1345, -10240
  br i1 %1346, label %1347, label %1351

1347:                                             ; preds = %1340
  %1348 = add nsw i32 %1336, 1
  store i32 %1348, i32* %1335, align 8
  %1349 = load i16, i16* %1344, align 2
  %1350 = zext i16 %1349 to i32
  br label %1353

1351:                                             ; preds = %1340, %1333
  %1352 = call i32 @utext_next32_69(%struct.UText* %1334) #12
  br label %1353

1353:                                             ; preds = %1351, %1347
  %1354 = phi i32 [ %1350, %1347 ], [ %1352, %1351 ]
  %1355 = call signext i8 @u_charType_69(i32 %1354) #12
  %1356 = icmp eq i8 %1355, 9
  %1357 = icmp ne i32 %151, 0
  %1358 = xor i1 %1357, %1356
  br i1 %1358, label %1359, label %1379

1359:                                             ; preds = %1353
  %1360 = load %struct.UText*, %struct.UText** %103, align 8
  %1361 = getelementptr inbounds %struct.UText, %struct.UText* %1360, i64 0, i32 8
  %1362 = load i32, i32* %1361, align 8
  %1363 = getelementptr inbounds %struct.UText, %struct.UText* %1360, i64 0, i32 6
  %1364 = load i32, i32* %1363, align 4
  %1365 = icmp sgt i32 %1362, %1364
  br i1 %1365, label %1371, label %1366

1366:                                             ; preds = %1359
  %1367 = getelementptr inbounds %struct.UText, %struct.UText* %1360, i64 0, i32 7
  %1368 = load i64, i64* %1367, align 8
  %1369 = sext i32 %1362 to i64
  %1370 = add nsw i64 %1368, %1369
  br label %1377

1371:                                             ; preds = %1359
  %1372 = getelementptr inbounds %struct.UText, %struct.UText* %1360, i64 0, i32 11
  %1373 = load %struct.UTextFuncs*, %struct.UTextFuncs** %1372, align 8
  %1374 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %1373, i64 0, i32 10
  %1375 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %1374, align 8
  %1376 = call i64 %1375(%struct.UText* %1360) #12
  br label %1377

1377:                                             ; preds = %1371, %1366
  %1378 = phi i64 [ %1370, %1366 ], [ %1376, %1371 ]
  store i64 %1378, i64* %1292, align 8
  br label %6488

1379:                                             ; preds = %1353
  %1380 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1381 = load i32, i32* %38, align 8
  %1382 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1380, i64 0, i32 1
  %1383 = load i32, i32* %1382, align 8
  %1384 = sub nsw i32 %1383, %1381
  %1385 = icmp sgt i32 %1384, 0
  %1386 = select i1 %1385, i32 %1384, i32 0
  store i32 %1386, i32* %1382, align 8
  %1387 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1380, i64 0, i32 4
  %1388 = load i64*, i64** %1387, align 8
  %1389 = zext i32 %1386 to i64
  %1390 = getelementptr inbounds i64, i64* %1388, i64 %1389
  %1391 = sext i32 %1381 to i64
  %1392 = sub nsw i64 0, %1391
  %1393 = getelementptr inbounds i64, i64* %1390, i64 %1392
  %1394 = bitcast i64* %1393 to %"struct.icu_69::REStackFrame"*
  br label %6488

1395:                                             ; preds = %143
  %1396 = load i8, i8* %123, align 2
  %1397 = icmp eq i8 %1396, 0
  %1398 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1399 = load i64, i64* %1398, align 8
  br i1 %1397, label %1403, label %1400

1400:                                             ; preds = %1395
  %1401 = load i64, i64* %124, align 8
  %1402 = icmp eq i64 %1399, %1401
  br i1 %1402, label %6488, label %1406

1403:                                             ; preds = %1395
  %1404 = load i64, i64* %112, align 8
  %1405 = icmp eq i64 %1399, %1404
  br i1 %1405, label %6488, label %1406

1406:                                             ; preds = %1400, %1403
  %1407 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1408 = load i32, i32* %38, align 8
  %1409 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1407, i64 0, i32 1
  %1410 = load i32, i32* %1409, align 8
  %1411 = sub nsw i32 %1410, %1408
  %1412 = icmp sgt i32 %1411, 0
  %1413 = select i1 %1412, i32 %1411, i32 0
  store i32 %1413, i32* %1409, align 8
  %1414 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1407, i64 0, i32 4
  %1415 = load i64*, i64** %1414, align 8
  %1416 = zext i32 %1413 to i64
  %1417 = getelementptr inbounds i64, i64* %1415, i64 %1416
  %1418 = sext i32 %1408 to i64
  %1419 = sub nsw i64 0, %1418
  %1420 = getelementptr inbounds i64, i64* %1417, i64 %1419
  %1421 = bitcast i64* %1420 to %"struct.icu_69::REStackFrame"*
  br label %6488

1422:                                             ; preds = %143
  %1423 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1424 = load i64, i64* %1423, align 8
  %1425 = load i64, i64* %109, align 8
  %1426 = icmp slt i64 %1424, %1425
  br i1 %1426, label %1443, label %1427

1427:                                             ; preds = %1422
  store i8 1, i8* %110, align 8
  %1428 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1429 = load i32, i32* %38, align 8
  %1430 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1428, i64 0, i32 1
  %1431 = load i32, i32* %1430, align 8
  %1432 = sub nsw i32 %1431, %1429
  %1433 = icmp sgt i32 %1432, 0
  %1434 = select i1 %1433, i32 %1432, i32 0
  store i32 %1434, i32* %1430, align 8
  %1435 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1428, i64 0, i32 4
  %1436 = load i64*, i64** %1435, align 8
  %1437 = zext i32 %1434 to i64
  %1438 = getelementptr inbounds i64, i64* %1436, i64 %1437
  %1439 = sext i32 %1429 to i64
  %1440 = sub nsw i64 0, %1439
  %1441 = getelementptr inbounds i64, i64* %1438, i64 %1440
  %1442 = bitcast i64* %1441 to %"struct.icu_69::REStackFrame"*
  br label %6488

1443:                                             ; preds = %1422
  %1444 = load %struct.UText*, %struct.UText** %103, align 8
  %1445 = getelementptr inbounds %struct.UText, %struct.UText* %1444, i64 0, i32 7
  %1446 = load i64, i64* %1445, align 8
  %1447 = sub nsw i64 %1424, %1446
  %1448 = icmp sgt i64 %1447, -1
  br i1 %1448, label %1449, label %1463

1449:                                             ; preds = %1443
  %1450 = getelementptr inbounds %struct.UText, %struct.UText* %1444, i64 0, i32 6
  %1451 = load i32, i32* %1450, align 4
  %1452 = sext i32 %1451 to i64
  %1453 = icmp slt i64 %1447, %1452
  br i1 %1453, label %1454, label %1463

1454:                                             ; preds = %1449
  %1455 = getelementptr inbounds %struct.UText, %struct.UText* %1444, i64 0, i32 10
  %1456 = load i16*, i16** %1455, align 8
  %1457 = getelementptr inbounds i16, i16* %1456, i64 %1447
  %1458 = load i16, i16* %1457, align 2
  %1459 = icmp ult i16 %1458, -9216
  br i1 %1459, label %1460, label %1463

1460:                                             ; preds = %1454
  %1461 = trunc i64 %1447 to i32
  %1462 = getelementptr inbounds %struct.UText, %struct.UText* %1444, i64 0, i32 8
  store i32 %1461, i32* %1462, align 8
  br label %1464

1463:                                             ; preds = %1454, %1449, %1443
  call void @utext_setNativeIndex_69(%struct.UText* %1444, i64 %1424) #12
  br label %1464

1464:                                             ; preds = %1463, %1460
  %1465 = load %struct.UText*, %struct.UText** %103, align 8
  %1466 = getelementptr inbounds %struct.UText, %struct.UText* %1465, i64 0, i32 8
  %1467 = load i32, i32* %1466, align 8
  %1468 = getelementptr inbounds %struct.UText, %struct.UText* %1465, i64 0, i32 9
  %1469 = load i32, i32* %1468, align 4
  %1470 = icmp slt i32 %1467, %1469
  br i1 %1470, label %1471, label %1482

1471:                                             ; preds = %1464
  %1472 = getelementptr inbounds %struct.UText, %struct.UText* %1465, i64 0, i32 10
  %1473 = load i16*, i16** %1472, align 8
  %1474 = sext i32 %1467 to i64
  %1475 = getelementptr inbounds i16, i16* %1473, i64 %1474
  %1476 = load i16, i16* %1475, align 2
  %1477 = icmp ult i16 %1476, -10240
  br i1 %1477, label %1478, label %1482

1478:                                             ; preds = %1471
  %1479 = add nsw i32 %1467, 1
  store i32 %1479, i32* %1466, align 8
  %1480 = load i16, i16* %1475, align 2
  %1481 = zext i16 %1480 to i32
  br label %1484

1482:                                             ; preds = %1471, %1464
  %1483 = call i32 @utext_next32_69(%struct.UText* %1465) #12
  br label %1484

1484:                                             ; preds = %1482, %1478
  %1485 = phi i32 [ %1481, %1478 ], [ %1483, %1482 ]
  %1486 = call signext i8 @u_charType_69(i32 %1485) #12
  %1487 = icmp eq i8 %1486, 12
  %1488 = icmp eq i32 %1485, 9
  %1489 = or i1 %1488, %1487
  %1490 = icmp ne i32 %151, 0
  %1491 = xor i1 %1490, %1489
  br i1 %1491, label %1492, label %1512

1492:                                             ; preds = %1484
  %1493 = load %struct.UText*, %struct.UText** %103, align 8
  %1494 = getelementptr inbounds %struct.UText, %struct.UText* %1493, i64 0, i32 8
  %1495 = load i32, i32* %1494, align 8
  %1496 = getelementptr inbounds %struct.UText, %struct.UText* %1493, i64 0, i32 6
  %1497 = load i32, i32* %1496, align 4
  %1498 = icmp sgt i32 %1495, %1497
  br i1 %1498, label %1504, label %1499

1499:                                             ; preds = %1492
  %1500 = getelementptr inbounds %struct.UText, %struct.UText* %1493, i64 0, i32 7
  %1501 = load i64, i64* %1500, align 8
  %1502 = sext i32 %1495 to i64
  %1503 = add nsw i64 %1501, %1502
  br label %1510

1504:                                             ; preds = %1492
  %1505 = getelementptr inbounds %struct.UText, %struct.UText* %1493, i64 0, i32 11
  %1506 = load %struct.UTextFuncs*, %struct.UTextFuncs** %1505, align 8
  %1507 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %1506, i64 0, i32 10
  %1508 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %1507, align 8
  %1509 = call i64 %1508(%struct.UText* %1493) #12
  br label %1510

1510:                                             ; preds = %1504, %1499
  %1511 = phi i64 [ %1503, %1499 ], [ %1509, %1504 ]
  store i64 %1511, i64* %1423, align 8
  br label %6488

1512:                                             ; preds = %1484
  %1513 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1514 = load i32, i32* %38, align 8
  %1515 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1513, i64 0, i32 1
  %1516 = load i32, i32* %1515, align 8
  %1517 = sub nsw i32 %1516, %1514
  %1518 = icmp sgt i32 %1517, 0
  %1519 = select i1 %1518, i32 %1517, i32 0
  store i32 %1519, i32* %1515, align 8
  %1520 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1513, i64 0, i32 4
  %1521 = load i64*, i64** %1520, align 8
  %1522 = zext i32 %1519 to i64
  %1523 = getelementptr inbounds i64, i64* %1521, i64 %1522
  %1524 = sext i32 %1514 to i64
  %1525 = sub nsw i64 0, %1524
  %1526 = getelementptr inbounds i64, i64* %1523, i64 %1525
  %1527 = bitcast i64* %1526 to %"struct.icu_69::REStackFrame"*
  br label %6488

1528:                                             ; preds = %143
  %1529 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1530 = load i64, i64* %1529, align 8
  %1531 = load i64, i64* %109, align 8
  %1532 = icmp slt i64 %1530, %1531
  br i1 %1532, label %1549, label %1533

1533:                                             ; preds = %1528
  store i8 1, i8* %110, align 8
  %1534 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1535 = load i32, i32* %38, align 8
  %1536 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1534, i64 0, i32 1
  %1537 = load i32, i32* %1536, align 8
  %1538 = sub nsw i32 %1537, %1535
  %1539 = icmp sgt i32 %1538, 0
  %1540 = select i1 %1539, i32 %1538, i32 0
  store i32 %1540, i32* %1536, align 8
  %1541 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1534, i64 0, i32 4
  %1542 = load i64*, i64** %1541, align 8
  %1543 = zext i32 %1540 to i64
  %1544 = getelementptr inbounds i64, i64* %1542, i64 %1543
  %1545 = sext i32 %1535 to i64
  %1546 = sub nsw i64 0, %1545
  %1547 = getelementptr inbounds i64, i64* %1544, i64 %1546
  %1548 = bitcast i64* %1547 to %"struct.icu_69::REStackFrame"*
  br label %6488

1549:                                             ; preds = %1528
  %1550 = load %struct.UText*, %struct.UText** %103, align 8
  %1551 = getelementptr inbounds %struct.UText, %struct.UText* %1550, i64 0, i32 7
  %1552 = load i64, i64* %1551, align 8
  %1553 = sub nsw i64 %1530, %1552
  %1554 = icmp sgt i64 %1553, -1
  br i1 %1554, label %1555, label %1569

1555:                                             ; preds = %1549
  %1556 = getelementptr inbounds %struct.UText, %struct.UText* %1550, i64 0, i32 6
  %1557 = load i32, i32* %1556, align 4
  %1558 = sext i32 %1557 to i64
  %1559 = icmp slt i64 %1553, %1558
  br i1 %1559, label %1560, label %1569

1560:                                             ; preds = %1555
  %1561 = getelementptr inbounds %struct.UText, %struct.UText* %1550, i64 0, i32 10
  %1562 = load i16*, i16** %1561, align 8
  %1563 = getelementptr inbounds i16, i16* %1562, i64 %1553
  %1564 = load i16, i16* %1563, align 2
  %1565 = icmp ult i16 %1564, -9216
  br i1 %1565, label %1566, label %1569

1566:                                             ; preds = %1560
  %1567 = trunc i64 %1553 to i32
  %1568 = getelementptr inbounds %struct.UText, %struct.UText* %1550, i64 0, i32 8
  store i32 %1567, i32* %1568, align 8
  br label %1570

1569:                                             ; preds = %1560, %1555, %1549
  call void @utext_setNativeIndex_69(%struct.UText* %1550, i64 %1530) #12
  br label %1570

1570:                                             ; preds = %1569, %1566
  %1571 = load %struct.UText*, %struct.UText** %103, align 8
  %1572 = getelementptr inbounds %struct.UText, %struct.UText* %1571, i64 0, i32 8
  %1573 = load i32, i32* %1572, align 8
  %1574 = getelementptr inbounds %struct.UText, %struct.UText* %1571, i64 0, i32 9
  %1575 = load i32, i32* %1574, align 4
  %1576 = icmp slt i32 %1573, %1575
  br i1 %1576, label %1577, label %1588

1577:                                             ; preds = %1570
  %1578 = getelementptr inbounds %struct.UText, %struct.UText* %1571, i64 0, i32 10
  %1579 = load i16*, i16** %1578, align 8
  %1580 = sext i32 %1573 to i64
  %1581 = getelementptr inbounds i16, i16* %1579, i64 %1580
  %1582 = load i16, i16* %1581, align 2
  %1583 = icmp ult i16 %1582, -10240
  br i1 %1583, label %1584, label %1588

1584:                                             ; preds = %1577
  %1585 = add nsw i32 %1573, 1
  store i32 %1585, i32* %1572, align 8
  %1586 = load i16, i16* %1581, align 2
  %1587 = zext i16 %1586 to i32
  br label %1590

1588:                                             ; preds = %1577, %1570
  %1589 = call i32 @utext_next32_69(%struct.UText* %1571) #12
  br label %1590

1590:                                             ; preds = %1588, %1584
  %1591 = phi i32 [ %1587, %1584 ], [ %1589, %1588 ]
  %1592 = and i32 %1591, -8368
  %1593 = icmp eq i32 %1592, 0
  br i1 %1593, label %1594, label %1622

1594:                                             ; preds = %1590
  switch i32 %1591, label %1622 [
    i32 13, label %1595
    i32 10, label %1602
    i32 11, label %1602
    i32 12, label %1602
    i32 133, label %1602
    i32 8232, label %1602
    i32 8233, label %1602
  ]

1595:                                             ; preds = %1594
  %1596 = load %struct.UText*, %struct.UText** %103, align 8
  %1597 = call i32 @utext_current32_69(%struct.UText* %1596) #12
  %1598 = icmp eq i32 %1597, 10
  br i1 %1598, label %1599, label %1602

1599:                                             ; preds = %1595
  %1600 = load %struct.UText*, %struct.UText** %103, align 8
  %1601 = call i32 @utext_next32_69(%struct.UText* %1600) #12
  br label %1602

1602:                                             ; preds = %1594, %1594, %1594, %1594, %1594, %1594, %1599, %1595
  %1603 = load %struct.UText*, %struct.UText** %103, align 8
  %1604 = getelementptr inbounds %struct.UText, %struct.UText* %1603, i64 0, i32 8
  %1605 = load i32, i32* %1604, align 8
  %1606 = getelementptr inbounds %struct.UText, %struct.UText* %1603, i64 0, i32 6
  %1607 = load i32, i32* %1606, align 4
  %1608 = icmp sgt i32 %1605, %1607
  br i1 %1608, label %1614, label %1609

1609:                                             ; preds = %1602
  %1610 = getelementptr inbounds %struct.UText, %struct.UText* %1603, i64 0, i32 7
  %1611 = load i64, i64* %1610, align 8
  %1612 = sext i32 %1605 to i64
  %1613 = add nsw i64 %1611, %1612
  br label %1620

1614:                                             ; preds = %1602
  %1615 = getelementptr inbounds %struct.UText, %struct.UText* %1603, i64 0, i32 11
  %1616 = load %struct.UTextFuncs*, %struct.UTextFuncs** %1615, align 8
  %1617 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %1616, i64 0, i32 10
  %1618 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %1617, align 8
  %1619 = call i64 %1618(%struct.UText* %1603) #12
  br label %1620

1620:                                             ; preds = %1614, %1609
  %1621 = phi i64 [ %1613, %1609 ], [ %1619, %1614 ]
  store i64 %1621, i64* %1529, align 8
  br label %6488

1622:                                             ; preds = %1594, %1590
  %1623 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1624 = load i32, i32* %38, align 8
  %1625 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1623, i64 0, i32 1
  %1626 = load i32, i32* %1625, align 8
  %1627 = sub nsw i32 %1626, %1624
  %1628 = icmp sgt i32 %1627, 0
  %1629 = select i1 %1628, i32 %1627, i32 0
  store i32 %1629, i32* %1625, align 8
  %1630 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1623, i64 0, i32 4
  %1631 = load i64*, i64** %1630, align 8
  %1632 = zext i32 %1629 to i64
  %1633 = getelementptr inbounds i64, i64* %1631, i64 %1632
  %1634 = sext i32 %1624 to i64
  %1635 = sub nsw i64 0, %1634
  %1636 = getelementptr inbounds i64, i64* %1633, i64 %1635
  %1637 = bitcast i64* %1636 to %"struct.icu_69::REStackFrame"*
  br label %6488

1638:                                             ; preds = %143
  %1639 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1640 = load i64, i64* %1639, align 8
  %1641 = load i64, i64* %109, align 8
  %1642 = icmp slt i64 %1640, %1641
  br i1 %1642, label %1659, label %1643

1643:                                             ; preds = %1638
  store i8 1, i8* %110, align 8
  %1644 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1645 = load i32, i32* %38, align 8
  %1646 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1644, i64 0, i32 1
  %1647 = load i32, i32* %1646, align 8
  %1648 = sub nsw i32 %1647, %1645
  %1649 = icmp sgt i32 %1648, 0
  %1650 = select i1 %1649, i32 %1648, i32 0
  store i32 %1650, i32* %1646, align 8
  %1651 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1644, i64 0, i32 4
  %1652 = load i64*, i64** %1651, align 8
  %1653 = zext i32 %1650 to i64
  %1654 = getelementptr inbounds i64, i64* %1652, i64 %1653
  %1655 = sext i32 %1645 to i64
  %1656 = sub nsw i64 0, %1655
  %1657 = getelementptr inbounds i64, i64* %1654, i64 %1656
  %1658 = bitcast i64* %1657 to %"struct.icu_69::REStackFrame"*
  br label %6488

1659:                                             ; preds = %1638
  %1660 = load %struct.UText*, %struct.UText** %103, align 8
  %1661 = getelementptr inbounds %struct.UText, %struct.UText* %1660, i64 0, i32 7
  %1662 = load i64, i64* %1661, align 8
  %1663 = sub nsw i64 %1640, %1662
  %1664 = icmp sgt i64 %1663, -1
  br i1 %1664, label %1665, label %1679

1665:                                             ; preds = %1659
  %1666 = getelementptr inbounds %struct.UText, %struct.UText* %1660, i64 0, i32 6
  %1667 = load i32, i32* %1666, align 4
  %1668 = sext i32 %1667 to i64
  %1669 = icmp slt i64 %1663, %1668
  br i1 %1669, label %1670, label %1679

1670:                                             ; preds = %1665
  %1671 = getelementptr inbounds %struct.UText, %struct.UText* %1660, i64 0, i32 10
  %1672 = load i16*, i16** %1671, align 8
  %1673 = getelementptr inbounds i16, i16* %1672, i64 %1663
  %1674 = load i16, i16* %1673, align 2
  %1675 = icmp ult i16 %1674, -9216
  br i1 %1675, label %1676, label %1679

1676:                                             ; preds = %1670
  %1677 = trunc i64 %1663 to i32
  %1678 = getelementptr inbounds %struct.UText, %struct.UText* %1660, i64 0, i32 8
  store i32 %1677, i32* %1678, align 8
  br label %1680

1679:                                             ; preds = %1670, %1665, %1659
  call void @utext_setNativeIndex_69(%struct.UText* %1660, i64 %1640) #12
  br label %1680

1680:                                             ; preds = %1679, %1676
  %1681 = load %struct.UText*, %struct.UText** %103, align 8
  %1682 = getelementptr inbounds %struct.UText, %struct.UText* %1681, i64 0, i32 8
  %1683 = load i32, i32* %1682, align 8
  %1684 = getelementptr inbounds %struct.UText, %struct.UText* %1681, i64 0, i32 9
  %1685 = load i32, i32* %1684, align 4
  %1686 = icmp slt i32 %1683, %1685
  br i1 %1686, label %1687, label %1698

1687:                                             ; preds = %1680
  %1688 = getelementptr inbounds %struct.UText, %struct.UText* %1681, i64 0, i32 10
  %1689 = load i16*, i16** %1688, align 8
  %1690 = sext i32 %1683 to i64
  %1691 = getelementptr inbounds i16, i16* %1689, i64 %1690
  %1692 = load i16, i16* %1691, align 2
  %1693 = icmp ult i16 %1692, -10240
  br i1 %1693, label %1694, label %1698

1694:                                             ; preds = %1687
  %1695 = add nsw i32 %1683, 1
  store i32 %1695, i32* %1682, align 8
  %1696 = load i16, i16* %1691, align 2
  %1697 = zext i16 %1696 to i32
  br label %1700

1698:                                             ; preds = %1687, %1680
  %1699 = call i32 @utext_next32_69(%struct.UText* %1681) #12
  br label %1700

1700:                                             ; preds = %1698, %1694
  %1701 = phi i32 [ %1697, %1694 ], [ %1699, %1698 ]
  %1702 = and i32 %1701, -8368
  %1703 = icmp eq i32 %1702, 0
  br i1 %1703, label %1704, label %1708

1704:                                             ; preds = %1700
  switch i32 %1701, label %1705 [
    i32 8232, label %1708
    i32 133, label %1708
    i32 13, label %1708
    i32 12, label %1708
    i32 11, label %1708
    i32 10, label %1708
  ]

1705:                                             ; preds = %1704
  %1706 = icmp eq i32 %1701, 8233
  %1707 = zext i1 %1706 to i8
  br label %1708

1708:                                             ; preds = %1700, %1704, %1704, %1704, %1704, %1704, %1704, %1705
  %1709 = phi i8 [ 0, %1700 ], [ %1707, %1705 ], [ 1, %1704 ], [ 1, %1704 ], [ 1, %1704 ], [ 1, %1704 ], [ 1, %1704 ], [ 1, %1704 ]
  %1710 = icmp ne i32 %151, 0
  %1711 = zext i1 %1710 to i8
  %1712 = icmp eq i8 %1709, %1711
  br i1 %1712, label %1733, label %1713

1713:                                             ; preds = %1708
  %1714 = load %struct.UText*, %struct.UText** %103, align 8
  %1715 = getelementptr inbounds %struct.UText, %struct.UText* %1714, i64 0, i32 8
  %1716 = load i32, i32* %1715, align 8
  %1717 = getelementptr inbounds %struct.UText, %struct.UText* %1714, i64 0, i32 6
  %1718 = load i32, i32* %1717, align 4
  %1719 = icmp sgt i32 %1716, %1718
  br i1 %1719, label %1725, label %1720

1720:                                             ; preds = %1713
  %1721 = getelementptr inbounds %struct.UText, %struct.UText* %1714, i64 0, i32 7
  %1722 = load i64, i64* %1721, align 8
  %1723 = sext i32 %1716 to i64
  %1724 = add nsw i64 %1722, %1723
  br label %1731

1725:                                             ; preds = %1713
  %1726 = getelementptr inbounds %struct.UText, %struct.UText* %1714, i64 0, i32 11
  %1727 = load %struct.UTextFuncs*, %struct.UTextFuncs** %1726, align 8
  %1728 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %1727, i64 0, i32 10
  %1729 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %1728, align 8
  %1730 = call i64 %1729(%struct.UText* %1714) #12
  br label %1731

1731:                                             ; preds = %1725, %1720
  %1732 = phi i64 [ %1724, %1720 ], [ %1730, %1725 ]
  store i64 %1732, i64* %1639, align 8
  br label %6488

1733:                                             ; preds = %1708
  %1734 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1735 = load i32, i32* %38, align 8
  %1736 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1734, i64 0, i32 1
  %1737 = load i32, i32* %1736, align 8
  %1738 = sub nsw i32 %1737, %1735
  %1739 = icmp sgt i32 %1738, 0
  %1740 = select i1 %1739, i32 %1738, i32 0
  store i32 %1740, i32* %1736, align 8
  %1741 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1734, i64 0, i32 4
  %1742 = load i64*, i64** %1741, align 8
  %1743 = zext i32 %1740 to i64
  %1744 = getelementptr inbounds i64, i64* %1742, i64 %1743
  %1745 = sext i32 %1735 to i64
  %1746 = sub nsw i64 0, %1745
  %1747 = getelementptr inbounds i64, i64* %1744, i64 %1746
  %1748 = bitcast i64* %1747 to %"struct.icu_69::REStackFrame"*
  br label %6488

1749:                                             ; preds = %143
  %1750 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1751 = load i64, i64* %1750, align 8
  %1752 = load i64, i64* %109, align 8
  %1753 = icmp slt i64 %1751, %1752
  br i1 %1753, label %1770, label %1754

1754:                                             ; preds = %1749
  store i8 1, i8* %110, align 8
  %1755 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1756 = load i32, i32* %38, align 8
  %1757 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1755, i64 0, i32 1
  %1758 = load i32, i32* %1757, align 8
  %1759 = sub nsw i32 %1758, %1756
  %1760 = icmp sgt i32 %1759, 0
  %1761 = select i1 %1760, i32 %1759, i32 0
  store i32 %1761, i32* %1757, align 8
  %1762 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1755, i64 0, i32 4
  %1763 = load i64*, i64** %1762, align 8
  %1764 = zext i32 %1761 to i64
  %1765 = getelementptr inbounds i64, i64* %1763, i64 %1764
  %1766 = sext i32 %1756 to i64
  %1767 = sub nsw i64 0, %1766
  %1768 = getelementptr inbounds i64, i64* %1765, i64 %1767
  %1769 = bitcast i64* %1768 to %"struct.icu_69::REStackFrame"*
  br label %6488

1770:                                             ; preds = %1749
  %1771 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %122, align 8
  %1772 = icmp eq %"class.icu_69::BreakIterator"* %1771, null
  br i1 %1772, label %1773, label %1785

1773:                                             ; preds = %1770
  %1774 = call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getEnglishEv() #12
  %1775 = call %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIterator23createCharacterInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224) %1774, i32* dereferenceable(4) %3) #12
  store %"class.icu_69::BreakIterator"* %1775, %"class.icu_69::BreakIterator"** %122, align 8
  %1776 = load i32, i32* %3, align 4
  %1777 = icmp slt i32 %1776, 1
  br i1 %1777, label %1778, label %1796

1778:                                             ; preds = %1773
  %1779 = load %struct.UText*, %struct.UText** %103, align 8
  %1780 = bitcast %"class.icu_69::BreakIterator"* %1775 to void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)***
  %1781 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)**, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*** %1780, align 8
  %1782 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %1781, i64 8
  %1783 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %1782, align 8
  call void %1783(%"class.icu_69::BreakIterator"* %1775, %struct.UText* %1779, i32* dereferenceable(4) %3) #12
  %1784 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %122, align 8
  br label %1785

1785:                                             ; preds = %1778, %1770
  %1786 = phi %"class.icu_69::BreakIterator"* [ %1784, %1778 ], [ %1771, %1770 ]
  %1787 = trunc i64 %1751 to i32
  %1788 = bitcast %"class.icu_69::BreakIterator"* %1786 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %1789 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %1788, align 8
  %1790 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %1789, i64 15
  %1791 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %1790, align 8
  %1792 = call i32 %1791(%"class.icu_69::BreakIterator"* %1786, i32 %1787) #12
  %1793 = sext i32 %1792 to i64
  %1794 = icmp eq i32 %1792, -1
  %1795 = select i1 %1794, i64 %1751, i64 %1793
  br label %1796

1796:                                             ; preds = %1773, %1785
  %1797 = phi i64 [ %1795, %1785 ], [ %1751, %1773 ]
  store i64 %1797, i64* %1750, align 8
  %1798 = load i64, i64* %109, align 8
  %1799 = icmp slt i64 %1797, %1798
  br i1 %1799, label %6488, label %1800

1800:                                             ; preds = %1796
  store i8 1, i8* %110, align 8
  store i64 %1798, i64* %1750, align 8
  br label %6488

1801:                                             ; preds = %143
  %1802 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1803 = load i64, i64* %1802, align 8
  %1804 = load i64, i64* %120, align 8
  %1805 = icmp slt i64 %1803, %1804
  br i1 %1805, label %1806, label %1822

1806:                                             ; preds = %1801
  %1807 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1808 = load i32, i32* %38, align 8
  %1809 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1807, i64 0, i32 1
  %1810 = load i32, i32* %1809, align 8
  %1811 = sub nsw i32 %1810, %1808
  %1812 = icmp sgt i32 %1811, 0
  %1813 = select i1 %1812, i32 %1811, i32 0
  store i32 %1813, i32* %1809, align 8
  %1814 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1807, i64 0, i32 4
  %1815 = load i64*, i64** %1814, align 8
  %1816 = zext i32 %1813 to i64
  %1817 = getelementptr inbounds i64, i64* %1815, i64 %1816
  %1818 = sext i32 %1808 to i64
  %1819 = sub nsw i64 0, %1818
  %1820 = getelementptr inbounds i64, i64* %1817, i64 %1819
  %1821 = bitcast i64* %1820 to %"struct.icu_69::REStackFrame"*
  br label %6488

1822:                                             ; preds = %1801
  store i8 1, i8* %110, align 8
  store i8 1, i8* %121, align 1
  br label %6488

1823:                                             ; preds = %143
  %1824 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1825 = load i64, i64* %1824, align 8
  %1826 = load i64, i64* %109, align 8
  %1827 = icmp slt i64 %1825, %1826
  br i1 %1827, label %1844, label %1828

1828:                                             ; preds = %1823
  store i8 1, i8* %110, align 8
  %1829 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1830 = load i32, i32* %38, align 8
  %1831 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1829, i64 0, i32 1
  %1832 = load i32, i32* %1831, align 8
  %1833 = sub nsw i32 %1832, %1830
  %1834 = icmp sgt i32 %1833, 0
  %1835 = select i1 %1834, i32 %1833, i32 0
  store i32 %1835, i32* %1831, align 8
  %1836 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1829, i64 0, i32 4
  %1837 = load i64*, i64** %1836, align 8
  %1838 = zext i32 %1835 to i64
  %1839 = getelementptr inbounds i64, i64* %1837, i64 %1838
  %1840 = sext i32 %1830 to i64
  %1841 = sub nsw i64 0, %1840
  %1842 = getelementptr inbounds i64, i64* %1839, i64 %1841
  %1843 = bitcast i64* %1842 to %"struct.icu_69::REStackFrame"*
  br label %6488

1844:                                             ; preds = %1823
  %1845 = and i32 %149, 8388608
  %1846 = lshr exact i32 %1845, 23
  %1847 = trunc i32 %1846 to i8
  %1848 = and i64 %148, 8388607
  %1849 = load %struct.UText*, %struct.UText** %103, align 8
  %1850 = getelementptr inbounds %struct.UText, %struct.UText* %1849, i64 0, i32 7
  %1851 = load i64, i64* %1850, align 8
  %1852 = sub nsw i64 %1825, %1851
  %1853 = icmp sgt i64 %1852, -1
  br i1 %1853, label %1854, label %1868

1854:                                             ; preds = %1844
  %1855 = getelementptr inbounds %struct.UText, %struct.UText* %1849, i64 0, i32 6
  %1856 = load i32, i32* %1855, align 4
  %1857 = sext i32 %1856 to i64
  %1858 = icmp slt i64 %1852, %1857
  br i1 %1858, label %1859, label %1868

1859:                                             ; preds = %1854
  %1860 = getelementptr inbounds %struct.UText, %struct.UText* %1849, i64 0, i32 10
  %1861 = load i16*, i16** %1860, align 8
  %1862 = getelementptr inbounds i16, i16* %1861, i64 %1852
  %1863 = load i16, i16* %1862, align 2
  %1864 = icmp ult i16 %1863, -9216
  br i1 %1864, label %1865, label %1868

1865:                                             ; preds = %1859
  %1866 = trunc i64 %1852 to i32
  %1867 = getelementptr inbounds %struct.UText, %struct.UText* %1849, i64 0, i32 8
  store i32 %1866, i32* %1867, align 8
  br label %1869

1868:                                             ; preds = %1859, %1854, %1844
  call void @utext_setNativeIndex_69(%struct.UText* %1849, i64 %1825) #12
  br label %1869

1869:                                             ; preds = %1868, %1865
  %1870 = load %struct.UText*, %struct.UText** %103, align 8
  %1871 = getelementptr inbounds %struct.UText, %struct.UText* %1870, i64 0, i32 8
  %1872 = load i32, i32* %1871, align 8
  %1873 = getelementptr inbounds %struct.UText, %struct.UText* %1870, i64 0, i32 9
  %1874 = load i32, i32* %1873, align 4
  %1875 = icmp slt i32 %1872, %1874
  br i1 %1875, label %1876, label %1887

1876:                                             ; preds = %1869
  %1877 = getelementptr inbounds %struct.UText, %struct.UText* %1870, i64 0, i32 10
  %1878 = load i16*, i16** %1877, align 8
  %1879 = sext i32 %1872 to i64
  %1880 = getelementptr inbounds i16, i16* %1878, i64 %1879
  %1881 = load i16, i16* %1880, align 2
  %1882 = icmp ult i16 %1881, -10240
  br i1 %1882, label %1883, label %1887

1883:                                             ; preds = %1876
  %1884 = add nsw i32 %1872, 1
  store i32 %1884, i32* %1871, align 8
  %1885 = load i16, i16* %1880, align 2
  %1886 = zext i16 %1885 to i32
  br label %1889

1887:                                             ; preds = %1876, %1869
  %1888 = call i32 @utext_next32_69(%struct.UText* %1870) #12
  br label %1889

1889:                                             ; preds = %1887, %1883
  %1890 = phi i32 [ %1886, %1883 ], [ %1888, %1887 ]
  %1891 = icmp slt i32 %1890, 256
  %1892 = load %"class.icu_69::RegexStaticSets"*, %"class.icu_69::RegexStaticSets"** @_ZN6icu_6915RegexStaticSets11gStaticSetsE, align 8
  br i1 %1891, label %1893, label %1903

1893:                                             ; preds = %1889
  %1894 = ashr i32 %1890, 3
  %1895 = sext i32 %1894 to i64
  %1896 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %1892, i64 0, i32 2, i64 %1848, i32 0, i64 %1895
  %1897 = load i8, i8* %1896, align 1
  %1898 = sext i8 %1897 to i32
  %1899 = and i32 %1890, 7
  %1900 = shl i32 1, %1899
  %1901 = and i32 %1900, %1898
  %1902 = icmp eq i32 %1901, 0
  br label %1907

1903:                                             ; preds = %1889
  %1904 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %1892, i64 0, i32 1, i64 %1848
  %1905 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %1904, i32 %1890) #12
  %1906 = icmp eq i8 %1905, 0
  br label %1907

1907:                                             ; preds = %1903, %1893
  %1908 = phi i1 [ %1906, %1903 ], [ %1902, %1893 ]
  %1909 = lshr exact i32 %1845, 23
  %1910 = trunc i32 %1909 to i8
  %1911 = xor i8 %1910, 1
  %1912 = select i1 %1908, i8 %1847, i8 %1911
  %1913 = icmp eq i8 %1912, 0
  br i1 %1913, label %1934, label %1914

1914:                                             ; preds = %1907
  %1915 = load %struct.UText*, %struct.UText** %103, align 8
  %1916 = getelementptr inbounds %struct.UText, %struct.UText* %1915, i64 0, i32 8
  %1917 = load i32, i32* %1916, align 8
  %1918 = getelementptr inbounds %struct.UText, %struct.UText* %1915, i64 0, i32 6
  %1919 = load i32, i32* %1918, align 4
  %1920 = icmp sgt i32 %1917, %1919
  br i1 %1920, label %1926, label %1921

1921:                                             ; preds = %1914
  %1922 = getelementptr inbounds %struct.UText, %struct.UText* %1915, i64 0, i32 7
  %1923 = load i64, i64* %1922, align 8
  %1924 = sext i32 %1917 to i64
  %1925 = add nsw i64 %1923, %1924
  br label %1932

1926:                                             ; preds = %1914
  %1927 = getelementptr inbounds %struct.UText, %struct.UText* %1915, i64 0, i32 11
  %1928 = load %struct.UTextFuncs*, %struct.UTextFuncs** %1927, align 8
  %1929 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %1928, i64 0, i32 10
  %1930 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %1929, align 8
  %1931 = call i64 %1930(%struct.UText* %1915) #12
  br label %1932

1932:                                             ; preds = %1926, %1921
  %1933 = phi i64 [ %1925, %1921 ], [ %1931, %1926 ]
  store i64 %1933, i64* %1824, align 8
  br label %6488

1934:                                             ; preds = %1907
  %1935 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1936 = load i32, i32* %38, align 8
  %1937 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1935, i64 0, i32 1
  %1938 = load i32, i32* %1937, align 8
  %1939 = sub nsw i32 %1938, %1936
  %1940 = icmp sgt i32 %1939, 0
  %1941 = select i1 %1940, i32 %1939, i32 0
  store i32 %1941, i32* %1937, align 8
  %1942 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1935, i64 0, i32 4
  %1943 = load i64*, i64** %1942, align 8
  %1944 = zext i32 %1941 to i64
  %1945 = getelementptr inbounds i64, i64* %1943, i64 %1944
  %1946 = sext i32 %1936 to i64
  %1947 = sub nsw i64 0, %1946
  %1948 = getelementptr inbounds i64, i64* %1945, i64 %1947
  %1949 = bitcast i64* %1948 to %"struct.icu_69::REStackFrame"*
  br label %6488

1950:                                             ; preds = %143
  %1951 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %1952 = load i64, i64* %1951, align 8
  %1953 = load i64, i64* %109, align 8
  %1954 = icmp slt i64 %1952, %1953
  br i1 %1954, label %1971, label %1955

1955:                                             ; preds = %1950
  store i8 1, i8* %110, align 8
  %1956 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %1957 = load i32, i32* %38, align 8
  %1958 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1956, i64 0, i32 1
  %1959 = load i32, i32* %1958, align 8
  %1960 = sub nsw i32 %1959, %1957
  %1961 = icmp sgt i32 %1960, 0
  %1962 = select i1 %1961, i32 %1960, i32 0
  store i32 %1962, i32* %1958, align 8
  %1963 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1956, i64 0, i32 4
  %1964 = load i64*, i64** %1963, align 8
  %1965 = zext i32 %1962 to i64
  %1966 = getelementptr inbounds i64, i64* %1964, i64 %1965
  %1967 = sext i32 %1957 to i64
  %1968 = sub nsw i64 0, %1967
  %1969 = getelementptr inbounds i64, i64* %1966, i64 %1968
  %1970 = bitcast i64* %1969 to %"struct.icu_69::REStackFrame"*
  br label %6488

1971:                                             ; preds = %1950
  %1972 = load %struct.UText*, %struct.UText** %103, align 8
  %1973 = getelementptr inbounds %struct.UText, %struct.UText* %1972, i64 0, i32 7
  %1974 = load i64, i64* %1973, align 8
  %1975 = sub nsw i64 %1952, %1974
  %1976 = icmp sgt i64 %1975, -1
  br i1 %1976, label %1977, label %1991

1977:                                             ; preds = %1971
  %1978 = getelementptr inbounds %struct.UText, %struct.UText* %1972, i64 0, i32 6
  %1979 = load i32, i32* %1978, align 4
  %1980 = sext i32 %1979 to i64
  %1981 = icmp slt i64 %1975, %1980
  br i1 %1981, label %1982, label %1991

1982:                                             ; preds = %1977
  %1983 = getelementptr inbounds %struct.UText, %struct.UText* %1972, i64 0, i32 10
  %1984 = load i16*, i16** %1983, align 8
  %1985 = getelementptr inbounds i16, i16* %1984, i64 %1975
  %1986 = load i16, i16* %1985, align 2
  %1987 = icmp ult i16 %1986, -9216
  br i1 %1987, label %1988, label %1991

1988:                                             ; preds = %1982
  %1989 = trunc i64 %1975 to i32
  %1990 = getelementptr inbounds %struct.UText, %struct.UText* %1972, i64 0, i32 8
  store i32 %1989, i32* %1990, align 8
  br label %1992

1991:                                             ; preds = %1982, %1977, %1971
  call void @utext_setNativeIndex_69(%struct.UText* %1972, i64 %1952) #12
  br label %1992

1992:                                             ; preds = %1991, %1988
  %1993 = load %struct.UText*, %struct.UText** %103, align 8
  %1994 = getelementptr inbounds %struct.UText, %struct.UText* %1993, i64 0, i32 8
  %1995 = load i32, i32* %1994, align 8
  %1996 = getelementptr inbounds %struct.UText, %struct.UText* %1993, i64 0, i32 9
  %1997 = load i32, i32* %1996, align 4
  %1998 = icmp slt i32 %1995, %1997
  br i1 %1998, label %1999, label %2010

1999:                                             ; preds = %1992
  %2000 = getelementptr inbounds %struct.UText, %struct.UText* %1993, i64 0, i32 10
  %2001 = load i16*, i16** %2000, align 8
  %2002 = sext i32 %1995 to i64
  %2003 = getelementptr inbounds i16, i16* %2001, i64 %2002
  %2004 = load i16, i16* %2003, align 2
  %2005 = icmp ult i16 %2004, -10240
  br i1 %2005, label %2006, label %2010

2006:                                             ; preds = %1999
  %2007 = add nsw i32 %1995, 1
  store i32 %2007, i32* %1994, align 8
  %2008 = load i16, i16* %2003, align 2
  %2009 = zext i16 %2008 to i32
  br label %2012

2010:                                             ; preds = %1999, %1992
  %2011 = call i32 @utext_next32_69(%struct.UText* %1993) #12
  br label %2012

2012:                                             ; preds = %2010, %2006
  %2013 = phi i32 [ %2009, %2006 ], [ %2011, %2010 ]
  %2014 = icmp slt i32 %2013, 256
  %2015 = load %"class.icu_69::RegexStaticSets"*, %"class.icu_69::RegexStaticSets"** @_ZN6icu_6915RegexStaticSets11gStaticSetsE, align 8
  %2016 = zext i32 %151 to i64
  br i1 %2014, label %2017, label %2047

2017:                                             ; preds = %2012
  %2018 = ashr i32 %2013, 3
  %2019 = sext i32 %2018 to i64
  %2020 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %2015, i64 0, i32 2, i64 %2016, i32 0, i64 %2019
  %2021 = load i8, i8* %2020, align 1
  %2022 = sext i8 %2021 to i32
  %2023 = and i32 %2013, 7
  %2024 = shl i32 1, %2023
  %2025 = and i32 %2024, %2022
  %2026 = icmp eq i32 %2025, 0
  br i1 %2026, label %2027, label %2071

2027:                                             ; preds = %2017
  %2028 = load %struct.UText*, %struct.UText** %103, align 8
  %2029 = getelementptr inbounds %struct.UText, %struct.UText* %2028, i64 0, i32 8
  %2030 = load i32, i32* %2029, align 8
  %2031 = getelementptr inbounds %struct.UText, %struct.UText* %2028, i64 0, i32 6
  %2032 = load i32, i32* %2031, align 4
  %2033 = icmp sgt i32 %2030, %2032
  br i1 %2033, label %2039, label %2034

2034:                                             ; preds = %2027
  %2035 = getelementptr inbounds %struct.UText, %struct.UText* %2028, i64 0, i32 7
  %2036 = load i64, i64* %2035, align 8
  %2037 = sext i32 %2030 to i64
  %2038 = add nsw i64 %2036, %2037
  br label %2045

2039:                                             ; preds = %2027
  %2040 = getelementptr inbounds %struct.UText, %struct.UText* %2028, i64 0, i32 11
  %2041 = load %struct.UTextFuncs*, %struct.UTextFuncs** %2040, align 8
  %2042 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %2041, i64 0, i32 10
  %2043 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %2042, align 8
  %2044 = call i64 %2043(%struct.UText* %2028) #12
  br label %2045

2045:                                             ; preds = %2039, %2034
  %2046 = phi i64 [ %2038, %2034 ], [ %2044, %2039 ]
  store i64 %2046, i64* %1951, align 8
  br label %6488

2047:                                             ; preds = %2012
  %2048 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %2015, i64 0, i32 1, i64 %2016
  %2049 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %2048, i32 %2013) #12
  %2050 = icmp eq i8 %2049, 0
  br i1 %2050, label %2051, label %2071

2051:                                             ; preds = %2047
  %2052 = load %struct.UText*, %struct.UText** %103, align 8
  %2053 = getelementptr inbounds %struct.UText, %struct.UText* %2052, i64 0, i32 8
  %2054 = load i32, i32* %2053, align 8
  %2055 = getelementptr inbounds %struct.UText, %struct.UText* %2052, i64 0, i32 6
  %2056 = load i32, i32* %2055, align 4
  %2057 = icmp sgt i32 %2054, %2056
  br i1 %2057, label %2063, label %2058

2058:                                             ; preds = %2051
  %2059 = getelementptr inbounds %struct.UText, %struct.UText* %2052, i64 0, i32 7
  %2060 = load i64, i64* %2059, align 8
  %2061 = sext i32 %2054 to i64
  %2062 = add nsw i64 %2060, %2061
  br label %2069

2063:                                             ; preds = %2051
  %2064 = getelementptr inbounds %struct.UText, %struct.UText* %2052, i64 0, i32 11
  %2065 = load %struct.UTextFuncs*, %struct.UTextFuncs** %2064, align 8
  %2066 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %2065, i64 0, i32 10
  %2067 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %2066, align 8
  %2068 = call i64 %2067(%struct.UText* %2052) #12
  br label %2069

2069:                                             ; preds = %2063, %2058
  %2070 = phi i64 [ %2062, %2058 ], [ %2068, %2063 ]
  store i64 %2070, i64* %1951, align 8
  br label %6488

2071:                                             ; preds = %2047, %2017
  %2072 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %2073 = load i32, i32* %38, align 8
  %2074 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2072, i64 0, i32 1
  %2075 = load i32, i32* %2074, align 8
  %2076 = sub nsw i32 %2075, %2073
  %2077 = icmp sgt i32 %2076, 0
  %2078 = select i1 %2077, i32 %2076, i32 0
  store i32 %2078, i32* %2074, align 8
  %2079 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2072, i64 0, i32 4
  %2080 = load i64*, i64** %2079, align 8
  %2081 = zext i32 %2078 to i64
  %2082 = getelementptr inbounds i64, i64* %2080, i64 %2081
  %2083 = sext i32 %2073 to i64
  %2084 = sub nsw i64 0, %2083
  %2085 = getelementptr inbounds i64, i64* %2082, i64 %2084
  %2086 = bitcast i64* %2085 to %"struct.icu_69::REStackFrame"*
  br label %6488

2087:                                             ; preds = %143
  %2088 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %2089 = load i64, i64* %2088, align 8
  %2090 = load i64, i64* %109, align 8
  %2091 = icmp slt i64 %2089, %2090
  br i1 %2091, label %2108, label %2092

2092:                                             ; preds = %2087
  store i8 1, i8* %110, align 8
  %2093 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %2094 = load i32, i32* %38, align 8
  %2095 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2093, i64 0, i32 1
  %2096 = load i32, i32* %2095, align 8
  %2097 = sub nsw i32 %2096, %2094
  %2098 = icmp sgt i32 %2097, 0
  %2099 = select i1 %2098, i32 %2097, i32 0
  store i32 %2099, i32* %2095, align 8
  %2100 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2093, i64 0, i32 4
  %2101 = load i64*, i64** %2100, align 8
  %2102 = zext i32 %2099 to i64
  %2103 = getelementptr inbounds i64, i64* %2101, i64 %2102
  %2104 = sext i32 %2094 to i64
  %2105 = sub nsw i64 0, %2104
  %2106 = getelementptr inbounds i64, i64* %2103, i64 %2105
  %2107 = bitcast i64* %2106 to %"struct.icu_69::REStackFrame"*
  br label %6488

2108:                                             ; preds = %2087
  %2109 = load %struct.UText*, %struct.UText** %103, align 8
  %2110 = getelementptr inbounds %struct.UText, %struct.UText* %2109, i64 0, i32 7
  %2111 = load i64, i64* %2110, align 8
  %2112 = sub nsw i64 %2089, %2111
  %2113 = icmp sgt i64 %2112, -1
  br i1 %2113, label %2114, label %2128

2114:                                             ; preds = %2108
  %2115 = getelementptr inbounds %struct.UText, %struct.UText* %2109, i64 0, i32 6
  %2116 = load i32, i32* %2115, align 4
  %2117 = sext i32 %2116 to i64
  %2118 = icmp slt i64 %2112, %2117
  br i1 %2118, label %2119, label %2128

2119:                                             ; preds = %2114
  %2120 = getelementptr inbounds %struct.UText, %struct.UText* %2109, i64 0, i32 10
  %2121 = load i16*, i16** %2120, align 8
  %2122 = getelementptr inbounds i16, i16* %2121, i64 %2112
  %2123 = load i16, i16* %2122, align 2
  %2124 = icmp ult i16 %2123, -9216
  br i1 %2124, label %2125, label %2128

2125:                                             ; preds = %2119
  %2126 = trunc i64 %2112 to i32
  %2127 = getelementptr inbounds %struct.UText, %struct.UText* %2109, i64 0, i32 8
  store i32 %2126, i32* %2127, align 8
  br label %2129

2128:                                             ; preds = %2119, %2114, %2108
  call void @utext_setNativeIndex_69(%struct.UText* %2109, i64 %2089) #12
  br label %2129

2129:                                             ; preds = %2128, %2125
  %2130 = load %struct.UText*, %struct.UText** %103, align 8
  %2131 = getelementptr inbounds %struct.UText, %struct.UText* %2130, i64 0, i32 8
  %2132 = load i32, i32* %2131, align 8
  %2133 = getelementptr inbounds %struct.UText, %struct.UText* %2130, i64 0, i32 9
  %2134 = load i32, i32* %2133, align 4
  %2135 = icmp slt i32 %2132, %2134
  br i1 %2135, label %2136, label %2147

2136:                                             ; preds = %2129
  %2137 = getelementptr inbounds %struct.UText, %struct.UText* %2130, i64 0, i32 10
  %2138 = load i16*, i16** %2137, align 8
  %2139 = sext i32 %2132 to i64
  %2140 = getelementptr inbounds i16, i16* %2138, i64 %2139
  %2141 = load i16, i16* %2140, align 2
  %2142 = icmp ult i16 %2141, -10240
  br i1 %2142, label %2143, label %2147

2143:                                             ; preds = %2136
  %2144 = add nsw i32 %2132, 1
  store i32 %2144, i32* %2131, align 8
  %2145 = load i16, i16* %2140, align 2
  %2146 = zext i16 %2145 to i32
  br label %2149

2147:                                             ; preds = %2136, %2129
  %2148 = call i32 @utext_next32_69(%struct.UText* %2130) #12
  br label %2149

2149:                                             ; preds = %2147, %2143
  %2150 = phi i32 [ %2146, %2143 ], [ %2148, %2147 ]
  %2151 = icmp slt i32 %2150, 256
  br i1 %2151, label %2152, label %2186

2152:                                             ; preds = %2149
  %2153 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %2154 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %2153, i64 0, i32 7
  %2155 = load %"struct.icu_69::Regex8BitSet"*, %"struct.icu_69::Regex8BitSet"** %2154, align 8
  %2156 = zext i32 %151 to i64
  %2157 = ashr i32 %2150, 3
  %2158 = sext i32 %2157 to i64
  %2159 = getelementptr inbounds %"struct.icu_69::Regex8BitSet", %"struct.icu_69::Regex8BitSet"* %2155, i64 %2156, i32 0, i64 %2158
  %2160 = load i8, i8* %2159, align 1
  %2161 = sext i8 %2160 to i32
  %2162 = and i32 %2150, 7
  %2163 = shl i32 1, %2162
  %2164 = and i32 %2163, %2161
  %2165 = icmp eq i32 %2164, 0
  br i1 %2165, label %2211, label %2166

2166:                                             ; preds = %2152
  %2167 = load %struct.UText*, %struct.UText** %103, align 8
  %2168 = getelementptr inbounds %struct.UText, %struct.UText* %2167, i64 0, i32 8
  %2169 = load i32, i32* %2168, align 8
  %2170 = getelementptr inbounds %struct.UText, %struct.UText* %2167, i64 0, i32 6
  %2171 = load i32, i32* %2170, align 4
  %2172 = icmp sgt i32 %2169, %2171
  br i1 %2172, label %2178, label %2173

2173:                                             ; preds = %2166
  %2174 = getelementptr inbounds %struct.UText, %struct.UText* %2167, i64 0, i32 7
  %2175 = load i64, i64* %2174, align 8
  %2176 = sext i32 %2169 to i64
  %2177 = add nsw i64 %2175, %2176
  br label %2184

2178:                                             ; preds = %2166
  %2179 = getelementptr inbounds %struct.UText, %struct.UText* %2167, i64 0, i32 11
  %2180 = load %struct.UTextFuncs*, %struct.UTextFuncs** %2179, align 8
  %2181 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %2180, i64 0, i32 10
  %2182 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %2181, align 8
  %2183 = call i64 %2182(%struct.UText* %2167) #12
  br label %2184

2184:                                             ; preds = %2178, %2173
  %2185 = phi i64 [ %2177, %2173 ], [ %2183, %2178 ]
  store i64 %2185, i64* %2088, align 8
  br label %6488

2186:                                             ; preds = %2149
  %2187 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %35, i32 %151) #12
  %2188 = bitcast i8* %2187 to %"class.icu_69::UnicodeSet"*
  %2189 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %2188, i32 %2150) #12
  %2190 = icmp eq i8 %2189, 0
  br i1 %2190, label %2211, label %2191

2191:                                             ; preds = %2186
  %2192 = load %struct.UText*, %struct.UText** %103, align 8
  %2193 = getelementptr inbounds %struct.UText, %struct.UText* %2192, i64 0, i32 8
  %2194 = load i32, i32* %2193, align 8
  %2195 = getelementptr inbounds %struct.UText, %struct.UText* %2192, i64 0, i32 6
  %2196 = load i32, i32* %2195, align 4
  %2197 = icmp sgt i32 %2194, %2196
  br i1 %2197, label %2203, label %2198

2198:                                             ; preds = %2191
  %2199 = getelementptr inbounds %struct.UText, %struct.UText* %2192, i64 0, i32 7
  %2200 = load i64, i64* %2199, align 8
  %2201 = sext i32 %2194 to i64
  %2202 = add nsw i64 %2200, %2201
  br label %2209

2203:                                             ; preds = %2191
  %2204 = getelementptr inbounds %struct.UText, %struct.UText* %2192, i64 0, i32 11
  %2205 = load %struct.UTextFuncs*, %struct.UTextFuncs** %2204, align 8
  %2206 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %2205, i64 0, i32 10
  %2207 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %2206, align 8
  %2208 = call i64 %2207(%struct.UText* %2192) #12
  br label %2209

2209:                                             ; preds = %2203, %2198
  %2210 = phi i64 [ %2202, %2198 ], [ %2208, %2203 ]
  store i64 %2210, i64* %2088, align 8
  br label %6488

2211:                                             ; preds = %2186, %2152
  %2212 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %2213 = load i32, i32* %38, align 8
  %2214 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2212, i64 0, i32 1
  %2215 = load i32, i32* %2214, align 8
  %2216 = sub nsw i32 %2215, %2213
  %2217 = icmp sgt i32 %2216, 0
  %2218 = select i1 %2217, i32 %2216, i32 0
  store i32 %2218, i32* %2214, align 8
  %2219 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2212, i64 0, i32 4
  %2220 = load i64*, i64** %2219, align 8
  %2221 = zext i32 %2218 to i64
  %2222 = getelementptr inbounds i64, i64* %2220, i64 %2221
  %2223 = sext i32 %2213 to i64
  %2224 = sub nsw i64 0, %2223
  %2225 = getelementptr inbounds i64, i64* %2222, i64 %2224
  %2226 = bitcast i64* %2225 to %"struct.icu_69::REStackFrame"*
  br label %6488

2227:                                             ; preds = %143
  %2228 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %2229 = load i64, i64* %2228, align 8
  %2230 = load i64, i64* %109, align 8
  %2231 = icmp slt i64 %2229, %2230
  br i1 %2231, label %2248, label %2232

2232:                                             ; preds = %2227
  store i8 1, i8* %110, align 8
  %2233 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %2234 = load i32, i32* %38, align 8
  %2235 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2233, i64 0, i32 1
  %2236 = load i32, i32* %2235, align 8
  %2237 = sub nsw i32 %2236, %2234
  %2238 = icmp sgt i32 %2237, 0
  %2239 = select i1 %2238, i32 %2237, i32 0
  store i32 %2239, i32* %2235, align 8
  %2240 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2233, i64 0, i32 4
  %2241 = load i64*, i64** %2240, align 8
  %2242 = zext i32 %2239 to i64
  %2243 = getelementptr inbounds i64, i64* %2241, i64 %2242
  %2244 = sext i32 %2234 to i64
  %2245 = sub nsw i64 0, %2244
  %2246 = getelementptr inbounds i64, i64* %2243, i64 %2245
  %2247 = bitcast i64* %2246 to %"struct.icu_69::REStackFrame"*
  br label %6488

2248:                                             ; preds = %2227
  %2249 = load %struct.UText*, %struct.UText** %103, align 8
  %2250 = getelementptr inbounds %struct.UText, %struct.UText* %2249, i64 0, i32 7
  %2251 = load i64, i64* %2250, align 8
  %2252 = sub nsw i64 %2229, %2251
  %2253 = icmp sgt i64 %2252, -1
  br i1 %2253, label %2254, label %2268

2254:                                             ; preds = %2248
  %2255 = getelementptr inbounds %struct.UText, %struct.UText* %2249, i64 0, i32 6
  %2256 = load i32, i32* %2255, align 4
  %2257 = sext i32 %2256 to i64
  %2258 = icmp slt i64 %2252, %2257
  br i1 %2258, label %2259, label %2268

2259:                                             ; preds = %2254
  %2260 = getelementptr inbounds %struct.UText, %struct.UText* %2249, i64 0, i32 10
  %2261 = load i16*, i16** %2260, align 8
  %2262 = getelementptr inbounds i16, i16* %2261, i64 %2252
  %2263 = load i16, i16* %2262, align 2
  %2264 = icmp ult i16 %2263, -9216
  br i1 %2264, label %2265, label %2268

2265:                                             ; preds = %2259
  %2266 = trunc i64 %2252 to i32
  %2267 = getelementptr inbounds %struct.UText, %struct.UText* %2249, i64 0, i32 8
  store i32 %2266, i32* %2267, align 8
  br label %2269

2268:                                             ; preds = %2259, %2254, %2248
  call void @utext_setNativeIndex_69(%struct.UText* %2249, i64 %2229) #12
  br label %2269

2269:                                             ; preds = %2268, %2265
  %2270 = load %struct.UText*, %struct.UText** %103, align 8
  %2271 = getelementptr inbounds %struct.UText, %struct.UText* %2270, i64 0, i32 8
  %2272 = load i32, i32* %2271, align 8
  %2273 = getelementptr inbounds %struct.UText, %struct.UText* %2270, i64 0, i32 9
  %2274 = load i32, i32* %2273, align 4
  %2275 = icmp slt i32 %2272, %2274
  br i1 %2275, label %2276, label %2287

2276:                                             ; preds = %2269
  %2277 = getelementptr inbounds %struct.UText, %struct.UText* %2270, i64 0, i32 10
  %2278 = load i16*, i16** %2277, align 8
  %2279 = sext i32 %2272 to i64
  %2280 = getelementptr inbounds i16, i16* %2278, i64 %2279
  %2281 = load i16, i16* %2280, align 2
  %2282 = icmp ult i16 %2281, -10240
  br i1 %2282, label %2283, label %2287

2283:                                             ; preds = %2276
  %2284 = add nsw i32 %2272, 1
  store i32 %2284, i32* %2271, align 8
  %2285 = load i16, i16* %2280, align 2
  %2286 = zext i16 %2285 to i32
  br label %2289

2287:                                             ; preds = %2276, %2269
  %2288 = call i32 @utext_next32_69(%struct.UText* %2270) #12
  br label %2289

2289:                                             ; preds = %2287, %2283
  %2290 = phi i32 [ %2286, %2283 ], [ %2288, %2287 ]
  %2291 = and i32 %2290, -8368
  %2292 = icmp eq i32 %2291, 0
  br i1 %2292, label %2293, label %2310

2293:                                             ; preds = %2289
  switch i32 %2290, label %2310 [
    i32 8232, label %2294
    i32 133, label %2294
    i32 13, label %2294
    i32 12, label %2294
    i32 11, label %2294
    i32 10, label %2294
    i32 8233, label %2294
  ]

2294:                                             ; preds = %2293, %2293, %2293, %2293, %2293, %2293, %2293
  %2295 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %2296 = load i32, i32* %38, align 8
  %2297 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2295, i64 0, i32 1
  %2298 = load i32, i32* %2297, align 8
  %2299 = sub nsw i32 %2298, %2296
  %2300 = icmp sgt i32 %2299, 0
  %2301 = select i1 %2300, i32 %2299, i32 0
  store i32 %2301, i32* %2297, align 8
  %2302 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2295, i64 0, i32 4
  %2303 = load i64*, i64** %2302, align 8
  %2304 = zext i32 %2301 to i64
  %2305 = getelementptr inbounds i64, i64* %2303, i64 %2304
  %2306 = sext i32 %2296 to i64
  %2307 = sub nsw i64 0, %2306
  %2308 = getelementptr inbounds i64, i64* %2305, i64 %2307
  %2309 = bitcast i64* %2308 to %"struct.icu_69::REStackFrame"*
  br label %6488

2310:                                             ; preds = %2293, %2289
  %2311 = load %struct.UText*, %struct.UText** %103, align 8
  %2312 = getelementptr inbounds %struct.UText, %struct.UText* %2311, i64 0, i32 8
  %2313 = load i32, i32* %2312, align 8
  %2314 = getelementptr inbounds %struct.UText, %struct.UText* %2311, i64 0, i32 6
  %2315 = load i32, i32* %2314, align 4
  %2316 = icmp sgt i32 %2313, %2315
  br i1 %2316, label %2322, label %2317

2317:                                             ; preds = %2310
  %2318 = getelementptr inbounds %struct.UText, %struct.UText* %2311, i64 0, i32 7
  %2319 = load i64, i64* %2318, align 8
  %2320 = sext i32 %2313 to i64
  %2321 = add nsw i64 %2319, %2320
  br label %2328

2322:                                             ; preds = %2310
  %2323 = getelementptr inbounds %struct.UText, %struct.UText* %2311, i64 0, i32 11
  %2324 = load %struct.UTextFuncs*, %struct.UTextFuncs** %2323, align 8
  %2325 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %2324, i64 0, i32 10
  %2326 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %2325, align 8
  %2327 = call i64 %2326(%struct.UText* %2311) #12
  br label %2328

2328:                                             ; preds = %2322, %2317
  %2329 = phi i64 [ %2321, %2317 ], [ %2327, %2322 ]
  store i64 %2329, i64* %2228, align 8
  br label %6488

2330:                                             ; preds = %143
  %2331 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %2332 = load i64, i64* %2331, align 8
  %2333 = load i64, i64* %109, align 8
  %2334 = icmp slt i64 %2332, %2333
  br i1 %2334, label %2351, label %2335

2335:                                             ; preds = %2330
  store i8 1, i8* %110, align 8
  %2336 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %2337 = load i32, i32* %38, align 8
  %2338 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2336, i64 0, i32 1
  %2339 = load i32, i32* %2338, align 8
  %2340 = sub nsw i32 %2339, %2337
  %2341 = icmp sgt i32 %2340, 0
  %2342 = select i1 %2341, i32 %2340, i32 0
  store i32 %2342, i32* %2338, align 8
  %2343 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2336, i64 0, i32 4
  %2344 = load i64*, i64** %2343, align 8
  %2345 = zext i32 %2342 to i64
  %2346 = getelementptr inbounds i64, i64* %2344, i64 %2345
  %2347 = sext i32 %2337 to i64
  %2348 = sub nsw i64 0, %2347
  %2349 = getelementptr inbounds i64, i64* %2346, i64 %2348
  %2350 = bitcast i64* %2349 to %"struct.icu_69::REStackFrame"*
  br label %6488

2351:                                             ; preds = %2330
  %2352 = load %struct.UText*, %struct.UText** %103, align 8
  %2353 = getelementptr inbounds %struct.UText, %struct.UText* %2352, i64 0, i32 7
  %2354 = load i64, i64* %2353, align 8
  %2355 = sub nsw i64 %2332, %2354
  %2356 = icmp sgt i64 %2355, -1
  br i1 %2356, label %2357, label %2371

2357:                                             ; preds = %2351
  %2358 = getelementptr inbounds %struct.UText, %struct.UText* %2352, i64 0, i32 6
  %2359 = load i32, i32* %2358, align 4
  %2360 = sext i32 %2359 to i64
  %2361 = icmp slt i64 %2355, %2360
  br i1 %2361, label %2362, label %2371

2362:                                             ; preds = %2357
  %2363 = getelementptr inbounds %struct.UText, %struct.UText* %2352, i64 0, i32 10
  %2364 = load i16*, i16** %2363, align 8
  %2365 = getelementptr inbounds i16, i16* %2364, i64 %2355
  %2366 = load i16, i16* %2365, align 2
  %2367 = icmp ult i16 %2366, -9216
  br i1 %2367, label %2368, label %2371

2368:                                             ; preds = %2362
  %2369 = trunc i64 %2355 to i32
  %2370 = getelementptr inbounds %struct.UText, %struct.UText* %2352, i64 0, i32 8
  store i32 %2369, i32* %2370, align 8
  br label %2372

2371:                                             ; preds = %2362, %2357, %2351
  call void @utext_setNativeIndex_69(%struct.UText* %2352, i64 %2332) #12
  br label %2372

2372:                                             ; preds = %2371, %2368
  %2373 = load %struct.UText*, %struct.UText** %103, align 8
  %2374 = getelementptr inbounds %struct.UText, %struct.UText* %2373, i64 0, i32 8
  %2375 = load i32, i32* %2374, align 8
  %2376 = getelementptr inbounds %struct.UText, %struct.UText* %2373, i64 0, i32 9
  %2377 = load i32, i32* %2376, align 4
  %2378 = icmp slt i32 %2375, %2377
  br i1 %2378, label %2379, label %2390

2379:                                             ; preds = %2372
  %2380 = getelementptr inbounds %struct.UText, %struct.UText* %2373, i64 0, i32 10
  %2381 = load i16*, i16** %2380, align 8
  %2382 = sext i32 %2375 to i64
  %2383 = getelementptr inbounds i16, i16* %2381, i64 %2382
  %2384 = load i16, i16* %2383, align 2
  %2385 = icmp ult i16 %2384, -10240
  br i1 %2385, label %2386, label %2390

2386:                                             ; preds = %2379
  %2387 = add nsw i32 %2375, 1
  store i32 %2387, i32* %2374, align 8
  %2388 = load i16, i16* %2383, align 2
  %2389 = zext i16 %2388 to i32
  br label %2392

2390:                                             ; preds = %2379, %2372
  %2391 = call i32 @utext_next32_69(%struct.UText* %2373) #12
  br label %2392

2392:                                             ; preds = %2390, %2386
  %2393 = phi i32 [ %2389, %2386 ], [ %2391, %2390 ]
  %2394 = load %struct.UText*, %struct.UText** %103, align 8
  %2395 = getelementptr inbounds %struct.UText, %struct.UText* %2394, i64 0, i32 8
  %2396 = load i32, i32* %2395, align 8
  %2397 = getelementptr inbounds %struct.UText, %struct.UText* %2394, i64 0, i32 6
  %2398 = load i32, i32* %2397, align 4
  %2399 = icmp sgt i32 %2396, %2398
  br i1 %2399, label %2405, label %2400

2400:                                             ; preds = %2392
  %2401 = getelementptr inbounds %struct.UText, %struct.UText* %2394, i64 0, i32 7
  %2402 = load i64, i64* %2401, align 8
  %2403 = sext i32 %2396 to i64
  %2404 = add nsw i64 %2402, %2403
  br label %2411

2405:                                             ; preds = %2392
  %2406 = getelementptr inbounds %struct.UText, %struct.UText* %2394, i64 0, i32 11
  %2407 = load %struct.UTextFuncs*, %struct.UTextFuncs** %2406, align 8
  %2408 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %2407, i64 0, i32 10
  %2409 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %2408, align 8
  %2410 = call i64 %2409(%struct.UText* %2394) #12
  br label %2411

2411:                                             ; preds = %2405, %2400
  %2412 = phi i64 [ %2404, %2400 ], [ %2410, %2405 ]
  store i64 %2412, i64* %2331, align 8
  %2413 = icmp eq i32 %2393, 13
  br i1 %2413, label %2414, label %6488

2414:                                             ; preds = %2411
  %2415 = load i64, i64* %109, align 8
  %2416 = icmp slt i64 %2412, %2415
  br i1 %2416, label %2417, label %6488

2417:                                             ; preds = %2414
  %2418 = load %struct.UText*, %struct.UText** %103, align 8
  %2419 = getelementptr inbounds %struct.UText, %struct.UText* %2418, i64 0, i32 8
  %2420 = load i32, i32* %2419, align 8
  %2421 = getelementptr inbounds %struct.UText, %struct.UText* %2418, i64 0, i32 9
  %2422 = load i32, i32* %2421, align 4
  %2423 = icmp slt i32 %2420, %2422
  br i1 %2423, label %2424, label %2433

2424:                                             ; preds = %2417
  %2425 = getelementptr inbounds %struct.UText, %struct.UText* %2418, i64 0, i32 10
  %2426 = load i16*, i16** %2425, align 8
  %2427 = sext i32 %2420 to i64
  %2428 = getelementptr inbounds i16, i16* %2426, i64 %2427
  %2429 = load i16, i16* %2428, align 2
  %2430 = icmp ult i16 %2429, -10240
  br i1 %2430, label %2431, label %2433

2431:                                             ; preds = %2424
  %2432 = zext i16 %2429 to i32
  br label %2435

2433:                                             ; preds = %2424, %2417
  %2434 = call i32 @utext_current32_69(%struct.UText* %2418) #12
  br label %2435

2435:                                             ; preds = %2433, %2431
  %2436 = phi i32 [ %2432, %2431 ], [ %2434, %2433 ]
  %2437 = icmp eq i32 %2436, 10
  br i1 %2437, label %2438, label %6488

2438:                                             ; preds = %2435
  %2439 = load %struct.UText*, %struct.UText** %103, align 8
  %2440 = getelementptr inbounds %struct.UText, %struct.UText* %2439, i64 0, i32 8
  %2441 = load i32, i32* %2440, align 8
  %2442 = getelementptr inbounds %struct.UText, %struct.UText* %2439, i64 0, i32 9
  %2443 = load i32, i32* %2442, align 4
  %2444 = icmp slt i32 %2441, %2443
  br i1 %2444, label %2445, label %2454

2445:                                             ; preds = %2438
  %2446 = getelementptr inbounds %struct.UText, %struct.UText* %2439, i64 0, i32 10
  %2447 = load i16*, i16** %2446, align 8
  %2448 = sext i32 %2441 to i64
  %2449 = getelementptr inbounds i16, i16* %2447, i64 %2448
  %2450 = load i16, i16* %2449, align 2
  %2451 = icmp ult i16 %2450, -10240
  br i1 %2451, label %2452, label %2454

2452:                                             ; preds = %2445
  %2453 = add nsw i32 %2441, 1
  store i32 %2453, i32* %2440, align 8
  br label %2456

2454:                                             ; preds = %2445, %2438
  %2455 = call i32 @utext_next32_69(%struct.UText* %2439) #12
  br label %2456

2456:                                             ; preds = %2454, %2452
  %2457 = load %struct.UText*, %struct.UText** %103, align 8
  %2458 = getelementptr inbounds %struct.UText, %struct.UText* %2457, i64 0, i32 8
  %2459 = load i32, i32* %2458, align 8
  %2460 = getelementptr inbounds %struct.UText, %struct.UText* %2457, i64 0, i32 6
  %2461 = load i32, i32* %2460, align 4
  %2462 = icmp sgt i32 %2459, %2461
  br i1 %2462, label %2468, label %2463

2463:                                             ; preds = %2456
  %2464 = getelementptr inbounds %struct.UText, %struct.UText* %2457, i64 0, i32 7
  %2465 = load i64, i64* %2464, align 8
  %2466 = sext i32 %2459 to i64
  %2467 = add nsw i64 %2465, %2466
  br label %2474

2468:                                             ; preds = %2456
  %2469 = getelementptr inbounds %struct.UText, %struct.UText* %2457, i64 0, i32 11
  %2470 = load %struct.UTextFuncs*, %struct.UTextFuncs** %2469, align 8
  %2471 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %2470, i64 0, i32 10
  %2472 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %2471, align 8
  %2473 = call i64 %2472(%struct.UText* %2457) #12
  br label %2474

2474:                                             ; preds = %2468, %2463
  %2475 = phi i64 [ %2467, %2463 ], [ %2473, %2468 ]
  store i64 %2475, i64* %2331, align 8
  br label %6488

2476:                                             ; preds = %143
  %2477 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %2478 = load i64, i64* %2477, align 8
  %2479 = load i64, i64* %109, align 8
  %2480 = icmp slt i64 %2478, %2479
  br i1 %2480, label %2497, label %2481

2481:                                             ; preds = %2476
  store i8 1, i8* %110, align 8
  %2482 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %2483 = load i32, i32* %38, align 8
  %2484 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2482, i64 0, i32 1
  %2485 = load i32, i32* %2484, align 8
  %2486 = sub nsw i32 %2485, %2483
  %2487 = icmp sgt i32 %2486, 0
  %2488 = select i1 %2487, i32 %2486, i32 0
  store i32 %2488, i32* %2484, align 8
  %2489 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2482, i64 0, i32 4
  %2490 = load i64*, i64** %2489, align 8
  %2491 = zext i32 %2488 to i64
  %2492 = getelementptr inbounds i64, i64* %2490, i64 %2491
  %2493 = sext i32 %2483 to i64
  %2494 = sub nsw i64 0, %2493
  %2495 = getelementptr inbounds i64, i64* %2492, i64 %2494
  %2496 = bitcast i64* %2495 to %"struct.icu_69::REStackFrame"*
  br label %6488

2497:                                             ; preds = %2476
  %2498 = load %struct.UText*, %struct.UText** %103, align 8
  %2499 = getelementptr inbounds %struct.UText, %struct.UText* %2498, i64 0, i32 7
  %2500 = load i64, i64* %2499, align 8
  %2501 = sub nsw i64 %2478, %2500
  %2502 = icmp sgt i64 %2501, -1
  br i1 %2502, label %2503, label %2517

2503:                                             ; preds = %2497
  %2504 = getelementptr inbounds %struct.UText, %struct.UText* %2498, i64 0, i32 6
  %2505 = load i32, i32* %2504, align 4
  %2506 = sext i32 %2505 to i64
  %2507 = icmp slt i64 %2501, %2506
  br i1 %2507, label %2508, label %2517

2508:                                             ; preds = %2503
  %2509 = getelementptr inbounds %struct.UText, %struct.UText* %2498, i64 0, i32 10
  %2510 = load i16*, i16** %2509, align 8
  %2511 = getelementptr inbounds i16, i16* %2510, i64 %2501
  %2512 = load i16, i16* %2511, align 2
  %2513 = icmp ult i16 %2512, -9216
  br i1 %2513, label %2514, label %2517

2514:                                             ; preds = %2508
  %2515 = trunc i64 %2501 to i32
  %2516 = getelementptr inbounds %struct.UText, %struct.UText* %2498, i64 0, i32 8
  store i32 %2515, i32* %2516, align 8
  br label %2518

2517:                                             ; preds = %2508, %2503, %2497
  call void @utext_setNativeIndex_69(%struct.UText* %2498, i64 %2478) #12
  br label %2518

2518:                                             ; preds = %2517, %2514
  %2519 = load %struct.UText*, %struct.UText** %103, align 8
  %2520 = getelementptr inbounds %struct.UText, %struct.UText* %2519, i64 0, i32 8
  %2521 = load i32, i32* %2520, align 8
  %2522 = getelementptr inbounds %struct.UText, %struct.UText* %2519, i64 0, i32 9
  %2523 = load i32, i32* %2522, align 4
  %2524 = icmp slt i32 %2521, %2523
  br i1 %2524, label %2525, label %2536

2525:                                             ; preds = %2518
  %2526 = getelementptr inbounds %struct.UText, %struct.UText* %2519, i64 0, i32 10
  %2527 = load i16*, i16** %2526, align 8
  %2528 = sext i32 %2521 to i64
  %2529 = getelementptr inbounds i16, i16* %2527, i64 %2528
  %2530 = load i16, i16* %2529, align 2
  %2531 = icmp ult i16 %2530, -10240
  br i1 %2531, label %2532, label %2536

2532:                                             ; preds = %2525
  %2533 = add nsw i32 %2521, 1
  store i32 %2533, i32* %2520, align 8
  %2534 = load i16, i16* %2529, align 2
  %2535 = zext i16 %2534 to i32
  br label %2538

2536:                                             ; preds = %2525, %2518
  %2537 = call i32 @utext_next32_69(%struct.UText* %2519) #12
  br label %2538

2538:                                             ; preds = %2536, %2532
  %2539 = phi i32 [ %2535, %2532 ], [ %2537, %2536 ]
  %2540 = icmp eq i32 %2539, 10
  br i1 %2540, label %2541, label %2557

2541:                                             ; preds = %2538
  %2542 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %2543 = load i32, i32* %38, align 8
  %2544 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2542, i64 0, i32 1
  %2545 = load i32, i32* %2544, align 8
  %2546 = sub nsw i32 %2545, %2543
  %2547 = icmp sgt i32 %2546, 0
  %2548 = select i1 %2547, i32 %2546, i32 0
  store i32 %2548, i32* %2544, align 8
  %2549 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2542, i64 0, i32 4
  %2550 = load i64*, i64** %2549, align 8
  %2551 = zext i32 %2548 to i64
  %2552 = getelementptr inbounds i64, i64* %2550, i64 %2551
  %2553 = sext i32 %2543 to i64
  %2554 = sub nsw i64 0, %2553
  %2555 = getelementptr inbounds i64, i64* %2552, i64 %2554
  %2556 = bitcast i64* %2555 to %"struct.icu_69::REStackFrame"*
  br label %6488

2557:                                             ; preds = %2538
  %2558 = load %struct.UText*, %struct.UText** %103, align 8
  %2559 = getelementptr inbounds %struct.UText, %struct.UText* %2558, i64 0, i32 8
  %2560 = load i32, i32* %2559, align 8
  %2561 = getelementptr inbounds %struct.UText, %struct.UText* %2558, i64 0, i32 6
  %2562 = load i32, i32* %2561, align 4
  %2563 = icmp sgt i32 %2560, %2562
  br i1 %2563, label %2569, label %2564

2564:                                             ; preds = %2557
  %2565 = getelementptr inbounds %struct.UText, %struct.UText* %2558, i64 0, i32 7
  %2566 = load i64, i64* %2565, align 8
  %2567 = sext i32 %2560 to i64
  %2568 = add nsw i64 %2566, %2567
  br label %2575

2569:                                             ; preds = %2557
  %2570 = getelementptr inbounds %struct.UText, %struct.UText* %2558, i64 0, i32 11
  %2571 = load %struct.UTextFuncs*, %struct.UTextFuncs** %2570, align 8
  %2572 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %2571, i64 0, i32 10
  %2573 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %2572, align 8
  %2574 = call i64 %2573(%struct.UText* %2558) #12
  br label %2575

2575:                                             ; preds = %2569, %2564
  %2576 = phi i64 [ %2568, %2564 ], [ %2574, %2569 ]
  store i64 %2576, i64* %2477, align 8
  br label %6488

2577:                                             ; preds = %143
  %2578 = zext i32 %151 to i64
  store i64 %2578, i64* %145, align 8
  br label %6488

2579:                                             ; preds = %143
  %2580 = load i32, i32* %3, align 4
  %2581 = icmp slt i32 %2580, 1
  br i1 %2581, label %2582, label %2790

2582:                                             ; preds = %2579
  %2583 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %2584 = load i32, i32* %38, align 8
  %2585 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2583, i64 0, i32 1
  %2586 = load i32, i32* %2585, align 8
  %2587 = add nsw i32 %2586, %2584
  %2588 = icmp sgt i32 %2587, -1
  br i1 %2588, label %2589, label %2593

2589:                                             ; preds = %2582
  %2590 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2583, i64 0, i32 2
  %2591 = load i32, i32* %2590, align 4
  %2592 = icmp slt i32 %2591, %2587
  br i1 %2592, label %2593, label %2599

2593:                                             ; preds = %2589, %2582
  %2594 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %2583, i32 %2587, i32* dereferenceable(4) %3) #12
  %2595 = icmp eq i8 %2594, 0
  br i1 %2595, label %2606, label %2596

2596:                                             ; preds = %2593
  %2597 = load i32, i32* %2585, align 8
  %2598 = add nsw i32 %2597, %2584
  br label %2599

2599:                                             ; preds = %2596, %2589
  %2600 = phi i32 [ %2598, %2596 ], [ %2587, %2589 ]
  %2601 = phi i32 [ %2597, %2596 ], [ %2586, %2589 ]
  %2602 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2583, i64 0, i32 4
  %2603 = load i64*, i64** %2602, align 8
  %2604 = sext i32 %2601 to i64
  %2605 = getelementptr inbounds i64, i64* %2603, i64 %2604
  store i32 %2600, i32* %2585, align 8
  br label %2606

2606:                                             ; preds = %2599, %2593
  %2607 = phi i64* [ %2605, %2599 ], [ null, %2593 ]
  %2608 = load i32, i32* %3, align 4
  %2609 = icmp slt i32 %2608, 1
  br i1 %2609, label %2611, label %2610

2610:                                             ; preds = %2606
  store i32 66321, i32* %3, align 4
  br label %2790

2611:                                             ; preds = %2606
  %2612 = load i32, i32* %38, align 8
  %2613 = sext i32 %2612 to i64
  %2614 = sub nsw i64 0, %2613
  %2615 = getelementptr inbounds i64, i64* %2607, i64 %2614
  %2616 = shl nsw i64 %2613, 3
  %2617 = add nsw i64 %2616, -8
  %2618 = lshr exact i64 %2617, 3
  %2619 = add nuw nsw i64 %2618, 1
  %2620 = icmp ult i64 %2619, 4
  br i1 %2620, label %2714, label %2621

2621:                                             ; preds = %2611
  %2622 = getelementptr i64, i64* %2607, i64 1
  %2623 = shl nsw i64 %2613, 3
  %2624 = add nsw i64 %2623, -8
  %2625 = lshr exact i64 %2624, 3
  %2626 = getelementptr i64, i64* %2622, i64 %2625
  %2627 = getelementptr i64, i64* %2607, i64 1
  %2628 = sub nsw i64 %2625, %2613
  %2629 = getelementptr i64, i64* %2627, i64 %2628
  %2630 = icmp ult i64* %2607, %2629
  %2631 = icmp ult i64* %2615, %2626
  %2632 = and i1 %2630, %2631
  br i1 %2632, label %2714, label %2633

2633:                                             ; preds = %2621
  %2634 = and i64 %2619, 4611686018427387900
  %2635 = getelementptr i64, i64* %2615, i64 %2634
  %2636 = getelementptr i64, i64* %2607, i64 %2634
  %2637 = add nsw i64 %2634, -4
  %2638 = lshr exact i64 %2637, 2
  %2639 = add nuw nsw i64 %2638, 1
  %2640 = and i64 %2639, 3
  %2641 = icmp ult i64 %2637, 12
  br i1 %2641, label %2693, label %2642

2642:                                             ; preds = %2633
  %2643 = sub nsw i64 %2639, %2640
  br label %2644

2644:                                             ; preds = %2644, %2642
  %2645 = phi i64 [ 0, %2642 ], [ %2690, %2644 ]
  %2646 = phi i64 [ %2643, %2642 ], [ %2691, %2644 ]
  %2647 = getelementptr i64, i64* %2615, i64 %2645
  %2648 = getelementptr i64, i64* %2607, i64 %2645
  %2649 = bitcast i64* %2647 to <2 x i64>*
  %2650 = load <2 x i64>, <2 x i64>* %2649, align 8, !alias.scope !13
  %2651 = getelementptr i64, i64* %2647, i64 2
  %2652 = bitcast i64* %2651 to <2 x i64>*
  %2653 = load <2 x i64>, <2 x i64>* %2652, align 8, !alias.scope !13
  %2654 = bitcast i64* %2648 to <2 x i64>*
  store <2 x i64> %2650, <2 x i64>* %2654, align 8, !alias.scope !16, !noalias !13
  %2655 = getelementptr i64, i64* %2648, i64 2
  %2656 = bitcast i64* %2655 to <2 x i64>*
  store <2 x i64> %2653, <2 x i64>* %2656, align 8, !alias.scope !16, !noalias !13
  %2657 = or i64 %2645, 4
  %2658 = getelementptr i64, i64* %2615, i64 %2657
  %2659 = getelementptr i64, i64* %2607, i64 %2657
  %2660 = bitcast i64* %2658 to <2 x i64>*
  %2661 = load <2 x i64>, <2 x i64>* %2660, align 8, !alias.scope !13
  %2662 = getelementptr i64, i64* %2658, i64 2
  %2663 = bitcast i64* %2662 to <2 x i64>*
  %2664 = load <2 x i64>, <2 x i64>* %2663, align 8, !alias.scope !13
  %2665 = bitcast i64* %2659 to <2 x i64>*
  store <2 x i64> %2661, <2 x i64>* %2665, align 8, !alias.scope !16, !noalias !13
  %2666 = getelementptr i64, i64* %2659, i64 2
  %2667 = bitcast i64* %2666 to <2 x i64>*
  store <2 x i64> %2664, <2 x i64>* %2667, align 8, !alias.scope !16, !noalias !13
  %2668 = or i64 %2645, 8
  %2669 = getelementptr i64, i64* %2615, i64 %2668
  %2670 = getelementptr i64, i64* %2607, i64 %2668
  %2671 = bitcast i64* %2669 to <2 x i64>*
  %2672 = load <2 x i64>, <2 x i64>* %2671, align 8, !alias.scope !13
  %2673 = getelementptr i64, i64* %2669, i64 2
  %2674 = bitcast i64* %2673 to <2 x i64>*
  %2675 = load <2 x i64>, <2 x i64>* %2674, align 8, !alias.scope !13
  %2676 = bitcast i64* %2670 to <2 x i64>*
  store <2 x i64> %2672, <2 x i64>* %2676, align 8, !alias.scope !16, !noalias !13
  %2677 = getelementptr i64, i64* %2670, i64 2
  %2678 = bitcast i64* %2677 to <2 x i64>*
  store <2 x i64> %2675, <2 x i64>* %2678, align 8, !alias.scope !16, !noalias !13
  %2679 = or i64 %2645, 12
  %2680 = getelementptr i64, i64* %2615, i64 %2679
  %2681 = getelementptr i64, i64* %2607, i64 %2679
  %2682 = bitcast i64* %2680 to <2 x i64>*
  %2683 = load <2 x i64>, <2 x i64>* %2682, align 8, !alias.scope !13
  %2684 = getelementptr i64, i64* %2680, i64 2
  %2685 = bitcast i64* %2684 to <2 x i64>*
  %2686 = load <2 x i64>, <2 x i64>* %2685, align 8, !alias.scope !13
  %2687 = bitcast i64* %2681 to <2 x i64>*
  store <2 x i64> %2683, <2 x i64>* %2687, align 8, !alias.scope !16, !noalias !13
  %2688 = getelementptr i64, i64* %2681, i64 2
  %2689 = bitcast i64* %2688 to <2 x i64>*
  store <2 x i64> %2686, <2 x i64>* %2689, align 8, !alias.scope !16, !noalias !13
  %2690 = add i64 %2645, 16
  %2691 = add i64 %2646, -4
  %2692 = icmp eq i64 %2691, 0
  br i1 %2692, label %2693, label %2644, !llvm.loop !18

2693:                                             ; preds = %2644, %2633
  %2694 = phi i64 [ 0, %2633 ], [ %2690, %2644 ]
  %2695 = icmp eq i64 %2640, 0
  br i1 %2695, label %2712, label %2696

2696:                                             ; preds = %2693, %2696
  %2697 = phi i64 [ %2709, %2696 ], [ %2694, %2693 ]
  %2698 = phi i64 [ %2710, %2696 ], [ %2640, %2693 ]
  %2699 = getelementptr i64, i64* %2615, i64 %2697
  %2700 = getelementptr i64, i64* %2607, i64 %2697
  %2701 = bitcast i64* %2699 to <2 x i64>*
  %2702 = load <2 x i64>, <2 x i64>* %2701, align 8, !alias.scope !13
  %2703 = getelementptr i64, i64* %2699, i64 2
  %2704 = bitcast i64* %2703 to <2 x i64>*
  %2705 = load <2 x i64>, <2 x i64>* %2704, align 8, !alias.scope !13
  %2706 = bitcast i64* %2700 to <2 x i64>*
  store <2 x i64> %2702, <2 x i64>* %2706, align 8, !alias.scope !16, !noalias !13
  %2707 = getelementptr i64, i64* %2700, i64 2
  %2708 = bitcast i64* %2707 to <2 x i64>*
  store <2 x i64> %2705, <2 x i64>* %2708, align 8, !alias.scope !16, !noalias !13
  %2709 = add i64 %2697, 4
  %2710 = add i64 %2698, -1
  %2711 = icmp eq i64 %2710, 0
  br i1 %2711, label %2712, label %2696, !llvm.loop !19

2712:                                             ; preds = %2696, %2693
  %2713 = icmp eq i64 %2619, %2634
  br i1 %2713, label %2766, label %2714

2714:                                             ; preds = %2712, %2621, %2611
  %2715 = phi i64* [ %2615, %2621 ], [ %2615, %2611 ], [ %2635, %2712 ]
  %2716 = phi i64* [ %2607, %2621 ], [ %2607, %2611 ], [ %2636, %2712 ]
  %2717 = ptrtoint i64* %2715 to i64
  %2718 = getelementptr i64, i64* %2607, i64 -1
  %2719 = ptrtoint i64* %2718 to i64
  %2720 = sub i64 %2719, %2717
  %2721 = lshr i64 %2720, 3
  %2722 = add nuw nsw i64 %2721, 1
  %2723 = and i64 %2722, 7
  %2724 = icmp eq i64 %2723, 0
  br i1 %2724, label %2734, label %2725

2725:                                             ; preds = %2714, %2725
  %2726 = phi i64* [ %2729, %2725 ], [ %2715, %2714 ]
  %2727 = phi i64* [ %2731, %2725 ], [ %2716, %2714 ]
  %2728 = phi i64 [ %2732, %2725 ], [ %2723, %2714 ]
  %2729 = getelementptr inbounds i64, i64* %2726, i64 1
  %2730 = load i64, i64* %2726, align 8
  %2731 = getelementptr inbounds i64, i64* %2727, i64 1
  store i64 %2730, i64* %2727, align 8
  %2732 = add i64 %2728, -1
  %2733 = icmp eq i64 %2732, 0
  br i1 %2733, label %2734, label %2725, !llvm.loop !20

2734:                                             ; preds = %2725, %2714
  %2735 = phi i64* [ %2715, %2714 ], [ %2729, %2725 ]
  %2736 = phi i64* [ %2716, %2714 ], [ %2731, %2725 ]
  %2737 = icmp ult i64 %2720, 56
  br i1 %2737, label %2766, label %2738

2738:                                             ; preds = %2734, %2738
  %2739 = phi i64* [ %2762, %2738 ], [ %2735, %2734 ]
  %2740 = phi i64* [ %2764, %2738 ], [ %2736, %2734 ]
  %2741 = getelementptr inbounds i64, i64* %2739, i64 1
  %2742 = load i64, i64* %2739, align 8
  %2743 = getelementptr inbounds i64, i64* %2740, i64 1
  store i64 %2742, i64* %2740, align 8
  %2744 = getelementptr inbounds i64, i64* %2739, i64 2
  %2745 = load i64, i64* %2741, align 8
  %2746 = getelementptr inbounds i64, i64* %2740, i64 2
  store i64 %2745, i64* %2743, align 8
  %2747 = getelementptr inbounds i64, i64* %2739, i64 3
  %2748 = load i64, i64* %2744, align 8
  %2749 = getelementptr inbounds i64, i64* %2740, i64 3
  store i64 %2748, i64* %2746, align 8
  %2750 = getelementptr inbounds i64, i64* %2739, i64 4
  %2751 = load i64, i64* %2747, align 8
  %2752 = getelementptr inbounds i64, i64* %2740, i64 4
  store i64 %2751, i64* %2749, align 8
  %2753 = getelementptr inbounds i64, i64* %2739, i64 5
  %2754 = load i64, i64* %2750, align 8
  %2755 = getelementptr inbounds i64, i64* %2740, i64 5
  store i64 %2754, i64* %2752, align 8
  %2756 = getelementptr inbounds i64, i64* %2739, i64 6
  %2757 = load i64, i64* %2753, align 8
  %2758 = getelementptr inbounds i64, i64* %2740, i64 6
  store i64 %2757, i64* %2755, align 8
  %2759 = getelementptr inbounds i64, i64* %2739, i64 7
  %2760 = load i64, i64* %2756, align 8
  %2761 = getelementptr inbounds i64, i64* %2740, i64 7
  store i64 %2760, i64* %2758, align 8
  %2762 = getelementptr inbounds i64, i64* %2739, i64 8
  %2763 = load i64, i64* %2759, align 8
  %2764 = getelementptr inbounds i64, i64* %2740, i64 8
  store i64 %2763, i64* %2761, align 8
  %2765 = icmp eq i64* %2762, %2607
  br i1 %2765, label %2766, label %2738, !llvm.loop !21

2766:                                             ; preds = %2734, %2738, %2712
  %2767 = load i32, i32* %104, align 8
  %2768 = add nsw i32 %2767, -1
  store i32 %2768, i32* %104, align 8
  %2769 = icmp slt i32 %2767, 2
  br i1 %2769, label %2770, label %2787

2770:                                             ; preds = %2766
  store i32 10000, i32* %104, align 8
  %2771 = load i32, i32* %105, align 4
  %2772 = add nsw i32 %2771, 1
  store i32 %2772, i32* %105, align 4
  %2773 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %2774 = icmp eq i8 (i8*, i32)* %2773, null
  br i1 %2774, label %2780, label %2775

2775:                                             ; preds = %2770
  %2776 = load i8*, i8** %107, align 8
  %2777 = call signext i8 %2773(i8* %2776, i32 %2772) #12
  %2778 = icmp eq i8 %2777, 0
  br i1 %2778, label %2779, label %2780

2779:                                             ; preds = %2775
  store i32 66323, i32* %3, align 4
  br label %2787

2780:                                             ; preds = %2775, %2770
  %2781 = load i32, i32* %108, align 8
  %2782 = icmp sgt i32 %2781, 0
  br i1 %2782, label %2783, label %2787

2783:                                             ; preds = %2780
  %2784 = load i32, i32* %105, align 4
  %2785 = icmp slt i32 %2784, %2781
  br i1 %2785, label %2787, label %2786

2786:                                             ; preds = %2783
  store i32 66322, i32* %3, align 4
  br label %2787

2787:                                             ; preds = %2786, %2783, %2780, %2779, %2766
  %2788 = getelementptr inbounds i64, i64* %2615, i64 1
  store i64 %152, i64* %2788, align 8
  %2789 = bitcast i64* %2607 to %"struct.icu_69::REStackFrame"*
  br label %2790

2790:                                             ; preds = %2579, %2610, %2787
  %2791 = phi %"struct.icu_69::REStackFrame"* [ %144, %2579 ], [ %144, %2610 ], [ %2789, %2787 ]
  %2792 = zext i32 %151 to i64
  %2793 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %2791, i64 0, i32 1
  store i64 %2792, i64* %2793, align 8
  br label %6488

2794:                                             ; preds = %143
  %2795 = add nsw i32 %151, -1
  %2796 = sext i32 %2795 to i64
  %2797 = getelementptr inbounds i64, i64* %16, i64 %2796
  %2798 = load i64, i64* %2797, align 8
  %2799 = and i64 %2798, 16777215
  %2800 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %2799
  %2801 = load i64, i64* %2800, align 8
  %2802 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %2803 = load i64, i64* %2802, align 8
  %2804 = icmp slt i64 %2801, %2803
  br i1 %2804, label %2805, label %6488

2805:                                             ; preds = %2794
  %2806 = load i32, i32* %3, align 4
  %2807 = icmp slt i32 %2806, 1
  br i1 %2807, label %2808, label %3016

2808:                                             ; preds = %2805
  %2809 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %2810 = load i32, i32* %38, align 8
  %2811 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2809, i64 0, i32 1
  %2812 = load i32, i32* %2811, align 8
  %2813 = add nsw i32 %2812, %2810
  %2814 = icmp sgt i32 %2813, -1
  br i1 %2814, label %2815, label %2819

2815:                                             ; preds = %2808
  %2816 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2809, i64 0, i32 2
  %2817 = load i32, i32* %2816, align 4
  %2818 = icmp slt i32 %2817, %2813
  br i1 %2818, label %2819, label %2825

2819:                                             ; preds = %2815, %2808
  %2820 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %2809, i32 %2813, i32* dereferenceable(4) %3) #12
  %2821 = icmp eq i8 %2820, 0
  br i1 %2821, label %2832, label %2822

2822:                                             ; preds = %2819
  %2823 = load i32, i32* %2811, align 8
  %2824 = add nsw i32 %2823, %2810
  br label %2825

2825:                                             ; preds = %2822, %2815
  %2826 = phi i32 [ %2824, %2822 ], [ %2813, %2815 ]
  %2827 = phi i32 [ %2823, %2822 ], [ %2812, %2815 ]
  %2828 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2809, i64 0, i32 4
  %2829 = load i64*, i64** %2828, align 8
  %2830 = sext i32 %2827 to i64
  %2831 = getelementptr inbounds i64, i64* %2829, i64 %2830
  store i32 %2826, i32* %2811, align 8
  br label %2832

2832:                                             ; preds = %2825, %2819
  %2833 = phi i64* [ %2831, %2825 ], [ null, %2819 ]
  %2834 = load i32, i32* %3, align 4
  %2835 = icmp slt i32 %2834, 1
  br i1 %2835, label %2837, label %2836

2836:                                             ; preds = %2832
  store i32 66321, i32* %3, align 4
  br label %3016

2837:                                             ; preds = %2832
  %2838 = load i32, i32* %38, align 8
  %2839 = sext i32 %2838 to i64
  %2840 = sub nsw i64 0, %2839
  %2841 = getelementptr inbounds i64, i64* %2833, i64 %2840
  %2842 = shl nsw i64 %2839, 3
  %2843 = add nsw i64 %2842, -8
  %2844 = lshr exact i64 %2843, 3
  %2845 = add nuw nsw i64 %2844, 1
  %2846 = icmp ult i64 %2845, 4
  br i1 %2846, label %2940, label %2847

2847:                                             ; preds = %2837
  %2848 = getelementptr i64, i64* %2833, i64 1
  %2849 = shl nsw i64 %2839, 3
  %2850 = add nsw i64 %2849, -8
  %2851 = lshr exact i64 %2850, 3
  %2852 = getelementptr i64, i64* %2848, i64 %2851
  %2853 = getelementptr i64, i64* %2833, i64 1
  %2854 = sub nsw i64 %2851, %2839
  %2855 = getelementptr i64, i64* %2853, i64 %2854
  %2856 = icmp ult i64* %2833, %2855
  %2857 = icmp ult i64* %2841, %2852
  %2858 = and i1 %2856, %2857
  br i1 %2858, label %2940, label %2859

2859:                                             ; preds = %2847
  %2860 = and i64 %2845, 4611686018427387900
  %2861 = getelementptr i64, i64* %2841, i64 %2860
  %2862 = getelementptr i64, i64* %2833, i64 %2860
  %2863 = add nsw i64 %2860, -4
  %2864 = lshr exact i64 %2863, 2
  %2865 = add nuw nsw i64 %2864, 1
  %2866 = and i64 %2865, 3
  %2867 = icmp ult i64 %2863, 12
  br i1 %2867, label %2919, label %2868

2868:                                             ; preds = %2859
  %2869 = sub nsw i64 %2865, %2866
  br label %2870

2870:                                             ; preds = %2870, %2868
  %2871 = phi i64 [ 0, %2868 ], [ %2916, %2870 ]
  %2872 = phi i64 [ %2869, %2868 ], [ %2917, %2870 ]
  %2873 = getelementptr i64, i64* %2841, i64 %2871
  %2874 = getelementptr i64, i64* %2833, i64 %2871
  %2875 = bitcast i64* %2873 to <2 x i64>*
  %2876 = load <2 x i64>, <2 x i64>* %2875, align 8, !alias.scope !22
  %2877 = getelementptr i64, i64* %2873, i64 2
  %2878 = bitcast i64* %2877 to <2 x i64>*
  %2879 = load <2 x i64>, <2 x i64>* %2878, align 8, !alias.scope !22
  %2880 = bitcast i64* %2874 to <2 x i64>*
  store <2 x i64> %2876, <2 x i64>* %2880, align 8, !alias.scope !25, !noalias !22
  %2881 = getelementptr i64, i64* %2874, i64 2
  %2882 = bitcast i64* %2881 to <2 x i64>*
  store <2 x i64> %2879, <2 x i64>* %2882, align 8, !alias.scope !25, !noalias !22
  %2883 = or i64 %2871, 4
  %2884 = getelementptr i64, i64* %2841, i64 %2883
  %2885 = getelementptr i64, i64* %2833, i64 %2883
  %2886 = bitcast i64* %2884 to <2 x i64>*
  %2887 = load <2 x i64>, <2 x i64>* %2886, align 8, !alias.scope !22
  %2888 = getelementptr i64, i64* %2884, i64 2
  %2889 = bitcast i64* %2888 to <2 x i64>*
  %2890 = load <2 x i64>, <2 x i64>* %2889, align 8, !alias.scope !22
  %2891 = bitcast i64* %2885 to <2 x i64>*
  store <2 x i64> %2887, <2 x i64>* %2891, align 8, !alias.scope !25, !noalias !22
  %2892 = getelementptr i64, i64* %2885, i64 2
  %2893 = bitcast i64* %2892 to <2 x i64>*
  store <2 x i64> %2890, <2 x i64>* %2893, align 8, !alias.scope !25, !noalias !22
  %2894 = or i64 %2871, 8
  %2895 = getelementptr i64, i64* %2841, i64 %2894
  %2896 = getelementptr i64, i64* %2833, i64 %2894
  %2897 = bitcast i64* %2895 to <2 x i64>*
  %2898 = load <2 x i64>, <2 x i64>* %2897, align 8, !alias.scope !22
  %2899 = getelementptr i64, i64* %2895, i64 2
  %2900 = bitcast i64* %2899 to <2 x i64>*
  %2901 = load <2 x i64>, <2 x i64>* %2900, align 8, !alias.scope !22
  %2902 = bitcast i64* %2896 to <2 x i64>*
  store <2 x i64> %2898, <2 x i64>* %2902, align 8, !alias.scope !25, !noalias !22
  %2903 = getelementptr i64, i64* %2896, i64 2
  %2904 = bitcast i64* %2903 to <2 x i64>*
  store <2 x i64> %2901, <2 x i64>* %2904, align 8, !alias.scope !25, !noalias !22
  %2905 = or i64 %2871, 12
  %2906 = getelementptr i64, i64* %2841, i64 %2905
  %2907 = getelementptr i64, i64* %2833, i64 %2905
  %2908 = bitcast i64* %2906 to <2 x i64>*
  %2909 = load <2 x i64>, <2 x i64>* %2908, align 8, !alias.scope !22
  %2910 = getelementptr i64, i64* %2906, i64 2
  %2911 = bitcast i64* %2910 to <2 x i64>*
  %2912 = load <2 x i64>, <2 x i64>* %2911, align 8, !alias.scope !22
  %2913 = bitcast i64* %2907 to <2 x i64>*
  store <2 x i64> %2909, <2 x i64>* %2913, align 8, !alias.scope !25, !noalias !22
  %2914 = getelementptr i64, i64* %2907, i64 2
  %2915 = bitcast i64* %2914 to <2 x i64>*
  store <2 x i64> %2912, <2 x i64>* %2915, align 8, !alias.scope !25, !noalias !22
  %2916 = add i64 %2871, 16
  %2917 = add i64 %2872, -4
  %2918 = icmp eq i64 %2917, 0
  br i1 %2918, label %2919, label %2870, !llvm.loop !27

2919:                                             ; preds = %2870, %2859
  %2920 = phi i64 [ 0, %2859 ], [ %2916, %2870 ]
  %2921 = icmp eq i64 %2866, 0
  br i1 %2921, label %2938, label %2922

2922:                                             ; preds = %2919, %2922
  %2923 = phi i64 [ %2935, %2922 ], [ %2920, %2919 ]
  %2924 = phi i64 [ %2936, %2922 ], [ %2866, %2919 ]
  %2925 = getelementptr i64, i64* %2841, i64 %2923
  %2926 = getelementptr i64, i64* %2833, i64 %2923
  %2927 = bitcast i64* %2925 to <2 x i64>*
  %2928 = load <2 x i64>, <2 x i64>* %2927, align 8, !alias.scope !22
  %2929 = getelementptr i64, i64* %2925, i64 2
  %2930 = bitcast i64* %2929 to <2 x i64>*
  %2931 = load <2 x i64>, <2 x i64>* %2930, align 8, !alias.scope !22
  %2932 = bitcast i64* %2926 to <2 x i64>*
  store <2 x i64> %2928, <2 x i64>* %2932, align 8, !alias.scope !25, !noalias !22
  %2933 = getelementptr i64, i64* %2926, i64 2
  %2934 = bitcast i64* %2933 to <2 x i64>*
  store <2 x i64> %2931, <2 x i64>* %2934, align 8, !alias.scope !25, !noalias !22
  %2935 = add i64 %2923, 4
  %2936 = add i64 %2924, -1
  %2937 = icmp eq i64 %2936, 0
  br i1 %2937, label %2938, label %2922, !llvm.loop !28

2938:                                             ; preds = %2922, %2919
  %2939 = icmp eq i64 %2845, %2860
  br i1 %2939, label %2992, label %2940

2940:                                             ; preds = %2938, %2847, %2837
  %2941 = phi i64* [ %2841, %2847 ], [ %2841, %2837 ], [ %2861, %2938 ]
  %2942 = phi i64* [ %2833, %2847 ], [ %2833, %2837 ], [ %2862, %2938 ]
  %2943 = ptrtoint i64* %2941 to i64
  %2944 = getelementptr i64, i64* %2833, i64 -1
  %2945 = ptrtoint i64* %2944 to i64
  %2946 = sub i64 %2945, %2943
  %2947 = lshr i64 %2946, 3
  %2948 = add nuw nsw i64 %2947, 1
  %2949 = and i64 %2948, 7
  %2950 = icmp eq i64 %2949, 0
  br i1 %2950, label %2960, label %2951

2951:                                             ; preds = %2940, %2951
  %2952 = phi i64* [ %2955, %2951 ], [ %2941, %2940 ]
  %2953 = phi i64* [ %2957, %2951 ], [ %2942, %2940 ]
  %2954 = phi i64 [ %2958, %2951 ], [ %2949, %2940 ]
  %2955 = getelementptr inbounds i64, i64* %2952, i64 1
  %2956 = load i64, i64* %2952, align 8
  %2957 = getelementptr inbounds i64, i64* %2953, i64 1
  store i64 %2956, i64* %2953, align 8
  %2958 = add i64 %2954, -1
  %2959 = icmp eq i64 %2958, 0
  br i1 %2959, label %2960, label %2951, !llvm.loop !29

2960:                                             ; preds = %2951, %2940
  %2961 = phi i64* [ %2941, %2940 ], [ %2955, %2951 ]
  %2962 = phi i64* [ %2942, %2940 ], [ %2957, %2951 ]
  %2963 = icmp ult i64 %2946, 56
  br i1 %2963, label %2992, label %2964

2964:                                             ; preds = %2960, %2964
  %2965 = phi i64* [ %2988, %2964 ], [ %2961, %2960 ]
  %2966 = phi i64* [ %2990, %2964 ], [ %2962, %2960 ]
  %2967 = getelementptr inbounds i64, i64* %2965, i64 1
  %2968 = load i64, i64* %2965, align 8
  %2969 = getelementptr inbounds i64, i64* %2966, i64 1
  store i64 %2968, i64* %2966, align 8
  %2970 = getelementptr inbounds i64, i64* %2965, i64 2
  %2971 = load i64, i64* %2967, align 8
  %2972 = getelementptr inbounds i64, i64* %2966, i64 2
  store i64 %2971, i64* %2969, align 8
  %2973 = getelementptr inbounds i64, i64* %2965, i64 3
  %2974 = load i64, i64* %2970, align 8
  %2975 = getelementptr inbounds i64, i64* %2966, i64 3
  store i64 %2974, i64* %2972, align 8
  %2976 = getelementptr inbounds i64, i64* %2965, i64 4
  %2977 = load i64, i64* %2973, align 8
  %2978 = getelementptr inbounds i64, i64* %2966, i64 4
  store i64 %2977, i64* %2975, align 8
  %2979 = getelementptr inbounds i64, i64* %2965, i64 5
  %2980 = load i64, i64* %2976, align 8
  %2981 = getelementptr inbounds i64, i64* %2966, i64 5
  store i64 %2980, i64* %2978, align 8
  %2982 = getelementptr inbounds i64, i64* %2965, i64 6
  %2983 = load i64, i64* %2979, align 8
  %2984 = getelementptr inbounds i64, i64* %2966, i64 6
  store i64 %2983, i64* %2981, align 8
  %2985 = getelementptr inbounds i64, i64* %2965, i64 7
  %2986 = load i64, i64* %2982, align 8
  %2987 = getelementptr inbounds i64, i64* %2966, i64 7
  store i64 %2986, i64* %2984, align 8
  %2988 = getelementptr inbounds i64, i64* %2965, i64 8
  %2989 = load i64, i64* %2985, align 8
  %2990 = getelementptr inbounds i64, i64* %2966, i64 8
  store i64 %2989, i64* %2987, align 8
  %2991 = icmp eq i64* %2988, %2833
  br i1 %2991, label %2992, label %2964, !llvm.loop !30

2992:                                             ; preds = %2960, %2964, %2938
  %2993 = load i32, i32* %104, align 8
  %2994 = add nsw i32 %2993, -1
  store i32 %2994, i32* %104, align 8
  %2995 = icmp slt i32 %2993, 2
  br i1 %2995, label %2996, label %3013

2996:                                             ; preds = %2992
  store i32 10000, i32* %104, align 8
  %2997 = load i32, i32* %105, align 4
  %2998 = add nsw i32 %2997, 1
  store i32 %2998, i32* %105, align 4
  %2999 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %3000 = icmp eq i8 (i8*, i32)* %2999, null
  br i1 %3000, label %3006, label %3001

3001:                                             ; preds = %2996
  %3002 = load i8*, i8** %107, align 8
  %3003 = call signext i8 %2999(i8* %3002, i32 %2998) #12
  %3004 = icmp eq i8 %3003, 0
  br i1 %3004, label %3005, label %3006

3005:                                             ; preds = %3001
  store i32 66323, i32* %3, align 4
  br label %3013

3006:                                             ; preds = %3001, %2996
  %3007 = load i32, i32* %108, align 8
  %3008 = icmp sgt i32 %3007, 0
  br i1 %3008, label %3009, label %3013

3009:                                             ; preds = %3006
  %3010 = load i32, i32* %105, align 4
  %3011 = icmp slt i32 %3010, %3007
  br i1 %3011, label %3013, label %3012

3012:                                             ; preds = %3009
  store i32 66322, i32* %3, align 4
  br label %3013

3013:                                             ; preds = %3012, %3009, %3006, %3005, %2992
  %3014 = getelementptr inbounds i64, i64* %2841, i64 1
  store i64 %152, i64* %3014, align 8
  %3015 = bitcast i64* %2833 to %"struct.icu_69::REStackFrame"*
  br label %3016

3016:                                             ; preds = %2805, %2836, %3013
  %3017 = phi %"struct.icu_69::REStackFrame"* [ %144, %2805 ], [ %144, %2836 ], [ %3015, %3013 ]
  %3018 = zext i32 %151 to i64
  %3019 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %3017, i64 0, i32 1
  store i64 %3018, i64* %3019, align 8
  %3020 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %3017, i64 0, i32 0
  %3021 = load i64, i64* %3020, align 8
  %3022 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %3017, i64 0, i32 2, i64 %2799
  store i64 %3021, i64* %3022, align 8
  br label %6488

3023:                                             ; preds = %143
  %3024 = zext i32 %151 to i64
  %3025 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %3024
  store i64 0, i64* %3025, align 8
  %3026 = add nsw i64 %146, 4
  store i64 %3026, i64* %145, align 8
  %3027 = shl i64 %152, 32
  %3028 = add i64 %3027, 4294967296
  %3029 = ashr exact i64 %3028, 32
  %3030 = getelementptr inbounds i64, i64* %16, i64 %3029
  %3031 = load i64, i64* %3030, align 8
  %3032 = trunc i64 %3031 to i32
  %3033 = add i64 %3027, 8589934592
  %3034 = ashr exact i64 %3033, 32
  %3035 = getelementptr inbounds i64, i64* %16, i64 %3034
  %3036 = load i64, i64* %3035, align 8
  %3037 = trunc i64 %3036 to i32
  %3038 = icmp eq i32 %3032, 0
  br i1 %3038, label %3039, label %3255

3039:                                             ; preds = %3023
  %3040 = ashr exact i64 %3027, 32
  %3041 = getelementptr inbounds i64, i64* %16, i64 %3040
  %3042 = load i64, i64* %3041, align 8
  %3043 = and i64 %3042, 16777215
  %3044 = add nuw nsw i64 %3043, 1
  %3045 = load i32, i32* %3, align 4
  %3046 = icmp slt i32 %3045, 1
  br i1 %3046, label %3047, label %3255

3047:                                             ; preds = %3039
  %3048 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %3049 = load i32, i32* %38, align 8
  %3050 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3048, i64 0, i32 1
  %3051 = load i32, i32* %3050, align 8
  %3052 = add nsw i32 %3051, %3049
  %3053 = icmp sgt i32 %3052, -1
  br i1 %3053, label %3054, label %3058

3054:                                             ; preds = %3047
  %3055 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3048, i64 0, i32 2
  %3056 = load i32, i32* %3055, align 4
  %3057 = icmp slt i32 %3056, %3052
  br i1 %3057, label %3058, label %3064

3058:                                             ; preds = %3054, %3047
  %3059 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %3048, i32 %3052, i32* dereferenceable(4) %3) #12
  %3060 = icmp eq i8 %3059, 0
  br i1 %3060, label %3071, label %3061

3061:                                             ; preds = %3058
  %3062 = load i32, i32* %3050, align 8
  %3063 = add nsw i32 %3062, %3049
  br label %3064

3064:                                             ; preds = %3061, %3054
  %3065 = phi i32 [ %3063, %3061 ], [ %3052, %3054 ]
  %3066 = phi i32 [ %3062, %3061 ], [ %3051, %3054 ]
  %3067 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3048, i64 0, i32 4
  %3068 = load i64*, i64** %3067, align 8
  %3069 = sext i32 %3066 to i64
  %3070 = getelementptr inbounds i64, i64* %3068, i64 %3069
  store i32 %3065, i32* %3050, align 8
  br label %3071

3071:                                             ; preds = %3064, %3058
  %3072 = phi i64* [ %3070, %3064 ], [ null, %3058 ]
  %3073 = load i32, i32* %3, align 4
  %3074 = icmp slt i32 %3073, 1
  br i1 %3074, label %3076, label %3075

3075:                                             ; preds = %3071
  store i32 66321, i32* %3, align 4
  br label %3255

3076:                                             ; preds = %3071
  %3077 = load i32, i32* %38, align 8
  %3078 = sext i32 %3077 to i64
  %3079 = sub nsw i64 0, %3078
  %3080 = getelementptr inbounds i64, i64* %3072, i64 %3079
  %3081 = shl nsw i64 %3078, 3
  %3082 = add nsw i64 %3081, -8
  %3083 = lshr exact i64 %3082, 3
  %3084 = add nuw nsw i64 %3083, 1
  %3085 = icmp ult i64 %3084, 4
  br i1 %3085, label %3179, label %3086

3086:                                             ; preds = %3076
  %3087 = getelementptr i64, i64* %3072, i64 1
  %3088 = shl nsw i64 %3078, 3
  %3089 = add nsw i64 %3088, -8
  %3090 = lshr exact i64 %3089, 3
  %3091 = getelementptr i64, i64* %3087, i64 %3090
  %3092 = getelementptr i64, i64* %3072, i64 1
  %3093 = sub nsw i64 %3090, %3078
  %3094 = getelementptr i64, i64* %3092, i64 %3093
  %3095 = icmp ult i64* %3072, %3094
  %3096 = icmp ult i64* %3080, %3091
  %3097 = and i1 %3095, %3096
  br i1 %3097, label %3179, label %3098

3098:                                             ; preds = %3086
  %3099 = and i64 %3084, 4611686018427387900
  %3100 = getelementptr i64, i64* %3080, i64 %3099
  %3101 = getelementptr i64, i64* %3072, i64 %3099
  %3102 = add nsw i64 %3099, -4
  %3103 = lshr exact i64 %3102, 2
  %3104 = add nuw nsw i64 %3103, 1
  %3105 = and i64 %3104, 3
  %3106 = icmp ult i64 %3102, 12
  br i1 %3106, label %3158, label %3107

3107:                                             ; preds = %3098
  %3108 = sub nsw i64 %3104, %3105
  br label %3109

3109:                                             ; preds = %3109, %3107
  %3110 = phi i64 [ 0, %3107 ], [ %3155, %3109 ]
  %3111 = phi i64 [ %3108, %3107 ], [ %3156, %3109 ]
  %3112 = getelementptr i64, i64* %3080, i64 %3110
  %3113 = getelementptr i64, i64* %3072, i64 %3110
  %3114 = bitcast i64* %3112 to <2 x i64>*
  %3115 = load <2 x i64>, <2 x i64>* %3114, align 8, !alias.scope !31
  %3116 = getelementptr i64, i64* %3112, i64 2
  %3117 = bitcast i64* %3116 to <2 x i64>*
  %3118 = load <2 x i64>, <2 x i64>* %3117, align 8, !alias.scope !31
  %3119 = bitcast i64* %3113 to <2 x i64>*
  store <2 x i64> %3115, <2 x i64>* %3119, align 8, !alias.scope !34, !noalias !31
  %3120 = getelementptr i64, i64* %3113, i64 2
  %3121 = bitcast i64* %3120 to <2 x i64>*
  store <2 x i64> %3118, <2 x i64>* %3121, align 8, !alias.scope !34, !noalias !31
  %3122 = or i64 %3110, 4
  %3123 = getelementptr i64, i64* %3080, i64 %3122
  %3124 = getelementptr i64, i64* %3072, i64 %3122
  %3125 = bitcast i64* %3123 to <2 x i64>*
  %3126 = load <2 x i64>, <2 x i64>* %3125, align 8, !alias.scope !31
  %3127 = getelementptr i64, i64* %3123, i64 2
  %3128 = bitcast i64* %3127 to <2 x i64>*
  %3129 = load <2 x i64>, <2 x i64>* %3128, align 8, !alias.scope !31
  %3130 = bitcast i64* %3124 to <2 x i64>*
  store <2 x i64> %3126, <2 x i64>* %3130, align 8, !alias.scope !34, !noalias !31
  %3131 = getelementptr i64, i64* %3124, i64 2
  %3132 = bitcast i64* %3131 to <2 x i64>*
  store <2 x i64> %3129, <2 x i64>* %3132, align 8, !alias.scope !34, !noalias !31
  %3133 = or i64 %3110, 8
  %3134 = getelementptr i64, i64* %3080, i64 %3133
  %3135 = getelementptr i64, i64* %3072, i64 %3133
  %3136 = bitcast i64* %3134 to <2 x i64>*
  %3137 = load <2 x i64>, <2 x i64>* %3136, align 8, !alias.scope !31
  %3138 = getelementptr i64, i64* %3134, i64 2
  %3139 = bitcast i64* %3138 to <2 x i64>*
  %3140 = load <2 x i64>, <2 x i64>* %3139, align 8, !alias.scope !31
  %3141 = bitcast i64* %3135 to <2 x i64>*
  store <2 x i64> %3137, <2 x i64>* %3141, align 8, !alias.scope !34, !noalias !31
  %3142 = getelementptr i64, i64* %3135, i64 2
  %3143 = bitcast i64* %3142 to <2 x i64>*
  store <2 x i64> %3140, <2 x i64>* %3143, align 8, !alias.scope !34, !noalias !31
  %3144 = or i64 %3110, 12
  %3145 = getelementptr i64, i64* %3080, i64 %3144
  %3146 = getelementptr i64, i64* %3072, i64 %3144
  %3147 = bitcast i64* %3145 to <2 x i64>*
  %3148 = load <2 x i64>, <2 x i64>* %3147, align 8, !alias.scope !31
  %3149 = getelementptr i64, i64* %3145, i64 2
  %3150 = bitcast i64* %3149 to <2 x i64>*
  %3151 = load <2 x i64>, <2 x i64>* %3150, align 8, !alias.scope !31
  %3152 = bitcast i64* %3146 to <2 x i64>*
  store <2 x i64> %3148, <2 x i64>* %3152, align 8, !alias.scope !34, !noalias !31
  %3153 = getelementptr i64, i64* %3146, i64 2
  %3154 = bitcast i64* %3153 to <2 x i64>*
  store <2 x i64> %3151, <2 x i64>* %3154, align 8, !alias.scope !34, !noalias !31
  %3155 = add i64 %3110, 16
  %3156 = add i64 %3111, -4
  %3157 = icmp eq i64 %3156, 0
  br i1 %3157, label %3158, label %3109, !llvm.loop !36

3158:                                             ; preds = %3109, %3098
  %3159 = phi i64 [ 0, %3098 ], [ %3155, %3109 ]
  %3160 = icmp eq i64 %3105, 0
  br i1 %3160, label %3177, label %3161

3161:                                             ; preds = %3158, %3161
  %3162 = phi i64 [ %3174, %3161 ], [ %3159, %3158 ]
  %3163 = phi i64 [ %3175, %3161 ], [ %3105, %3158 ]
  %3164 = getelementptr i64, i64* %3080, i64 %3162
  %3165 = getelementptr i64, i64* %3072, i64 %3162
  %3166 = bitcast i64* %3164 to <2 x i64>*
  %3167 = load <2 x i64>, <2 x i64>* %3166, align 8, !alias.scope !31
  %3168 = getelementptr i64, i64* %3164, i64 2
  %3169 = bitcast i64* %3168 to <2 x i64>*
  %3170 = load <2 x i64>, <2 x i64>* %3169, align 8, !alias.scope !31
  %3171 = bitcast i64* %3165 to <2 x i64>*
  store <2 x i64> %3167, <2 x i64>* %3171, align 8, !alias.scope !34, !noalias !31
  %3172 = getelementptr i64, i64* %3165, i64 2
  %3173 = bitcast i64* %3172 to <2 x i64>*
  store <2 x i64> %3170, <2 x i64>* %3173, align 8, !alias.scope !34, !noalias !31
  %3174 = add i64 %3162, 4
  %3175 = add i64 %3163, -1
  %3176 = icmp eq i64 %3175, 0
  br i1 %3176, label %3177, label %3161, !llvm.loop !37

3177:                                             ; preds = %3161, %3158
  %3178 = icmp eq i64 %3084, %3099
  br i1 %3178, label %3231, label %3179

3179:                                             ; preds = %3177, %3086, %3076
  %3180 = phi i64* [ %3080, %3086 ], [ %3080, %3076 ], [ %3100, %3177 ]
  %3181 = phi i64* [ %3072, %3086 ], [ %3072, %3076 ], [ %3101, %3177 ]
  %3182 = ptrtoint i64* %3180 to i64
  %3183 = getelementptr i64, i64* %3072, i64 -1
  %3184 = ptrtoint i64* %3183 to i64
  %3185 = sub i64 %3184, %3182
  %3186 = lshr i64 %3185, 3
  %3187 = add nuw nsw i64 %3186, 1
  %3188 = and i64 %3187, 7
  %3189 = icmp eq i64 %3188, 0
  br i1 %3189, label %3199, label %3190

3190:                                             ; preds = %3179, %3190
  %3191 = phi i64* [ %3194, %3190 ], [ %3180, %3179 ]
  %3192 = phi i64* [ %3196, %3190 ], [ %3181, %3179 ]
  %3193 = phi i64 [ %3197, %3190 ], [ %3188, %3179 ]
  %3194 = getelementptr inbounds i64, i64* %3191, i64 1
  %3195 = load i64, i64* %3191, align 8
  %3196 = getelementptr inbounds i64, i64* %3192, i64 1
  store i64 %3195, i64* %3192, align 8
  %3197 = add i64 %3193, -1
  %3198 = icmp eq i64 %3197, 0
  br i1 %3198, label %3199, label %3190, !llvm.loop !38

3199:                                             ; preds = %3190, %3179
  %3200 = phi i64* [ %3180, %3179 ], [ %3194, %3190 ]
  %3201 = phi i64* [ %3181, %3179 ], [ %3196, %3190 ]
  %3202 = icmp ult i64 %3185, 56
  br i1 %3202, label %3231, label %3203

3203:                                             ; preds = %3199, %3203
  %3204 = phi i64* [ %3227, %3203 ], [ %3200, %3199 ]
  %3205 = phi i64* [ %3229, %3203 ], [ %3201, %3199 ]
  %3206 = getelementptr inbounds i64, i64* %3204, i64 1
  %3207 = load i64, i64* %3204, align 8
  %3208 = getelementptr inbounds i64, i64* %3205, i64 1
  store i64 %3207, i64* %3205, align 8
  %3209 = getelementptr inbounds i64, i64* %3204, i64 2
  %3210 = load i64, i64* %3206, align 8
  %3211 = getelementptr inbounds i64, i64* %3205, i64 2
  store i64 %3210, i64* %3208, align 8
  %3212 = getelementptr inbounds i64, i64* %3204, i64 3
  %3213 = load i64, i64* %3209, align 8
  %3214 = getelementptr inbounds i64, i64* %3205, i64 3
  store i64 %3213, i64* %3211, align 8
  %3215 = getelementptr inbounds i64, i64* %3204, i64 4
  %3216 = load i64, i64* %3212, align 8
  %3217 = getelementptr inbounds i64, i64* %3205, i64 4
  store i64 %3216, i64* %3214, align 8
  %3218 = getelementptr inbounds i64, i64* %3204, i64 5
  %3219 = load i64, i64* %3215, align 8
  %3220 = getelementptr inbounds i64, i64* %3205, i64 5
  store i64 %3219, i64* %3217, align 8
  %3221 = getelementptr inbounds i64, i64* %3204, i64 6
  %3222 = load i64, i64* %3218, align 8
  %3223 = getelementptr inbounds i64, i64* %3205, i64 6
  store i64 %3222, i64* %3220, align 8
  %3224 = getelementptr inbounds i64, i64* %3204, i64 7
  %3225 = load i64, i64* %3221, align 8
  %3226 = getelementptr inbounds i64, i64* %3205, i64 7
  store i64 %3225, i64* %3223, align 8
  %3227 = getelementptr inbounds i64, i64* %3204, i64 8
  %3228 = load i64, i64* %3224, align 8
  %3229 = getelementptr inbounds i64, i64* %3205, i64 8
  store i64 %3228, i64* %3226, align 8
  %3230 = icmp eq i64* %3227, %3072
  br i1 %3230, label %3231, label %3203, !llvm.loop !39

3231:                                             ; preds = %3199, %3203, %3177
  %3232 = load i32, i32* %104, align 8
  %3233 = add nsw i32 %3232, -1
  store i32 %3233, i32* %104, align 8
  %3234 = icmp slt i32 %3232, 2
  br i1 %3234, label %3235, label %3252

3235:                                             ; preds = %3231
  store i32 10000, i32* %104, align 8
  %3236 = load i32, i32* %105, align 4
  %3237 = add nsw i32 %3236, 1
  store i32 %3237, i32* %105, align 4
  %3238 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %3239 = icmp eq i8 (i8*, i32)* %3238, null
  br i1 %3239, label %3245, label %3240

3240:                                             ; preds = %3235
  %3241 = load i8*, i8** %107, align 8
  %3242 = call signext i8 %3238(i8* %3241, i32 %3237) #12
  %3243 = icmp eq i8 %3242, 0
  br i1 %3243, label %3244, label %3245

3244:                                             ; preds = %3240
  store i32 66323, i32* %3, align 4
  br label %3252

3245:                                             ; preds = %3240, %3235
  %3246 = load i32, i32* %108, align 8
  %3247 = icmp sgt i32 %3246, 0
  br i1 %3247, label %3248, label %3252

3248:                                             ; preds = %3245
  %3249 = load i32, i32* %105, align 4
  %3250 = icmp slt i32 %3249, %3246
  br i1 %3250, label %3252, label %3251

3251:                                             ; preds = %3248
  store i32 66322, i32* %3, align 4
  br label %3252

3252:                                             ; preds = %3251, %3248, %3245, %3244, %3231
  %3253 = getelementptr inbounds i64, i64* %3080, i64 1
  store i64 %3044, i64* %3253, align 8
  %3254 = bitcast i64* %3072 to %"struct.icu_69::REStackFrame"*
  br label %3255

3255:                                             ; preds = %3252, %3075, %3039, %3023
  %3256 = phi %"struct.icu_69::REStackFrame"* [ %144, %3023 ], [ %144, %3039 ], [ %144, %3075 ], [ %3254, %3252 ]
  switch i32 %3037, label %6488 [
    i32 -1, label %3257
    i32 0, label %3263
  ]

3257:                                             ; preds = %3255
  %3258 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %3256, i64 0, i32 0
  %3259 = load i64, i64* %3258, align 8
  %3260 = add nuw nsw i32 %151, 1
  %3261 = zext i32 %3260 to i64
  %3262 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %3256, i64 0, i32 2, i64 %3261
  store i64 %3259, i64* %3262, align 8
  br label %6488

3263:                                             ; preds = %3255
  %3264 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %3265 = load i32, i32* %38, align 8
  %3266 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3264, i64 0, i32 1
  %3267 = load i32, i32* %3266, align 8
  %3268 = sub nsw i32 %3267, %3265
  %3269 = icmp sgt i32 %3268, 0
  %3270 = select i1 %3269, i32 %3268, i32 0
  store i32 %3270, i32* %3266, align 8
  %3271 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3264, i64 0, i32 4
  %3272 = load i64*, i64** %3271, align 8
  %3273 = zext i32 %3270 to i64
  %3274 = getelementptr inbounds i64, i64* %3272, i64 %3273
  %3275 = sext i32 %3265 to i64
  %3276 = sub nsw i64 0, %3275
  %3277 = getelementptr inbounds i64, i64* %3274, i64 %3276
  %3278 = bitcast i64* %3277 to %"struct.icu_69::REStackFrame"*
  br label %6488

3279:                                             ; preds = %143
  %3280 = zext i32 %151 to i64
  %3281 = getelementptr inbounds i64, i64* %16, i64 %3280
  %3282 = load i64, i64* %3281, align 8
  %3283 = trunc i64 %3282 to i32
  %3284 = and i32 %3283, 16777215
  %3285 = zext i32 %3284 to i64
  %3286 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %3285
  %3287 = add nuw nsw i32 %151, 2
  %3288 = zext i32 %3287 to i64
  %3289 = getelementptr inbounds i64, i64* %16, i64 %3288
  %3290 = load i64, i64* %3289, align 8
  %3291 = add nuw nsw i32 %151, 3
  %3292 = zext i32 %3291 to i64
  %3293 = getelementptr inbounds i64, i64* %16, i64 %3292
  %3294 = load i64, i64* %3293, align 8
  %3295 = trunc i64 %3294 to i32
  %3296 = load i64, i64* %3286, align 8
  %3297 = add nsw i64 %3296, 1
  store i64 %3297, i64* %3286, align 8
  %3298 = and i64 %3294, 4294967295
  %3299 = icmp uge i64 %3297, %3298
  %3300 = icmp ne i32 %3295, -1
  %3301 = and i1 %3300, %3299
  br i1 %3301, label %6488, label %3302

3302:                                             ; preds = %3279
  %3303 = shl i64 %3290, 32
  %3304 = ashr exact i64 %3303, 32
  %3305 = icmp slt i64 %3297, %3304
  br i1 %3305, label %3528, label %3306

3306:                                             ; preds = %3302
  %3307 = icmp eq i32 %3295, -1
  br i1 %3307, label %3308, label %3317

3308:                                             ; preds = %3306
  %3309 = add nuw nsw i32 %3284, 1
  %3310 = zext i32 %3309 to i64
  %3311 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %3310
  %3312 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %3313 = load i64, i64* %3312, align 8
  %3314 = load i64, i64* %3311, align 8
  %3315 = icmp eq i64 %3313, %3314
  br i1 %3315, label %6488, label %3316

3316:                                             ; preds = %3308
  store i64 %3313, i64* %3311, align 8
  br label %3317

3317:                                             ; preds = %3316, %3306
  %3318 = load i32, i32* %3, align 4
  %3319 = icmp slt i32 %3318, 1
  br i1 %3319, label %3320, label %3549

3320:                                             ; preds = %3317
  %3321 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %3322 = load i32, i32* %38, align 8
  %3323 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3321, i64 0, i32 1
  %3324 = load i32, i32* %3323, align 8
  %3325 = add nsw i32 %3324, %3322
  %3326 = icmp sgt i32 %3325, -1
  br i1 %3326, label %3327, label %3331

3327:                                             ; preds = %3320
  %3328 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3321, i64 0, i32 2
  %3329 = load i32, i32* %3328, align 4
  %3330 = icmp slt i32 %3329, %3325
  br i1 %3330, label %3331, label %3337

3331:                                             ; preds = %3327, %3320
  %3332 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %3321, i32 %3325, i32* dereferenceable(4) %3) #12
  %3333 = icmp eq i8 %3332, 0
  br i1 %3333, label %3344, label %3334

3334:                                             ; preds = %3331
  %3335 = load i32, i32* %3323, align 8
  %3336 = add nsw i32 %3335, %3322
  br label %3337

3337:                                             ; preds = %3334, %3327
  %3338 = phi i32 [ %3336, %3334 ], [ %3325, %3327 ]
  %3339 = phi i32 [ %3335, %3334 ], [ %3324, %3327 ]
  %3340 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3321, i64 0, i32 4
  %3341 = load i64*, i64** %3340, align 8
  %3342 = sext i32 %3339 to i64
  %3343 = getelementptr inbounds i64, i64* %3341, i64 %3342
  store i32 %3338, i32* %3323, align 8
  br label %3344

3344:                                             ; preds = %3337, %3331
  %3345 = phi i64* [ %3343, %3337 ], [ null, %3331 ]
  %3346 = load i32, i32* %3, align 4
  %3347 = icmp slt i32 %3346, 1
  br i1 %3347, label %3349, label %3348

3348:                                             ; preds = %3344
  store i32 66321, i32* %3, align 4
  br label %3549

3349:                                             ; preds = %3344
  %3350 = load i32, i32* %38, align 8
  %3351 = sext i32 %3350 to i64
  %3352 = sub nsw i64 0, %3351
  %3353 = getelementptr inbounds i64, i64* %3345, i64 %3352
  %3354 = shl nsw i64 %3351, 3
  %3355 = add nsw i64 %3354, -8
  %3356 = lshr exact i64 %3355, 3
  %3357 = add nuw nsw i64 %3356, 1
  %3358 = icmp ult i64 %3357, 4
  br i1 %3358, label %3452, label %3359

3359:                                             ; preds = %3349
  %3360 = getelementptr i64, i64* %3345, i64 1
  %3361 = shl nsw i64 %3351, 3
  %3362 = add nsw i64 %3361, -8
  %3363 = lshr exact i64 %3362, 3
  %3364 = getelementptr i64, i64* %3360, i64 %3363
  %3365 = getelementptr i64, i64* %3345, i64 1
  %3366 = sub nsw i64 %3363, %3351
  %3367 = getelementptr i64, i64* %3365, i64 %3366
  %3368 = icmp ult i64* %3345, %3367
  %3369 = icmp ult i64* %3353, %3364
  %3370 = and i1 %3368, %3369
  br i1 %3370, label %3452, label %3371

3371:                                             ; preds = %3359
  %3372 = and i64 %3357, 4611686018427387900
  %3373 = getelementptr i64, i64* %3353, i64 %3372
  %3374 = getelementptr i64, i64* %3345, i64 %3372
  %3375 = add nsw i64 %3372, -4
  %3376 = lshr exact i64 %3375, 2
  %3377 = add nuw nsw i64 %3376, 1
  %3378 = and i64 %3377, 3
  %3379 = icmp ult i64 %3375, 12
  br i1 %3379, label %3431, label %3380

3380:                                             ; preds = %3371
  %3381 = sub nsw i64 %3377, %3378
  br label %3382

3382:                                             ; preds = %3382, %3380
  %3383 = phi i64 [ 0, %3380 ], [ %3428, %3382 ]
  %3384 = phi i64 [ %3381, %3380 ], [ %3429, %3382 ]
  %3385 = getelementptr i64, i64* %3353, i64 %3383
  %3386 = getelementptr i64, i64* %3345, i64 %3383
  %3387 = bitcast i64* %3385 to <2 x i64>*
  %3388 = load <2 x i64>, <2 x i64>* %3387, align 8, !alias.scope !40
  %3389 = getelementptr i64, i64* %3385, i64 2
  %3390 = bitcast i64* %3389 to <2 x i64>*
  %3391 = load <2 x i64>, <2 x i64>* %3390, align 8, !alias.scope !40
  %3392 = bitcast i64* %3386 to <2 x i64>*
  store <2 x i64> %3388, <2 x i64>* %3392, align 8, !alias.scope !43, !noalias !40
  %3393 = getelementptr i64, i64* %3386, i64 2
  %3394 = bitcast i64* %3393 to <2 x i64>*
  store <2 x i64> %3391, <2 x i64>* %3394, align 8, !alias.scope !43, !noalias !40
  %3395 = or i64 %3383, 4
  %3396 = getelementptr i64, i64* %3353, i64 %3395
  %3397 = getelementptr i64, i64* %3345, i64 %3395
  %3398 = bitcast i64* %3396 to <2 x i64>*
  %3399 = load <2 x i64>, <2 x i64>* %3398, align 8, !alias.scope !40
  %3400 = getelementptr i64, i64* %3396, i64 2
  %3401 = bitcast i64* %3400 to <2 x i64>*
  %3402 = load <2 x i64>, <2 x i64>* %3401, align 8, !alias.scope !40
  %3403 = bitcast i64* %3397 to <2 x i64>*
  store <2 x i64> %3399, <2 x i64>* %3403, align 8, !alias.scope !43, !noalias !40
  %3404 = getelementptr i64, i64* %3397, i64 2
  %3405 = bitcast i64* %3404 to <2 x i64>*
  store <2 x i64> %3402, <2 x i64>* %3405, align 8, !alias.scope !43, !noalias !40
  %3406 = or i64 %3383, 8
  %3407 = getelementptr i64, i64* %3353, i64 %3406
  %3408 = getelementptr i64, i64* %3345, i64 %3406
  %3409 = bitcast i64* %3407 to <2 x i64>*
  %3410 = load <2 x i64>, <2 x i64>* %3409, align 8, !alias.scope !40
  %3411 = getelementptr i64, i64* %3407, i64 2
  %3412 = bitcast i64* %3411 to <2 x i64>*
  %3413 = load <2 x i64>, <2 x i64>* %3412, align 8, !alias.scope !40
  %3414 = bitcast i64* %3408 to <2 x i64>*
  store <2 x i64> %3410, <2 x i64>* %3414, align 8, !alias.scope !43, !noalias !40
  %3415 = getelementptr i64, i64* %3408, i64 2
  %3416 = bitcast i64* %3415 to <2 x i64>*
  store <2 x i64> %3413, <2 x i64>* %3416, align 8, !alias.scope !43, !noalias !40
  %3417 = or i64 %3383, 12
  %3418 = getelementptr i64, i64* %3353, i64 %3417
  %3419 = getelementptr i64, i64* %3345, i64 %3417
  %3420 = bitcast i64* %3418 to <2 x i64>*
  %3421 = load <2 x i64>, <2 x i64>* %3420, align 8, !alias.scope !40
  %3422 = getelementptr i64, i64* %3418, i64 2
  %3423 = bitcast i64* %3422 to <2 x i64>*
  %3424 = load <2 x i64>, <2 x i64>* %3423, align 8, !alias.scope !40
  %3425 = bitcast i64* %3419 to <2 x i64>*
  store <2 x i64> %3421, <2 x i64>* %3425, align 8, !alias.scope !43, !noalias !40
  %3426 = getelementptr i64, i64* %3419, i64 2
  %3427 = bitcast i64* %3426 to <2 x i64>*
  store <2 x i64> %3424, <2 x i64>* %3427, align 8, !alias.scope !43, !noalias !40
  %3428 = add i64 %3383, 16
  %3429 = add i64 %3384, -4
  %3430 = icmp eq i64 %3429, 0
  br i1 %3430, label %3431, label %3382, !llvm.loop !45

3431:                                             ; preds = %3382, %3371
  %3432 = phi i64 [ 0, %3371 ], [ %3428, %3382 ]
  %3433 = icmp eq i64 %3378, 0
  br i1 %3433, label %3450, label %3434

3434:                                             ; preds = %3431, %3434
  %3435 = phi i64 [ %3447, %3434 ], [ %3432, %3431 ]
  %3436 = phi i64 [ %3448, %3434 ], [ %3378, %3431 ]
  %3437 = getelementptr i64, i64* %3353, i64 %3435
  %3438 = getelementptr i64, i64* %3345, i64 %3435
  %3439 = bitcast i64* %3437 to <2 x i64>*
  %3440 = load <2 x i64>, <2 x i64>* %3439, align 8, !alias.scope !40
  %3441 = getelementptr i64, i64* %3437, i64 2
  %3442 = bitcast i64* %3441 to <2 x i64>*
  %3443 = load <2 x i64>, <2 x i64>* %3442, align 8, !alias.scope !40
  %3444 = bitcast i64* %3438 to <2 x i64>*
  store <2 x i64> %3440, <2 x i64>* %3444, align 8, !alias.scope !43, !noalias !40
  %3445 = getelementptr i64, i64* %3438, i64 2
  %3446 = bitcast i64* %3445 to <2 x i64>*
  store <2 x i64> %3443, <2 x i64>* %3446, align 8, !alias.scope !43, !noalias !40
  %3447 = add i64 %3435, 4
  %3448 = add i64 %3436, -1
  %3449 = icmp eq i64 %3448, 0
  br i1 %3449, label %3450, label %3434, !llvm.loop !46

3450:                                             ; preds = %3434, %3431
  %3451 = icmp eq i64 %3357, %3372
  br i1 %3451, label %3504, label %3452

3452:                                             ; preds = %3450, %3359, %3349
  %3453 = phi i64* [ %3353, %3359 ], [ %3353, %3349 ], [ %3373, %3450 ]
  %3454 = phi i64* [ %3345, %3359 ], [ %3345, %3349 ], [ %3374, %3450 ]
  %3455 = ptrtoint i64* %3453 to i64
  %3456 = getelementptr i64, i64* %3345, i64 -1
  %3457 = ptrtoint i64* %3456 to i64
  %3458 = sub i64 %3457, %3455
  %3459 = lshr i64 %3458, 3
  %3460 = add nuw nsw i64 %3459, 1
  %3461 = and i64 %3460, 7
  %3462 = icmp eq i64 %3461, 0
  br i1 %3462, label %3472, label %3463

3463:                                             ; preds = %3452, %3463
  %3464 = phi i64* [ %3467, %3463 ], [ %3453, %3452 ]
  %3465 = phi i64* [ %3469, %3463 ], [ %3454, %3452 ]
  %3466 = phi i64 [ %3470, %3463 ], [ %3461, %3452 ]
  %3467 = getelementptr inbounds i64, i64* %3464, i64 1
  %3468 = load i64, i64* %3464, align 8
  %3469 = getelementptr inbounds i64, i64* %3465, i64 1
  store i64 %3468, i64* %3465, align 8
  %3470 = add i64 %3466, -1
  %3471 = icmp eq i64 %3470, 0
  br i1 %3471, label %3472, label %3463, !llvm.loop !47

3472:                                             ; preds = %3463, %3452
  %3473 = phi i64* [ %3453, %3452 ], [ %3467, %3463 ]
  %3474 = phi i64* [ %3454, %3452 ], [ %3469, %3463 ]
  %3475 = icmp ult i64 %3458, 56
  br i1 %3475, label %3504, label %3476

3476:                                             ; preds = %3472, %3476
  %3477 = phi i64* [ %3500, %3476 ], [ %3473, %3472 ]
  %3478 = phi i64* [ %3502, %3476 ], [ %3474, %3472 ]
  %3479 = getelementptr inbounds i64, i64* %3477, i64 1
  %3480 = load i64, i64* %3477, align 8
  %3481 = getelementptr inbounds i64, i64* %3478, i64 1
  store i64 %3480, i64* %3478, align 8
  %3482 = getelementptr inbounds i64, i64* %3477, i64 2
  %3483 = load i64, i64* %3479, align 8
  %3484 = getelementptr inbounds i64, i64* %3478, i64 2
  store i64 %3483, i64* %3481, align 8
  %3485 = getelementptr inbounds i64, i64* %3477, i64 3
  %3486 = load i64, i64* %3482, align 8
  %3487 = getelementptr inbounds i64, i64* %3478, i64 3
  store i64 %3486, i64* %3484, align 8
  %3488 = getelementptr inbounds i64, i64* %3477, i64 4
  %3489 = load i64, i64* %3485, align 8
  %3490 = getelementptr inbounds i64, i64* %3478, i64 4
  store i64 %3489, i64* %3487, align 8
  %3491 = getelementptr inbounds i64, i64* %3477, i64 5
  %3492 = load i64, i64* %3488, align 8
  %3493 = getelementptr inbounds i64, i64* %3478, i64 5
  store i64 %3492, i64* %3490, align 8
  %3494 = getelementptr inbounds i64, i64* %3477, i64 6
  %3495 = load i64, i64* %3491, align 8
  %3496 = getelementptr inbounds i64, i64* %3478, i64 6
  store i64 %3495, i64* %3493, align 8
  %3497 = getelementptr inbounds i64, i64* %3477, i64 7
  %3498 = load i64, i64* %3494, align 8
  %3499 = getelementptr inbounds i64, i64* %3478, i64 7
  store i64 %3498, i64* %3496, align 8
  %3500 = getelementptr inbounds i64, i64* %3477, i64 8
  %3501 = load i64, i64* %3497, align 8
  %3502 = getelementptr inbounds i64, i64* %3478, i64 8
  store i64 %3501, i64* %3499, align 8
  %3503 = icmp eq i64* %3500, %3345
  br i1 %3503, label %3504, label %3476, !llvm.loop !48

3504:                                             ; preds = %3472, %3476, %3450
  %3505 = load i32, i32* %104, align 8
  %3506 = add nsw i32 %3505, -1
  store i32 %3506, i32* %104, align 8
  %3507 = icmp slt i32 %3505, 2
  br i1 %3507, label %3508, label %3525

3508:                                             ; preds = %3504
  store i32 10000, i32* %104, align 8
  %3509 = load i32, i32* %105, align 4
  %3510 = add nsw i32 %3509, 1
  store i32 %3510, i32* %105, align 4
  %3511 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %3512 = icmp eq i8 (i8*, i32)* %3511, null
  br i1 %3512, label %3518, label %3513

3513:                                             ; preds = %3508
  %3514 = load i8*, i8** %107, align 8
  %3515 = call signext i8 %3511(i8* %3514, i32 %3510) #12
  %3516 = icmp eq i8 %3515, 0
  br i1 %3516, label %3517, label %3518

3517:                                             ; preds = %3513
  store i32 66323, i32* %3, align 4
  br label %3525

3518:                                             ; preds = %3513, %3508
  %3519 = load i32, i32* %108, align 8
  %3520 = icmp sgt i32 %3519, 0
  br i1 %3520, label %3521, label %3525

3521:                                             ; preds = %3518
  %3522 = load i32, i32* %105, align 4
  %3523 = icmp slt i32 %3522, %3519
  br i1 %3523, label %3525, label %3524

3524:                                             ; preds = %3521
  store i32 66322, i32* %3, align 4
  br label %3525

3525:                                             ; preds = %3524, %3521, %3518, %3517, %3504
  %3526 = getelementptr inbounds i64, i64* %3353, i64 1
  store i64 %152, i64* %3526, align 8
  %3527 = bitcast i64* %3345 to %"struct.icu_69::REStackFrame"*
  br label %3549

3528:                                             ; preds = %3302
  %3529 = load i32, i32* %104, align 8
  %3530 = add nsw i32 %3529, -1
  store i32 %3530, i32* %104, align 8
  %3531 = icmp slt i32 %3529, 2
  br i1 %3531, label %3532, label %3549

3532:                                             ; preds = %3528
  store i32 10000, i32* %104, align 8
  %3533 = load i32, i32* %105, align 4
  %3534 = add nsw i32 %3533, 1
  store i32 %3534, i32* %105, align 4
  %3535 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %3536 = icmp eq i8 (i8*, i32)* %3535, null
  br i1 %3536, label %3542, label %3537

3537:                                             ; preds = %3532
  %3538 = load i8*, i8** %107, align 8
  %3539 = call signext i8 %3535(i8* %3538, i32 %3534) #12
  %3540 = icmp eq i8 %3539, 0
  br i1 %3540, label %3541, label %3542

3541:                                             ; preds = %3537
  store i32 66323, i32* %3, align 4
  br label %3549

3542:                                             ; preds = %3537, %3532
  %3543 = load i32, i32* %108, align 8
  %3544 = icmp sgt i32 %3543, 0
  br i1 %3544, label %3545, label %3549

3545:                                             ; preds = %3542
  %3546 = load i32, i32* %105, align 4
  %3547 = icmp slt i32 %3546, %3543
  br i1 %3547, label %3549, label %3548

3548:                                             ; preds = %3545
  store i32 66322, i32* %3, align 4
  br label %3549

3549:                                             ; preds = %3548, %3545, %3542, %3541, %3525, %3348, %3317, %3528
  %3550 = phi %"struct.icu_69::REStackFrame"* [ %144, %3528 ], [ %144, %3317 ], [ %144, %3348 ], [ %3527, %3525 ], [ %144, %3541 ], [ %144, %3542 ], [ %144, %3545 ], [ %144, %3548 ]
  %3551 = add nuw nsw i32 %151, 4
  %3552 = zext i32 %3551 to i64
  %3553 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %3550, i64 0, i32 1
  store i64 %3552, i64* %3553, align 8
  br label %6488

3554:                                             ; preds = %143
  %3555 = zext i32 %151 to i64
  %3556 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %3555
  store i64 0, i64* %3556, align 8
  %3557 = add nsw i64 %146, 4
  store i64 %3557, i64* %145, align 8
  %3558 = shl i64 %152, 32
  %3559 = ashr exact i64 %3558, 32
  %3560 = getelementptr inbounds i64, i64* %16, i64 %3559
  %3561 = load i64, i64* %3560, align 8
  %3562 = and i64 %3561, 16777215
  %3563 = add i64 %3558, 4294967296
  %3564 = ashr exact i64 %3563, 32
  %3565 = getelementptr inbounds i64, i64* %16, i64 %3564
  %3566 = load i64, i64* %3565, align 8
  %3567 = trunc i64 %3566 to i32
  %3568 = add i64 %3558, 8589934592
  %3569 = ashr exact i64 %3568, 32
  %3570 = getelementptr inbounds i64, i64* %16, i64 %3569
  %3571 = load i64, i64* %3570, align 8
  %3572 = trunc i64 %3571 to i32
  %3573 = icmp eq i32 %3572, -1
  br i1 %3573, label %3574, label %3580

3574:                                             ; preds = %3554
  %3575 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %3576 = load i64, i64* %3575, align 8
  %3577 = add nuw nsw i32 %151, 1
  %3578 = zext i32 %3577 to i64
  %3579 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %3578
  store i64 %3576, i64* %3579, align 8
  br label %3580

3580:                                             ; preds = %3574, %3554
  %3581 = icmp eq i32 %3567, 0
  br i1 %3581, label %3582, label %6488

3582:                                             ; preds = %3580
  %3583 = icmp ne i32 %3572, 0
  %3584 = load i32, i32* %3, align 4
  %3585 = icmp slt i32 %3584, 1
  %3586 = and i1 %3583, %3585
  br i1 %3586, label %3587, label %3795

3587:                                             ; preds = %3582
  %3588 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %3589 = load i32, i32* %38, align 8
  %3590 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3588, i64 0, i32 1
  %3591 = load i32, i32* %3590, align 8
  %3592 = add nsw i32 %3591, %3589
  %3593 = icmp sgt i32 %3592, -1
  br i1 %3593, label %3594, label %3598

3594:                                             ; preds = %3587
  %3595 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3588, i64 0, i32 2
  %3596 = load i32, i32* %3595, align 4
  %3597 = icmp slt i32 %3596, %3592
  br i1 %3597, label %3598, label %3604

3598:                                             ; preds = %3594, %3587
  %3599 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %3588, i32 %3592, i32* dereferenceable(4) %3) #12
  %3600 = icmp eq i8 %3599, 0
  br i1 %3600, label %3611, label %3601

3601:                                             ; preds = %3598
  %3602 = load i32, i32* %3590, align 8
  %3603 = add nsw i32 %3602, %3589
  br label %3604

3604:                                             ; preds = %3601, %3594
  %3605 = phi i32 [ %3603, %3601 ], [ %3592, %3594 ]
  %3606 = phi i32 [ %3602, %3601 ], [ %3591, %3594 ]
  %3607 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3588, i64 0, i32 4
  %3608 = load i64*, i64** %3607, align 8
  %3609 = sext i32 %3606 to i64
  %3610 = getelementptr inbounds i64, i64* %3608, i64 %3609
  store i32 %3605, i32* %3590, align 8
  br label %3611

3611:                                             ; preds = %3604, %3598
  %3612 = phi i64* [ %3610, %3604 ], [ null, %3598 ]
  %3613 = load i32, i32* %3, align 4
  %3614 = icmp slt i32 %3613, 1
  br i1 %3614, label %3616, label %3615

3615:                                             ; preds = %3611
  store i32 66321, i32* %3, align 4
  br label %3795

3616:                                             ; preds = %3611
  %3617 = load i32, i32* %38, align 8
  %3618 = sext i32 %3617 to i64
  %3619 = sub nsw i64 0, %3618
  %3620 = getelementptr inbounds i64, i64* %3612, i64 %3619
  %3621 = shl nsw i64 %3618, 3
  %3622 = add nsw i64 %3621, -8
  %3623 = lshr exact i64 %3622, 3
  %3624 = add nuw nsw i64 %3623, 1
  %3625 = icmp ult i64 %3624, 4
  br i1 %3625, label %3719, label %3626

3626:                                             ; preds = %3616
  %3627 = getelementptr i64, i64* %3612, i64 1
  %3628 = shl nsw i64 %3618, 3
  %3629 = add nsw i64 %3628, -8
  %3630 = lshr exact i64 %3629, 3
  %3631 = getelementptr i64, i64* %3627, i64 %3630
  %3632 = getelementptr i64, i64* %3612, i64 1
  %3633 = sub nsw i64 %3630, %3618
  %3634 = getelementptr i64, i64* %3632, i64 %3633
  %3635 = icmp ult i64* %3612, %3634
  %3636 = icmp ult i64* %3620, %3631
  %3637 = and i1 %3635, %3636
  br i1 %3637, label %3719, label %3638

3638:                                             ; preds = %3626
  %3639 = and i64 %3624, 4611686018427387900
  %3640 = getelementptr i64, i64* %3620, i64 %3639
  %3641 = getelementptr i64, i64* %3612, i64 %3639
  %3642 = add nsw i64 %3639, -4
  %3643 = lshr exact i64 %3642, 2
  %3644 = add nuw nsw i64 %3643, 1
  %3645 = and i64 %3644, 3
  %3646 = icmp ult i64 %3642, 12
  br i1 %3646, label %3698, label %3647

3647:                                             ; preds = %3638
  %3648 = sub nsw i64 %3644, %3645
  br label %3649

3649:                                             ; preds = %3649, %3647
  %3650 = phi i64 [ 0, %3647 ], [ %3695, %3649 ]
  %3651 = phi i64 [ %3648, %3647 ], [ %3696, %3649 ]
  %3652 = getelementptr i64, i64* %3620, i64 %3650
  %3653 = getelementptr i64, i64* %3612, i64 %3650
  %3654 = bitcast i64* %3652 to <2 x i64>*
  %3655 = load <2 x i64>, <2 x i64>* %3654, align 8, !alias.scope !49
  %3656 = getelementptr i64, i64* %3652, i64 2
  %3657 = bitcast i64* %3656 to <2 x i64>*
  %3658 = load <2 x i64>, <2 x i64>* %3657, align 8, !alias.scope !49
  %3659 = bitcast i64* %3653 to <2 x i64>*
  store <2 x i64> %3655, <2 x i64>* %3659, align 8, !alias.scope !52, !noalias !49
  %3660 = getelementptr i64, i64* %3653, i64 2
  %3661 = bitcast i64* %3660 to <2 x i64>*
  store <2 x i64> %3658, <2 x i64>* %3661, align 8, !alias.scope !52, !noalias !49
  %3662 = or i64 %3650, 4
  %3663 = getelementptr i64, i64* %3620, i64 %3662
  %3664 = getelementptr i64, i64* %3612, i64 %3662
  %3665 = bitcast i64* %3663 to <2 x i64>*
  %3666 = load <2 x i64>, <2 x i64>* %3665, align 8, !alias.scope !49
  %3667 = getelementptr i64, i64* %3663, i64 2
  %3668 = bitcast i64* %3667 to <2 x i64>*
  %3669 = load <2 x i64>, <2 x i64>* %3668, align 8, !alias.scope !49
  %3670 = bitcast i64* %3664 to <2 x i64>*
  store <2 x i64> %3666, <2 x i64>* %3670, align 8, !alias.scope !52, !noalias !49
  %3671 = getelementptr i64, i64* %3664, i64 2
  %3672 = bitcast i64* %3671 to <2 x i64>*
  store <2 x i64> %3669, <2 x i64>* %3672, align 8, !alias.scope !52, !noalias !49
  %3673 = or i64 %3650, 8
  %3674 = getelementptr i64, i64* %3620, i64 %3673
  %3675 = getelementptr i64, i64* %3612, i64 %3673
  %3676 = bitcast i64* %3674 to <2 x i64>*
  %3677 = load <2 x i64>, <2 x i64>* %3676, align 8, !alias.scope !49
  %3678 = getelementptr i64, i64* %3674, i64 2
  %3679 = bitcast i64* %3678 to <2 x i64>*
  %3680 = load <2 x i64>, <2 x i64>* %3679, align 8, !alias.scope !49
  %3681 = bitcast i64* %3675 to <2 x i64>*
  store <2 x i64> %3677, <2 x i64>* %3681, align 8, !alias.scope !52, !noalias !49
  %3682 = getelementptr i64, i64* %3675, i64 2
  %3683 = bitcast i64* %3682 to <2 x i64>*
  store <2 x i64> %3680, <2 x i64>* %3683, align 8, !alias.scope !52, !noalias !49
  %3684 = or i64 %3650, 12
  %3685 = getelementptr i64, i64* %3620, i64 %3684
  %3686 = getelementptr i64, i64* %3612, i64 %3684
  %3687 = bitcast i64* %3685 to <2 x i64>*
  %3688 = load <2 x i64>, <2 x i64>* %3687, align 8, !alias.scope !49
  %3689 = getelementptr i64, i64* %3685, i64 2
  %3690 = bitcast i64* %3689 to <2 x i64>*
  %3691 = load <2 x i64>, <2 x i64>* %3690, align 8, !alias.scope !49
  %3692 = bitcast i64* %3686 to <2 x i64>*
  store <2 x i64> %3688, <2 x i64>* %3692, align 8, !alias.scope !52, !noalias !49
  %3693 = getelementptr i64, i64* %3686, i64 2
  %3694 = bitcast i64* %3693 to <2 x i64>*
  store <2 x i64> %3691, <2 x i64>* %3694, align 8, !alias.scope !52, !noalias !49
  %3695 = add i64 %3650, 16
  %3696 = add i64 %3651, -4
  %3697 = icmp eq i64 %3696, 0
  br i1 %3697, label %3698, label %3649, !llvm.loop !54

3698:                                             ; preds = %3649, %3638
  %3699 = phi i64 [ 0, %3638 ], [ %3695, %3649 ]
  %3700 = icmp eq i64 %3645, 0
  br i1 %3700, label %3717, label %3701

3701:                                             ; preds = %3698, %3701
  %3702 = phi i64 [ %3714, %3701 ], [ %3699, %3698 ]
  %3703 = phi i64 [ %3715, %3701 ], [ %3645, %3698 ]
  %3704 = getelementptr i64, i64* %3620, i64 %3702
  %3705 = getelementptr i64, i64* %3612, i64 %3702
  %3706 = bitcast i64* %3704 to <2 x i64>*
  %3707 = load <2 x i64>, <2 x i64>* %3706, align 8, !alias.scope !49
  %3708 = getelementptr i64, i64* %3704, i64 2
  %3709 = bitcast i64* %3708 to <2 x i64>*
  %3710 = load <2 x i64>, <2 x i64>* %3709, align 8, !alias.scope !49
  %3711 = bitcast i64* %3705 to <2 x i64>*
  store <2 x i64> %3707, <2 x i64>* %3711, align 8, !alias.scope !52, !noalias !49
  %3712 = getelementptr i64, i64* %3705, i64 2
  %3713 = bitcast i64* %3712 to <2 x i64>*
  store <2 x i64> %3710, <2 x i64>* %3713, align 8, !alias.scope !52, !noalias !49
  %3714 = add i64 %3702, 4
  %3715 = add i64 %3703, -1
  %3716 = icmp eq i64 %3715, 0
  br i1 %3716, label %3717, label %3701, !llvm.loop !55

3717:                                             ; preds = %3701, %3698
  %3718 = icmp eq i64 %3624, %3639
  br i1 %3718, label %3771, label %3719

3719:                                             ; preds = %3717, %3626, %3616
  %3720 = phi i64* [ %3620, %3626 ], [ %3620, %3616 ], [ %3640, %3717 ]
  %3721 = phi i64* [ %3612, %3626 ], [ %3612, %3616 ], [ %3641, %3717 ]
  %3722 = ptrtoint i64* %3720 to i64
  %3723 = getelementptr i64, i64* %3612, i64 -1
  %3724 = ptrtoint i64* %3723 to i64
  %3725 = sub i64 %3724, %3722
  %3726 = lshr i64 %3725, 3
  %3727 = add nuw nsw i64 %3726, 1
  %3728 = and i64 %3727, 7
  %3729 = icmp eq i64 %3728, 0
  br i1 %3729, label %3739, label %3730

3730:                                             ; preds = %3719, %3730
  %3731 = phi i64* [ %3734, %3730 ], [ %3720, %3719 ]
  %3732 = phi i64* [ %3736, %3730 ], [ %3721, %3719 ]
  %3733 = phi i64 [ %3737, %3730 ], [ %3728, %3719 ]
  %3734 = getelementptr inbounds i64, i64* %3731, i64 1
  %3735 = load i64, i64* %3731, align 8
  %3736 = getelementptr inbounds i64, i64* %3732, i64 1
  store i64 %3735, i64* %3732, align 8
  %3737 = add i64 %3733, -1
  %3738 = icmp eq i64 %3737, 0
  br i1 %3738, label %3739, label %3730, !llvm.loop !56

3739:                                             ; preds = %3730, %3719
  %3740 = phi i64* [ %3720, %3719 ], [ %3734, %3730 ]
  %3741 = phi i64* [ %3721, %3719 ], [ %3736, %3730 ]
  %3742 = icmp ult i64 %3725, 56
  br i1 %3742, label %3771, label %3743

3743:                                             ; preds = %3739, %3743
  %3744 = phi i64* [ %3767, %3743 ], [ %3740, %3739 ]
  %3745 = phi i64* [ %3769, %3743 ], [ %3741, %3739 ]
  %3746 = getelementptr inbounds i64, i64* %3744, i64 1
  %3747 = load i64, i64* %3744, align 8
  %3748 = getelementptr inbounds i64, i64* %3745, i64 1
  store i64 %3747, i64* %3745, align 8
  %3749 = getelementptr inbounds i64, i64* %3744, i64 2
  %3750 = load i64, i64* %3746, align 8
  %3751 = getelementptr inbounds i64, i64* %3745, i64 2
  store i64 %3750, i64* %3748, align 8
  %3752 = getelementptr inbounds i64, i64* %3744, i64 3
  %3753 = load i64, i64* %3749, align 8
  %3754 = getelementptr inbounds i64, i64* %3745, i64 3
  store i64 %3753, i64* %3751, align 8
  %3755 = getelementptr inbounds i64, i64* %3744, i64 4
  %3756 = load i64, i64* %3752, align 8
  %3757 = getelementptr inbounds i64, i64* %3745, i64 4
  store i64 %3756, i64* %3754, align 8
  %3758 = getelementptr inbounds i64, i64* %3744, i64 5
  %3759 = load i64, i64* %3755, align 8
  %3760 = getelementptr inbounds i64, i64* %3745, i64 5
  store i64 %3759, i64* %3757, align 8
  %3761 = getelementptr inbounds i64, i64* %3744, i64 6
  %3762 = load i64, i64* %3758, align 8
  %3763 = getelementptr inbounds i64, i64* %3745, i64 6
  store i64 %3762, i64* %3760, align 8
  %3764 = getelementptr inbounds i64, i64* %3744, i64 7
  %3765 = load i64, i64* %3761, align 8
  %3766 = getelementptr inbounds i64, i64* %3745, i64 7
  store i64 %3765, i64* %3763, align 8
  %3767 = getelementptr inbounds i64, i64* %3744, i64 8
  %3768 = load i64, i64* %3764, align 8
  %3769 = getelementptr inbounds i64, i64* %3745, i64 8
  store i64 %3768, i64* %3766, align 8
  %3770 = icmp eq i64* %3767, %3612
  br i1 %3770, label %3771, label %3743, !llvm.loop !57

3771:                                             ; preds = %3739, %3743, %3717
  %3772 = load i32, i32* %104, align 8
  %3773 = add nsw i32 %3772, -1
  store i32 %3773, i32* %104, align 8
  %3774 = icmp slt i32 %3772, 2
  br i1 %3774, label %3775, label %3792

3775:                                             ; preds = %3771
  store i32 10000, i32* %104, align 8
  %3776 = load i32, i32* %105, align 4
  %3777 = add nsw i32 %3776, 1
  store i32 %3777, i32* %105, align 4
  %3778 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %3779 = icmp eq i8 (i8*, i32)* %3778, null
  br i1 %3779, label %3785, label %3780

3780:                                             ; preds = %3775
  %3781 = load i8*, i8** %107, align 8
  %3782 = call signext i8 %3778(i8* %3781, i32 %3777) #12
  %3783 = icmp eq i8 %3782, 0
  br i1 %3783, label %3784, label %3785

3784:                                             ; preds = %3780
  store i32 66323, i32* %3, align 4
  br label %3792

3785:                                             ; preds = %3780, %3775
  %3786 = load i32, i32* %108, align 8
  %3787 = icmp sgt i32 %3786, 0
  br i1 %3787, label %3788, label %3792

3788:                                             ; preds = %3785
  %3789 = load i32, i32* %105, align 4
  %3790 = icmp slt i32 %3789, %3786
  br i1 %3790, label %3792, label %3791

3791:                                             ; preds = %3788
  store i32 66322, i32* %3, align 4
  br label %3792

3792:                                             ; preds = %3791, %3788, %3785, %3784, %3771
  %3793 = getelementptr inbounds i64, i64* %3620, i64 1
  store i64 %3557, i64* %3793, align 8
  %3794 = bitcast i64* %3612 to %"struct.icu_69::REStackFrame"*
  br label %3795

3795:                                             ; preds = %3582, %3792, %3615
  %3796 = phi %"struct.icu_69::REStackFrame"* [ %144, %3582 ], [ %144, %3615 ], [ %3794, %3792 ]
  %3797 = add nuw nsw i64 %3562, 1
  %3798 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %3796, i64 0, i32 1
  store i64 %3797, i64* %3798, align 8
  br label %6488

3799:                                             ; preds = %143
  %3800 = zext i32 %151 to i64
  %3801 = getelementptr inbounds i64, i64* %16, i64 %3800
  %3802 = load i64, i64* %3801, align 8
  %3803 = trunc i64 %3802 to i32
  %3804 = and i32 %3803, 16777215
  %3805 = zext i32 %3804 to i64
  %3806 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %3805
  %3807 = add nuw nsw i32 %151, 2
  %3808 = zext i32 %3807 to i64
  %3809 = getelementptr inbounds i64, i64* %16, i64 %3808
  %3810 = load i64, i64* %3809, align 8
  %3811 = add nuw nsw i32 %151, 3
  %3812 = zext i32 %3811 to i64
  %3813 = getelementptr inbounds i64, i64* %16, i64 %3812
  %3814 = load i64, i64* %3813, align 8
  %3815 = trunc i64 %3814 to i32
  %3816 = load i64, i64* %3806, align 8
  %3817 = add nsw i64 %3816, 1
  store i64 %3817, i64* %3806, align 8
  %3818 = and i64 %3814, 4294967295
  %3819 = icmp uge i64 %3817, %3818
  %3820 = icmp ne i32 %3815, -1
  %3821 = and i1 %3820, %3819
  br i1 %3821, label %6488, label %3822

3822:                                             ; preds = %3799
  %3823 = shl i64 %3810, 32
  %3824 = ashr exact i64 %3823, 32
  %3825 = icmp slt i64 %3817, %3824
  br i1 %3825, label %3826, label %3849

3826:                                             ; preds = %3822
  %3827 = add nuw nsw i32 %151, 4
  %3828 = zext i32 %3827 to i64
  store i64 %3828, i64* %145, align 8
  %3829 = load i32, i32* %104, align 8
  %3830 = add nsw i32 %3829, -1
  store i32 %3830, i32* %104, align 8
  %3831 = icmp slt i32 %3829, 2
  br i1 %3831, label %3832, label %6488

3832:                                             ; preds = %3826
  store i32 10000, i32* %104, align 8
  %3833 = load i32, i32* %105, align 4
  %3834 = add nsw i32 %3833, 1
  store i32 %3834, i32* %105, align 4
  %3835 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %3836 = icmp eq i8 (i8*, i32)* %3835, null
  br i1 %3836, label %3842, label %3837

3837:                                             ; preds = %3832
  %3838 = load i8*, i8** %107, align 8
  %3839 = call signext i8 %3835(i8* %3838, i32 %3834) #12
  %3840 = icmp eq i8 %3839, 0
  br i1 %3840, label %3841, label %3842

3841:                                             ; preds = %3837
  store i32 66323, i32* %3, align 4
  br label %6492

3842:                                             ; preds = %3837, %3832
  %3843 = load i32, i32* %108, align 8
  %3844 = icmp sgt i32 %3843, 0
  br i1 %3844, label %3845, label %6488

3845:                                             ; preds = %3842
  %3846 = load i32, i32* %105, align 4
  %3847 = icmp slt i32 %3846, %3843
  br i1 %3847, label %6488, label %3848

3848:                                             ; preds = %3845
  store i32 66322, i32* %3, align 4
  br label %6492

3849:                                             ; preds = %3822
  %3850 = icmp eq i32 %3815, -1
  br i1 %3850, label %3851, label %3860

3851:                                             ; preds = %3849
  %3852 = add nuw nsw i32 %3804, 1
  %3853 = zext i32 %3852 to i64
  %3854 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %3853
  %3855 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %3856 = load i64, i64* %3855, align 8
  %3857 = load i64, i64* %3854, align 8
  %3858 = icmp eq i64 %3856, %3857
  br i1 %3858, label %6488, label %3859

3859:                                             ; preds = %3851
  store i64 %3856, i64* %3854, align 8
  br label %3860

3860:                                             ; preds = %3859, %3849
  %3861 = add nuw nsw i32 %151, 4
  %3862 = zext i32 %3861 to i64
  %3863 = load i32, i32* %3, align 4
  %3864 = icmp slt i32 %3863, 1
  br i1 %3864, label %3865, label %6492

3865:                                             ; preds = %3860
  %3866 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %3867 = load i32, i32* %38, align 8
  %3868 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3866, i64 0, i32 1
  %3869 = load i32, i32* %3868, align 8
  %3870 = add nsw i32 %3869, %3867
  %3871 = icmp sgt i32 %3870, -1
  br i1 %3871, label %3872, label %3876

3872:                                             ; preds = %3865
  %3873 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3866, i64 0, i32 2
  %3874 = load i32, i32* %3873, align 4
  %3875 = icmp slt i32 %3874, %3870
  br i1 %3875, label %3876, label %3882

3876:                                             ; preds = %3872, %3865
  %3877 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %3866, i32 %3870, i32* dereferenceable(4) %3) #12
  %3878 = icmp eq i8 %3877, 0
  br i1 %3878, label %3889, label %3879

3879:                                             ; preds = %3876
  %3880 = load i32, i32* %3868, align 8
  %3881 = add nsw i32 %3880, %3867
  br label %3882

3882:                                             ; preds = %3879, %3872
  %3883 = phi i32 [ %3881, %3879 ], [ %3870, %3872 ]
  %3884 = phi i32 [ %3880, %3879 ], [ %3869, %3872 ]
  %3885 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3866, i64 0, i32 4
  %3886 = load i64*, i64** %3885, align 8
  %3887 = sext i32 %3884 to i64
  %3888 = getelementptr inbounds i64, i64* %3886, i64 %3887
  store i32 %3883, i32* %3868, align 8
  br label %3889

3889:                                             ; preds = %3882, %3876
  %3890 = phi i64* [ %3888, %3882 ], [ null, %3876 ]
  %3891 = load i32, i32* %3, align 4
  %3892 = icmp slt i32 %3891, 1
  br i1 %3892, label %3894, label %3893

3893:                                             ; preds = %3889
  store i32 66321, i32* %3, align 4
  br label %6492

3894:                                             ; preds = %3889
  %3895 = load i32, i32* %38, align 8
  %3896 = sext i32 %3895 to i64
  %3897 = sub nsw i64 0, %3896
  %3898 = getelementptr inbounds i64, i64* %3890, i64 %3897
  %3899 = shl nsw i64 %3896, 3
  %3900 = add nsw i64 %3899, -8
  %3901 = lshr exact i64 %3900, 3
  %3902 = add nuw nsw i64 %3901, 1
  %3903 = icmp ult i64 %3902, 4
  br i1 %3903, label %3997, label %3904

3904:                                             ; preds = %3894
  %3905 = getelementptr i64, i64* %3890, i64 1
  %3906 = shl nsw i64 %3896, 3
  %3907 = add nsw i64 %3906, -8
  %3908 = lshr exact i64 %3907, 3
  %3909 = getelementptr i64, i64* %3905, i64 %3908
  %3910 = getelementptr i64, i64* %3890, i64 1
  %3911 = sub nsw i64 %3908, %3896
  %3912 = getelementptr i64, i64* %3910, i64 %3911
  %3913 = icmp ult i64* %3890, %3912
  %3914 = icmp ult i64* %3898, %3909
  %3915 = and i1 %3913, %3914
  br i1 %3915, label %3997, label %3916

3916:                                             ; preds = %3904
  %3917 = and i64 %3902, 4611686018427387900
  %3918 = getelementptr i64, i64* %3898, i64 %3917
  %3919 = getelementptr i64, i64* %3890, i64 %3917
  %3920 = add nsw i64 %3917, -4
  %3921 = lshr exact i64 %3920, 2
  %3922 = add nuw nsw i64 %3921, 1
  %3923 = and i64 %3922, 3
  %3924 = icmp ult i64 %3920, 12
  br i1 %3924, label %3976, label %3925

3925:                                             ; preds = %3916
  %3926 = sub nsw i64 %3922, %3923
  br label %3927

3927:                                             ; preds = %3927, %3925
  %3928 = phi i64 [ 0, %3925 ], [ %3973, %3927 ]
  %3929 = phi i64 [ %3926, %3925 ], [ %3974, %3927 ]
  %3930 = getelementptr i64, i64* %3898, i64 %3928
  %3931 = getelementptr i64, i64* %3890, i64 %3928
  %3932 = bitcast i64* %3930 to <2 x i64>*
  %3933 = load <2 x i64>, <2 x i64>* %3932, align 8, !alias.scope !58
  %3934 = getelementptr i64, i64* %3930, i64 2
  %3935 = bitcast i64* %3934 to <2 x i64>*
  %3936 = load <2 x i64>, <2 x i64>* %3935, align 8, !alias.scope !58
  %3937 = bitcast i64* %3931 to <2 x i64>*
  store <2 x i64> %3933, <2 x i64>* %3937, align 8, !alias.scope !61, !noalias !58
  %3938 = getelementptr i64, i64* %3931, i64 2
  %3939 = bitcast i64* %3938 to <2 x i64>*
  store <2 x i64> %3936, <2 x i64>* %3939, align 8, !alias.scope !61, !noalias !58
  %3940 = or i64 %3928, 4
  %3941 = getelementptr i64, i64* %3898, i64 %3940
  %3942 = getelementptr i64, i64* %3890, i64 %3940
  %3943 = bitcast i64* %3941 to <2 x i64>*
  %3944 = load <2 x i64>, <2 x i64>* %3943, align 8, !alias.scope !58
  %3945 = getelementptr i64, i64* %3941, i64 2
  %3946 = bitcast i64* %3945 to <2 x i64>*
  %3947 = load <2 x i64>, <2 x i64>* %3946, align 8, !alias.scope !58
  %3948 = bitcast i64* %3942 to <2 x i64>*
  store <2 x i64> %3944, <2 x i64>* %3948, align 8, !alias.scope !61, !noalias !58
  %3949 = getelementptr i64, i64* %3942, i64 2
  %3950 = bitcast i64* %3949 to <2 x i64>*
  store <2 x i64> %3947, <2 x i64>* %3950, align 8, !alias.scope !61, !noalias !58
  %3951 = or i64 %3928, 8
  %3952 = getelementptr i64, i64* %3898, i64 %3951
  %3953 = getelementptr i64, i64* %3890, i64 %3951
  %3954 = bitcast i64* %3952 to <2 x i64>*
  %3955 = load <2 x i64>, <2 x i64>* %3954, align 8, !alias.scope !58
  %3956 = getelementptr i64, i64* %3952, i64 2
  %3957 = bitcast i64* %3956 to <2 x i64>*
  %3958 = load <2 x i64>, <2 x i64>* %3957, align 8, !alias.scope !58
  %3959 = bitcast i64* %3953 to <2 x i64>*
  store <2 x i64> %3955, <2 x i64>* %3959, align 8, !alias.scope !61, !noalias !58
  %3960 = getelementptr i64, i64* %3953, i64 2
  %3961 = bitcast i64* %3960 to <2 x i64>*
  store <2 x i64> %3958, <2 x i64>* %3961, align 8, !alias.scope !61, !noalias !58
  %3962 = or i64 %3928, 12
  %3963 = getelementptr i64, i64* %3898, i64 %3962
  %3964 = getelementptr i64, i64* %3890, i64 %3962
  %3965 = bitcast i64* %3963 to <2 x i64>*
  %3966 = load <2 x i64>, <2 x i64>* %3965, align 8, !alias.scope !58
  %3967 = getelementptr i64, i64* %3963, i64 2
  %3968 = bitcast i64* %3967 to <2 x i64>*
  %3969 = load <2 x i64>, <2 x i64>* %3968, align 8, !alias.scope !58
  %3970 = bitcast i64* %3964 to <2 x i64>*
  store <2 x i64> %3966, <2 x i64>* %3970, align 8, !alias.scope !61, !noalias !58
  %3971 = getelementptr i64, i64* %3964, i64 2
  %3972 = bitcast i64* %3971 to <2 x i64>*
  store <2 x i64> %3969, <2 x i64>* %3972, align 8, !alias.scope !61, !noalias !58
  %3973 = add i64 %3928, 16
  %3974 = add i64 %3929, -4
  %3975 = icmp eq i64 %3974, 0
  br i1 %3975, label %3976, label %3927, !llvm.loop !63

3976:                                             ; preds = %3927, %3916
  %3977 = phi i64 [ 0, %3916 ], [ %3973, %3927 ]
  %3978 = icmp eq i64 %3923, 0
  br i1 %3978, label %3995, label %3979

3979:                                             ; preds = %3976, %3979
  %3980 = phi i64 [ %3992, %3979 ], [ %3977, %3976 ]
  %3981 = phi i64 [ %3993, %3979 ], [ %3923, %3976 ]
  %3982 = getelementptr i64, i64* %3898, i64 %3980
  %3983 = getelementptr i64, i64* %3890, i64 %3980
  %3984 = bitcast i64* %3982 to <2 x i64>*
  %3985 = load <2 x i64>, <2 x i64>* %3984, align 8, !alias.scope !58
  %3986 = getelementptr i64, i64* %3982, i64 2
  %3987 = bitcast i64* %3986 to <2 x i64>*
  %3988 = load <2 x i64>, <2 x i64>* %3987, align 8, !alias.scope !58
  %3989 = bitcast i64* %3983 to <2 x i64>*
  store <2 x i64> %3985, <2 x i64>* %3989, align 8, !alias.scope !61, !noalias !58
  %3990 = getelementptr i64, i64* %3983, i64 2
  %3991 = bitcast i64* %3990 to <2 x i64>*
  store <2 x i64> %3988, <2 x i64>* %3991, align 8, !alias.scope !61, !noalias !58
  %3992 = add i64 %3980, 4
  %3993 = add i64 %3981, -1
  %3994 = icmp eq i64 %3993, 0
  br i1 %3994, label %3995, label %3979, !llvm.loop !64

3995:                                             ; preds = %3979, %3976
  %3996 = icmp eq i64 %3902, %3917
  br i1 %3996, label %4049, label %3997

3997:                                             ; preds = %3995, %3904, %3894
  %3998 = phi i64* [ %3898, %3904 ], [ %3898, %3894 ], [ %3918, %3995 ]
  %3999 = phi i64* [ %3890, %3904 ], [ %3890, %3894 ], [ %3919, %3995 ]
  %4000 = ptrtoint i64* %3998 to i64
  %4001 = getelementptr i64, i64* %3890, i64 -1
  %4002 = ptrtoint i64* %4001 to i64
  %4003 = sub i64 %4002, %4000
  %4004 = lshr i64 %4003, 3
  %4005 = add nuw nsw i64 %4004, 1
  %4006 = and i64 %4005, 7
  %4007 = icmp eq i64 %4006, 0
  br i1 %4007, label %4017, label %4008

4008:                                             ; preds = %3997, %4008
  %4009 = phi i64* [ %4012, %4008 ], [ %3998, %3997 ]
  %4010 = phi i64* [ %4014, %4008 ], [ %3999, %3997 ]
  %4011 = phi i64 [ %4015, %4008 ], [ %4006, %3997 ]
  %4012 = getelementptr inbounds i64, i64* %4009, i64 1
  %4013 = load i64, i64* %4009, align 8
  %4014 = getelementptr inbounds i64, i64* %4010, i64 1
  store i64 %4013, i64* %4010, align 8
  %4015 = add i64 %4011, -1
  %4016 = icmp eq i64 %4015, 0
  br i1 %4016, label %4017, label %4008, !llvm.loop !65

4017:                                             ; preds = %4008, %3997
  %4018 = phi i64* [ %3998, %3997 ], [ %4012, %4008 ]
  %4019 = phi i64* [ %3999, %3997 ], [ %4014, %4008 ]
  %4020 = icmp ult i64 %4003, 56
  br i1 %4020, label %4049, label %4021

4021:                                             ; preds = %4017, %4021
  %4022 = phi i64* [ %4045, %4021 ], [ %4018, %4017 ]
  %4023 = phi i64* [ %4047, %4021 ], [ %4019, %4017 ]
  %4024 = getelementptr inbounds i64, i64* %4022, i64 1
  %4025 = load i64, i64* %4022, align 8
  %4026 = getelementptr inbounds i64, i64* %4023, i64 1
  store i64 %4025, i64* %4023, align 8
  %4027 = getelementptr inbounds i64, i64* %4022, i64 2
  %4028 = load i64, i64* %4024, align 8
  %4029 = getelementptr inbounds i64, i64* %4023, i64 2
  store i64 %4028, i64* %4026, align 8
  %4030 = getelementptr inbounds i64, i64* %4022, i64 3
  %4031 = load i64, i64* %4027, align 8
  %4032 = getelementptr inbounds i64, i64* %4023, i64 3
  store i64 %4031, i64* %4029, align 8
  %4033 = getelementptr inbounds i64, i64* %4022, i64 4
  %4034 = load i64, i64* %4030, align 8
  %4035 = getelementptr inbounds i64, i64* %4023, i64 4
  store i64 %4034, i64* %4032, align 8
  %4036 = getelementptr inbounds i64, i64* %4022, i64 5
  %4037 = load i64, i64* %4033, align 8
  %4038 = getelementptr inbounds i64, i64* %4023, i64 5
  store i64 %4037, i64* %4035, align 8
  %4039 = getelementptr inbounds i64, i64* %4022, i64 6
  %4040 = load i64, i64* %4036, align 8
  %4041 = getelementptr inbounds i64, i64* %4023, i64 6
  store i64 %4040, i64* %4038, align 8
  %4042 = getelementptr inbounds i64, i64* %4022, i64 7
  %4043 = load i64, i64* %4039, align 8
  %4044 = getelementptr inbounds i64, i64* %4023, i64 7
  store i64 %4043, i64* %4041, align 8
  %4045 = getelementptr inbounds i64, i64* %4022, i64 8
  %4046 = load i64, i64* %4042, align 8
  %4047 = getelementptr inbounds i64, i64* %4023, i64 8
  store i64 %4046, i64* %4044, align 8
  %4048 = icmp eq i64* %4045, %3890
  br i1 %4048, label %4049, label %4021, !llvm.loop !66

4049:                                             ; preds = %4017, %4021, %3995
  %4050 = load i32, i32* %104, align 8
  %4051 = add nsw i32 %4050, -1
  store i32 %4051, i32* %104, align 8
  %4052 = icmp slt i32 %4050, 2
  br i1 %4052, label %4053, label %4070

4053:                                             ; preds = %4049
  store i32 10000, i32* %104, align 8
  %4054 = load i32, i32* %105, align 4
  %4055 = add nsw i32 %4054, 1
  store i32 %4055, i32* %105, align 4
  %4056 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %4057 = icmp eq i8 (i8*, i32)* %4056, null
  br i1 %4057, label %4063, label %4058

4058:                                             ; preds = %4053
  %4059 = load i8*, i8** %107, align 8
  %4060 = call signext i8 %4056(i8* %4059, i32 %4055) #12
  %4061 = icmp eq i8 %4060, 0
  br i1 %4061, label %4062, label %4063

4062:                                             ; preds = %4058
  store i32 66323, i32* %3, align 4
  br label %4070

4063:                                             ; preds = %4058, %4053
  %4064 = load i32, i32* %108, align 8
  %4065 = icmp sgt i32 %4064, 0
  br i1 %4065, label %4066, label %4070

4066:                                             ; preds = %4063
  %4067 = load i32, i32* %105, align 4
  %4068 = icmp slt i32 %4067, %4064
  br i1 %4068, label %4070, label %4069

4069:                                             ; preds = %4066
  store i32 66322, i32* %3, align 4
  br label %4070

4070:                                             ; preds = %4069, %4066, %4063, %4062, %4049
  %4071 = getelementptr inbounds i64, i64* %3898, i64 1
  store i64 %3862, i64* %4071, align 8
  %4072 = bitcast i64* %3890 to %"struct.icu_69::REStackFrame"*
  br label %6488

4073:                                             ; preds = %143
  %4074 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4075 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4074, i64 0, i32 1
  %4076 = load i32, i32* %4075, align 8
  %4077 = sext i32 %4076 to i64
  %4078 = load i64*, i64** %111, align 8
  %4079 = zext i32 %151 to i64
  %4080 = getelementptr inbounds i64, i64* %4078, i64 %4079
  store i64 %4077, i64* %4080, align 8
  br label %6488

4081:                                             ; preds = %143
  %4082 = load i64*, i64** %111, align 8
  %4083 = zext i32 %151 to i64
  %4084 = getelementptr inbounds i64, i64* %4082, i64 %4083
  %4085 = load i64, i64* %4084, align 8
  %4086 = trunc i64 %4085 to i32
  %4087 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4088 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4087, i64 0, i32 4
  %4089 = load i64*, i64** %4088, align 8
  %4090 = shl i64 %4085, 32
  %4091 = ashr exact i64 %4090, 32
  %4092 = getelementptr inbounds i64, i64* %4089, i64 %4091
  %4093 = load i32, i32* %38, align 8
  %4094 = sext i32 %4093 to i64
  %4095 = sub nsw i64 0, %4094
  %4096 = getelementptr inbounds i64, i64* %4092, i64 %4095
  %4097 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %4098 = icmp eq i64* %4096, %4097
  br i1 %4098, label %6488, label %4099

4099:                                             ; preds = %4081
  %4100 = icmp sgt i32 %4093, 0
  br i1 %4100, label %4101, label %4112

4101:                                             ; preds = %4099, %4101
  %4102 = phi i64 [ %4106, %4101 ], [ 0, %4099 ]
  %4103 = getelementptr inbounds i64, i64* %4097, i64 %4102
  %4104 = load i64, i64* %4103, align 8
  %4105 = getelementptr inbounds i64, i64* %4096, i64 %4102
  store i64 %4104, i64* %4105, align 8
  %4106 = add nuw nsw i64 %4102, 1
  %4107 = load i32, i32* %38, align 8
  %4108 = sext i32 %4107 to i64
  %4109 = icmp slt i64 %4106, %4108
  br i1 %4109, label %4101, label %4110

4110:                                             ; preds = %4101
  %4111 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  br label %4112

4112:                                             ; preds = %4110, %4099
  %4113 = phi %"class.icu_69::UVector64"* [ %4111, %4110 ], [ %4087, %4099 ]
  %4114 = bitcast i64* %4096 to %"struct.icu_69::REStackFrame"*
  call void @_ZN6icu_699UVector647setSizeEi(%"class.icu_69::UVector64"* %4113, i32 %4086) #12
  br label %6488

4115:                                             ; preds = %143
  %4116 = zext i32 %151 to i64
  %4117 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %4116
  %4118 = load i64, i64* %4117, align 8
  %4119 = add nuw nsw i32 %151, 1
  %4120 = zext i32 %4119 to i64
  %4121 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %4120
  %4122 = load i64, i64* %4121, align 8
  %4123 = icmp slt i64 %4118, 0
  br i1 %4123, label %4124, label %4140

4124:                                             ; preds = %4115
  %4125 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4126 = load i32, i32* %38, align 8
  %4127 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4125, i64 0, i32 1
  %4128 = load i32, i32* %4127, align 8
  %4129 = sub nsw i32 %4128, %4126
  %4130 = icmp sgt i32 %4129, 0
  %4131 = select i1 %4130, i32 %4129, i32 0
  store i32 %4131, i32* %4127, align 8
  %4132 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4125, i64 0, i32 4
  %4133 = load i64*, i64** %4132, align 8
  %4134 = zext i32 %4131 to i64
  %4135 = getelementptr inbounds i64, i64* %4133, i64 %4134
  %4136 = sext i32 %4126 to i64
  %4137 = sub nsw i64 0, %4136
  %4138 = getelementptr inbounds i64, i64* %4135, i64 %4137
  %4139 = bitcast i64* %4138 to %"struct.icu_69::REStackFrame"*
  br label %6488

4140:                                             ; preds = %4115
  %4141 = load %struct.UText*, %struct.UText** %117, align 8
  %4142 = getelementptr inbounds %struct.UText, %struct.UText* %4141, i64 0, i32 7
  %4143 = load i64, i64* %4142, align 8
  %4144 = sub nsw i64 %4118, %4143
  %4145 = icmp sgt i64 %4144, -1
  br i1 %4145, label %4146, label %4160

4146:                                             ; preds = %4140
  %4147 = getelementptr inbounds %struct.UText, %struct.UText* %4141, i64 0, i32 6
  %4148 = load i32, i32* %4147, align 4
  %4149 = sext i32 %4148 to i64
  %4150 = icmp slt i64 %4144, %4149
  br i1 %4150, label %4151, label %4160

4151:                                             ; preds = %4146
  %4152 = getelementptr inbounds %struct.UText, %struct.UText* %4141, i64 0, i32 10
  %4153 = load i16*, i16** %4152, align 8
  %4154 = getelementptr inbounds i16, i16* %4153, i64 %4144
  %4155 = load i16, i16* %4154, align 2
  %4156 = icmp ult i16 %4155, -9216
  br i1 %4156, label %4157, label %4160

4157:                                             ; preds = %4151
  %4158 = trunc i64 %4144 to i32
  %4159 = getelementptr inbounds %struct.UText, %struct.UText* %4141, i64 0, i32 8
  store i32 %4158, i32* %4159, align 8
  br label %4161

4160:                                             ; preds = %4151, %4146, %4140
  call void @utext_setNativeIndex_69(%struct.UText* %4141, i64 %4118) #12
  br label %4161

4161:                                             ; preds = %4160, %4157
  %4162 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %4163 = load i64, i64* %4162, align 8
  %4164 = load %struct.UText*, %struct.UText** %103, align 8
  %4165 = getelementptr inbounds %struct.UText, %struct.UText* %4164, i64 0, i32 7
  %4166 = load i64, i64* %4165, align 8
  %4167 = sub nsw i64 %4163, %4166
  %4168 = icmp sgt i64 %4167, -1
  br i1 %4168, label %4169, label %4183

4169:                                             ; preds = %4161
  %4170 = getelementptr inbounds %struct.UText, %struct.UText* %4164, i64 0, i32 6
  %4171 = load i32, i32* %4170, align 4
  %4172 = sext i32 %4171 to i64
  %4173 = icmp slt i64 %4167, %4172
  br i1 %4173, label %4174, label %4183

4174:                                             ; preds = %4169
  %4175 = getelementptr inbounds %struct.UText, %struct.UText* %4164, i64 0, i32 10
  %4176 = load i16*, i16** %4175, align 8
  %4177 = getelementptr inbounds i16, i16* %4176, i64 %4167
  %4178 = load i16, i16* %4177, align 2
  %4179 = icmp ult i16 %4178, -9216
  br i1 %4179, label %4180, label %4183

4180:                                             ; preds = %4174
  %4181 = trunc i64 %4167 to i32
  %4182 = getelementptr inbounds %struct.UText, %struct.UText* %4164, i64 0, i32 8
  store i32 %4181, i32* %4182, align 8
  br label %4184

4183:                                             ; preds = %4174, %4169, %4161
  call void @utext_setNativeIndex_69(%struct.UText* %4164, i64 %4163) #12
  br label %4184

4184:                                             ; preds = %4183, %4180
  br label %4185

4185:                                             ; preds = %4184, %4195
  %4186 = load %struct.UText*, %struct.UText** %117, align 8
  %4187 = call i64 @utext_getNativeIndex_69(%struct.UText* %4186) #12
  %4188 = icmp slt i64 %4187, %4122
  %4189 = load %struct.UText*, %struct.UText** %103, align 8
  br i1 %4188, label %4190, label %4201

4190:                                             ; preds = %4185
  %4191 = call i64 @utext_getNativeIndex_69(%struct.UText* %4189) #12
  %4192 = load i64, i64* %109, align 8
  %4193 = icmp slt i64 %4191, %4192
  br i1 %4193, label %4195, label %4194

4194:                                             ; preds = %4190
  store i8 1, i8* %110, align 8
  br label %4220

4195:                                             ; preds = %4190
  %4196 = load %struct.UText*, %struct.UText** %117, align 8
  %4197 = call i32 @utext_next32_69(%struct.UText* %4196) #12
  %4198 = load %struct.UText*, %struct.UText** %103, align 8
  %4199 = call i32 @utext_next32_69(%struct.UText* %4198) #12
  %4200 = icmp eq i32 %4199, %4197
  br i1 %4200, label %4185, label %4220

4201:                                             ; preds = %4185
  %4202 = getelementptr inbounds %struct.UText, %struct.UText* %4189, i64 0, i32 8
  %4203 = load i32, i32* %4202, align 8
  %4204 = getelementptr inbounds %struct.UText, %struct.UText* %4189, i64 0, i32 6
  %4205 = load i32, i32* %4204, align 4
  %4206 = icmp sgt i32 %4203, %4205
  br i1 %4206, label %4212, label %4207

4207:                                             ; preds = %4201
  %4208 = getelementptr inbounds %struct.UText, %struct.UText* %4189, i64 0, i32 7
  %4209 = load i64, i64* %4208, align 8
  %4210 = sext i32 %4203 to i64
  %4211 = add nsw i64 %4209, %4210
  br label %4218

4212:                                             ; preds = %4201
  %4213 = getelementptr inbounds %struct.UText, %struct.UText* %4189, i64 0, i32 11
  %4214 = load %struct.UTextFuncs*, %struct.UTextFuncs** %4213, align 8
  %4215 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %4214, i64 0, i32 10
  %4216 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %4215, align 8
  %4217 = call i64 %4216(%struct.UText* %4189) #12
  br label %4218

4218:                                             ; preds = %4212, %4207
  %4219 = phi i64 [ %4211, %4207 ], [ %4217, %4212 ]
  store i64 %4219, i64* %4162, align 8
  br label %6488

4220:                                             ; preds = %4195, %4194
  %4221 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4222 = load i32, i32* %38, align 8
  %4223 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4221, i64 0, i32 1
  %4224 = load i32, i32* %4223, align 8
  %4225 = sub nsw i32 %4224, %4222
  %4226 = icmp sgt i32 %4225, 0
  %4227 = select i1 %4226, i32 %4225, i32 0
  store i32 %4227, i32* %4223, align 8
  %4228 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4221, i64 0, i32 4
  %4229 = load i64*, i64** %4228, align 8
  %4230 = zext i32 %4227 to i64
  %4231 = getelementptr inbounds i64, i64* %4229, i64 %4230
  %4232 = sext i32 %4222 to i64
  %4233 = sub nsw i64 0, %4232
  %4234 = getelementptr inbounds i64, i64* %4231, i64 %4233
  %4235 = bitcast i64* %4234 to %"struct.icu_69::REStackFrame"*
  br label %6488

4236:                                             ; preds = %143
  %4237 = zext i32 %151 to i64
  %4238 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %4237
  %4239 = load i64, i64* %4238, align 8
  %4240 = add nuw nsw i32 %151, 1
  %4241 = zext i32 %4240 to i64
  %4242 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %4241
  %4243 = load i64, i64* %4242, align 8
  %4244 = icmp slt i64 %4239, 0
  br i1 %4244, label %4245, label %4261

4245:                                             ; preds = %4236
  %4246 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4247 = load i32, i32* %38, align 8
  %4248 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4246, i64 0, i32 1
  %4249 = load i32, i32* %4248, align 8
  %4250 = sub nsw i32 %4249, %4247
  %4251 = icmp sgt i32 %4250, 0
  %4252 = select i1 %4251, i32 %4250, i32 0
  store i32 %4252, i32* %4248, align 8
  %4253 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4246, i64 0, i32 4
  %4254 = load i64*, i64** %4253, align 8
  %4255 = zext i32 %4252 to i64
  %4256 = getelementptr inbounds i64, i64* %4254, i64 %4255
  %4257 = sext i32 %4247 to i64
  %4258 = sub nsw i64 0, %4257
  %4259 = getelementptr inbounds i64, i64* %4256, i64 %4258
  %4260 = bitcast i64* %4259 to %"struct.icu_69::REStackFrame"*
  br label %6488

4261:                                             ; preds = %4236
  %4262 = load %struct.UText*, %struct.UText** %117, align 8
  call void @utext_setNativeIndex_69(%struct.UText* %4262, i64 %4239) #12
  %4263 = load %struct.UText*, %struct.UText** %103, align 8
  %4264 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %4265 = load i64, i64* %4264, align 8
  call void @utext_setNativeIndex_69(%struct.UText* %4263, i64 %4265) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 -86, i64 24, i1 false)
  %4266 = load %struct.UText*, %struct.UText** %117, align 8
  call void @_ZN6icu_6924CaseFoldingUTextIteratorC1ER5UText(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %5, %struct.UText* dereferenceable(144) %4266) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 -86, i64 24, i1 false)
  %4267 = load %struct.UText*, %struct.UText** %103, align 8
  call void @_ZN6icu_6924CaseFoldingUTextIteratorC1ER5UText(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %6, %struct.UText* dereferenceable(144) %4267) #12
  br label %4268

4268:                                             ; preds = %4284, %4261
  %4269 = call signext i8 @_ZN6icu_6924CaseFoldingUTextIterator11inExpansionEv(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %5) #12
  %4270 = icmp eq i8 %4269, 0
  br i1 %4270, label %4271, label %4275

4271:                                             ; preds = %4268
  %4272 = load %struct.UText*, %struct.UText** %117, align 8
  %4273 = call i64 @utext_getNativeIndex_69(%struct.UText* %4272) #12
  %4274 = icmp slt i64 %4273, %4243
  br i1 %4274, label %4275, label %4288

4275:                                             ; preds = %4271, %4268
  %4276 = call signext i8 @_ZN6icu_6924CaseFoldingUTextIterator11inExpansionEv(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %6) #12
  %4277 = icmp eq i8 %4276, 0
  br i1 %4277, label %4278, label %4284

4278:                                             ; preds = %4275
  %4279 = load %struct.UText*, %struct.UText** %103, align 8
  %4280 = call i64 @utext_getNativeIndex_69(%struct.UText* %4279) #12
  %4281 = load i64, i64* %109, align 8
  %4282 = icmp slt i64 %4280, %4281
  br i1 %4282, label %4284, label %4283

4283:                                             ; preds = %4278
  store i8 1, i8* %110, align 8
  br label %4311

4284:                                             ; preds = %4278, %4275
  %4285 = call i32 @_ZN6icu_6924CaseFoldingUTextIterator4nextEv(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %5) #12
  %4286 = call i32 @_ZN6icu_6924CaseFoldingUTextIterator4nextEv(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %6) #12
  %4287 = icmp eq i32 %4286, %4285
  br i1 %4287, label %4268, label %4311

4288:                                             ; preds = %4271
  %4289 = call signext i8 @_ZN6icu_6924CaseFoldingUTextIterator11inExpansionEv(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %6) #12
  %4290 = icmp eq i8 %4289, 0
  br i1 %4290, label %4291, label %4311

4291:                                             ; preds = %4288
  %4292 = load %struct.UText*, %struct.UText** %103, align 8
  %4293 = getelementptr inbounds %struct.UText, %struct.UText* %4292, i64 0, i32 8
  %4294 = load i32, i32* %4293, align 8
  %4295 = getelementptr inbounds %struct.UText, %struct.UText* %4292, i64 0, i32 6
  %4296 = load i32, i32* %4295, align 4
  %4297 = icmp sgt i32 %4294, %4296
  br i1 %4297, label %4303, label %4298

4298:                                             ; preds = %4291
  %4299 = getelementptr inbounds %struct.UText, %struct.UText* %4292, i64 0, i32 7
  %4300 = load i64, i64* %4299, align 8
  %4301 = sext i32 %4294 to i64
  %4302 = add nsw i64 %4300, %4301
  br label %4309

4303:                                             ; preds = %4291
  %4304 = getelementptr inbounds %struct.UText, %struct.UText* %4292, i64 0, i32 11
  %4305 = load %struct.UTextFuncs*, %struct.UTextFuncs** %4304, align 8
  %4306 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %4305, i64 0, i32 10
  %4307 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %4306, align 8
  %4308 = call i64 %4307(%struct.UText* %4292) #12
  br label %4309

4309:                                             ; preds = %4303, %4298
  %4310 = phi i64 [ %4302, %4298 ], [ %4308, %4303 ]
  store i64 %4310, i64* %4264, align 8
  br label %4327

4311:                                             ; preds = %4284, %4288, %4283
  %4312 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4313 = load i32, i32* %38, align 8
  %4314 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4312, i64 0, i32 1
  %4315 = load i32, i32* %4314, align 8
  %4316 = sub nsw i32 %4315, %4313
  %4317 = icmp sgt i32 %4316, 0
  %4318 = select i1 %4317, i32 %4316, i32 0
  store i32 %4318, i32* %4314, align 8
  %4319 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4312, i64 0, i32 4
  %4320 = load i64*, i64** %4319, align 8
  %4321 = zext i32 %4318 to i64
  %4322 = getelementptr inbounds i64, i64* %4320, i64 %4321
  %4323 = sext i32 %4313 to i64
  %4324 = sub nsw i64 0, %4323
  %4325 = getelementptr inbounds i64, i64* %4322, i64 %4324
  %4326 = bitcast i64* %4325 to %"struct.icu_69::REStackFrame"*
  br label %4327

4327:                                             ; preds = %4311, %4309
  %4328 = phi %"struct.icu_69::REStackFrame"* [ %144, %4309 ], [ %4326, %4311 ]
  call void @_ZN6icu_6924CaseFoldingUTextIteratorD1Ev(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #12
  call void @_ZN6icu_6924CaseFoldingUTextIteratorD1Ev(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #12
  br label %6488

4329:                                             ; preds = %143
  %4330 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %4331 = load i64, i64* %4330, align 8
  %4332 = zext i32 %151 to i64
  %4333 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %4332
  store i64 %4331, i64* %4333, align 8
  br label %6488

4334:                                             ; preds = %143
  %4335 = add nsw i64 %146, 2
  store i64 %4335, i64* %145, align 8
  %4336 = shl i64 %152, 32
  %4337 = ashr exact i64 %4336, 32
  %4338 = getelementptr inbounds i64, i64* %16, i64 %4337
  %4339 = load i64, i64* %4338, align 8
  %4340 = and i64 %4339, 16777215
  %4341 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %4340
  %4342 = load i64, i64* %4341, align 8
  %4343 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %4344 = load i64, i64* %4343, align 8
  %4345 = icmp slt i64 %4342, %4344
  br i1 %4345, label %4346, label %4348

4346:                                             ; preds = %4334
  %4347 = zext i32 %151 to i64
  store i64 %4347, i64* %145, align 8
  br label %6488

4348:                                             ; preds = %4334
  %4349 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4350 = load i32, i32* %38, align 8
  %4351 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4349, i64 0, i32 1
  %4352 = load i32, i32* %4351, align 8
  %4353 = sub nsw i32 %4352, %4350
  %4354 = icmp sgt i32 %4353, 0
  %4355 = select i1 %4354, i32 %4353, i32 0
  store i32 %4355, i32* %4351, align 8
  %4356 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4349, i64 0, i32 4
  %4357 = load i64*, i64** %4356, align 8
  %4358 = zext i32 %4355 to i64
  %4359 = getelementptr inbounds i64, i64* %4357, i64 %4358
  %4360 = sext i32 %4350 to i64
  %4361 = sub nsw i64 0, %4360
  %4362 = getelementptr inbounds i64, i64* %4359, i64 %4361
  %4363 = bitcast i64* %4362 to %"struct.icu_69::REStackFrame"*
  br label %6488

4364:                                             ; preds = %143
  %4365 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4366 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4365, i64 0, i32 1
  %4367 = load i32, i32* %4366, align 8
  %4368 = sext i32 %4367 to i64
  %4369 = load i64*, i64** %111, align 8
  %4370 = zext i32 %151 to i64
  %4371 = getelementptr inbounds i64, i64* %4369, i64 %4370
  store i64 %4368, i64* %4371, align 8
  %4372 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %4373 = load i64, i64* %4372, align 8
  %4374 = load i64*, i64** %111, align 8
  %4375 = add nuw nsw i32 %151, 1
  %4376 = zext i32 %4375 to i64
  %4377 = getelementptr inbounds i64, i64* %4374, i64 %4376
  store i64 %4373, i64* %4377, align 8
  %4378 = load i64, i64* %112, align 8
  %4379 = load i64*, i64** %111, align 8
  %4380 = add nuw nsw i32 %151, 2
  %4381 = zext i32 %4380 to i64
  %4382 = getelementptr inbounds i64, i64* %4379, i64 %4381
  store i64 %4378, i64* %4382, align 8
  %4383 = load i64, i64* %109, align 8
  %4384 = load i64*, i64** %111, align 8
  %4385 = add nuw nsw i32 %151, 3
  %4386 = zext i32 %4385 to i64
  %4387 = getelementptr inbounds i64, i64* %4384, i64 %4386
  store i64 %4383, i64* %4387, align 8
  %4388 = load <2 x i64>, <2 x i64>* %131, align 8
  store <2 x i64> %4388, <2 x i64>* %132, align 8
  br label %6488

4389:                                             ; preds = %143
  %4390 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4391 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4390, i64 0, i32 1
  %4392 = load i32, i32* %4391, align 8
  %4393 = load i64*, i64** %111, align 8
  %4394 = zext i32 %151 to i64
  %4395 = getelementptr inbounds i64, i64* %4393, i64 %4394
  %4396 = load i64, i64* %4395, align 8
  %4397 = trunc i64 %4396 to i32
  %4398 = icmp sgt i32 %4392, %4397
  br i1 %4398, label %4399, label %4427

4399:                                             ; preds = %4389
  %4400 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4390, i64 0, i32 4
  %4401 = load i64*, i64** %4400, align 8
  %4402 = shl i64 %4396, 32
  %4403 = ashr exact i64 %4402, 32
  %4404 = getelementptr inbounds i64, i64* %4401, i64 %4403
  %4405 = load i32, i32* %38, align 8
  %4406 = sext i32 %4405 to i64
  %4407 = sub nsw i64 0, %4406
  %4408 = getelementptr inbounds i64, i64* %4404, i64 %4407
  %4409 = icmp sgt i32 %4405, 0
  br i1 %4409, label %4410, label %4423

4410:                                             ; preds = %4399
  %4411 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  br label %4412

4412:                                             ; preds = %4410, %4412
  %4413 = phi i64 [ 0, %4410 ], [ %4417, %4412 ]
  %4414 = getelementptr inbounds i64, i64* %4411, i64 %4413
  %4415 = load i64, i64* %4414, align 8
  %4416 = getelementptr inbounds i64, i64* %4408, i64 %4413
  store i64 %4415, i64* %4416, align 8
  %4417 = add nuw nsw i64 %4413, 1
  %4418 = load i32, i32* %38, align 8
  %4419 = sext i32 %4418 to i64
  %4420 = icmp slt i64 %4417, %4419
  br i1 %4420, label %4412, label %4421

4421:                                             ; preds = %4412
  %4422 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  br label %4423

4423:                                             ; preds = %4421, %4399
  %4424 = phi %"class.icu_69::UVector64"* [ %4422, %4421 ], [ %4390, %4399 ]
  %4425 = bitcast i64* %4408 to %"struct.icu_69::REStackFrame"*
  call void @_ZN6icu_699UVector647setSizeEi(%"class.icu_69::UVector64"* %4424, i32 %4397) #12
  %4426 = load i64*, i64** %111, align 8
  br label %4427

4427:                                             ; preds = %4423, %4389
  %4428 = phi i64* [ %4426, %4423 ], [ %4393, %4389 ]
  %4429 = phi %"struct.icu_69::REStackFrame"* [ %4425, %4423 ], [ %144, %4389 ]
  %4430 = add nuw nsw i32 %151, 1
  %4431 = zext i32 %4430 to i64
  %4432 = getelementptr inbounds i64, i64* %4428, i64 %4431
  %4433 = load i64, i64* %4432, align 8
  %4434 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %4429, i64 0, i32 0
  store i64 %4433, i64* %4434, align 8
  %4435 = load i64*, i64** %111, align 8
  %4436 = add nuw nsw i32 %151, 2
  %4437 = zext i32 %4436 to i64
  %4438 = getelementptr inbounds i64, i64* %4435, i64 %4437
  %4439 = load i64, i64* %4438, align 8
  store i64 %4439, i64* %112, align 8
  %4440 = add nuw nsw i32 %151, 3
  %4441 = zext i32 %4440 to i64
  %4442 = getelementptr inbounds i64, i64* %4435, i64 %4441
  %4443 = load i64, i64* %4442, align 8
  store i64 %4443, i64* %109, align 8
  br label %6488

4444:                                             ; preds = %143
  %4445 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %4446 = load i64, i64* %4445, align 8
  %4447 = load i64, i64* %109, align 8
  %4448 = icmp slt i64 %4446, %4447
  br i1 %4448, label %4449, label %4514

4449:                                             ; preds = %4444
  %4450 = load %struct.UText*, %struct.UText** %103, align 8
  %4451 = getelementptr inbounds %struct.UText, %struct.UText* %4450, i64 0, i32 7
  %4452 = load i64, i64* %4451, align 8
  %4453 = sub nsw i64 %4446, %4452
  %4454 = icmp sgt i64 %4453, -1
  br i1 %4454, label %4455, label %4469

4455:                                             ; preds = %4449
  %4456 = getelementptr inbounds %struct.UText, %struct.UText* %4450, i64 0, i32 6
  %4457 = load i32, i32* %4456, align 4
  %4458 = sext i32 %4457 to i64
  %4459 = icmp slt i64 %4453, %4458
  br i1 %4459, label %4460, label %4469

4460:                                             ; preds = %4455
  %4461 = getelementptr inbounds %struct.UText, %struct.UText* %4450, i64 0, i32 10
  %4462 = load i16*, i16** %4461, align 8
  %4463 = getelementptr inbounds i16, i16* %4462, i64 %4453
  %4464 = load i16, i16* %4463, align 2
  %4465 = icmp ult i16 %4464, -9216
  br i1 %4465, label %4466, label %4469

4466:                                             ; preds = %4460
  %4467 = trunc i64 %4453 to i32
  %4468 = getelementptr inbounds %struct.UText, %struct.UText* %4450, i64 0, i32 8
  store i32 %4467, i32* %4468, align 8
  br label %4470

4469:                                             ; preds = %4460, %4455, %4449
  call void @utext_setNativeIndex_69(%struct.UText* %4450, i64 %4446) #12
  br label %4470

4470:                                             ; preds = %4469, %4466
  %4471 = load %struct.UText*, %struct.UText** %103, align 8
  %4472 = getelementptr inbounds %struct.UText, %struct.UText* %4471, i64 0, i32 8
  %4473 = load i32, i32* %4472, align 8
  %4474 = getelementptr inbounds %struct.UText, %struct.UText* %4471, i64 0, i32 9
  %4475 = load i32, i32* %4474, align 4
  %4476 = icmp slt i32 %4473, %4475
  br i1 %4476, label %4477, label %4488

4477:                                             ; preds = %4470
  %4478 = getelementptr inbounds %struct.UText, %struct.UText* %4471, i64 0, i32 10
  %4479 = load i16*, i16** %4478, align 8
  %4480 = sext i32 %4473 to i64
  %4481 = getelementptr inbounds i16, i16* %4479, i64 %4480
  %4482 = load i16, i16* %4481, align 2
  %4483 = icmp ult i16 %4482, -10240
  br i1 %4483, label %4484, label %4488

4484:                                             ; preds = %4477
  %4485 = add nsw i32 %4473, 1
  store i32 %4485, i32* %4472, align 8
  %4486 = load i16, i16* %4481, align 2
  %4487 = zext i16 %4486 to i32
  br label %4490

4488:                                             ; preds = %4477, %4470
  %4489 = call i32 @utext_next32_69(%struct.UText* %4471) #12
  br label %4490

4490:                                             ; preds = %4488, %4484
  %4491 = phi i32 [ %4487, %4484 ], [ %4489, %4488 ]
  %4492 = call i32 @u_foldCase_69(i32 %4491, i32 0) #12
  %4493 = icmp eq i32 %4492, %151
  br i1 %4493, label %4494, label %4515

4494:                                             ; preds = %4490
  %4495 = load %struct.UText*, %struct.UText** %103, align 8
  %4496 = getelementptr inbounds %struct.UText, %struct.UText* %4495, i64 0, i32 8
  %4497 = load i32, i32* %4496, align 8
  %4498 = getelementptr inbounds %struct.UText, %struct.UText* %4495, i64 0, i32 6
  %4499 = load i32, i32* %4498, align 4
  %4500 = icmp sgt i32 %4497, %4499
  br i1 %4500, label %4506, label %4501

4501:                                             ; preds = %4494
  %4502 = getelementptr inbounds %struct.UText, %struct.UText* %4495, i64 0, i32 7
  %4503 = load i64, i64* %4502, align 8
  %4504 = sext i32 %4497 to i64
  %4505 = add nsw i64 %4503, %4504
  br label %4512

4506:                                             ; preds = %4494
  %4507 = getelementptr inbounds %struct.UText, %struct.UText* %4495, i64 0, i32 11
  %4508 = load %struct.UTextFuncs*, %struct.UTextFuncs** %4507, align 8
  %4509 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %4508, i64 0, i32 10
  %4510 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %4509, align 8
  %4511 = call i64 %4510(%struct.UText* %4495) #12
  br label %4512

4512:                                             ; preds = %4506, %4501
  %4513 = phi i64 [ %4505, %4501 ], [ %4511, %4506 ]
  store i64 %4513, i64* %4445, align 8
  br label %6488

4514:                                             ; preds = %4444
  store i8 1, i8* %110, align 8
  br label %4515

4515:                                             ; preds = %4490, %4514
  %4516 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4517 = load i32, i32* %38, align 8
  %4518 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4516, i64 0, i32 1
  %4519 = load i32, i32* %4518, align 8
  %4520 = sub nsw i32 %4519, %4517
  %4521 = icmp sgt i32 %4520, 0
  %4522 = select i1 %4521, i32 %4520, i32 0
  store i32 %4522, i32* %4518, align 8
  %4523 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4516, i64 0, i32 4
  %4524 = load i64*, i64** %4523, align 8
  %4525 = zext i32 %4522 to i64
  %4526 = getelementptr inbounds i64, i64* %4524, i64 %4525
  %4527 = sext i32 %4517 to i64
  %4528 = sub nsw i64 0, %4527
  %4529 = getelementptr inbounds i64, i64* %4526, i64 %4528
  %4530 = bitcast i64* %4529 to %"struct.icu_69::REStackFrame"*
  br label %6488

4531:                                             ; preds = %143
  %4532 = zext i32 %151 to i64
  %4533 = getelementptr inbounds i16, i16* %33, i64 %4532
  %4534 = getelementptr inbounds i64, i64* %16, i64 %152
  %4535 = load i64, i64* %4534, align 8
  %4536 = trunc i64 %4535 to i32
  %4537 = add nsw i64 %146, 2
  store i64 %4537, i64* %145, align 8
  %4538 = and i32 %4536, 16777215
  %4539 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %4540 = load i64, i64* %4539, align 8
  %4541 = load %struct.UText*, %struct.UText** %103, align 8
  %4542 = getelementptr inbounds %struct.UText, %struct.UText* %4541, i64 0, i32 7
  %4543 = load i64, i64* %4542, align 8
  %4544 = sub nsw i64 %4540, %4543
  %4545 = icmp sgt i64 %4544, -1
  br i1 %4545, label %4546, label %4560

4546:                                             ; preds = %4531
  %4547 = getelementptr inbounds %struct.UText, %struct.UText* %4541, i64 0, i32 6
  %4548 = load i32, i32* %4547, align 4
  %4549 = sext i32 %4548 to i64
  %4550 = icmp slt i64 %4544, %4549
  br i1 %4550, label %4551, label %4560

4551:                                             ; preds = %4546
  %4552 = getelementptr inbounds %struct.UText, %struct.UText* %4541, i64 0, i32 10
  %4553 = load i16*, i16** %4552, align 8
  %4554 = getelementptr inbounds i16, i16* %4553, i64 %4544
  %4555 = load i16, i16* %4554, align 2
  %4556 = icmp ult i16 %4555, -9216
  br i1 %4556, label %4557, label %4560

4557:                                             ; preds = %4551
  %4558 = trunc i64 %4544 to i32
  %4559 = getelementptr inbounds %struct.UText, %struct.UText* %4541, i64 0, i32 8
  store i32 %4558, i32* %4559, align 8
  br label %4561

4560:                                             ; preds = %4551, %4546, %4531
  call void @utext_setNativeIndex_69(%struct.UText* %4541, i64 %4540) #12
  br label %4561

4561:                                             ; preds = %4560, %4557
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 24, i1 false)
  %4562 = load %struct.UText*, %struct.UText** %103, align 8
  call void @_ZN6icu_6924CaseFoldingUTextIteratorC1ER5UText(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %7, %struct.UText* dereferenceable(144) %4562) #12
  br label %4563

4563:                                             ; preds = %4614, %4561
  %4564 = phi i32 [ 0, %4561 ], [ %4615, %4614 ]
  %4565 = icmp slt i32 %4564, %4538
  %4566 = call signext i8 @_ZN6icu_6924CaseFoldingUTextIterator11inExpansionEv(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %7) #12
  %4567 = icmp eq i8 %4566, 0
  br i1 %4565, label %4568, label %4621

4568:                                             ; preds = %4563
  br i1 %4567, label %4569, label %4592

4569:                                             ; preds = %4568
  %4570 = load %struct.UText*, %struct.UText** %103, align 8
  %4571 = getelementptr inbounds %struct.UText, %struct.UText* %4570, i64 0, i32 8
  %4572 = load i32, i32* %4571, align 8
  %4573 = getelementptr inbounds %struct.UText, %struct.UText* %4570, i64 0, i32 6
  %4574 = load i32, i32* %4573, align 4
  %4575 = icmp sgt i32 %4572, %4574
  br i1 %4575, label %4581, label %4576

4576:                                             ; preds = %4569
  %4577 = getelementptr inbounds %struct.UText, %struct.UText* %4570, i64 0, i32 7
  %4578 = load i64, i64* %4577, align 8
  %4579 = sext i32 %4572 to i64
  %4580 = add nsw i64 %4578, %4579
  br label %4587

4581:                                             ; preds = %4569
  %4582 = getelementptr inbounds %struct.UText, %struct.UText* %4570, i64 0, i32 11
  %4583 = load %struct.UTextFuncs*, %struct.UTextFuncs** %4582, align 8
  %4584 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %4583, i64 0, i32 10
  %4585 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %4584, align 8
  %4586 = call i64 %4585(%struct.UText* %4570) #12
  br label %4587

4587:                                             ; preds = %4581, %4576
  %4588 = phi i64 [ %4580, %4576 ], [ %4586, %4581 ]
  %4589 = load i64, i64* %109, align 8
  %4590 = icmp slt i64 %4588, %4589
  br i1 %4590, label %4592, label %4591

4591:                                             ; preds = %4587
  store i8 1, i8* %110, align 8
  br label %4619

4592:                                             ; preds = %4587, %4568
  %4593 = add nsw i32 %4564, 1
  %4594 = sext i32 %4564 to i64
  %4595 = getelementptr inbounds i16, i16* %4533, i64 %4594
  %4596 = load i16, i16* %4595, align 2
  %4597 = zext i16 %4596 to i32
  %4598 = and i32 %4597, 64512
  %4599 = icmp ne i32 %4598, 55296
  %4600 = icmp eq i32 %4593, %4538
  %4601 = or i1 %4600, %4599
  br i1 %4601, label %4614, label %4602

4602:                                             ; preds = %4592
  %4603 = sext i32 %4593 to i64
  %4604 = getelementptr inbounds i16, i16* %4533, i64 %4603
  %4605 = load i16, i16* %4604, align 2
  %4606 = zext i16 %4605 to i32
  %4607 = and i32 %4606, 64512
  %4608 = icmp eq i32 %4607, 56320
  br i1 %4608, label %4609, label %4614

4609:                                             ; preds = %4602
  %4610 = add nsw i32 %4564, 2
  %4611 = shl nuw nsw i32 %4597, 10
  %4612 = add nsw i32 %4611, -56613888
  %4613 = add nsw i32 %4612, %4606
  br label %4614

4614:                                             ; preds = %4592, %4602, %4609
  %4615 = phi i32 [ %4593, %4592 ], [ %4610, %4609 ], [ %4593, %4602 ]
  %4616 = phi i32 [ %4597, %4592 ], [ %4613, %4609 ], [ %4597, %4602 ]
  %4617 = call i32 @_ZN6icu_6924CaseFoldingUTextIterator4nextEv(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %7) #12
  %4618 = icmp eq i32 %4617, %4616
  br i1 %4618, label %4563, label %4619

4619:                                             ; preds = %4614, %4591
  %4620 = call signext i8 @_ZN6icu_6924CaseFoldingUTextIterator11inExpansionEv(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %7) #12
  br label %4642

4621:                                             ; preds = %4563
  br i1 %4567, label %4622, label %4642

4622:                                             ; preds = %4621
  %4623 = load %struct.UText*, %struct.UText** %103, align 8
  %4624 = getelementptr inbounds %struct.UText, %struct.UText* %4623, i64 0, i32 8
  %4625 = load i32, i32* %4624, align 8
  %4626 = getelementptr inbounds %struct.UText, %struct.UText* %4623, i64 0, i32 6
  %4627 = load i32, i32* %4626, align 4
  %4628 = icmp sgt i32 %4625, %4627
  br i1 %4628, label %4634, label %4629

4629:                                             ; preds = %4622
  %4630 = getelementptr inbounds %struct.UText, %struct.UText* %4623, i64 0, i32 7
  %4631 = load i64, i64* %4630, align 8
  %4632 = sext i32 %4625 to i64
  %4633 = add nsw i64 %4631, %4632
  br label %4640

4634:                                             ; preds = %4622
  %4635 = getelementptr inbounds %struct.UText, %struct.UText* %4623, i64 0, i32 11
  %4636 = load %struct.UTextFuncs*, %struct.UTextFuncs** %4635, align 8
  %4637 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %4636, i64 0, i32 10
  %4638 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %4637, align 8
  %4639 = call i64 %4638(%struct.UText* %4623) #12
  br label %4640

4640:                                             ; preds = %4634, %4629
  %4641 = phi i64 [ %4633, %4629 ], [ %4639, %4634 ]
  store i64 %4641, i64* %4539, align 8
  br label %4658

4642:                                             ; preds = %4621, %4619
  %4643 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4644 = load i32, i32* %38, align 8
  %4645 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4643, i64 0, i32 1
  %4646 = load i32, i32* %4645, align 8
  %4647 = sub nsw i32 %4646, %4644
  %4648 = icmp sgt i32 %4647, 0
  %4649 = select i1 %4648, i32 %4647, i32 0
  store i32 %4649, i32* %4645, align 8
  %4650 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4643, i64 0, i32 4
  %4651 = load i64*, i64** %4650, align 8
  %4652 = zext i32 %4649 to i64
  %4653 = getelementptr inbounds i64, i64* %4651, i64 %4652
  %4654 = sext i32 %4644 to i64
  %4655 = sub nsw i64 0, %4654
  %4656 = getelementptr inbounds i64, i64* %4653, i64 %4655
  %4657 = bitcast i64* %4656 to %"struct.icu_69::REStackFrame"*
  br label %4658

4658:                                             ; preds = %4642, %4640
  %4659 = phi %"struct.icu_69::REStackFrame"* [ %144, %4640 ], [ %4657, %4642 ]
  call void @_ZN6icu_6924CaseFoldingUTextIteratorD1Ev(%"class.icu_69::CaseFoldingUTextIterator"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #12
  br label %6488

4660:                                             ; preds = %143
  %4661 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4662 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4661, i64 0, i32 1
  %4663 = load i32, i32* %4662, align 8
  %4664 = sext i32 %4663 to i64
  %4665 = load i64*, i64** %111, align 8
  %4666 = zext i32 %151 to i64
  %4667 = getelementptr inbounds i64, i64* %4665, i64 %4666
  store i64 %4664, i64* %4667, align 8
  %4668 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %4669 = load i64, i64* %4668, align 8
  %4670 = load i64*, i64** %111, align 8
  %4671 = add nuw nsw i32 %151, 1
  %4672 = zext i32 %4671 to i64
  %4673 = getelementptr inbounds i64, i64* %4670, i64 %4672
  store i64 %4669, i64* %4673, align 8
  %4674 = load i64, i64* %112, align 8
  %4675 = load i64*, i64** %111, align 8
  %4676 = add nuw nsw i32 %151, 2
  %4677 = zext i32 %4676 to i64
  %4678 = getelementptr inbounds i64, i64* %4675, i64 %4677
  store i64 %4674, i64* %4678, align 8
  %4679 = load i64, i64* %109, align 8
  %4680 = load i64*, i64** %111, align 8
  %4681 = add nuw nsw i32 %151, 3
  %4682 = zext i32 %4681 to i64
  %4683 = getelementptr inbounds i64, i64* %4680, i64 %4682
  store i64 %4679, i64* %4683, align 8
  %4684 = load i64, i64* %113, align 8
  store i64 %4684, i64* %112, align 8
  %4685 = load i64, i64* %4668, align 8
  store i64 %4685, i64* %109, align 8
  %4686 = load i64*, i64** %111, align 8
  %4687 = add nuw nsw i32 %151, 4
  %4688 = zext i32 %4687 to i64
  %4689 = getelementptr inbounds i64, i64* %4686, i64 %4688
  store i64 -1, i64* %4689, align 8
  br label %6488

4690:                                             ; preds = %143
  %4691 = add nsw i64 %146, 2
  store i64 %4691, i64* %145, align 8
  %4692 = getelementptr inbounds i64, i64* %16, i64 %152
  %4693 = load i64, i64* %4692, align 8
  %4694 = add nsw i64 %146, 3
  store i64 %4694, i64* %145, align 8
  %4695 = getelementptr inbounds i64, i64* %16, i64 %4691
  %4696 = load i64, i64* %4695, align 8
  %4697 = load %struct.UText*, %struct.UText** %103, align 8
  %4698 = getelementptr inbounds %struct.UText, %struct.UText* %4697, i64 0, i32 11
  %4699 = load %struct.UTextFuncs*, %struct.UTextFuncs** %4698, align 8
  %4700 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %4699, i64 0, i32 11
  %4701 = load i32 (%struct.UText*, i64)*, i32 (%struct.UText*, i64)** %4700, align 8
  %4702 = icmp eq i32 (%struct.UText*, i64)* %4701, null
  %4703 = mul i64 %4696, 3
  %4704 = select i1 %4702, i64 %4696, i64 %4703
  %4705 = load i64*, i64** %111, align 8
  %4706 = add nuw nsw i32 %151, 4
  %4707 = zext i32 %4706 to i64
  %4708 = getelementptr inbounds i64, i64* %4705, i64 %4707
  %4709 = load i64, i64* %4708, align 8
  %4710 = icmp slt i64 %4709, 0
  br i1 %4710, label %4711, label %4757

4711:                                             ; preds = %4690
  %4712 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %4713 = load i64, i64* %4712, align 8
  %4714 = shl i64 %4693, 32
  %4715 = ashr exact i64 %4714, 32
  %4716 = sub nsw i64 %4713, %4715
  store i64 %4716, i64* %4708, align 8
  %4717 = icmp sgt i64 %4716, 0
  br i1 %4717, label %4718, label %4816

4718:                                             ; preds = %4711
  %4719 = load %struct.UText*, %struct.UText** %103, align 8
  %4720 = getelementptr inbounds %struct.UText, %struct.UText* %4719, i64 0, i32 7
  %4721 = load i64, i64* %4720, align 8
  %4722 = sub nsw i64 %4716, %4721
  %4723 = icmp sgt i64 %4722, -1
  br i1 %4723, label %4724, label %4738

4724:                                             ; preds = %4718
  %4725 = getelementptr inbounds %struct.UText, %struct.UText* %4719, i64 0, i32 6
  %4726 = load i32, i32* %4725, align 4
  %4727 = sext i32 %4726 to i64
  %4728 = icmp slt i64 %4722, %4727
  br i1 %4728, label %4729, label %4738

4729:                                             ; preds = %4724
  %4730 = getelementptr inbounds %struct.UText, %struct.UText* %4719, i64 0, i32 10
  %4731 = load i16*, i16** %4730, align 8
  %4732 = getelementptr inbounds i16, i16* %4731, i64 %4722
  %4733 = load i16, i16* %4732, align 2
  %4734 = icmp ult i16 %4733, -9216
  br i1 %4734, label %4735, label %4738

4735:                                             ; preds = %4729
  %4736 = trunc i64 %4722 to i32
  %4737 = getelementptr inbounds %struct.UText, %struct.UText* %4719, i64 0, i32 8
  store i32 %4736, i32* %4737, align 8
  br label %4739

4738:                                             ; preds = %4729, %4724, %4718
  call void @utext_setNativeIndex_69(%struct.UText* %4719, i64 %4716) #12
  br label %4739

4739:                                             ; preds = %4738, %4735
  %4740 = load %struct.UText*, %struct.UText** %103, align 8
  %4741 = getelementptr inbounds %struct.UText, %struct.UText* %4740, i64 0, i32 8
  %4742 = load i32, i32* %4741, align 8
  %4743 = getelementptr inbounds %struct.UText, %struct.UText* %4740, i64 0, i32 6
  %4744 = load i32, i32* %4743, align 4
  %4745 = icmp sgt i32 %4742, %4744
  br i1 %4745, label %4751, label %4746

4746:                                             ; preds = %4739
  %4747 = getelementptr inbounds %struct.UText, %struct.UText* %4740, i64 0, i32 7
  %4748 = load i64, i64* %4747, align 8
  %4749 = sext i32 %4742 to i64
  %4750 = add nsw i64 %4748, %4749
  br label %4814

4751:                                             ; preds = %4739
  %4752 = getelementptr inbounds %struct.UText, %struct.UText* %4740, i64 0, i32 11
  %4753 = load %struct.UTextFuncs*, %struct.UTextFuncs** %4752, align 8
  %4754 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %4753, i64 0, i32 10
  %4755 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %4754, align 8
  %4756 = call i64 %4755(%struct.UText* %4740) #12
  br label %4814

4757:                                             ; preds = %4690
  %4758 = icmp eq i64 %4709, 0
  br i1 %4758, label %4759, label %4760

4759:                                             ; preds = %4757
  store i64 -1, i64* %4708, align 8
  br label %4826

4760:                                             ; preds = %4757
  %4761 = getelementptr inbounds %struct.UText, %struct.UText* %4697, i64 0, i32 7
  %4762 = load i64, i64* %4761, align 8
  %4763 = sub nsw i64 %4709, %4762
  %4764 = icmp sgt i64 %4763, -1
  br i1 %4764, label %4765, label %4779

4765:                                             ; preds = %4760
  %4766 = getelementptr inbounds %struct.UText, %struct.UText* %4697, i64 0, i32 6
  %4767 = load i32, i32* %4766, align 4
  %4768 = sext i32 %4767 to i64
  %4769 = icmp slt i64 %4763, %4768
  br i1 %4769, label %4770, label %4779

4770:                                             ; preds = %4765
  %4771 = getelementptr inbounds %struct.UText, %struct.UText* %4697, i64 0, i32 10
  %4772 = load i16*, i16** %4771, align 8
  %4773 = getelementptr inbounds i16, i16* %4772, i64 %4763
  %4774 = load i16, i16* %4773, align 2
  %4775 = icmp ult i16 %4774, -9216
  br i1 %4775, label %4776, label %4779

4776:                                             ; preds = %4770
  %4777 = trunc i64 %4763 to i32
  %4778 = getelementptr inbounds %struct.UText, %struct.UText* %4697, i64 0, i32 8
  store i32 %4777, i32* %4778, align 8
  br label %4780

4779:                                             ; preds = %4770, %4765, %4760
  call void @utext_setNativeIndex_69(%struct.UText* %4697, i64 %4709) #12
  br label %4780

4780:                                             ; preds = %4779, %4776
  %4781 = load %struct.UText*, %struct.UText** %103, align 8
  %4782 = getelementptr inbounds %struct.UText, %struct.UText* %4781, i64 0, i32 8
  %4783 = load i32, i32* %4782, align 8
  %4784 = icmp sgt i32 %4783, 0
  br i1 %4784, label %4785, label %4794

4785:                                             ; preds = %4780
  %4786 = getelementptr inbounds %struct.UText, %struct.UText* %4781, i64 0, i32 10
  %4787 = load i16*, i16** %4786, align 8
  %4788 = add nsw i32 %4783, -1
  %4789 = sext i32 %4788 to i64
  %4790 = getelementptr inbounds i16, i16* %4787, i64 %4789
  %4791 = load i16, i16* %4790, align 2
  %4792 = icmp ult i16 %4791, -10240
  br i1 %4792, label %4793, label %4794

4793:                                             ; preds = %4785
  store i32 %4788, i32* %4782, align 8
  br label %4796

4794:                                             ; preds = %4785, %4780
  %4795 = call i32 @utext_previous32_69(%struct.UText* %4781) #12
  br label %4796

4796:                                             ; preds = %4794, %4793
  %4797 = load %struct.UText*, %struct.UText** %103, align 8
  %4798 = getelementptr inbounds %struct.UText, %struct.UText* %4797, i64 0, i32 8
  %4799 = load i32, i32* %4798, align 8
  %4800 = getelementptr inbounds %struct.UText, %struct.UText* %4797, i64 0, i32 6
  %4801 = load i32, i32* %4800, align 4
  %4802 = icmp sgt i32 %4799, %4801
  br i1 %4802, label %4808, label %4803

4803:                                             ; preds = %4796
  %4804 = getelementptr inbounds %struct.UText, %struct.UText* %4797, i64 0, i32 7
  %4805 = load i64, i64* %4804, align 8
  %4806 = sext i32 %4799 to i64
  %4807 = add nsw i64 %4805, %4806
  br label %4814

4808:                                             ; preds = %4796
  %4809 = getelementptr inbounds %struct.UText, %struct.UText* %4797, i64 0, i32 11
  %4810 = load %struct.UTextFuncs*, %struct.UTextFuncs** %4809, align 8
  %4811 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %4810, i64 0, i32 10
  %4812 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %4811, align 8
  %4813 = call i64 %4812(%struct.UText* %4797) #12
  br label %4814

4814:                                             ; preds = %4803, %4808, %4746, %4751
  %4815 = phi i64 [ %4750, %4746 ], [ %4756, %4751 ], [ %4807, %4803 ], [ %4813, %4808 ]
  store i64 %4815, i64* %4708, align 8
  br label %4816

4816:                                             ; preds = %4814, %4711
  %4817 = phi i64 [ %4716, %4711 ], [ %4815, %4814 ]
  %4818 = icmp slt i64 %4817, 0
  br i1 %4818, label %4826, label %4819

4819:                                             ; preds = %4816
  %4820 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %4821 = load i64, i64* %4820, align 8
  %4822 = shl i64 %4704, 32
  %4823 = ashr exact i64 %4822, 32
  %4824 = sub nsw i64 %4821, %4823
  %4825 = icmp slt i64 %4817, %4824
  br i1 %4825, label %4826, label %4851

4826:                                             ; preds = %4759, %4819, %4816
  %4827 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4828 = load i32, i32* %38, align 8
  %4829 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4827, i64 0, i32 1
  %4830 = load i32, i32* %4829, align 8
  %4831 = sub nsw i32 %4830, %4828
  %4832 = icmp sgt i32 %4831, 0
  %4833 = select i1 %4832, i32 %4831, i32 0
  store i32 %4833, i32* %4829, align 8
  %4834 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4827, i64 0, i32 4
  %4835 = load i64*, i64** %4834, align 8
  %4836 = zext i32 %4833 to i64
  %4837 = getelementptr inbounds i64, i64* %4835, i64 %4836
  %4838 = sext i32 %4828 to i64
  %4839 = sub nsw i64 0, %4838
  %4840 = getelementptr inbounds i64, i64* %4837, i64 %4839
  %4841 = bitcast i64* %4840 to %"struct.icu_69::REStackFrame"*
  %4842 = load i64*, i64** %111, align 8
  %4843 = add nuw nsw i32 %151, 2
  %4844 = zext i32 %4843 to i64
  %4845 = getelementptr inbounds i64, i64* %4842, i64 %4844
  %4846 = load i64, i64* %4845, align 8
  store i64 %4846, i64* %112, align 8
  %4847 = add nuw nsw i32 %151, 3
  %4848 = zext i32 %4847 to i64
  %4849 = getelementptr inbounds i64, i64* %4842, i64 %4848
  %4850 = load i64, i64* %4849, align 8
  store i64 %4850, i64* %109, align 8
  br label %6488

4851:                                             ; preds = %4819
  %4852 = load i64, i64* %145, align 8
  %4853 = add nsw i64 %4852, -3
  %4854 = load i32, i32* %3, align 4
  %4855 = icmp slt i32 %4854, 1
  br i1 %4855, label %4856, label %5064

4856:                                             ; preds = %4851
  %4857 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %4858 = load i32, i32* %38, align 8
  %4859 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4857, i64 0, i32 1
  %4860 = load i32, i32* %4859, align 8
  %4861 = add nsw i32 %4860, %4858
  %4862 = icmp sgt i32 %4861, -1
  br i1 %4862, label %4863, label %4867

4863:                                             ; preds = %4856
  %4864 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4857, i64 0, i32 2
  %4865 = load i32, i32* %4864, align 4
  %4866 = icmp slt i32 %4865, %4861
  br i1 %4866, label %4867, label %4873

4867:                                             ; preds = %4863, %4856
  %4868 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %4857, i32 %4861, i32* dereferenceable(4) %3) #12
  %4869 = icmp eq i8 %4868, 0
  br i1 %4869, label %4880, label %4870

4870:                                             ; preds = %4867
  %4871 = load i32, i32* %4859, align 8
  %4872 = add nsw i32 %4871, %4858
  br label %4873

4873:                                             ; preds = %4870, %4863
  %4874 = phi i32 [ %4872, %4870 ], [ %4861, %4863 ]
  %4875 = phi i32 [ %4871, %4870 ], [ %4860, %4863 ]
  %4876 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4857, i64 0, i32 4
  %4877 = load i64*, i64** %4876, align 8
  %4878 = sext i32 %4875 to i64
  %4879 = getelementptr inbounds i64, i64* %4877, i64 %4878
  store i32 %4874, i32* %4859, align 8
  br label %4880

4880:                                             ; preds = %4873, %4867
  %4881 = phi i64* [ %4879, %4873 ], [ null, %4867 ]
  %4882 = load i32, i32* %3, align 4
  %4883 = icmp slt i32 %4882, 1
  br i1 %4883, label %4885, label %4884

4884:                                             ; preds = %4880
  store i32 66321, i32* %3, align 4
  br label %5064

4885:                                             ; preds = %4880
  %4886 = load i32, i32* %38, align 8
  %4887 = sext i32 %4886 to i64
  %4888 = sub nsw i64 0, %4887
  %4889 = getelementptr inbounds i64, i64* %4881, i64 %4888
  %4890 = shl nsw i64 %4887, 3
  %4891 = add nsw i64 %4890, -8
  %4892 = lshr exact i64 %4891, 3
  %4893 = add nuw nsw i64 %4892, 1
  %4894 = icmp ult i64 %4893, 4
  br i1 %4894, label %4988, label %4895

4895:                                             ; preds = %4885
  %4896 = getelementptr i64, i64* %4881, i64 1
  %4897 = shl nsw i64 %4887, 3
  %4898 = add nsw i64 %4897, -8
  %4899 = lshr exact i64 %4898, 3
  %4900 = getelementptr i64, i64* %4896, i64 %4899
  %4901 = getelementptr i64, i64* %4881, i64 1
  %4902 = sub nsw i64 %4899, %4887
  %4903 = getelementptr i64, i64* %4901, i64 %4902
  %4904 = icmp ult i64* %4881, %4903
  %4905 = icmp ult i64* %4889, %4900
  %4906 = and i1 %4904, %4905
  br i1 %4906, label %4988, label %4907

4907:                                             ; preds = %4895
  %4908 = and i64 %4893, 4611686018427387900
  %4909 = getelementptr i64, i64* %4889, i64 %4908
  %4910 = getelementptr i64, i64* %4881, i64 %4908
  %4911 = add nsw i64 %4908, -4
  %4912 = lshr exact i64 %4911, 2
  %4913 = add nuw nsw i64 %4912, 1
  %4914 = and i64 %4913, 3
  %4915 = icmp ult i64 %4911, 12
  br i1 %4915, label %4967, label %4916

4916:                                             ; preds = %4907
  %4917 = sub nsw i64 %4913, %4914
  br label %4918

4918:                                             ; preds = %4918, %4916
  %4919 = phi i64 [ 0, %4916 ], [ %4964, %4918 ]
  %4920 = phi i64 [ %4917, %4916 ], [ %4965, %4918 ]
  %4921 = getelementptr i64, i64* %4889, i64 %4919
  %4922 = getelementptr i64, i64* %4881, i64 %4919
  %4923 = bitcast i64* %4921 to <2 x i64>*
  %4924 = load <2 x i64>, <2 x i64>* %4923, align 8, !alias.scope !67
  %4925 = getelementptr i64, i64* %4921, i64 2
  %4926 = bitcast i64* %4925 to <2 x i64>*
  %4927 = load <2 x i64>, <2 x i64>* %4926, align 8, !alias.scope !67
  %4928 = bitcast i64* %4922 to <2 x i64>*
  store <2 x i64> %4924, <2 x i64>* %4928, align 8, !alias.scope !70, !noalias !67
  %4929 = getelementptr i64, i64* %4922, i64 2
  %4930 = bitcast i64* %4929 to <2 x i64>*
  store <2 x i64> %4927, <2 x i64>* %4930, align 8, !alias.scope !70, !noalias !67
  %4931 = or i64 %4919, 4
  %4932 = getelementptr i64, i64* %4889, i64 %4931
  %4933 = getelementptr i64, i64* %4881, i64 %4931
  %4934 = bitcast i64* %4932 to <2 x i64>*
  %4935 = load <2 x i64>, <2 x i64>* %4934, align 8, !alias.scope !67
  %4936 = getelementptr i64, i64* %4932, i64 2
  %4937 = bitcast i64* %4936 to <2 x i64>*
  %4938 = load <2 x i64>, <2 x i64>* %4937, align 8, !alias.scope !67
  %4939 = bitcast i64* %4933 to <2 x i64>*
  store <2 x i64> %4935, <2 x i64>* %4939, align 8, !alias.scope !70, !noalias !67
  %4940 = getelementptr i64, i64* %4933, i64 2
  %4941 = bitcast i64* %4940 to <2 x i64>*
  store <2 x i64> %4938, <2 x i64>* %4941, align 8, !alias.scope !70, !noalias !67
  %4942 = or i64 %4919, 8
  %4943 = getelementptr i64, i64* %4889, i64 %4942
  %4944 = getelementptr i64, i64* %4881, i64 %4942
  %4945 = bitcast i64* %4943 to <2 x i64>*
  %4946 = load <2 x i64>, <2 x i64>* %4945, align 8, !alias.scope !67
  %4947 = getelementptr i64, i64* %4943, i64 2
  %4948 = bitcast i64* %4947 to <2 x i64>*
  %4949 = load <2 x i64>, <2 x i64>* %4948, align 8, !alias.scope !67
  %4950 = bitcast i64* %4944 to <2 x i64>*
  store <2 x i64> %4946, <2 x i64>* %4950, align 8, !alias.scope !70, !noalias !67
  %4951 = getelementptr i64, i64* %4944, i64 2
  %4952 = bitcast i64* %4951 to <2 x i64>*
  store <2 x i64> %4949, <2 x i64>* %4952, align 8, !alias.scope !70, !noalias !67
  %4953 = or i64 %4919, 12
  %4954 = getelementptr i64, i64* %4889, i64 %4953
  %4955 = getelementptr i64, i64* %4881, i64 %4953
  %4956 = bitcast i64* %4954 to <2 x i64>*
  %4957 = load <2 x i64>, <2 x i64>* %4956, align 8, !alias.scope !67
  %4958 = getelementptr i64, i64* %4954, i64 2
  %4959 = bitcast i64* %4958 to <2 x i64>*
  %4960 = load <2 x i64>, <2 x i64>* %4959, align 8, !alias.scope !67
  %4961 = bitcast i64* %4955 to <2 x i64>*
  store <2 x i64> %4957, <2 x i64>* %4961, align 8, !alias.scope !70, !noalias !67
  %4962 = getelementptr i64, i64* %4955, i64 2
  %4963 = bitcast i64* %4962 to <2 x i64>*
  store <2 x i64> %4960, <2 x i64>* %4963, align 8, !alias.scope !70, !noalias !67
  %4964 = add i64 %4919, 16
  %4965 = add i64 %4920, -4
  %4966 = icmp eq i64 %4965, 0
  br i1 %4966, label %4967, label %4918, !llvm.loop !72

4967:                                             ; preds = %4918, %4907
  %4968 = phi i64 [ 0, %4907 ], [ %4964, %4918 ]
  %4969 = icmp eq i64 %4914, 0
  br i1 %4969, label %4986, label %4970

4970:                                             ; preds = %4967, %4970
  %4971 = phi i64 [ %4983, %4970 ], [ %4968, %4967 ]
  %4972 = phi i64 [ %4984, %4970 ], [ %4914, %4967 ]
  %4973 = getelementptr i64, i64* %4889, i64 %4971
  %4974 = getelementptr i64, i64* %4881, i64 %4971
  %4975 = bitcast i64* %4973 to <2 x i64>*
  %4976 = load <2 x i64>, <2 x i64>* %4975, align 8, !alias.scope !67
  %4977 = getelementptr i64, i64* %4973, i64 2
  %4978 = bitcast i64* %4977 to <2 x i64>*
  %4979 = load <2 x i64>, <2 x i64>* %4978, align 8, !alias.scope !67
  %4980 = bitcast i64* %4974 to <2 x i64>*
  store <2 x i64> %4976, <2 x i64>* %4980, align 8, !alias.scope !70, !noalias !67
  %4981 = getelementptr i64, i64* %4974, i64 2
  %4982 = bitcast i64* %4981 to <2 x i64>*
  store <2 x i64> %4979, <2 x i64>* %4982, align 8, !alias.scope !70, !noalias !67
  %4983 = add i64 %4971, 4
  %4984 = add i64 %4972, -1
  %4985 = icmp eq i64 %4984, 0
  br i1 %4985, label %4986, label %4970, !llvm.loop !73

4986:                                             ; preds = %4970, %4967
  %4987 = icmp eq i64 %4893, %4908
  br i1 %4987, label %5040, label %4988

4988:                                             ; preds = %4986, %4895, %4885
  %4989 = phi i64* [ %4889, %4895 ], [ %4889, %4885 ], [ %4909, %4986 ]
  %4990 = phi i64* [ %4881, %4895 ], [ %4881, %4885 ], [ %4910, %4986 ]
  %4991 = ptrtoint i64* %4989 to i64
  %4992 = getelementptr i64, i64* %4881, i64 -1
  %4993 = ptrtoint i64* %4992 to i64
  %4994 = sub i64 %4993, %4991
  %4995 = lshr i64 %4994, 3
  %4996 = add nuw nsw i64 %4995, 1
  %4997 = and i64 %4996, 7
  %4998 = icmp eq i64 %4997, 0
  br i1 %4998, label %5008, label %4999

4999:                                             ; preds = %4988, %4999
  %5000 = phi i64* [ %5003, %4999 ], [ %4989, %4988 ]
  %5001 = phi i64* [ %5005, %4999 ], [ %4990, %4988 ]
  %5002 = phi i64 [ %5006, %4999 ], [ %4997, %4988 ]
  %5003 = getelementptr inbounds i64, i64* %5000, i64 1
  %5004 = load i64, i64* %5000, align 8
  %5005 = getelementptr inbounds i64, i64* %5001, i64 1
  store i64 %5004, i64* %5001, align 8
  %5006 = add i64 %5002, -1
  %5007 = icmp eq i64 %5006, 0
  br i1 %5007, label %5008, label %4999, !llvm.loop !74

5008:                                             ; preds = %4999, %4988
  %5009 = phi i64* [ %4989, %4988 ], [ %5003, %4999 ]
  %5010 = phi i64* [ %4990, %4988 ], [ %5005, %4999 ]
  %5011 = icmp ult i64 %4994, 56
  br i1 %5011, label %5040, label %5012

5012:                                             ; preds = %5008, %5012
  %5013 = phi i64* [ %5036, %5012 ], [ %5009, %5008 ]
  %5014 = phi i64* [ %5038, %5012 ], [ %5010, %5008 ]
  %5015 = getelementptr inbounds i64, i64* %5013, i64 1
  %5016 = load i64, i64* %5013, align 8
  %5017 = getelementptr inbounds i64, i64* %5014, i64 1
  store i64 %5016, i64* %5014, align 8
  %5018 = getelementptr inbounds i64, i64* %5013, i64 2
  %5019 = load i64, i64* %5015, align 8
  %5020 = getelementptr inbounds i64, i64* %5014, i64 2
  store i64 %5019, i64* %5017, align 8
  %5021 = getelementptr inbounds i64, i64* %5013, i64 3
  %5022 = load i64, i64* %5018, align 8
  %5023 = getelementptr inbounds i64, i64* %5014, i64 3
  store i64 %5022, i64* %5020, align 8
  %5024 = getelementptr inbounds i64, i64* %5013, i64 4
  %5025 = load i64, i64* %5021, align 8
  %5026 = getelementptr inbounds i64, i64* %5014, i64 4
  store i64 %5025, i64* %5023, align 8
  %5027 = getelementptr inbounds i64, i64* %5013, i64 5
  %5028 = load i64, i64* %5024, align 8
  %5029 = getelementptr inbounds i64, i64* %5014, i64 5
  store i64 %5028, i64* %5026, align 8
  %5030 = getelementptr inbounds i64, i64* %5013, i64 6
  %5031 = load i64, i64* %5027, align 8
  %5032 = getelementptr inbounds i64, i64* %5014, i64 6
  store i64 %5031, i64* %5029, align 8
  %5033 = getelementptr inbounds i64, i64* %5013, i64 7
  %5034 = load i64, i64* %5030, align 8
  %5035 = getelementptr inbounds i64, i64* %5014, i64 7
  store i64 %5034, i64* %5032, align 8
  %5036 = getelementptr inbounds i64, i64* %5013, i64 8
  %5037 = load i64, i64* %5033, align 8
  %5038 = getelementptr inbounds i64, i64* %5014, i64 8
  store i64 %5037, i64* %5035, align 8
  %5039 = icmp eq i64* %5036, %4881
  br i1 %5039, label %5040, label %5012, !llvm.loop !75

5040:                                             ; preds = %5008, %5012, %4986
  %5041 = load i32, i32* %104, align 8
  %5042 = add nsw i32 %5041, -1
  store i32 %5042, i32* %104, align 8
  %5043 = icmp slt i32 %5041, 2
  br i1 %5043, label %5044, label %5061

5044:                                             ; preds = %5040
  store i32 10000, i32* %104, align 8
  %5045 = load i32, i32* %105, align 4
  %5046 = add nsw i32 %5045, 1
  store i32 %5046, i32* %105, align 4
  %5047 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %5048 = icmp eq i8 (i8*, i32)* %5047, null
  br i1 %5048, label %5054, label %5049

5049:                                             ; preds = %5044
  %5050 = load i8*, i8** %107, align 8
  %5051 = call signext i8 %5047(i8* %5050, i32 %5046) #12
  %5052 = icmp eq i8 %5051, 0
  br i1 %5052, label %5053, label %5054

5053:                                             ; preds = %5049
  store i32 66323, i32* %3, align 4
  br label %5061

5054:                                             ; preds = %5049, %5044
  %5055 = load i32, i32* %108, align 8
  %5056 = icmp sgt i32 %5055, 0
  br i1 %5056, label %5057, label %5061

5057:                                             ; preds = %5054
  %5058 = load i32, i32* %105, align 4
  %5059 = icmp slt i32 %5058, %5055
  br i1 %5059, label %5061, label %5060

5060:                                             ; preds = %5057
  store i32 66322, i32* %3, align 4
  br label %5061

5061:                                             ; preds = %5060, %5057, %5054, %5053, %5040
  %5062 = getelementptr inbounds i64, i64* %4889, i64 1
  store i64 %4853, i64* %5062, align 8
  %5063 = bitcast i64* %4881 to %"struct.icu_69::REStackFrame"*
  br label %5064

5064:                                             ; preds = %4851, %4884, %5061
  %5065 = phi %"struct.icu_69::REStackFrame"* [ %144, %4851 ], [ %144, %4884 ], [ %5063, %5061 ]
  %5066 = load i64, i64* %4708, align 8
  %5067 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %5065, i64 0, i32 0
  store i64 %5066, i64* %5067, align 8
  br label %6488

5068:                                             ; preds = %143
  %5069 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %5070 = load i64, i64* %5069, align 8
  %5071 = load i64, i64* %109, align 8
  %5072 = icmp eq i64 %5070, %5071
  br i1 %5072, label %5089, label %5073

5073:                                             ; preds = %5068
  %5074 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %5075 = load i32, i32* %38, align 8
  %5076 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5074, i64 0, i32 1
  %5077 = load i32, i32* %5076, align 8
  %5078 = sub nsw i32 %5077, %5075
  %5079 = icmp sgt i32 %5078, 0
  %5080 = select i1 %5079, i32 %5078, i32 0
  store i32 %5080, i32* %5076, align 8
  %5081 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5074, i64 0, i32 4
  %5082 = load i64*, i64** %5081, align 8
  %5083 = zext i32 %5080 to i64
  %5084 = getelementptr inbounds i64, i64* %5082, i64 %5083
  %5085 = sext i32 %5075 to i64
  %5086 = sub nsw i64 0, %5085
  %5087 = getelementptr inbounds i64, i64* %5084, i64 %5086
  %5088 = bitcast i64* %5087 to %"struct.icu_69::REStackFrame"*
  br label %6488

5089:                                             ; preds = %5068
  %5090 = load i64*, i64** %111, align 8
  %5091 = add nuw nsw i32 %151, 2
  %5092 = zext i32 %5091 to i64
  %5093 = getelementptr inbounds i64, i64* %5090, i64 %5092
  %5094 = load i64, i64* %5093, align 8
  store i64 %5094, i64* %112, align 8
  %5095 = add nuw nsw i32 %151, 3
  %5096 = zext i32 %5095 to i64
  %5097 = getelementptr inbounds i64, i64* %5090, i64 %5096
  %5098 = load i64, i64* %5097, align 8
  store i64 %5098, i64* %109, align 8
  br label %6488

5099:                                             ; preds = %143
  %5100 = add nsw i64 %146, 2
  store i64 %5100, i64* %145, align 8
  %5101 = getelementptr inbounds i64, i64* %16, i64 %152
  %5102 = load i64, i64* %5101, align 8
  %5103 = add nsw i64 %146, 3
  store i64 %5103, i64* %145, align 8
  %5104 = getelementptr inbounds i64, i64* %16, i64 %5100
  %5105 = load i64, i64* %5104, align 8
  %5106 = load %struct.UText*, %struct.UText** %103, align 8
  %5107 = getelementptr inbounds %struct.UText, %struct.UText* %5106, i64 0, i32 11
  %5108 = load %struct.UTextFuncs*, %struct.UTextFuncs** %5107, align 8
  %5109 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %5108, i64 0, i32 11
  %5110 = load i32 (%struct.UText*, i64)*, i32 (%struct.UText*, i64)** %5109, align 8
  %5111 = icmp eq i32 (%struct.UText*, i64)* %5110, null
  %5112 = mul i64 %5105, 3
  %5113 = select i1 %5111, i64 %5105, i64 %5112
  %5114 = add nsw i64 %146, 4
  store i64 %5114, i64* %145, align 8
  %5115 = getelementptr inbounds i64, i64* %16, i64 %5103
  %5116 = load i64, i64* %5115, align 8
  %5117 = and i64 %5116, 16777215
  %5118 = load i64*, i64** %111, align 8
  %5119 = add nuw nsw i32 %151, 4
  %5120 = zext i32 %5119 to i64
  %5121 = getelementptr inbounds i64, i64* %5118, i64 %5120
  %5122 = load i64, i64* %5121, align 8
  %5123 = icmp slt i64 %5122, 0
  br i1 %5123, label %5124, label %5170

5124:                                             ; preds = %5099
  %5125 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %5126 = load i64, i64* %5125, align 8
  %5127 = shl i64 %5102, 32
  %5128 = ashr exact i64 %5127, 32
  %5129 = sub nsw i64 %5126, %5128
  store i64 %5129, i64* %5121, align 8
  %5130 = icmp sgt i64 %5129, 0
  br i1 %5130, label %5131, label %5230

5131:                                             ; preds = %5124
  %5132 = load %struct.UText*, %struct.UText** %103, align 8
  %5133 = getelementptr inbounds %struct.UText, %struct.UText* %5132, i64 0, i32 7
  %5134 = load i64, i64* %5133, align 8
  %5135 = sub nsw i64 %5129, %5134
  %5136 = icmp sgt i64 %5135, -1
  br i1 %5136, label %5137, label %5151

5137:                                             ; preds = %5131
  %5138 = getelementptr inbounds %struct.UText, %struct.UText* %5132, i64 0, i32 6
  %5139 = load i32, i32* %5138, align 4
  %5140 = sext i32 %5139 to i64
  %5141 = icmp slt i64 %5135, %5140
  br i1 %5141, label %5142, label %5151

5142:                                             ; preds = %5137
  %5143 = getelementptr inbounds %struct.UText, %struct.UText* %5132, i64 0, i32 10
  %5144 = load i16*, i16** %5143, align 8
  %5145 = getelementptr inbounds i16, i16* %5144, i64 %5135
  %5146 = load i16, i16* %5145, align 2
  %5147 = icmp ult i16 %5146, -9216
  br i1 %5147, label %5148, label %5151

5148:                                             ; preds = %5142
  %5149 = trunc i64 %5135 to i32
  %5150 = getelementptr inbounds %struct.UText, %struct.UText* %5132, i64 0, i32 8
  store i32 %5149, i32* %5150, align 8
  br label %5152

5151:                                             ; preds = %5142, %5137, %5131
  call void @utext_setNativeIndex_69(%struct.UText* %5132, i64 %5129) #12
  br label %5152

5152:                                             ; preds = %5151, %5148
  %5153 = load %struct.UText*, %struct.UText** %103, align 8
  %5154 = getelementptr inbounds %struct.UText, %struct.UText* %5153, i64 0, i32 8
  %5155 = load i32, i32* %5154, align 8
  %5156 = getelementptr inbounds %struct.UText, %struct.UText* %5153, i64 0, i32 6
  %5157 = load i32, i32* %5156, align 4
  %5158 = icmp sgt i32 %5155, %5157
  br i1 %5158, label %5164, label %5159

5159:                                             ; preds = %5152
  %5160 = getelementptr inbounds %struct.UText, %struct.UText* %5153, i64 0, i32 7
  %5161 = load i64, i64* %5160, align 8
  %5162 = sext i32 %5155 to i64
  %5163 = add nsw i64 %5161, %5162
  br label %5228

5164:                                             ; preds = %5152
  %5165 = getelementptr inbounds %struct.UText, %struct.UText* %5153, i64 0, i32 11
  %5166 = load %struct.UTextFuncs*, %struct.UTextFuncs** %5165, align 8
  %5167 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %5166, i64 0, i32 10
  %5168 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %5167, align 8
  %5169 = call i64 %5168(%struct.UText* %5153) #12
  br label %5228

5170:                                             ; preds = %5099
  %5171 = icmp eq i64 %5122, 0
  br i1 %5171, label %5172, label %5173

5172:                                             ; preds = %5170
  store i64 -1, i64* %5121, align 8
  br label %5240

5173:                                             ; preds = %5170
  %5174 = load %struct.UText*, %struct.UText** %103, align 8
  %5175 = getelementptr inbounds %struct.UText, %struct.UText* %5174, i64 0, i32 7
  %5176 = load i64, i64* %5175, align 8
  %5177 = sub nsw i64 %5122, %5176
  %5178 = icmp sgt i64 %5177, -1
  br i1 %5178, label %5179, label %5193

5179:                                             ; preds = %5173
  %5180 = getelementptr inbounds %struct.UText, %struct.UText* %5174, i64 0, i32 6
  %5181 = load i32, i32* %5180, align 4
  %5182 = sext i32 %5181 to i64
  %5183 = icmp slt i64 %5177, %5182
  br i1 %5183, label %5184, label %5193

5184:                                             ; preds = %5179
  %5185 = getelementptr inbounds %struct.UText, %struct.UText* %5174, i64 0, i32 10
  %5186 = load i16*, i16** %5185, align 8
  %5187 = getelementptr inbounds i16, i16* %5186, i64 %5177
  %5188 = load i16, i16* %5187, align 2
  %5189 = icmp ult i16 %5188, -9216
  br i1 %5189, label %5190, label %5193

5190:                                             ; preds = %5184
  %5191 = trunc i64 %5177 to i32
  %5192 = getelementptr inbounds %struct.UText, %struct.UText* %5174, i64 0, i32 8
  store i32 %5191, i32* %5192, align 8
  br label %5194

5193:                                             ; preds = %5184, %5179, %5173
  call void @utext_setNativeIndex_69(%struct.UText* %5174, i64 %5122) #12
  br label %5194

5194:                                             ; preds = %5193, %5190
  %5195 = load %struct.UText*, %struct.UText** %103, align 8
  %5196 = getelementptr inbounds %struct.UText, %struct.UText* %5195, i64 0, i32 8
  %5197 = load i32, i32* %5196, align 8
  %5198 = icmp sgt i32 %5197, 0
  br i1 %5198, label %5199, label %5208

5199:                                             ; preds = %5194
  %5200 = getelementptr inbounds %struct.UText, %struct.UText* %5195, i64 0, i32 10
  %5201 = load i16*, i16** %5200, align 8
  %5202 = add nsw i32 %5197, -1
  %5203 = sext i32 %5202 to i64
  %5204 = getelementptr inbounds i16, i16* %5201, i64 %5203
  %5205 = load i16, i16* %5204, align 2
  %5206 = icmp ult i16 %5205, -10240
  br i1 %5206, label %5207, label %5208

5207:                                             ; preds = %5199
  store i32 %5202, i32* %5196, align 8
  br label %5210

5208:                                             ; preds = %5199, %5194
  %5209 = call i32 @utext_previous32_69(%struct.UText* %5195) #12
  br label %5210

5210:                                             ; preds = %5208, %5207
  %5211 = load %struct.UText*, %struct.UText** %103, align 8
  %5212 = getelementptr inbounds %struct.UText, %struct.UText* %5211, i64 0, i32 8
  %5213 = load i32, i32* %5212, align 8
  %5214 = getelementptr inbounds %struct.UText, %struct.UText* %5211, i64 0, i32 6
  %5215 = load i32, i32* %5214, align 4
  %5216 = icmp sgt i32 %5213, %5215
  br i1 %5216, label %5222, label %5217

5217:                                             ; preds = %5210
  %5218 = getelementptr inbounds %struct.UText, %struct.UText* %5211, i64 0, i32 7
  %5219 = load i64, i64* %5218, align 8
  %5220 = sext i32 %5213 to i64
  %5221 = add nsw i64 %5219, %5220
  br label %5228

5222:                                             ; preds = %5210
  %5223 = getelementptr inbounds %struct.UText, %struct.UText* %5211, i64 0, i32 11
  %5224 = load %struct.UTextFuncs*, %struct.UTextFuncs** %5223, align 8
  %5225 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %5224, i64 0, i32 10
  %5226 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %5225, align 8
  %5227 = call i64 %5226(%struct.UText* %5211) #12
  br label %5228

5228:                                             ; preds = %5217, %5222, %5159, %5164
  %5229 = phi i64 [ %5163, %5159 ], [ %5169, %5164 ], [ %5221, %5217 ], [ %5227, %5222 ]
  store i64 %5229, i64* %5121, align 8
  br label %5230

5230:                                             ; preds = %5228, %5124
  %5231 = phi i64 [ %5129, %5124 ], [ %5229, %5228 ]
  %5232 = icmp slt i64 %5231, 0
  br i1 %5232, label %5240, label %5233

5233:                                             ; preds = %5230
  %5234 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %5235 = load i64, i64* %5234, align 8
  %5236 = shl i64 %5113, 32
  %5237 = ashr exact i64 %5236, 32
  %5238 = sub nsw i64 %5235, %5237
  %5239 = icmp slt i64 %5231, %5238
  br i1 %5239, label %5240, label %5250

5240:                                             ; preds = %5172, %5233, %5230
  %5241 = load i64*, i64** %111, align 8
  %5242 = add nuw nsw i32 %151, 2
  %5243 = zext i32 %5242 to i64
  %5244 = getelementptr inbounds i64, i64* %5241, i64 %5243
  %5245 = load i64, i64* %5244, align 8
  store i64 %5245, i64* %112, align 8
  %5246 = add nuw nsw i32 %151, 3
  %5247 = zext i32 %5246 to i64
  %5248 = getelementptr inbounds i64, i64* %5241, i64 %5247
  %5249 = load i64, i64* %5248, align 8
  store i64 %5249, i64* %109, align 8
  store i64 %5117, i64* %145, align 8
  br label %6488

5250:                                             ; preds = %5233
  %5251 = load i64, i64* %145, align 8
  %5252 = add nsw i64 %5251, -4
  %5253 = load i32, i32* %3, align 4
  %5254 = icmp slt i32 %5253, 1
  br i1 %5254, label %5255, label %5463

5255:                                             ; preds = %5250
  %5256 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %5257 = load i32, i32* %38, align 8
  %5258 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5256, i64 0, i32 1
  %5259 = load i32, i32* %5258, align 8
  %5260 = add nsw i32 %5259, %5257
  %5261 = icmp sgt i32 %5260, -1
  br i1 %5261, label %5262, label %5266

5262:                                             ; preds = %5255
  %5263 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5256, i64 0, i32 2
  %5264 = load i32, i32* %5263, align 4
  %5265 = icmp slt i32 %5264, %5260
  br i1 %5265, label %5266, label %5272

5266:                                             ; preds = %5262, %5255
  %5267 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %5256, i32 %5260, i32* dereferenceable(4) %3) #12
  %5268 = icmp eq i8 %5267, 0
  br i1 %5268, label %5279, label %5269

5269:                                             ; preds = %5266
  %5270 = load i32, i32* %5258, align 8
  %5271 = add nsw i32 %5270, %5257
  br label %5272

5272:                                             ; preds = %5269, %5262
  %5273 = phi i32 [ %5271, %5269 ], [ %5260, %5262 ]
  %5274 = phi i32 [ %5270, %5269 ], [ %5259, %5262 ]
  %5275 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5256, i64 0, i32 4
  %5276 = load i64*, i64** %5275, align 8
  %5277 = sext i32 %5274 to i64
  %5278 = getelementptr inbounds i64, i64* %5276, i64 %5277
  store i32 %5273, i32* %5258, align 8
  br label %5279

5279:                                             ; preds = %5272, %5266
  %5280 = phi i64* [ %5278, %5272 ], [ null, %5266 ]
  %5281 = load i32, i32* %3, align 4
  %5282 = icmp slt i32 %5281, 1
  br i1 %5282, label %5284, label %5283

5283:                                             ; preds = %5279
  store i32 66321, i32* %3, align 4
  br label %5463

5284:                                             ; preds = %5279
  %5285 = load i32, i32* %38, align 8
  %5286 = sext i32 %5285 to i64
  %5287 = sub nsw i64 0, %5286
  %5288 = getelementptr inbounds i64, i64* %5280, i64 %5287
  %5289 = shl nsw i64 %5286, 3
  %5290 = add nsw i64 %5289, -8
  %5291 = lshr exact i64 %5290, 3
  %5292 = add nuw nsw i64 %5291, 1
  %5293 = icmp ult i64 %5292, 4
  br i1 %5293, label %5387, label %5294

5294:                                             ; preds = %5284
  %5295 = getelementptr i64, i64* %5280, i64 1
  %5296 = shl nsw i64 %5286, 3
  %5297 = add nsw i64 %5296, -8
  %5298 = lshr exact i64 %5297, 3
  %5299 = getelementptr i64, i64* %5295, i64 %5298
  %5300 = getelementptr i64, i64* %5280, i64 1
  %5301 = sub nsw i64 %5298, %5286
  %5302 = getelementptr i64, i64* %5300, i64 %5301
  %5303 = icmp ult i64* %5280, %5302
  %5304 = icmp ult i64* %5288, %5299
  %5305 = and i1 %5303, %5304
  br i1 %5305, label %5387, label %5306

5306:                                             ; preds = %5294
  %5307 = and i64 %5292, 4611686018427387900
  %5308 = getelementptr i64, i64* %5288, i64 %5307
  %5309 = getelementptr i64, i64* %5280, i64 %5307
  %5310 = add nsw i64 %5307, -4
  %5311 = lshr exact i64 %5310, 2
  %5312 = add nuw nsw i64 %5311, 1
  %5313 = and i64 %5312, 3
  %5314 = icmp ult i64 %5310, 12
  br i1 %5314, label %5366, label %5315

5315:                                             ; preds = %5306
  %5316 = sub nsw i64 %5312, %5313
  br label %5317

5317:                                             ; preds = %5317, %5315
  %5318 = phi i64 [ 0, %5315 ], [ %5363, %5317 ]
  %5319 = phi i64 [ %5316, %5315 ], [ %5364, %5317 ]
  %5320 = getelementptr i64, i64* %5288, i64 %5318
  %5321 = getelementptr i64, i64* %5280, i64 %5318
  %5322 = bitcast i64* %5320 to <2 x i64>*
  %5323 = load <2 x i64>, <2 x i64>* %5322, align 8, !alias.scope !76
  %5324 = getelementptr i64, i64* %5320, i64 2
  %5325 = bitcast i64* %5324 to <2 x i64>*
  %5326 = load <2 x i64>, <2 x i64>* %5325, align 8, !alias.scope !76
  %5327 = bitcast i64* %5321 to <2 x i64>*
  store <2 x i64> %5323, <2 x i64>* %5327, align 8, !alias.scope !79, !noalias !76
  %5328 = getelementptr i64, i64* %5321, i64 2
  %5329 = bitcast i64* %5328 to <2 x i64>*
  store <2 x i64> %5326, <2 x i64>* %5329, align 8, !alias.scope !79, !noalias !76
  %5330 = or i64 %5318, 4
  %5331 = getelementptr i64, i64* %5288, i64 %5330
  %5332 = getelementptr i64, i64* %5280, i64 %5330
  %5333 = bitcast i64* %5331 to <2 x i64>*
  %5334 = load <2 x i64>, <2 x i64>* %5333, align 8, !alias.scope !76
  %5335 = getelementptr i64, i64* %5331, i64 2
  %5336 = bitcast i64* %5335 to <2 x i64>*
  %5337 = load <2 x i64>, <2 x i64>* %5336, align 8, !alias.scope !76
  %5338 = bitcast i64* %5332 to <2 x i64>*
  store <2 x i64> %5334, <2 x i64>* %5338, align 8, !alias.scope !79, !noalias !76
  %5339 = getelementptr i64, i64* %5332, i64 2
  %5340 = bitcast i64* %5339 to <2 x i64>*
  store <2 x i64> %5337, <2 x i64>* %5340, align 8, !alias.scope !79, !noalias !76
  %5341 = or i64 %5318, 8
  %5342 = getelementptr i64, i64* %5288, i64 %5341
  %5343 = getelementptr i64, i64* %5280, i64 %5341
  %5344 = bitcast i64* %5342 to <2 x i64>*
  %5345 = load <2 x i64>, <2 x i64>* %5344, align 8, !alias.scope !76
  %5346 = getelementptr i64, i64* %5342, i64 2
  %5347 = bitcast i64* %5346 to <2 x i64>*
  %5348 = load <2 x i64>, <2 x i64>* %5347, align 8, !alias.scope !76
  %5349 = bitcast i64* %5343 to <2 x i64>*
  store <2 x i64> %5345, <2 x i64>* %5349, align 8, !alias.scope !79, !noalias !76
  %5350 = getelementptr i64, i64* %5343, i64 2
  %5351 = bitcast i64* %5350 to <2 x i64>*
  store <2 x i64> %5348, <2 x i64>* %5351, align 8, !alias.scope !79, !noalias !76
  %5352 = or i64 %5318, 12
  %5353 = getelementptr i64, i64* %5288, i64 %5352
  %5354 = getelementptr i64, i64* %5280, i64 %5352
  %5355 = bitcast i64* %5353 to <2 x i64>*
  %5356 = load <2 x i64>, <2 x i64>* %5355, align 8, !alias.scope !76
  %5357 = getelementptr i64, i64* %5353, i64 2
  %5358 = bitcast i64* %5357 to <2 x i64>*
  %5359 = load <2 x i64>, <2 x i64>* %5358, align 8, !alias.scope !76
  %5360 = bitcast i64* %5354 to <2 x i64>*
  store <2 x i64> %5356, <2 x i64>* %5360, align 8, !alias.scope !79, !noalias !76
  %5361 = getelementptr i64, i64* %5354, i64 2
  %5362 = bitcast i64* %5361 to <2 x i64>*
  store <2 x i64> %5359, <2 x i64>* %5362, align 8, !alias.scope !79, !noalias !76
  %5363 = add i64 %5318, 16
  %5364 = add i64 %5319, -4
  %5365 = icmp eq i64 %5364, 0
  br i1 %5365, label %5366, label %5317, !llvm.loop !81

5366:                                             ; preds = %5317, %5306
  %5367 = phi i64 [ 0, %5306 ], [ %5363, %5317 ]
  %5368 = icmp eq i64 %5313, 0
  br i1 %5368, label %5385, label %5369

5369:                                             ; preds = %5366, %5369
  %5370 = phi i64 [ %5382, %5369 ], [ %5367, %5366 ]
  %5371 = phi i64 [ %5383, %5369 ], [ %5313, %5366 ]
  %5372 = getelementptr i64, i64* %5288, i64 %5370
  %5373 = getelementptr i64, i64* %5280, i64 %5370
  %5374 = bitcast i64* %5372 to <2 x i64>*
  %5375 = load <2 x i64>, <2 x i64>* %5374, align 8, !alias.scope !76
  %5376 = getelementptr i64, i64* %5372, i64 2
  %5377 = bitcast i64* %5376 to <2 x i64>*
  %5378 = load <2 x i64>, <2 x i64>* %5377, align 8, !alias.scope !76
  %5379 = bitcast i64* %5373 to <2 x i64>*
  store <2 x i64> %5375, <2 x i64>* %5379, align 8, !alias.scope !79, !noalias !76
  %5380 = getelementptr i64, i64* %5373, i64 2
  %5381 = bitcast i64* %5380 to <2 x i64>*
  store <2 x i64> %5378, <2 x i64>* %5381, align 8, !alias.scope !79, !noalias !76
  %5382 = add i64 %5370, 4
  %5383 = add i64 %5371, -1
  %5384 = icmp eq i64 %5383, 0
  br i1 %5384, label %5385, label %5369, !llvm.loop !82

5385:                                             ; preds = %5369, %5366
  %5386 = icmp eq i64 %5292, %5307
  br i1 %5386, label %5439, label %5387

5387:                                             ; preds = %5385, %5294, %5284
  %5388 = phi i64* [ %5288, %5294 ], [ %5288, %5284 ], [ %5308, %5385 ]
  %5389 = phi i64* [ %5280, %5294 ], [ %5280, %5284 ], [ %5309, %5385 ]
  %5390 = ptrtoint i64* %5388 to i64
  %5391 = getelementptr i64, i64* %5280, i64 -1
  %5392 = ptrtoint i64* %5391 to i64
  %5393 = sub i64 %5392, %5390
  %5394 = lshr i64 %5393, 3
  %5395 = add nuw nsw i64 %5394, 1
  %5396 = and i64 %5395, 7
  %5397 = icmp eq i64 %5396, 0
  br i1 %5397, label %5407, label %5398

5398:                                             ; preds = %5387, %5398
  %5399 = phi i64* [ %5402, %5398 ], [ %5388, %5387 ]
  %5400 = phi i64* [ %5404, %5398 ], [ %5389, %5387 ]
  %5401 = phi i64 [ %5405, %5398 ], [ %5396, %5387 ]
  %5402 = getelementptr inbounds i64, i64* %5399, i64 1
  %5403 = load i64, i64* %5399, align 8
  %5404 = getelementptr inbounds i64, i64* %5400, i64 1
  store i64 %5403, i64* %5400, align 8
  %5405 = add i64 %5401, -1
  %5406 = icmp eq i64 %5405, 0
  br i1 %5406, label %5407, label %5398, !llvm.loop !83

5407:                                             ; preds = %5398, %5387
  %5408 = phi i64* [ %5388, %5387 ], [ %5402, %5398 ]
  %5409 = phi i64* [ %5389, %5387 ], [ %5404, %5398 ]
  %5410 = icmp ult i64 %5393, 56
  br i1 %5410, label %5439, label %5411

5411:                                             ; preds = %5407, %5411
  %5412 = phi i64* [ %5435, %5411 ], [ %5408, %5407 ]
  %5413 = phi i64* [ %5437, %5411 ], [ %5409, %5407 ]
  %5414 = getelementptr inbounds i64, i64* %5412, i64 1
  %5415 = load i64, i64* %5412, align 8
  %5416 = getelementptr inbounds i64, i64* %5413, i64 1
  store i64 %5415, i64* %5413, align 8
  %5417 = getelementptr inbounds i64, i64* %5412, i64 2
  %5418 = load i64, i64* %5414, align 8
  %5419 = getelementptr inbounds i64, i64* %5413, i64 2
  store i64 %5418, i64* %5416, align 8
  %5420 = getelementptr inbounds i64, i64* %5412, i64 3
  %5421 = load i64, i64* %5417, align 8
  %5422 = getelementptr inbounds i64, i64* %5413, i64 3
  store i64 %5421, i64* %5419, align 8
  %5423 = getelementptr inbounds i64, i64* %5412, i64 4
  %5424 = load i64, i64* %5420, align 8
  %5425 = getelementptr inbounds i64, i64* %5413, i64 4
  store i64 %5424, i64* %5422, align 8
  %5426 = getelementptr inbounds i64, i64* %5412, i64 5
  %5427 = load i64, i64* %5423, align 8
  %5428 = getelementptr inbounds i64, i64* %5413, i64 5
  store i64 %5427, i64* %5425, align 8
  %5429 = getelementptr inbounds i64, i64* %5412, i64 6
  %5430 = load i64, i64* %5426, align 8
  %5431 = getelementptr inbounds i64, i64* %5413, i64 6
  store i64 %5430, i64* %5428, align 8
  %5432 = getelementptr inbounds i64, i64* %5412, i64 7
  %5433 = load i64, i64* %5429, align 8
  %5434 = getelementptr inbounds i64, i64* %5413, i64 7
  store i64 %5433, i64* %5431, align 8
  %5435 = getelementptr inbounds i64, i64* %5412, i64 8
  %5436 = load i64, i64* %5432, align 8
  %5437 = getelementptr inbounds i64, i64* %5413, i64 8
  store i64 %5436, i64* %5434, align 8
  %5438 = icmp eq i64* %5435, %5280
  br i1 %5438, label %5439, label %5411, !llvm.loop !84

5439:                                             ; preds = %5407, %5411, %5385
  %5440 = load i32, i32* %104, align 8
  %5441 = add nsw i32 %5440, -1
  store i32 %5441, i32* %104, align 8
  %5442 = icmp slt i32 %5440, 2
  br i1 %5442, label %5443, label %5460

5443:                                             ; preds = %5439
  store i32 10000, i32* %104, align 8
  %5444 = load i32, i32* %105, align 4
  %5445 = add nsw i32 %5444, 1
  store i32 %5445, i32* %105, align 4
  %5446 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %5447 = icmp eq i8 (i8*, i32)* %5446, null
  br i1 %5447, label %5453, label %5448

5448:                                             ; preds = %5443
  %5449 = load i8*, i8** %107, align 8
  %5450 = call signext i8 %5446(i8* %5449, i32 %5445) #12
  %5451 = icmp eq i8 %5450, 0
  br i1 %5451, label %5452, label %5453

5452:                                             ; preds = %5448
  store i32 66323, i32* %3, align 4
  br label %5460

5453:                                             ; preds = %5448, %5443
  %5454 = load i32, i32* %108, align 8
  %5455 = icmp sgt i32 %5454, 0
  br i1 %5455, label %5456, label %5460

5456:                                             ; preds = %5453
  %5457 = load i32, i32* %105, align 4
  %5458 = icmp slt i32 %5457, %5454
  br i1 %5458, label %5460, label %5459

5459:                                             ; preds = %5456
  store i32 66322, i32* %3, align 4
  br label %5460

5460:                                             ; preds = %5459, %5456, %5453, %5452, %5439
  %5461 = getelementptr inbounds i64, i64* %5288, i64 1
  store i64 %5252, i64* %5461, align 8
  %5462 = bitcast i64* %5280 to %"struct.icu_69::REStackFrame"*
  br label %5463

5463:                                             ; preds = %5250, %5283, %5460
  %5464 = phi %"struct.icu_69::REStackFrame"* [ %144, %5250 ], [ %144, %5283 ], [ %5462, %5460 ]
  %5465 = load i64, i64* %5121, align 8
  %5466 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %5464, i64 0, i32 0
  store i64 %5465, i64* %5466, align 8
  br label %6488

5467:                                             ; preds = %143
  %5468 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %5469 = load i64, i64* %5468, align 8
  %5470 = load i64, i64* %109, align 8
  %5471 = icmp eq i64 %5469, %5470
  br i1 %5471, label %5488, label %5472

5472:                                             ; preds = %5467
  %5473 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %5474 = load i32, i32* %38, align 8
  %5475 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5473, i64 0, i32 1
  %5476 = load i32, i32* %5475, align 8
  %5477 = sub nsw i32 %5476, %5474
  %5478 = icmp sgt i32 %5477, 0
  %5479 = select i1 %5478, i32 %5477, i32 0
  store i32 %5479, i32* %5475, align 8
  %5480 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5473, i64 0, i32 4
  %5481 = load i64*, i64** %5480, align 8
  %5482 = zext i32 %5479 to i64
  %5483 = getelementptr inbounds i64, i64* %5481, i64 %5482
  %5484 = sext i32 %5474 to i64
  %5485 = sub nsw i64 0, %5484
  %5486 = getelementptr inbounds i64, i64* %5483, i64 %5485
  %5487 = bitcast i64* %5486 to %"struct.icu_69::REStackFrame"*
  br label %6488

5488:                                             ; preds = %5467
  %5489 = load i64*, i64** %111, align 8
  %5490 = add nuw nsw i32 %151, 2
  %5491 = zext i32 %5490 to i64
  %5492 = getelementptr inbounds i64, i64* %5489, i64 %5491
  %5493 = load i64, i64* %5492, align 8
  store i64 %5493, i64* %112, align 8
  %5494 = add nuw nsw i32 %151, 3
  %5495 = zext i32 %5494 to i64
  %5496 = getelementptr inbounds i64, i64* %5489, i64 %5495
  %5497 = load i64, i64* %5496, align 8
  store i64 %5497, i64* %109, align 8
  %5498 = zext i32 %151 to i64
  %5499 = getelementptr inbounds i64, i64* %5489, i64 %5498
  %5500 = load i64, i64* %5499, align 8
  %5501 = trunc i64 %5500 to i32
  %5502 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  call void @_ZN6icu_699UVector647setSizeEi(%"class.icu_69::UVector64"* %5502, i32 %5501) #12
  %5503 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %5504 = load i32, i32* %38, align 8
  %5505 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5503, i64 0, i32 1
  %5506 = load i32, i32* %5505, align 8
  %5507 = sub nsw i32 %5506, %5504
  %5508 = icmp sgt i32 %5507, 0
  %5509 = select i1 %5508, i32 %5507, i32 0
  store i32 %5509, i32* %5505, align 8
  %5510 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5503, i64 0, i32 4
  %5511 = load i64*, i64** %5510, align 8
  %5512 = zext i32 %5509 to i64
  %5513 = getelementptr inbounds i64, i64* %5511, i64 %5512
  %5514 = sext i32 %5504 to i64
  %5515 = sub nsw i64 0, %5514
  %5516 = getelementptr inbounds i64, i64* %5513, i64 %5515
  %5517 = bitcast i64* %5516 to %"struct.icu_69::REStackFrame"*
  br label %6488

5518:                                             ; preds = %143
  %5519 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %5520 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %5519, i64 0, i32 7
  %5521 = load %"struct.icu_69::Regex8BitSet"*, %"struct.icu_69::Regex8BitSet"** %5520, align 8
  %5522 = zext i32 %151 to i64
  %5523 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %35, i32 %151) #12
  %5524 = bitcast i8* %5523 to %"class.icu_69::UnicodeSet"*
  %5525 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %5526 = load i64, i64* %5525, align 8
  %5527 = load %struct.UText*, %struct.UText** %103, align 8
  %5528 = getelementptr inbounds %struct.UText, %struct.UText* %5527, i64 0, i32 7
  %5529 = load i64, i64* %5528, align 8
  %5530 = sub nsw i64 %5526, %5529
  %5531 = icmp sgt i64 %5530, -1
  br i1 %5531, label %5532, label %5546

5532:                                             ; preds = %5518
  %5533 = getelementptr inbounds %struct.UText, %struct.UText* %5527, i64 0, i32 6
  %5534 = load i32, i32* %5533, align 4
  %5535 = sext i32 %5534 to i64
  %5536 = icmp slt i64 %5530, %5535
  br i1 %5536, label %5537, label %5546

5537:                                             ; preds = %5532
  %5538 = getelementptr inbounds %struct.UText, %struct.UText* %5527, i64 0, i32 10
  %5539 = load i16*, i16** %5538, align 8
  %5540 = getelementptr inbounds i16, i16* %5539, i64 %5530
  %5541 = load i16, i16* %5540, align 2
  %5542 = icmp ult i16 %5541, -9216
  br i1 %5542, label %5543, label %5546

5543:                                             ; preds = %5537
  %5544 = trunc i64 %5530 to i32
  %5545 = getelementptr inbounds %struct.UText, %struct.UText* %5527, i64 0, i32 8
  store i32 %5544, i32* %5545, align 8
  br label %5547

5546:                                             ; preds = %5537, %5532, %5518
  call void @utext_setNativeIndex_69(%struct.UText* %5527, i64 %5526) #12
  br label %5547

5547:                                             ; preds = %5546, %5543
  %5548 = load i64, i64* %109, align 8
  %5549 = icmp slt i64 %5526, %5548
  br i1 %5549, label %5552, label %5550

5550:                                             ; preds = %5607, %5547
  %5551 = phi i64 [ %5526, %5547 ], [ %5608, %5607 ]
  store i8 1, i8* %110, align 8
  br label %5611

5552:                                             ; preds = %5547, %5607
  %5553 = phi i64 [ %5608, %5607 ], [ %5526, %5547 ]
  %5554 = load %struct.UText*, %struct.UText** %103, align 8
  %5555 = getelementptr inbounds %struct.UText, %struct.UText* %5554, i64 0, i32 8
  %5556 = load i32, i32* %5555, align 8
  %5557 = getelementptr inbounds %struct.UText, %struct.UText* %5554, i64 0, i32 9
  %5558 = load i32, i32* %5557, align 4
  %5559 = icmp slt i32 %5556, %5558
  br i1 %5559, label %5560, label %5571

5560:                                             ; preds = %5552
  %5561 = getelementptr inbounds %struct.UText, %struct.UText* %5554, i64 0, i32 10
  %5562 = load i16*, i16** %5561, align 8
  %5563 = sext i32 %5556 to i64
  %5564 = getelementptr inbounds i16, i16* %5562, i64 %5563
  %5565 = load i16, i16* %5564, align 2
  %5566 = icmp ult i16 %5565, -10240
  br i1 %5566, label %5567, label %5571

5567:                                             ; preds = %5560
  %5568 = add nsw i32 %5556, 1
  store i32 %5568, i32* %5555, align 8
  %5569 = load i16, i16* %5564, align 2
  %5570 = zext i16 %5569 to i32
  br label %5573

5571:                                             ; preds = %5560, %5552
  %5572 = call i32 @utext_next32_69(%struct.UText* %5554) #12
  br label %5573

5573:                                             ; preds = %5571, %5567
  %5574 = phi i32 [ %5570, %5567 ], [ %5572, %5571 ]
  %5575 = icmp slt i32 %5574, 256
  br i1 %5575, label %5576, label %5586

5576:                                             ; preds = %5573
  %5577 = ashr i32 %5574, 3
  %5578 = sext i32 %5577 to i64
  %5579 = getelementptr inbounds %"struct.icu_69::Regex8BitSet", %"struct.icu_69::Regex8BitSet"* %5521, i64 %5522, i32 0, i64 %5578
  %5580 = load i8, i8* %5579, align 1
  %5581 = sext i8 %5580 to i32
  %5582 = and i32 %5574, 7
  %5583 = shl i32 1, %5582
  %5584 = and i32 %5583, %5581
  %5585 = icmp eq i32 %5584, 0
  br i1 %5585, label %5611, label %5589

5586:                                             ; preds = %5573
  %5587 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %5524, i32 %5574) #12
  %5588 = icmp eq i8 %5587, 0
  br i1 %5588, label %5611, label %5589

5589:                                             ; preds = %5586, %5576
  %5590 = load %struct.UText*, %struct.UText** %103, align 8
  %5591 = getelementptr inbounds %struct.UText, %struct.UText* %5590, i64 0, i32 8
  %5592 = load i32, i32* %5591, align 8
  %5593 = getelementptr inbounds %struct.UText, %struct.UText* %5590, i64 0, i32 6
  %5594 = load i32, i32* %5593, align 4
  %5595 = icmp sgt i32 %5592, %5594
  br i1 %5595, label %5601, label %5596

5596:                                             ; preds = %5589
  %5597 = getelementptr inbounds %struct.UText, %struct.UText* %5590, i64 0, i32 7
  %5598 = load i64, i64* %5597, align 8
  %5599 = sext i32 %5592 to i64
  %5600 = add nsw i64 %5598, %5599
  br label %5607

5601:                                             ; preds = %5589
  %5602 = getelementptr inbounds %struct.UText, %struct.UText* %5590, i64 0, i32 11
  %5603 = load %struct.UTextFuncs*, %struct.UTextFuncs** %5602, align 8
  %5604 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %5603, i64 0, i32 10
  %5605 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %5604, align 8
  %5606 = call i64 %5605(%struct.UText* %5590) #12
  br label %5607

5607:                                             ; preds = %5596, %5601
  %5608 = phi i64 [ %5600, %5596 ], [ %5606, %5601 ]
  %5609 = load i64, i64* %109, align 8
  %5610 = icmp slt i64 %5608, %5609
  br i1 %5610, label %5552, label %5550

5611:                                             ; preds = %5586, %5576, %5550
  %5612 = phi i64 [ %5551, %5550 ], [ %5553, %5576 ], [ %5553, %5586 ]
  %5613 = load i64, i64* %5525, align 8
  %5614 = icmp eq i64 %5612, %5613
  %5615 = load i64, i64* %145, align 8
  br i1 %5614, label %5616, label %5618

5616:                                             ; preds = %5611
  %5617 = add nsw i64 %5615, 1
  store i64 %5617, i64* %145, align 8
  br label %6488

5618:                                             ; preds = %5611
  %5619 = getelementptr inbounds i64, i64* %16, i64 %5615
  %5620 = load i64, i64* %5619, align 8
  %5621 = and i64 %5620, 16777215
  %5622 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %5621
  store i64 %5613, i64* %5622, align 8
  store i64 %5612, i64* %5525, align 8
  %5623 = load i32, i32* %3, align 4
  %5624 = icmp slt i32 %5623, 1
  br i1 %5624, label %5625, label %5833

5625:                                             ; preds = %5618
  %5626 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %5627 = load i32, i32* %38, align 8
  %5628 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5626, i64 0, i32 1
  %5629 = load i32, i32* %5628, align 8
  %5630 = add nsw i32 %5629, %5627
  %5631 = icmp sgt i32 %5630, -1
  br i1 %5631, label %5632, label %5636

5632:                                             ; preds = %5625
  %5633 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5626, i64 0, i32 2
  %5634 = load i32, i32* %5633, align 4
  %5635 = icmp slt i32 %5634, %5630
  br i1 %5635, label %5636, label %5642

5636:                                             ; preds = %5632, %5625
  %5637 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %5626, i32 %5630, i32* dereferenceable(4) %3) #12
  %5638 = icmp eq i8 %5637, 0
  br i1 %5638, label %5649, label %5639

5639:                                             ; preds = %5636
  %5640 = load i32, i32* %5628, align 8
  %5641 = add nsw i32 %5640, %5627
  br label %5642

5642:                                             ; preds = %5639, %5632
  %5643 = phi i32 [ %5641, %5639 ], [ %5630, %5632 ]
  %5644 = phi i32 [ %5640, %5639 ], [ %5629, %5632 ]
  %5645 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5626, i64 0, i32 4
  %5646 = load i64*, i64** %5645, align 8
  %5647 = sext i32 %5644 to i64
  %5648 = getelementptr inbounds i64, i64* %5646, i64 %5647
  store i32 %5643, i32* %5628, align 8
  br label %5649

5649:                                             ; preds = %5642, %5636
  %5650 = phi i64* [ %5648, %5642 ], [ null, %5636 ]
  %5651 = load i32, i32* %3, align 4
  %5652 = icmp slt i32 %5651, 1
  br i1 %5652, label %5654, label %5653

5653:                                             ; preds = %5649
  store i32 66321, i32* %3, align 4
  br label %5833

5654:                                             ; preds = %5649
  %5655 = load i32, i32* %38, align 8
  %5656 = sext i32 %5655 to i64
  %5657 = sub nsw i64 0, %5656
  %5658 = getelementptr inbounds i64, i64* %5650, i64 %5657
  %5659 = shl nsw i64 %5656, 3
  %5660 = add nsw i64 %5659, -8
  %5661 = lshr exact i64 %5660, 3
  %5662 = add nuw nsw i64 %5661, 1
  %5663 = icmp ult i64 %5662, 4
  br i1 %5663, label %5757, label %5664

5664:                                             ; preds = %5654
  %5665 = getelementptr i64, i64* %5650, i64 1
  %5666 = shl nsw i64 %5656, 3
  %5667 = add nsw i64 %5666, -8
  %5668 = lshr exact i64 %5667, 3
  %5669 = getelementptr i64, i64* %5665, i64 %5668
  %5670 = getelementptr i64, i64* %5650, i64 1
  %5671 = sub nsw i64 %5668, %5656
  %5672 = getelementptr i64, i64* %5670, i64 %5671
  %5673 = icmp ult i64* %5650, %5672
  %5674 = icmp ult i64* %5658, %5669
  %5675 = and i1 %5673, %5674
  br i1 %5675, label %5757, label %5676

5676:                                             ; preds = %5664
  %5677 = and i64 %5662, 4611686018427387900
  %5678 = getelementptr i64, i64* %5658, i64 %5677
  %5679 = getelementptr i64, i64* %5650, i64 %5677
  %5680 = add nsw i64 %5677, -4
  %5681 = lshr exact i64 %5680, 2
  %5682 = add nuw nsw i64 %5681, 1
  %5683 = and i64 %5682, 3
  %5684 = icmp ult i64 %5680, 12
  br i1 %5684, label %5736, label %5685

5685:                                             ; preds = %5676
  %5686 = sub nsw i64 %5682, %5683
  br label %5687

5687:                                             ; preds = %5687, %5685
  %5688 = phi i64 [ 0, %5685 ], [ %5733, %5687 ]
  %5689 = phi i64 [ %5686, %5685 ], [ %5734, %5687 ]
  %5690 = getelementptr i64, i64* %5658, i64 %5688
  %5691 = getelementptr i64, i64* %5650, i64 %5688
  %5692 = bitcast i64* %5690 to <2 x i64>*
  %5693 = load <2 x i64>, <2 x i64>* %5692, align 8, !alias.scope !85
  %5694 = getelementptr i64, i64* %5690, i64 2
  %5695 = bitcast i64* %5694 to <2 x i64>*
  %5696 = load <2 x i64>, <2 x i64>* %5695, align 8, !alias.scope !85
  %5697 = bitcast i64* %5691 to <2 x i64>*
  store <2 x i64> %5693, <2 x i64>* %5697, align 8, !alias.scope !88, !noalias !85
  %5698 = getelementptr i64, i64* %5691, i64 2
  %5699 = bitcast i64* %5698 to <2 x i64>*
  store <2 x i64> %5696, <2 x i64>* %5699, align 8, !alias.scope !88, !noalias !85
  %5700 = or i64 %5688, 4
  %5701 = getelementptr i64, i64* %5658, i64 %5700
  %5702 = getelementptr i64, i64* %5650, i64 %5700
  %5703 = bitcast i64* %5701 to <2 x i64>*
  %5704 = load <2 x i64>, <2 x i64>* %5703, align 8, !alias.scope !85
  %5705 = getelementptr i64, i64* %5701, i64 2
  %5706 = bitcast i64* %5705 to <2 x i64>*
  %5707 = load <2 x i64>, <2 x i64>* %5706, align 8, !alias.scope !85
  %5708 = bitcast i64* %5702 to <2 x i64>*
  store <2 x i64> %5704, <2 x i64>* %5708, align 8, !alias.scope !88, !noalias !85
  %5709 = getelementptr i64, i64* %5702, i64 2
  %5710 = bitcast i64* %5709 to <2 x i64>*
  store <2 x i64> %5707, <2 x i64>* %5710, align 8, !alias.scope !88, !noalias !85
  %5711 = or i64 %5688, 8
  %5712 = getelementptr i64, i64* %5658, i64 %5711
  %5713 = getelementptr i64, i64* %5650, i64 %5711
  %5714 = bitcast i64* %5712 to <2 x i64>*
  %5715 = load <2 x i64>, <2 x i64>* %5714, align 8, !alias.scope !85
  %5716 = getelementptr i64, i64* %5712, i64 2
  %5717 = bitcast i64* %5716 to <2 x i64>*
  %5718 = load <2 x i64>, <2 x i64>* %5717, align 8, !alias.scope !85
  %5719 = bitcast i64* %5713 to <2 x i64>*
  store <2 x i64> %5715, <2 x i64>* %5719, align 8, !alias.scope !88, !noalias !85
  %5720 = getelementptr i64, i64* %5713, i64 2
  %5721 = bitcast i64* %5720 to <2 x i64>*
  store <2 x i64> %5718, <2 x i64>* %5721, align 8, !alias.scope !88, !noalias !85
  %5722 = or i64 %5688, 12
  %5723 = getelementptr i64, i64* %5658, i64 %5722
  %5724 = getelementptr i64, i64* %5650, i64 %5722
  %5725 = bitcast i64* %5723 to <2 x i64>*
  %5726 = load <2 x i64>, <2 x i64>* %5725, align 8, !alias.scope !85
  %5727 = getelementptr i64, i64* %5723, i64 2
  %5728 = bitcast i64* %5727 to <2 x i64>*
  %5729 = load <2 x i64>, <2 x i64>* %5728, align 8, !alias.scope !85
  %5730 = bitcast i64* %5724 to <2 x i64>*
  store <2 x i64> %5726, <2 x i64>* %5730, align 8, !alias.scope !88, !noalias !85
  %5731 = getelementptr i64, i64* %5724, i64 2
  %5732 = bitcast i64* %5731 to <2 x i64>*
  store <2 x i64> %5729, <2 x i64>* %5732, align 8, !alias.scope !88, !noalias !85
  %5733 = add i64 %5688, 16
  %5734 = add i64 %5689, -4
  %5735 = icmp eq i64 %5734, 0
  br i1 %5735, label %5736, label %5687, !llvm.loop !90

5736:                                             ; preds = %5687, %5676
  %5737 = phi i64 [ 0, %5676 ], [ %5733, %5687 ]
  %5738 = icmp eq i64 %5683, 0
  br i1 %5738, label %5755, label %5739

5739:                                             ; preds = %5736, %5739
  %5740 = phi i64 [ %5752, %5739 ], [ %5737, %5736 ]
  %5741 = phi i64 [ %5753, %5739 ], [ %5683, %5736 ]
  %5742 = getelementptr i64, i64* %5658, i64 %5740
  %5743 = getelementptr i64, i64* %5650, i64 %5740
  %5744 = bitcast i64* %5742 to <2 x i64>*
  %5745 = load <2 x i64>, <2 x i64>* %5744, align 8, !alias.scope !85
  %5746 = getelementptr i64, i64* %5742, i64 2
  %5747 = bitcast i64* %5746 to <2 x i64>*
  %5748 = load <2 x i64>, <2 x i64>* %5747, align 8, !alias.scope !85
  %5749 = bitcast i64* %5743 to <2 x i64>*
  store <2 x i64> %5745, <2 x i64>* %5749, align 8, !alias.scope !88, !noalias !85
  %5750 = getelementptr i64, i64* %5743, i64 2
  %5751 = bitcast i64* %5750 to <2 x i64>*
  store <2 x i64> %5748, <2 x i64>* %5751, align 8, !alias.scope !88, !noalias !85
  %5752 = add i64 %5740, 4
  %5753 = add i64 %5741, -1
  %5754 = icmp eq i64 %5753, 0
  br i1 %5754, label %5755, label %5739, !llvm.loop !91

5755:                                             ; preds = %5739, %5736
  %5756 = icmp eq i64 %5662, %5677
  br i1 %5756, label %5809, label %5757

5757:                                             ; preds = %5755, %5664, %5654
  %5758 = phi i64* [ %5658, %5664 ], [ %5658, %5654 ], [ %5678, %5755 ]
  %5759 = phi i64* [ %5650, %5664 ], [ %5650, %5654 ], [ %5679, %5755 ]
  %5760 = ptrtoint i64* %5758 to i64
  %5761 = getelementptr i64, i64* %5650, i64 -1
  %5762 = ptrtoint i64* %5761 to i64
  %5763 = sub i64 %5762, %5760
  %5764 = lshr i64 %5763, 3
  %5765 = add nuw nsw i64 %5764, 1
  %5766 = and i64 %5765, 7
  %5767 = icmp eq i64 %5766, 0
  br i1 %5767, label %5777, label %5768

5768:                                             ; preds = %5757, %5768
  %5769 = phi i64* [ %5772, %5768 ], [ %5758, %5757 ]
  %5770 = phi i64* [ %5774, %5768 ], [ %5759, %5757 ]
  %5771 = phi i64 [ %5775, %5768 ], [ %5766, %5757 ]
  %5772 = getelementptr inbounds i64, i64* %5769, i64 1
  %5773 = load i64, i64* %5769, align 8
  %5774 = getelementptr inbounds i64, i64* %5770, i64 1
  store i64 %5773, i64* %5770, align 8
  %5775 = add i64 %5771, -1
  %5776 = icmp eq i64 %5775, 0
  br i1 %5776, label %5777, label %5768, !llvm.loop !92

5777:                                             ; preds = %5768, %5757
  %5778 = phi i64* [ %5758, %5757 ], [ %5772, %5768 ]
  %5779 = phi i64* [ %5759, %5757 ], [ %5774, %5768 ]
  %5780 = icmp ult i64 %5763, 56
  br i1 %5780, label %5809, label %5781

5781:                                             ; preds = %5777, %5781
  %5782 = phi i64* [ %5805, %5781 ], [ %5778, %5777 ]
  %5783 = phi i64* [ %5807, %5781 ], [ %5779, %5777 ]
  %5784 = getelementptr inbounds i64, i64* %5782, i64 1
  %5785 = load i64, i64* %5782, align 8
  %5786 = getelementptr inbounds i64, i64* %5783, i64 1
  store i64 %5785, i64* %5783, align 8
  %5787 = getelementptr inbounds i64, i64* %5782, i64 2
  %5788 = load i64, i64* %5784, align 8
  %5789 = getelementptr inbounds i64, i64* %5783, i64 2
  store i64 %5788, i64* %5786, align 8
  %5790 = getelementptr inbounds i64, i64* %5782, i64 3
  %5791 = load i64, i64* %5787, align 8
  %5792 = getelementptr inbounds i64, i64* %5783, i64 3
  store i64 %5791, i64* %5789, align 8
  %5793 = getelementptr inbounds i64, i64* %5782, i64 4
  %5794 = load i64, i64* %5790, align 8
  %5795 = getelementptr inbounds i64, i64* %5783, i64 4
  store i64 %5794, i64* %5792, align 8
  %5796 = getelementptr inbounds i64, i64* %5782, i64 5
  %5797 = load i64, i64* %5793, align 8
  %5798 = getelementptr inbounds i64, i64* %5783, i64 5
  store i64 %5797, i64* %5795, align 8
  %5799 = getelementptr inbounds i64, i64* %5782, i64 6
  %5800 = load i64, i64* %5796, align 8
  %5801 = getelementptr inbounds i64, i64* %5783, i64 6
  store i64 %5800, i64* %5798, align 8
  %5802 = getelementptr inbounds i64, i64* %5782, i64 7
  %5803 = load i64, i64* %5799, align 8
  %5804 = getelementptr inbounds i64, i64* %5783, i64 7
  store i64 %5803, i64* %5801, align 8
  %5805 = getelementptr inbounds i64, i64* %5782, i64 8
  %5806 = load i64, i64* %5802, align 8
  %5807 = getelementptr inbounds i64, i64* %5783, i64 8
  store i64 %5806, i64* %5804, align 8
  %5808 = icmp eq i64* %5805, %5650
  br i1 %5808, label %5809, label %5781, !llvm.loop !93

5809:                                             ; preds = %5777, %5781, %5755
  %5810 = load i32, i32* %104, align 8
  %5811 = add nsw i32 %5810, -1
  store i32 %5811, i32* %104, align 8
  %5812 = icmp slt i32 %5810, 2
  br i1 %5812, label %5813, label %5830

5813:                                             ; preds = %5809
  store i32 10000, i32* %104, align 8
  %5814 = load i32, i32* %105, align 4
  %5815 = add nsw i32 %5814, 1
  store i32 %5815, i32* %105, align 4
  %5816 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %5817 = icmp eq i8 (i8*, i32)* %5816, null
  br i1 %5817, label %5823, label %5818

5818:                                             ; preds = %5813
  %5819 = load i8*, i8** %107, align 8
  %5820 = call signext i8 %5816(i8* %5819, i32 %5815) #12
  %5821 = icmp eq i8 %5820, 0
  br i1 %5821, label %5822, label %5823

5822:                                             ; preds = %5818
  store i32 66323, i32* %3, align 4
  br label %5830

5823:                                             ; preds = %5818, %5813
  %5824 = load i32, i32* %108, align 8
  %5825 = icmp sgt i32 %5824, 0
  br i1 %5825, label %5826, label %5830

5826:                                             ; preds = %5823
  %5827 = load i32, i32* %105, align 4
  %5828 = icmp slt i32 %5827, %5824
  br i1 %5828, label %5830, label %5829

5829:                                             ; preds = %5826
  store i32 66322, i32* %3, align 4
  br label %5830

5830:                                             ; preds = %5829, %5826, %5823, %5822, %5809
  %5831 = getelementptr inbounds i64, i64* %5658, i64 1
  store i64 %5615, i64* %5831, align 8
  %5832 = bitcast i64* %5650 to %"struct.icu_69::REStackFrame"*
  br label %5833

5833:                                             ; preds = %5618, %5653, %5830
  %5834 = phi %"struct.icu_69::REStackFrame"* [ %144, %5618 ], [ %144, %5653 ], [ %5832, %5830 ]
  %5835 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %5834, i64 0, i32 1
  %5836 = load i64, i64* %5835, align 8
  %5837 = add nsw i64 %5836, 1
  store i64 %5837, i64* %5835, align 8
  br label %6488

5838:                                             ; preds = %143
  %5839 = and i32 %149, 1
  %5840 = icmp eq i32 %5839, 0
  br i1 %5840, label %5843, label %5841

5841:                                             ; preds = %5838
  %5842 = load i64, i64* %109, align 8
  store i8 1, i8* %110, align 8
  br label %5927

5843:                                             ; preds = %5838
  %5844 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %5845 = load i64, i64* %5844, align 8
  %5846 = load %struct.UText*, %struct.UText** %103, align 8
  %5847 = getelementptr inbounds %struct.UText, %struct.UText* %5846, i64 0, i32 7
  %5848 = load i64, i64* %5847, align 8
  %5849 = sub nsw i64 %5845, %5848
  %5850 = icmp sgt i64 %5849, -1
  br i1 %5850, label %5851, label %5865

5851:                                             ; preds = %5843
  %5852 = getelementptr inbounds %struct.UText, %struct.UText* %5846, i64 0, i32 6
  %5853 = load i32, i32* %5852, align 4
  %5854 = sext i32 %5853 to i64
  %5855 = icmp slt i64 %5849, %5854
  br i1 %5855, label %5856, label %5865

5856:                                             ; preds = %5851
  %5857 = getelementptr inbounds %struct.UText, %struct.UText* %5846, i64 0, i32 10
  %5858 = load i16*, i16** %5857, align 8
  %5859 = getelementptr inbounds i16, i16* %5858, i64 %5849
  %5860 = load i16, i16* %5859, align 2
  %5861 = icmp ult i16 %5860, -9216
  br i1 %5861, label %5862, label %5865

5862:                                             ; preds = %5856
  %5863 = trunc i64 %5849 to i32
  %5864 = getelementptr inbounds %struct.UText, %struct.UText* %5846, i64 0, i32 8
  store i32 %5863, i32* %5864, align 8
  br label %5866

5865:                                             ; preds = %5856, %5851, %5843
  call void @utext_setNativeIndex_69(%struct.UText* %5846, i64 %5845) #12
  br label %5866

5866:                                             ; preds = %5865, %5862
  %5867 = load i64, i64* %109, align 8
  %5868 = icmp slt i64 %5845, %5867
  br i1 %5868, label %5869, label %5871

5869:                                             ; preds = %5866
  %5870 = and i32 %149, 2
  br label %5873

5871:                                             ; preds = %5923, %5866
  %5872 = phi i64 [ %5845, %5866 ], [ %5924, %5923 ]
  store i8 1, i8* %110, align 8
  br label %5927

5873:                                             ; preds = %5869, %5923
  %5874 = phi i64 [ %5845, %5869 ], [ %5924, %5923 ]
  %5875 = load %struct.UText*, %struct.UText** %103, align 8
  %5876 = getelementptr inbounds %struct.UText, %struct.UText* %5875, i64 0, i32 8
  %5877 = load i32, i32* %5876, align 8
  %5878 = getelementptr inbounds %struct.UText, %struct.UText* %5875, i64 0, i32 9
  %5879 = load i32, i32* %5878, align 4
  %5880 = icmp slt i32 %5877, %5879
  br i1 %5880, label %5881, label %5892

5881:                                             ; preds = %5873
  %5882 = getelementptr inbounds %struct.UText, %struct.UText* %5875, i64 0, i32 10
  %5883 = load i16*, i16** %5882, align 8
  %5884 = sext i32 %5877 to i64
  %5885 = getelementptr inbounds i16, i16* %5883, i64 %5884
  %5886 = load i16, i16* %5885, align 2
  %5887 = icmp ult i16 %5886, -10240
  br i1 %5887, label %5888, label %5892

5888:                                             ; preds = %5881
  %5889 = add nsw i32 %5877, 1
  store i32 %5889, i32* %5876, align 8
  %5890 = load i16, i16* %5885, align 2
  %5891 = zext i16 %5890 to i32
  br label %5894

5892:                                             ; preds = %5881, %5873
  %5893 = call i32 @utext_next32_69(%struct.UText* %5875) #12
  br label %5894

5894:                                             ; preds = %5892, %5888
  %5895 = phi i32 [ %5891, %5888 ], [ %5893, %5892 ]
  %5896 = and i32 %5895, 126
  %5897 = icmp ult i32 %5896, 42
  br i1 %5897, label %5898, label %5905

5898:                                             ; preds = %5894
  %5899 = icmp eq i32 %5895, 10
  br i1 %5899, label %5927, label %5900

5900:                                             ; preds = %5898
  %5901 = and i32 %5895, -8368
  %5902 = or i32 %5901, %5870
  %5903 = icmp eq i32 %5902, 0
  br i1 %5903, label %5904, label %5905

5904:                                             ; preds = %5900
  switch i32 %5895, label %5905 [
    i32 8232, label %5927
    i32 133, label %5927
    i32 13, label %5927
    i32 12, label %5927
    i32 11, label %5927
    i32 8233, label %5927
  ]

5905:                                             ; preds = %5904, %5900, %5894
  %5906 = load %struct.UText*, %struct.UText** %103, align 8
  %5907 = getelementptr inbounds %struct.UText, %struct.UText* %5906, i64 0, i32 8
  %5908 = load i32, i32* %5907, align 8
  %5909 = getelementptr inbounds %struct.UText, %struct.UText* %5906, i64 0, i32 6
  %5910 = load i32, i32* %5909, align 4
  %5911 = icmp sgt i32 %5908, %5910
  br i1 %5911, label %5917, label %5912

5912:                                             ; preds = %5905
  %5913 = getelementptr inbounds %struct.UText, %struct.UText* %5906, i64 0, i32 7
  %5914 = load i64, i64* %5913, align 8
  %5915 = sext i32 %5908 to i64
  %5916 = add nsw i64 %5914, %5915
  br label %5923

5917:                                             ; preds = %5905
  %5918 = getelementptr inbounds %struct.UText, %struct.UText* %5906, i64 0, i32 11
  %5919 = load %struct.UTextFuncs*, %struct.UTextFuncs** %5918, align 8
  %5920 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %5919, i64 0, i32 10
  %5921 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %5920, align 8
  %5922 = call i64 %5921(%struct.UText* %5906) #12
  br label %5923

5923:                                             ; preds = %5912, %5917
  %5924 = phi i64 [ %5916, %5912 ], [ %5922, %5917 ]
  %5925 = load i64, i64* %109, align 8
  %5926 = icmp slt i64 %5924, %5925
  br i1 %5926, label %5873, label %5871

5927:                                             ; preds = %5904, %5904, %5904, %5904, %5904, %5904, %5898, %5871, %5841
  %5928 = phi i64 [ %5842, %5841 ], [ %5872, %5871 ], [ %5874, %5898 ], [ %5874, %5904 ], [ %5874, %5904 ], [ %5874, %5904 ], [ %5874, %5904 ], [ %5874, %5904 ], [ %5874, %5904 ]
  %5929 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %5930 = load i64, i64* %5929, align 8
  %5931 = icmp eq i64 %5928, %5930
  %5932 = load i64, i64* %145, align 8
  br i1 %5931, label %5933, label %5935

5933:                                             ; preds = %5927
  %5934 = add nsw i64 %5932, 1
  store i64 %5934, i64* %145, align 8
  br label %6488

5935:                                             ; preds = %5927
  %5936 = getelementptr inbounds i64, i64* %16, i64 %5932
  %5937 = load i64, i64* %5936, align 8
  %5938 = and i64 %5937, 16777215
  %5939 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %5938
  store i64 %5930, i64* %5939, align 8
  store i64 %5928, i64* %5929, align 8
  %5940 = load i32, i32* %3, align 4
  %5941 = icmp slt i32 %5940, 1
  br i1 %5941, label %5942, label %6150

5942:                                             ; preds = %5935
  %5943 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %5944 = load i32, i32* %38, align 8
  %5945 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5943, i64 0, i32 1
  %5946 = load i32, i32* %5945, align 8
  %5947 = add nsw i32 %5946, %5944
  %5948 = icmp sgt i32 %5947, -1
  br i1 %5948, label %5949, label %5953

5949:                                             ; preds = %5942
  %5950 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5943, i64 0, i32 2
  %5951 = load i32, i32* %5950, align 4
  %5952 = icmp slt i32 %5951, %5947
  br i1 %5952, label %5953, label %5959

5953:                                             ; preds = %5949, %5942
  %5954 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %5943, i32 %5947, i32* dereferenceable(4) %3) #12
  %5955 = icmp eq i8 %5954, 0
  br i1 %5955, label %5966, label %5956

5956:                                             ; preds = %5953
  %5957 = load i32, i32* %5945, align 8
  %5958 = add nsw i32 %5957, %5944
  br label %5959

5959:                                             ; preds = %5956, %5949
  %5960 = phi i32 [ %5958, %5956 ], [ %5947, %5949 ]
  %5961 = phi i32 [ %5957, %5956 ], [ %5946, %5949 ]
  %5962 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5943, i64 0, i32 4
  %5963 = load i64*, i64** %5962, align 8
  %5964 = sext i32 %5961 to i64
  %5965 = getelementptr inbounds i64, i64* %5963, i64 %5964
  store i32 %5960, i32* %5945, align 8
  br label %5966

5966:                                             ; preds = %5959, %5953
  %5967 = phi i64* [ %5965, %5959 ], [ null, %5953 ]
  %5968 = load i32, i32* %3, align 4
  %5969 = icmp slt i32 %5968, 1
  br i1 %5969, label %5971, label %5970

5970:                                             ; preds = %5966
  store i32 66321, i32* %3, align 4
  br label %6150

5971:                                             ; preds = %5966
  %5972 = load i32, i32* %38, align 8
  %5973 = sext i32 %5972 to i64
  %5974 = sub nsw i64 0, %5973
  %5975 = getelementptr inbounds i64, i64* %5967, i64 %5974
  %5976 = shl nsw i64 %5973, 3
  %5977 = add nsw i64 %5976, -8
  %5978 = lshr exact i64 %5977, 3
  %5979 = add nuw nsw i64 %5978, 1
  %5980 = icmp ult i64 %5979, 4
  br i1 %5980, label %6074, label %5981

5981:                                             ; preds = %5971
  %5982 = getelementptr i64, i64* %5967, i64 1
  %5983 = shl nsw i64 %5973, 3
  %5984 = add nsw i64 %5983, -8
  %5985 = lshr exact i64 %5984, 3
  %5986 = getelementptr i64, i64* %5982, i64 %5985
  %5987 = getelementptr i64, i64* %5967, i64 1
  %5988 = sub nsw i64 %5985, %5973
  %5989 = getelementptr i64, i64* %5987, i64 %5988
  %5990 = icmp ult i64* %5967, %5989
  %5991 = icmp ult i64* %5975, %5986
  %5992 = and i1 %5990, %5991
  br i1 %5992, label %6074, label %5993

5993:                                             ; preds = %5981
  %5994 = and i64 %5979, 4611686018427387900
  %5995 = getelementptr i64, i64* %5975, i64 %5994
  %5996 = getelementptr i64, i64* %5967, i64 %5994
  %5997 = add nsw i64 %5994, -4
  %5998 = lshr exact i64 %5997, 2
  %5999 = add nuw nsw i64 %5998, 1
  %6000 = and i64 %5999, 3
  %6001 = icmp ult i64 %5997, 12
  br i1 %6001, label %6053, label %6002

6002:                                             ; preds = %5993
  %6003 = sub nsw i64 %5999, %6000
  br label %6004

6004:                                             ; preds = %6004, %6002
  %6005 = phi i64 [ 0, %6002 ], [ %6050, %6004 ]
  %6006 = phi i64 [ %6003, %6002 ], [ %6051, %6004 ]
  %6007 = getelementptr i64, i64* %5975, i64 %6005
  %6008 = getelementptr i64, i64* %5967, i64 %6005
  %6009 = bitcast i64* %6007 to <2 x i64>*
  %6010 = load <2 x i64>, <2 x i64>* %6009, align 8, !alias.scope !94
  %6011 = getelementptr i64, i64* %6007, i64 2
  %6012 = bitcast i64* %6011 to <2 x i64>*
  %6013 = load <2 x i64>, <2 x i64>* %6012, align 8, !alias.scope !94
  %6014 = bitcast i64* %6008 to <2 x i64>*
  store <2 x i64> %6010, <2 x i64>* %6014, align 8, !alias.scope !97, !noalias !94
  %6015 = getelementptr i64, i64* %6008, i64 2
  %6016 = bitcast i64* %6015 to <2 x i64>*
  store <2 x i64> %6013, <2 x i64>* %6016, align 8, !alias.scope !97, !noalias !94
  %6017 = or i64 %6005, 4
  %6018 = getelementptr i64, i64* %5975, i64 %6017
  %6019 = getelementptr i64, i64* %5967, i64 %6017
  %6020 = bitcast i64* %6018 to <2 x i64>*
  %6021 = load <2 x i64>, <2 x i64>* %6020, align 8, !alias.scope !94
  %6022 = getelementptr i64, i64* %6018, i64 2
  %6023 = bitcast i64* %6022 to <2 x i64>*
  %6024 = load <2 x i64>, <2 x i64>* %6023, align 8, !alias.scope !94
  %6025 = bitcast i64* %6019 to <2 x i64>*
  store <2 x i64> %6021, <2 x i64>* %6025, align 8, !alias.scope !97, !noalias !94
  %6026 = getelementptr i64, i64* %6019, i64 2
  %6027 = bitcast i64* %6026 to <2 x i64>*
  store <2 x i64> %6024, <2 x i64>* %6027, align 8, !alias.scope !97, !noalias !94
  %6028 = or i64 %6005, 8
  %6029 = getelementptr i64, i64* %5975, i64 %6028
  %6030 = getelementptr i64, i64* %5967, i64 %6028
  %6031 = bitcast i64* %6029 to <2 x i64>*
  %6032 = load <2 x i64>, <2 x i64>* %6031, align 8, !alias.scope !94
  %6033 = getelementptr i64, i64* %6029, i64 2
  %6034 = bitcast i64* %6033 to <2 x i64>*
  %6035 = load <2 x i64>, <2 x i64>* %6034, align 8, !alias.scope !94
  %6036 = bitcast i64* %6030 to <2 x i64>*
  store <2 x i64> %6032, <2 x i64>* %6036, align 8, !alias.scope !97, !noalias !94
  %6037 = getelementptr i64, i64* %6030, i64 2
  %6038 = bitcast i64* %6037 to <2 x i64>*
  store <2 x i64> %6035, <2 x i64>* %6038, align 8, !alias.scope !97, !noalias !94
  %6039 = or i64 %6005, 12
  %6040 = getelementptr i64, i64* %5975, i64 %6039
  %6041 = getelementptr i64, i64* %5967, i64 %6039
  %6042 = bitcast i64* %6040 to <2 x i64>*
  %6043 = load <2 x i64>, <2 x i64>* %6042, align 8, !alias.scope !94
  %6044 = getelementptr i64, i64* %6040, i64 2
  %6045 = bitcast i64* %6044 to <2 x i64>*
  %6046 = load <2 x i64>, <2 x i64>* %6045, align 8, !alias.scope !94
  %6047 = bitcast i64* %6041 to <2 x i64>*
  store <2 x i64> %6043, <2 x i64>* %6047, align 8, !alias.scope !97, !noalias !94
  %6048 = getelementptr i64, i64* %6041, i64 2
  %6049 = bitcast i64* %6048 to <2 x i64>*
  store <2 x i64> %6046, <2 x i64>* %6049, align 8, !alias.scope !97, !noalias !94
  %6050 = add i64 %6005, 16
  %6051 = add i64 %6006, -4
  %6052 = icmp eq i64 %6051, 0
  br i1 %6052, label %6053, label %6004, !llvm.loop !99

6053:                                             ; preds = %6004, %5993
  %6054 = phi i64 [ 0, %5993 ], [ %6050, %6004 ]
  %6055 = icmp eq i64 %6000, 0
  br i1 %6055, label %6072, label %6056

6056:                                             ; preds = %6053, %6056
  %6057 = phi i64 [ %6069, %6056 ], [ %6054, %6053 ]
  %6058 = phi i64 [ %6070, %6056 ], [ %6000, %6053 ]
  %6059 = getelementptr i64, i64* %5975, i64 %6057
  %6060 = getelementptr i64, i64* %5967, i64 %6057
  %6061 = bitcast i64* %6059 to <2 x i64>*
  %6062 = load <2 x i64>, <2 x i64>* %6061, align 8, !alias.scope !94
  %6063 = getelementptr i64, i64* %6059, i64 2
  %6064 = bitcast i64* %6063 to <2 x i64>*
  %6065 = load <2 x i64>, <2 x i64>* %6064, align 8, !alias.scope !94
  %6066 = bitcast i64* %6060 to <2 x i64>*
  store <2 x i64> %6062, <2 x i64>* %6066, align 8, !alias.scope !97, !noalias !94
  %6067 = getelementptr i64, i64* %6060, i64 2
  %6068 = bitcast i64* %6067 to <2 x i64>*
  store <2 x i64> %6065, <2 x i64>* %6068, align 8, !alias.scope !97, !noalias !94
  %6069 = add i64 %6057, 4
  %6070 = add i64 %6058, -1
  %6071 = icmp eq i64 %6070, 0
  br i1 %6071, label %6072, label %6056, !llvm.loop !100

6072:                                             ; preds = %6056, %6053
  %6073 = icmp eq i64 %5979, %5994
  br i1 %6073, label %6126, label %6074

6074:                                             ; preds = %6072, %5981, %5971
  %6075 = phi i64* [ %5975, %5981 ], [ %5975, %5971 ], [ %5995, %6072 ]
  %6076 = phi i64* [ %5967, %5981 ], [ %5967, %5971 ], [ %5996, %6072 ]
  %6077 = ptrtoint i64* %6075 to i64
  %6078 = getelementptr i64, i64* %5967, i64 -1
  %6079 = ptrtoint i64* %6078 to i64
  %6080 = sub i64 %6079, %6077
  %6081 = lshr i64 %6080, 3
  %6082 = add nuw nsw i64 %6081, 1
  %6083 = and i64 %6082, 7
  %6084 = icmp eq i64 %6083, 0
  br i1 %6084, label %6094, label %6085

6085:                                             ; preds = %6074, %6085
  %6086 = phi i64* [ %6089, %6085 ], [ %6075, %6074 ]
  %6087 = phi i64* [ %6091, %6085 ], [ %6076, %6074 ]
  %6088 = phi i64 [ %6092, %6085 ], [ %6083, %6074 ]
  %6089 = getelementptr inbounds i64, i64* %6086, i64 1
  %6090 = load i64, i64* %6086, align 8
  %6091 = getelementptr inbounds i64, i64* %6087, i64 1
  store i64 %6090, i64* %6087, align 8
  %6092 = add i64 %6088, -1
  %6093 = icmp eq i64 %6092, 0
  br i1 %6093, label %6094, label %6085, !llvm.loop !101

6094:                                             ; preds = %6085, %6074
  %6095 = phi i64* [ %6075, %6074 ], [ %6089, %6085 ]
  %6096 = phi i64* [ %6076, %6074 ], [ %6091, %6085 ]
  %6097 = icmp ult i64 %6080, 56
  br i1 %6097, label %6126, label %6098

6098:                                             ; preds = %6094, %6098
  %6099 = phi i64* [ %6122, %6098 ], [ %6095, %6094 ]
  %6100 = phi i64* [ %6124, %6098 ], [ %6096, %6094 ]
  %6101 = getelementptr inbounds i64, i64* %6099, i64 1
  %6102 = load i64, i64* %6099, align 8
  %6103 = getelementptr inbounds i64, i64* %6100, i64 1
  store i64 %6102, i64* %6100, align 8
  %6104 = getelementptr inbounds i64, i64* %6099, i64 2
  %6105 = load i64, i64* %6101, align 8
  %6106 = getelementptr inbounds i64, i64* %6100, i64 2
  store i64 %6105, i64* %6103, align 8
  %6107 = getelementptr inbounds i64, i64* %6099, i64 3
  %6108 = load i64, i64* %6104, align 8
  %6109 = getelementptr inbounds i64, i64* %6100, i64 3
  store i64 %6108, i64* %6106, align 8
  %6110 = getelementptr inbounds i64, i64* %6099, i64 4
  %6111 = load i64, i64* %6107, align 8
  %6112 = getelementptr inbounds i64, i64* %6100, i64 4
  store i64 %6111, i64* %6109, align 8
  %6113 = getelementptr inbounds i64, i64* %6099, i64 5
  %6114 = load i64, i64* %6110, align 8
  %6115 = getelementptr inbounds i64, i64* %6100, i64 5
  store i64 %6114, i64* %6112, align 8
  %6116 = getelementptr inbounds i64, i64* %6099, i64 6
  %6117 = load i64, i64* %6113, align 8
  %6118 = getelementptr inbounds i64, i64* %6100, i64 6
  store i64 %6117, i64* %6115, align 8
  %6119 = getelementptr inbounds i64, i64* %6099, i64 7
  %6120 = load i64, i64* %6116, align 8
  %6121 = getelementptr inbounds i64, i64* %6100, i64 7
  store i64 %6120, i64* %6118, align 8
  %6122 = getelementptr inbounds i64, i64* %6099, i64 8
  %6123 = load i64, i64* %6119, align 8
  %6124 = getelementptr inbounds i64, i64* %6100, i64 8
  store i64 %6123, i64* %6121, align 8
  %6125 = icmp eq i64* %6122, %5967
  br i1 %6125, label %6126, label %6098, !llvm.loop !102

6126:                                             ; preds = %6094, %6098, %6072
  %6127 = load i32, i32* %104, align 8
  %6128 = add nsw i32 %6127, -1
  store i32 %6128, i32* %104, align 8
  %6129 = icmp slt i32 %6127, 2
  br i1 %6129, label %6130, label %6147

6130:                                             ; preds = %6126
  store i32 10000, i32* %104, align 8
  %6131 = load i32, i32* %105, align 4
  %6132 = add nsw i32 %6131, 1
  store i32 %6132, i32* %105, align 4
  %6133 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %6134 = icmp eq i8 (i8*, i32)* %6133, null
  br i1 %6134, label %6140, label %6135

6135:                                             ; preds = %6130
  %6136 = load i8*, i8** %107, align 8
  %6137 = call signext i8 %6133(i8* %6136, i32 %6132) #12
  %6138 = icmp eq i8 %6137, 0
  br i1 %6138, label %6139, label %6140

6139:                                             ; preds = %6135
  store i32 66323, i32* %3, align 4
  br label %6147

6140:                                             ; preds = %6135, %6130
  %6141 = load i32, i32* %108, align 8
  %6142 = icmp sgt i32 %6141, 0
  br i1 %6142, label %6143, label %6147

6143:                                             ; preds = %6140
  %6144 = load i32, i32* %105, align 4
  %6145 = icmp slt i32 %6144, %6141
  br i1 %6145, label %6147, label %6146

6146:                                             ; preds = %6143
  store i32 66322, i32* %3, align 4
  br label %6147

6147:                                             ; preds = %6146, %6143, %6140, %6139, %6126
  %6148 = getelementptr inbounds i64, i64* %5975, i64 1
  store i64 %5932, i64* %6148, align 8
  %6149 = bitcast i64* %5967 to %"struct.icu_69::REStackFrame"*
  br label %6150

6150:                                             ; preds = %5935, %5970, %6147
  %6151 = phi %"struct.icu_69::REStackFrame"* [ %144, %5935 ], [ %144, %5970 ], [ %6149, %6147 ]
  %6152 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %6151, i64 0, i32 1
  %6153 = load i64, i64* %6152, align 8
  %6154 = add nsw i64 %6153, 1
  store i64 %6154, i64* %6152, align 8
  br label %6488

6155:                                             ; preds = %143
  %6156 = zext i32 %151 to i64
  %6157 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 2, i64 %6156
  %6158 = load i64, i64* %6157, align 8
  %6159 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %6160 = load i64, i64* %6159, align 8
  %6161 = icmp eq i64 %6158, %6160
  br i1 %6161, label %6488, label %6162

6162:                                             ; preds = %6155
  %6163 = load %struct.UText*, %struct.UText** %103, align 8
  %6164 = getelementptr inbounds %struct.UText, %struct.UText* %6163, i64 0, i32 7
  %6165 = load i64, i64* %6164, align 8
  %6166 = sub nsw i64 %6160, %6165
  %6167 = icmp sgt i64 %6166, -1
  br i1 %6167, label %6168, label %6182

6168:                                             ; preds = %6162
  %6169 = getelementptr inbounds %struct.UText, %struct.UText* %6163, i64 0, i32 6
  %6170 = load i32, i32* %6169, align 4
  %6171 = sext i32 %6170 to i64
  %6172 = icmp slt i64 %6166, %6171
  br i1 %6172, label %6173, label %6182

6173:                                             ; preds = %6168
  %6174 = getelementptr inbounds %struct.UText, %struct.UText* %6163, i64 0, i32 10
  %6175 = load i16*, i16** %6174, align 8
  %6176 = getelementptr inbounds i16, i16* %6175, i64 %6166
  %6177 = load i16, i16* %6176, align 2
  %6178 = icmp ult i16 %6177, -9216
  br i1 %6178, label %6179, label %6182

6179:                                             ; preds = %6173
  %6180 = trunc i64 %6166 to i32
  %6181 = getelementptr inbounds %struct.UText, %struct.UText* %6163, i64 0, i32 8
  store i32 %6180, i32* %6181, align 8
  br label %6183

6182:                                             ; preds = %6173, %6168, %6162
  call void @utext_setNativeIndex_69(%struct.UText* %6163, i64 %6160) #12
  br label %6183

6183:                                             ; preds = %6182, %6179
  %6184 = load %struct.UText*, %struct.UText** %103, align 8
  %6185 = getelementptr inbounds %struct.UText, %struct.UText* %6184, i64 0, i32 8
  %6186 = load i32, i32* %6185, align 8
  %6187 = icmp sgt i32 %6186, 0
  br i1 %6187, label %6188, label %6199

6188:                                             ; preds = %6183
  %6189 = getelementptr inbounds %struct.UText, %struct.UText* %6184, i64 0, i32 10
  %6190 = load i16*, i16** %6189, align 8
  %6191 = add nsw i32 %6186, -1
  %6192 = sext i32 %6191 to i64
  %6193 = getelementptr inbounds i16, i16* %6190, i64 %6192
  %6194 = load i16, i16* %6193, align 2
  %6195 = icmp ult i16 %6194, -10240
  br i1 %6195, label %6196, label %6199

6196:                                             ; preds = %6188
  store i32 %6191, i32* %6185, align 8
  %6197 = load i16, i16* %6193, align 2
  %6198 = zext i16 %6197 to i32
  br label %6201

6199:                                             ; preds = %6188, %6183
  %6200 = call i32 @utext_previous32_69(%struct.UText* %6184) #12
  br label %6201

6201:                                             ; preds = %6199, %6196
  %6202 = phi i32 [ %6198, %6196 ], [ %6200, %6199 ]
  %6203 = load %struct.UText*, %struct.UText** %103, align 8
  %6204 = getelementptr inbounds %struct.UText, %struct.UText* %6203, i64 0, i32 8
  %6205 = load i32, i32* %6204, align 8
  %6206 = getelementptr inbounds %struct.UText, %struct.UText* %6203, i64 0, i32 6
  %6207 = load i32, i32* %6206, align 4
  %6208 = icmp sgt i32 %6205, %6207
  br i1 %6208, label %6214, label %6209

6209:                                             ; preds = %6201
  %6210 = getelementptr inbounds %struct.UText, %struct.UText* %6203, i64 0, i32 7
  %6211 = load i64, i64* %6210, align 8
  %6212 = sext i32 %6205 to i64
  %6213 = add nsw i64 %6211, %6212
  br label %6220

6214:                                             ; preds = %6201
  %6215 = getelementptr inbounds %struct.UText, %struct.UText* %6203, i64 0, i32 11
  %6216 = load %struct.UTextFuncs*, %struct.UTextFuncs** %6215, align 8
  %6217 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %6216, i64 0, i32 10
  %6218 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %6217, align 8
  %6219 = call i64 %6218(%struct.UText* %6203) #12
  br label %6220

6220:                                             ; preds = %6214, %6209
  %6221 = phi i64 [ %6213, %6209 ], [ %6219, %6214 ]
  store i64 %6221, i64* %6159, align 8
  %6222 = load %struct.UText*, %struct.UText** %103, align 8
  %6223 = getelementptr inbounds %struct.UText, %struct.UText* %6222, i64 0, i32 8
  %6224 = load i32, i32* %6223, align 8
  %6225 = icmp sgt i32 %6224, 0
  br i1 %6225, label %6226, label %6237

6226:                                             ; preds = %6220
  %6227 = getelementptr inbounds %struct.UText, %struct.UText* %6222, i64 0, i32 10
  %6228 = load i16*, i16** %6227, align 8
  %6229 = add nsw i32 %6224, -1
  %6230 = sext i32 %6229 to i64
  %6231 = getelementptr inbounds i16, i16* %6228, i64 %6230
  %6232 = load i16, i16* %6231, align 2
  %6233 = icmp ult i16 %6232, -10240
  br i1 %6233, label %6234, label %6237

6234:                                             ; preds = %6226
  store i32 %6229, i32* %6223, align 8
  %6235 = load i16, i16* %6231, align 2
  %6236 = zext i16 %6235 to i32
  br label %6239

6237:                                             ; preds = %6226, %6220
  %6238 = call i32 @utext_previous32_69(%struct.UText* %6222) #12
  br label %6239

6239:                                             ; preds = %6237, %6234
  %6240 = phi i32 [ %6236, %6234 ], [ %6238, %6237 ]
  %6241 = icmp eq i32 %6202, 10
  br i1 %6241, label %6242, label %6274

6242:                                             ; preds = %6239
  %6243 = load i64, i64* %6159, align 8
  %6244 = icmp sgt i64 %6243, %6158
  %6245 = icmp eq i32 %6240, 13
  %6246 = and i1 %6245, %6244
  br i1 %6246, label %6247, label %6274

6247:                                             ; preds = %6242
  %6248 = load i64, i64* %145, align 8
  %6249 = add nsw i64 %6248, -2
  %6250 = getelementptr inbounds i64, i64* %16, i64 %6249
  %6251 = load i64, i64* %6250, align 8
  %6252 = and i64 %6251, 4278190080
  %6253 = icmp eq i64 %6252, 872415232
  br i1 %6253, label %6254, label %6274

6254:                                             ; preds = %6247
  %6255 = load %struct.UText*, %struct.UText** %103, align 8
  %6256 = getelementptr inbounds %struct.UText, %struct.UText* %6255, i64 0, i32 8
  %6257 = load i32, i32* %6256, align 8
  %6258 = getelementptr inbounds %struct.UText, %struct.UText* %6255, i64 0, i32 6
  %6259 = load i32, i32* %6258, align 4
  %6260 = icmp sgt i32 %6257, %6259
  br i1 %6260, label %6266, label %6261

6261:                                             ; preds = %6254
  %6262 = getelementptr inbounds %struct.UText, %struct.UText* %6255, i64 0, i32 7
  %6263 = load i64, i64* %6262, align 8
  %6264 = sext i32 %6257 to i64
  %6265 = add nsw i64 %6263, %6264
  br label %6272

6266:                                             ; preds = %6254
  %6267 = getelementptr inbounds %struct.UText, %struct.UText* %6255, i64 0, i32 11
  %6268 = load %struct.UTextFuncs*, %struct.UTextFuncs** %6267, align 8
  %6269 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %6268, i64 0, i32 10
  %6270 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %6269, align 8
  %6271 = call i64 %6270(%struct.UText* %6255) #12
  br label %6272

6272:                                             ; preds = %6266, %6261
  %6273 = phi i64 [ %6265, %6261 ], [ %6271, %6266 ]
  store i64 %6273, i64* %6159, align 8
  br label %6274

6274:                                             ; preds = %6247, %6272, %6242, %6239
  %6275 = load i64, i64* %145, align 8
  %6276 = add nsw i64 %6275, -1
  %6277 = load i32, i32* %3, align 4
  %6278 = icmp slt i32 %6277, 1
  br i1 %6278, label %6279, label %6492

6279:                                             ; preds = %6274
  %6280 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %39, align 8
  %6281 = load i32, i32* %38, align 8
  %6282 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %6280, i64 0, i32 1
  %6283 = load i32, i32* %6282, align 8
  %6284 = add nsw i32 %6283, %6281
  %6285 = icmp sgt i32 %6284, -1
  br i1 %6285, label %6286, label %6290

6286:                                             ; preds = %6279
  %6287 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %6280, i64 0, i32 2
  %6288 = load i32, i32* %6287, align 4
  %6289 = icmp slt i32 %6288, %6284
  br i1 %6289, label %6290, label %6296

6290:                                             ; preds = %6286, %6279
  %6291 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %6280, i32 %6284, i32* dereferenceable(4) %3) #12
  %6292 = icmp eq i8 %6291, 0
  br i1 %6292, label %6303, label %6293

6293:                                             ; preds = %6290
  %6294 = load i32, i32* %6282, align 8
  %6295 = add nsw i32 %6294, %6281
  br label %6296

6296:                                             ; preds = %6293, %6286
  %6297 = phi i32 [ %6295, %6293 ], [ %6284, %6286 ]
  %6298 = phi i32 [ %6294, %6293 ], [ %6283, %6286 ]
  %6299 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %6280, i64 0, i32 4
  %6300 = load i64*, i64** %6299, align 8
  %6301 = sext i32 %6298 to i64
  %6302 = getelementptr inbounds i64, i64* %6300, i64 %6301
  store i32 %6297, i32* %6282, align 8
  br label %6303

6303:                                             ; preds = %6296, %6290
  %6304 = phi i64* [ %6302, %6296 ], [ null, %6290 ]
  %6305 = load i32, i32* %3, align 4
  %6306 = icmp slt i32 %6305, 1
  br i1 %6306, label %6308, label %6307

6307:                                             ; preds = %6303
  store i32 66321, i32* %3, align 4
  br label %6492

6308:                                             ; preds = %6303
  %6309 = load i32, i32* %38, align 8
  %6310 = sext i32 %6309 to i64
  %6311 = sub nsw i64 0, %6310
  %6312 = getelementptr inbounds i64, i64* %6304, i64 %6311
  %6313 = shl nsw i64 %6310, 3
  %6314 = add nsw i64 %6313, -8
  %6315 = lshr exact i64 %6314, 3
  %6316 = add nuw nsw i64 %6315, 1
  %6317 = icmp ult i64 %6316, 4
  br i1 %6317, label %6411, label %6318

6318:                                             ; preds = %6308
  %6319 = getelementptr i64, i64* %6304, i64 1
  %6320 = shl nsw i64 %6310, 3
  %6321 = add nsw i64 %6320, -8
  %6322 = lshr exact i64 %6321, 3
  %6323 = getelementptr i64, i64* %6319, i64 %6322
  %6324 = getelementptr i64, i64* %6304, i64 1
  %6325 = sub nsw i64 %6322, %6310
  %6326 = getelementptr i64, i64* %6324, i64 %6325
  %6327 = icmp ult i64* %6304, %6326
  %6328 = icmp ult i64* %6312, %6323
  %6329 = and i1 %6327, %6328
  br i1 %6329, label %6411, label %6330

6330:                                             ; preds = %6318
  %6331 = and i64 %6316, 4611686018427387900
  %6332 = getelementptr i64, i64* %6312, i64 %6331
  %6333 = getelementptr i64, i64* %6304, i64 %6331
  %6334 = add nsw i64 %6331, -4
  %6335 = lshr exact i64 %6334, 2
  %6336 = add nuw nsw i64 %6335, 1
  %6337 = and i64 %6336, 3
  %6338 = icmp ult i64 %6334, 12
  br i1 %6338, label %6390, label %6339

6339:                                             ; preds = %6330
  %6340 = sub nsw i64 %6336, %6337
  br label %6341

6341:                                             ; preds = %6341, %6339
  %6342 = phi i64 [ 0, %6339 ], [ %6387, %6341 ]
  %6343 = phi i64 [ %6340, %6339 ], [ %6388, %6341 ]
  %6344 = getelementptr i64, i64* %6312, i64 %6342
  %6345 = getelementptr i64, i64* %6304, i64 %6342
  %6346 = bitcast i64* %6344 to <2 x i64>*
  %6347 = load <2 x i64>, <2 x i64>* %6346, align 8, !alias.scope !103
  %6348 = getelementptr i64, i64* %6344, i64 2
  %6349 = bitcast i64* %6348 to <2 x i64>*
  %6350 = load <2 x i64>, <2 x i64>* %6349, align 8, !alias.scope !103
  %6351 = bitcast i64* %6345 to <2 x i64>*
  store <2 x i64> %6347, <2 x i64>* %6351, align 8, !alias.scope !106, !noalias !103
  %6352 = getelementptr i64, i64* %6345, i64 2
  %6353 = bitcast i64* %6352 to <2 x i64>*
  store <2 x i64> %6350, <2 x i64>* %6353, align 8, !alias.scope !106, !noalias !103
  %6354 = or i64 %6342, 4
  %6355 = getelementptr i64, i64* %6312, i64 %6354
  %6356 = getelementptr i64, i64* %6304, i64 %6354
  %6357 = bitcast i64* %6355 to <2 x i64>*
  %6358 = load <2 x i64>, <2 x i64>* %6357, align 8, !alias.scope !103
  %6359 = getelementptr i64, i64* %6355, i64 2
  %6360 = bitcast i64* %6359 to <2 x i64>*
  %6361 = load <2 x i64>, <2 x i64>* %6360, align 8, !alias.scope !103
  %6362 = bitcast i64* %6356 to <2 x i64>*
  store <2 x i64> %6358, <2 x i64>* %6362, align 8, !alias.scope !106, !noalias !103
  %6363 = getelementptr i64, i64* %6356, i64 2
  %6364 = bitcast i64* %6363 to <2 x i64>*
  store <2 x i64> %6361, <2 x i64>* %6364, align 8, !alias.scope !106, !noalias !103
  %6365 = or i64 %6342, 8
  %6366 = getelementptr i64, i64* %6312, i64 %6365
  %6367 = getelementptr i64, i64* %6304, i64 %6365
  %6368 = bitcast i64* %6366 to <2 x i64>*
  %6369 = load <2 x i64>, <2 x i64>* %6368, align 8, !alias.scope !103
  %6370 = getelementptr i64, i64* %6366, i64 2
  %6371 = bitcast i64* %6370 to <2 x i64>*
  %6372 = load <2 x i64>, <2 x i64>* %6371, align 8, !alias.scope !103
  %6373 = bitcast i64* %6367 to <2 x i64>*
  store <2 x i64> %6369, <2 x i64>* %6373, align 8, !alias.scope !106, !noalias !103
  %6374 = getelementptr i64, i64* %6367, i64 2
  %6375 = bitcast i64* %6374 to <2 x i64>*
  store <2 x i64> %6372, <2 x i64>* %6375, align 8, !alias.scope !106, !noalias !103
  %6376 = or i64 %6342, 12
  %6377 = getelementptr i64, i64* %6312, i64 %6376
  %6378 = getelementptr i64, i64* %6304, i64 %6376
  %6379 = bitcast i64* %6377 to <2 x i64>*
  %6380 = load <2 x i64>, <2 x i64>* %6379, align 8, !alias.scope !103
  %6381 = getelementptr i64, i64* %6377, i64 2
  %6382 = bitcast i64* %6381 to <2 x i64>*
  %6383 = load <2 x i64>, <2 x i64>* %6382, align 8, !alias.scope !103
  %6384 = bitcast i64* %6378 to <2 x i64>*
  store <2 x i64> %6380, <2 x i64>* %6384, align 8, !alias.scope !106, !noalias !103
  %6385 = getelementptr i64, i64* %6378, i64 2
  %6386 = bitcast i64* %6385 to <2 x i64>*
  store <2 x i64> %6383, <2 x i64>* %6386, align 8, !alias.scope !106, !noalias !103
  %6387 = add i64 %6342, 16
  %6388 = add i64 %6343, -4
  %6389 = icmp eq i64 %6388, 0
  br i1 %6389, label %6390, label %6341, !llvm.loop !108

6390:                                             ; preds = %6341, %6330
  %6391 = phi i64 [ 0, %6330 ], [ %6387, %6341 ]
  %6392 = icmp eq i64 %6337, 0
  br i1 %6392, label %6409, label %6393

6393:                                             ; preds = %6390, %6393
  %6394 = phi i64 [ %6406, %6393 ], [ %6391, %6390 ]
  %6395 = phi i64 [ %6407, %6393 ], [ %6337, %6390 ]
  %6396 = getelementptr i64, i64* %6312, i64 %6394
  %6397 = getelementptr i64, i64* %6304, i64 %6394
  %6398 = bitcast i64* %6396 to <2 x i64>*
  %6399 = load <2 x i64>, <2 x i64>* %6398, align 8, !alias.scope !103
  %6400 = getelementptr i64, i64* %6396, i64 2
  %6401 = bitcast i64* %6400 to <2 x i64>*
  %6402 = load <2 x i64>, <2 x i64>* %6401, align 8, !alias.scope !103
  %6403 = bitcast i64* %6397 to <2 x i64>*
  store <2 x i64> %6399, <2 x i64>* %6403, align 8, !alias.scope !106, !noalias !103
  %6404 = getelementptr i64, i64* %6397, i64 2
  %6405 = bitcast i64* %6404 to <2 x i64>*
  store <2 x i64> %6402, <2 x i64>* %6405, align 8, !alias.scope !106, !noalias !103
  %6406 = add i64 %6394, 4
  %6407 = add i64 %6395, -1
  %6408 = icmp eq i64 %6407, 0
  br i1 %6408, label %6409, label %6393, !llvm.loop !109

6409:                                             ; preds = %6393, %6390
  %6410 = icmp eq i64 %6316, %6331
  br i1 %6410, label %6463, label %6411

6411:                                             ; preds = %6409, %6318, %6308
  %6412 = phi i64* [ %6312, %6318 ], [ %6312, %6308 ], [ %6332, %6409 ]
  %6413 = phi i64* [ %6304, %6318 ], [ %6304, %6308 ], [ %6333, %6409 ]
  %6414 = ptrtoint i64* %6412 to i64
  %6415 = getelementptr i64, i64* %6304, i64 -1
  %6416 = ptrtoint i64* %6415 to i64
  %6417 = sub i64 %6416, %6414
  %6418 = lshr i64 %6417, 3
  %6419 = add nuw nsw i64 %6418, 1
  %6420 = and i64 %6419, 7
  %6421 = icmp eq i64 %6420, 0
  br i1 %6421, label %6431, label %6422

6422:                                             ; preds = %6411, %6422
  %6423 = phi i64* [ %6426, %6422 ], [ %6412, %6411 ]
  %6424 = phi i64* [ %6428, %6422 ], [ %6413, %6411 ]
  %6425 = phi i64 [ %6429, %6422 ], [ %6420, %6411 ]
  %6426 = getelementptr inbounds i64, i64* %6423, i64 1
  %6427 = load i64, i64* %6423, align 8
  %6428 = getelementptr inbounds i64, i64* %6424, i64 1
  store i64 %6427, i64* %6424, align 8
  %6429 = add i64 %6425, -1
  %6430 = icmp eq i64 %6429, 0
  br i1 %6430, label %6431, label %6422, !llvm.loop !110

6431:                                             ; preds = %6422, %6411
  %6432 = phi i64* [ %6412, %6411 ], [ %6426, %6422 ]
  %6433 = phi i64* [ %6413, %6411 ], [ %6428, %6422 ]
  %6434 = icmp ult i64 %6417, 56
  br i1 %6434, label %6463, label %6435

6435:                                             ; preds = %6431, %6435
  %6436 = phi i64* [ %6459, %6435 ], [ %6432, %6431 ]
  %6437 = phi i64* [ %6461, %6435 ], [ %6433, %6431 ]
  %6438 = getelementptr inbounds i64, i64* %6436, i64 1
  %6439 = load i64, i64* %6436, align 8
  %6440 = getelementptr inbounds i64, i64* %6437, i64 1
  store i64 %6439, i64* %6437, align 8
  %6441 = getelementptr inbounds i64, i64* %6436, i64 2
  %6442 = load i64, i64* %6438, align 8
  %6443 = getelementptr inbounds i64, i64* %6437, i64 2
  store i64 %6442, i64* %6440, align 8
  %6444 = getelementptr inbounds i64, i64* %6436, i64 3
  %6445 = load i64, i64* %6441, align 8
  %6446 = getelementptr inbounds i64, i64* %6437, i64 3
  store i64 %6445, i64* %6443, align 8
  %6447 = getelementptr inbounds i64, i64* %6436, i64 4
  %6448 = load i64, i64* %6444, align 8
  %6449 = getelementptr inbounds i64, i64* %6437, i64 4
  store i64 %6448, i64* %6446, align 8
  %6450 = getelementptr inbounds i64, i64* %6436, i64 5
  %6451 = load i64, i64* %6447, align 8
  %6452 = getelementptr inbounds i64, i64* %6437, i64 5
  store i64 %6451, i64* %6449, align 8
  %6453 = getelementptr inbounds i64, i64* %6436, i64 6
  %6454 = load i64, i64* %6450, align 8
  %6455 = getelementptr inbounds i64, i64* %6437, i64 6
  store i64 %6454, i64* %6452, align 8
  %6456 = getelementptr inbounds i64, i64* %6436, i64 7
  %6457 = load i64, i64* %6453, align 8
  %6458 = getelementptr inbounds i64, i64* %6437, i64 7
  store i64 %6457, i64* %6455, align 8
  %6459 = getelementptr inbounds i64, i64* %6436, i64 8
  %6460 = load i64, i64* %6456, align 8
  %6461 = getelementptr inbounds i64, i64* %6437, i64 8
  store i64 %6460, i64* %6458, align 8
  %6462 = icmp eq i64* %6459, %6304
  br i1 %6462, label %6463, label %6435, !llvm.loop !111

6463:                                             ; preds = %6431, %6435, %6409
  %6464 = load i32, i32* %104, align 8
  %6465 = add nsw i32 %6464, -1
  store i32 %6465, i32* %104, align 8
  %6466 = icmp slt i32 %6464, 2
  br i1 %6466, label %6467, label %6484

6467:                                             ; preds = %6463
  store i32 10000, i32* %104, align 8
  %6468 = load i32, i32* %105, align 4
  %6469 = add nsw i32 %6468, 1
  store i32 %6469, i32* %105, align 4
  %6470 = load i8 (i8*, i32)*, i8 (i8*, i32)** %106, align 8
  %6471 = icmp eq i8 (i8*, i32)* %6470, null
  br i1 %6471, label %6477, label %6472

6472:                                             ; preds = %6467
  %6473 = load i8*, i8** %107, align 8
  %6474 = call signext i8 %6470(i8* %6473, i32 %6469) #12
  %6475 = icmp eq i8 %6474, 0
  br i1 %6475, label %6476, label %6477

6476:                                             ; preds = %6472
  store i32 66323, i32* %3, align 4
  br label %6484

6477:                                             ; preds = %6472, %6467
  %6478 = load i32, i32* %108, align 8
  %6479 = icmp sgt i32 %6478, 0
  br i1 %6479, label %6480, label %6484

6480:                                             ; preds = %6477
  %6481 = load i32, i32* %105, align 4
  %6482 = icmp slt i32 %6481, %6478
  br i1 %6482, label %6484, label %6483

6483:                                             ; preds = %6480
  store i32 66322, i32* %3, align 4
  br label %6484

6484:                                             ; preds = %6483, %6480, %6477, %6476, %6463
  %6485 = getelementptr inbounds i64, i64* %6312, i64 1
  store i64 %6276, i64* %6485, align 8
  %6486 = bitcast i64* %6304 to %"struct.icu_69::REStackFrame"*
  br label %6488

6487:                                             ; preds = %143
  call void @abort() #13
  unreachable

6488:                                             ; preds = %1139, %1139, %1139, %1139, %1139, %1139, %1139, %960, %960, %960, %960, %960, %960, %6484, %4070, %3845, %3842, %599, %5933, %6150, %5616, %5833, %5240, %5463, %4826, %5064, %4512, %4346, %4348, %4245, %4327, %4124, %4220, %4218, %4112, %4081, %3799, %3851, %3826, %3580, %3795, %3549, %3279, %3308, %3257, %3263, %3255, %2794, %3016, %2541, %2575, %2411, %2414, %2474, %2435, %2294, %2328, %2211, %2184, %2209, %2071, %2045, %2069, %1932, %1934, %1731, %1733, %1620, %1622, %1510, %1512, %1377, %1379, %1275, %1270, %1226, %1219, %1203, %1200, %1140, %986, %983, %961, %894, %757, %806, %805, %372, %374, %237, %1047, %1066, %1156, %1796, %6155, %1806, %1822, %1800, %1400, %1403, %1406, %1087, %1071, %1050, %5488, %5472, %5089, %5073, %4660, %4658, %4515, %4427, %4364, %4329, %4073, %2790, %143, %2577, %2481, %2335, %2232, %2092, %1955, %1828, %1754, %1643, %1533, %1427, %1296, %1007, %916, %895, %827, %647, %630, %624, %608, %240, %154
  %6489 = phi %"struct.icu_69::REStackFrame"* [ %144, %1139 ], [ %144, %960 ], [ %144, %960 ], [ %144, %960 ], [ %144, %960 ], [ %144, %960 ], [ %144, %960 ], [ %144, %1139 ], [ %144, %1139 ], [ %144, %1139 ], [ %144, %1139 ], [ %144, %1139 ], [ %144, %1139 ], [ %6486, %6484 ], [ %4072, %4070 ], [ %144, %3845 ], [ %144, %3842 ], [ %601, %599 ], [ %6151, %6150 ], [ %144, %5933 ], [ %5834, %5833 ], [ %144, %5616 ], [ %5464, %5463 ], [ %144, %5240 ], [ %5065, %5064 ], [ %4841, %4826 ], [ %144, %4512 ], [ %4363, %4348 ], [ %144, %4346 ], [ %4328, %4327 ], [ %4260, %4245 ], [ %4235, %4220 ], [ %144, %4218 ], [ %4139, %4124 ], [ %144, %4081 ], [ %4114, %4112 ], [ %144, %3826 ], [ %144, %3851 ], [ %144, %3799 ], [ %144, %3580 ], [ %3796, %3795 ], [ %144, %3308 ], [ %144, %3279 ], [ %3550, %3549 ], [ %3256, %3255 ], [ %3278, %3263 ], [ %3256, %3257 ], [ %144, %2794 ], [ %3017, %3016 ], [ %144, %2575 ], [ %2556, %2541 ], [ %144, %2411 ], [ %144, %2414 ], [ %144, %2474 ], [ %144, %2435 ], [ %144, %2328 ], [ %2309, %2294 ], [ %144, %2209 ], [ %144, %2184 ], [ %2226, %2211 ], [ %144, %2069 ], [ %144, %2045 ], [ %2086, %2071 ], [ %1949, %1934 ], [ %144, %1932 ], [ %1748, %1733 ], [ %144, %1731 ], [ %1637, %1622 ], [ %144, %1620 ], [ %1527, %1512 ], [ %144, %1510 ], [ %1394, %1379 ], [ %144, %1377 ], [ %1290, %1275 ], [ %144, %1270 ], [ %1241, %1226 ], [ %144, %1219 ], [ %144, %1200 ], [ %1218, %1203 ], [ %1155, %1140 ], [ %144, %961 ], [ %144, %983 ], [ %1001, %986 ], [ %144, %894 ], [ %144, %805 ], [ %144, %757 ], [ %821, %806 ], [ %389, %374 ], [ %144, %372 ], [ %144, %237 ], [ %144, %143 ], [ %169, %154 ], [ %255, %240 ], [ %623, %608 ], [ %144, %624 ], [ %144, %630 ], [ %144, %647 ], [ %910, %895 ], [ %144, %827 ], [ %144, %916 ], [ %144, %1047 ], [ %1065, %1050 ], [ %144, %1007 ], [ %144, %1066 ], [ %1086, %1071 ], [ %144, %1087 ], [ %144, %1156 ], [ %1311, %1296 ], [ %1421, %1406 ], [ %144, %1403 ], [ %144, %1400 ], [ %1442, %1427 ], [ %1548, %1533 ], [ %1658, %1643 ], [ %144, %1796 ], [ %144, %1800 ], [ %1769, %1754 ], [ %144, %1822 ], [ %1821, %1806 ], [ %1843, %1828 ], [ %1970, %1955 ], [ %2107, %2092 ], [ %2247, %2232 ], [ %2350, %2335 ], [ %2496, %2481 ], [ %144, %2577 ], [ %2791, %2790 ], [ %144, %4073 ], [ %144, %4329 ], [ %144, %4364 ], [ %4429, %4427 ], [ %4530, %4515 ], [ %4659, %4658 ], [ %144, %4660 ], [ %144, %5089 ], [ %5088, %5073 ], [ %5517, %5488 ], [ %5487, %5472 ], [ %144, %6155 ]
  %6490 = load i32, i32* %3, align 4
  %6491 = icmp slt i32 %6490, 1
  br i1 %6491, label %143, label %6492

6492:                                             ; preds = %390, %3860, %6274, %143, %6488, %422, %3841, %3848, %3893, %6307
  %6493 = phi %"struct.icu_69::REStackFrame"* [ %144, %6307 ], [ %144, %3893 ], [ %144, %3848 ], [ %144, %3841 ], [ %144, %422 ], [ %144, %390 ], [ %144, %3860 ], [ %144, %6274 ], [ %144, %143 ], [ %6489, %6488 ]
  store i8 0, i8* %123, align 2
  br label %6500

6494:                                             ; preds = %603, %602
  store i8 1, i8* %123, align 2
  %6495 = load i64, i64* %124, align 8
  %6496 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  store i64 %6495, i64* %6496, align 8
  %6497 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  store i64 %1, i64* %6497, align 8
  %6498 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %144, i64 0, i32 0
  %6499 = load i64, i64* %6498, align 8
  store i64 %6499, i64* %124, align 8
  br label %6500

6500:                                             ; preds = %6492, %6494
  %6501 = phi %"struct.icu_69::REStackFrame"* [ %6493, %6492 ], [ %144, %6494 ]
  %6502 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 26
  store %"struct.icu_69::REStackFrame"* %6501, %"struct.icu_69::REStackFrame"** %6502, align 8
  br label %6503

6503:                                             ; preds = %92, %6500, %4
  ret void
}

declare signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"*, i32) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6912RegexMatcher4findElR10UErrorCode(%"class.icu_69::RegexMatcher"*, i64, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %39

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 %8, i32* %2, align 4
  br label %39

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %14, i64* %19, align 8
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %24 = bitcast i64* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #12
  %25 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %26, align 2
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %30, align 8
  %31 = icmp slt i64 %1, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %11
  store i32 8, i32* %2, align 4
  br label %39

33:                                               ; preds = %11
  %34 = icmp slt i64 %14, %1
  br i1 %34, label %35, label %36

35:                                               ; preds = %33
  store i32 8, i32* %2, align 4
  br label %39

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  store i64 %1, i64* %37, align 8
  %38 = tail call signext i8 @_ZN6icu_6912RegexMatcher4findER10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32* dereferenceable(4) %2)
  br label %39

39:                                               ; preds = %35, %36, %3, %32, %10
  %40 = phi i8 [ 0, %10 ], [ 0, %32 ], [ 0, %3 ], [ 0, %35 ], [ %38, %36 ]
  ret i8 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher5resetEv(%"class.icu_69::RegexMatcher"* returned) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %4, i64* %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %4, i64* %9, align 8
  %10 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %4, i64* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %13 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %14 = bitcast i64* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #12
  %15 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %16, align 2
  %17 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %20, align 8
  ret %"class.icu_69::RegexMatcher"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcher12MatchChunkAtEiaR10UErrorCode(%"class.icu_69::RegexMatcher"*, i32, i8 signext, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::CaseFoldingUCharIterator", align 8
  %6 = alloca %"class.icu_69::CaseFoldingUCharIterator", align 8
  %7 = alloca %"class.icu_69::CaseFoldingUCharIterator", align 8
  %8 = load i32, i32* %3, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %5245

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %12 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %13 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %12, i64 0, i32 4
  %14 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %13, align 8
  %15 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %14, i64 0, i32 4
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %12, i64 0, i32 5, i32 1
  %18 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %17, i64 0, i32 0, i32 0
  %19 = load i16, i16* %18, align 8
  %20 = sext i16 %19 to i32
  %21 = and i32 %20, 17
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %32

23:                                               ; preds = %10
  %24 = and i32 %20, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %17 to %struct.anon*
  %28 = getelementptr inbounds %struct.anon, %struct.anon* %27, i64 0, i32 1, i64 0
  br label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %12, i64 0, i32 5, i32 1, i32 0, i32 3
  %31 = load i16*, i16** %30, align 8
  br label %32

32:                                               ; preds = %10, %26, %29
  %33 = phi i16* [ %28, %26 ], [ %31, %29 ], [ null, %10 ]
  %34 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %12, i64 0, i32 6
  %35 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %34, align 8
  %36 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %37 = load %struct.UText*, %struct.UText** %36, align 8
  %38 = getelementptr inbounds %struct.UText, %struct.UText* %37, i64 0, i32 10
  %39 = load i16*, i16** %38, align 8
  %40 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %12, i64 0, i32 10
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 7
  store i32 %41, i32* %42, align 8
  %43 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 25
  %44 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  tail call void @_ZN6icu_699UVector6417removeAllElementsEv(%"class.icu_69::UVector64"* %44) #12
  %45 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %46 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %47 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %46, i64 0, i32 10
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %50 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %45, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = add nsw i32 %51, %48
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %58

54:                                               ; preds = %32
  %55 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %45, i64 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, %52
  br i1 %57, label %58, label %64

58:                                               ; preds = %54, %32
  %59 = tail call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %45, i32 %52, i32* dereferenceable(4) %49) #12
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %71, label %61

61:                                               ; preds = %58
  %62 = load i32, i32* %50, align 8
  %63 = add nsw i32 %62, %48
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i32 [ %63, %61 ], [ %52, %54 ]
  %66 = phi i32 [ %62, %61 ], [ %51, %54 ]
  %67 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %45, i64 0, i32 4
  %68 = load i64*, i64** %67, align 8
  %69 = sext i32 %66 to i64
  %70 = getelementptr inbounds i64, i64* %68, i64 %69
  store i32 %65, i32* %50, align 8
  br label %71

71:                                               ; preds = %64, %58
  %72 = phi i64* [ %70, %64 ], [ null, %58 ]
  %73 = bitcast i64* %72 to %"struct.icu_69::REStackFrame"*
  %74 = load i32, i32* %49, align 4
  %75 = icmp slt i32 %74, 1
  br i1 %75, label %76, label %96

76:                                               ; preds = %71
  %77 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %78 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %77, i64 0, i32 10
  %79 = load i32, i32* %78, align 8
  %80 = icmp sgt i32 %79, 2
  br i1 %80, label %81, label %98

81:                                               ; preds = %76
  %82 = getelementptr inbounds i64, i64* %72, i64 2
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %86, %83 ]
  %85 = getelementptr inbounds i64, i64* %82, i64 %84
  store i64 -1, i64* %85, align 8
  %86 = add nuw nsw i64 %84, 1
  %87 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %88 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %87, i64 0, i32 10
  %89 = load i32, i32* %88, align 8
  %90 = add nsw i32 %89, -2
  %91 = sext i32 %90 to i64
  %92 = icmp slt i64 %86, %91
  br i1 %92, label %83, label %93

93:                                               ; preds = %83
  %94 = load i32, i32* %49, align 4
  %95 = icmp slt i32 %94, 1
  br i1 %95, label %98, label %96

96:                                               ; preds = %71, %93
  %97 = phi i32 [ %94, %93 ], [ %74, %71 ]
  store i32 %97, i32* %3, align 4
  br label %5245

98:                                               ; preds = %76, %93
  %99 = getelementptr inbounds i64, i64* %72, i64 1
  store i64 0, i64* %99, align 8
  %100 = sext i32 %1 to i64
  store i64 %100, i64* %72, align 8
  %101 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %102 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %101, i64 0, i32 11
  %103 = load i32, i32* %102, align 4
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 27
  br label %137

107:                                              ; preds = %137, %98
  %108 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  %109 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  %110 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 33
  %111 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 34
  %112 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 29
  %113 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  %114 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  %115 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 27
  %116 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  %117 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %118 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  %119 = bitcast %"class.icu_69::CaseFoldingUCharIterator"* %7 to i8*
  %120 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  %121 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  %122 = bitcast %"class.icu_69::CaseFoldingUCharIterator"* %5 to i8*
  %123 = bitcast %"class.icu_69::CaseFoldingUCharIterator"* %6 to i8*
  %124 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  %125 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  %126 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 41
  %127 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %128 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  %129 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 40
  %130 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  %131 = icmp eq i8 %2, 0
  %132 = bitcast %"class.icu_69::CaseFoldingUCharIterator"* %7 to i8*
  %133 = bitcast %"class.icu_69::CaseFoldingUCharIterator"* %5 to i8*
  %134 = bitcast %"class.icu_69::CaseFoldingUCharIterator"* %6 to i8*
  %135 = bitcast i64* %120 to <2 x i64>*
  %136 = bitcast i64* %116 to <2 x i64>*
  br label %147

137:                                              ; preds = %105, %137
  %138 = phi i64 [ 0, %105 ], [ %141, %137 ]
  %139 = load i64*, i64** %106, align 8
  %140 = getelementptr inbounds i64, i64* %139, i64 %138
  store i64 0, i64* %140, align 8
  %141 = add nuw nsw i64 %138, 1
  %142 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %143 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %142, i64 0, i32 11
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = icmp slt i64 %141, %145
  br i1 %146, label %137, label %107

147:                                              ; preds = %107, %5230
  %148 = phi %"struct.icu_69::REStackFrame"* [ %5231, %5230 ], [ %73, %107 ]
  %149 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 1
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds i64, i64* %16, i64 %150
  %152 = load i64, i64* %151, align 8
  %153 = trunc i64 %152 to i32
  %154 = lshr i32 %153, 24
  %155 = and i32 %153, 16777215
  %156 = add nsw i64 %150, 1
  store i64 %156, i64* %149, align 8
  %157 = trunc i32 %154 to i8
  switch i8 %157, label %5229 [
    i8 7, label %5230
    i8 1, label %158
    i8 3, label %174
    i8 4, label %220
    i8 6, label %264
    i8 2, label %476
    i8 8, label %498
    i8 9, label %504
    i8 24, label %516
    i8 54, label %622
    i8 42, label %652
    i8 55, label %688
    i8 23, label %714
    i8 43, label %735
    i8 30, label %766
    i8 16, label %792
    i8 53, label %816
    i8 22, label %865
    i8 17, label %929
    i8 56, label %956
    i8 57, label %1022
    i8 58, label %1127
    i8 19, label %1198
    i8 20, label %1250
    i8 10, label %1272
    i8 49, label %1359
    i8 11, label %1436
    i8 12, label %1516
    i8 21, label %1579
    i8 27, label %1647
    i8 13, label %1708
    i8 14, label %5234
    i8 15, label %1710
    i8 18, label %1925
    i8 25, label %2156
    i8 28, label %2412
    i8 26, label %2687
    i8 29, label %2932
    i8 32, label %3206
    i8 33, label %3214
    i8 34, label %3248
    i8 41, label %3327
    i8 35, label %3388
    i8 36, label %3393
    i8 37, label %3425
    i8 38, label %3450
    i8 39, label %3505
    i8 40, label %3552
    i8 44, label %3621
    i8 45, label %3651
    i8 46, label %3956
    i8 47, label %3987
    i8 48, label %4281
    i8 50, label %4332
    i8 52, label %4657
    i8 51, label %4959
  ]

158:                                              ; preds = %147
  %159 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %160 = load i32, i32* %42, align 8
  %161 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %159, i64 0, i32 1
  %162 = load i32, i32* %161, align 8
  %163 = sub nsw i32 %162, %160
  %164 = icmp sgt i32 %163, 0
  %165 = select i1 %164, i32 %163, i32 0
  store i32 %165, i32* %161, align 8
  %166 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %159, i64 0, i32 4
  %167 = load i64*, i64** %166, align 8
  %168 = zext i32 %165 to i64
  %169 = getelementptr inbounds i64, i64* %167, i64 %168
  %170 = sext i32 %160 to i64
  %171 = sub nsw i64 0, %170
  %172 = getelementptr inbounds i64, i64* %169, i64 %171
  %173 = bitcast i64* %172 to %"struct.icu_69::REStackFrame"*
  br label %5230

174:                                              ; preds = %147
  %175 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %176 = load i64, i64* %175, align 8
  %177 = load i64, i64* %113, align 8
  %178 = icmp slt i64 %176, %177
  br i1 %178, label %179, label %203

179:                                              ; preds = %174
  %180 = add nsw i64 %176, 1
  store i64 %180, i64* %175, align 8
  %181 = getelementptr inbounds i16, i16* %39, i64 %176
  %182 = load i16, i16* %181, align 2
  %183 = zext i16 %182 to i32
  %184 = and i32 %183, 64512
  %185 = icmp eq i32 %184, 55296
  br i1 %185, label %186, label %200

186:                                              ; preds = %179
  %187 = load i64, i64* %113, align 8
  %188 = icmp eq i64 %180, %187
  br i1 %188, label %200, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds i16, i16* %39, i64 %180
  %191 = load i16, i16* %190, align 2
  %192 = zext i16 %191 to i32
  %193 = and i32 %192, 64512
  %194 = icmp eq i32 %193, 56320
  br i1 %194, label %195, label %200

195:                                              ; preds = %189
  %196 = add nsw i64 %176, 2
  store i64 %196, i64* %175, align 8
  %197 = shl nuw nsw i32 %183, 10
  %198 = add nsw i32 %197, -56613888
  %199 = add nsw i32 %198, %192
  br label %200

200:                                              ; preds = %189, %195, %186, %179
  %201 = phi i32 [ %183, %179 ], [ %199, %195 ], [ %183, %189 ], [ %183, %186 ]
  %202 = icmp eq i32 %201, %155
  br i1 %202, label %5230, label %204

203:                                              ; preds = %174
  store i8 1, i8* %114, align 8
  br label %204

204:                                              ; preds = %200, %203
  %205 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %206 = load i32, i32* %42, align 8
  %207 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %205, i64 0, i32 1
  %208 = load i32, i32* %207, align 8
  %209 = sub nsw i32 %208, %206
  %210 = icmp sgt i32 %209, 0
  %211 = select i1 %210, i32 %209, i32 0
  store i32 %211, i32* %207, align 8
  %212 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %205, i64 0, i32 4
  %213 = load i64*, i64** %212, align 8
  %214 = zext i32 %211 to i64
  %215 = getelementptr inbounds i64, i64* %213, i64 %214
  %216 = sext i32 %206 to i64
  %217 = sub nsw i64 0, %216
  %218 = getelementptr inbounds i64, i64* %215, i64 %217
  %219 = bitcast i64* %218 to %"struct.icu_69::REStackFrame"*
  br label %5230

220:                                              ; preds = %147
  %221 = getelementptr inbounds i64, i64* %16, i64 %156
  %222 = load i64, i64* %221, align 8
  %223 = add nsw i64 %150, 2
  store i64 %223, i64* %149, align 8
  %224 = and i64 %222, 16777215
  %225 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %226 = load i64, i64* %225, align 8
  %227 = getelementptr inbounds i16, i16* %39, i64 %226
  %228 = load i64, i64* %113, align 8
  %229 = getelementptr inbounds i16, i16* %39, i64 %228
  %230 = zext i32 %155 to i64
  %231 = getelementptr inbounds i16, i16* %33, i64 %230
  %232 = getelementptr inbounds i16, i16* %227, i64 %224
  br label %233

233:                                              ; preds = %240, %220
  %234 = phi i16* [ %231, %220 ], [ %243, %240 ]
  %235 = phi i16* [ %227, %220 ], [ %241, %240 ]
  %236 = icmp ult i16* %235, %232
  br i1 %236, label %237, label %246

237:                                              ; preds = %233
  %238 = icmp ult i16* %235, %229
  br i1 %238, label %240, label %239

239:                                              ; preds = %237
  store i8 1, i8* %114, align 8
  br label %248

240:                                              ; preds = %237
  %241 = getelementptr inbounds i16, i16* %235, i64 1
  %242 = load i16, i16* %235, align 2
  %243 = getelementptr inbounds i16, i16* %234, i64 1
  %244 = load i16, i16* %234, align 2
  %245 = icmp eq i16 %242, %244
  br i1 %245, label %233, label %248

246:                                              ; preds = %233
  %247 = add nsw i64 %226, %224
  store i64 %247, i64* %225, align 8
  br label %5230

248:                                              ; preds = %240, %239
  %249 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %250 = load i32, i32* %42, align 8
  %251 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %249, i64 0, i32 1
  %252 = load i32, i32* %251, align 8
  %253 = sub nsw i32 %252, %250
  %254 = icmp sgt i32 %253, 0
  %255 = select i1 %254, i32 %253, i32 0
  store i32 %255, i32* %251, align 8
  %256 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %249, i64 0, i32 4
  %257 = load i64*, i64** %256, align 8
  %258 = zext i32 %255 to i64
  %259 = getelementptr inbounds i64, i64* %257, i64 %258
  %260 = sext i32 %250 to i64
  %261 = sub nsw i64 0, %260
  %262 = getelementptr inbounds i64, i64* %259, i64 %261
  %263 = bitcast i64* %262 to %"struct.icu_69::REStackFrame"*
  br label %5230

264:                                              ; preds = %147
  %265 = zext i32 %155 to i64
  %266 = load i32, i32* %3, align 4
  %267 = icmp slt i32 %266, 1
  br i1 %267, label %268, label %5234

268:                                              ; preds = %264
  %269 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %270 = load i32, i32* %42, align 8
  %271 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %269, i64 0, i32 1
  %272 = load i32, i32* %271, align 8
  %273 = add nsw i32 %272, %270
  %274 = icmp sgt i32 %273, -1
  br i1 %274, label %275, label %279

275:                                              ; preds = %268
  %276 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %269, i64 0, i32 2
  %277 = load i32, i32* %276, align 4
  %278 = icmp slt i32 %277, %273
  br i1 %278, label %279, label %285

279:                                              ; preds = %275, %268
  %280 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %269, i32 %273, i32* dereferenceable(4) %3) #12
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %292, label %282

282:                                              ; preds = %279
  %283 = load i32, i32* %271, align 8
  %284 = add nsw i32 %283, %270
  br label %285

285:                                              ; preds = %282, %275
  %286 = phi i32 [ %284, %282 ], [ %273, %275 ]
  %287 = phi i32 [ %283, %282 ], [ %272, %275 ]
  %288 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %269, i64 0, i32 4
  %289 = load i64*, i64** %288, align 8
  %290 = sext i32 %287 to i64
  %291 = getelementptr inbounds i64, i64* %289, i64 %290
  store i32 %286, i32* %271, align 8
  br label %292

292:                                              ; preds = %285, %279
  %293 = phi i64* [ %291, %285 ], [ null, %279 ]
  %294 = load i32, i32* %3, align 4
  %295 = icmp slt i32 %294, 1
  br i1 %295, label %297, label %296

296:                                              ; preds = %292
  store i32 66321, i32* %3, align 4
  br label %5234

297:                                              ; preds = %292
  %298 = load i32, i32* %42, align 8
  %299 = sext i32 %298 to i64
  %300 = sub nsw i64 0, %299
  %301 = getelementptr inbounds i64, i64* %293, i64 %300
  %302 = shl nsw i64 %299, 3
  %303 = add nsw i64 %302, -8
  %304 = lshr exact i64 %303, 3
  %305 = add nuw nsw i64 %304, 1
  %306 = icmp ult i64 %305, 4
  br i1 %306, label %400, label %307

307:                                              ; preds = %297
  %308 = getelementptr i64, i64* %293, i64 1
  %309 = shl nsw i64 %299, 3
  %310 = add nsw i64 %309, -8
  %311 = lshr exact i64 %310, 3
  %312 = getelementptr i64, i64* %308, i64 %311
  %313 = getelementptr i64, i64* %293, i64 1
  %314 = sub nsw i64 %311, %299
  %315 = getelementptr i64, i64* %313, i64 %314
  %316 = icmp ult i64* %293, %315
  %317 = icmp ult i64* %301, %312
  %318 = and i1 %316, %317
  br i1 %318, label %400, label %319

319:                                              ; preds = %307
  %320 = and i64 %305, 4611686018427387900
  %321 = getelementptr i64, i64* %301, i64 %320
  %322 = getelementptr i64, i64* %293, i64 %320
  %323 = add nsw i64 %320, -4
  %324 = lshr exact i64 %323, 2
  %325 = add nuw nsw i64 %324, 1
  %326 = and i64 %325, 3
  %327 = icmp ult i64 %323, 12
  br i1 %327, label %379, label %328

328:                                              ; preds = %319
  %329 = sub nsw i64 %325, %326
  br label %330

330:                                              ; preds = %330, %328
  %331 = phi i64 [ 0, %328 ], [ %376, %330 ]
  %332 = phi i64 [ %329, %328 ], [ %377, %330 ]
  %333 = getelementptr i64, i64* %301, i64 %331
  %334 = getelementptr i64, i64* %293, i64 %331
  %335 = bitcast i64* %333 to <2 x i64>*
  %336 = load <2 x i64>, <2 x i64>* %335, align 8, !alias.scope !112
  %337 = getelementptr i64, i64* %333, i64 2
  %338 = bitcast i64* %337 to <2 x i64>*
  %339 = load <2 x i64>, <2 x i64>* %338, align 8, !alias.scope !112
  %340 = bitcast i64* %334 to <2 x i64>*
  store <2 x i64> %336, <2 x i64>* %340, align 8, !alias.scope !115, !noalias !112
  %341 = getelementptr i64, i64* %334, i64 2
  %342 = bitcast i64* %341 to <2 x i64>*
  store <2 x i64> %339, <2 x i64>* %342, align 8, !alias.scope !115, !noalias !112
  %343 = or i64 %331, 4
  %344 = getelementptr i64, i64* %301, i64 %343
  %345 = getelementptr i64, i64* %293, i64 %343
  %346 = bitcast i64* %344 to <2 x i64>*
  %347 = load <2 x i64>, <2 x i64>* %346, align 8, !alias.scope !112
  %348 = getelementptr i64, i64* %344, i64 2
  %349 = bitcast i64* %348 to <2 x i64>*
  %350 = load <2 x i64>, <2 x i64>* %349, align 8, !alias.scope !112
  %351 = bitcast i64* %345 to <2 x i64>*
  store <2 x i64> %347, <2 x i64>* %351, align 8, !alias.scope !115, !noalias !112
  %352 = getelementptr i64, i64* %345, i64 2
  %353 = bitcast i64* %352 to <2 x i64>*
  store <2 x i64> %350, <2 x i64>* %353, align 8, !alias.scope !115, !noalias !112
  %354 = or i64 %331, 8
  %355 = getelementptr i64, i64* %301, i64 %354
  %356 = getelementptr i64, i64* %293, i64 %354
  %357 = bitcast i64* %355 to <2 x i64>*
  %358 = load <2 x i64>, <2 x i64>* %357, align 8, !alias.scope !112
  %359 = getelementptr i64, i64* %355, i64 2
  %360 = bitcast i64* %359 to <2 x i64>*
  %361 = load <2 x i64>, <2 x i64>* %360, align 8, !alias.scope !112
  %362 = bitcast i64* %356 to <2 x i64>*
  store <2 x i64> %358, <2 x i64>* %362, align 8, !alias.scope !115, !noalias !112
  %363 = getelementptr i64, i64* %356, i64 2
  %364 = bitcast i64* %363 to <2 x i64>*
  store <2 x i64> %361, <2 x i64>* %364, align 8, !alias.scope !115, !noalias !112
  %365 = or i64 %331, 12
  %366 = getelementptr i64, i64* %301, i64 %365
  %367 = getelementptr i64, i64* %293, i64 %365
  %368 = bitcast i64* %366 to <2 x i64>*
  %369 = load <2 x i64>, <2 x i64>* %368, align 8, !alias.scope !112
  %370 = getelementptr i64, i64* %366, i64 2
  %371 = bitcast i64* %370 to <2 x i64>*
  %372 = load <2 x i64>, <2 x i64>* %371, align 8, !alias.scope !112
  %373 = bitcast i64* %367 to <2 x i64>*
  store <2 x i64> %369, <2 x i64>* %373, align 8, !alias.scope !115, !noalias !112
  %374 = getelementptr i64, i64* %367, i64 2
  %375 = bitcast i64* %374 to <2 x i64>*
  store <2 x i64> %372, <2 x i64>* %375, align 8, !alias.scope !115, !noalias !112
  %376 = add i64 %331, 16
  %377 = add i64 %332, -4
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %379, label %330, !llvm.loop !117

379:                                              ; preds = %330, %319
  %380 = phi i64 [ 0, %319 ], [ %376, %330 ]
  %381 = icmp eq i64 %326, 0
  br i1 %381, label %398, label %382

382:                                              ; preds = %379, %382
  %383 = phi i64 [ %395, %382 ], [ %380, %379 ]
  %384 = phi i64 [ %396, %382 ], [ %326, %379 ]
  %385 = getelementptr i64, i64* %301, i64 %383
  %386 = getelementptr i64, i64* %293, i64 %383
  %387 = bitcast i64* %385 to <2 x i64>*
  %388 = load <2 x i64>, <2 x i64>* %387, align 8, !alias.scope !112
  %389 = getelementptr i64, i64* %385, i64 2
  %390 = bitcast i64* %389 to <2 x i64>*
  %391 = load <2 x i64>, <2 x i64>* %390, align 8, !alias.scope !112
  %392 = bitcast i64* %386 to <2 x i64>*
  store <2 x i64> %388, <2 x i64>* %392, align 8, !alias.scope !115, !noalias !112
  %393 = getelementptr i64, i64* %386, i64 2
  %394 = bitcast i64* %393 to <2 x i64>*
  store <2 x i64> %391, <2 x i64>* %394, align 8, !alias.scope !115, !noalias !112
  %395 = add i64 %383, 4
  %396 = add i64 %384, -1
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %398, label %382, !llvm.loop !118

398:                                              ; preds = %382, %379
  %399 = icmp eq i64 %305, %320
  br i1 %399, label %452, label %400

400:                                              ; preds = %398, %307, %297
  %401 = phi i64* [ %301, %307 ], [ %301, %297 ], [ %321, %398 ]
  %402 = phi i64* [ %293, %307 ], [ %293, %297 ], [ %322, %398 ]
  %403 = ptrtoint i64* %401 to i64
  %404 = getelementptr i64, i64* %293, i64 -1
  %405 = ptrtoint i64* %404 to i64
  %406 = sub i64 %405, %403
  %407 = lshr i64 %406, 3
  %408 = add nuw nsw i64 %407, 1
  %409 = and i64 %408, 7
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %420, label %411

411:                                              ; preds = %400, %411
  %412 = phi i64* [ %415, %411 ], [ %401, %400 ]
  %413 = phi i64* [ %417, %411 ], [ %402, %400 ]
  %414 = phi i64 [ %418, %411 ], [ %409, %400 ]
  %415 = getelementptr inbounds i64, i64* %412, i64 1
  %416 = load i64, i64* %412, align 8
  %417 = getelementptr inbounds i64, i64* %413, i64 1
  store i64 %416, i64* %413, align 8
  %418 = add i64 %414, -1
  %419 = icmp eq i64 %418, 0
  br i1 %419, label %420, label %411, !llvm.loop !119

420:                                              ; preds = %411, %400
  %421 = phi i64* [ %401, %400 ], [ %415, %411 ]
  %422 = phi i64* [ %402, %400 ], [ %417, %411 ]
  %423 = icmp ult i64 %406, 56
  br i1 %423, label %452, label %424

424:                                              ; preds = %420, %424
  %425 = phi i64* [ %448, %424 ], [ %421, %420 ]
  %426 = phi i64* [ %450, %424 ], [ %422, %420 ]
  %427 = getelementptr inbounds i64, i64* %425, i64 1
  %428 = load i64, i64* %425, align 8
  %429 = getelementptr inbounds i64, i64* %426, i64 1
  store i64 %428, i64* %426, align 8
  %430 = getelementptr inbounds i64, i64* %425, i64 2
  %431 = load i64, i64* %427, align 8
  %432 = getelementptr inbounds i64, i64* %426, i64 2
  store i64 %431, i64* %429, align 8
  %433 = getelementptr inbounds i64, i64* %425, i64 3
  %434 = load i64, i64* %430, align 8
  %435 = getelementptr inbounds i64, i64* %426, i64 3
  store i64 %434, i64* %432, align 8
  %436 = getelementptr inbounds i64, i64* %425, i64 4
  %437 = load i64, i64* %433, align 8
  %438 = getelementptr inbounds i64, i64* %426, i64 4
  store i64 %437, i64* %435, align 8
  %439 = getelementptr inbounds i64, i64* %425, i64 5
  %440 = load i64, i64* %436, align 8
  %441 = getelementptr inbounds i64, i64* %426, i64 5
  store i64 %440, i64* %438, align 8
  %442 = getelementptr inbounds i64, i64* %425, i64 6
  %443 = load i64, i64* %439, align 8
  %444 = getelementptr inbounds i64, i64* %426, i64 6
  store i64 %443, i64* %441, align 8
  %445 = getelementptr inbounds i64, i64* %425, i64 7
  %446 = load i64, i64* %442, align 8
  %447 = getelementptr inbounds i64, i64* %426, i64 7
  store i64 %446, i64* %444, align 8
  %448 = getelementptr inbounds i64, i64* %425, i64 8
  %449 = load i64, i64* %445, align 8
  %450 = getelementptr inbounds i64, i64* %426, i64 8
  store i64 %449, i64* %447, align 8
  %451 = icmp eq i64* %448, %293
  br i1 %451, label %452, label %424, !llvm.loop !120

452:                                              ; preds = %420, %424, %398
  %453 = load i32, i32* %108, align 8
  %454 = add nsw i32 %453, -1
  store i32 %454, i32* %108, align 8
  %455 = icmp slt i32 %453, 2
  br i1 %455, label %456, label %473

456:                                              ; preds = %452
  store i32 10000, i32* %108, align 8
  %457 = load i32, i32* %109, align 4
  %458 = add nsw i32 %457, 1
  store i32 %458, i32* %109, align 4
  %459 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %460 = icmp eq i8 (i8*, i32)* %459, null
  br i1 %460, label %466, label %461

461:                                              ; preds = %456
  %462 = load i8*, i8** %111, align 8
  %463 = call signext i8 %459(i8* %462, i32 %458) #12
  %464 = icmp eq i8 %463, 0
  br i1 %464, label %465, label %466

465:                                              ; preds = %461
  store i32 66323, i32* %3, align 4
  br label %473

466:                                              ; preds = %461, %456
  %467 = load i32, i32* %112, align 8
  %468 = icmp sgt i32 %467, 0
  br i1 %468, label %469, label %473

469:                                              ; preds = %466
  %470 = load i32, i32* %109, align 4
  %471 = icmp slt i32 %470, %467
  br i1 %471, label %473, label %472

472:                                              ; preds = %469
  store i32 66322, i32* %3, align 4
  br label %473

473:                                              ; preds = %472, %469, %466, %465, %452
  %474 = getelementptr inbounds i64, i64* %301, i64 1
  store i64 %265, i64* %474, align 8
  %475 = bitcast i64* %293 to %"struct.icu_69::REStackFrame"*
  br label %5230

476:                                              ; preds = %147
  br i1 %131, label %5236, label %477

477:                                              ; preds = %476
  %478 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %479 = load i64, i64* %478, align 8
  %480 = load i64, i64* %113, align 8
  %481 = icmp eq i64 %479, %480
  br i1 %481, label %5236, label %482

482:                                              ; preds = %477
  %483 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %484 = load i32, i32* %42, align 8
  %485 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %483, i64 0, i32 1
  %486 = load i32, i32* %485, align 8
  %487 = sub nsw i32 %486, %484
  %488 = icmp sgt i32 %487, 0
  %489 = select i1 %488, i32 %487, i32 0
  store i32 %489, i32* %485, align 8
  %490 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %483, i64 0, i32 4
  %491 = load i64*, i64** %490, align 8
  %492 = zext i32 %489 to i64
  %493 = getelementptr inbounds i64, i64* %491, i64 %492
  %494 = sext i32 %484 to i64
  %495 = sub nsw i64 0, %494
  %496 = getelementptr inbounds i64, i64* %493, i64 %495
  %497 = bitcast i64* %496 to %"struct.icu_69::REStackFrame"*
  br label %5230

498:                                              ; preds = %147
  %499 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %500 = load i64, i64* %499, align 8
  %501 = add nuw nsw i32 %155, 2
  %502 = zext i32 %501 to i64
  %503 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %502
  store i64 %500, i64* %503, align 8
  br label %5230

504:                                              ; preds = %147
  %505 = add nuw nsw i32 %155, 2
  %506 = zext i32 %505 to i64
  %507 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %506
  %508 = load i64, i64* %507, align 8
  %509 = zext i32 %155 to i64
  %510 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %509
  store i64 %508, i64* %510, align 8
  %511 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %512 = load i64, i64* %511, align 8
  %513 = add nuw nsw i32 %155, 1
  %514 = zext i32 %513 to i64
  %515 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %514
  store i64 %512, i64* %515, align 8
  br label %5230

516:                                              ; preds = %147
  %517 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %518 = load i64, i64* %517, align 8
  %519 = load i64, i64* %124, align 8
  %520 = add nsw i64 %519, -2
  %521 = icmp slt i64 %518, %520
  br i1 %521, label %522, label %538

522:                                              ; preds = %516
  %523 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %524 = load i32, i32* %42, align 8
  %525 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %523, i64 0, i32 1
  %526 = load i32, i32* %525, align 8
  %527 = sub nsw i32 %526, %524
  %528 = icmp sgt i32 %527, 0
  %529 = select i1 %528, i32 %527, i32 0
  store i32 %529, i32* %525, align 8
  %530 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %523, i64 0, i32 4
  %531 = load i64*, i64** %530, align 8
  %532 = zext i32 %529 to i64
  %533 = getelementptr inbounds i64, i64* %531, i64 %532
  %534 = sext i32 %524 to i64
  %535 = sub nsw i64 0, %534
  %536 = getelementptr inbounds i64, i64* %533, i64 %535
  %537 = bitcast i64* %536 to %"struct.icu_69::REStackFrame"*
  br label %5230

538:                                              ; preds = %516
  %539 = icmp slt i64 %518, %519
  br i1 %539, label %541, label %540

540:                                              ; preds = %538
  store i8 1, i8* %114, align 8
  store i8 1, i8* %125, align 1
  br label %5230

541:                                              ; preds = %538
  %542 = add nsw i64 %519, -1
  %543 = icmp eq i64 %518, %542
  br i1 %543, label %544, label %594

544:                                              ; preds = %541
  %545 = getelementptr inbounds i16, i16* %39, i64 %518
  %546 = load i16, i16* %545, align 2
  %547 = zext i16 %546 to i32
  %548 = and i32 %547, 63488
  %549 = icmp eq i32 %548, 55296
  br i1 %549, label %550, label %580

550:                                              ; preds = %544
  %551 = and i32 %547, 1024
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %553, label %566

553:                                              ; preds = %550
  %554 = add nsw i64 %518, 1
  %555 = icmp eq i64 %554, %519
  br i1 %555, label %580, label %556

556:                                              ; preds = %553
  %557 = getelementptr inbounds i16, i16* %39, i64 %554
  %558 = load i16, i16* %557, align 2
  %559 = zext i16 %558 to i32
  %560 = and i32 %559, 64512
  %561 = icmp eq i32 %560, 56320
  br i1 %561, label %562, label %580

562:                                              ; preds = %556
  %563 = shl nuw nsw i32 %547, 10
  %564 = add nsw i32 %563, -56613888
  %565 = add nsw i32 %564, %559
  br label %580

566:                                              ; preds = %550
  %567 = load i64, i64* %130, align 8
  %568 = icmp sgt i64 %518, %567
  br i1 %568, label %569, label %580

569:                                              ; preds = %566
  %570 = add nsw i64 %518, -1
  %571 = getelementptr inbounds i16, i16* %39, i64 %570
  %572 = load i16, i16* %571, align 2
  %573 = zext i16 %572 to i32
  %574 = and i32 %573, 64512
  %575 = icmp eq i32 %574, 55296
  br i1 %575, label %576, label %580

576:                                              ; preds = %569
  %577 = shl nuw nsw i32 %573, 10
  %578 = add nuw nsw i32 %547, -56613888
  %579 = add nsw i32 %578, %577
  br label %580

580:                                              ; preds = %562, %556, %576, %569, %566, %553, %544
  %581 = phi i32 [ %547, %544 ], [ %565, %562 ], [ %547, %556 ], [ %547, %553 ], [ %579, %576 ], [ %547, %569 ], [ %547, %566 ]
  %582 = and i32 %581, -8368
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %584, label %606

584:                                              ; preds = %580
  switch i32 %581, label %606 [
    i32 10, label %585
    i32 11, label %593
    i32 12, label %593
    i32 13, label %593
    i32 133, label %593
    i32 8232, label %593
    i32 8233, label %593
  ]

585:                                              ; preds = %584
  %586 = load i64, i64* %130, align 8
  %587 = icmp sgt i64 %518, %586
  br i1 %587, label %588, label %593

588:                                              ; preds = %585
  %589 = add nsw i64 %518, -1
  %590 = getelementptr inbounds i16, i16* %39, i64 %589
  %591 = load i16, i16* %590, align 2
  %592 = icmp eq i16 %591, 13
  br i1 %592, label %606, label %593

593:                                              ; preds = %584, %584, %584, %584, %584, %584, %588, %585
  store i8 1, i8* %114, align 8
  store i8 1, i8* %125, align 1
  br label %5230

594:                                              ; preds = %541
  %595 = icmp eq i64 %518, %520
  br i1 %595, label %596, label %606

596:                                              ; preds = %594
  %597 = getelementptr inbounds i16, i16* %39, i64 %518
  %598 = load i16, i16* %597, align 2
  %599 = icmp eq i16 %598, 13
  br i1 %599, label %600, label %606

600:                                              ; preds = %596
  %601 = add nsw i64 %518, 1
  %602 = getelementptr inbounds i16, i16* %39, i64 %601
  %603 = load i16, i16* %602, align 2
  %604 = icmp eq i16 %603, 10
  br i1 %604, label %605, label %606

605:                                              ; preds = %600
  store i8 1, i8* %114, align 8
  store i8 1, i8* %125, align 1
  br label %5230

606:                                              ; preds = %584, %580, %588, %594, %596, %600
  %607 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %608 = load i32, i32* %42, align 8
  %609 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %607, i64 0, i32 1
  %610 = load i32, i32* %609, align 8
  %611 = sub nsw i32 %610, %608
  %612 = icmp sgt i32 %611, 0
  %613 = select i1 %612, i32 %611, i32 0
  store i32 %613, i32* %609, align 8
  %614 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %607, i64 0, i32 4
  %615 = load i64*, i64** %614, align 8
  %616 = zext i32 %613 to i64
  %617 = getelementptr inbounds i64, i64* %615, i64 %616
  %618 = sext i32 %608 to i64
  %619 = sub nsw i64 0, %618
  %620 = getelementptr inbounds i64, i64* %617, i64 %619
  %621 = bitcast i64* %620 to %"struct.icu_69::REStackFrame"*
  br label %5230

622:                                              ; preds = %147
  %623 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %624 = load i64, i64* %623, align 8
  %625 = load i64, i64* %124, align 8
  %626 = add nsw i64 %625, -1
  %627 = icmp slt i64 %624, %626
  br i1 %627, label %636, label %628

628:                                              ; preds = %622
  %629 = icmp eq i64 %624, %626
  br i1 %629, label %630, label %635

630:                                              ; preds = %628
  %631 = getelementptr inbounds i16, i16* %39, i64 %624
  %632 = load i16, i16* %631, align 2
  %633 = icmp eq i16 %632, 10
  br i1 %633, label %634, label %636

634:                                              ; preds = %630
  store i8 1, i8* %114, align 8
  store i8 1, i8* %125, align 1
  br label %5230

635:                                              ; preds = %628
  store i8 1, i8* %114, align 8
  store i8 1, i8* %125, align 1
  br label %5230

636:                                              ; preds = %622, %630
  %637 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %638 = load i32, i32* %42, align 8
  %639 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %637, i64 0, i32 1
  %640 = load i32, i32* %639, align 8
  %641 = sub nsw i32 %640, %638
  %642 = icmp sgt i32 %641, 0
  %643 = select i1 %642, i32 %641, i32 0
  store i32 %643, i32* %639, align 8
  %644 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %637, i64 0, i32 4
  %645 = load i64*, i64** %644, align 8
  %646 = zext i32 %643 to i64
  %647 = getelementptr inbounds i64, i64* %645, i64 %646
  %648 = sext i32 %638 to i64
  %649 = sub nsw i64 0, %648
  %650 = getelementptr inbounds i64, i64* %647, i64 %649
  %651 = bitcast i64* %650 to %"struct.icu_69::REStackFrame"*
  br label %5230

652:                                              ; preds = %147
  %653 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %654 = load i64, i64* %653, align 8
  %655 = load i64, i64* %124, align 8
  %656 = icmp slt i64 %654, %655
  br i1 %656, label %658, label %657

657:                                              ; preds = %652
  store i8 1, i8* %114, align 8
  store i8 1, i8* %125, align 1
  br label %5230

658:                                              ; preds = %652
  %659 = getelementptr inbounds i16, i16* %39, i64 %654
  %660 = load i16, i16* %659, align 2
  %661 = and i16 %660, -8368
  %662 = icmp eq i16 %661, 0
  br i1 %662, label %663, label %672

663:                                              ; preds = %658
  switch i16 %660, label %672 [
    i16 10, label %664
    i16 11, label %5230
    i16 12, label %5230
    i16 13, label %5230
    i16 133, label %5230
    i16 8232, label %5230
    i16 8233, label %5230
  ]

664:                                              ; preds = %663
  %665 = load i64, i64* %130, align 8
  %666 = icmp sgt i64 %654, %665
  br i1 %666, label %667, label %5230

667:                                              ; preds = %664
  %668 = add nsw i64 %654, -1
  %669 = getelementptr inbounds i16, i16* %39, i64 %668
  %670 = load i16, i16* %669, align 2
  %671 = icmp eq i16 %670, 13
  br i1 %671, label %672, label %5230

672:                                              ; preds = %663, %658, %667
  %673 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %674 = load i32, i32* %42, align 8
  %675 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %673, i64 0, i32 1
  %676 = load i32, i32* %675, align 8
  %677 = sub nsw i32 %676, %674
  %678 = icmp sgt i32 %677, 0
  %679 = select i1 %678, i32 %677, i32 0
  store i32 %679, i32* %675, align 8
  %680 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %673, i64 0, i32 4
  %681 = load i64*, i64** %680, align 8
  %682 = zext i32 %679 to i64
  %683 = getelementptr inbounds i64, i64* %681, i64 %682
  %684 = sext i32 %674 to i64
  %685 = sub nsw i64 0, %684
  %686 = getelementptr inbounds i64, i64* %683, i64 %685
  %687 = bitcast i64* %686 to %"struct.icu_69::REStackFrame"*
  br label %5230

688:                                              ; preds = %147
  %689 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %690 = load i64, i64* %689, align 8
  %691 = load i64, i64* %124, align 8
  %692 = icmp slt i64 %690, %691
  br i1 %692, label %694, label %693

693:                                              ; preds = %688
  store i8 1, i8* %114, align 8
  store i8 1, i8* %125, align 1
  br label %5230

694:                                              ; preds = %688
  %695 = getelementptr inbounds i16, i16* %39, i64 %690
  %696 = load i16, i16* %695, align 2
  %697 = icmp eq i16 %696, 10
  br i1 %697, label %5230, label %698

698:                                              ; preds = %694
  %699 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %700 = load i32, i32* %42, align 8
  %701 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %699, i64 0, i32 1
  %702 = load i32, i32* %701, align 8
  %703 = sub nsw i32 %702, %700
  %704 = icmp sgt i32 %703, 0
  %705 = select i1 %704, i32 %703, i32 0
  store i32 %705, i32* %701, align 8
  %706 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %699, i64 0, i32 4
  %707 = load i64*, i64** %706, align 8
  %708 = zext i32 %705 to i64
  %709 = getelementptr inbounds i64, i64* %707, i64 %708
  %710 = sext i32 %700 to i64
  %711 = sub nsw i64 0, %710
  %712 = getelementptr inbounds i64, i64* %709, i64 %711
  %713 = bitcast i64* %712 to %"struct.icu_69::REStackFrame"*
  br label %5230

714:                                              ; preds = %147
  %715 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %716 = load i64, i64* %715, align 8
  %717 = load i64, i64* %130, align 8
  %718 = icmp eq i64 %716, %717
  br i1 %718, label %5230, label %719

719:                                              ; preds = %714
  %720 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %721 = load i32, i32* %42, align 8
  %722 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %720, i64 0, i32 1
  %723 = load i32, i32* %722, align 8
  %724 = sub nsw i32 %723, %721
  %725 = icmp sgt i32 %724, 0
  %726 = select i1 %725, i32 %724, i32 0
  store i32 %726, i32* %722, align 8
  %727 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %720, i64 0, i32 4
  %728 = load i64*, i64** %727, align 8
  %729 = zext i32 %726 to i64
  %730 = getelementptr inbounds i64, i64* %728, i64 %729
  %731 = sext i32 %721 to i64
  %732 = sub nsw i64 0, %731
  %733 = getelementptr inbounds i64, i64* %730, i64 %732
  %734 = bitcast i64* %733 to %"struct.icu_69::REStackFrame"*
  br label %5230

735:                                              ; preds = %147
  %736 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %737 = load i64, i64* %736, align 8
  %738 = load i64, i64* %130, align 8
  %739 = icmp eq i64 %737, %738
  br i1 %739, label %5230, label %740

740:                                              ; preds = %735
  %741 = load i64, i64* %124, align 8
  %742 = icmp slt i64 %737, %741
  br i1 %742, label %743, label %750

743:                                              ; preds = %740
  %744 = add nsw i64 %737, -1
  %745 = getelementptr inbounds i16, i16* %39, i64 %744
  %746 = load i16, i16* %745, align 2
  %747 = and i16 %746, -8368
  %748 = icmp eq i16 %747, 0
  br i1 %748, label %749, label %750

749:                                              ; preds = %743
  switch i16 %746, label %750 [
    i16 8232, label %5230
    i16 133, label %5230
    i16 13, label %5230
    i16 12, label %5230
    i16 11, label %5230
    i16 10, label %5230
    i16 8233, label %5230
  ]

750:                                              ; preds = %749, %743, %740
  %751 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %752 = load i32, i32* %42, align 8
  %753 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %751, i64 0, i32 1
  %754 = load i32, i32* %753, align 8
  %755 = sub nsw i32 %754, %752
  %756 = icmp sgt i32 %755, 0
  %757 = select i1 %756, i32 %755, i32 0
  store i32 %757, i32* %753, align 8
  %758 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %751, i64 0, i32 4
  %759 = load i64*, i64** %758, align 8
  %760 = zext i32 %757 to i64
  %761 = getelementptr inbounds i64, i64* %759, i64 %760
  %762 = sext i32 %752 to i64
  %763 = sub nsw i64 0, %762
  %764 = getelementptr inbounds i64, i64* %761, i64 %763
  %765 = bitcast i64* %764 to %"struct.icu_69::REStackFrame"*
  br label %5230

766:                                              ; preds = %147
  %767 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %768 = load i64, i64* %767, align 8
  %769 = load i64, i64* %130, align 8
  %770 = icmp sgt i64 %768, %769
  br i1 %770, label %771, label %5230

771:                                              ; preds = %766
  %772 = add nsw i64 %768, -1
  %773 = getelementptr inbounds i16, i16* %39, i64 %772
  %774 = load i16, i16* %773, align 2
  %775 = icmp eq i16 %774, 10
  br i1 %775, label %5230, label %776

776:                                              ; preds = %771
  %777 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %778 = load i32, i32* %42, align 8
  %779 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %777, i64 0, i32 1
  %780 = load i32, i32* %779, align 8
  %781 = sub nsw i32 %780, %778
  %782 = icmp sgt i32 %781, 0
  %783 = select i1 %782, i32 %781, i32 0
  store i32 %783, i32* %779, align 8
  %784 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %777, i64 0, i32 4
  %785 = load i64*, i64** %784, align 8
  %786 = zext i32 %783 to i64
  %787 = getelementptr inbounds i64, i64* %785, i64 %786
  %788 = sext i32 %778 to i64
  %789 = sub nsw i64 0, %788
  %790 = getelementptr inbounds i64, i64* %787, i64 %789
  %791 = bitcast i64* %790 to %"struct.icu_69::REStackFrame"*
  br label %5230

792:                                              ; preds = %147
  %793 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %794 = load i64, i64* %793, align 8
  %795 = trunc i64 %794 to i32
  %796 = call signext i8 @_ZN6icu_6912RegexMatcher19isChunkWordBoundaryEi(%"class.icu_69::RegexMatcher"* %0, i32 %795)
  %797 = icmp ne i32 %155, 0
  %798 = zext i1 %797 to i8
  %799 = icmp eq i8 %796, %798
  br i1 %799, label %800, label %5230

800:                                              ; preds = %792
  %801 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %802 = load i32, i32* %42, align 8
  %803 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %801, i64 0, i32 1
  %804 = load i32, i32* %803, align 8
  %805 = sub nsw i32 %804, %802
  %806 = icmp sgt i32 %805, 0
  %807 = select i1 %806, i32 %805, i32 0
  store i32 %807, i32* %803, align 8
  %808 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %801, i64 0, i32 4
  %809 = load i64*, i64** %808, align 8
  %810 = zext i32 %807 to i64
  %811 = getelementptr inbounds i64, i64* %809, i64 %810
  %812 = sext i32 %802 to i64
  %813 = sub nsw i64 0, %812
  %814 = getelementptr inbounds i64, i64* %811, i64 %813
  %815 = bitcast i64* %814 to %"struct.icu_69::REStackFrame"*
  br label %5230

816:                                              ; preds = %147
  %817 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %818 = load i64, i64* %817, align 8
  %819 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %129, align 8
  %820 = icmp eq %"class.icu_69::BreakIterator"* %819, null
  br i1 %820, label %821, label %832

821:                                              ; preds = %816
  %822 = call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getEnglishEv() #12
  %823 = call %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIterator18createWordInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224) %822, i32* dereferenceable(4) %3) #12
  store %"class.icu_69::BreakIterator"* %823, %"class.icu_69::BreakIterator"** %129, align 8
  %824 = load i32, i32* %3, align 4
  %825 = icmp slt i32 %824, 1
  br i1 %825, label %826, label %844

826:                                              ; preds = %821
  %827 = load %struct.UText*, %struct.UText** %36, align 8
  %828 = bitcast %"class.icu_69::BreakIterator"* %823 to void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)***
  %829 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)**, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*** %828, align 8
  %830 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %829, i64 8
  %831 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %830, align 8
  call void %831(%"class.icu_69::BreakIterator"* %823, %struct.UText* %827, i32* dereferenceable(4) %3) #12
  br label %832

832:                                              ; preds = %826, %816
  %833 = load i64, i64* %121, align 8
  %834 = icmp sgt i64 %833, %818
  br i1 %834, label %836, label %835

835:                                              ; preds = %832
  store i8 1, i8* %114, align 8
  br label %844

836:                                              ; preds = %832
  %837 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %129, align 8
  %838 = trunc i64 %818 to i32
  %839 = bitcast %"class.icu_69::BreakIterator"* %837 to i8 (%"class.icu_69::BreakIterator"*, i32)***
  %840 = load i8 (%"class.icu_69::BreakIterator"*, i32)**, i8 (%"class.icu_69::BreakIterator"*, i32)*** %839, align 8
  %841 = getelementptr inbounds i8 (%"class.icu_69::BreakIterator"*, i32)*, i8 (%"class.icu_69::BreakIterator"*, i32)** %840, i64 17
  %842 = load i8 (%"class.icu_69::BreakIterator"*, i32)*, i8 (%"class.icu_69::BreakIterator"*, i32)** %841, align 8
  %843 = call signext i8 %842(%"class.icu_69::BreakIterator"* %837, i32 %838) #12
  br label %844

844:                                              ; preds = %821, %835, %836
  %845 = phi i8 [ 0, %821 ], [ 1, %835 ], [ %843, %836 ]
  %846 = icmp ne i32 %155, 0
  %847 = zext i1 %846 to i8
  %848 = icmp eq i8 %845, %847
  br i1 %848, label %849, label %5230

849:                                              ; preds = %844
  %850 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %851 = load i32, i32* %42, align 8
  %852 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %850, i64 0, i32 1
  %853 = load i32, i32* %852, align 8
  %854 = sub nsw i32 %853, %851
  %855 = icmp sgt i32 %854, 0
  %856 = select i1 %855, i32 %854, i32 0
  store i32 %856, i32* %852, align 8
  %857 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %850, i64 0, i32 4
  %858 = load i64*, i64** %857, align 8
  %859 = zext i32 %856 to i64
  %860 = getelementptr inbounds i64, i64* %858, i64 %859
  %861 = sext i32 %851 to i64
  %862 = sub nsw i64 0, %861
  %863 = getelementptr inbounds i64, i64* %860, i64 %862
  %864 = bitcast i64* %863 to %"struct.icu_69::REStackFrame"*
  br label %5230

865:                                              ; preds = %147
  %866 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %867 = load i64, i64* %866, align 8
  %868 = load i64, i64* %113, align 8
  %869 = icmp slt i64 %867, %868
  br i1 %869, label %886, label %870

870:                                              ; preds = %865
  store i8 1, i8* %114, align 8
  %871 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %872 = load i32, i32* %42, align 8
  %873 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %871, i64 0, i32 1
  %874 = load i32, i32* %873, align 8
  %875 = sub nsw i32 %874, %872
  %876 = icmp sgt i32 %875, 0
  %877 = select i1 %876, i32 %875, i32 0
  store i32 %877, i32* %873, align 8
  %878 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %871, i64 0, i32 4
  %879 = load i64*, i64** %878, align 8
  %880 = zext i32 %877 to i64
  %881 = getelementptr inbounds i64, i64* %879, i64 %880
  %882 = sext i32 %872 to i64
  %883 = sub nsw i64 0, %882
  %884 = getelementptr inbounds i64, i64* %881, i64 %883
  %885 = bitcast i64* %884 to %"struct.icu_69::REStackFrame"*
  br label %5230

886:                                              ; preds = %865
  %887 = add nsw i64 %867, 1
  store i64 %887, i64* %866, align 8
  %888 = getelementptr inbounds i16, i16* %39, i64 %867
  %889 = load i16, i16* %888, align 2
  %890 = zext i16 %889 to i32
  %891 = and i32 %890, 64512
  %892 = icmp eq i32 %891, 55296
  br i1 %892, label %893, label %907

893:                                              ; preds = %886
  %894 = load i64, i64* %113, align 8
  %895 = icmp eq i64 %887, %894
  br i1 %895, label %907, label %896

896:                                              ; preds = %893
  %897 = getelementptr inbounds i16, i16* %39, i64 %887
  %898 = load i16, i16* %897, align 2
  %899 = zext i16 %898 to i32
  %900 = and i32 %899, 64512
  %901 = icmp eq i32 %900, 56320
  br i1 %901, label %902, label %907

902:                                              ; preds = %896
  %903 = add nsw i64 %867, 2
  store i64 %903, i64* %866, align 8
  %904 = shl nuw nsw i32 %890, 10
  %905 = add nsw i32 %904, -56613888
  %906 = add nsw i32 %905, %899
  br label %907

907:                                              ; preds = %896, %902, %893, %886
  %908 = phi i32 [ %890, %886 ], [ %906, %902 ], [ %890, %896 ], [ %890, %893 ]
  %909 = call signext i8 @u_charType_69(i32 %908) #12
  %910 = icmp eq i8 %909, 9
  %911 = icmp ne i32 %155, 0
  %912 = xor i1 %911, %910
  br i1 %912, label %5230, label %913

913:                                              ; preds = %907
  %914 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %915 = load i32, i32* %42, align 8
  %916 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %914, i64 0, i32 1
  %917 = load i32, i32* %916, align 8
  %918 = sub nsw i32 %917, %915
  %919 = icmp sgt i32 %918, 0
  %920 = select i1 %919, i32 %918, i32 0
  store i32 %920, i32* %916, align 8
  %921 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %914, i64 0, i32 4
  %922 = load i64*, i64** %921, align 8
  %923 = zext i32 %920 to i64
  %924 = getelementptr inbounds i64, i64* %922, i64 %923
  %925 = sext i32 %915 to i64
  %926 = sub nsw i64 0, %925
  %927 = getelementptr inbounds i64, i64* %924, i64 %926
  %928 = bitcast i64* %927 to %"struct.icu_69::REStackFrame"*
  br label %5230

929:                                              ; preds = %147
  %930 = load i8, i8* %127, align 2
  %931 = icmp eq i8 %930, 0
  %932 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %933 = load i64, i64* %932, align 8
  br i1 %931, label %937, label %934

934:                                              ; preds = %929
  %935 = load i64, i64* %128, align 8
  %936 = icmp eq i64 %933, %935
  br i1 %936, label %5230, label %940

937:                                              ; preds = %929
  %938 = load i64, i64* %116, align 8
  %939 = icmp eq i64 %933, %938
  br i1 %939, label %5230, label %940

940:                                              ; preds = %934, %937
  %941 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %942 = load i32, i32* %42, align 8
  %943 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %941, i64 0, i32 1
  %944 = load i32, i32* %943, align 8
  %945 = sub nsw i32 %944, %942
  %946 = icmp sgt i32 %945, 0
  %947 = select i1 %946, i32 %945, i32 0
  store i32 %947, i32* %943, align 8
  %948 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %941, i64 0, i32 4
  %949 = load i64*, i64** %948, align 8
  %950 = zext i32 %947 to i64
  %951 = getelementptr inbounds i64, i64* %949, i64 %950
  %952 = sext i32 %942 to i64
  %953 = sub nsw i64 0, %952
  %954 = getelementptr inbounds i64, i64* %951, i64 %953
  %955 = bitcast i64* %954 to %"struct.icu_69::REStackFrame"*
  br label %5230

956:                                              ; preds = %147
  %957 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %958 = load i64, i64* %957, align 8
  %959 = load i64, i64* %113, align 8
  %960 = icmp slt i64 %958, %959
  br i1 %960, label %977, label %961

961:                                              ; preds = %956
  store i8 1, i8* %114, align 8
  %962 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %963 = load i32, i32* %42, align 8
  %964 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %962, i64 0, i32 1
  %965 = load i32, i32* %964, align 8
  %966 = sub nsw i32 %965, %963
  %967 = icmp sgt i32 %966, 0
  %968 = select i1 %967, i32 %966, i32 0
  store i32 %968, i32* %964, align 8
  %969 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %962, i64 0, i32 4
  %970 = load i64*, i64** %969, align 8
  %971 = zext i32 %968 to i64
  %972 = getelementptr inbounds i64, i64* %970, i64 %971
  %973 = sext i32 %963 to i64
  %974 = sub nsw i64 0, %973
  %975 = getelementptr inbounds i64, i64* %972, i64 %974
  %976 = bitcast i64* %975 to %"struct.icu_69::REStackFrame"*
  br label %5230

977:                                              ; preds = %956
  %978 = add nsw i64 %958, 1
  store i64 %978, i64* %957, align 8
  %979 = getelementptr inbounds i16, i16* %39, i64 %958
  %980 = load i16, i16* %979, align 2
  %981 = zext i16 %980 to i32
  %982 = and i32 %981, 64512
  %983 = icmp eq i32 %982, 55296
  br i1 %983, label %984, label %998

984:                                              ; preds = %977
  %985 = load i64, i64* %113, align 8
  %986 = icmp eq i64 %978, %985
  br i1 %986, label %998, label %987

987:                                              ; preds = %984
  %988 = getelementptr inbounds i16, i16* %39, i64 %978
  %989 = load i16, i16* %988, align 2
  %990 = zext i16 %989 to i32
  %991 = and i32 %990, 64512
  %992 = icmp eq i32 %991, 56320
  br i1 %992, label %993, label %998

993:                                              ; preds = %987
  %994 = add nsw i64 %958, 2
  store i64 %994, i64* %957, align 8
  %995 = shl nuw nsw i32 %981, 10
  %996 = add nsw i32 %995, -56613888
  %997 = add nsw i32 %996, %990
  br label %998

998:                                              ; preds = %987, %993, %984, %977
  %999 = phi i32 [ %981, %977 ], [ %997, %993 ], [ %981, %987 ], [ %981, %984 ]
  %1000 = call signext i8 @u_charType_69(i32 %999) #12
  %1001 = icmp eq i8 %1000, 12
  %1002 = icmp eq i32 %999, 9
  %1003 = or i1 %1002, %1001
  %1004 = icmp ne i32 %155, 0
  %1005 = xor i1 %1004, %1003
  br i1 %1005, label %5230, label %1006

1006:                                             ; preds = %998
  %1007 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1008 = load i32, i32* %42, align 8
  %1009 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1007, i64 0, i32 1
  %1010 = load i32, i32* %1009, align 8
  %1011 = sub nsw i32 %1010, %1008
  %1012 = icmp sgt i32 %1011, 0
  %1013 = select i1 %1012, i32 %1011, i32 0
  store i32 %1013, i32* %1009, align 8
  %1014 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1007, i64 0, i32 4
  %1015 = load i64*, i64** %1014, align 8
  %1016 = zext i32 %1013 to i64
  %1017 = getelementptr inbounds i64, i64* %1015, i64 %1016
  %1018 = sext i32 %1008 to i64
  %1019 = sub nsw i64 0, %1018
  %1020 = getelementptr inbounds i64, i64* %1017, i64 %1019
  %1021 = bitcast i64* %1020 to %"struct.icu_69::REStackFrame"*
  br label %5230

1022:                                             ; preds = %147
  %1023 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %1024 = load i64, i64* %1023, align 8
  %1025 = load i64, i64* %113, align 8
  %1026 = icmp slt i64 %1024, %1025
  br i1 %1026, label %1043, label %1027

1027:                                             ; preds = %1022
  store i8 1, i8* %114, align 8
  %1028 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1029 = load i32, i32* %42, align 8
  %1030 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1028, i64 0, i32 1
  %1031 = load i32, i32* %1030, align 8
  %1032 = sub nsw i32 %1031, %1029
  %1033 = icmp sgt i32 %1032, 0
  %1034 = select i1 %1033, i32 %1032, i32 0
  store i32 %1034, i32* %1030, align 8
  %1035 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1028, i64 0, i32 4
  %1036 = load i64*, i64** %1035, align 8
  %1037 = zext i32 %1034 to i64
  %1038 = getelementptr inbounds i64, i64* %1036, i64 %1037
  %1039 = sext i32 %1029 to i64
  %1040 = sub nsw i64 0, %1039
  %1041 = getelementptr inbounds i64, i64* %1038, i64 %1040
  %1042 = bitcast i64* %1041 to %"struct.icu_69::REStackFrame"*
  br label %5230

1043:                                             ; preds = %1022
  %1044 = add nsw i64 %1024, 1
  store i64 %1044, i64* %1023, align 8
  %1045 = getelementptr inbounds i16, i16* %39, i64 %1024
  %1046 = load i16, i16* %1045, align 2
  %1047 = zext i16 %1046 to i32
  %1048 = and i32 %1047, 64512
  %1049 = icmp eq i32 %1048, 55296
  br i1 %1049, label %1050, label %1064

1050:                                             ; preds = %1043
  %1051 = load i64, i64* %113, align 8
  %1052 = icmp eq i64 %1044, %1051
  br i1 %1052, label %1064, label %1053

1053:                                             ; preds = %1050
  %1054 = getelementptr inbounds i16, i16* %39, i64 %1044
  %1055 = load i16, i16* %1054, align 2
  %1056 = zext i16 %1055 to i32
  %1057 = and i32 %1056, 64512
  %1058 = icmp eq i32 %1057, 56320
  br i1 %1058, label %1059, label %1064

1059:                                             ; preds = %1053
  %1060 = add nsw i64 %1024, 2
  store i64 %1060, i64* %1023, align 8
  %1061 = shl nuw nsw i32 %1047, 10
  %1062 = add nsw i32 %1061, -56613888
  %1063 = add nsw i32 %1062, %1056
  br label %1064

1064:                                             ; preds = %1053, %1059, %1050, %1043
  %1065 = phi i64 [ %1044, %1043 ], [ %1060, %1059 ], [ %1044, %1053 ], [ %1044, %1050 ]
  %1066 = phi i32 [ %1047, %1043 ], [ %1063, %1059 ], [ %1047, %1053 ], [ %1047, %1050 ]
  %1067 = and i32 %1066, -8368
  %1068 = icmp eq i32 %1067, 0
  br i1 %1068, label %1069, label %1111

1069:                                             ; preds = %1064
  switch i32 %1066, label %1111 [
    i32 13, label %1070
    i32 10, label %5230
    i32 11, label %5230
    i32 12, label %5230
    i32 133, label %5230
    i32 8232, label %5230
    i32 8233, label %5230
  ]

1070:                                             ; preds = %1069
  %1071 = load i64, i64* %113, align 8
  %1072 = icmp slt i64 %1065, %1071
  br i1 %1072, label %1073, label %5230

1073:                                             ; preds = %1070
  %1074 = add nsw i64 %1065, 1
  store i64 %1074, i64* %1023, align 8
  %1075 = getelementptr inbounds i16, i16* %39, i64 %1065
  %1076 = load i16, i16* %1075, align 2
  %1077 = and i16 %1076, -1024
  %1078 = icmp eq i16 %1077, -10240
  br i1 %1078, label %1079, label %1092

1079:                                             ; preds = %1073
  %1080 = load i64, i64* %113, align 8
  %1081 = icmp eq i64 %1074, %1080
  br i1 %1081, label %1092, label %1082

1082:                                             ; preds = %1079
  %1083 = getelementptr inbounds i16, i16* %39, i64 %1074
  %1084 = load i16, i16* %1083, align 2
  %1085 = and i16 %1084, -1024
  %1086 = icmp eq i16 %1085, -9216
  br i1 %1086, label %1087, label %1092

1087:                                             ; preds = %1082
  %1088 = add nsw i64 %1065, 2
  store i64 %1088, i64* %1023, align 8
  %1089 = shl i16 %1076, 10
  %1090 = add i16 %1089, 9216
  %1091 = add i16 %1090, %1084
  br label %1092

1092:                                             ; preds = %1082, %1087, %1079, %1073
  %1093 = phi i64 [ %1074, %1073 ], [ %1088, %1087 ], [ %1074, %1082 ], [ %1074, %1079 ]
  %1094 = phi i16 [ %1076, %1073 ], [ %1091, %1087 ], [ %1076, %1082 ], [ %1076, %1079 ]
  %1095 = icmp eq i16 %1094, 10
  br i1 %1095, label %5230, label %1096

1096:                                             ; preds = %1092
  %1097 = add nsw i64 %1093, -1
  store i64 %1097, i64* %1023, align 8
  %1098 = getelementptr inbounds i16, i16* %39, i64 %1097
  %1099 = load i16, i16* %1098, align 2
  %1100 = and i16 %1099, -1024
  %1101 = icmp eq i16 %1100, -9216
  %1102 = icmp sgt i64 %1097, 0
  %1103 = and i1 %1102, %1101
  br i1 %1103, label %1104, label %5230

1104:                                             ; preds = %1096
  %1105 = add nsw i64 %1093, -2
  %1106 = getelementptr inbounds i16, i16* %39, i64 %1105
  %1107 = load i16, i16* %1106, align 2
  %1108 = and i16 %1107, -1024
  %1109 = icmp eq i16 %1108, -10240
  br i1 %1109, label %1110, label %5230

1110:                                             ; preds = %1104
  store i64 %1105, i64* %1023, align 8
  br label %5230

1111:                                             ; preds = %1069, %1064
  %1112 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1113 = load i32, i32* %42, align 8
  %1114 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1112, i64 0, i32 1
  %1115 = load i32, i32* %1114, align 8
  %1116 = sub nsw i32 %1115, %1113
  %1117 = icmp sgt i32 %1116, 0
  %1118 = select i1 %1117, i32 %1116, i32 0
  store i32 %1118, i32* %1114, align 8
  %1119 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1112, i64 0, i32 4
  %1120 = load i64*, i64** %1119, align 8
  %1121 = zext i32 %1118 to i64
  %1122 = getelementptr inbounds i64, i64* %1120, i64 %1121
  %1123 = sext i32 %1113 to i64
  %1124 = sub nsw i64 0, %1123
  %1125 = getelementptr inbounds i64, i64* %1122, i64 %1124
  %1126 = bitcast i64* %1125 to %"struct.icu_69::REStackFrame"*
  br label %5230

1127:                                             ; preds = %147
  %1128 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %1129 = load i64, i64* %1128, align 8
  %1130 = load i64, i64* %113, align 8
  %1131 = icmp slt i64 %1129, %1130
  br i1 %1131, label %1148, label %1132

1132:                                             ; preds = %1127
  store i8 1, i8* %114, align 8
  %1133 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1134 = load i32, i32* %42, align 8
  %1135 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1133, i64 0, i32 1
  %1136 = load i32, i32* %1135, align 8
  %1137 = sub nsw i32 %1136, %1134
  %1138 = icmp sgt i32 %1137, 0
  %1139 = select i1 %1138, i32 %1137, i32 0
  store i32 %1139, i32* %1135, align 8
  %1140 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1133, i64 0, i32 4
  %1141 = load i64*, i64** %1140, align 8
  %1142 = zext i32 %1139 to i64
  %1143 = getelementptr inbounds i64, i64* %1141, i64 %1142
  %1144 = sext i32 %1134 to i64
  %1145 = sub nsw i64 0, %1144
  %1146 = getelementptr inbounds i64, i64* %1143, i64 %1145
  %1147 = bitcast i64* %1146 to %"struct.icu_69::REStackFrame"*
  br label %5230

1148:                                             ; preds = %1127
  %1149 = add nsw i64 %1129, 1
  store i64 %1149, i64* %1128, align 8
  %1150 = getelementptr inbounds i16, i16* %39, i64 %1129
  %1151 = load i16, i16* %1150, align 2
  %1152 = zext i16 %1151 to i32
  %1153 = and i32 %1152, 64512
  %1154 = icmp eq i32 %1153, 55296
  br i1 %1154, label %1155, label %1169

1155:                                             ; preds = %1148
  %1156 = load i64, i64* %113, align 8
  %1157 = icmp eq i64 %1149, %1156
  br i1 %1157, label %1169, label %1158

1158:                                             ; preds = %1155
  %1159 = getelementptr inbounds i16, i16* %39, i64 %1149
  %1160 = load i16, i16* %1159, align 2
  %1161 = zext i16 %1160 to i32
  %1162 = and i32 %1161, 64512
  %1163 = icmp eq i32 %1162, 56320
  br i1 %1163, label %1164, label %1169

1164:                                             ; preds = %1158
  %1165 = add nsw i64 %1129, 2
  store i64 %1165, i64* %1128, align 8
  %1166 = shl nuw nsw i32 %1152, 10
  %1167 = add nsw i32 %1166, -56613888
  %1168 = add nsw i32 %1167, %1161
  br label %1169

1169:                                             ; preds = %1158, %1164, %1155, %1148
  %1170 = phi i32 [ %1152, %1148 ], [ %1168, %1164 ], [ %1152, %1158 ], [ %1152, %1155 ]
  %1171 = and i32 %1170, -8368
  %1172 = icmp eq i32 %1171, 0
  br i1 %1172, label %1173, label %1177

1173:                                             ; preds = %1169
  switch i32 %1170, label %1174 [
    i32 8232, label %1177
    i32 133, label %1177
    i32 13, label %1177
    i32 12, label %1177
    i32 11, label %1177
    i32 10, label %1177
  ]

1174:                                             ; preds = %1173
  %1175 = icmp eq i32 %1170, 8233
  %1176 = zext i1 %1175 to i8
  br label %1177

1177:                                             ; preds = %1169, %1173, %1173, %1173, %1173, %1173, %1173, %1174
  %1178 = phi i8 [ 0, %1169 ], [ %1176, %1174 ], [ 1, %1173 ], [ 1, %1173 ], [ 1, %1173 ], [ 1, %1173 ], [ 1, %1173 ], [ 1, %1173 ]
  %1179 = icmp ne i32 %155, 0
  %1180 = zext i1 %1179 to i8
  %1181 = icmp eq i8 %1178, %1180
  br i1 %1181, label %1182, label %5230

1182:                                             ; preds = %1177
  %1183 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1184 = load i32, i32* %42, align 8
  %1185 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1183, i64 0, i32 1
  %1186 = load i32, i32* %1185, align 8
  %1187 = sub nsw i32 %1186, %1184
  %1188 = icmp sgt i32 %1187, 0
  %1189 = select i1 %1188, i32 %1187, i32 0
  store i32 %1189, i32* %1185, align 8
  %1190 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1183, i64 0, i32 4
  %1191 = load i64*, i64** %1190, align 8
  %1192 = zext i32 %1189 to i64
  %1193 = getelementptr inbounds i64, i64* %1191, i64 %1192
  %1194 = sext i32 %1184 to i64
  %1195 = sub nsw i64 0, %1194
  %1196 = getelementptr inbounds i64, i64* %1193, i64 %1195
  %1197 = bitcast i64* %1196 to %"struct.icu_69::REStackFrame"*
  br label %5230

1198:                                             ; preds = %147
  %1199 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %1200 = load i64, i64* %1199, align 8
  %1201 = load i64, i64* %113, align 8
  %1202 = icmp slt i64 %1200, %1201
  br i1 %1202, label %1219, label %1203

1203:                                             ; preds = %1198
  store i8 1, i8* %114, align 8
  %1204 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1205 = load i32, i32* %42, align 8
  %1206 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1204, i64 0, i32 1
  %1207 = load i32, i32* %1206, align 8
  %1208 = sub nsw i32 %1207, %1205
  %1209 = icmp sgt i32 %1208, 0
  %1210 = select i1 %1209, i32 %1208, i32 0
  store i32 %1210, i32* %1206, align 8
  %1211 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1204, i64 0, i32 4
  %1212 = load i64*, i64** %1211, align 8
  %1213 = zext i32 %1210 to i64
  %1214 = getelementptr inbounds i64, i64* %1212, i64 %1213
  %1215 = sext i32 %1205 to i64
  %1216 = sub nsw i64 0, %1215
  %1217 = getelementptr inbounds i64, i64* %1214, i64 %1216
  %1218 = bitcast i64* %1217 to %"struct.icu_69::REStackFrame"*
  br label %5230

1219:                                             ; preds = %1198
  %1220 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %126, align 8
  %1221 = icmp eq %"class.icu_69::BreakIterator"* %1220, null
  br i1 %1221, label %1222, label %1234

1222:                                             ; preds = %1219
  %1223 = call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getEnglishEv() #12
  %1224 = call %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIterator23createCharacterInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224) %1223, i32* dereferenceable(4) %3) #12
  store %"class.icu_69::BreakIterator"* %1224, %"class.icu_69::BreakIterator"** %126, align 8
  %1225 = load i32, i32* %3, align 4
  %1226 = icmp slt i32 %1225, 1
  br i1 %1226, label %1227, label %1245

1227:                                             ; preds = %1222
  %1228 = load %struct.UText*, %struct.UText** %36, align 8
  %1229 = bitcast %"class.icu_69::BreakIterator"* %1224 to void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)***
  %1230 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)**, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*** %1229, align 8
  %1231 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %1230, i64 8
  %1232 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %1231, align 8
  call void %1232(%"class.icu_69::BreakIterator"* %1224, %struct.UText* %1228, i32* dereferenceable(4) %3) #12
  %1233 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %126, align 8
  br label %1234

1234:                                             ; preds = %1227, %1219
  %1235 = phi %"class.icu_69::BreakIterator"* [ %1233, %1227 ], [ %1220, %1219 ]
  %1236 = trunc i64 %1200 to i32
  %1237 = bitcast %"class.icu_69::BreakIterator"* %1235 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %1238 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %1237, align 8
  %1239 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %1238, i64 15
  %1240 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %1239, align 8
  %1241 = call i32 %1240(%"class.icu_69::BreakIterator"* %1235, i32 %1236) #12
  %1242 = sext i32 %1241 to i64
  %1243 = icmp eq i32 %1241, -1
  %1244 = select i1 %1243, i64 %1200, i64 %1242
  br label %1245

1245:                                             ; preds = %1222, %1234
  %1246 = phi i64 [ %1244, %1234 ], [ %1200, %1222 ]
  store i64 %1246, i64* %1199, align 8
  %1247 = load i64, i64* %113, align 8
  %1248 = icmp slt i64 %1246, %1247
  br i1 %1248, label %5230, label %1249

1249:                                             ; preds = %1245
  store i8 1, i8* %114, align 8
  store i64 %1247, i64* %1199, align 8
  br label %5230

1250:                                             ; preds = %147
  %1251 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %1252 = load i64, i64* %1251, align 8
  %1253 = load i64, i64* %124, align 8
  %1254 = icmp slt i64 %1252, %1253
  br i1 %1254, label %1255, label %1271

1255:                                             ; preds = %1250
  %1256 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1257 = load i32, i32* %42, align 8
  %1258 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1256, i64 0, i32 1
  %1259 = load i32, i32* %1258, align 8
  %1260 = sub nsw i32 %1259, %1257
  %1261 = icmp sgt i32 %1260, 0
  %1262 = select i1 %1261, i32 %1260, i32 0
  store i32 %1262, i32* %1258, align 8
  %1263 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1256, i64 0, i32 4
  %1264 = load i64*, i64** %1263, align 8
  %1265 = zext i32 %1262 to i64
  %1266 = getelementptr inbounds i64, i64* %1264, i64 %1265
  %1267 = sext i32 %1257 to i64
  %1268 = sub nsw i64 0, %1267
  %1269 = getelementptr inbounds i64, i64* %1266, i64 %1268
  %1270 = bitcast i64* %1269 to %"struct.icu_69::REStackFrame"*
  br label %5230

1271:                                             ; preds = %1250
  store i8 1, i8* %114, align 8
  store i8 1, i8* %125, align 1
  br label %5230

1272:                                             ; preds = %147
  %1273 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %1274 = load i64, i64* %1273, align 8
  %1275 = load i64, i64* %113, align 8
  %1276 = icmp slt i64 %1274, %1275
  br i1 %1276, label %1293, label %1277

1277:                                             ; preds = %1272
  store i8 1, i8* %114, align 8
  %1278 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1279 = load i32, i32* %42, align 8
  %1280 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1278, i64 0, i32 1
  %1281 = load i32, i32* %1280, align 8
  %1282 = sub nsw i32 %1281, %1279
  %1283 = icmp sgt i32 %1282, 0
  %1284 = select i1 %1283, i32 %1282, i32 0
  store i32 %1284, i32* %1280, align 8
  %1285 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1278, i64 0, i32 4
  %1286 = load i64*, i64** %1285, align 8
  %1287 = zext i32 %1284 to i64
  %1288 = getelementptr inbounds i64, i64* %1286, i64 %1287
  %1289 = sext i32 %1279 to i64
  %1290 = sub nsw i64 0, %1289
  %1291 = getelementptr inbounds i64, i64* %1288, i64 %1290
  %1292 = bitcast i64* %1291 to %"struct.icu_69::REStackFrame"*
  br label %5230

1293:                                             ; preds = %1272
  %1294 = and i32 %153, 8388608
  %1295 = lshr exact i32 %1294, 23
  %1296 = trunc i32 %1295 to i8
  %1297 = and i64 %152, 8388607
  %1298 = add nsw i64 %1274, 1
  store i64 %1298, i64* %1273, align 8
  %1299 = getelementptr inbounds i16, i16* %39, i64 %1274
  %1300 = load i16, i16* %1299, align 2
  %1301 = zext i16 %1300 to i32
  %1302 = and i32 %1301, 64512
  %1303 = icmp eq i32 %1302, 55296
  br i1 %1303, label %1304, label %1318

1304:                                             ; preds = %1293
  %1305 = load i64, i64* %113, align 8
  %1306 = icmp eq i64 %1298, %1305
  br i1 %1306, label %1318, label %1307

1307:                                             ; preds = %1304
  %1308 = getelementptr inbounds i16, i16* %39, i64 %1298
  %1309 = load i16, i16* %1308, align 2
  %1310 = zext i16 %1309 to i32
  %1311 = and i32 %1310, 64512
  %1312 = icmp eq i32 %1311, 56320
  br i1 %1312, label %1313, label %1318

1313:                                             ; preds = %1307
  %1314 = add nsw i64 %1274, 2
  store i64 %1314, i64* %1273, align 8
  %1315 = shl nuw nsw i32 %1301, 10
  %1316 = add nsw i32 %1315, -56613888
  %1317 = add nsw i32 %1316, %1310
  br label %1318

1318:                                             ; preds = %1307, %1313, %1304, %1293
  %1319 = phi i32 [ %1301, %1293 ], [ %1317, %1313 ], [ %1301, %1307 ], [ %1301, %1304 ]
  %1320 = icmp slt i32 %1319, 256
  %1321 = load %"class.icu_69::RegexStaticSets"*, %"class.icu_69::RegexStaticSets"** @_ZN6icu_6915RegexStaticSets11gStaticSetsE, align 8
  br i1 %1320, label %1322, label %1332

1322:                                             ; preds = %1318
  %1323 = ashr i32 %1319, 3
  %1324 = sext i32 %1323 to i64
  %1325 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %1321, i64 0, i32 2, i64 %1297, i32 0, i64 %1324
  %1326 = load i8, i8* %1325, align 1
  %1327 = sext i8 %1326 to i32
  %1328 = and i32 %1319, 7
  %1329 = shl i32 1, %1328
  %1330 = and i32 %1329, %1327
  %1331 = icmp eq i32 %1330, 0
  br label %1336

1332:                                             ; preds = %1318
  %1333 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %1321, i64 0, i32 1, i64 %1297
  %1334 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %1333, i32 %1319) #12
  %1335 = icmp eq i8 %1334, 0
  br label %1336

1336:                                             ; preds = %1332, %1322
  %1337 = phi i1 [ %1335, %1332 ], [ %1331, %1322 ]
  %1338 = lshr exact i32 %1294, 23
  %1339 = trunc i32 %1338 to i8
  %1340 = xor i8 %1339, 1
  %1341 = select i1 %1337, i8 %1296, i8 %1340
  %1342 = icmp eq i8 %1341, 0
  br i1 %1342, label %1343, label %5230

1343:                                             ; preds = %1336
  %1344 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1345 = load i32, i32* %42, align 8
  %1346 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1344, i64 0, i32 1
  %1347 = load i32, i32* %1346, align 8
  %1348 = sub nsw i32 %1347, %1345
  %1349 = icmp sgt i32 %1348, 0
  %1350 = select i1 %1349, i32 %1348, i32 0
  store i32 %1350, i32* %1346, align 8
  %1351 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1344, i64 0, i32 4
  %1352 = load i64*, i64** %1351, align 8
  %1353 = zext i32 %1350 to i64
  %1354 = getelementptr inbounds i64, i64* %1352, i64 %1353
  %1355 = sext i32 %1345 to i64
  %1356 = sub nsw i64 0, %1355
  %1357 = getelementptr inbounds i64, i64* %1354, i64 %1356
  %1358 = bitcast i64* %1357 to %"struct.icu_69::REStackFrame"*
  br label %5230

1359:                                             ; preds = %147
  %1360 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %1361 = load i64, i64* %1360, align 8
  %1362 = load i64, i64* %113, align 8
  %1363 = icmp slt i64 %1361, %1362
  br i1 %1363, label %1380, label %1364

1364:                                             ; preds = %1359
  store i8 1, i8* %114, align 8
  %1365 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1366 = load i32, i32* %42, align 8
  %1367 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1365, i64 0, i32 1
  %1368 = load i32, i32* %1367, align 8
  %1369 = sub nsw i32 %1368, %1366
  %1370 = icmp sgt i32 %1369, 0
  %1371 = select i1 %1370, i32 %1369, i32 0
  store i32 %1371, i32* %1367, align 8
  %1372 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1365, i64 0, i32 4
  %1373 = load i64*, i64** %1372, align 8
  %1374 = zext i32 %1371 to i64
  %1375 = getelementptr inbounds i64, i64* %1373, i64 %1374
  %1376 = sext i32 %1366 to i64
  %1377 = sub nsw i64 0, %1376
  %1378 = getelementptr inbounds i64, i64* %1375, i64 %1377
  %1379 = bitcast i64* %1378 to %"struct.icu_69::REStackFrame"*
  br label %5230

1380:                                             ; preds = %1359
  %1381 = add nsw i64 %1361, 1
  store i64 %1381, i64* %1360, align 8
  %1382 = getelementptr inbounds i16, i16* %39, i64 %1361
  %1383 = load i16, i16* %1382, align 2
  %1384 = zext i16 %1383 to i32
  %1385 = and i32 %1384, 64512
  %1386 = icmp eq i32 %1385, 55296
  br i1 %1386, label %1387, label %1401

1387:                                             ; preds = %1380
  %1388 = load i64, i64* %113, align 8
  %1389 = icmp eq i64 %1381, %1388
  br i1 %1389, label %1401, label %1390

1390:                                             ; preds = %1387
  %1391 = getelementptr inbounds i16, i16* %39, i64 %1381
  %1392 = load i16, i16* %1391, align 2
  %1393 = zext i16 %1392 to i32
  %1394 = and i32 %1393, 64512
  %1395 = icmp eq i32 %1394, 56320
  br i1 %1395, label %1396, label %1401

1396:                                             ; preds = %1390
  %1397 = add nsw i64 %1361, 2
  store i64 %1397, i64* %1360, align 8
  %1398 = shl nuw nsw i32 %1384, 10
  %1399 = add nsw i32 %1398, -56613888
  %1400 = add nsw i32 %1399, %1393
  br label %1401

1401:                                             ; preds = %1390, %1396, %1387, %1380
  %1402 = phi i32 [ %1384, %1380 ], [ %1400, %1396 ], [ %1384, %1390 ], [ %1384, %1387 ]
  %1403 = icmp slt i32 %1402, 256
  %1404 = load %"class.icu_69::RegexStaticSets"*, %"class.icu_69::RegexStaticSets"** @_ZN6icu_6915RegexStaticSets11gStaticSetsE, align 8
  %1405 = zext i32 %155 to i64
  br i1 %1403, label %1406, label %1416

1406:                                             ; preds = %1401
  %1407 = ashr i32 %1402, 3
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %1404, i64 0, i32 2, i64 %1405, i32 0, i64 %1408
  %1410 = load i8, i8* %1409, align 1
  %1411 = sext i8 %1410 to i32
  %1412 = and i32 %1402, 7
  %1413 = shl i32 1, %1412
  %1414 = and i32 %1413, %1411
  %1415 = icmp eq i32 %1414, 0
  br i1 %1415, label %5230, label %1420

1416:                                             ; preds = %1401
  %1417 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %1404, i64 0, i32 1, i64 %1405
  %1418 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %1417, i32 %1402) #12
  %1419 = icmp eq i8 %1418, 0
  br i1 %1419, label %5230, label %1420

1420:                                             ; preds = %1406, %1416
  %1421 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1422 = load i32, i32* %42, align 8
  %1423 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1421, i64 0, i32 1
  %1424 = load i32, i32* %1423, align 8
  %1425 = sub nsw i32 %1424, %1422
  %1426 = icmp sgt i32 %1425, 0
  %1427 = select i1 %1426, i32 %1425, i32 0
  store i32 %1427, i32* %1423, align 8
  %1428 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1421, i64 0, i32 4
  %1429 = load i64*, i64** %1428, align 8
  %1430 = zext i32 %1427 to i64
  %1431 = getelementptr inbounds i64, i64* %1429, i64 %1430
  %1432 = sext i32 %1422 to i64
  %1433 = sub nsw i64 0, %1432
  %1434 = getelementptr inbounds i64, i64* %1431, i64 %1433
  %1435 = bitcast i64* %1434 to %"struct.icu_69::REStackFrame"*
  br label %5230

1436:                                             ; preds = %147
  %1437 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %1438 = load i64, i64* %1437, align 8
  %1439 = load i64, i64* %113, align 8
  %1440 = icmp slt i64 %1438, %1439
  br i1 %1440, label %1457, label %1441

1441:                                             ; preds = %1436
  store i8 1, i8* %114, align 8
  %1442 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1443 = load i32, i32* %42, align 8
  %1444 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1442, i64 0, i32 1
  %1445 = load i32, i32* %1444, align 8
  %1446 = sub nsw i32 %1445, %1443
  %1447 = icmp sgt i32 %1446, 0
  %1448 = select i1 %1447, i32 %1446, i32 0
  store i32 %1448, i32* %1444, align 8
  %1449 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1442, i64 0, i32 4
  %1450 = load i64*, i64** %1449, align 8
  %1451 = zext i32 %1448 to i64
  %1452 = getelementptr inbounds i64, i64* %1450, i64 %1451
  %1453 = sext i32 %1443 to i64
  %1454 = sub nsw i64 0, %1453
  %1455 = getelementptr inbounds i64, i64* %1452, i64 %1454
  %1456 = bitcast i64* %1455 to %"struct.icu_69::REStackFrame"*
  br label %5230

1457:                                             ; preds = %1436
  %1458 = add nsw i64 %1438, 1
  store i64 %1458, i64* %1437, align 8
  %1459 = getelementptr inbounds i16, i16* %39, i64 %1438
  %1460 = load i16, i16* %1459, align 2
  %1461 = zext i16 %1460 to i32
  %1462 = and i32 %1461, 64512
  %1463 = icmp eq i32 %1462, 55296
  br i1 %1463, label %1464, label %1478

1464:                                             ; preds = %1457
  %1465 = load i64, i64* %113, align 8
  %1466 = icmp eq i64 %1458, %1465
  br i1 %1466, label %1478, label %1467

1467:                                             ; preds = %1464
  %1468 = getelementptr inbounds i16, i16* %39, i64 %1458
  %1469 = load i16, i16* %1468, align 2
  %1470 = zext i16 %1469 to i32
  %1471 = and i32 %1470, 64512
  %1472 = icmp eq i32 %1471, 56320
  br i1 %1472, label %1473, label %1478

1473:                                             ; preds = %1467
  %1474 = add nsw i64 %1438, 2
  store i64 %1474, i64* %1437, align 8
  %1475 = shl nuw nsw i32 %1461, 10
  %1476 = add nsw i32 %1475, -56613888
  %1477 = add nsw i32 %1476, %1470
  br label %1478

1478:                                             ; preds = %1467, %1473, %1464, %1457
  %1479 = phi i32 [ %1461, %1457 ], [ %1477, %1473 ], [ %1461, %1467 ], [ %1461, %1464 ]
  %1480 = icmp slt i32 %1479, 256
  br i1 %1480, label %1481, label %1495

1481:                                             ; preds = %1478
  %1482 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %1483 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %1482, i64 0, i32 7
  %1484 = load %"struct.icu_69::Regex8BitSet"*, %"struct.icu_69::Regex8BitSet"** %1483, align 8
  %1485 = zext i32 %155 to i64
  %1486 = ashr i32 %1479, 3
  %1487 = sext i32 %1486 to i64
  %1488 = getelementptr inbounds %"struct.icu_69::Regex8BitSet", %"struct.icu_69::Regex8BitSet"* %1484, i64 %1485, i32 0, i64 %1487
  %1489 = load i8, i8* %1488, align 1
  %1490 = sext i8 %1489 to i32
  %1491 = and i32 %1479, 7
  %1492 = shl i32 1, %1491
  %1493 = and i32 %1492, %1490
  %1494 = icmp eq i32 %1493, 0
  br i1 %1494, label %1500, label %5230

1495:                                             ; preds = %1478
  %1496 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %35, i32 %155) #12
  %1497 = bitcast i8* %1496 to %"class.icu_69::UnicodeSet"*
  %1498 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %1497, i32 %1479) #12
  %1499 = icmp eq i8 %1498, 0
  br i1 %1499, label %1500, label %5230

1500:                                             ; preds = %1495, %1481
  %1501 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1502 = load i32, i32* %42, align 8
  %1503 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1501, i64 0, i32 1
  %1504 = load i32, i32* %1503, align 8
  %1505 = sub nsw i32 %1504, %1502
  %1506 = icmp sgt i32 %1505, 0
  %1507 = select i1 %1506, i32 %1505, i32 0
  store i32 %1507, i32* %1503, align 8
  %1508 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1501, i64 0, i32 4
  %1509 = load i64*, i64** %1508, align 8
  %1510 = zext i32 %1507 to i64
  %1511 = getelementptr inbounds i64, i64* %1509, i64 %1510
  %1512 = sext i32 %1502 to i64
  %1513 = sub nsw i64 0, %1512
  %1514 = getelementptr inbounds i64, i64* %1511, i64 %1513
  %1515 = bitcast i64* %1514 to %"struct.icu_69::REStackFrame"*
  br label %5230

1516:                                             ; preds = %147
  %1517 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %1518 = load i64, i64* %1517, align 8
  %1519 = load i64, i64* %113, align 8
  %1520 = icmp slt i64 %1518, %1519
  br i1 %1520, label %1537, label %1521

1521:                                             ; preds = %1516
  store i8 1, i8* %114, align 8
  %1522 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1523 = load i32, i32* %42, align 8
  %1524 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1522, i64 0, i32 1
  %1525 = load i32, i32* %1524, align 8
  %1526 = sub nsw i32 %1525, %1523
  %1527 = icmp sgt i32 %1526, 0
  %1528 = select i1 %1527, i32 %1526, i32 0
  store i32 %1528, i32* %1524, align 8
  %1529 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1522, i64 0, i32 4
  %1530 = load i64*, i64** %1529, align 8
  %1531 = zext i32 %1528 to i64
  %1532 = getelementptr inbounds i64, i64* %1530, i64 %1531
  %1533 = sext i32 %1523 to i64
  %1534 = sub nsw i64 0, %1533
  %1535 = getelementptr inbounds i64, i64* %1532, i64 %1534
  %1536 = bitcast i64* %1535 to %"struct.icu_69::REStackFrame"*
  br label %5230

1537:                                             ; preds = %1516
  %1538 = add nsw i64 %1518, 1
  store i64 %1538, i64* %1517, align 8
  %1539 = getelementptr inbounds i16, i16* %39, i64 %1518
  %1540 = load i16, i16* %1539, align 2
  %1541 = zext i16 %1540 to i32
  %1542 = and i32 %1541, 64512
  %1543 = icmp eq i32 %1542, 55296
  br i1 %1543, label %1544, label %1558

1544:                                             ; preds = %1537
  %1545 = load i64, i64* %113, align 8
  %1546 = icmp eq i64 %1538, %1545
  br i1 %1546, label %1558, label %1547

1547:                                             ; preds = %1544
  %1548 = getelementptr inbounds i16, i16* %39, i64 %1538
  %1549 = load i16, i16* %1548, align 2
  %1550 = zext i16 %1549 to i32
  %1551 = and i32 %1550, 64512
  %1552 = icmp eq i32 %1551, 56320
  br i1 %1552, label %1553, label %1558

1553:                                             ; preds = %1547
  %1554 = add nsw i64 %1518, 2
  store i64 %1554, i64* %1517, align 8
  %1555 = shl nuw nsw i32 %1541, 10
  %1556 = add nsw i32 %1555, -56613888
  %1557 = add nsw i32 %1556, %1550
  br label %1558

1558:                                             ; preds = %1547, %1553, %1544, %1537
  %1559 = phi i32 [ %1541, %1537 ], [ %1557, %1553 ], [ %1541, %1547 ], [ %1541, %1544 ]
  %1560 = and i32 %1559, -8368
  %1561 = icmp eq i32 %1560, 0
  br i1 %1561, label %1562, label %5230

1562:                                             ; preds = %1558
  switch i32 %1559, label %5230 [
    i32 8232, label %1563
    i32 133, label %1563
    i32 13, label %1563
    i32 12, label %1563
    i32 11, label %1563
    i32 10, label %1563
    i32 8233, label %1563
  ]

1563:                                             ; preds = %1562, %1562, %1562, %1562, %1562, %1562, %1562
  %1564 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1565 = load i32, i32* %42, align 8
  %1566 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1564, i64 0, i32 1
  %1567 = load i32, i32* %1566, align 8
  %1568 = sub nsw i32 %1567, %1565
  %1569 = icmp sgt i32 %1568, 0
  %1570 = select i1 %1569, i32 %1568, i32 0
  store i32 %1570, i32* %1566, align 8
  %1571 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1564, i64 0, i32 4
  %1572 = load i64*, i64** %1571, align 8
  %1573 = zext i32 %1570 to i64
  %1574 = getelementptr inbounds i64, i64* %1572, i64 %1573
  %1575 = sext i32 %1565 to i64
  %1576 = sub nsw i64 0, %1575
  %1577 = getelementptr inbounds i64, i64* %1574, i64 %1576
  %1578 = bitcast i64* %1577 to %"struct.icu_69::REStackFrame"*
  br label %5230

1579:                                             ; preds = %147
  %1580 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %1581 = load i64, i64* %1580, align 8
  %1582 = load i64, i64* %113, align 8
  %1583 = icmp slt i64 %1581, %1582
  br i1 %1583, label %1600, label %1584

1584:                                             ; preds = %1579
  store i8 1, i8* %114, align 8
  %1585 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1586 = load i32, i32* %42, align 8
  %1587 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1585, i64 0, i32 1
  %1588 = load i32, i32* %1587, align 8
  %1589 = sub nsw i32 %1588, %1586
  %1590 = icmp sgt i32 %1589, 0
  %1591 = select i1 %1590, i32 %1589, i32 0
  store i32 %1591, i32* %1587, align 8
  %1592 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1585, i64 0, i32 4
  %1593 = load i64*, i64** %1592, align 8
  %1594 = zext i32 %1591 to i64
  %1595 = getelementptr inbounds i64, i64* %1593, i64 %1594
  %1596 = sext i32 %1586 to i64
  %1597 = sub nsw i64 0, %1596
  %1598 = getelementptr inbounds i64, i64* %1595, i64 %1597
  %1599 = bitcast i64* %1598 to %"struct.icu_69::REStackFrame"*
  br label %5230

1600:                                             ; preds = %1579
  %1601 = add nsw i64 %1581, 1
  store i64 %1601, i64* %1580, align 8
  %1602 = getelementptr inbounds i16, i16* %39, i64 %1581
  %1603 = load i16, i16* %1602, align 2
  %1604 = zext i16 %1603 to i32
  %1605 = and i32 %1604, 64512
  %1606 = icmp eq i32 %1605, 55296
  br i1 %1606, label %1607, label %1621

1607:                                             ; preds = %1600
  %1608 = load i64, i64* %113, align 8
  %1609 = icmp eq i64 %1601, %1608
  br i1 %1609, label %1621, label %1610

1610:                                             ; preds = %1607
  %1611 = getelementptr inbounds i16, i16* %39, i64 %1601
  %1612 = load i16, i16* %1611, align 2
  %1613 = zext i16 %1612 to i32
  %1614 = and i32 %1613, 64512
  %1615 = icmp eq i32 %1614, 56320
  br i1 %1615, label %1616, label %1621

1616:                                             ; preds = %1610
  %1617 = add nsw i64 %1581, 2
  store i64 %1617, i64* %1580, align 8
  %1618 = shl nuw nsw i32 %1604, 10
  %1619 = add nsw i32 %1618, -56613888
  %1620 = add nsw i32 %1619, %1613
  br label %1621

1621:                                             ; preds = %1610, %1616, %1607, %1600
  %1622 = phi i64 [ %1601, %1600 ], [ %1617, %1616 ], [ %1601, %1610 ], [ %1601, %1607 ]
  %1623 = phi i32 [ %1604, %1600 ], [ %1620, %1616 ], [ %1604, %1610 ], [ %1604, %1607 ]
  %1624 = icmp eq i32 %1623, 13
  br i1 %1624, label %1625, label %5230

1625:                                             ; preds = %1621
  %1626 = load i64, i64* %113, align 8
  %1627 = icmp slt i64 %1622, %1626
  br i1 %1627, label %1628, label %5230

1628:                                             ; preds = %1625
  %1629 = getelementptr inbounds i16, i16* %39, i64 %1622
  %1630 = load i16, i16* %1629, align 2
  %1631 = icmp eq i16 %1630, 10
  br i1 %1631, label %1632, label %5230

1632:                                             ; preds = %1628
  %1633 = add nsw i64 %1622, 1
  store i64 %1633, i64* %1580, align 8
  %1634 = load i16, i16* %1629, align 2
  %1635 = and i16 %1634, -1024
  %1636 = icmp eq i16 %1635, -10240
  br i1 %1636, label %1637, label %5230

1637:                                             ; preds = %1632
  %1638 = load i64, i64* %113, align 8
  %1639 = icmp eq i64 %1633, %1638
  br i1 %1639, label %5230, label %1640

1640:                                             ; preds = %1637
  %1641 = getelementptr inbounds i16, i16* %39, i64 %1633
  %1642 = load i16, i16* %1641, align 2
  %1643 = and i16 %1642, -1024
  %1644 = icmp eq i16 %1643, -9216
  br i1 %1644, label %1645, label %5230

1645:                                             ; preds = %1640
  %1646 = add nsw i64 %1622, 2
  store i64 %1646, i64* %1580, align 8
  br label %5230

1647:                                             ; preds = %147
  %1648 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %1649 = load i64, i64* %1648, align 8
  %1650 = load i64, i64* %113, align 8
  %1651 = icmp slt i64 %1649, %1650
  br i1 %1651, label %1668, label %1652

1652:                                             ; preds = %1647
  store i8 1, i8* %114, align 8
  %1653 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1654 = load i32, i32* %42, align 8
  %1655 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1653, i64 0, i32 1
  %1656 = load i32, i32* %1655, align 8
  %1657 = sub nsw i32 %1656, %1654
  %1658 = icmp sgt i32 %1657, 0
  %1659 = select i1 %1658, i32 %1657, i32 0
  store i32 %1659, i32* %1655, align 8
  %1660 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1653, i64 0, i32 4
  %1661 = load i64*, i64** %1660, align 8
  %1662 = zext i32 %1659 to i64
  %1663 = getelementptr inbounds i64, i64* %1661, i64 %1662
  %1664 = sext i32 %1654 to i64
  %1665 = sub nsw i64 0, %1664
  %1666 = getelementptr inbounds i64, i64* %1663, i64 %1665
  %1667 = bitcast i64* %1666 to %"struct.icu_69::REStackFrame"*
  br label %5230

1668:                                             ; preds = %1647
  %1669 = add nsw i64 %1649, 1
  store i64 %1669, i64* %1648, align 8
  %1670 = getelementptr inbounds i16, i16* %39, i64 %1649
  %1671 = load i16, i16* %1670, align 2
  %1672 = zext i16 %1671 to i32
  %1673 = and i32 %1672, 64512
  %1674 = icmp eq i32 %1673, 55296
  br i1 %1674, label %1675, label %1689

1675:                                             ; preds = %1668
  %1676 = load i64, i64* %113, align 8
  %1677 = icmp eq i64 %1669, %1676
  br i1 %1677, label %1689, label %1678

1678:                                             ; preds = %1675
  %1679 = getelementptr inbounds i16, i16* %39, i64 %1669
  %1680 = load i16, i16* %1679, align 2
  %1681 = zext i16 %1680 to i32
  %1682 = and i32 %1681, 64512
  %1683 = icmp eq i32 %1682, 56320
  br i1 %1683, label %1684, label %1689

1684:                                             ; preds = %1678
  %1685 = add nsw i64 %1649, 2
  store i64 %1685, i64* %1648, align 8
  %1686 = shl nuw nsw i32 %1672, 10
  %1687 = add nsw i32 %1686, -56613888
  %1688 = add nsw i32 %1687, %1681
  br label %1689

1689:                                             ; preds = %1678, %1684, %1675, %1668
  %1690 = phi i32 [ %1672, %1668 ], [ %1688, %1684 ], [ %1672, %1678 ], [ %1672, %1675 ]
  %1691 = icmp eq i32 %1690, 10
  br i1 %1691, label %1692, label %5230

1692:                                             ; preds = %1689
  %1693 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1694 = load i32, i32* %42, align 8
  %1695 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1693, i64 0, i32 1
  %1696 = load i32, i32* %1695, align 8
  %1697 = sub nsw i32 %1696, %1694
  %1698 = icmp sgt i32 %1697, 0
  %1699 = select i1 %1698, i32 %1697, i32 0
  store i32 %1699, i32* %1695, align 8
  %1700 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1693, i64 0, i32 4
  %1701 = load i64*, i64** %1700, align 8
  %1702 = zext i32 %1699 to i64
  %1703 = getelementptr inbounds i64, i64* %1701, i64 %1702
  %1704 = sext i32 %1694 to i64
  %1705 = sub nsw i64 0, %1704
  %1706 = getelementptr inbounds i64, i64* %1703, i64 %1705
  %1707 = bitcast i64* %1706 to %"struct.icu_69::REStackFrame"*
  br label %5230

1708:                                             ; preds = %147
  %1709 = zext i32 %155 to i64
  store i64 %1709, i64* %149, align 8
  br label %5230

1710:                                             ; preds = %147
  %1711 = load i32, i32* %3, align 4
  %1712 = icmp slt i32 %1711, 1
  br i1 %1712, label %1713, label %1921

1713:                                             ; preds = %1710
  %1714 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1715 = load i32, i32* %42, align 8
  %1716 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1714, i64 0, i32 1
  %1717 = load i32, i32* %1716, align 8
  %1718 = add nsw i32 %1717, %1715
  %1719 = icmp sgt i32 %1718, -1
  br i1 %1719, label %1720, label %1724

1720:                                             ; preds = %1713
  %1721 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1714, i64 0, i32 2
  %1722 = load i32, i32* %1721, align 4
  %1723 = icmp slt i32 %1722, %1718
  br i1 %1723, label %1724, label %1730

1724:                                             ; preds = %1720, %1713
  %1725 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %1714, i32 %1718, i32* dereferenceable(4) %3) #12
  %1726 = icmp eq i8 %1725, 0
  br i1 %1726, label %1737, label %1727

1727:                                             ; preds = %1724
  %1728 = load i32, i32* %1716, align 8
  %1729 = add nsw i32 %1728, %1715
  br label %1730

1730:                                             ; preds = %1727, %1720
  %1731 = phi i32 [ %1729, %1727 ], [ %1718, %1720 ]
  %1732 = phi i32 [ %1728, %1727 ], [ %1717, %1720 ]
  %1733 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1714, i64 0, i32 4
  %1734 = load i64*, i64** %1733, align 8
  %1735 = sext i32 %1732 to i64
  %1736 = getelementptr inbounds i64, i64* %1734, i64 %1735
  store i32 %1731, i32* %1716, align 8
  br label %1737

1737:                                             ; preds = %1730, %1724
  %1738 = phi i64* [ %1736, %1730 ], [ null, %1724 ]
  %1739 = load i32, i32* %3, align 4
  %1740 = icmp slt i32 %1739, 1
  br i1 %1740, label %1742, label %1741

1741:                                             ; preds = %1737
  store i32 66321, i32* %3, align 4
  br label %1921

1742:                                             ; preds = %1737
  %1743 = load i32, i32* %42, align 8
  %1744 = sext i32 %1743 to i64
  %1745 = sub nsw i64 0, %1744
  %1746 = getelementptr inbounds i64, i64* %1738, i64 %1745
  %1747 = shl nsw i64 %1744, 3
  %1748 = add nsw i64 %1747, -8
  %1749 = lshr exact i64 %1748, 3
  %1750 = add nuw nsw i64 %1749, 1
  %1751 = icmp ult i64 %1750, 4
  br i1 %1751, label %1845, label %1752

1752:                                             ; preds = %1742
  %1753 = getelementptr i64, i64* %1738, i64 1
  %1754 = shl nsw i64 %1744, 3
  %1755 = add nsw i64 %1754, -8
  %1756 = lshr exact i64 %1755, 3
  %1757 = getelementptr i64, i64* %1753, i64 %1756
  %1758 = getelementptr i64, i64* %1738, i64 1
  %1759 = sub nsw i64 %1756, %1744
  %1760 = getelementptr i64, i64* %1758, i64 %1759
  %1761 = icmp ult i64* %1738, %1760
  %1762 = icmp ult i64* %1746, %1757
  %1763 = and i1 %1761, %1762
  br i1 %1763, label %1845, label %1764

1764:                                             ; preds = %1752
  %1765 = and i64 %1750, 4611686018427387900
  %1766 = getelementptr i64, i64* %1746, i64 %1765
  %1767 = getelementptr i64, i64* %1738, i64 %1765
  %1768 = add nsw i64 %1765, -4
  %1769 = lshr exact i64 %1768, 2
  %1770 = add nuw nsw i64 %1769, 1
  %1771 = and i64 %1770, 3
  %1772 = icmp ult i64 %1768, 12
  br i1 %1772, label %1824, label %1773

1773:                                             ; preds = %1764
  %1774 = sub nsw i64 %1770, %1771
  br label %1775

1775:                                             ; preds = %1775, %1773
  %1776 = phi i64 [ 0, %1773 ], [ %1821, %1775 ]
  %1777 = phi i64 [ %1774, %1773 ], [ %1822, %1775 ]
  %1778 = getelementptr i64, i64* %1746, i64 %1776
  %1779 = getelementptr i64, i64* %1738, i64 %1776
  %1780 = bitcast i64* %1778 to <2 x i64>*
  %1781 = load <2 x i64>, <2 x i64>* %1780, align 8, !alias.scope !121
  %1782 = getelementptr i64, i64* %1778, i64 2
  %1783 = bitcast i64* %1782 to <2 x i64>*
  %1784 = load <2 x i64>, <2 x i64>* %1783, align 8, !alias.scope !121
  %1785 = bitcast i64* %1779 to <2 x i64>*
  store <2 x i64> %1781, <2 x i64>* %1785, align 8, !alias.scope !124, !noalias !121
  %1786 = getelementptr i64, i64* %1779, i64 2
  %1787 = bitcast i64* %1786 to <2 x i64>*
  store <2 x i64> %1784, <2 x i64>* %1787, align 8, !alias.scope !124, !noalias !121
  %1788 = or i64 %1776, 4
  %1789 = getelementptr i64, i64* %1746, i64 %1788
  %1790 = getelementptr i64, i64* %1738, i64 %1788
  %1791 = bitcast i64* %1789 to <2 x i64>*
  %1792 = load <2 x i64>, <2 x i64>* %1791, align 8, !alias.scope !121
  %1793 = getelementptr i64, i64* %1789, i64 2
  %1794 = bitcast i64* %1793 to <2 x i64>*
  %1795 = load <2 x i64>, <2 x i64>* %1794, align 8, !alias.scope !121
  %1796 = bitcast i64* %1790 to <2 x i64>*
  store <2 x i64> %1792, <2 x i64>* %1796, align 8, !alias.scope !124, !noalias !121
  %1797 = getelementptr i64, i64* %1790, i64 2
  %1798 = bitcast i64* %1797 to <2 x i64>*
  store <2 x i64> %1795, <2 x i64>* %1798, align 8, !alias.scope !124, !noalias !121
  %1799 = or i64 %1776, 8
  %1800 = getelementptr i64, i64* %1746, i64 %1799
  %1801 = getelementptr i64, i64* %1738, i64 %1799
  %1802 = bitcast i64* %1800 to <2 x i64>*
  %1803 = load <2 x i64>, <2 x i64>* %1802, align 8, !alias.scope !121
  %1804 = getelementptr i64, i64* %1800, i64 2
  %1805 = bitcast i64* %1804 to <2 x i64>*
  %1806 = load <2 x i64>, <2 x i64>* %1805, align 8, !alias.scope !121
  %1807 = bitcast i64* %1801 to <2 x i64>*
  store <2 x i64> %1803, <2 x i64>* %1807, align 8, !alias.scope !124, !noalias !121
  %1808 = getelementptr i64, i64* %1801, i64 2
  %1809 = bitcast i64* %1808 to <2 x i64>*
  store <2 x i64> %1806, <2 x i64>* %1809, align 8, !alias.scope !124, !noalias !121
  %1810 = or i64 %1776, 12
  %1811 = getelementptr i64, i64* %1746, i64 %1810
  %1812 = getelementptr i64, i64* %1738, i64 %1810
  %1813 = bitcast i64* %1811 to <2 x i64>*
  %1814 = load <2 x i64>, <2 x i64>* %1813, align 8, !alias.scope !121
  %1815 = getelementptr i64, i64* %1811, i64 2
  %1816 = bitcast i64* %1815 to <2 x i64>*
  %1817 = load <2 x i64>, <2 x i64>* %1816, align 8, !alias.scope !121
  %1818 = bitcast i64* %1812 to <2 x i64>*
  store <2 x i64> %1814, <2 x i64>* %1818, align 8, !alias.scope !124, !noalias !121
  %1819 = getelementptr i64, i64* %1812, i64 2
  %1820 = bitcast i64* %1819 to <2 x i64>*
  store <2 x i64> %1817, <2 x i64>* %1820, align 8, !alias.scope !124, !noalias !121
  %1821 = add i64 %1776, 16
  %1822 = add i64 %1777, -4
  %1823 = icmp eq i64 %1822, 0
  br i1 %1823, label %1824, label %1775, !llvm.loop !126

1824:                                             ; preds = %1775, %1764
  %1825 = phi i64 [ 0, %1764 ], [ %1821, %1775 ]
  %1826 = icmp eq i64 %1771, 0
  br i1 %1826, label %1843, label %1827

1827:                                             ; preds = %1824, %1827
  %1828 = phi i64 [ %1840, %1827 ], [ %1825, %1824 ]
  %1829 = phi i64 [ %1841, %1827 ], [ %1771, %1824 ]
  %1830 = getelementptr i64, i64* %1746, i64 %1828
  %1831 = getelementptr i64, i64* %1738, i64 %1828
  %1832 = bitcast i64* %1830 to <2 x i64>*
  %1833 = load <2 x i64>, <2 x i64>* %1832, align 8, !alias.scope !121
  %1834 = getelementptr i64, i64* %1830, i64 2
  %1835 = bitcast i64* %1834 to <2 x i64>*
  %1836 = load <2 x i64>, <2 x i64>* %1835, align 8, !alias.scope !121
  %1837 = bitcast i64* %1831 to <2 x i64>*
  store <2 x i64> %1833, <2 x i64>* %1837, align 8, !alias.scope !124, !noalias !121
  %1838 = getelementptr i64, i64* %1831, i64 2
  %1839 = bitcast i64* %1838 to <2 x i64>*
  store <2 x i64> %1836, <2 x i64>* %1839, align 8, !alias.scope !124, !noalias !121
  %1840 = add i64 %1828, 4
  %1841 = add i64 %1829, -1
  %1842 = icmp eq i64 %1841, 0
  br i1 %1842, label %1843, label %1827, !llvm.loop !127

1843:                                             ; preds = %1827, %1824
  %1844 = icmp eq i64 %1750, %1765
  br i1 %1844, label %1897, label %1845

1845:                                             ; preds = %1843, %1752, %1742
  %1846 = phi i64* [ %1746, %1752 ], [ %1746, %1742 ], [ %1766, %1843 ]
  %1847 = phi i64* [ %1738, %1752 ], [ %1738, %1742 ], [ %1767, %1843 ]
  %1848 = ptrtoint i64* %1846 to i64
  %1849 = getelementptr i64, i64* %1738, i64 -1
  %1850 = ptrtoint i64* %1849 to i64
  %1851 = sub i64 %1850, %1848
  %1852 = lshr i64 %1851, 3
  %1853 = add nuw nsw i64 %1852, 1
  %1854 = and i64 %1853, 7
  %1855 = icmp eq i64 %1854, 0
  br i1 %1855, label %1865, label %1856

1856:                                             ; preds = %1845, %1856
  %1857 = phi i64* [ %1860, %1856 ], [ %1846, %1845 ]
  %1858 = phi i64* [ %1862, %1856 ], [ %1847, %1845 ]
  %1859 = phi i64 [ %1863, %1856 ], [ %1854, %1845 ]
  %1860 = getelementptr inbounds i64, i64* %1857, i64 1
  %1861 = load i64, i64* %1857, align 8
  %1862 = getelementptr inbounds i64, i64* %1858, i64 1
  store i64 %1861, i64* %1858, align 8
  %1863 = add i64 %1859, -1
  %1864 = icmp eq i64 %1863, 0
  br i1 %1864, label %1865, label %1856, !llvm.loop !128

1865:                                             ; preds = %1856, %1845
  %1866 = phi i64* [ %1846, %1845 ], [ %1860, %1856 ]
  %1867 = phi i64* [ %1847, %1845 ], [ %1862, %1856 ]
  %1868 = icmp ult i64 %1851, 56
  br i1 %1868, label %1897, label %1869

1869:                                             ; preds = %1865, %1869
  %1870 = phi i64* [ %1893, %1869 ], [ %1866, %1865 ]
  %1871 = phi i64* [ %1895, %1869 ], [ %1867, %1865 ]
  %1872 = getelementptr inbounds i64, i64* %1870, i64 1
  %1873 = load i64, i64* %1870, align 8
  %1874 = getelementptr inbounds i64, i64* %1871, i64 1
  store i64 %1873, i64* %1871, align 8
  %1875 = getelementptr inbounds i64, i64* %1870, i64 2
  %1876 = load i64, i64* %1872, align 8
  %1877 = getelementptr inbounds i64, i64* %1871, i64 2
  store i64 %1876, i64* %1874, align 8
  %1878 = getelementptr inbounds i64, i64* %1870, i64 3
  %1879 = load i64, i64* %1875, align 8
  %1880 = getelementptr inbounds i64, i64* %1871, i64 3
  store i64 %1879, i64* %1877, align 8
  %1881 = getelementptr inbounds i64, i64* %1870, i64 4
  %1882 = load i64, i64* %1878, align 8
  %1883 = getelementptr inbounds i64, i64* %1871, i64 4
  store i64 %1882, i64* %1880, align 8
  %1884 = getelementptr inbounds i64, i64* %1870, i64 5
  %1885 = load i64, i64* %1881, align 8
  %1886 = getelementptr inbounds i64, i64* %1871, i64 5
  store i64 %1885, i64* %1883, align 8
  %1887 = getelementptr inbounds i64, i64* %1870, i64 6
  %1888 = load i64, i64* %1884, align 8
  %1889 = getelementptr inbounds i64, i64* %1871, i64 6
  store i64 %1888, i64* %1886, align 8
  %1890 = getelementptr inbounds i64, i64* %1870, i64 7
  %1891 = load i64, i64* %1887, align 8
  %1892 = getelementptr inbounds i64, i64* %1871, i64 7
  store i64 %1891, i64* %1889, align 8
  %1893 = getelementptr inbounds i64, i64* %1870, i64 8
  %1894 = load i64, i64* %1890, align 8
  %1895 = getelementptr inbounds i64, i64* %1871, i64 8
  store i64 %1894, i64* %1892, align 8
  %1896 = icmp eq i64* %1893, %1738
  br i1 %1896, label %1897, label %1869, !llvm.loop !129

1897:                                             ; preds = %1865, %1869, %1843
  %1898 = load i32, i32* %108, align 8
  %1899 = add nsw i32 %1898, -1
  store i32 %1899, i32* %108, align 8
  %1900 = icmp slt i32 %1898, 2
  br i1 %1900, label %1901, label %1918

1901:                                             ; preds = %1897
  store i32 10000, i32* %108, align 8
  %1902 = load i32, i32* %109, align 4
  %1903 = add nsw i32 %1902, 1
  store i32 %1903, i32* %109, align 4
  %1904 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %1905 = icmp eq i8 (i8*, i32)* %1904, null
  br i1 %1905, label %1911, label %1906

1906:                                             ; preds = %1901
  %1907 = load i8*, i8** %111, align 8
  %1908 = call signext i8 %1904(i8* %1907, i32 %1903) #12
  %1909 = icmp eq i8 %1908, 0
  br i1 %1909, label %1910, label %1911

1910:                                             ; preds = %1906
  store i32 66323, i32* %3, align 4
  br label %1918

1911:                                             ; preds = %1906, %1901
  %1912 = load i32, i32* %112, align 8
  %1913 = icmp sgt i32 %1912, 0
  br i1 %1913, label %1914, label %1918

1914:                                             ; preds = %1911
  %1915 = load i32, i32* %109, align 4
  %1916 = icmp slt i32 %1915, %1912
  br i1 %1916, label %1918, label %1917

1917:                                             ; preds = %1914
  store i32 66322, i32* %3, align 4
  br label %1918

1918:                                             ; preds = %1917, %1914, %1911, %1910, %1897
  %1919 = getelementptr inbounds i64, i64* %1746, i64 1
  store i64 %156, i64* %1919, align 8
  %1920 = bitcast i64* %1738 to %"struct.icu_69::REStackFrame"*
  br label %1921

1921:                                             ; preds = %1710, %1741, %1918
  %1922 = phi %"struct.icu_69::REStackFrame"* [ %148, %1710 ], [ %148, %1741 ], [ %1920, %1918 ]
  %1923 = zext i32 %155 to i64
  %1924 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %1922, i64 0, i32 1
  store i64 %1923, i64* %1924, align 8
  br label %5230

1925:                                             ; preds = %147
  %1926 = add nsw i32 %155, -1
  %1927 = sext i32 %1926 to i64
  %1928 = getelementptr inbounds i64, i64* %16, i64 %1927
  %1929 = load i64, i64* %1928, align 8
  %1930 = and i64 %1929, 16777215
  %1931 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %1930
  %1932 = load i64, i64* %1931, align 8
  %1933 = shl i64 %1932, 32
  %1934 = ashr exact i64 %1933, 32
  %1935 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %1936 = load i64, i64* %1935, align 8
  %1937 = icmp slt i64 %1934, %1936
  br i1 %1937, label %1938, label %5230

1938:                                             ; preds = %1925
  %1939 = load i32, i32* %3, align 4
  %1940 = icmp slt i32 %1939, 1
  br i1 %1940, label %1941, label %2149

1941:                                             ; preds = %1938
  %1942 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %1943 = load i32, i32* %42, align 8
  %1944 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1942, i64 0, i32 1
  %1945 = load i32, i32* %1944, align 8
  %1946 = add nsw i32 %1945, %1943
  %1947 = icmp sgt i32 %1946, -1
  br i1 %1947, label %1948, label %1952

1948:                                             ; preds = %1941
  %1949 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1942, i64 0, i32 2
  %1950 = load i32, i32* %1949, align 4
  %1951 = icmp slt i32 %1950, %1946
  br i1 %1951, label %1952, label %1958

1952:                                             ; preds = %1948, %1941
  %1953 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %1942, i32 %1946, i32* dereferenceable(4) %3) #12
  %1954 = icmp eq i8 %1953, 0
  br i1 %1954, label %1965, label %1955

1955:                                             ; preds = %1952
  %1956 = load i32, i32* %1944, align 8
  %1957 = add nsw i32 %1956, %1943
  br label %1958

1958:                                             ; preds = %1955, %1948
  %1959 = phi i32 [ %1957, %1955 ], [ %1946, %1948 ]
  %1960 = phi i32 [ %1956, %1955 ], [ %1945, %1948 ]
  %1961 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1942, i64 0, i32 4
  %1962 = load i64*, i64** %1961, align 8
  %1963 = sext i32 %1960 to i64
  %1964 = getelementptr inbounds i64, i64* %1962, i64 %1963
  store i32 %1959, i32* %1944, align 8
  br label %1965

1965:                                             ; preds = %1958, %1952
  %1966 = phi i64* [ %1964, %1958 ], [ null, %1952 ]
  %1967 = load i32, i32* %3, align 4
  %1968 = icmp slt i32 %1967, 1
  br i1 %1968, label %1970, label %1969

1969:                                             ; preds = %1965
  store i32 66321, i32* %3, align 4
  br label %2149

1970:                                             ; preds = %1965
  %1971 = load i32, i32* %42, align 8
  %1972 = sext i32 %1971 to i64
  %1973 = sub nsw i64 0, %1972
  %1974 = getelementptr inbounds i64, i64* %1966, i64 %1973
  %1975 = shl nsw i64 %1972, 3
  %1976 = add nsw i64 %1975, -8
  %1977 = lshr exact i64 %1976, 3
  %1978 = add nuw nsw i64 %1977, 1
  %1979 = icmp ult i64 %1978, 4
  br i1 %1979, label %2073, label %1980

1980:                                             ; preds = %1970
  %1981 = getelementptr i64, i64* %1966, i64 1
  %1982 = shl nsw i64 %1972, 3
  %1983 = add nsw i64 %1982, -8
  %1984 = lshr exact i64 %1983, 3
  %1985 = getelementptr i64, i64* %1981, i64 %1984
  %1986 = getelementptr i64, i64* %1966, i64 1
  %1987 = sub nsw i64 %1984, %1972
  %1988 = getelementptr i64, i64* %1986, i64 %1987
  %1989 = icmp ult i64* %1966, %1988
  %1990 = icmp ult i64* %1974, %1985
  %1991 = and i1 %1989, %1990
  br i1 %1991, label %2073, label %1992

1992:                                             ; preds = %1980
  %1993 = and i64 %1978, 4611686018427387900
  %1994 = getelementptr i64, i64* %1974, i64 %1993
  %1995 = getelementptr i64, i64* %1966, i64 %1993
  %1996 = add nsw i64 %1993, -4
  %1997 = lshr exact i64 %1996, 2
  %1998 = add nuw nsw i64 %1997, 1
  %1999 = and i64 %1998, 3
  %2000 = icmp ult i64 %1996, 12
  br i1 %2000, label %2052, label %2001

2001:                                             ; preds = %1992
  %2002 = sub nsw i64 %1998, %1999
  br label %2003

2003:                                             ; preds = %2003, %2001
  %2004 = phi i64 [ 0, %2001 ], [ %2049, %2003 ]
  %2005 = phi i64 [ %2002, %2001 ], [ %2050, %2003 ]
  %2006 = getelementptr i64, i64* %1974, i64 %2004
  %2007 = getelementptr i64, i64* %1966, i64 %2004
  %2008 = bitcast i64* %2006 to <2 x i64>*
  %2009 = load <2 x i64>, <2 x i64>* %2008, align 8, !alias.scope !130
  %2010 = getelementptr i64, i64* %2006, i64 2
  %2011 = bitcast i64* %2010 to <2 x i64>*
  %2012 = load <2 x i64>, <2 x i64>* %2011, align 8, !alias.scope !130
  %2013 = bitcast i64* %2007 to <2 x i64>*
  store <2 x i64> %2009, <2 x i64>* %2013, align 8, !alias.scope !133, !noalias !130
  %2014 = getelementptr i64, i64* %2007, i64 2
  %2015 = bitcast i64* %2014 to <2 x i64>*
  store <2 x i64> %2012, <2 x i64>* %2015, align 8, !alias.scope !133, !noalias !130
  %2016 = or i64 %2004, 4
  %2017 = getelementptr i64, i64* %1974, i64 %2016
  %2018 = getelementptr i64, i64* %1966, i64 %2016
  %2019 = bitcast i64* %2017 to <2 x i64>*
  %2020 = load <2 x i64>, <2 x i64>* %2019, align 8, !alias.scope !130
  %2021 = getelementptr i64, i64* %2017, i64 2
  %2022 = bitcast i64* %2021 to <2 x i64>*
  %2023 = load <2 x i64>, <2 x i64>* %2022, align 8, !alias.scope !130
  %2024 = bitcast i64* %2018 to <2 x i64>*
  store <2 x i64> %2020, <2 x i64>* %2024, align 8, !alias.scope !133, !noalias !130
  %2025 = getelementptr i64, i64* %2018, i64 2
  %2026 = bitcast i64* %2025 to <2 x i64>*
  store <2 x i64> %2023, <2 x i64>* %2026, align 8, !alias.scope !133, !noalias !130
  %2027 = or i64 %2004, 8
  %2028 = getelementptr i64, i64* %1974, i64 %2027
  %2029 = getelementptr i64, i64* %1966, i64 %2027
  %2030 = bitcast i64* %2028 to <2 x i64>*
  %2031 = load <2 x i64>, <2 x i64>* %2030, align 8, !alias.scope !130
  %2032 = getelementptr i64, i64* %2028, i64 2
  %2033 = bitcast i64* %2032 to <2 x i64>*
  %2034 = load <2 x i64>, <2 x i64>* %2033, align 8, !alias.scope !130
  %2035 = bitcast i64* %2029 to <2 x i64>*
  store <2 x i64> %2031, <2 x i64>* %2035, align 8, !alias.scope !133, !noalias !130
  %2036 = getelementptr i64, i64* %2029, i64 2
  %2037 = bitcast i64* %2036 to <2 x i64>*
  store <2 x i64> %2034, <2 x i64>* %2037, align 8, !alias.scope !133, !noalias !130
  %2038 = or i64 %2004, 12
  %2039 = getelementptr i64, i64* %1974, i64 %2038
  %2040 = getelementptr i64, i64* %1966, i64 %2038
  %2041 = bitcast i64* %2039 to <2 x i64>*
  %2042 = load <2 x i64>, <2 x i64>* %2041, align 8, !alias.scope !130
  %2043 = getelementptr i64, i64* %2039, i64 2
  %2044 = bitcast i64* %2043 to <2 x i64>*
  %2045 = load <2 x i64>, <2 x i64>* %2044, align 8, !alias.scope !130
  %2046 = bitcast i64* %2040 to <2 x i64>*
  store <2 x i64> %2042, <2 x i64>* %2046, align 8, !alias.scope !133, !noalias !130
  %2047 = getelementptr i64, i64* %2040, i64 2
  %2048 = bitcast i64* %2047 to <2 x i64>*
  store <2 x i64> %2045, <2 x i64>* %2048, align 8, !alias.scope !133, !noalias !130
  %2049 = add i64 %2004, 16
  %2050 = add i64 %2005, -4
  %2051 = icmp eq i64 %2050, 0
  br i1 %2051, label %2052, label %2003, !llvm.loop !135

2052:                                             ; preds = %2003, %1992
  %2053 = phi i64 [ 0, %1992 ], [ %2049, %2003 ]
  %2054 = icmp eq i64 %1999, 0
  br i1 %2054, label %2071, label %2055

2055:                                             ; preds = %2052, %2055
  %2056 = phi i64 [ %2068, %2055 ], [ %2053, %2052 ]
  %2057 = phi i64 [ %2069, %2055 ], [ %1999, %2052 ]
  %2058 = getelementptr i64, i64* %1974, i64 %2056
  %2059 = getelementptr i64, i64* %1966, i64 %2056
  %2060 = bitcast i64* %2058 to <2 x i64>*
  %2061 = load <2 x i64>, <2 x i64>* %2060, align 8, !alias.scope !130
  %2062 = getelementptr i64, i64* %2058, i64 2
  %2063 = bitcast i64* %2062 to <2 x i64>*
  %2064 = load <2 x i64>, <2 x i64>* %2063, align 8, !alias.scope !130
  %2065 = bitcast i64* %2059 to <2 x i64>*
  store <2 x i64> %2061, <2 x i64>* %2065, align 8, !alias.scope !133, !noalias !130
  %2066 = getelementptr i64, i64* %2059, i64 2
  %2067 = bitcast i64* %2066 to <2 x i64>*
  store <2 x i64> %2064, <2 x i64>* %2067, align 8, !alias.scope !133, !noalias !130
  %2068 = add i64 %2056, 4
  %2069 = add i64 %2057, -1
  %2070 = icmp eq i64 %2069, 0
  br i1 %2070, label %2071, label %2055, !llvm.loop !136

2071:                                             ; preds = %2055, %2052
  %2072 = icmp eq i64 %1978, %1993
  br i1 %2072, label %2125, label %2073

2073:                                             ; preds = %2071, %1980, %1970
  %2074 = phi i64* [ %1974, %1980 ], [ %1974, %1970 ], [ %1994, %2071 ]
  %2075 = phi i64* [ %1966, %1980 ], [ %1966, %1970 ], [ %1995, %2071 ]
  %2076 = ptrtoint i64* %2074 to i64
  %2077 = getelementptr i64, i64* %1966, i64 -1
  %2078 = ptrtoint i64* %2077 to i64
  %2079 = sub i64 %2078, %2076
  %2080 = lshr i64 %2079, 3
  %2081 = add nuw nsw i64 %2080, 1
  %2082 = and i64 %2081, 7
  %2083 = icmp eq i64 %2082, 0
  br i1 %2083, label %2093, label %2084

2084:                                             ; preds = %2073, %2084
  %2085 = phi i64* [ %2088, %2084 ], [ %2074, %2073 ]
  %2086 = phi i64* [ %2090, %2084 ], [ %2075, %2073 ]
  %2087 = phi i64 [ %2091, %2084 ], [ %2082, %2073 ]
  %2088 = getelementptr inbounds i64, i64* %2085, i64 1
  %2089 = load i64, i64* %2085, align 8
  %2090 = getelementptr inbounds i64, i64* %2086, i64 1
  store i64 %2089, i64* %2086, align 8
  %2091 = add i64 %2087, -1
  %2092 = icmp eq i64 %2091, 0
  br i1 %2092, label %2093, label %2084, !llvm.loop !137

2093:                                             ; preds = %2084, %2073
  %2094 = phi i64* [ %2074, %2073 ], [ %2088, %2084 ]
  %2095 = phi i64* [ %2075, %2073 ], [ %2090, %2084 ]
  %2096 = icmp ult i64 %2079, 56
  br i1 %2096, label %2125, label %2097

2097:                                             ; preds = %2093, %2097
  %2098 = phi i64* [ %2121, %2097 ], [ %2094, %2093 ]
  %2099 = phi i64* [ %2123, %2097 ], [ %2095, %2093 ]
  %2100 = getelementptr inbounds i64, i64* %2098, i64 1
  %2101 = load i64, i64* %2098, align 8
  %2102 = getelementptr inbounds i64, i64* %2099, i64 1
  store i64 %2101, i64* %2099, align 8
  %2103 = getelementptr inbounds i64, i64* %2098, i64 2
  %2104 = load i64, i64* %2100, align 8
  %2105 = getelementptr inbounds i64, i64* %2099, i64 2
  store i64 %2104, i64* %2102, align 8
  %2106 = getelementptr inbounds i64, i64* %2098, i64 3
  %2107 = load i64, i64* %2103, align 8
  %2108 = getelementptr inbounds i64, i64* %2099, i64 3
  store i64 %2107, i64* %2105, align 8
  %2109 = getelementptr inbounds i64, i64* %2098, i64 4
  %2110 = load i64, i64* %2106, align 8
  %2111 = getelementptr inbounds i64, i64* %2099, i64 4
  store i64 %2110, i64* %2108, align 8
  %2112 = getelementptr inbounds i64, i64* %2098, i64 5
  %2113 = load i64, i64* %2109, align 8
  %2114 = getelementptr inbounds i64, i64* %2099, i64 5
  store i64 %2113, i64* %2111, align 8
  %2115 = getelementptr inbounds i64, i64* %2098, i64 6
  %2116 = load i64, i64* %2112, align 8
  %2117 = getelementptr inbounds i64, i64* %2099, i64 6
  store i64 %2116, i64* %2114, align 8
  %2118 = getelementptr inbounds i64, i64* %2098, i64 7
  %2119 = load i64, i64* %2115, align 8
  %2120 = getelementptr inbounds i64, i64* %2099, i64 7
  store i64 %2119, i64* %2117, align 8
  %2121 = getelementptr inbounds i64, i64* %2098, i64 8
  %2122 = load i64, i64* %2118, align 8
  %2123 = getelementptr inbounds i64, i64* %2099, i64 8
  store i64 %2122, i64* %2120, align 8
  %2124 = icmp eq i64* %2121, %1966
  br i1 %2124, label %2125, label %2097, !llvm.loop !138

2125:                                             ; preds = %2093, %2097, %2071
  %2126 = load i32, i32* %108, align 8
  %2127 = add nsw i32 %2126, -1
  store i32 %2127, i32* %108, align 8
  %2128 = icmp slt i32 %2126, 2
  br i1 %2128, label %2129, label %2146

2129:                                             ; preds = %2125
  store i32 10000, i32* %108, align 8
  %2130 = load i32, i32* %109, align 4
  %2131 = add nsw i32 %2130, 1
  store i32 %2131, i32* %109, align 4
  %2132 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %2133 = icmp eq i8 (i8*, i32)* %2132, null
  br i1 %2133, label %2139, label %2134

2134:                                             ; preds = %2129
  %2135 = load i8*, i8** %111, align 8
  %2136 = call signext i8 %2132(i8* %2135, i32 %2131) #12
  %2137 = icmp eq i8 %2136, 0
  br i1 %2137, label %2138, label %2139

2138:                                             ; preds = %2134
  store i32 66323, i32* %3, align 4
  br label %2146

2139:                                             ; preds = %2134, %2129
  %2140 = load i32, i32* %112, align 8
  %2141 = icmp sgt i32 %2140, 0
  br i1 %2141, label %2142, label %2146

2142:                                             ; preds = %2139
  %2143 = load i32, i32* %109, align 4
  %2144 = icmp slt i32 %2143, %2140
  br i1 %2144, label %2146, label %2145

2145:                                             ; preds = %2142
  store i32 66322, i32* %3, align 4
  br label %2146

2146:                                             ; preds = %2145, %2142, %2139, %2138, %2125
  %2147 = getelementptr inbounds i64, i64* %1974, i64 1
  store i64 %156, i64* %2147, align 8
  %2148 = bitcast i64* %1966 to %"struct.icu_69::REStackFrame"*
  br label %2149

2149:                                             ; preds = %1938, %1969, %2146
  %2150 = phi %"struct.icu_69::REStackFrame"* [ %148, %1938 ], [ %148, %1969 ], [ %2148, %2146 ]
  %2151 = zext i32 %155 to i64
  %2152 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %2150, i64 0, i32 1
  store i64 %2151, i64* %2152, align 8
  %2153 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %2150, i64 0, i32 0
  %2154 = load i64, i64* %2153, align 8
  %2155 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %2150, i64 0, i32 2, i64 %1930
  store i64 %2154, i64* %2155, align 8
  br label %5230

2156:                                             ; preds = %147
  %2157 = zext i32 %155 to i64
  %2158 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %2157
  store i64 0, i64* %2158, align 8
  %2159 = add nsw i64 %150, 4
  store i64 %2159, i64* %149, align 8
  %2160 = shl i64 %156, 32
  %2161 = add i64 %2160, 4294967296
  %2162 = ashr exact i64 %2161, 32
  %2163 = getelementptr inbounds i64, i64* %16, i64 %2162
  %2164 = load i64, i64* %2163, align 8
  %2165 = trunc i64 %2164 to i32
  %2166 = add i64 %2160, 8589934592
  %2167 = ashr exact i64 %2166, 32
  %2168 = getelementptr inbounds i64, i64* %16, i64 %2167
  %2169 = load i64, i64* %2168, align 8
  %2170 = trunc i64 %2169 to i32
  %2171 = icmp eq i32 %2165, 0
  br i1 %2171, label %2172, label %2388

2172:                                             ; preds = %2156
  %2173 = ashr exact i64 %2160, 32
  %2174 = getelementptr inbounds i64, i64* %16, i64 %2173
  %2175 = load i64, i64* %2174, align 8
  %2176 = and i64 %2175, 16777215
  %2177 = add nuw nsw i64 %2176, 1
  %2178 = load i32, i32* %3, align 4
  %2179 = icmp slt i32 %2178, 1
  br i1 %2179, label %2180, label %2388

2180:                                             ; preds = %2172
  %2181 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %2182 = load i32, i32* %42, align 8
  %2183 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2181, i64 0, i32 1
  %2184 = load i32, i32* %2183, align 8
  %2185 = add nsw i32 %2184, %2182
  %2186 = icmp sgt i32 %2185, -1
  br i1 %2186, label %2187, label %2191

2187:                                             ; preds = %2180
  %2188 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2181, i64 0, i32 2
  %2189 = load i32, i32* %2188, align 4
  %2190 = icmp slt i32 %2189, %2185
  br i1 %2190, label %2191, label %2197

2191:                                             ; preds = %2187, %2180
  %2192 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %2181, i32 %2185, i32* dereferenceable(4) %3) #12
  %2193 = icmp eq i8 %2192, 0
  br i1 %2193, label %2204, label %2194

2194:                                             ; preds = %2191
  %2195 = load i32, i32* %2183, align 8
  %2196 = add nsw i32 %2195, %2182
  br label %2197

2197:                                             ; preds = %2194, %2187
  %2198 = phi i32 [ %2196, %2194 ], [ %2185, %2187 ]
  %2199 = phi i32 [ %2195, %2194 ], [ %2184, %2187 ]
  %2200 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2181, i64 0, i32 4
  %2201 = load i64*, i64** %2200, align 8
  %2202 = sext i32 %2199 to i64
  %2203 = getelementptr inbounds i64, i64* %2201, i64 %2202
  store i32 %2198, i32* %2183, align 8
  br label %2204

2204:                                             ; preds = %2197, %2191
  %2205 = phi i64* [ %2203, %2197 ], [ null, %2191 ]
  %2206 = load i32, i32* %3, align 4
  %2207 = icmp slt i32 %2206, 1
  br i1 %2207, label %2209, label %2208

2208:                                             ; preds = %2204
  store i32 66321, i32* %3, align 4
  br label %2388

2209:                                             ; preds = %2204
  %2210 = load i32, i32* %42, align 8
  %2211 = sext i32 %2210 to i64
  %2212 = sub nsw i64 0, %2211
  %2213 = getelementptr inbounds i64, i64* %2205, i64 %2212
  %2214 = shl nsw i64 %2211, 3
  %2215 = add nsw i64 %2214, -8
  %2216 = lshr exact i64 %2215, 3
  %2217 = add nuw nsw i64 %2216, 1
  %2218 = icmp ult i64 %2217, 4
  br i1 %2218, label %2312, label %2219

2219:                                             ; preds = %2209
  %2220 = getelementptr i64, i64* %2205, i64 1
  %2221 = shl nsw i64 %2211, 3
  %2222 = add nsw i64 %2221, -8
  %2223 = lshr exact i64 %2222, 3
  %2224 = getelementptr i64, i64* %2220, i64 %2223
  %2225 = getelementptr i64, i64* %2205, i64 1
  %2226 = sub nsw i64 %2223, %2211
  %2227 = getelementptr i64, i64* %2225, i64 %2226
  %2228 = icmp ult i64* %2205, %2227
  %2229 = icmp ult i64* %2213, %2224
  %2230 = and i1 %2228, %2229
  br i1 %2230, label %2312, label %2231

2231:                                             ; preds = %2219
  %2232 = and i64 %2217, 4611686018427387900
  %2233 = getelementptr i64, i64* %2213, i64 %2232
  %2234 = getelementptr i64, i64* %2205, i64 %2232
  %2235 = add nsw i64 %2232, -4
  %2236 = lshr exact i64 %2235, 2
  %2237 = add nuw nsw i64 %2236, 1
  %2238 = and i64 %2237, 3
  %2239 = icmp ult i64 %2235, 12
  br i1 %2239, label %2291, label %2240

2240:                                             ; preds = %2231
  %2241 = sub nsw i64 %2237, %2238
  br label %2242

2242:                                             ; preds = %2242, %2240
  %2243 = phi i64 [ 0, %2240 ], [ %2288, %2242 ]
  %2244 = phi i64 [ %2241, %2240 ], [ %2289, %2242 ]
  %2245 = getelementptr i64, i64* %2213, i64 %2243
  %2246 = getelementptr i64, i64* %2205, i64 %2243
  %2247 = bitcast i64* %2245 to <2 x i64>*
  %2248 = load <2 x i64>, <2 x i64>* %2247, align 8, !alias.scope !139
  %2249 = getelementptr i64, i64* %2245, i64 2
  %2250 = bitcast i64* %2249 to <2 x i64>*
  %2251 = load <2 x i64>, <2 x i64>* %2250, align 8, !alias.scope !139
  %2252 = bitcast i64* %2246 to <2 x i64>*
  store <2 x i64> %2248, <2 x i64>* %2252, align 8, !alias.scope !142, !noalias !139
  %2253 = getelementptr i64, i64* %2246, i64 2
  %2254 = bitcast i64* %2253 to <2 x i64>*
  store <2 x i64> %2251, <2 x i64>* %2254, align 8, !alias.scope !142, !noalias !139
  %2255 = or i64 %2243, 4
  %2256 = getelementptr i64, i64* %2213, i64 %2255
  %2257 = getelementptr i64, i64* %2205, i64 %2255
  %2258 = bitcast i64* %2256 to <2 x i64>*
  %2259 = load <2 x i64>, <2 x i64>* %2258, align 8, !alias.scope !139
  %2260 = getelementptr i64, i64* %2256, i64 2
  %2261 = bitcast i64* %2260 to <2 x i64>*
  %2262 = load <2 x i64>, <2 x i64>* %2261, align 8, !alias.scope !139
  %2263 = bitcast i64* %2257 to <2 x i64>*
  store <2 x i64> %2259, <2 x i64>* %2263, align 8, !alias.scope !142, !noalias !139
  %2264 = getelementptr i64, i64* %2257, i64 2
  %2265 = bitcast i64* %2264 to <2 x i64>*
  store <2 x i64> %2262, <2 x i64>* %2265, align 8, !alias.scope !142, !noalias !139
  %2266 = or i64 %2243, 8
  %2267 = getelementptr i64, i64* %2213, i64 %2266
  %2268 = getelementptr i64, i64* %2205, i64 %2266
  %2269 = bitcast i64* %2267 to <2 x i64>*
  %2270 = load <2 x i64>, <2 x i64>* %2269, align 8, !alias.scope !139
  %2271 = getelementptr i64, i64* %2267, i64 2
  %2272 = bitcast i64* %2271 to <2 x i64>*
  %2273 = load <2 x i64>, <2 x i64>* %2272, align 8, !alias.scope !139
  %2274 = bitcast i64* %2268 to <2 x i64>*
  store <2 x i64> %2270, <2 x i64>* %2274, align 8, !alias.scope !142, !noalias !139
  %2275 = getelementptr i64, i64* %2268, i64 2
  %2276 = bitcast i64* %2275 to <2 x i64>*
  store <2 x i64> %2273, <2 x i64>* %2276, align 8, !alias.scope !142, !noalias !139
  %2277 = or i64 %2243, 12
  %2278 = getelementptr i64, i64* %2213, i64 %2277
  %2279 = getelementptr i64, i64* %2205, i64 %2277
  %2280 = bitcast i64* %2278 to <2 x i64>*
  %2281 = load <2 x i64>, <2 x i64>* %2280, align 8, !alias.scope !139
  %2282 = getelementptr i64, i64* %2278, i64 2
  %2283 = bitcast i64* %2282 to <2 x i64>*
  %2284 = load <2 x i64>, <2 x i64>* %2283, align 8, !alias.scope !139
  %2285 = bitcast i64* %2279 to <2 x i64>*
  store <2 x i64> %2281, <2 x i64>* %2285, align 8, !alias.scope !142, !noalias !139
  %2286 = getelementptr i64, i64* %2279, i64 2
  %2287 = bitcast i64* %2286 to <2 x i64>*
  store <2 x i64> %2284, <2 x i64>* %2287, align 8, !alias.scope !142, !noalias !139
  %2288 = add i64 %2243, 16
  %2289 = add i64 %2244, -4
  %2290 = icmp eq i64 %2289, 0
  br i1 %2290, label %2291, label %2242, !llvm.loop !144

2291:                                             ; preds = %2242, %2231
  %2292 = phi i64 [ 0, %2231 ], [ %2288, %2242 ]
  %2293 = icmp eq i64 %2238, 0
  br i1 %2293, label %2310, label %2294

2294:                                             ; preds = %2291, %2294
  %2295 = phi i64 [ %2307, %2294 ], [ %2292, %2291 ]
  %2296 = phi i64 [ %2308, %2294 ], [ %2238, %2291 ]
  %2297 = getelementptr i64, i64* %2213, i64 %2295
  %2298 = getelementptr i64, i64* %2205, i64 %2295
  %2299 = bitcast i64* %2297 to <2 x i64>*
  %2300 = load <2 x i64>, <2 x i64>* %2299, align 8, !alias.scope !139
  %2301 = getelementptr i64, i64* %2297, i64 2
  %2302 = bitcast i64* %2301 to <2 x i64>*
  %2303 = load <2 x i64>, <2 x i64>* %2302, align 8, !alias.scope !139
  %2304 = bitcast i64* %2298 to <2 x i64>*
  store <2 x i64> %2300, <2 x i64>* %2304, align 8, !alias.scope !142, !noalias !139
  %2305 = getelementptr i64, i64* %2298, i64 2
  %2306 = bitcast i64* %2305 to <2 x i64>*
  store <2 x i64> %2303, <2 x i64>* %2306, align 8, !alias.scope !142, !noalias !139
  %2307 = add i64 %2295, 4
  %2308 = add i64 %2296, -1
  %2309 = icmp eq i64 %2308, 0
  br i1 %2309, label %2310, label %2294, !llvm.loop !145

2310:                                             ; preds = %2294, %2291
  %2311 = icmp eq i64 %2217, %2232
  br i1 %2311, label %2364, label %2312

2312:                                             ; preds = %2310, %2219, %2209
  %2313 = phi i64* [ %2213, %2219 ], [ %2213, %2209 ], [ %2233, %2310 ]
  %2314 = phi i64* [ %2205, %2219 ], [ %2205, %2209 ], [ %2234, %2310 ]
  %2315 = ptrtoint i64* %2313 to i64
  %2316 = getelementptr i64, i64* %2205, i64 -1
  %2317 = ptrtoint i64* %2316 to i64
  %2318 = sub i64 %2317, %2315
  %2319 = lshr i64 %2318, 3
  %2320 = add nuw nsw i64 %2319, 1
  %2321 = and i64 %2320, 7
  %2322 = icmp eq i64 %2321, 0
  br i1 %2322, label %2332, label %2323

2323:                                             ; preds = %2312, %2323
  %2324 = phi i64* [ %2327, %2323 ], [ %2313, %2312 ]
  %2325 = phi i64* [ %2329, %2323 ], [ %2314, %2312 ]
  %2326 = phi i64 [ %2330, %2323 ], [ %2321, %2312 ]
  %2327 = getelementptr inbounds i64, i64* %2324, i64 1
  %2328 = load i64, i64* %2324, align 8
  %2329 = getelementptr inbounds i64, i64* %2325, i64 1
  store i64 %2328, i64* %2325, align 8
  %2330 = add i64 %2326, -1
  %2331 = icmp eq i64 %2330, 0
  br i1 %2331, label %2332, label %2323, !llvm.loop !146

2332:                                             ; preds = %2323, %2312
  %2333 = phi i64* [ %2313, %2312 ], [ %2327, %2323 ]
  %2334 = phi i64* [ %2314, %2312 ], [ %2329, %2323 ]
  %2335 = icmp ult i64 %2318, 56
  br i1 %2335, label %2364, label %2336

2336:                                             ; preds = %2332, %2336
  %2337 = phi i64* [ %2360, %2336 ], [ %2333, %2332 ]
  %2338 = phi i64* [ %2362, %2336 ], [ %2334, %2332 ]
  %2339 = getelementptr inbounds i64, i64* %2337, i64 1
  %2340 = load i64, i64* %2337, align 8
  %2341 = getelementptr inbounds i64, i64* %2338, i64 1
  store i64 %2340, i64* %2338, align 8
  %2342 = getelementptr inbounds i64, i64* %2337, i64 2
  %2343 = load i64, i64* %2339, align 8
  %2344 = getelementptr inbounds i64, i64* %2338, i64 2
  store i64 %2343, i64* %2341, align 8
  %2345 = getelementptr inbounds i64, i64* %2337, i64 3
  %2346 = load i64, i64* %2342, align 8
  %2347 = getelementptr inbounds i64, i64* %2338, i64 3
  store i64 %2346, i64* %2344, align 8
  %2348 = getelementptr inbounds i64, i64* %2337, i64 4
  %2349 = load i64, i64* %2345, align 8
  %2350 = getelementptr inbounds i64, i64* %2338, i64 4
  store i64 %2349, i64* %2347, align 8
  %2351 = getelementptr inbounds i64, i64* %2337, i64 5
  %2352 = load i64, i64* %2348, align 8
  %2353 = getelementptr inbounds i64, i64* %2338, i64 5
  store i64 %2352, i64* %2350, align 8
  %2354 = getelementptr inbounds i64, i64* %2337, i64 6
  %2355 = load i64, i64* %2351, align 8
  %2356 = getelementptr inbounds i64, i64* %2338, i64 6
  store i64 %2355, i64* %2353, align 8
  %2357 = getelementptr inbounds i64, i64* %2337, i64 7
  %2358 = load i64, i64* %2354, align 8
  %2359 = getelementptr inbounds i64, i64* %2338, i64 7
  store i64 %2358, i64* %2356, align 8
  %2360 = getelementptr inbounds i64, i64* %2337, i64 8
  %2361 = load i64, i64* %2357, align 8
  %2362 = getelementptr inbounds i64, i64* %2338, i64 8
  store i64 %2361, i64* %2359, align 8
  %2363 = icmp eq i64* %2360, %2205
  br i1 %2363, label %2364, label %2336, !llvm.loop !147

2364:                                             ; preds = %2332, %2336, %2310
  %2365 = load i32, i32* %108, align 8
  %2366 = add nsw i32 %2365, -1
  store i32 %2366, i32* %108, align 8
  %2367 = icmp slt i32 %2365, 2
  br i1 %2367, label %2368, label %2385

2368:                                             ; preds = %2364
  store i32 10000, i32* %108, align 8
  %2369 = load i32, i32* %109, align 4
  %2370 = add nsw i32 %2369, 1
  store i32 %2370, i32* %109, align 4
  %2371 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %2372 = icmp eq i8 (i8*, i32)* %2371, null
  br i1 %2372, label %2378, label %2373

2373:                                             ; preds = %2368
  %2374 = load i8*, i8** %111, align 8
  %2375 = call signext i8 %2371(i8* %2374, i32 %2370) #12
  %2376 = icmp eq i8 %2375, 0
  br i1 %2376, label %2377, label %2378

2377:                                             ; preds = %2373
  store i32 66323, i32* %3, align 4
  br label %2385

2378:                                             ; preds = %2373, %2368
  %2379 = load i32, i32* %112, align 8
  %2380 = icmp sgt i32 %2379, 0
  br i1 %2380, label %2381, label %2385

2381:                                             ; preds = %2378
  %2382 = load i32, i32* %109, align 4
  %2383 = icmp slt i32 %2382, %2379
  br i1 %2383, label %2385, label %2384

2384:                                             ; preds = %2381
  store i32 66322, i32* %3, align 4
  br label %2385

2385:                                             ; preds = %2384, %2381, %2378, %2377, %2364
  %2386 = getelementptr inbounds i64, i64* %2213, i64 1
  store i64 %2177, i64* %2386, align 8
  %2387 = bitcast i64* %2205 to %"struct.icu_69::REStackFrame"*
  br label %2388

2388:                                             ; preds = %2385, %2208, %2172, %2156
  %2389 = phi %"struct.icu_69::REStackFrame"* [ %148, %2156 ], [ %148, %2172 ], [ %148, %2208 ], [ %2387, %2385 ]
  switch i32 %2170, label %5230 [
    i32 -1, label %2390
    i32 0, label %2396
  ]

2390:                                             ; preds = %2388
  %2391 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %2389, i64 0, i32 0
  %2392 = load i64, i64* %2391, align 8
  %2393 = add nuw nsw i32 %155, 1
  %2394 = zext i32 %2393 to i64
  %2395 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %2389, i64 0, i32 2, i64 %2394
  store i64 %2392, i64* %2395, align 8
  br label %5230

2396:                                             ; preds = %2388
  %2397 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %2398 = load i32, i32* %42, align 8
  %2399 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2397, i64 0, i32 1
  %2400 = load i32, i32* %2399, align 8
  %2401 = sub nsw i32 %2400, %2398
  %2402 = icmp sgt i32 %2401, 0
  %2403 = select i1 %2402, i32 %2401, i32 0
  store i32 %2403, i32* %2399, align 8
  %2404 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2397, i64 0, i32 4
  %2405 = load i64*, i64** %2404, align 8
  %2406 = zext i32 %2403 to i64
  %2407 = getelementptr inbounds i64, i64* %2405, i64 %2406
  %2408 = sext i32 %2398 to i64
  %2409 = sub nsw i64 0, %2408
  %2410 = getelementptr inbounds i64, i64* %2407, i64 %2409
  %2411 = bitcast i64* %2410 to %"struct.icu_69::REStackFrame"*
  br label %5230

2412:                                             ; preds = %147
  %2413 = zext i32 %155 to i64
  %2414 = getelementptr inbounds i64, i64* %16, i64 %2413
  %2415 = load i64, i64* %2414, align 8
  %2416 = trunc i64 %2415 to i32
  %2417 = and i32 %2416, 16777215
  %2418 = zext i32 %2417 to i64
  %2419 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %2418
  %2420 = add nuw nsw i32 %155, 2
  %2421 = zext i32 %2420 to i64
  %2422 = getelementptr inbounds i64, i64* %16, i64 %2421
  %2423 = load i64, i64* %2422, align 8
  %2424 = add nuw nsw i32 %155, 3
  %2425 = zext i32 %2424 to i64
  %2426 = getelementptr inbounds i64, i64* %16, i64 %2425
  %2427 = load i64, i64* %2426, align 8
  %2428 = trunc i64 %2427 to i32
  %2429 = load i64, i64* %2419, align 8
  %2430 = add nsw i64 %2429, 1
  store i64 %2430, i64* %2419, align 8
  %2431 = and i64 %2427, 4294967295
  %2432 = icmp uge i64 %2430, %2431
  %2433 = icmp ne i32 %2428, -1
  %2434 = and i1 %2433, %2432
  br i1 %2434, label %5230, label %2435

2435:                                             ; preds = %2412
  %2436 = shl i64 %2423, 32
  %2437 = ashr exact i64 %2436, 32
  %2438 = icmp slt i64 %2430, %2437
  br i1 %2438, label %2661, label %2439

2439:                                             ; preds = %2435
  %2440 = icmp eq i32 %2428, -1
  br i1 %2440, label %2441, label %2450

2441:                                             ; preds = %2439
  %2442 = add nuw nsw i32 %2417, 1
  %2443 = zext i32 %2442 to i64
  %2444 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %2443
  %2445 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %2446 = load i64, i64* %2445, align 8
  %2447 = load i64, i64* %2444, align 8
  %2448 = icmp eq i64 %2446, %2447
  br i1 %2448, label %5230, label %2449

2449:                                             ; preds = %2441
  store i64 %2446, i64* %2444, align 8
  br label %2450

2450:                                             ; preds = %2449, %2439
  %2451 = load i32, i32* %3, align 4
  %2452 = icmp slt i32 %2451, 1
  br i1 %2452, label %2453, label %2682

2453:                                             ; preds = %2450
  %2454 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %2455 = load i32, i32* %42, align 8
  %2456 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2454, i64 0, i32 1
  %2457 = load i32, i32* %2456, align 8
  %2458 = add nsw i32 %2457, %2455
  %2459 = icmp sgt i32 %2458, -1
  br i1 %2459, label %2460, label %2464

2460:                                             ; preds = %2453
  %2461 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2454, i64 0, i32 2
  %2462 = load i32, i32* %2461, align 4
  %2463 = icmp slt i32 %2462, %2458
  br i1 %2463, label %2464, label %2470

2464:                                             ; preds = %2460, %2453
  %2465 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %2454, i32 %2458, i32* dereferenceable(4) %3) #12
  %2466 = icmp eq i8 %2465, 0
  br i1 %2466, label %2477, label %2467

2467:                                             ; preds = %2464
  %2468 = load i32, i32* %2456, align 8
  %2469 = add nsw i32 %2468, %2455
  br label %2470

2470:                                             ; preds = %2467, %2460
  %2471 = phi i32 [ %2469, %2467 ], [ %2458, %2460 ]
  %2472 = phi i32 [ %2468, %2467 ], [ %2457, %2460 ]
  %2473 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2454, i64 0, i32 4
  %2474 = load i64*, i64** %2473, align 8
  %2475 = sext i32 %2472 to i64
  %2476 = getelementptr inbounds i64, i64* %2474, i64 %2475
  store i32 %2471, i32* %2456, align 8
  br label %2477

2477:                                             ; preds = %2470, %2464
  %2478 = phi i64* [ %2476, %2470 ], [ null, %2464 ]
  %2479 = load i32, i32* %3, align 4
  %2480 = icmp slt i32 %2479, 1
  br i1 %2480, label %2482, label %2481

2481:                                             ; preds = %2477
  store i32 66321, i32* %3, align 4
  br label %2682

2482:                                             ; preds = %2477
  %2483 = load i32, i32* %42, align 8
  %2484 = sext i32 %2483 to i64
  %2485 = sub nsw i64 0, %2484
  %2486 = getelementptr inbounds i64, i64* %2478, i64 %2485
  %2487 = shl nsw i64 %2484, 3
  %2488 = add nsw i64 %2487, -8
  %2489 = lshr exact i64 %2488, 3
  %2490 = add nuw nsw i64 %2489, 1
  %2491 = icmp ult i64 %2490, 4
  br i1 %2491, label %2585, label %2492

2492:                                             ; preds = %2482
  %2493 = getelementptr i64, i64* %2478, i64 1
  %2494 = shl nsw i64 %2484, 3
  %2495 = add nsw i64 %2494, -8
  %2496 = lshr exact i64 %2495, 3
  %2497 = getelementptr i64, i64* %2493, i64 %2496
  %2498 = getelementptr i64, i64* %2478, i64 1
  %2499 = sub nsw i64 %2496, %2484
  %2500 = getelementptr i64, i64* %2498, i64 %2499
  %2501 = icmp ult i64* %2478, %2500
  %2502 = icmp ult i64* %2486, %2497
  %2503 = and i1 %2501, %2502
  br i1 %2503, label %2585, label %2504

2504:                                             ; preds = %2492
  %2505 = and i64 %2490, 4611686018427387900
  %2506 = getelementptr i64, i64* %2486, i64 %2505
  %2507 = getelementptr i64, i64* %2478, i64 %2505
  %2508 = add nsw i64 %2505, -4
  %2509 = lshr exact i64 %2508, 2
  %2510 = add nuw nsw i64 %2509, 1
  %2511 = and i64 %2510, 3
  %2512 = icmp ult i64 %2508, 12
  br i1 %2512, label %2564, label %2513

2513:                                             ; preds = %2504
  %2514 = sub nsw i64 %2510, %2511
  br label %2515

2515:                                             ; preds = %2515, %2513
  %2516 = phi i64 [ 0, %2513 ], [ %2561, %2515 ]
  %2517 = phi i64 [ %2514, %2513 ], [ %2562, %2515 ]
  %2518 = getelementptr i64, i64* %2486, i64 %2516
  %2519 = getelementptr i64, i64* %2478, i64 %2516
  %2520 = bitcast i64* %2518 to <2 x i64>*
  %2521 = load <2 x i64>, <2 x i64>* %2520, align 8, !alias.scope !148
  %2522 = getelementptr i64, i64* %2518, i64 2
  %2523 = bitcast i64* %2522 to <2 x i64>*
  %2524 = load <2 x i64>, <2 x i64>* %2523, align 8, !alias.scope !148
  %2525 = bitcast i64* %2519 to <2 x i64>*
  store <2 x i64> %2521, <2 x i64>* %2525, align 8, !alias.scope !151, !noalias !148
  %2526 = getelementptr i64, i64* %2519, i64 2
  %2527 = bitcast i64* %2526 to <2 x i64>*
  store <2 x i64> %2524, <2 x i64>* %2527, align 8, !alias.scope !151, !noalias !148
  %2528 = or i64 %2516, 4
  %2529 = getelementptr i64, i64* %2486, i64 %2528
  %2530 = getelementptr i64, i64* %2478, i64 %2528
  %2531 = bitcast i64* %2529 to <2 x i64>*
  %2532 = load <2 x i64>, <2 x i64>* %2531, align 8, !alias.scope !148
  %2533 = getelementptr i64, i64* %2529, i64 2
  %2534 = bitcast i64* %2533 to <2 x i64>*
  %2535 = load <2 x i64>, <2 x i64>* %2534, align 8, !alias.scope !148
  %2536 = bitcast i64* %2530 to <2 x i64>*
  store <2 x i64> %2532, <2 x i64>* %2536, align 8, !alias.scope !151, !noalias !148
  %2537 = getelementptr i64, i64* %2530, i64 2
  %2538 = bitcast i64* %2537 to <2 x i64>*
  store <2 x i64> %2535, <2 x i64>* %2538, align 8, !alias.scope !151, !noalias !148
  %2539 = or i64 %2516, 8
  %2540 = getelementptr i64, i64* %2486, i64 %2539
  %2541 = getelementptr i64, i64* %2478, i64 %2539
  %2542 = bitcast i64* %2540 to <2 x i64>*
  %2543 = load <2 x i64>, <2 x i64>* %2542, align 8, !alias.scope !148
  %2544 = getelementptr i64, i64* %2540, i64 2
  %2545 = bitcast i64* %2544 to <2 x i64>*
  %2546 = load <2 x i64>, <2 x i64>* %2545, align 8, !alias.scope !148
  %2547 = bitcast i64* %2541 to <2 x i64>*
  store <2 x i64> %2543, <2 x i64>* %2547, align 8, !alias.scope !151, !noalias !148
  %2548 = getelementptr i64, i64* %2541, i64 2
  %2549 = bitcast i64* %2548 to <2 x i64>*
  store <2 x i64> %2546, <2 x i64>* %2549, align 8, !alias.scope !151, !noalias !148
  %2550 = or i64 %2516, 12
  %2551 = getelementptr i64, i64* %2486, i64 %2550
  %2552 = getelementptr i64, i64* %2478, i64 %2550
  %2553 = bitcast i64* %2551 to <2 x i64>*
  %2554 = load <2 x i64>, <2 x i64>* %2553, align 8, !alias.scope !148
  %2555 = getelementptr i64, i64* %2551, i64 2
  %2556 = bitcast i64* %2555 to <2 x i64>*
  %2557 = load <2 x i64>, <2 x i64>* %2556, align 8, !alias.scope !148
  %2558 = bitcast i64* %2552 to <2 x i64>*
  store <2 x i64> %2554, <2 x i64>* %2558, align 8, !alias.scope !151, !noalias !148
  %2559 = getelementptr i64, i64* %2552, i64 2
  %2560 = bitcast i64* %2559 to <2 x i64>*
  store <2 x i64> %2557, <2 x i64>* %2560, align 8, !alias.scope !151, !noalias !148
  %2561 = add i64 %2516, 16
  %2562 = add i64 %2517, -4
  %2563 = icmp eq i64 %2562, 0
  br i1 %2563, label %2564, label %2515, !llvm.loop !153

2564:                                             ; preds = %2515, %2504
  %2565 = phi i64 [ 0, %2504 ], [ %2561, %2515 ]
  %2566 = icmp eq i64 %2511, 0
  br i1 %2566, label %2583, label %2567

2567:                                             ; preds = %2564, %2567
  %2568 = phi i64 [ %2580, %2567 ], [ %2565, %2564 ]
  %2569 = phi i64 [ %2581, %2567 ], [ %2511, %2564 ]
  %2570 = getelementptr i64, i64* %2486, i64 %2568
  %2571 = getelementptr i64, i64* %2478, i64 %2568
  %2572 = bitcast i64* %2570 to <2 x i64>*
  %2573 = load <2 x i64>, <2 x i64>* %2572, align 8, !alias.scope !148
  %2574 = getelementptr i64, i64* %2570, i64 2
  %2575 = bitcast i64* %2574 to <2 x i64>*
  %2576 = load <2 x i64>, <2 x i64>* %2575, align 8, !alias.scope !148
  %2577 = bitcast i64* %2571 to <2 x i64>*
  store <2 x i64> %2573, <2 x i64>* %2577, align 8, !alias.scope !151, !noalias !148
  %2578 = getelementptr i64, i64* %2571, i64 2
  %2579 = bitcast i64* %2578 to <2 x i64>*
  store <2 x i64> %2576, <2 x i64>* %2579, align 8, !alias.scope !151, !noalias !148
  %2580 = add i64 %2568, 4
  %2581 = add i64 %2569, -1
  %2582 = icmp eq i64 %2581, 0
  br i1 %2582, label %2583, label %2567, !llvm.loop !154

2583:                                             ; preds = %2567, %2564
  %2584 = icmp eq i64 %2490, %2505
  br i1 %2584, label %2637, label %2585

2585:                                             ; preds = %2583, %2492, %2482
  %2586 = phi i64* [ %2486, %2492 ], [ %2486, %2482 ], [ %2506, %2583 ]
  %2587 = phi i64* [ %2478, %2492 ], [ %2478, %2482 ], [ %2507, %2583 ]
  %2588 = ptrtoint i64* %2586 to i64
  %2589 = getelementptr i64, i64* %2478, i64 -1
  %2590 = ptrtoint i64* %2589 to i64
  %2591 = sub i64 %2590, %2588
  %2592 = lshr i64 %2591, 3
  %2593 = add nuw nsw i64 %2592, 1
  %2594 = and i64 %2593, 7
  %2595 = icmp eq i64 %2594, 0
  br i1 %2595, label %2605, label %2596

2596:                                             ; preds = %2585, %2596
  %2597 = phi i64* [ %2600, %2596 ], [ %2586, %2585 ]
  %2598 = phi i64* [ %2602, %2596 ], [ %2587, %2585 ]
  %2599 = phi i64 [ %2603, %2596 ], [ %2594, %2585 ]
  %2600 = getelementptr inbounds i64, i64* %2597, i64 1
  %2601 = load i64, i64* %2597, align 8
  %2602 = getelementptr inbounds i64, i64* %2598, i64 1
  store i64 %2601, i64* %2598, align 8
  %2603 = add i64 %2599, -1
  %2604 = icmp eq i64 %2603, 0
  br i1 %2604, label %2605, label %2596, !llvm.loop !155

2605:                                             ; preds = %2596, %2585
  %2606 = phi i64* [ %2586, %2585 ], [ %2600, %2596 ]
  %2607 = phi i64* [ %2587, %2585 ], [ %2602, %2596 ]
  %2608 = icmp ult i64 %2591, 56
  br i1 %2608, label %2637, label %2609

2609:                                             ; preds = %2605, %2609
  %2610 = phi i64* [ %2633, %2609 ], [ %2606, %2605 ]
  %2611 = phi i64* [ %2635, %2609 ], [ %2607, %2605 ]
  %2612 = getelementptr inbounds i64, i64* %2610, i64 1
  %2613 = load i64, i64* %2610, align 8
  %2614 = getelementptr inbounds i64, i64* %2611, i64 1
  store i64 %2613, i64* %2611, align 8
  %2615 = getelementptr inbounds i64, i64* %2610, i64 2
  %2616 = load i64, i64* %2612, align 8
  %2617 = getelementptr inbounds i64, i64* %2611, i64 2
  store i64 %2616, i64* %2614, align 8
  %2618 = getelementptr inbounds i64, i64* %2610, i64 3
  %2619 = load i64, i64* %2615, align 8
  %2620 = getelementptr inbounds i64, i64* %2611, i64 3
  store i64 %2619, i64* %2617, align 8
  %2621 = getelementptr inbounds i64, i64* %2610, i64 4
  %2622 = load i64, i64* %2618, align 8
  %2623 = getelementptr inbounds i64, i64* %2611, i64 4
  store i64 %2622, i64* %2620, align 8
  %2624 = getelementptr inbounds i64, i64* %2610, i64 5
  %2625 = load i64, i64* %2621, align 8
  %2626 = getelementptr inbounds i64, i64* %2611, i64 5
  store i64 %2625, i64* %2623, align 8
  %2627 = getelementptr inbounds i64, i64* %2610, i64 6
  %2628 = load i64, i64* %2624, align 8
  %2629 = getelementptr inbounds i64, i64* %2611, i64 6
  store i64 %2628, i64* %2626, align 8
  %2630 = getelementptr inbounds i64, i64* %2610, i64 7
  %2631 = load i64, i64* %2627, align 8
  %2632 = getelementptr inbounds i64, i64* %2611, i64 7
  store i64 %2631, i64* %2629, align 8
  %2633 = getelementptr inbounds i64, i64* %2610, i64 8
  %2634 = load i64, i64* %2630, align 8
  %2635 = getelementptr inbounds i64, i64* %2611, i64 8
  store i64 %2634, i64* %2632, align 8
  %2636 = icmp eq i64* %2633, %2478
  br i1 %2636, label %2637, label %2609, !llvm.loop !156

2637:                                             ; preds = %2605, %2609, %2583
  %2638 = load i32, i32* %108, align 8
  %2639 = add nsw i32 %2638, -1
  store i32 %2639, i32* %108, align 8
  %2640 = icmp slt i32 %2638, 2
  br i1 %2640, label %2641, label %2658

2641:                                             ; preds = %2637
  store i32 10000, i32* %108, align 8
  %2642 = load i32, i32* %109, align 4
  %2643 = add nsw i32 %2642, 1
  store i32 %2643, i32* %109, align 4
  %2644 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %2645 = icmp eq i8 (i8*, i32)* %2644, null
  br i1 %2645, label %2651, label %2646

2646:                                             ; preds = %2641
  %2647 = load i8*, i8** %111, align 8
  %2648 = call signext i8 %2644(i8* %2647, i32 %2643) #12
  %2649 = icmp eq i8 %2648, 0
  br i1 %2649, label %2650, label %2651

2650:                                             ; preds = %2646
  store i32 66323, i32* %3, align 4
  br label %2658

2651:                                             ; preds = %2646, %2641
  %2652 = load i32, i32* %112, align 8
  %2653 = icmp sgt i32 %2652, 0
  br i1 %2653, label %2654, label %2658

2654:                                             ; preds = %2651
  %2655 = load i32, i32* %109, align 4
  %2656 = icmp slt i32 %2655, %2652
  br i1 %2656, label %2658, label %2657

2657:                                             ; preds = %2654
  store i32 66322, i32* %3, align 4
  br label %2658

2658:                                             ; preds = %2657, %2654, %2651, %2650, %2637
  %2659 = getelementptr inbounds i64, i64* %2486, i64 1
  store i64 %156, i64* %2659, align 8
  %2660 = bitcast i64* %2478 to %"struct.icu_69::REStackFrame"*
  br label %2682

2661:                                             ; preds = %2435
  %2662 = load i32, i32* %108, align 8
  %2663 = add nsw i32 %2662, -1
  store i32 %2663, i32* %108, align 8
  %2664 = icmp slt i32 %2662, 2
  br i1 %2664, label %2665, label %2682

2665:                                             ; preds = %2661
  store i32 10000, i32* %108, align 8
  %2666 = load i32, i32* %109, align 4
  %2667 = add nsw i32 %2666, 1
  store i32 %2667, i32* %109, align 4
  %2668 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %2669 = icmp eq i8 (i8*, i32)* %2668, null
  br i1 %2669, label %2675, label %2670

2670:                                             ; preds = %2665
  %2671 = load i8*, i8** %111, align 8
  %2672 = call signext i8 %2668(i8* %2671, i32 %2667) #12
  %2673 = icmp eq i8 %2672, 0
  br i1 %2673, label %2674, label %2675

2674:                                             ; preds = %2670
  store i32 66323, i32* %3, align 4
  br label %2682

2675:                                             ; preds = %2670, %2665
  %2676 = load i32, i32* %112, align 8
  %2677 = icmp sgt i32 %2676, 0
  br i1 %2677, label %2678, label %2682

2678:                                             ; preds = %2675
  %2679 = load i32, i32* %109, align 4
  %2680 = icmp slt i32 %2679, %2676
  br i1 %2680, label %2682, label %2681

2681:                                             ; preds = %2678
  store i32 66322, i32* %3, align 4
  br label %2682

2682:                                             ; preds = %2681, %2678, %2675, %2674, %2658, %2481, %2450, %2661
  %2683 = phi %"struct.icu_69::REStackFrame"* [ %148, %2661 ], [ %148, %2450 ], [ %148, %2481 ], [ %2660, %2658 ], [ %148, %2674 ], [ %148, %2675 ], [ %148, %2678 ], [ %148, %2681 ]
  %2684 = add nuw nsw i32 %155, 4
  %2685 = zext i32 %2684 to i64
  %2686 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %2683, i64 0, i32 1
  store i64 %2685, i64* %2686, align 8
  br label %5230

2687:                                             ; preds = %147
  %2688 = zext i32 %155 to i64
  %2689 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %2688
  store i64 0, i64* %2689, align 8
  %2690 = add nsw i64 %150, 4
  store i64 %2690, i64* %149, align 8
  %2691 = shl i64 %156, 32
  %2692 = ashr exact i64 %2691, 32
  %2693 = getelementptr inbounds i64, i64* %16, i64 %2692
  %2694 = load i64, i64* %2693, align 8
  %2695 = and i64 %2694, 16777215
  %2696 = add i64 %2691, 4294967296
  %2697 = ashr exact i64 %2696, 32
  %2698 = getelementptr inbounds i64, i64* %16, i64 %2697
  %2699 = load i64, i64* %2698, align 8
  %2700 = trunc i64 %2699 to i32
  %2701 = add i64 %2691, 8589934592
  %2702 = ashr exact i64 %2701, 32
  %2703 = getelementptr inbounds i64, i64* %16, i64 %2702
  %2704 = load i64, i64* %2703, align 8
  %2705 = trunc i64 %2704 to i32
  %2706 = icmp eq i32 %2705, -1
  br i1 %2706, label %2707, label %2713

2707:                                             ; preds = %2687
  %2708 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %2709 = load i64, i64* %2708, align 8
  %2710 = add nuw nsw i32 %155, 1
  %2711 = zext i32 %2710 to i64
  %2712 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %2711
  store i64 %2709, i64* %2712, align 8
  br label %2713

2713:                                             ; preds = %2707, %2687
  %2714 = icmp eq i32 %2700, 0
  br i1 %2714, label %2715, label %5230

2715:                                             ; preds = %2713
  %2716 = icmp ne i32 %2705, 0
  %2717 = load i32, i32* %3, align 4
  %2718 = icmp slt i32 %2717, 1
  %2719 = and i1 %2716, %2718
  br i1 %2719, label %2720, label %2928

2720:                                             ; preds = %2715
  %2721 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %2722 = load i32, i32* %42, align 8
  %2723 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2721, i64 0, i32 1
  %2724 = load i32, i32* %2723, align 8
  %2725 = add nsw i32 %2724, %2722
  %2726 = icmp sgt i32 %2725, -1
  br i1 %2726, label %2727, label %2731

2727:                                             ; preds = %2720
  %2728 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2721, i64 0, i32 2
  %2729 = load i32, i32* %2728, align 4
  %2730 = icmp slt i32 %2729, %2725
  br i1 %2730, label %2731, label %2737

2731:                                             ; preds = %2727, %2720
  %2732 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %2721, i32 %2725, i32* dereferenceable(4) %3) #12
  %2733 = icmp eq i8 %2732, 0
  br i1 %2733, label %2744, label %2734

2734:                                             ; preds = %2731
  %2735 = load i32, i32* %2723, align 8
  %2736 = add nsw i32 %2735, %2722
  br label %2737

2737:                                             ; preds = %2734, %2727
  %2738 = phi i32 [ %2736, %2734 ], [ %2725, %2727 ]
  %2739 = phi i32 [ %2735, %2734 ], [ %2724, %2727 ]
  %2740 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2721, i64 0, i32 4
  %2741 = load i64*, i64** %2740, align 8
  %2742 = sext i32 %2739 to i64
  %2743 = getelementptr inbounds i64, i64* %2741, i64 %2742
  store i32 %2738, i32* %2723, align 8
  br label %2744

2744:                                             ; preds = %2737, %2731
  %2745 = phi i64* [ %2743, %2737 ], [ null, %2731 ]
  %2746 = load i32, i32* %3, align 4
  %2747 = icmp slt i32 %2746, 1
  br i1 %2747, label %2749, label %2748

2748:                                             ; preds = %2744
  store i32 66321, i32* %3, align 4
  br label %2928

2749:                                             ; preds = %2744
  %2750 = load i32, i32* %42, align 8
  %2751 = sext i32 %2750 to i64
  %2752 = sub nsw i64 0, %2751
  %2753 = getelementptr inbounds i64, i64* %2745, i64 %2752
  %2754 = shl nsw i64 %2751, 3
  %2755 = add nsw i64 %2754, -8
  %2756 = lshr exact i64 %2755, 3
  %2757 = add nuw nsw i64 %2756, 1
  %2758 = icmp ult i64 %2757, 4
  br i1 %2758, label %2852, label %2759

2759:                                             ; preds = %2749
  %2760 = getelementptr i64, i64* %2745, i64 1
  %2761 = shl nsw i64 %2751, 3
  %2762 = add nsw i64 %2761, -8
  %2763 = lshr exact i64 %2762, 3
  %2764 = getelementptr i64, i64* %2760, i64 %2763
  %2765 = getelementptr i64, i64* %2745, i64 1
  %2766 = sub nsw i64 %2763, %2751
  %2767 = getelementptr i64, i64* %2765, i64 %2766
  %2768 = icmp ult i64* %2745, %2767
  %2769 = icmp ult i64* %2753, %2764
  %2770 = and i1 %2768, %2769
  br i1 %2770, label %2852, label %2771

2771:                                             ; preds = %2759
  %2772 = and i64 %2757, 4611686018427387900
  %2773 = getelementptr i64, i64* %2753, i64 %2772
  %2774 = getelementptr i64, i64* %2745, i64 %2772
  %2775 = add nsw i64 %2772, -4
  %2776 = lshr exact i64 %2775, 2
  %2777 = add nuw nsw i64 %2776, 1
  %2778 = and i64 %2777, 3
  %2779 = icmp ult i64 %2775, 12
  br i1 %2779, label %2831, label %2780

2780:                                             ; preds = %2771
  %2781 = sub nsw i64 %2777, %2778
  br label %2782

2782:                                             ; preds = %2782, %2780
  %2783 = phi i64 [ 0, %2780 ], [ %2828, %2782 ]
  %2784 = phi i64 [ %2781, %2780 ], [ %2829, %2782 ]
  %2785 = getelementptr i64, i64* %2753, i64 %2783
  %2786 = getelementptr i64, i64* %2745, i64 %2783
  %2787 = bitcast i64* %2785 to <2 x i64>*
  %2788 = load <2 x i64>, <2 x i64>* %2787, align 8, !alias.scope !157
  %2789 = getelementptr i64, i64* %2785, i64 2
  %2790 = bitcast i64* %2789 to <2 x i64>*
  %2791 = load <2 x i64>, <2 x i64>* %2790, align 8, !alias.scope !157
  %2792 = bitcast i64* %2786 to <2 x i64>*
  store <2 x i64> %2788, <2 x i64>* %2792, align 8, !alias.scope !160, !noalias !157
  %2793 = getelementptr i64, i64* %2786, i64 2
  %2794 = bitcast i64* %2793 to <2 x i64>*
  store <2 x i64> %2791, <2 x i64>* %2794, align 8, !alias.scope !160, !noalias !157
  %2795 = or i64 %2783, 4
  %2796 = getelementptr i64, i64* %2753, i64 %2795
  %2797 = getelementptr i64, i64* %2745, i64 %2795
  %2798 = bitcast i64* %2796 to <2 x i64>*
  %2799 = load <2 x i64>, <2 x i64>* %2798, align 8, !alias.scope !157
  %2800 = getelementptr i64, i64* %2796, i64 2
  %2801 = bitcast i64* %2800 to <2 x i64>*
  %2802 = load <2 x i64>, <2 x i64>* %2801, align 8, !alias.scope !157
  %2803 = bitcast i64* %2797 to <2 x i64>*
  store <2 x i64> %2799, <2 x i64>* %2803, align 8, !alias.scope !160, !noalias !157
  %2804 = getelementptr i64, i64* %2797, i64 2
  %2805 = bitcast i64* %2804 to <2 x i64>*
  store <2 x i64> %2802, <2 x i64>* %2805, align 8, !alias.scope !160, !noalias !157
  %2806 = or i64 %2783, 8
  %2807 = getelementptr i64, i64* %2753, i64 %2806
  %2808 = getelementptr i64, i64* %2745, i64 %2806
  %2809 = bitcast i64* %2807 to <2 x i64>*
  %2810 = load <2 x i64>, <2 x i64>* %2809, align 8, !alias.scope !157
  %2811 = getelementptr i64, i64* %2807, i64 2
  %2812 = bitcast i64* %2811 to <2 x i64>*
  %2813 = load <2 x i64>, <2 x i64>* %2812, align 8, !alias.scope !157
  %2814 = bitcast i64* %2808 to <2 x i64>*
  store <2 x i64> %2810, <2 x i64>* %2814, align 8, !alias.scope !160, !noalias !157
  %2815 = getelementptr i64, i64* %2808, i64 2
  %2816 = bitcast i64* %2815 to <2 x i64>*
  store <2 x i64> %2813, <2 x i64>* %2816, align 8, !alias.scope !160, !noalias !157
  %2817 = or i64 %2783, 12
  %2818 = getelementptr i64, i64* %2753, i64 %2817
  %2819 = getelementptr i64, i64* %2745, i64 %2817
  %2820 = bitcast i64* %2818 to <2 x i64>*
  %2821 = load <2 x i64>, <2 x i64>* %2820, align 8, !alias.scope !157
  %2822 = getelementptr i64, i64* %2818, i64 2
  %2823 = bitcast i64* %2822 to <2 x i64>*
  %2824 = load <2 x i64>, <2 x i64>* %2823, align 8, !alias.scope !157
  %2825 = bitcast i64* %2819 to <2 x i64>*
  store <2 x i64> %2821, <2 x i64>* %2825, align 8, !alias.scope !160, !noalias !157
  %2826 = getelementptr i64, i64* %2819, i64 2
  %2827 = bitcast i64* %2826 to <2 x i64>*
  store <2 x i64> %2824, <2 x i64>* %2827, align 8, !alias.scope !160, !noalias !157
  %2828 = add i64 %2783, 16
  %2829 = add i64 %2784, -4
  %2830 = icmp eq i64 %2829, 0
  br i1 %2830, label %2831, label %2782, !llvm.loop !162

2831:                                             ; preds = %2782, %2771
  %2832 = phi i64 [ 0, %2771 ], [ %2828, %2782 ]
  %2833 = icmp eq i64 %2778, 0
  br i1 %2833, label %2850, label %2834

2834:                                             ; preds = %2831, %2834
  %2835 = phi i64 [ %2847, %2834 ], [ %2832, %2831 ]
  %2836 = phi i64 [ %2848, %2834 ], [ %2778, %2831 ]
  %2837 = getelementptr i64, i64* %2753, i64 %2835
  %2838 = getelementptr i64, i64* %2745, i64 %2835
  %2839 = bitcast i64* %2837 to <2 x i64>*
  %2840 = load <2 x i64>, <2 x i64>* %2839, align 8, !alias.scope !157
  %2841 = getelementptr i64, i64* %2837, i64 2
  %2842 = bitcast i64* %2841 to <2 x i64>*
  %2843 = load <2 x i64>, <2 x i64>* %2842, align 8, !alias.scope !157
  %2844 = bitcast i64* %2838 to <2 x i64>*
  store <2 x i64> %2840, <2 x i64>* %2844, align 8, !alias.scope !160, !noalias !157
  %2845 = getelementptr i64, i64* %2838, i64 2
  %2846 = bitcast i64* %2845 to <2 x i64>*
  store <2 x i64> %2843, <2 x i64>* %2846, align 8, !alias.scope !160, !noalias !157
  %2847 = add i64 %2835, 4
  %2848 = add i64 %2836, -1
  %2849 = icmp eq i64 %2848, 0
  br i1 %2849, label %2850, label %2834, !llvm.loop !163

2850:                                             ; preds = %2834, %2831
  %2851 = icmp eq i64 %2757, %2772
  br i1 %2851, label %2904, label %2852

2852:                                             ; preds = %2850, %2759, %2749
  %2853 = phi i64* [ %2753, %2759 ], [ %2753, %2749 ], [ %2773, %2850 ]
  %2854 = phi i64* [ %2745, %2759 ], [ %2745, %2749 ], [ %2774, %2850 ]
  %2855 = ptrtoint i64* %2853 to i64
  %2856 = getelementptr i64, i64* %2745, i64 -1
  %2857 = ptrtoint i64* %2856 to i64
  %2858 = sub i64 %2857, %2855
  %2859 = lshr i64 %2858, 3
  %2860 = add nuw nsw i64 %2859, 1
  %2861 = and i64 %2860, 7
  %2862 = icmp eq i64 %2861, 0
  br i1 %2862, label %2872, label %2863

2863:                                             ; preds = %2852, %2863
  %2864 = phi i64* [ %2867, %2863 ], [ %2853, %2852 ]
  %2865 = phi i64* [ %2869, %2863 ], [ %2854, %2852 ]
  %2866 = phi i64 [ %2870, %2863 ], [ %2861, %2852 ]
  %2867 = getelementptr inbounds i64, i64* %2864, i64 1
  %2868 = load i64, i64* %2864, align 8
  %2869 = getelementptr inbounds i64, i64* %2865, i64 1
  store i64 %2868, i64* %2865, align 8
  %2870 = add i64 %2866, -1
  %2871 = icmp eq i64 %2870, 0
  br i1 %2871, label %2872, label %2863, !llvm.loop !164

2872:                                             ; preds = %2863, %2852
  %2873 = phi i64* [ %2853, %2852 ], [ %2867, %2863 ]
  %2874 = phi i64* [ %2854, %2852 ], [ %2869, %2863 ]
  %2875 = icmp ult i64 %2858, 56
  br i1 %2875, label %2904, label %2876

2876:                                             ; preds = %2872, %2876
  %2877 = phi i64* [ %2900, %2876 ], [ %2873, %2872 ]
  %2878 = phi i64* [ %2902, %2876 ], [ %2874, %2872 ]
  %2879 = getelementptr inbounds i64, i64* %2877, i64 1
  %2880 = load i64, i64* %2877, align 8
  %2881 = getelementptr inbounds i64, i64* %2878, i64 1
  store i64 %2880, i64* %2878, align 8
  %2882 = getelementptr inbounds i64, i64* %2877, i64 2
  %2883 = load i64, i64* %2879, align 8
  %2884 = getelementptr inbounds i64, i64* %2878, i64 2
  store i64 %2883, i64* %2881, align 8
  %2885 = getelementptr inbounds i64, i64* %2877, i64 3
  %2886 = load i64, i64* %2882, align 8
  %2887 = getelementptr inbounds i64, i64* %2878, i64 3
  store i64 %2886, i64* %2884, align 8
  %2888 = getelementptr inbounds i64, i64* %2877, i64 4
  %2889 = load i64, i64* %2885, align 8
  %2890 = getelementptr inbounds i64, i64* %2878, i64 4
  store i64 %2889, i64* %2887, align 8
  %2891 = getelementptr inbounds i64, i64* %2877, i64 5
  %2892 = load i64, i64* %2888, align 8
  %2893 = getelementptr inbounds i64, i64* %2878, i64 5
  store i64 %2892, i64* %2890, align 8
  %2894 = getelementptr inbounds i64, i64* %2877, i64 6
  %2895 = load i64, i64* %2891, align 8
  %2896 = getelementptr inbounds i64, i64* %2878, i64 6
  store i64 %2895, i64* %2893, align 8
  %2897 = getelementptr inbounds i64, i64* %2877, i64 7
  %2898 = load i64, i64* %2894, align 8
  %2899 = getelementptr inbounds i64, i64* %2878, i64 7
  store i64 %2898, i64* %2896, align 8
  %2900 = getelementptr inbounds i64, i64* %2877, i64 8
  %2901 = load i64, i64* %2897, align 8
  %2902 = getelementptr inbounds i64, i64* %2878, i64 8
  store i64 %2901, i64* %2899, align 8
  %2903 = icmp eq i64* %2900, %2745
  br i1 %2903, label %2904, label %2876, !llvm.loop !165

2904:                                             ; preds = %2872, %2876, %2850
  %2905 = load i32, i32* %108, align 8
  %2906 = add nsw i32 %2905, -1
  store i32 %2906, i32* %108, align 8
  %2907 = icmp slt i32 %2905, 2
  br i1 %2907, label %2908, label %2925

2908:                                             ; preds = %2904
  store i32 10000, i32* %108, align 8
  %2909 = load i32, i32* %109, align 4
  %2910 = add nsw i32 %2909, 1
  store i32 %2910, i32* %109, align 4
  %2911 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %2912 = icmp eq i8 (i8*, i32)* %2911, null
  br i1 %2912, label %2918, label %2913

2913:                                             ; preds = %2908
  %2914 = load i8*, i8** %111, align 8
  %2915 = call signext i8 %2911(i8* %2914, i32 %2910) #12
  %2916 = icmp eq i8 %2915, 0
  br i1 %2916, label %2917, label %2918

2917:                                             ; preds = %2913
  store i32 66323, i32* %3, align 4
  br label %2925

2918:                                             ; preds = %2913, %2908
  %2919 = load i32, i32* %112, align 8
  %2920 = icmp sgt i32 %2919, 0
  br i1 %2920, label %2921, label %2925

2921:                                             ; preds = %2918
  %2922 = load i32, i32* %109, align 4
  %2923 = icmp slt i32 %2922, %2919
  br i1 %2923, label %2925, label %2924

2924:                                             ; preds = %2921
  store i32 66322, i32* %3, align 4
  br label %2925

2925:                                             ; preds = %2924, %2921, %2918, %2917, %2904
  %2926 = getelementptr inbounds i64, i64* %2753, i64 1
  store i64 %2690, i64* %2926, align 8
  %2927 = bitcast i64* %2745 to %"struct.icu_69::REStackFrame"*
  br label %2928

2928:                                             ; preds = %2715, %2925, %2748
  %2929 = phi %"struct.icu_69::REStackFrame"* [ %148, %2715 ], [ %148, %2748 ], [ %2927, %2925 ]
  %2930 = add nuw nsw i64 %2695, 1
  %2931 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %2929, i64 0, i32 1
  store i64 %2930, i64* %2931, align 8
  br label %5230

2932:                                             ; preds = %147
  %2933 = zext i32 %155 to i64
  %2934 = getelementptr inbounds i64, i64* %16, i64 %2933
  %2935 = load i64, i64* %2934, align 8
  %2936 = trunc i64 %2935 to i32
  %2937 = and i32 %2936, 16777215
  %2938 = zext i32 %2937 to i64
  %2939 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %2938
  %2940 = add nuw nsw i32 %155, 2
  %2941 = zext i32 %2940 to i64
  %2942 = getelementptr inbounds i64, i64* %16, i64 %2941
  %2943 = load i64, i64* %2942, align 8
  %2944 = add nuw nsw i32 %155, 3
  %2945 = zext i32 %2944 to i64
  %2946 = getelementptr inbounds i64, i64* %16, i64 %2945
  %2947 = load i64, i64* %2946, align 8
  %2948 = trunc i64 %2947 to i32
  %2949 = load i64, i64* %2939, align 8
  %2950 = add nsw i64 %2949, 1
  store i64 %2950, i64* %2939, align 8
  %2951 = and i64 %2947, 4294967295
  %2952 = icmp uge i64 %2950, %2951
  %2953 = icmp ne i32 %2948, -1
  %2954 = and i1 %2953, %2952
  br i1 %2954, label %5230, label %2955

2955:                                             ; preds = %2932
  %2956 = shl i64 %2943, 32
  %2957 = ashr exact i64 %2956, 32
  %2958 = icmp slt i64 %2950, %2957
  br i1 %2958, label %2959, label %2982

2959:                                             ; preds = %2955
  %2960 = add nuw nsw i32 %155, 4
  %2961 = zext i32 %2960 to i64
  store i64 %2961, i64* %149, align 8
  %2962 = load i32, i32* %108, align 8
  %2963 = add nsw i32 %2962, -1
  store i32 %2963, i32* %108, align 8
  %2964 = icmp slt i32 %2962, 2
  br i1 %2964, label %2965, label %5230

2965:                                             ; preds = %2959
  store i32 10000, i32* %108, align 8
  %2966 = load i32, i32* %109, align 4
  %2967 = add nsw i32 %2966, 1
  store i32 %2967, i32* %109, align 4
  %2968 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %2969 = icmp eq i8 (i8*, i32)* %2968, null
  br i1 %2969, label %2975, label %2970

2970:                                             ; preds = %2965
  %2971 = load i8*, i8** %111, align 8
  %2972 = call signext i8 %2968(i8* %2971, i32 %2967) #12
  %2973 = icmp eq i8 %2972, 0
  br i1 %2973, label %2974, label %2975

2974:                                             ; preds = %2970
  store i32 66323, i32* %3, align 4
  br label %5234

2975:                                             ; preds = %2970, %2965
  %2976 = load i32, i32* %112, align 8
  %2977 = icmp sgt i32 %2976, 0
  br i1 %2977, label %2978, label %5230

2978:                                             ; preds = %2975
  %2979 = load i32, i32* %109, align 4
  %2980 = icmp slt i32 %2979, %2976
  br i1 %2980, label %5230, label %2981

2981:                                             ; preds = %2978
  store i32 66322, i32* %3, align 4
  br label %5234

2982:                                             ; preds = %2955
  %2983 = icmp eq i32 %2948, -1
  br i1 %2983, label %2984, label %2993

2984:                                             ; preds = %2982
  %2985 = add nuw nsw i32 %2937, 1
  %2986 = zext i32 %2985 to i64
  %2987 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %2986
  %2988 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %2989 = load i64, i64* %2988, align 8
  %2990 = load i64, i64* %2987, align 8
  %2991 = icmp eq i64 %2989, %2990
  br i1 %2991, label %5230, label %2992

2992:                                             ; preds = %2984
  store i64 %2989, i64* %2987, align 8
  br label %2993

2993:                                             ; preds = %2992, %2982
  %2994 = add nuw nsw i32 %155, 4
  %2995 = zext i32 %2994 to i64
  %2996 = load i32, i32* %3, align 4
  %2997 = icmp slt i32 %2996, 1
  br i1 %2997, label %2998, label %5234

2998:                                             ; preds = %2993
  %2999 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3000 = load i32, i32* %42, align 8
  %3001 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2999, i64 0, i32 1
  %3002 = load i32, i32* %3001, align 8
  %3003 = add nsw i32 %3002, %3000
  %3004 = icmp sgt i32 %3003, -1
  br i1 %3004, label %3005, label %3009

3005:                                             ; preds = %2998
  %3006 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2999, i64 0, i32 2
  %3007 = load i32, i32* %3006, align 4
  %3008 = icmp slt i32 %3007, %3003
  br i1 %3008, label %3009, label %3015

3009:                                             ; preds = %3005, %2998
  %3010 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %2999, i32 %3003, i32* dereferenceable(4) %3) #12
  %3011 = icmp eq i8 %3010, 0
  br i1 %3011, label %3022, label %3012

3012:                                             ; preds = %3009
  %3013 = load i32, i32* %3001, align 8
  %3014 = add nsw i32 %3013, %3000
  br label %3015

3015:                                             ; preds = %3012, %3005
  %3016 = phi i32 [ %3014, %3012 ], [ %3003, %3005 ]
  %3017 = phi i32 [ %3013, %3012 ], [ %3002, %3005 ]
  %3018 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %2999, i64 0, i32 4
  %3019 = load i64*, i64** %3018, align 8
  %3020 = sext i32 %3017 to i64
  %3021 = getelementptr inbounds i64, i64* %3019, i64 %3020
  store i32 %3016, i32* %3001, align 8
  br label %3022

3022:                                             ; preds = %3015, %3009
  %3023 = phi i64* [ %3021, %3015 ], [ null, %3009 ]
  %3024 = load i32, i32* %3, align 4
  %3025 = icmp slt i32 %3024, 1
  br i1 %3025, label %3027, label %3026

3026:                                             ; preds = %3022
  store i32 66321, i32* %3, align 4
  br label %5234

3027:                                             ; preds = %3022
  %3028 = load i32, i32* %42, align 8
  %3029 = sext i32 %3028 to i64
  %3030 = sub nsw i64 0, %3029
  %3031 = getelementptr inbounds i64, i64* %3023, i64 %3030
  %3032 = shl nsw i64 %3029, 3
  %3033 = add nsw i64 %3032, -8
  %3034 = lshr exact i64 %3033, 3
  %3035 = add nuw nsw i64 %3034, 1
  %3036 = icmp ult i64 %3035, 4
  br i1 %3036, label %3130, label %3037

3037:                                             ; preds = %3027
  %3038 = getelementptr i64, i64* %3023, i64 1
  %3039 = shl nsw i64 %3029, 3
  %3040 = add nsw i64 %3039, -8
  %3041 = lshr exact i64 %3040, 3
  %3042 = getelementptr i64, i64* %3038, i64 %3041
  %3043 = getelementptr i64, i64* %3023, i64 1
  %3044 = sub nsw i64 %3041, %3029
  %3045 = getelementptr i64, i64* %3043, i64 %3044
  %3046 = icmp ult i64* %3023, %3045
  %3047 = icmp ult i64* %3031, %3042
  %3048 = and i1 %3046, %3047
  br i1 %3048, label %3130, label %3049

3049:                                             ; preds = %3037
  %3050 = and i64 %3035, 4611686018427387900
  %3051 = getelementptr i64, i64* %3031, i64 %3050
  %3052 = getelementptr i64, i64* %3023, i64 %3050
  %3053 = add nsw i64 %3050, -4
  %3054 = lshr exact i64 %3053, 2
  %3055 = add nuw nsw i64 %3054, 1
  %3056 = and i64 %3055, 3
  %3057 = icmp ult i64 %3053, 12
  br i1 %3057, label %3109, label %3058

3058:                                             ; preds = %3049
  %3059 = sub nsw i64 %3055, %3056
  br label %3060

3060:                                             ; preds = %3060, %3058
  %3061 = phi i64 [ 0, %3058 ], [ %3106, %3060 ]
  %3062 = phi i64 [ %3059, %3058 ], [ %3107, %3060 ]
  %3063 = getelementptr i64, i64* %3031, i64 %3061
  %3064 = getelementptr i64, i64* %3023, i64 %3061
  %3065 = bitcast i64* %3063 to <2 x i64>*
  %3066 = load <2 x i64>, <2 x i64>* %3065, align 8, !alias.scope !166
  %3067 = getelementptr i64, i64* %3063, i64 2
  %3068 = bitcast i64* %3067 to <2 x i64>*
  %3069 = load <2 x i64>, <2 x i64>* %3068, align 8, !alias.scope !166
  %3070 = bitcast i64* %3064 to <2 x i64>*
  store <2 x i64> %3066, <2 x i64>* %3070, align 8, !alias.scope !169, !noalias !166
  %3071 = getelementptr i64, i64* %3064, i64 2
  %3072 = bitcast i64* %3071 to <2 x i64>*
  store <2 x i64> %3069, <2 x i64>* %3072, align 8, !alias.scope !169, !noalias !166
  %3073 = or i64 %3061, 4
  %3074 = getelementptr i64, i64* %3031, i64 %3073
  %3075 = getelementptr i64, i64* %3023, i64 %3073
  %3076 = bitcast i64* %3074 to <2 x i64>*
  %3077 = load <2 x i64>, <2 x i64>* %3076, align 8, !alias.scope !166
  %3078 = getelementptr i64, i64* %3074, i64 2
  %3079 = bitcast i64* %3078 to <2 x i64>*
  %3080 = load <2 x i64>, <2 x i64>* %3079, align 8, !alias.scope !166
  %3081 = bitcast i64* %3075 to <2 x i64>*
  store <2 x i64> %3077, <2 x i64>* %3081, align 8, !alias.scope !169, !noalias !166
  %3082 = getelementptr i64, i64* %3075, i64 2
  %3083 = bitcast i64* %3082 to <2 x i64>*
  store <2 x i64> %3080, <2 x i64>* %3083, align 8, !alias.scope !169, !noalias !166
  %3084 = or i64 %3061, 8
  %3085 = getelementptr i64, i64* %3031, i64 %3084
  %3086 = getelementptr i64, i64* %3023, i64 %3084
  %3087 = bitcast i64* %3085 to <2 x i64>*
  %3088 = load <2 x i64>, <2 x i64>* %3087, align 8, !alias.scope !166
  %3089 = getelementptr i64, i64* %3085, i64 2
  %3090 = bitcast i64* %3089 to <2 x i64>*
  %3091 = load <2 x i64>, <2 x i64>* %3090, align 8, !alias.scope !166
  %3092 = bitcast i64* %3086 to <2 x i64>*
  store <2 x i64> %3088, <2 x i64>* %3092, align 8, !alias.scope !169, !noalias !166
  %3093 = getelementptr i64, i64* %3086, i64 2
  %3094 = bitcast i64* %3093 to <2 x i64>*
  store <2 x i64> %3091, <2 x i64>* %3094, align 8, !alias.scope !169, !noalias !166
  %3095 = or i64 %3061, 12
  %3096 = getelementptr i64, i64* %3031, i64 %3095
  %3097 = getelementptr i64, i64* %3023, i64 %3095
  %3098 = bitcast i64* %3096 to <2 x i64>*
  %3099 = load <2 x i64>, <2 x i64>* %3098, align 8, !alias.scope !166
  %3100 = getelementptr i64, i64* %3096, i64 2
  %3101 = bitcast i64* %3100 to <2 x i64>*
  %3102 = load <2 x i64>, <2 x i64>* %3101, align 8, !alias.scope !166
  %3103 = bitcast i64* %3097 to <2 x i64>*
  store <2 x i64> %3099, <2 x i64>* %3103, align 8, !alias.scope !169, !noalias !166
  %3104 = getelementptr i64, i64* %3097, i64 2
  %3105 = bitcast i64* %3104 to <2 x i64>*
  store <2 x i64> %3102, <2 x i64>* %3105, align 8, !alias.scope !169, !noalias !166
  %3106 = add i64 %3061, 16
  %3107 = add i64 %3062, -4
  %3108 = icmp eq i64 %3107, 0
  br i1 %3108, label %3109, label %3060, !llvm.loop !171

3109:                                             ; preds = %3060, %3049
  %3110 = phi i64 [ 0, %3049 ], [ %3106, %3060 ]
  %3111 = icmp eq i64 %3056, 0
  br i1 %3111, label %3128, label %3112

3112:                                             ; preds = %3109, %3112
  %3113 = phi i64 [ %3125, %3112 ], [ %3110, %3109 ]
  %3114 = phi i64 [ %3126, %3112 ], [ %3056, %3109 ]
  %3115 = getelementptr i64, i64* %3031, i64 %3113
  %3116 = getelementptr i64, i64* %3023, i64 %3113
  %3117 = bitcast i64* %3115 to <2 x i64>*
  %3118 = load <2 x i64>, <2 x i64>* %3117, align 8, !alias.scope !166
  %3119 = getelementptr i64, i64* %3115, i64 2
  %3120 = bitcast i64* %3119 to <2 x i64>*
  %3121 = load <2 x i64>, <2 x i64>* %3120, align 8, !alias.scope !166
  %3122 = bitcast i64* %3116 to <2 x i64>*
  store <2 x i64> %3118, <2 x i64>* %3122, align 8, !alias.scope !169, !noalias !166
  %3123 = getelementptr i64, i64* %3116, i64 2
  %3124 = bitcast i64* %3123 to <2 x i64>*
  store <2 x i64> %3121, <2 x i64>* %3124, align 8, !alias.scope !169, !noalias !166
  %3125 = add i64 %3113, 4
  %3126 = add i64 %3114, -1
  %3127 = icmp eq i64 %3126, 0
  br i1 %3127, label %3128, label %3112, !llvm.loop !172

3128:                                             ; preds = %3112, %3109
  %3129 = icmp eq i64 %3035, %3050
  br i1 %3129, label %3182, label %3130

3130:                                             ; preds = %3128, %3037, %3027
  %3131 = phi i64* [ %3031, %3037 ], [ %3031, %3027 ], [ %3051, %3128 ]
  %3132 = phi i64* [ %3023, %3037 ], [ %3023, %3027 ], [ %3052, %3128 ]
  %3133 = ptrtoint i64* %3131 to i64
  %3134 = getelementptr i64, i64* %3023, i64 -1
  %3135 = ptrtoint i64* %3134 to i64
  %3136 = sub i64 %3135, %3133
  %3137 = lshr i64 %3136, 3
  %3138 = add nuw nsw i64 %3137, 1
  %3139 = and i64 %3138, 7
  %3140 = icmp eq i64 %3139, 0
  br i1 %3140, label %3150, label %3141

3141:                                             ; preds = %3130, %3141
  %3142 = phi i64* [ %3145, %3141 ], [ %3131, %3130 ]
  %3143 = phi i64* [ %3147, %3141 ], [ %3132, %3130 ]
  %3144 = phi i64 [ %3148, %3141 ], [ %3139, %3130 ]
  %3145 = getelementptr inbounds i64, i64* %3142, i64 1
  %3146 = load i64, i64* %3142, align 8
  %3147 = getelementptr inbounds i64, i64* %3143, i64 1
  store i64 %3146, i64* %3143, align 8
  %3148 = add i64 %3144, -1
  %3149 = icmp eq i64 %3148, 0
  br i1 %3149, label %3150, label %3141, !llvm.loop !173

3150:                                             ; preds = %3141, %3130
  %3151 = phi i64* [ %3131, %3130 ], [ %3145, %3141 ]
  %3152 = phi i64* [ %3132, %3130 ], [ %3147, %3141 ]
  %3153 = icmp ult i64 %3136, 56
  br i1 %3153, label %3182, label %3154

3154:                                             ; preds = %3150, %3154
  %3155 = phi i64* [ %3178, %3154 ], [ %3151, %3150 ]
  %3156 = phi i64* [ %3180, %3154 ], [ %3152, %3150 ]
  %3157 = getelementptr inbounds i64, i64* %3155, i64 1
  %3158 = load i64, i64* %3155, align 8
  %3159 = getelementptr inbounds i64, i64* %3156, i64 1
  store i64 %3158, i64* %3156, align 8
  %3160 = getelementptr inbounds i64, i64* %3155, i64 2
  %3161 = load i64, i64* %3157, align 8
  %3162 = getelementptr inbounds i64, i64* %3156, i64 2
  store i64 %3161, i64* %3159, align 8
  %3163 = getelementptr inbounds i64, i64* %3155, i64 3
  %3164 = load i64, i64* %3160, align 8
  %3165 = getelementptr inbounds i64, i64* %3156, i64 3
  store i64 %3164, i64* %3162, align 8
  %3166 = getelementptr inbounds i64, i64* %3155, i64 4
  %3167 = load i64, i64* %3163, align 8
  %3168 = getelementptr inbounds i64, i64* %3156, i64 4
  store i64 %3167, i64* %3165, align 8
  %3169 = getelementptr inbounds i64, i64* %3155, i64 5
  %3170 = load i64, i64* %3166, align 8
  %3171 = getelementptr inbounds i64, i64* %3156, i64 5
  store i64 %3170, i64* %3168, align 8
  %3172 = getelementptr inbounds i64, i64* %3155, i64 6
  %3173 = load i64, i64* %3169, align 8
  %3174 = getelementptr inbounds i64, i64* %3156, i64 6
  store i64 %3173, i64* %3171, align 8
  %3175 = getelementptr inbounds i64, i64* %3155, i64 7
  %3176 = load i64, i64* %3172, align 8
  %3177 = getelementptr inbounds i64, i64* %3156, i64 7
  store i64 %3176, i64* %3174, align 8
  %3178 = getelementptr inbounds i64, i64* %3155, i64 8
  %3179 = load i64, i64* %3175, align 8
  %3180 = getelementptr inbounds i64, i64* %3156, i64 8
  store i64 %3179, i64* %3177, align 8
  %3181 = icmp eq i64* %3178, %3023
  br i1 %3181, label %3182, label %3154, !llvm.loop !174

3182:                                             ; preds = %3150, %3154, %3128
  %3183 = load i32, i32* %108, align 8
  %3184 = add nsw i32 %3183, -1
  store i32 %3184, i32* %108, align 8
  %3185 = icmp slt i32 %3183, 2
  br i1 %3185, label %3186, label %3203

3186:                                             ; preds = %3182
  store i32 10000, i32* %108, align 8
  %3187 = load i32, i32* %109, align 4
  %3188 = add nsw i32 %3187, 1
  store i32 %3188, i32* %109, align 4
  %3189 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %3190 = icmp eq i8 (i8*, i32)* %3189, null
  br i1 %3190, label %3196, label %3191

3191:                                             ; preds = %3186
  %3192 = load i8*, i8** %111, align 8
  %3193 = call signext i8 %3189(i8* %3192, i32 %3188) #12
  %3194 = icmp eq i8 %3193, 0
  br i1 %3194, label %3195, label %3196

3195:                                             ; preds = %3191
  store i32 66323, i32* %3, align 4
  br label %3203

3196:                                             ; preds = %3191, %3186
  %3197 = load i32, i32* %112, align 8
  %3198 = icmp sgt i32 %3197, 0
  br i1 %3198, label %3199, label %3203

3199:                                             ; preds = %3196
  %3200 = load i32, i32* %109, align 4
  %3201 = icmp slt i32 %3200, %3197
  br i1 %3201, label %3203, label %3202

3202:                                             ; preds = %3199
  store i32 66322, i32* %3, align 4
  br label %3203

3203:                                             ; preds = %3202, %3199, %3196, %3195, %3182
  %3204 = getelementptr inbounds i64, i64* %3031, i64 1
  store i64 %2995, i64* %3204, align 8
  %3205 = bitcast i64* %3023 to %"struct.icu_69::REStackFrame"*
  br label %5230

3206:                                             ; preds = %147
  %3207 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3208 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3207, i64 0, i32 1
  %3209 = load i32, i32* %3208, align 8
  %3210 = sext i32 %3209 to i64
  %3211 = load i64*, i64** %115, align 8
  %3212 = zext i32 %155 to i64
  %3213 = getelementptr inbounds i64, i64* %3211, i64 %3212
  store i64 %3210, i64* %3213, align 8
  br label %5230

3214:                                             ; preds = %147
  %3215 = load i64*, i64** %115, align 8
  %3216 = zext i32 %155 to i64
  %3217 = getelementptr inbounds i64, i64* %3215, i64 %3216
  %3218 = load i64, i64* %3217, align 8
  %3219 = trunc i64 %3218 to i32
  %3220 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3221 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3220, i64 0, i32 4
  %3222 = load i64*, i64** %3221, align 8
  %3223 = shl i64 %3218, 32
  %3224 = ashr exact i64 %3223, 32
  %3225 = getelementptr inbounds i64, i64* %3222, i64 %3224
  %3226 = load i32, i32* %42, align 8
  %3227 = sext i32 %3226 to i64
  %3228 = sub nsw i64 0, %3227
  %3229 = getelementptr inbounds i64, i64* %3225, i64 %3228
  %3230 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %3231 = icmp eq i64* %3229, %3230
  br i1 %3231, label %5230, label %3232

3232:                                             ; preds = %3214
  %3233 = icmp sgt i32 %3226, 0
  br i1 %3233, label %3234, label %3245

3234:                                             ; preds = %3232, %3234
  %3235 = phi i64 [ %3239, %3234 ], [ 0, %3232 ]
  %3236 = getelementptr inbounds i64, i64* %3230, i64 %3235
  %3237 = load i64, i64* %3236, align 8
  %3238 = getelementptr inbounds i64, i64* %3229, i64 %3235
  store i64 %3237, i64* %3238, align 8
  %3239 = add nuw nsw i64 %3235, 1
  %3240 = load i32, i32* %42, align 8
  %3241 = sext i32 %3240 to i64
  %3242 = icmp slt i64 %3239, %3241
  br i1 %3242, label %3234, label %3243

3243:                                             ; preds = %3234
  %3244 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  br label %3245

3245:                                             ; preds = %3243, %3232
  %3246 = phi %"class.icu_69::UVector64"* [ %3244, %3243 ], [ %3220, %3232 ]
  %3247 = bitcast i64* %3229 to %"struct.icu_69::REStackFrame"*
  call void @_ZN6icu_699UVector647setSizeEi(%"class.icu_69::UVector64"* %3246, i32 %3219) #12
  br label %5230

3248:                                             ; preds = %147
  %3249 = zext i32 %155 to i64
  %3250 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %3249
  %3251 = load i64, i64* %3250, align 8
  %3252 = add nuw nsw i32 %155, 1
  %3253 = zext i32 %3252 to i64
  %3254 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %3253
  %3255 = load i64, i64* %3254, align 8
  %3256 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %3257 = icmp slt i64 %3251, 0
  br i1 %3257, label %3258, label %3274

3258:                                             ; preds = %3248
  %3259 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3260 = load i32, i32* %42, align 8
  %3261 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3259, i64 0, i32 1
  %3262 = load i32, i32* %3261, align 8
  %3263 = sub nsw i32 %3262, %3260
  %3264 = icmp sgt i32 %3263, 0
  %3265 = select i1 %3264, i32 %3263, i32 0
  store i32 %3265, i32* %3261, align 8
  %3266 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3259, i64 0, i32 4
  %3267 = load i64*, i64** %3266, align 8
  %3268 = zext i32 %3265 to i64
  %3269 = getelementptr inbounds i64, i64* %3267, i64 %3268
  %3270 = sext i32 %3260 to i64
  %3271 = sub nsw i64 0, %3270
  %3272 = getelementptr inbounds i64, i64* %3269, i64 %3271
  %3273 = bitcast i64* %3272 to %"struct.icu_69::REStackFrame"*
  br label %5230

3274:                                             ; preds = %3248
  %3275 = load i64, i64* %3256, align 8
  %3276 = icmp slt i64 %3251, %3255
  br i1 %3276, label %3277, label %3309

3277:                                             ; preds = %3274
  %3278 = load i64, i64* %113, align 8
  br label %3279

3279:                                             ; preds = %3290, %3277
  %3280 = phi i64 [ %3251, %3277 ], [ %3291, %3290 ]
  %3281 = phi i64 [ %3275, %3277 ], [ %3292, %3290 ]
  %3282 = icmp slt i64 %3281, %3278
  br i1 %3282, label %3284, label %3283

3283:                                             ; preds = %3279
  store i8 1, i8* %114, align 8
  br label %3311

3284:                                             ; preds = %3279
  %3285 = getelementptr inbounds i16, i16* %39, i64 %3280
  %3286 = load i16, i16* %3285, align 2
  %3287 = getelementptr inbounds i16, i16* %39, i64 %3281
  %3288 = load i16, i16* %3287, align 2
  %3289 = icmp eq i16 %3286, %3288
  br i1 %3289, label %3290, label %3311

3290:                                             ; preds = %3284
  %3291 = add i64 %3280, 1
  %3292 = add nsw i64 %3281, 1
  %3293 = icmp eq i64 %3291, %3255
  br i1 %3293, label %3294, label %3279

3294:                                             ; preds = %3290
  br i1 %3276, label %3295, label %3309

3295:                                             ; preds = %3294
  %3296 = add nsw i64 %3255, -1
  %3297 = getelementptr inbounds i16, i16* %39, i64 %3296
  %3298 = load i16, i16* %3297, align 2
  %3299 = and i16 %3298, -1024
  %3300 = icmp eq i16 %3299, -10240
  br i1 %3300, label %3301, label %3309

3301:                                             ; preds = %3295
  %3302 = load i64, i64* %113, align 8
  %3303 = icmp slt i64 %3292, %3302
  br i1 %3303, label %3304, label %3309

3304:                                             ; preds = %3301
  %3305 = getelementptr inbounds i16, i16* %39, i64 %3292
  %3306 = load i16, i16* %3305, align 2
  %3307 = and i16 %3306, -1024
  %3308 = icmp eq i16 %3307, -9216
  br i1 %3308, label %3311, label %3309

3309:                                             ; preds = %3274, %3301, %3295, %3294, %3304
  %3310 = phi i64 [ %3292, %3301 ], [ %3292, %3295 ], [ %3292, %3294 ], [ %3292, %3304 ], [ %3275, %3274 ]
  store i64 %3310, i64* %3256, align 8
  br label %5230

3311:                                             ; preds = %3284, %3304, %3283
  %3312 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3313 = load i32, i32* %42, align 8
  %3314 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3312, i64 0, i32 1
  %3315 = load i32, i32* %3314, align 8
  %3316 = sub nsw i32 %3315, %3313
  %3317 = icmp sgt i32 %3316, 0
  %3318 = select i1 %3317, i32 %3316, i32 0
  store i32 %3318, i32* %3314, align 8
  %3319 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3312, i64 0, i32 4
  %3320 = load i64*, i64** %3319, align 8
  %3321 = zext i32 %3318 to i64
  %3322 = getelementptr inbounds i64, i64* %3320, i64 %3321
  %3323 = sext i32 %3313 to i64
  %3324 = sub nsw i64 0, %3323
  %3325 = getelementptr inbounds i64, i64* %3322, i64 %3324
  %3326 = bitcast i64* %3325 to %"struct.icu_69::REStackFrame"*
  br label %5230

3327:                                             ; preds = %147
  %3328 = zext i32 %155 to i64
  %3329 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %3328
  %3330 = load i64, i64* %3329, align 8
  %3331 = icmp slt i64 %3330, 0
  br i1 %3331, label %3332, label %3348

3332:                                             ; preds = %3327
  %3333 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3334 = load i32, i32* %42, align 8
  %3335 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3333, i64 0, i32 1
  %3336 = load i32, i32* %3335, align 8
  %3337 = sub nsw i32 %3336, %3334
  %3338 = icmp sgt i32 %3337, 0
  %3339 = select i1 %3338, i32 %3337, i32 0
  store i32 %3339, i32* %3335, align 8
  %3340 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3333, i64 0, i32 4
  %3341 = load i64*, i64** %3340, align 8
  %3342 = zext i32 %3339 to i64
  %3343 = getelementptr inbounds i64, i64* %3341, i64 %3342
  %3344 = sext i32 %3334 to i64
  %3345 = sub nsw i64 0, %3344
  %3346 = getelementptr inbounds i64, i64* %3343, i64 %3345
  %3347 = bitcast i64* %3346 to %"struct.icu_69::REStackFrame"*
  br label %5230

3348:                                             ; preds = %3327
  %3349 = add nuw nsw i32 %155, 1
  %3350 = zext i32 %3349 to i64
  %3351 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %3350
  %3352 = load i64, i64* %3351, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %122) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 40, i1 false)
  call void @_ZN6icu_6924CaseFoldingUCharIteratorC1EPKDsll(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %5, i16* %39, i64 %3330, i64 %3352) #12
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %123) #12
  %3353 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 -86, i64 40, i1 false)
  %3354 = load i64, i64* %3353, align 8
  %3355 = load i64, i64* %113, align 8
  call void @_ZN6icu_6924CaseFoldingUCharIteratorC1EPKDsll(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %6, i16* %39, i64 %3354, i64 %3355) #12
  br label %3356

3356:                                             ; preds = %3363, %3348
  %3357 = call i32 @_ZN6icu_6924CaseFoldingUCharIterator4nextEv(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %5) #12
  %3358 = icmp eq i32 %3357, -1
  br i1 %3358, label %3365, label %3359

3359:                                             ; preds = %3356
  %3360 = call i32 @_ZN6icu_6924CaseFoldingUCharIterator4nextEv(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %6) #12
  %3361 = icmp eq i32 %3360, -1
  br i1 %3361, label %3362, label %3363

3362:                                             ; preds = %3359
  store i8 1, i8* %114, align 8
  br label %3370

3363:                                             ; preds = %3359
  %3364 = icmp eq i32 %3360, %3357
  br i1 %3364, label %3356, label %3370

3365:                                             ; preds = %3356
  %3366 = call signext i8 @_ZN6icu_6924CaseFoldingUCharIterator11inExpansionEv(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %6) #12
  %3367 = icmp eq i8 %3366, 0
  br i1 %3367, label %3368, label %3370

3368:                                             ; preds = %3365
  %3369 = call i64 @_ZN6icu_6924CaseFoldingUCharIterator8getIndexEv(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %6) #12
  store i64 %3369, i64* %3353, align 8
  br label %3386

3370:                                             ; preds = %3363, %3365, %3362
  %3371 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3372 = load i32, i32* %42, align 8
  %3373 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3371, i64 0, i32 1
  %3374 = load i32, i32* %3373, align 8
  %3375 = sub nsw i32 %3374, %3372
  %3376 = icmp sgt i32 %3375, 0
  %3377 = select i1 %3376, i32 %3375, i32 0
  store i32 %3377, i32* %3373, align 8
  %3378 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3371, i64 0, i32 4
  %3379 = load i64*, i64** %3378, align 8
  %3380 = zext i32 %3377 to i64
  %3381 = getelementptr inbounds i64, i64* %3379, i64 %3380
  %3382 = sext i32 %3372 to i64
  %3383 = sub nsw i64 0, %3382
  %3384 = getelementptr inbounds i64, i64* %3381, i64 %3383
  %3385 = bitcast i64* %3384 to %"struct.icu_69::REStackFrame"*
  br label %3386

3386:                                             ; preds = %3370, %3368
  %3387 = phi %"struct.icu_69::REStackFrame"* [ %148, %3368 ], [ %3385, %3370 ]
  call void @_ZN6icu_6924CaseFoldingUCharIteratorD1Ev(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %123) #12
  call void @_ZN6icu_6924CaseFoldingUCharIteratorD1Ev(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %122) #12
  br label %5230

3388:                                             ; preds = %147
  %3389 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %3390 = load i64, i64* %3389, align 8
  %3391 = zext i32 %155 to i64
  %3392 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %3391
  store i64 %3390, i64* %3392, align 8
  br label %5230

3393:                                             ; preds = %147
  %3394 = add nsw i64 %150, 2
  store i64 %3394, i64* %149, align 8
  %3395 = shl i64 %156, 32
  %3396 = ashr exact i64 %3395, 32
  %3397 = getelementptr inbounds i64, i64* %16, i64 %3396
  %3398 = load i64, i64* %3397, align 8
  %3399 = and i64 %3398, 16777215
  %3400 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %3399
  %3401 = load i64, i64* %3400, align 8
  %3402 = shl i64 %3401, 32
  %3403 = ashr exact i64 %3402, 32
  %3404 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %3405 = load i64, i64* %3404, align 8
  %3406 = icmp slt i64 %3403, %3405
  br i1 %3406, label %3407, label %3409

3407:                                             ; preds = %3393
  %3408 = zext i32 %155 to i64
  store i64 %3408, i64* %149, align 8
  br label %5230

3409:                                             ; preds = %3393
  %3410 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3411 = load i32, i32* %42, align 8
  %3412 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3410, i64 0, i32 1
  %3413 = load i32, i32* %3412, align 8
  %3414 = sub nsw i32 %3413, %3411
  %3415 = icmp sgt i32 %3414, 0
  %3416 = select i1 %3415, i32 %3414, i32 0
  store i32 %3416, i32* %3412, align 8
  %3417 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3410, i64 0, i32 4
  %3418 = load i64*, i64** %3417, align 8
  %3419 = zext i32 %3416 to i64
  %3420 = getelementptr inbounds i64, i64* %3418, i64 %3419
  %3421 = sext i32 %3411 to i64
  %3422 = sub nsw i64 0, %3421
  %3423 = getelementptr inbounds i64, i64* %3420, i64 %3422
  %3424 = bitcast i64* %3423 to %"struct.icu_69::REStackFrame"*
  br label %5230

3425:                                             ; preds = %147
  %3426 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3427 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3426, i64 0, i32 1
  %3428 = load i32, i32* %3427, align 8
  %3429 = sext i32 %3428 to i64
  %3430 = load i64*, i64** %115, align 8
  %3431 = zext i32 %155 to i64
  %3432 = getelementptr inbounds i64, i64* %3430, i64 %3431
  store i64 %3429, i64* %3432, align 8
  %3433 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %3434 = load i64, i64* %3433, align 8
  %3435 = load i64*, i64** %115, align 8
  %3436 = add nuw nsw i32 %155, 1
  %3437 = zext i32 %3436 to i64
  %3438 = getelementptr inbounds i64, i64* %3435, i64 %3437
  store i64 %3434, i64* %3438, align 8
  %3439 = load i64, i64* %116, align 8
  %3440 = load i64*, i64** %115, align 8
  %3441 = add nuw nsw i32 %155, 2
  %3442 = zext i32 %3441 to i64
  %3443 = getelementptr inbounds i64, i64* %3440, i64 %3442
  store i64 %3439, i64* %3443, align 8
  %3444 = load i64, i64* %113, align 8
  %3445 = load i64*, i64** %115, align 8
  %3446 = add nuw nsw i32 %155, 3
  %3447 = zext i32 %3446 to i64
  %3448 = getelementptr inbounds i64, i64* %3445, i64 %3447
  store i64 %3444, i64* %3448, align 8
  %3449 = load <2 x i64>, <2 x i64>* %135, align 8
  store <2 x i64> %3449, <2 x i64>* %136, align 8
  br label %5230

3450:                                             ; preds = %147
  %3451 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3452 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3451, i64 0, i32 1
  %3453 = load i32, i32* %3452, align 8
  %3454 = load i64*, i64** %115, align 8
  %3455 = zext i32 %155 to i64
  %3456 = getelementptr inbounds i64, i64* %3454, i64 %3455
  %3457 = load i64, i64* %3456, align 8
  %3458 = trunc i64 %3457 to i32
  %3459 = icmp sgt i32 %3453, %3458
  br i1 %3459, label %3460, label %3488

3460:                                             ; preds = %3450
  %3461 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3451, i64 0, i32 4
  %3462 = load i64*, i64** %3461, align 8
  %3463 = shl i64 %3457, 32
  %3464 = ashr exact i64 %3463, 32
  %3465 = getelementptr inbounds i64, i64* %3462, i64 %3464
  %3466 = load i32, i32* %42, align 8
  %3467 = sext i32 %3466 to i64
  %3468 = sub nsw i64 0, %3467
  %3469 = getelementptr inbounds i64, i64* %3465, i64 %3468
  %3470 = icmp sgt i32 %3466, 0
  br i1 %3470, label %3471, label %3484

3471:                                             ; preds = %3460
  %3472 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  br label %3473

3473:                                             ; preds = %3471, %3473
  %3474 = phi i64 [ 0, %3471 ], [ %3478, %3473 ]
  %3475 = getelementptr inbounds i64, i64* %3472, i64 %3474
  %3476 = load i64, i64* %3475, align 8
  %3477 = getelementptr inbounds i64, i64* %3469, i64 %3474
  store i64 %3476, i64* %3477, align 8
  %3478 = add nuw nsw i64 %3474, 1
  %3479 = load i32, i32* %42, align 8
  %3480 = sext i32 %3479 to i64
  %3481 = icmp slt i64 %3478, %3480
  br i1 %3481, label %3473, label %3482

3482:                                             ; preds = %3473
  %3483 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  br label %3484

3484:                                             ; preds = %3482, %3460
  %3485 = phi %"class.icu_69::UVector64"* [ %3483, %3482 ], [ %3451, %3460 ]
  %3486 = bitcast i64* %3469 to %"struct.icu_69::REStackFrame"*
  call void @_ZN6icu_699UVector647setSizeEi(%"class.icu_69::UVector64"* %3485, i32 %3458) #12
  %3487 = load i64*, i64** %115, align 8
  br label %3488

3488:                                             ; preds = %3484, %3450
  %3489 = phi i64* [ %3487, %3484 ], [ %3454, %3450 ]
  %3490 = phi %"struct.icu_69::REStackFrame"* [ %3486, %3484 ], [ %148, %3450 ]
  %3491 = add nuw nsw i32 %155, 1
  %3492 = zext i32 %3491 to i64
  %3493 = getelementptr inbounds i64, i64* %3489, i64 %3492
  %3494 = load i64, i64* %3493, align 8
  %3495 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %3490, i64 0, i32 0
  store i64 %3494, i64* %3495, align 8
  %3496 = load i64*, i64** %115, align 8
  %3497 = add nuw nsw i32 %155, 2
  %3498 = zext i32 %3497 to i64
  %3499 = getelementptr inbounds i64, i64* %3496, i64 %3498
  %3500 = load i64, i64* %3499, align 8
  store i64 %3500, i64* %116, align 8
  %3501 = add nuw nsw i32 %155, 3
  %3502 = zext i32 %3501 to i64
  %3503 = getelementptr inbounds i64, i64* %3496, i64 %3502
  %3504 = load i64, i64* %3503, align 8
  store i64 %3504, i64* %113, align 8
  br label %5230

3505:                                             ; preds = %147
  %3506 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %3507 = load i64, i64* %3506, align 8
  %3508 = load i64, i64* %113, align 8
  %3509 = icmp slt i64 %3507, %3508
  br i1 %3509, label %3510, label %3535

3510:                                             ; preds = %3505
  %3511 = add nsw i64 %3507, 1
  store i64 %3511, i64* %3506, align 8
  %3512 = getelementptr inbounds i16, i16* %39, i64 %3507
  %3513 = load i16, i16* %3512, align 2
  %3514 = zext i16 %3513 to i32
  %3515 = and i32 %3514, 64512
  %3516 = icmp eq i32 %3515, 55296
  br i1 %3516, label %3517, label %3531

3517:                                             ; preds = %3510
  %3518 = load i64, i64* %113, align 8
  %3519 = icmp eq i64 %3511, %3518
  br i1 %3519, label %3531, label %3520

3520:                                             ; preds = %3517
  %3521 = getelementptr inbounds i16, i16* %39, i64 %3511
  %3522 = load i16, i16* %3521, align 2
  %3523 = zext i16 %3522 to i32
  %3524 = and i32 %3523, 64512
  %3525 = icmp eq i32 %3524, 56320
  br i1 %3525, label %3526, label %3531

3526:                                             ; preds = %3520
  %3527 = add nsw i64 %3507, 2
  store i64 %3527, i64* %3506, align 8
  %3528 = shl nuw nsw i32 %3514, 10
  %3529 = add nsw i32 %3528, -56613888
  %3530 = add nsw i32 %3529, %3523
  br label %3531

3531:                                             ; preds = %3520, %3526, %3517, %3510
  %3532 = phi i32 [ %3514, %3510 ], [ %3530, %3526 ], [ %3514, %3520 ], [ %3514, %3517 ]
  %3533 = call i32 @u_foldCase_69(i32 %3532, i32 0) #12
  %3534 = icmp eq i32 %3533, %155
  br i1 %3534, label %5230, label %3536

3535:                                             ; preds = %3505
  store i8 1, i8* %114, align 8
  br label %3536

3536:                                             ; preds = %3531, %3535
  %3537 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3538 = load i32, i32* %42, align 8
  %3539 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3537, i64 0, i32 1
  %3540 = load i32, i32* %3539, align 8
  %3541 = sub nsw i32 %3540, %3538
  %3542 = icmp sgt i32 %3541, 0
  %3543 = select i1 %3542, i32 %3541, i32 0
  store i32 %3543, i32* %3539, align 8
  %3544 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3537, i64 0, i32 4
  %3545 = load i64*, i64** %3544, align 8
  %3546 = zext i32 %3543 to i64
  %3547 = getelementptr inbounds i64, i64* %3545, i64 %3546
  %3548 = sext i32 %3538 to i64
  %3549 = sub nsw i64 0, %3548
  %3550 = getelementptr inbounds i64, i64* %3547, i64 %3549
  %3551 = bitcast i64* %3550 to %"struct.icu_69::REStackFrame"*
  br label %5230

3552:                                             ; preds = %147
  %3553 = zext i32 %155 to i64
  %3554 = getelementptr inbounds i16, i16* %33, i64 %3553
  %3555 = getelementptr inbounds i64, i64* %16, i64 %156
  %3556 = load i64, i64* %3555, align 8
  %3557 = trunc i64 %3556 to i32
  %3558 = add nsw i64 %150, 2
  store i64 %3558, i64* %149, align 8
  %3559 = and i32 %3557, 16777215
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %119) #12
  %3560 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 -86, i64 40, i1 false)
  %3561 = load i64, i64* %3560, align 8
  %3562 = load i64, i64* %113, align 8
  call void @_ZN6icu_6924CaseFoldingUCharIteratorC1EPKDsll(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %7, i16* %39, i64 %3561, i64 %3562) #12
  br label %3563

3563:                                             ; preds = %3588, %3552
  %3564 = phi i32 [ 0, %3552 ], [ %3590, %3588 ]
  %3565 = icmp slt i32 %3564, %3559
  br i1 %3565, label %3566, label %3598

3566:                                             ; preds = %3563
  %3567 = add nsw i32 %3564, 1
  %3568 = sext i32 %3564 to i64
  %3569 = getelementptr inbounds i16, i16* %3554, i64 %3568
  %3570 = load i16, i16* %3569, align 2
  %3571 = zext i16 %3570 to i32
  %3572 = and i32 %3571, 64512
  %3573 = icmp ne i32 %3572, 55296
  %3574 = icmp eq i32 %3567, %3559
  %3575 = or i1 %3574, %3573
  br i1 %3575, label %3588, label %3576

3576:                                             ; preds = %3566
  %3577 = sext i32 %3567 to i64
  %3578 = getelementptr inbounds i16, i16* %3554, i64 %3577
  %3579 = load i16, i16* %3578, align 2
  %3580 = zext i16 %3579 to i32
  %3581 = and i32 %3580, 64512
  %3582 = icmp eq i32 %3581, 56320
  br i1 %3582, label %3583, label %3588

3583:                                             ; preds = %3576
  %3584 = add nsw i32 %3564, 2
  %3585 = shl nuw nsw i32 %3571, 10
  %3586 = add nsw i32 %3585, -56613888
  %3587 = add nsw i32 %3586, %3580
  br label %3588

3588:                                             ; preds = %3566, %3576, %3583
  %3589 = phi i32 [ %3571, %3566 ], [ %3587, %3583 ], [ %3571, %3576 ]
  %3590 = phi i32 [ %3567, %3566 ], [ %3584, %3583 ], [ %3567, %3576 ]
  %3591 = call i32 @_ZN6icu_6924CaseFoldingUCharIterator4nextEv(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %7) #12
  %3592 = icmp eq i32 %3591, %3589
  br i1 %3592, label %3563, label %3593

3593:                                             ; preds = %3588
  %3594 = icmp eq i32 %3591, -1
  br i1 %3594, label %3595, label %3596

3595:                                             ; preds = %3593
  store i8 1, i8* %114, align 8
  br label %3596

3596:                                             ; preds = %3595, %3593
  %3597 = call signext i8 @_ZN6icu_6924CaseFoldingUCharIterator11inExpansionEv(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %7) #12
  br label %3603

3598:                                             ; preds = %3563
  %3599 = call signext i8 @_ZN6icu_6924CaseFoldingUCharIterator11inExpansionEv(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %7) #12
  %3600 = icmp eq i8 %3599, 0
  br i1 %3600, label %3601, label %3603

3601:                                             ; preds = %3598
  %3602 = call i64 @_ZN6icu_6924CaseFoldingUCharIterator8getIndexEv(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %7) #12
  store i64 %3602, i64* %3560, align 8
  br label %3619

3603:                                             ; preds = %3598, %3596
  %3604 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3605 = load i32, i32* %42, align 8
  %3606 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3604, i64 0, i32 1
  %3607 = load i32, i32* %3606, align 8
  %3608 = sub nsw i32 %3607, %3605
  %3609 = icmp sgt i32 %3608, 0
  %3610 = select i1 %3609, i32 %3608, i32 0
  store i32 %3610, i32* %3606, align 8
  %3611 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3604, i64 0, i32 4
  %3612 = load i64*, i64** %3611, align 8
  %3613 = zext i32 %3610 to i64
  %3614 = getelementptr inbounds i64, i64* %3612, i64 %3613
  %3615 = sext i32 %3605 to i64
  %3616 = sub nsw i64 0, %3615
  %3617 = getelementptr inbounds i64, i64* %3614, i64 %3616
  %3618 = bitcast i64* %3617 to %"struct.icu_69::REStackFrame"*
  br label %3619

3619:                                             ; preds = %3603, %3601
  %3620 = phi %"struct.icu_69::REStackFrame"* [ %148, %3601 ], [ %3618, %3603 ]
  call void @_ZN6icu_6924CaseFoldingUCharIteratorD1Ev(%"class.icu_69::CaseFoldingUCharIterator"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %119) #12
  br label %5230

3621:                                             ; preds = %147
  %3622 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3623 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3622, i64 0, i32 1
  %3624 = load i32, i32* %3623, align 8
  %3625 = sext i32 %3624 to i64
  %3626 = load i64*, i64** %115, align 8
  %3627 = zext i32 %155 to i64
  %3628 = getelementptr inbounds i64, i64* %3626, i64 %3627
  store i64 %3625, i64* %3628, align 8
  %3629 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %3630 = load i64, i64* %3629, align 8
  %3631 = load i64*, i64** %115, align 8
  %3632 = add nuw nsw i32 %155, 1
  %3633 = zext i32 %3632 to i64
  %3634 = getelementptr inbounds i64, i64* %3631, i64 %3633
  store i64 %3630, i64* %3634, align 8
  %3635 = load i64, i64* %116, align 8
  %3636 = load i64*, i64** %115, align 8
  %3637 = add nuw nsw i32 %155, 2
  %3638 = zext i32 %3637 to i64
  %3639 = getelementptr inbounds i64, i64* %3636, i64 %3638
  store i64 %3635, i64* %3639, align 8
  %3640 = load i64, i64* %113, align 8
  %3641 = load i64*, i64** %115, align 8
  %3642 = add nuw nsw i32 %155, 3
  %3643 = zext i32 %3642 to i64
  %3644 = getelementptr inbounds i64, i64* %3641, i64 %3643
  store i64 %3640, i64* %3644, align 8
  %3645 = load i64, i64* %118, align 8
  store i64 %3645, i64* %116, align 8
  %3646 = load i64, i64* %3629, align 8
  store i64 %3646, i64* %113, align 8
  %3647 = load i64*, i64** %115, align 8
  %3648 = add nuw nsw i32 %155, 4
  %3649 = zext i32 %3648 to i64
  %3650 = getelementptr inbounds i64, i64* %3647, i64 %3649
  store i64 -1, i64* %3650, align 8
  br label %5230

3651:                                             ; preds = %147
  %3652 = add nsw i64 %150, 2
  store i64 %3652, i64* %149, align 8
  %3653 = getelementptr inbounds i64, i64* %16, i64 %156
  %3654 = load i64, i64* %3653, align 8
  %3655 = add nsw i64 %150, 3
  store i64 %3655, i64* %149, align 8
  %3656 = getelementptr inbounds i64, i64* %16, i64 %3652
  %3657 = load i64, i64* %3656, align 8
  %3658 = load i64*, i64** %115, align 8
  %3659 = add nuw nsw i32 %155, 4
  %3660 = zext i32 %3659 to i64
  %3661 = getelementptr inbounds i64, i64* %3658, i64 %3660
  %3662 = load i64, i64* %3661, align 8
  %3663 = icmp slt i64 %3662, 0
  br i1 %3663, label %3664, label %3686

3664:                                             ; preds = %3651
  %3665 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %3666 = load i64, i64* %3665, align 8
  %3667 = shl i64 %3654, 32
  %3668 = ashr exact i64 %3667, 32
  %3669 = sub nsw i64 %3666, %3668
  store i64 %3669, i64* %3661, align 8
  %3670 = icmp sgt i64 %3669, 0
  br i1 %3670, label %3671, label %3704

3671:                                             ; preds = %3664
  %3672 = load i64, i64* %117, align 8
  %3673 = icmp slt i64 %3669, %3672
  br i1 %3673, label %3674, label %3706

3674:                                             ; preds = %3671
  %3675 = getelementptr inbounds i16, i16* %39, i64 %3669
  %3676 = load i16, i16* %3675, align 2
  %3677 = and i16 %3676, -1024
  %3678 = icmp eq i16 %3677, -9216
  br i1 %3678, label %3679, label %3706

3679:                                             ; preds = %3674
  %3680 = add nsw i64 %3669, -1
  %3681 = getelementptr inbounds i16, i16* %39, i64 %3680
  %3682 = load i16, i16* %3681, align 2
  %3683 = and i16 %3682, -1024
  %3684 = icmp eq i16 %3683, -10240
  br i1 %3684, label %3685, label %3706

3685:                                             ; preds = %3679
  store i64 %3680, i64* %3661, align 8
  br label %3706

3686:                                             ; preds = %3651
  %3687 = icmp eq i64 %3662, 0
  br i1 %3687, label %3688, label %3689

3688:                                             ; preds = %3686
  store i64 -1, i64* %3661, align 8
  br label %3714

3689:                                             ; preds = %3686
  %3690 = add nsw i64 %3662, -1
  store i64 %3690, i64* %3661, align 8
  %3691 = getelementptr inbounds i16, i16* %39, i64 %3690
  %3692 = load i16, i16* %3691, align 2
  %3693 = and i16 %3692, -1024
  %3694 = icmp eq i16 %3693, -9216
  %3695 = icmp sgt i64 %3690, 0
  %3696 = and i1 %3695, %3694
  br i1 %3696, label %3697, label %3706

3697:                                             ; preds = %3689
  %3698 = add nsw i64 %3662, -2
  %3699 = getelementptr inbounds i16, i16* %39, i64 %3698
  %3700 = load i16, i16* %3699, align 2
  %3701 = and i16 %3700, -1024
  %3702 = icmp eq i16 %3701, -10240
  br i1 %3702, label %3703, label %3706

3703:                                             ; preds = %3697
  store i64 %3698, i64* %3661, align 8
  br label %3706

3704:                                             ; preds = %3664
  %3705 = icmp slt i64 %3669, 0
  br i1 %3705, label %3714, label %3706

3706:                                             ; preds = %3697, %3689, %3671, %3679, %3674, %3685, %3703, %3704
  %3707 = phi i64 [ 0, %3704 ], [ %3680, %3685 ], [ %3698, %3703 ], [ %3690, %3697 ], [ %3690, %3689 ], [ %3669, %3671 ], [ %3669, %3679 ], [ %3669, %3674 ]
  %3708 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %3709 = load i64, i64* %3708, align 8
  %3710 = shl i64 %3657, 32
  %3711 = ashr exact i64 %3710, 32
  %3712 = sub nsw i64 %3709, %3711
  %3713 = icmp slt i64 %3707, %3712
  br i1 %3713, label %3714, label %3739

3714:                                             ; preds = %3688, %3706, %3704
  %3715 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3716 = load i32, i32* %42, align 8
  %3717 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3715, i64 0, i32 1
  %3718 = load i32, i32* %3717, align 8
  %3719 = sub nsw i32 %3718, %3716
  %3720 = icmp sgt i32 %3719, 0
  %3721 = select i1 %3720, i32 %3719, i32 0
  store i32 %3721, i32* %3717, align 8
  %3722 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3715, i64 0, i32 4
  %3723 = load i64*, i64** %3722, align 8
  %3724 = zext i32 %3721 to i64
  %3725 = getelementptr inbounds i64, i64* %3723, i64 %3724
  %3726 = sext i32 %3716 to i64
  %3727 = sub nsw i64 0, %3726
  %3728 = getelementptr inbounds i64, i64* %3725, i64 %3727
  %3729 = bitcast i64* %3728 to %"struct.icu_69::REStackFrame"*
  %3730 = load i64*, i64** %115, align 8
  %3731 = add nuw nsw i32 %155, 2
  %3732 = zext i32 %3731 to i64
  %3733 = getelementptr inbounds i64, i64* %3730, i64 %3732
  %3734 = load i64, i64* %3733, align 8
  store i64 %3734, i64* %116, align 8
  %3735 = add nuw nsw i32 %155, 3
  %3736 = zext i32 %3735 to i64
  %3737 = getelementptr inbounds i64, i64* %3730, i64 %3736
  %3738 = load i64, i64* %3737, align 8
  store i64 %3738, i64* %113, align 8
  br label %5230

3739:                                             ; preds = %3706
  %3740 = load i64, i64* %149, align 8
  %3741 = add nsw i64 %3740, -3
  %3742 = load i32, i32* %3, align 4
  %3743 = icmp slt i32 %3742, 1
  br i1 %3743, label %3744, label %3952

3744:                                             ; preds = %3739
  %3745 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3746 = load i32, i32* %42, align 8
  %3747 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3745, i64 0, i32 1
  %3748 = load i32, i32* %3747, align 8
  %3749 = add nsw i32 %3748, %3746
  %3750 = icmp sgt i32 %3749, -1
  br i1 %3750, label %3751, label %3755

3751:                                             ; preds = %3744
  %3752 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3745, i64 0, i32 2
  %3753 = load i32, i32* %3752, align 4
  %3754 = icmp slt i32 %3753, %3749
  br i1 %3754, label %3755, label %3761

3755:                                             ; preds = %3751, %3744
  %3756 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %3745, i32 %3749, i32* dereferenceable(4) %3) #12
  %3757 = icmp eq i8 %3756, 0
  br i1 %3757, label %3768, label %3758

3758:                                             ; preds = %3755
  %3759 = load i32, i32* %3747, align 8
  %3760 = add nsw i32 %3759, %3746
  br label %3761

3761:                                             ; preds = %3758, %3751
  %3762 = phi i32 [ %3760, %3758 ], [ %3749, %3751 ]
  %3763 = phi i32 [ %3759, %3758 ], [ %3748, %3751 ]
  %3764 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3745, i64 0, i32 4
  %3765 = load i64*, i64** %3764, align 8
  %3766 = sext i32 %3763 to i64
  %3767 = getelementptr inbounds i64, i64* %3765, i64 %3766
  store i32 %3762, i32* %3747, align 8
  br label %3768

3768:                                             ; preds = %3761, %3755
  %3769 = phi i64* [ %3767, %3761 ], [ null, %3755 ]
  %3770 = load i32, i32* %3, align 4
  %3771 = icmp slt i32 %3770, 1
  br i1 %3771, label %3773, label %3772

3772:                                             ; preds = %3768
  store i32 66321, i32* %3, align 4
  br label %3952

3773:                                             ; preds = %3768
  %3774 = load i32, i32* %42, align 8
  %3775 = sext i32 %3774 to i64
  %3776 = sub nsw i64 0, %3775
  %3777 = getelementptr inbounds i64, i64* %3769, i64 %3776
  %3778 = shl nsw i64 %3775, 3
  %3779 = add nsw i64 %3778, -8
  %3780 = lshr exact i64 %3779, 3
  %3781 = add nuw nsw i64 %3780, 1
  %3782 = icmp ult i64 %3781, 4
  br i1 %3782, label %3876, label %3783

3783:                                             ; preds = %3773
  %3784 = getelementptr i64, i64* %3769, i64 1
  %3785 = shl nsw i64 %3775, 3
  %3786 = add nsw i64 %3785, -8
  %3787 = lshr exact i64 %3786, 3
  %3788 = getelementptr i64, i64* %3784, i64 %3787
  %3789 = getelementptr i64, i64* %3769, i64 1
  %3790 = sub nsw i64 %3787, %3775
  %3791 = getelementptr i64, i64* %3789, i64 %3790
  %3792 = icmp ult i64* %3769, %3791
  %3793 = icmp ult i64* %3777, %3788
  %3794 = and i1 %3792, %3793
  br i1 %3794, label %3876, label %3795

3795:                                             ; preds = %3783
  %3796 = and i64 %3781, 4611686018427387900
  %3797 = getelementptr i64, i64* %3777, i64 %3796
  %3798 = getelementptr i64, i64* %3769, i64 %3796
  %3799 = add nsw i64 %3796, -4
  %3800 = lshr exact i64 %3799, 2
  %3801 = add nuw nsw i64 %3800, 1
  %3802 = and i64 %3801, 3
  %3803 = icmp ult i64 %3799, 12
  br i1 %3803, label %3855, label %3804

3804:                                             ; preds = %3795
  %3805 = sub nsw i64 %3801, %3802
  br label %3806

3806:                                             ; preds = %3806, %3804
  %3807 = phi i64 [ 0, %3804 ], [ %3852, %3806 ]
  %3808 = phi i64 [ %3805, %3804 ], [ %3853, %3806 ]
  %3809 = getelementptr i64, i64* %3777, i64 %3807
  %3810 = getelementptr i64, i64* %3769, i64 %3807
  %3811 = bitcast i64* %3809 to <2 x i64>*
  %3812 = load <2 x i64>, <2 x i64>* %3811, align 8, !alias.scope !175
  %3813 = getelementptr i64, i64* %3809, i64 2
  %3814 = bitcast i64* %3813 to <2 x i64>*
  %3815 = load <2 x i64>, <2 x i64>* %3814, align 8, !alias.scope !175
  %3816 = bitcast i64* %3810 to <2 x i64>*
  store <2 x i64> %3812, <2 x i64>* %3816, align 8, !alias.scope !178, !noalias !175
  %3817 = getelementptr i64, i64* %3810, i64 2
  %3818 = bitcast i64* %3817 to <2 x i64>*
  store <2 x i64> %3815, <2 x i64>* %3818, align 8, !alias.scope !178, !noalias !175
  %3819 = or i64 %3807, 4
  %3820 = getelementptr i64, i64* %3777, i64 %3819
  %3821 = getelementptr i64, i64* %3769, i64 %3819
  %3822 = bitcast i64* %3820 to <2 x i64>*
  %3823 = load <2 x i64>, <2 x i64>* %3822, align 8, !alias.scope !175
  %3824 = getelementptr i64, i64* %3820, i64 2
  %3825 = bitcast i64* %3824 to <2 x i64>*
  %3826 = load <2 x i64>, <2 x i64>* %3825, align 8, !alias.scope !175
  %3827 = bitcast i64* %3821 to <2 x i64>*
  store <2 x i64> %3823, <2 x i64>* %3827, align 8, !alias.scope !178, !noalias !175
  %3828 = getelementptr i64, i64* %3821, i64 2
  %3829 = bitcast i64* %3828 to <2 x i64>*
  store <2 x i64> %3826, <2 x i64>* %3829, align 8, !alias.scope !178, !noalias !175
  %3830 = or i64 %3807, 8
  %3831 = getelementptr i64, i64* %3777, i64 %3830
  %3832 = getelementptr i64, i64* %3769, i64 %3830
  %3833 = bitcast i64* %3831 to <2 x i64>*
  %3834 = load <2 x i64>, <2 x i64>* %3833, align 8, !alias.scope !175
  %3835 = getelementptr i64, i64* %3831, i64 2
  %3836 = bitcast i64* %3835 to <2 x i64>*
  %3837 = load <2 x i64>, <2 x i64>* %3836, align 8, !alias.scope !175
  %3838 = bitcast i64* %3832 to <2 x i64>*
  store <2 x i64> %3834, <2 x i64>* %3838, align 8, !alias.scope !178, !noalias !175
  %3839 = getelementptr i64, i64* %3832, i64 2
  %3840 = bitcast i64* %3839 to <2 x i64>*
  store <2 x i64> %3837, <2 x i64>* %3840, align 8, !alias.scope !178, !noalias !175
  %3841 = or i64 %3807, 12
  %3842 = getelementptr i64, i64* %3777, i64 %3841
  %3843 = getelementptr i64, i64* %3769, i64 %3841
  %3844 = bitcast i64* %3842 to <2 x i64>*
  %3845 = load <2 x i64>, <2 x i64>* %3844, align 8, !alias.scope !175
  %3846 = getelementptr i64, i64* %3842, i64 2
  %3847 = bitcast i64* %3846 to <2 x i64>*
  %3848 = load <2 x i64>, <2 x i64>* %3847, align 8, !alias.scope !175
  %3849 = bitcast i64* %3843 to <2 x i64>*
  store <2 x i64> %3845, <2 x i64>* %3849, align 8, !alias.scope !178, !noalias !175
  %3850 = getelementptr i64, i64* %3843, i64 2
  %3851 = bitcast i64* %3850 to <2 x i64>*
  store <2 x i64> %3848, <2 x i64>* %3851, align 8, !alias.scope !178, !noalias !175
  %3852 = add i64 %3807, 16
  %3853 = add i64 %3808, -4
  %3854 = icmp eq i64 %3853, 0
  br i1 %3854, label %3855, label %3806, !llvm.loop !180

3855:                                             ; preds = %3806, %3795
  %3856 = phi i64 [ 0, %3795 ], [ %3852, %3806 ]
  %3857 = icmp eq i64 %3802, 0
  br i1 %3857, label %3874, label %3858

3858:                                             ; preds = %3855, %3858
  %3859 = phi i64 [ %3871, %3858 ], [ %3856, %3855 ]
  %3860 = phi i64 [ %3872, %3858 ], [ %3802, %3855 ]
  %3861 = getelementptr i64, i64* %3777, i64 %3859
  %3862 = getelementptr i64, i64* %3769, i64 %3859
  %3863 = bitcast i64* %3861 to <2 x i64>*
  %3864 = load <2 x i64>, <2 x i64>* %3863, align 8, !alias.scope !175
  %3865 = getelementptr i64, i64* %3861, i64 2
  %3866 = bitcast i64* %3865 to <2 x i64>*
  %3867 = load <2 x i64>, <2 x i64>* %3866, align 8, !alias.scope !175
  %3868 = bitcast i64* %3862 to <2 x i64>*
  store <2 x i64> %3864, <2 x i64>* %3868, align 8, !alias.scope !178, !noalias !175
  %3869 = getelementptr i64, i64* %3862, i64 2
  %3870 = bitcast i64* %3869 to <2 x i64>*
  store <2 x i64> %3867, <2 x i64>* %3870, align 8, !alias.scope !178, !noalias !175
  %3871 = add i64 %3859, 4
  %3872 = add i64 %3860, -1
  %3873 = icmp eq i64 %3872, 0
  br i1 %3873, label %3874, label %3858, !llvm.loop !181

3874:                                             ; preds = %3858, %3855
  %3875 = icmp eq i64 %3781, %3796
  br i1 %3875, label %3928, label %3876

3876:                                             ; preds = %3874, %3783, %3773
  %3877 = phi i64* [ %3777, %3783 ], [ %3777, %3773 ], [ %3797, %3874 ]
  %3878 = phi i64* [ %3769, %3783 ], [ %3769, %3773 ], [ %3798, %3874 ]
  %3879 = ptrtoint i64* %3877 to i64
  %3880 = getelementptr i64, i64* %3769, i64 -1
  %3881 = ptrtoint i64* %3880 to i64
  %3882 = sub i64 %3881, %3879
  %3883 = lshr i64 %3882, 3
  %3884 = add nuw nsw i64 %3883, 1
  %3885 = and i64 %3884, 7
  %3886 = icmp eq i64 %3885, 0
  br i1 %3886, label %3896, label %3887

3887:                                             ; preds = %3876, %3887
  %3888 = phi i64* [ %3891, %3887 ], [ %3877, %3876 ]
  %3889 = phi i64* [ %3893, %3887 ], [ %3878, %3876 ]
  %3890 = phi i64 [ %3894, %3887 ], [ %3885, %3876 ]
  %3891 = getelementptr inbounds i64, i64* %3888, i64 1
  %3892 = load i64, i64* %3888, align 8
  %3893 = getelementptr inbounds i64, i64* %3889, i64 1
  store i64 %3892, i64* %3889, align 8
  %3894 = add i64 %3890, -1
  %3895 = icmp eq i64 %3894, 0
  br i1 %3895, label %3896, label %3887, !llvm.loop !182

3896:                                             ; preds = %3887, %3876
  %3897 = phi i64* [ %3877, %3876 ], [ %3891, %3887 ]
  %3898 = phi i64* [ %3878, %3876 ], [ %3893, %3887 ]
  %3899 = icmp ult i64 %3882, 56
  br i1 %3899, label %3928, label %3900

3900:                                             ; preds = %3896, %3900
  %3901 = phi i64* [ %3924, %3900 ], [ %3897, %3896 ]
  %3902 = phi i64* [ %3926, %3900 ], [ %3898, %3896 ]
  %3903 = getelementptr inbounds i64, i64* %3901, i64 1
  %3904 = load i64, i64* %3901, align 8
  %3905 = getelementptr inbounds i64, i64* %3902, i64 1
  store i64 %3904, i64* %3902, align 8
  %3906 = getelementptr inbounds i64, i64* %3901, i64 2
  %3907 = load i64, i64* %3903, align 8
  %3908 = getelementptr inbounds i64, i64* %3902, i64 2
  store i64 %3907, i64* %3905, align 8
  %3909 = getelementptr inbounds i64, i64* %3901, i64 3
  %3910 = load i64, i64* %3906, align 8
  %3911 = getelementptr inbounds i64, i64* %3902, i64 3
  store i64 %3910, i64* %3908, align 8
  %3912 = getelementptr inbounds i64, i64* %3901, i64 4
  %3913 = load i64, i64* %3909, align 8
  %3914 = getelementptr inbounds i64, i64* %3902, i64 4
  store i64 %3913, i64* %3911, align 8
  %3915 = getelementptr inbounds i64, i64* %3901, i64 5
  %3916 = load i64, i64* %3912, align 8
  %3917 = getelementptr inbounds i64, i64* %3902, i64 5
  store i64 %3916, i64* %3914, align 8
  %3918 = getelementptr inbounds i64, i64* %3901, i64 6
  %3919 = load i64, i64* %3915, align 8
  %3920 = getelementptr inbounds i64, i64* %3902, i64 6
  store i64 %3919, i64* %3917, align 8
  %3921 = getelementptr inbounds i64, i64* %3901, i64 7
  %3922 = load i64, i64* %3918, align 8
  %3923 = getelementptr inbounds i64, i64* %3902, i64 7
  store i64 %3922, i64* %3920, align 8
  %3924 = getelementptr inbounds i64, i64* %3901, i64 8
  %3925 = load i64, i64* %3921, align 8
  %3926 = getelementptr inbounds i64, i64* %3902, i64 8
  store i64 %3925, i64* %3923, align 8
  %3927 = icmp eq i64* %3924, %3769
  br i1 %3927, label %3928, label %3900, !llvm.loop !183

3928:                                             ; preds = %3896, %3900, %3874
  %3929 = load i32, i32* %108, align 8
  %3930 = add nsw i32 %3929, -1
  store i32 %3930, i32* %108, align 8
  %3931 = icmp slt i32 %3929, 2
  br i1 %3931, label %3932, label %3949

3932:                                             ; preds = %3928
  store i32 10000, i32* %108, align 8
  %3933 = load i32, i32* %109, align 4
  %3934 = add nsw i32 %3933, 1
  store i32 %3934, i32* %109, align 4
  %3935 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %3936 = icmp eq i8 (i8*, i32)* %3935, null
  br i1 %3936, label %3942, label %3937

3937:                                             ; preds = %3932
  %3938 = load i8*, i8** %111, align 8
  %3939 = call signext i8 %3935(i8* %3938, i32 %3934) #12
  %3940 = icmp eq i8 %3939, 0
  br i1 %3940, label %3941, label %3942

3941:                                             ; preds = %3937
  store i32 66323, i32* %3, align 4
  br label %3949

3942:                                             ; preds = %3937, %3932
  %3943 = load i32, i32* %112, align 8
  %3944 = icmp sgt i32 %3943, 0
  br i1 %3944, label %3945, label %3949

3945:                                             ; preds = %3942
  %3946 = load i32, i32* %109, align 4
  %3947 = icmp slt i32 %3946, %3943
  br i1 %3947, label %3949, label %3948

3948:                                             ; preds = %3945
  store i32 66322, i32* %3, align 4
  br label %3949

3949:                                             ; preds = %3948, %3945, %3942, %3941, %3928
  %3950 = getelementptr inbounds i64, i64* %3777, i64 1
  store i64 %3741, i64* %3950, align 8
  %3951 = bitcast i64* %3769 to %"struct.icu_69::REStackFrame"*
  br label %3952

3952:                                             ; preds = %3739, %3772, %3949
  %3953 = phi %"struct.icu_69::REStackFrame"* [ %148, %3739 ], [ %148, %3772 ], [ %3951, %3949 ]
  %3954 = load i64, i64* %3661, align 8
  %3955 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %3953, i64 0, i32 0
  store i64 %3954, i64* %3955, align 8
  br label %5230

3956:                                             ; preds = %147
  %3957 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %3958 = load i64, i64* %3957, align 8
  %3959 = load i64, i64* %113, align 8
  %3960 = icmp eq i64 %3958, %3959
  br i1 %3960, label %3977, label %3961

3961:                                             ; preds = %3956
  %3962 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %3963 = load i32, i32* %42, align 8
  %3964 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3962, i64 0, i32 1
  %3965 = load i32, i32* %3964, align 8
  %3966 = sub nsw i32 %3965, %3963
  %3967 = icmp sgt i32 %3966, 0
  %3968 = select i1 %3967, i32 %3966, i32 0
  store i32 %3968, i32* %3964, align 8
  %3969 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %3962, i64 0, i32 4
  %3970 = load i64*, i64** %3969, align 8
  %3971 = zext i32 %3968 to i64
  %3972 = getelementptr inbounds i64, i64* %3970, i64 %3971
  %3973 = sext i32 %3963 to i64
  %3974 = sub nsw i64 0, %3973
  %3975 = getelementptr inbounds i64, i64* %3972, i64 %3974
  %3976 = bitcast i64* %3975 to %"struct.icu_69::REStackFrame"*
  br label %5230

3977:                                             ; preds = %3956
  %3978 = load i64*, i64** %115, align 8
  %3979 = add nuw nsw i32 %155, 2
  %3980 = zext i32 %3979 to i64
  %3981 = getelementptr inbounds i64, i64* %3978, i64 %3980
  %3982 = load i64, i64* %3981, align 8
  store i64 %3982, i64* %116, align 8
  %3983 = add nuw nsw i32 %155, 3
  %3984 = zext i32 %3983 to i64
  %3985 = getelementptr inbounds i64, i64* %3978, i64 %3984
  %3986 = load i64, i64* %3985, align 8
  store i64 %3986, i64* %113, align 8
  br label %5230

3987:                                             ; preds = %147
  %3988 = add nsw i64 %150, 2
  store i64 %3988, i64* %149, align 8
  %3989 = getelementptr inbounds i64, i64* %16, i64 %156
  %3990 = load i64, i64* %3989, align 8
  %3991 = add nsw i64 %150, 3
  store i64 %3991, i64* %149, align 8
  %3992 = getelementptr inbounds i64, i64* %16, i64 %3988
  %3993 = load i64, i64* %3992, align 8
  %3994 = add nsw i64 %150, 4
  store i64 %3994, i64* %149, align 8
  %3995 = getelementptr inbounds i64, i64* %16, i64 %3991
  %3996 = load i64, i64* %3995, align 8
  %3997 = and i64 %3996, 16777215
  %3998 = load i64*, i64** %115, align 8
  %3999 = add nuw nsw i32 %155, 4
  %4000 = zext i32 %3999 to i64
  %4001 = getelementptr inbounds i64, i64* %3998, i64 %4000
  %4002 = load i64, i64* %4001, align 8
  %4003 = icmp slt i64 %4002, 0
  br i1 %4003, label %4004, label %4026

4004:                                             ; preds = %3987
  %4005 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %4006 = load i64, i64* %4005, align 8
  %4007 = shl i64 %3990, 32
  %4008 = ashr exact i64 %4007, 32
  %4009 = sub nsw i64 %4006, %4008
  store i64 %4009, i64* %4001, align 8
  %4010 = icmp sgt i64 %4009, 0
  br i1 %4010, label %4011, label %4044

4011:                                             ; preds = %4004
  %4012 = load i64, i64* %117, align 8
  %4013 = icmp slt i64 %4009, %4012
  br i1 %4013, label %4014, label %4046

4014:                                             ; preds = %4011
  %4015 = getelementptr inbounds i16, i16* %39, i64 %4009
  %4016 = load i16, i16* %4015, align 2
  %4017 = and i16 %4016, -1024
  %4018 = icmp eq i16 %4017, -9216
  br i1 %4018, label %4019, label %4046

4019:                                             ; preds = %4014
  %4020 = add nsw i64 %4009, -1
  %4021 = getelementptr inbounds i16, i16* %39, i64 %4020
  %4022 = load i16, i16* %4021, align 2
  %4023 = and i16 %4022, -1024
  %4024 = icmp eq i16 %4023, -10240
  br i1 %4024, label %4025, label %4046

4025:                                             ; preds = %4019
  store i64 %4020, i64* %4001, align 8
  br label %4046

4026:                                             ; preds = %3987
  %4027 = icmp eq i64 %4002, 0
  br i1 %4027, label %4028, label %4029

4028:                                             ; preds = %4026
  store i64 -1, i64* %4001, align 8
  br label %4054

4029:                                             ; preds = %4026
  %4030 = add nsw i64 %4002, -1
  store i64 %4030, i64* %4001, align 8
  %4031 = getelementptr inbounds i16, i16* %39, i64 %4030
  %4032 = load i16, i16* %4031, align 2
  %4033 = and i16 %4032, -1024
  %4034 = icmp eq i16 %4033, -9216
  %4035 = icmp sgt i64 %4030, 0
  %4036 = and i1 %4035, %4034
  br i1 %4036, label %4037, label %4046

4037:                                             ; preds = %4029
  %4038 = add nsw i64 %4002, -2
  %4039 = getelementptr inbounds i16, i16* %39, i64 %4038
  %4040 = load i16, i16* %4039, align 2
  %4041 = and i16 %4040, -1024
  %4042 = icmp eq i16 %4041, -10240
  br i1 %4042, label %4043, label %4046

4043:                                             ; preds = %4037
  store i64 %4038, i64* %4001, align 8
  br label %4046

4044:                                             ; preds = %4004
  %4045 = icmp slt i64 %4009, 0
  br i1 %4045, label %4054, label %4046

4046:                                             ; preds = %4037, %4029, %4011, %4019, %4014, %4025, %4043, %4044
  %4047 = phi i64 [ 0, %4044 ], [ %4020, %4025 ], [ %4038, %4043 ], [ %4030, %4037 ], [ %4030, %4029 ], [ %4009, %4011 ], [ %4009, %4019 ], [ %4009, %4014 ]
  %4048 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %4049 = load i64, i64* %4048, align 8
  %4050 = shl i64 %3993, 32
  %4051 = ashr exact i64 %4050, 32
  %4052 = sub nsw i64 %4049, %4051
  %4053 = icmp slt i64 %4047, %4052
  br i1 %4053, label %4054, label %4064

4054:                                             ; preds = %4028, %4046, %4044
  %4055 = load i64*, i64** %115, align 8
  %4056 = add nuw nsw i32 %155, 2
  %4057 = zext i32 %4056 to i64
  %4058 = getelementptr inbounds i64, i64* %4055, i64 %4057
  %4059 = load i64, i64* %4058, align 8
  store i64 %4059, i64* %116, align 8
  %4060 = add nuw nsw i32 %155, 3
  %4061 = zext i32 %4060 to i64
  %4062 = getelementptr inbounds i64, i64* %4055, i64 %4061
  %4063 = load i64, i64* %4062, align 8
  store i64 %4063, i64* %113, align 8
  store i64 %3997, i64* %149, align 8
  br label %5230

4064:                                             ; preds = %4046
  %4065 = load i64, i64* %149, align 8
  %4066 = add nsw i64 %4065, -4
  %4067 = load i32, i32* %3, align 4
  %4068 = icmp slt i32 %4067, 1
  br i1 %4068, label %4069, label %4277

4069:                                             ; preds = %4064
  %4070 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %4071 = load i32, i32* %42, align 8
  %4072 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4070, i64 0, i32 1
  %4073 = load i32, i32* %4072, align 8
  %4074 = add nsw i32 %4073, %4071
  %4075 = icmp sgt i32 %4074, -1
  br i1 %4075, label %4076, label %4080

4076:                                             ; preds = %4069
  %4077 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4070, i64 0, i32 2
  %4078 = load i32, i32* %4077, align 4
  %4079 = icmp slt i32 %4078, %4074
  br i1 %4079, label %4080, label %4086

4080:                                             ; preds = %4076, %4069
  %4081 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %4070, i32 %4074, i32* dereferenceable(4) %3) #12
  %4082 = icmp eq i8 %4081, 0
  br i1 %4082, label %4093, label %4083

4083:                                             ; preds = %4080
  %4084 = load i32, i32* %4072, align 8
  %4085 = add nsw i32 %4084, %4071
  br label %4086

4086:                                             ; preds = %4083, %4076
  %4087 = phi i32 [ %4085, %4083 ], [ %4074, %4076 ]
  %4088 = phi i32 [ %4084, %4083 ], [ %4073, %4076 ]
  %4089 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4070, i64 0, i32 4
  %4090 = load i64*, i64** %4089, align 8
  %4091 = sext i32 %4088 to i64
  %4092 = getelementptr inbounds i64, i64* %4090, i64 %4091
  store i32 %4087, i32* %4072, align 8
  br label %4093

4093:                                             ; preds = %4086, %4080
  %4094 = phi i64* [ %4092, %4086 ], [ null, %4080 ]
  %4095 = load i32, i32* %3, align 4
  %4096 = icmp slt i32 %4095, 1
  br i1 %4096, label %4098, label %4097

4097:                                             ; preds = %4093
  store i32 66321, i32* %3, align 4
  br label %4277

4098:                                             ; preds = %4093
  %4099 = load i32, i32* %42, align 8
  %4100 = sext i32 %4099 to i64
  %4101 = sub nsw i64 0, %4100
  %4102 = getelementptr inbounds i64, i64* %4094, i64 %4101
  %4103 = shl nsw i64 %4100, 3
  %4104 = add nsw i64 %4103, -8
  %4105 = lshr exact i64 %4104, 3
  %4106 = add nuw nsw i64 %4105, 1
  %4107 = icmp ult i64 %4106, 4
  br i1 %4107, label %4201, label %4108

4108:                                             ; preds = %4098
  %4109 = getelementptr i64, i64* %4094, i64 1
  %4110 = shl nsw i64 %4100, 3
  %4111 = add nsw i64 %4110, -8
  %4112 = lshr exact i64 %4111, 3
  %4113 = getelementptr i64, i64* %4109, i64 %4112
  %4114 = getelementptr i64, i64* %4094, i64 1
  %4115 = sub nsw i64 %4112, %4100
  %4116 = getelementptr i64, i64* %4114, i64 %4115
  %4117 = icmp ult i64* %4094, %4116
  %4118 = icmp ult i64* %4102, %4113
  %4119 = and i1 %4117, %4118
  br i1 %4119, label %4201, label %4120

4120:                                             ; preds = %4108
  %4121 = and i64 %4106, 4611686018427387900
  %4122 = getelementptr i64, i64* %4102, i64 %4121
  %4123 = getelementptr i64, i64* %4094, i64 %4121
  %4124 = add nsw i64 %4121, -4
  %4125 = lshr exact i64 %4124, 2
  %4126 = add nuw nsw i64 %4125, 1
  %4127 = and i64 %4126, 3
  %4128 = icmp ult i64 %4124, 12
  br i1 %4128, label %4180, label %4129

4129:                                             ; preds = %4120
  %4130 = sub nsw i64 %4126, %4127
  br label %4131

4131:                                             ; preds = %4131, %4129
  %4132 = phi i64 [ 0, %4129 ], [ %4177, %4131 ]
  %4133 = phi i64 [ %4130, %4129 ], [ %4178, %4131 ]
  %4134 = getelementptr i64, i64* %4102, i64 %4132
  %4135 = getelementptr i64, i64* %4094, i64 %4132
  %4136 = bitcast i64* %4134 to <2 x i64>*
  %4137 = load <2 x i64>, <2 x i64>* %4136, align 8, !alias.scope !184
  %4138 = getelementptr i64, i64* %4134, i64 2
  %4139 = bitcast i64* %4138 to <2 x i64>*
  %4140 = load <2 x i64>, <2 x i64>* %4139, align 8, !alias.scope !184
  %4141 = bitcast i64* %4135 to <2 x i64>*
  store <2 x i64> %4137, <2 x i64>* %4141, align 8, !alias.scope !187, !noalias !184
  %4142 = getelementptr i64, i64* %4135, i64 2
  %4143 = bitcast i64* %4142 to <2 x i64>*
  store <2 x i64> %4140, <2 x i64>* %4143, align 8, !alias.scope !187, !noalias !184
  %4144 = or i64 %4132, 4
  %4145 = getelementptr i64, i64* %4102, i64 %4144
  %4146 = getelementptr i64, i64* %4094, i64 %4144
  %4147 = bitcast i64* %4145 to <2 x i64>*
  %4148 = load <2 x i64>, <2 x i64>* %4147, align 8, !alias.scope !184
  %4149 = getelementptr i64, i64* %4145, i64 2
  %4150 = bitcast i64* %4149 to <2 x i64>*
  %4151 = load <2 x i64>, <2 x i64>* %4150, align 8, !alias.scope !184
  %4152 = bitcast i64* %4146 to <2 x i64>*
  store <2 x i64> %4148, <2 x i64>* %4152, align 8, !alias.scope !187, !noalias !184
  %4153 = getelementptr i64, i64* %4146, i64 2
  %4154 = bitcast i64* %4153 to <2 x i64>*
  store <2 x i64> %4151, <2 x i64>* %4154, align 8, !alias.scope !187, !noalias !184
  %4155 = or i64 %4132, 8
  %4156 = getelementptr i64, i64* %4102, i64 %4155
  %4157 = getelementptr i64, i64* %4094, i64 %4155
  %4158 = bitcast i64* %4156 to <2 x i64>*
  %4159 = load <2 x i64>, <2 x i64>* %4158, align 8, !alias.scope !184
  %4160 = getelementptr i64, i64* %4156, i64 2
  %4161 = bitcast i64* %4160 to <2 x i64>*
  %4162 = load <2 x i64>, <2 x i64>* %4161, align 8, !alias.scope !184
  %4163 = bitcast i64* %4157 to <2 x i64>*
  store <2 x i64> %4159, <2 x i64>* %4163, align 8, !alias.scope !187, !noalias !184
  %4164 = getelementptr i64, i64* %4157, i64 2
  %4165 = bitcast i64* %4164 to <2 x i64>*
  store <2 x i64> %4162, <2 x i64>* %4165, align 8, !alias.scope !187, !noalias !184
  %4166 = or i64 %4132, 12
  %4167 = getelementptr i64, i64* %4102, i64 %4166
  %4168 = getelementptr i64, i64* %4094, i64 %4166
  %4169 = bitcast i64* %4167 to <2 x i64>*
  %4170 = load <2 x i64>, <2 x i64>* %4169, align 8, !alias.scope !184
  %4171 = getelementptr i64, i64* %4167, i64 2
  %4172 = bitcast i64* %4171 to <2 x i64>*
  %4173 = load <2 x i64>, <2 x i64>* %4172, align 8, !alias.scope !184
  %4174 = bitcast i64* %4168 to <2 x i64>*
  store <2 x i64> %4170, <2 x i64>* %4174, align 8, !alias.scope !187, !noalias !184
  %4175 = getelementptr i64, i64* %4168, i64 2
  %4176 = bitcast i64* %4175 to <2 x i64>*
  store <2 x i64> %4173, <2 x i64>* %4176, align 8, !alias.scope !187, !noalias !184
  %4177 = add i64 %4132, 16
  %4178 = add i64 %4133, -4
  %4179 = icmp eq i64 %4178, 0
  br i1 %4179, label %4180, label %4131, !llvm.loop !189

4180:                                             ; preds = %4131, %4120
  %4181 = phi i64 [ 0, %4120 ], [ %4177, %4131 ]
  %4182 = icmp eq i64 %4127, 0
  br i1 %4182, label %4199, label %4183

4183:                                             ; preds = %4180, %4183
  %4184 = phi i64 [ %4196, %4183 ], [ %4181, %4180 ]
  %4185 = phi i64 [ %4197, %4183 ], [ %4127, %4180 ]
  %4186 = getelementptr i64, i64* %4102, i64 %4184
  %4187 = getelementptr i64, i64* %4094, i64 %4184
  %4188 = bitcast i64* %4186 to <2 x i64>*
  %4189 = load <2 x i64>, <2 x i64>* %4188, align 8, !alias.scope !184
  %4190 = getelementptr i64, i64* %4186, i64 2
  %4191 = bitcast i64* %4190 to <2 x i64>*
  %4192 = load <2 x i64>, <2 x i64>* %4191, align 8, !alias.scope !184
  %4193 = bitcast i64* %4187 to <2 x i64>*
  store <2 x i64> %4189, <2 x i64>* %4193, align 8, !alias.scope !187, !noalias !184
  %4194 = getelementptr i64, i64* %4187, i64 2
  %4195 = bitcast i64* %4194 to <2 x i64>*
  store <2 x i64> %4192, <2 x i64>* %4195, align 8, !alias.scope !187, !noalias !184
  %4196 = add i64 %4184, 4
  %4197 = add i64 %4185, -1
  %4198 = icmp eq i64 %4197, 0
  br i1 %4198, label %4199, label %4183, !llvm.loop !190

4199:                                             ; preds = %4183, %4180
  %4200 = icmp eq i64 %4106, %4121
  br i1 %4200, label %4253, label %4201

4201:                                             ; preds = %4199, %4108, %4098
  %4202 = phi i64* [ %4102, %4108 ], [ %4102, %4098 ], [ %4122, %4199 ]
  %4203 = phi i64* [ %4094, %4108 ], [ %4094, %4098 ], [ %4123, %4199 ]
  %4204 = ptrtoint i64* %4202 to i64
  %4205 = getelementptr i64, i64* %4094, i64 -1
  %4206 = ptrtoint i64* %4205 to i64
  %4207 = sub i64 %4206, %4204
  %4208 = lshr i64 %4207, 3
  %4209 = add nuw nsw i64 %4208, 1
  %4210 = and i64 %4209, 7
  %4211 = icmp eq i64 %4210, 0
  br i1 %4211, label %4221, label %4212

4212:                                             ; preds = %4201, %4212
  %4213 = phi i64* [ %4216, %4212 ], [ %4202, %4201 ]
  %4214 = phi i64* [ %4218, %4212 ], [ %4203, %4201 ]
  %4215 = phi i64 [ %4219, %4212 ], [ %4210, %4201 ]
  %4216 = getelementptr inbounds i64, i64* %4213, i64 1
  %4217 = load i64, i64* %4213, align 8
  %4218 = getelementptr inbounds i64, i64* %4214, i64 1
  store i64 %4217, i64* %4214, align 8
  %4219 = add i64 %4215, -1
  %4220 = icmp eq i64 %4219, 0
  br i1 %4220, label %4221, label %4212, !llvm.loop !191

4221:                                             ; preds = %4212, %4201
  %4222 = phi i64* [ %4202, %4201 ], [ %4216, %4212 ]
  %4223 = phi i64* [ %4203, %4201 ], [ %4218, %4212 ]
  %4224 = icmp ult i64 %4207, 56
  br i1 %4224, label %4253, label %4225

4225:                                             ; preds = %4221, %4225
  %4226 = phi i64* [ %4249, %4225 ], [ %4222, %4221 ]
  %4227 = phi i64* [ %4251, %4225 ], [ %4223, %4221 ]
  %4228 = getelementptr inbounds i64, i64* %4226, i64 1
  %4229 = load i64, i64* %4226, align 8
  %4230 = getelementptr inbounds i64, i64* %4227, i64 1
  store i64 %4229, i64* %4227, align 8
  %4231 = getelementptr inbounds i64, i64* %4226, i64 2
  %4232 = load i64, i64* %4228, align 8
  %4233 = getelementptr inbounds i64, i64* %4227, i64 2
  store i64 %4232, i64* %4230, align 8
  %4234 = getelementptr inbounds i64, i64* %4226, i64 3
  %4235 = load i64, i64* %4231, align 8
  %4236 = getelementptr inbounds i64, i64* %4227, i64 3
  store i64 %4235, i64* %4233, align 8
  %4237 = getelementptr inbounds i64, i64* %4226, i64 4
  %4238 = load i64, i64* %4234, align 8
  %4239 = getelementptr inbounds i64, i64* %4227, i64 4
  store i64 %4238, i64* %4236, align 8
  %4240 = getelementptr inbounds i64, i64* %4226, i64 5
  %4241 = load i64, i64* %4237, align 8
  %4242 = getelementptr inbounds i64, i64* %4227, i64 5
  store i64 %4241, i64* %4239, align 8
  %4243 = getelementptr inbounds i64, i64* %4226, i64 6
  %4244 = load i64, i64* %4240, align 8
  %4245 = getelementptr inbounds i64, i64* %4227, i64 6
  store i64 %4244, i64* %4242, align 8
  %4246 = getelementptr inbounds i64, i64* %4226, i64 7
  %4247 = load i64, i64* %4243, align 8
  %4248 = getelementptr inbounds i64, i64* %4227, i64 7
  store i64 %4247, i64* %4245, align 8
  %4249 = getelementptr inbounds i64, i64* %4226, i64 8
  %4250 = load i64, i64* %4246, align 8
  %4251 = getelementptr inbounds i64, i64* %4227, i64 8
  store i64 %4250, i64* %4248, align 8
  %4252 = icmp eq i64* %4249, %4094
  br i1 %4252, label %4253, label %4225, !llvm.loop !192

4253:                                             ; preds = %4221, %4225, %4199
  %4254 = load i32, i32* %108, align 8
  %4255 = add nsw i32 %4254, -1
  store i32 %4255, i32* %108, align 8
  %4256 = icmp slt i32 %4254, 2
  br i1 %4256, label %4257, label %4274

4257:                                             ; preds = %4253
  store i32 10000, i32* %108, align 8
  %4258 = load i32, i32* %109, align 4
  %4259 = add nsw i32 %4258, 1
  store i32 %4259, i32* %109, align 4
  %4260 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %4261 = icmp eq i8 (i8*, i32)* %4260, null
  br i1 %4261, label %4267, label %4262

4262:                                             ; preds = %4257
  %4263 = load i8*, i8** %111, align 8
  %4264 = call signext i8 %4260(i8* %4263, i32 %4259) #12
  %4265 = icmp eq i8 %4264, 0
  br i1 %4265, label %4266, label %4267

4266:                                             ; preds = %4262
  store i32 66323, i32* %3, align 4
  br label %4274

4267:                                             ; preds = %4262, %4257
  %4268 = load i32, i32* %112, align 8
  %4269 = icmp sgt i32 %4268, 0
  br i1 %4269, label %4270, label %4274

4270:                                             ; preds = %4267
  %4271 = load i32, i32* %109, align 4
  %4272 = icmp slt i32 %4271, %4268
  br i1 %4272, label %4274, label %4273

4273:                                             ; preds = %4270
  store i32 66322, i32* %3, align 4
  br label %4274

4274:                                             ; preds = %4273, %4270, %4267, %4266, %4253
  %4275 = getelementptr inbounds i64, i64* %4102, i64 1
  store i64 %4066, i64* %4275, align 8
  %4276 = bitcast i64* %4094 to %"struct.icu_69::REStackFrame"*
  br label %4277

4277:                                             ; preds = %4064, %4097, %4274
  %4278 = phi %"struct.icu_69::REStackFrame"* [ %148, %4064 ], [ %148, %4097 ], [ %4276, %4274 ]
  %4279 = load i64, i64* %4001, align 8
  %4280 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %4278, i64 0, i32 0
  store i64 %4279, i64* %4280, align 8
  br label %5230

4281:                                             ; preds = %147
  %4282 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %4283 = load i64, i64* %4282, align 8
  %4284 = load i64, i64* %113, align 8
  %4285 = icmp eq i64 %4283, %4284
  br i1 %4285, label %4302, label %4286

4286:                                             ; preds = %4281
  %4287 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %4288 = load i32, i32* %42, align 8
  %4289 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4287, i64 0, i32 1
  %4290 = load i32, i32* %4289, align 8
  %4291 = sub nsw i32 %4290, %4288
  %4292 = icmp sgt i32 %4291, 0
  %4293 = select i1 %4292, i32 %4291, i32 0
  store i32 %4293, i32* %4289, align 8
  %4294 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4287, i64 0, i32 4
  %4295 = load i64*, i64** %4294, align 8
  %4296 = zext i32 %4293 to i64
  %4297 = getelementptr inbounds i64, i64* %4295, i64 %4296
  %4298 = sext i32 %4288 to i64
  %4299 = sub nsw i64 0, %4298
  %4300 = getelementptr inbounds i64, i64* %4297, i64 %4299
  %4301 = bitcast i64* %4300 to %"struct.icu_69::REStackFrame"*
  br label %5230

4302:                                             ; preds = %4281
  %4303 = load i64*, i64** %115, align 8
  %4304 = add nuw nsw i32 %155, 2
  %4305 = zext i32 %4304 to i64
  %4306 = getelementptr inbounds i64, i64* %4303, i64 %4305
  %4307 = load i64, i64* %4306, align 8
  store i64 %4307, i64* %116, align 8
  %4308 = add nuw nsw i32 %155, 3
  %4309 = zext i32 %4308 to i64
  %4310 = getelementptr inbounds i64, i64* %4303, i64 %4309
  %4311 = load i64, i64* %4310, align 8
  store i64 %4311, i64* %113, align 8
  %4312 = zext i32 %155 to i64
  %4313 = getelementptr inbounds i64, i64* %4303, i64 %4312
  %4314 = load i64, i64* %4313, align 8
  %4315 = trunc i64 %4314 to i32
  %4316 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  call void @_ZN6icu_699UVector647setSizeEi(%"class.icu_69::UVector64"* %4316, i32 %4315) #12
  %4317 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %4318 = load i32, i32* %42, align 8
  %4319 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4317, i64 0, i32 1
  %4320 = load i32, i32* %4319, align 8
  %4321 = sub nsw i32 %4320, %4318
  %4322 = icmp sgt i32 %4321, 0
  %4323 = select i1 %4322, i32 %4321, i32 0
  store i32 %4323, i32* %4319, align 8
  %4324 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4317, i64 0, i32 4
  %4325 = load i64*, i64** %4324, align 8
  %4326 = zext i32 %4323 to i64
  %4327 = getelementptr inbounds i64, i64* %4325, i64 %4326
  %4328 = sext i32 %4318 to i64
  %4329 = sub nsw i64 0, %4328
  %4330 = getelementptr inbounds i64, i64* %4327, i64 %4329
  %4331 = bitcast i64* %4330 to %"struct.icu_69::REStackFrame"*
  br label %5230

4332:                                             ; preds = %147
  %4333 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %11, align 8
  %4334 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %4333, i64 0, i32 7
  %4335 = load %"struct.icu_69::Regex8BitSet"*, %"struct.icu_69::Regex8BitSet"** %4334, align 8
  %4336 = zext i32 %155 to i64
  %4337 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %35, i32 %155) #12
  %4338 = bitcast i8* %4337 to %"class.icu_69::UnicodeSet"*
  %4339 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %4340 = load i64, i64* %4339, align 8
  %4341 = trunc i64 %4340 to i32
  %4342 = shl i64 %4340, 32
  %4343 = ashr exact i64 %4342, 32
  %4344 = load i64, i64* %113, align 8
  %4345 = icmp sgt i64 %4344, %4343
  br i1 %4345, label %4348, label %4346

4346:                                             ; preds = %4425, %4332
  %4347 = phi i32 [ %4341, %4332 ], [ %4373, %4425 ]
  store i8 1, i8* %114, align 8
  br label %4429

4348:                                             ; preds = %4332, %4425
  %4349 = phi i64 [ %4426, %4425 ], [ %4344, %4332 ]
  %4350 = phi i64 [ %4427, %4425 ], [ %4343, %4332 ]
  %4351 = phi i32 [ %4373, %4425 ], [ %4341, %4332 ]
  %4352 = add nsw i32 %4351, 1
  %4353 = getelementptr inbounds i16, i16* %39, i64 %4350
  %4354 = load i16, i16* %4353, align 2
  %4355 = zext i16 %4354 to i32
  %4356 = and i32 %4355, 64512
  %4357 = icmp eq i32 %4356, 55296
  br i1 %4357, label %4358, label %4372

4358:                                             ; preds = %4348
  %4359 = sext i32 %4352 to i64
  %4360 = icmp eq i64 %4349, %4359
  br i1 %4360, label %4372, label %4361

4361:                                             ; preds = %4358
  %4362 = getelementptr inbounds i16, i16* %39, i64 %4359
  %4363 = load i16, i16* %4362, align 2
  %4364 = zext i16 %4363 to i32
  %4365 = and i32 %4364, 64512
  %4366 = icmp eq i32 %4365, 56320
  br i1 %4366, label %4367, label %4372

4367:                                             ; preds = %4361
  %4368 = add nsw i32 %4351, 2
  %4369 = shl nuw nsw i32 %4355, 10
  %4370 = add nsw i32 %4369, -56613888
  %4371 = add nsw i32 %4370, %4364
  br label %4372

4372:                                             ; preds = %4361, %4367, %4358, %4348
  %4373 = phi i32 [ %4352, %4348 ], [ %4368, %4367 ], [ %4352, %4361 ], [ %4352, %4358 ]
  %4374 = phi i32 [ %4355, %4348 ], [ %4371, %4367 ], [ %4355, %4361 ], [ %4355, %4358 ]
  %4375 = icmp slt i32 %4374, 256
  br i1 %4375, label %4376, label %4403

4376:                                             ; preds = %4372
  %4377 = ashr i32 %4374, 3
  %4378 = sext i32 %4377 to i64
  %4379 = getelementptr inbounds %"struct.icu_69::Regex8BitSet", %"struct.icu_69::Regex8BitSet"* %4335, i64 %4336, i32 0, i64 %4378
  %4380 = load i8, i8* %4379, align 1
  %4381 = sext i8 %4380 to i32
  %4382 = and i32 %4374, 7
  %4383 = shl i32 1, %4382
  %4384 = and i32 %4383, %4381
  %4385 = icmp eq i32 %4384, 0
  br i1 %4385, label %4386, label %4425

4386:                                             ; preds = %4376
  %4387 = add nsw i32 %4373, -1
  %4388 = sext i32 %4387 to i64
  %4389 = getelementptr inbounds i16, i16* %39, i64 %4388
  %4390 = load i16, i16* %4389, align 2
  %4391 = and i16 %4390, -1024
  %4392 = icmp eq i16 %4391, -9216
  %4393 = icmp sgt i32 %4387, 0
  %4394 = and i1 %4393, %4392
  br i1 %4394, label %4395, label %4429

4395:                                             ; preds = %4386
  %4396 = add nsw i32 %4373, -2
  %4397 = sext i32 %4396 to i64
  %4398 = getelementptr inbounds i16, i16* %39, i64 %4397
  %4399 = load i16, i16* %4398, align 2
  %4400 = and i16 %4399, -1024
  %4401 = icmp eq i16 %4400, -10240
  %4402 = select i1 %4401, i32 %4396, i32 %4387
  br label %4429

4403:                                             ; preds = %4372
  %4404 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %4338, i32 %4374) #12
  %4405 = icmp eq i8 %4404, 0
  br i1 %4405, label %4408, label %4406

4406:                                             ; preds = %4403
  %4407 = load i64, i64* %113, align 8
  br label %4425

4408:                                             ; preds = %4403
  %4409 = add nsw i32 %4373, -1
  %4410 = sext i32 %4409 to i64
  %4411 = getelementptr inbounds i16, i16* %39, i64 %4410
  %4412 = load i16, i16* %4411, align 2
  %4413 = and i16 %4412, -1024
  %4414 = icmp eq i16 %4413, -9216
  %4415 = icmp sgt i32 %4409, 0
  %4416 = and i1 %4415, %4414
  br i1 %4416, label %4417, label %4429

4417:                                             ; preds = %4408
  %4418 = add nsw i32 %4373, -2
  %4419 = sext i32 %4418 to i64
  %4420 = getelementptr inbounds i16, i16* %39, i64 %4419
  %4421 = load i16, i16* %4420, align 2
  %4422 = and i16 %4421, -1024
  %4423 = icmp eq i16 %4422, -10240
  %4424 = select i1 %4423, i32 %4418, i32 %4409
  br label %4429

4425:                                             ; preds = %4406, %4376
  %4426 = phi i64 [ %4407, %4406 ], [ %4349, %4376 ]
  %4427 = sext i32 %4373 to i64
  %4428 = icmp sgt i64 %4426, %4427
  br i1 %4428, label %4348, label %4346

4429:                                             ; preds = %4408, %4417, %4386, %4395, %4346
  %4430 = phi i32 [ %4347, %4346 ], [ %4424, %4417 ], [ %4409, %4408 ], [ %4402, %4395 ], [ %4387, %4386 ]
  %4431 = sext i32 %4430 to i64
  %4432 = load i64, i64* %4339, align 8
  %4433 = icmp eq i64 %4432, %4431
  %4434 = load i64, i64* %149, align 8
  br i1 %4433, label %4435, label %4437

4435:                                             ; preds = %4429
  %4436 = add nsw i64 %4434, 1
  store i64 %4436, i64* %149, align 8
  br label %5230

4437:                                             ; preds = %4429
  %4438 = getelementptr inbounds i64, i64* %16, i64 %4434
  %4439 = load i64, i64* %4438, align 8
  %4440 = and i64 %4439, 16777215
  %4441 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %4440
  store i64 %4432, i64* %4441, align 8
  store i64 %4431, i64* %4339, align 8
  %4442 = load i32, i32* %3, align 4
  %4443 = icmp slt i32 %4442, 1
  br i1 %4443, label %4444, label %4652

4444:                                             ; preds = %4437
  %4445 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %4446 = load i32, i32* %42, align 8
  %4447 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4445, i64 0, i32 1
  %4448 = load i32, i32* %4447, align 8
  %4449 = add nsw i32 %4448, %4446
  %4450 = icmp sgt i32 %4449, -1
  br i1 %4450, label %4451, label %4455

4451:                                             ; preds = %4444
  %4452 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4445, i64 0, i32 2
  %4453 = load i32, i32* %4452, align 4
  %4454 = icmp slt i32 %4453, %4449
  br i1 %4454, label %4455, label %4461

4455:                                             ; preds = %4451, %4444
  %4456 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %4445, i32 %4449, i32* dereferenceable(4) %3) #12
  %4457 = icmp eq i8 %4456, 0
  br i1 %4457, label %4468, label %4458

4458:                                             ; preds = %4455
  %4459 = load i32, i32* %4447, align 8
  %4460 = add nsw i32 %4459, %4446
  br label %4461

4461:                                             ; preds = %4458, %4451
  %4462 = phi i32 [ %4460, %4458 ], [ %4449, %4451 ]
  %4463 = phi i32 [ %4459, %4458 ], [ %4448, %4451 ]
  %4464 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4445, i64 0, i32 4
  %4465 = load i64*, i64** %4464, align 8
  %4466 = sext i32 %4463 to i64
  %4467 = getelementptr inbounds i64, i64* %4465, i64 %4466
  store i32 %4462, i32* %4447, align 8
  br label %4468

4468:                                             ; preds = %4461, %4455
  %4469 = phi i64* [ %4467, %4461 ], [ null, %4455 ]
  %4470 = load i32, i32* %3, align 4
  %4471 = icmp slt i32 %4470, 1
  br i1 %4471, label %4473, label %4472

4472:                                             ; preds = %4468
  store i32 66321, i32* %3, align 4
  br label %4652

4473:                                             ; preds = %4468
  %4474 = load i32, i32* %42, align 8
  %4475 = sext i32 %4474 to i64
  %4476 = sub nsw i64 0, %4475
  %4477 = getelementptr inbounds i64, i64* %4469, i64 %4476
  %4478 = shl nsw i64 %4475, 3
  %4479 = add nsw i64 %4478, -8
  %4480 = lshr exact i64 %4479, 3
  %4481 = add nuw nsw i64 %4480, 1
  %4482 = icmp ult i64 %4481, 4
  br i1 %4482, label %4576, label %4483

4483:                                             ; preds = %4473
  %4484 = getelementptr i64, i64* %4469, i64 1
  %4485 = shl nsw i64 %4475, 3
  %4486 = add nsw i64 %4485, -8
  %4487 = lshr exact i64 %4486, 3
  %4488 = getelementptr i64, i64* %4484, i64 %4487
  %4489 = getelementptr i64, i64* %4469, i64 1
  %4490 = sub nsw i64 %4487, %4475
  %4491 = getelementptr i64, i64* %4489, i64 %4490
  %4492 = icmp ult i64* %4469, %4491
  %4493 = icmp ult i64* %4477, %4488
  %4494 = and i1 %4492, %4493
  br i1 %4494, label %4576, label %4495

4495:                                             ; preds = %4483
  %4496 = and i64 %4481, 4611686018427387900
  %4497 = getelementptr i64, i64* %4477, i64 %4496
  %4498 = getelementptr i64, i64* %4469, i64 %4496
  %4499 = add nsw i64 %4496, -4
  %4500 = lshr exact i64 %4499, 2
  %4501 = add nuw nsw i64 %4500, 1
  %4502 = and i64 %4501, 3
  %4503 = icmp ult i64 %4499, 12
  br i1 %4503, label %4555, label %4504

4504:                                             ; preds = %4495
  %4505 = sub nsw i64 %4501, %4502
  br label %4506

4506:                                             ; preds = %4506, %4504
  %4507 = phi i64 [ 0, %4504 ], [ %4552, %4506 ]
  %4508 = phi i64 [ %4505, %4504 ], [ %4553, %4506 ]
  %4509 = getelementptr i64, i64* %4477, i64 %4507
  %4510 = getelementptr i64, i64* %4469, i64 %4507
  %4511 = bitcast i64* %4509 to <2 x i64>*
  %4512 = load <2 x i64>, <2 x i64>* %4511, align 8, !alias.scope !193
  %4513 = getelementptr i64, i64* %4509, i64 2
  %4514 = bitcast i64* %4513 to <2 x i64>*
  %4515 = load <2 x i64>, <2 x i64>* %4514, align 8, !alias.scope !193
  %4516 = bitcast i64* %4510 to <2 x i64>*
  store <2 x i64> %4512, <2 x i64>* %4516, align 8, !alias.scope !196, !noalias !193
  %4517 = getelementptr i64, i64* %4510, i64 2
  %4518 = bitcast i64* %4517 to <2 x i64>*
  store <2 x i64> %4515, <2 x i64>* %4518, align 8, !alias.scope !196, !noalias !193
  %4519 = or i64 %4507, 4
  %4520 = getelementptr i64, i64* %4477, i64 %4519
  %4521 = getelementptr i64, i64* %4469, i64 %4519
  %4522 = bitcast i64* %4520 to <2 x i64>*
  %4523 = load <2 x i64>, <2 x i64>* %4522, align 8, !alias.scope !193
  %4524 = getelementptr i64, i64* %4520, i64 2
  %4525 = bitcast i64* %4524 to <2 x i64>*
  %4526 = load <2 x i64>, <2 x i64>* %4525, align 8, !alias.scope !193
  %4527 = bitcast i64* %4521 to <2 x i64>*
  store <2 x i64> %4523, <2 x i64>* %4527, align 8, !alias.scope !196, !noalias !193
  %4528 = getelementptr i64, i64* %4521, i64 2
  %4529 = bitcast i64* %4528 to <2 x i64>*
  store <2 x i64> %4526, <2 x i64>* %4529, align 8, !alias.scope !196, !noalias !193
  %4530 = or i64 %4507, 8
  %4531 = getelementptr i64, i64* %4477, i64 %4530
  %4532 = getelementptr i64, i64* %4469, i64 %4530
  %4533 = bitcast i64* %4531 to <2 x i64>*
  %4534 = load <2 x i64>, <2 x i64>* %4533, align 8, !alias.scope !193
  %4535 = getelementptr i64, i64* %4531, i64 2
  %4536 = bitcast i64* %4535 to <2 x i64>*
  %4537 = load <2 x i64>, <2 x i64>* %4536, align 8, !alias.scope !193
  %4538 = bitcast i64* %4532 to <2 x i64>*
  store <2 x i64> %4534, <2 x i64>* %4538, align 8, !alias.scope !196, !noalias !193
  %4539 = getelementptr i64, i64* %4532, i64 2
  %4540 = bitcast i64* %4539 to <2 x i64>*
  store <2 x i64> %4537, <2 x i64>* %4540, align 8, !alias.scope !196, !noalias !193
  %4541 = or i64 %4507, 12
  %4542 = getelementptr i64, i64* %4477, i64 %4541
  %4543 = getelementptr i64, i64* %4469, i64 %4541
  %4544 = bitcast i64* %4542 to <2 x i64>*
  %4545 = load <2 x i64>, <2 x i64>* %4544, align 8, !alias.scope !193
  %4546 = getelementptr i64, i64* %4542, i64 2
  %4547 = bitcast i64* %4546 to <2 x i64>*
  %4548 = load <2 x i64>, <2 x i64>* %4547, align 8, !alias.scope !193
  %4549 = bitcast i64* %4543 to <2 x i64>*
  store <2 x i64> %4545, <2 x i64>* %4549, align 8, !alias.scope !196, !noalias !193
  %4550 = getelementptr i64, i64* %4543, i64 2
  %4551 = bitcast i64* %4550 to <2 x i64>*
  store <2 x i64> %4548, <2 x i64>* %4551, align 8, !alias.scope !196, !noalias !193
  %4552 = add i64 %4507, 16
  %4553 = add i64 %4508, -4
  %4554 = icmp eq i64 %4553, 0
  br i1 %4554, label %4555, label %4506, !llvm.loop !198

4555:                                             ; preds = %4506, %4495
  %4556 = phi i64 [ 0, %4495 ], [ %4552, %4506 ]
  %4557 = icmp eq i64 %4502, 0
  br i1 %4557, label %4574, label %4558

4558:                                             ; preds = %4555, %4558
  %4559 = phi i64 [ %4571, %4558 ], [ %4556, %4555 ]
  %4560 = phi i64 [ %4572, %4558 ], [ %4502, %4555 ]
  %4561 = getelementptr i64, i64* %4477, i64 %4559
  %4562 = getelementptr i64, i64* %4469, i64 %4559
  %4563 = bitcast i64* %4561 to <2 x i64>*
  %4564 = load <2 x i64>, <2 x i64>* %4563, align 8, !alias.scope !193
  %4565 = getelementptr i64, i64* %4561, i64 2
  %4566 = bitcast i64* %4565 to <2 x i64>*
  %4567 = load <2 x i64>, <2 x i64>* %4566, align 8, !alias.scope !193
  %4568 = bitcast i64* %4562 to <2 x i64>*
  store <2 x i64> %4564, <2 x i64>* %4568, align 8, !alias.scope !196, !noalias !193
  %4569 = getelementptr i64, i64* %4562, i64 2
  %4570 = bitcast i64* %4569 to <2 x i64>*
  store <2 x i64> %4567, <2 x i64>* %4570, align 8, !alias.scope !196, !noalias !193
  %4571 = add i64 %4559, 4
  %4572 = add i64 %4560, -1
  %4573 = icmp eq i64 %4572, 0
  br i1 %4573, label %4574, label %4558, !llvm.loop !199

4574:                                             ; preds = %4558, %4555
  %4575 = icmp eq i64 %4481, %4496
  br i1 %4575, label %4628, label %4576

4576:                                             ; preds = %4574, %4483, %4473
  %4577 = phi i64* [ %4477, %4483 ], [ %4477, %4473 ], [ %4497, %4574 ]
  %4578 = phi i64* [ %4469, %4483 ], [ %4469, %4473 ], [ %4498, %4574 ]
  %4579 = ptrtoint i64* %4577 to i64
  %4580 = getelementptr i64, i64* %4469, i64 -1
  %4581 = ptrtoint i64* %4580 to i64
  %4582 = sub i64 %4581, %4579
  %4583 = lshr i64 %4582, 3
  %4584 = add nuw nsw i64 %4583, 1
  %4585 = and i64 %4584, 7
  %4586 = icmp eq i64 %4585, 0
  br i1 %4586, label %4596, label %4587

4587:                                             ; preds = %4576, %4587
  %4588 = phi i64* [ %4591, %4587 ], [ %4577, %4576 ]
  %4589 = phi i64* [ %4593, %4587 ], [ %4578, %4576 ]
  %4590 = phi i64 [ %4594, %4587 ], [ %4585, %4576 ]
  %4591 = getelementptr inbounds i64, i64* %4588, i64 1
  %4592 = load i64, i64* %4588, align 8
  %4593 = getelementptr inbounds i64, i64* %4589, i64 1
  store i64 %4592, i64* %4589, align 8
  %4594 = add i64 %4590, -1
  %4595 = icmp eq i64 %4594, 0
  br i1 %4595, label %4596, label %4587, !llvm.loop !200

4596:                                             ; preds = %4587, %4576
  %4597 = phi i64* [ %4577, %4576 ], [ %4591, %4587 ]
  %4598 = phi i64* [ %4578, %4576 ], [ %4593, %4587 ]
  %4599 = icmp ult i64 %4582, 56
  br i1 %4599, label %4628, label %4600

4600:                                             ; preds = %4596, %4600
  %4601 = phi i64* [ %4624, %4600 ], [ %4597, %4596 ]
  %4602 = phi i64* [ %4626, %4600 ], [ %4598, %4596 ]
  %4603 = getelementptr inbounds i64, i64* %4601, i64 1
  %4604 = load i64, i64* %4601, align 8
  %4605 = getelementptr inbounds i64, i64* %4602, i64 1
  store i64 %4604, i64* %4602, align 8
  %4606 = getelementptr inbounds i64, i64* %4601, i64 2
  %4607 = load i64, i64* %4603, align 8
  %4608 = getelementptr inbounds i64, i64* %4602, i64 2
  store i64 %4607, i64* %4605, align 8
  %4609 = getelementptr inbounds i64, i64* %4601, i64 3
  %4610 = load i64, i64* %4606, align 8
  %4611 = getelementptr inbounds i64, i64* %4602, i64 3
  store i64 %4610, i64* %4608, align 8
  %4612 = getelementptr inbounds i64, i64* %4601, i64 4
  %4613 = load i64, i64* %4609, align 8
  %4614 = getelementptr inbounds i64, i64* %4602, i64 4
  store i64 %4613, i64* %4611, align 8
  %4615 = getelementptr inbounds i64, i64* %4601, i64 5
  %4616 = load i64, i64* %4612, align 8
  %4617 = getelementptr inbounds i64, i64* %4602, i64 5
  store i64 %4616, i64* %4614, align 8
  %4618 = getelementptr inbounds i64, i64* %4601, i64 6
  %4619 = load i64, i64* %4615, align 8
  %4620 = getelementptr inbounds i64, i64* %4602, i64 6
  store i64 %4619, i64* %4617, align 8
  %4621 = getelementptr inbounds i64, i64* %4601, i64 7
  %4622 = load i64, i64* %4618, align 8
  %4623 = getelementptr inbounds i64, i64* %4602, i64 7
  store i64 %4622, i64* %4620, align 8
  %4624 = getelementptr inbounds i64, i64* %4601, i64 8
  %4625 = load i64, i64* %4621, align 8
  %4626 = getelementptr inbounds i64, i64* %4602, i64 8
  store i64 %4625, i64* %4623, align 8
  %4627 = icmp eq i64* %4624, %4469
  br i1 %4627, label %4628, label %4600, !llvm.loop !201

4628:                                             ; preds = %4596, %4600, %4574
  %4629 = load i32, i32* %108, align 8
  %4630 = add nsw i32 %4629, -1
  store i32 %4630, i32* %108, align 8
  %4631 = icmp slt i32 %4629, 2
  br i1 %4631, label %4632, label %4649

4632:                                             ; preds = %4628
  store i32 10000, i32* %108, align 8
  %4633 = load i32, i32* %109, align 4
  %4634 = add nsw i32 %4633, 1
  store i32 %4634, i32* %109, align 4
  %4635 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %4636 = icmp eq i8 (i8*, i32)* %4635, null
  br i1 %4636, label %4642, label %4637

4637:                                             ; preds = %4632
  %4638 = load i8*, i8** %111, align 8
  %4639 = call signext i8 %4635(i8* %4638, i32 %4634) #12
  %4640 = icmp eq i8 %4639, 0
  br i1 %4640, label %4641, label %4642

4641:                                             ; preds = %4637
  store i32 66323, i32* %3, align 4
  br label %4649

4642:                                             ; preds = %4637, %4632
  %4643 = load i32, i32* %112, align 8
  %4644 = icmp sgt i32 %4643, 0
  br i1 %4644, label %4645, label %4649

4645:                                             ; preds = %4642
  %4646 = load i32, i32* %109, align 4
  %4647 = icmp slt i32 %4646, %4643
  br i1 %4647, label %4649, label %4648

4648:                                             ; preds = %4645
  store i32 66322, i32* %3, align 4
  br label %4649

4649:                                             ; preds = %4648, %4645, %4642, %4641, %4628
  %4650 = getelementptr inbounds i64, i64* %4477, i64 1
  store i64 %4434, i64* %4650, align 8
  %4651 = bitcast i64* %4469 to %"struct.icu_69::REStackFrame"*
  br label %4652

4652:                                             ; preds = %4437, %4472, %4649
  %4653 = phi %"struct.icu_69::REStackFrame"* [ %148, %4437 ], [ %148, %4472 ], [ %4651, %4649 ]
  %4654 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %4653, i64 0, i32 1
  %4655 = load i64, i64* %4654, align 8
  %4656 = add nsw i64 %4655, 1
  store i64 %4656, i64* %4654, align 8
  br label %5230

4657:                                             ; preds = %147
  %4658 = and i32 %153, 1
  %4659 = icmp eq i32 %4658, 0
  br i1 %4659, label %4663, label %4660

4660:                                             ; preds = %4657
  %4661 = load i64, i64* %113, align 8
  %4662 = trunc i64 %4661 to i32
  store i8 1, i8* %114, align 8
  br label %4730

4663:                                             ; preds = %4657
  %4664 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %4665 = load i64, i64* %4664, align 8
  %4666 = trunc i64 %4665 to i32
  %4667 = shl i64 %4665, 32
  %4668 = ashr exact i64 %4667, 32
  %4669 = load i64, i64* %113, align 8
  %4670 = icmp sgt i64 %4669, %4668
  br i1 %4670, label %4671, label %4673

4671:                                             ; preds = %4663
  %4672 = and i32 %153, 2
  br label %4675

4673:                                             ; preds = %4727, %4663
  %4674 = phi i32 [ %4666, %4663 ], [ %4699, %4727 ]
  store i8 1, i8* %114, align 8
  br label %4730

4675:                                             ; preds = %4671, %4727
  %4676 = phi i64 [ %4668, %4671 ], [ %4728, %4727 ]
  %4677 = phi i32 [ %4666, %4671 ], [ %4699, %4727 ]
  %4678 = add nsw i32 %4677, 1
  %4679 = getelementptr inbounds i16, i16* %39, i64 %4676
  %4680 = load i16, i16* %4679, align 2
  %4681 = zext i16 %4680 to i32
  %4682 = and i32 %4681, 64512
  %4683 = icmp eq i32 %4682, 55296
  br i1 %4683, label %4684, label %4698

4684:                                             ; preds = %4675
  %4685 = sext i32 %4678 to i64
  %4686 = icmp eq i64 %4669, %4685
  br i1 %4686, label %4698, label %4687

4687:                                             ; preds = %4684
  %4688 = getelementptr inbounds i16, i16* %39, i64 %4685
  %4689 = load i16, i16* %4688, align 2
  %4690 = zext i16 %4689 to i32
  %4691 = and i32 %4690, 64512
  %4692 = icmp eq i32 %4691, 56320
  br i1 %4692, label %4693, label %4698

4693:                                             ; preds = %4687
  %4694 = add nsw i32 %4677, 2
  %4695 = shl nuw nsw i32 %4681, 10
  %4696 = add nsw i32 %4695, -56613888
  %4697 = add nsw i32 %4696, %4690
  br label %4698

4698:                                             ; preds = %4687, %4693, %4684, %4675
  %4699 = phi i32 [ %4678, %4675 ], [ %4694, %4693 ], [ %4678, %4687 ], [ %4678, %4684 ]
  %4700 = phi i32 [ %4681, %4675 ], [ %4697, %4693 ], [ %4681, %4687 ], [ %4681, %4684 ]
  %4701 = and i32 %4700, 126
  %4702 = icmp ult i32 %4701, 42
  br i1 %4702, label %4703, label %4727

4703:                                             ; preds = %4698
  %4704 = icmp eq i32 %4700, 10
  br i1 %4704, label %4710, label %4705

4705:                                             ; preds = %4703
  %4706 = and i32 %4700, -8368
  %4707 = or i32 %4706, %4672
  %4708 = icmp eq i32 %4707, 0
  br i1 %4708, label %4709, label %4727

4709:                                             ; preds = %4705
  switch i32 %4700, label %4727 [
    i32 8232, label %4710
    i32 133, label %4710
    i32 13, label %4710
    i32 12, label %4710
    i32 11, label %4710
    i32 10, label %4710
    i32 8233, label %4710
  ]

4710:                                             ; preds = %4709, %4709, %4709, %4709, %4709, %4709, %4709, %4703
  %4711 = add nsw i32 %4699, -1
  %4712 = sext i32 %4711 to i64
  %4713 = getelementptr inbounds i16, i16* %39, i64 %4712
  %4714 = load i16, i16* %4713, align 2
  %4715 = and i16 %4714, -1024
  %4716 = icmp eq i16 %4715, -9216
  %4717 = icmp sgt i32 %4711, 0
  %4718 = and i1 %4717, %4716
  br i1 %4718, label %4719, label %4730

4719:                                             ; preds = %4710
  %4720 = add nsw i32 %4699, -2
  %4721 = sext i32 %4720 to i64
  %4722 = getelementptr inbounds i16, i16* %39, i64 %4721
  %4723 = load i16, i16* %4722, align 2
  %4724 = and i16 %4723, -1024
  %4725 = icmp eq i16 %4724, -10240
  %4726 = select i1 %4725, i32 %4720, i32 %4711
  br label %4730

4727:                                             ; preds = %4709, %4698, %4705
  %4728 = sext i32 %4699 to i64
  %4729 = icmp sgt i64 %4669, %4728
  br i1 %4729, label %4675, label %4673

4730:                                             ; preds = %4710, %4719, %4673, %4660
  %4731 = phi i32 [ %4662, %4660 ], [ %4674, %4673 ], [ %4726, %4719 ], [ %4711, %4710 ]
  %4732 = sext i32 %4731 to i64
  %4733 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %4734 = load i64, i64* %4733, align 8
  %4735 = icmp eq i64 %4734, %4732
  %4736 = load i64, i64* %149, align 8
  br i1 %4735, label %4737, label %4739

4737:                                             ; preds = %4730
  %4738 = add nsw i64 %4736, 1
  store i64 %4738, i64* %149, align 8
  br label %5230

4739:                                             ; preds = %4730
  %4740 = getelementptr inbounds i64, i64* %16, i64 %4736
  %4741 = load i64, i64* %4740, align 8
  %4742 = and i64 %4741, 16777215
  %4743 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %4742
  store i64 %4734, i64* %4743, align 8
  store i64 %4732, i64* %4733, align 8
  %4744 = load i32, i32* %3, align 4
  %4745 = icmp slt i32 %4744, 1
  br i1 %4745, label %4746, label %4954

4746:                                             ; preds = %4739
  %4747 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %4748 = load i32, i32* %42, align 8
  %4749 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4747, i64 0, i32 1
  %4750 = load i32, i32* %4749, align 8
  %4751 = add nsw i32 %4750, %4748
  %4752 = icmp sgt i32 %4751, -1
  br i1 %4752, label %4753, label %4757

4753:                                             ; preds = %4746
  %4754 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4747, i64 0, i32 2
  %4755 = load i32, i32* %4754, align 4
  %4756 = icmp slt i32 %4755, %4751
  br i1 %4756, label %4757, label %4763

4757:                                             ; preds = %4753, %4746
  %4758 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %4747, i32 %4751, i32* dereferenceable(4) %3) #12
  %4759 = icmp eq i8 %4758, 0
  br i1 %4759, label %4770, label %4760

4760:                                             ; preds = %4757
  %4761 = load i32, i32* %4749, align 8
  %4762 = add nsw i32 %4761, %4748
  br label %4763

4763:                                             ; preds = %4760, %4753
  %4764 = phi i32 [ %4762, %4760 ], [ %4751, %4753 ]
  %4765 = phi i32 [ %4761, %4760 ], [ %4750, %4753 ]
  %4766 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4747, i64 0, i32 4
  %4767 = load i64*, i64** %4766, align 8
  %4768 = sext i32 %4765 to i64
  %4769 = getelementptr inbounds i64, i64* %4767, i64 %4768
  store i32 %4764, i32* %4749, align 8
  br label %4770

4770:                                             ; preds = %4763, %4757
  %4771 = phi i64* [ %4769, %4763 ], [ null, %4757 ]
  %4772 = load i32, i32* %3, align 4
  %4773 = icmp slt i32 %4772, 1
  br i1 %4773, label %4775, label %4774

4774:                                             ; preds = %4770
  store i32 66321, i32* %3, align 4
  br label %4954

4775:                                             ; preds = %4770
  %4776 = load i32, i32* %42, align 8
  %4777 = sext i32 %4776 to i64
  %4778 = sub nsw i64 0, %4777
  %4779 = getelementptr inbounds i64, i64* %4771, i64 %4778
  %4780 = shl nsw i64 %4777, 3
  %4781 = add nsw i64 %4780, -8
  %4782 = lshr exact i64 %4781, 3
  %4783 = add nuw nsw i64 %4782, 1
  %4784 = icmp ult i64 %4783, 4
  br i1 %4784, label %4878, label %4785

4785:                                             ; preds = %4775
  %4786 = getelementptr i64, i64* %4771, i64 1
  %4787 = shl nsw i64 %4777, 3
  %4788 = add nsw i64 %4787, -8
  %4789 = lshr exact i64 %4788, 3
  %4790 = getelementptr i64, i64* %4786, i64 %4789
  %4791 = getelementptr i64, i64* %4771, i64 1
  %4792 = sub nsw i64 %4789, %4777
  %4793 = getelementptr i64, i64* %4791, i64 %4792
  %4794 = icmp ult i64* %4771, %4793
  %4795 = icmp ult i64* %4779, %4790
  %4796 = and i1 %4794, %4795
  br i1 %4796, label %4878, label %4797

4797:                                             ; preds = %4785
  %4798 = and i64 %4783, 4611686018427387900
  %4799 = getelementptr i64, i64* %4779, i64 %4798
  %4800 = getelementptr i64, i64* %4771, i64 %4798
  %4801 = add nsw i64 %4798, -4
  %4802 = lshr exact i64 %4801, 2
  %4803 = add nuw nsw i64 %4802, 1
  %4804 = and i64 %4803, 3
  %4805 = icmp ult i64 %4801, 12
  br i1 %4805, label %4857, label %4806

4806:                                             ; preds = %4797
  %4807 = sub nsw i64 %4803, %4804
  br label %4808

4808:                                             ; preds = %4808, %4806
  %4809 = phi i64 [ 0, %4806 ], [ %4854, %4808 ]
  %4810 = phi i64 [ %4807, %4806 ], [ %4855, %4808 ]
  %4811 = getelementptr i64, i64* %4779, i64 %4809
  %4812 = getelementptr i64, i64* %4771, i64 %4809
  %4813 = bitcast i64* %4811 to <2 x i64>*
  %4814 = load <2 x i64>, <2 x i64>* %4813, align 8, !alias.scope !202
  %4815 = getelementptr i64, i64* %4811, i64 2
  %4816 = bitcast i64* %4815 to <2 x i64>*
  %4817 = load <2 x i64>, <2 x i64>* %4816, align 8, !alias.scope !202
  %4818 = bitcast i64* %4812 to <2 x i64>*
  store <2 x i64> %4814, <2 x i64>* %4818, align 8, !alias.scope !205, !noalias !202
  %4819 = getelementptr i64, i64* %4812, i64 2
  %4820 = bitcast i64* %4819 to <2 x i64>*
  store <2 x i64> %4817, <2 x i64>* %4820, align 8, !alias.scope !205, !noalias !202
  %4821 = or i64 %4809, 4
  %4822 = getelementptr i64, i64* %4779, i64 %4821
  %4823 = getelementptr i64, i64* %4771, i64 %4821
  %4824 = bitcast i64* %4822 to <2 x i64>*
  %4825 = load <2 x i64>, <2 x i64>* %4824, align 8, !alias.scope !202
  %4826 = getelementptr i64, i64* %4822, i64 2
  %4827 = bitcast i64* %4826 to <2 x i64>*
  %4828 = load <2 x i64>, <2 x i64>* %4827, align 8, !alias.scope !202
  %4829 = bitcast i64* %4823 to <2 x i64>*
  store <2 x i64> %4825, <2 x i64>* %4829, align 8, !alias.scope !205, !noalias !202
  %4830 = getelementptr i64, i64* %4823, i64 2
  %4831 = bitcast i64* %4830 to <2 x i64>*
  store <2 x i64> %4828, <2 x i64>* %4831, align 8, !alias.scope !205, !noalias !202
  %4832 = or i64 %4809, 8
  %4833 = getelementptr i64, i64* %4779, i64 %4832
  %4834 = getelementptr i64, i64* %4771, i64 %4832
  %4835 = bitcast i64* %4833 to <2 x i64>*
  %4836 = load <2 x i64>, <2 x i64>* %4835, align 8, !alias.scope !202
  %4837 = getelementptr i64, i64* %4833, i64 2
  %4838 = bitcast i64* %4837 to <2 x i64>*
  %4839 = load <2 x i64>, <2 x i64>* %4838, align 8, !alias.scope !202
  %4840 = bitcast i64* %4834 to <2 x i64>*
  store <2 x i64> %4836, <2 x i64>* %4840, align 8, !alias.scope !205, !noalias !202
  %4841 = getelementptr i64, i64* %4834, i64 2
  %4842 = bitcast i64* %4841 to <2 x i64>*
  store <2 x i64> %4839, <2 x i64>* %4842, align 8, !alias.scope !205, !noalias !202
  %4843 = or i64 %4809, 12
  %4844 = getelementptr i64, i64* %4779, i64 %4843
  %4845 = getelementptr i64, i64* %4771, i64 %4843
  %4846 = bitcast i64* %4844 to <2 x i64>*
  %4847 = load <2 x i64>, <2 x i64>* %4846, align 8, !alias.scope !202
  %4848 = getelementptr i64, i64* %4844, i64 2
  %4849 = bitcast i64* %4848 to <2 x i64>*
  %4850 = load <2 x i64>, <2 x i64>* %4849, align 8, !alias.scope !202
  %4851 = bitcast i64* %4845 to <2 x i64>*
  store <2 x i64> %4847, <2 x i64>* %4851, align 8, !alias.scope !205, !noalias !202
  %4852 = getelementptr i64, i64* %4845, i64 2
  %4853 = bitcast i64* %4852 to <2 x i64>*
  store <2 x i64> %4850, <2 x i64>* %4853, align 8, !alias.scope !205, !noalias !202
  %4854 = add i64 %4809, 16
  %4855 = add i64 %4810, -4
  %4856 = icmp eq i64 %4855, 0
  br i1 %4856, label %4857, label %4808, !llvm.loop !207

4857:                                             ; preds = %4808, %4797
  %4858 = phi i64 [ 0, %4797 ], [ %4854, %4808 ]
  %4859 = icmp eq i64 %4804, 0
  br i1 %4859, label %4876, label %4860

4860:                                             ; preds = %4857, %4860
  %4861 = phi i64 [ %4873, %4860 ], [ %4858, %4857 ]
  %4862 = phi i64 [ %4874, %4860 ], [ %4804, %4857 ]
  %4863 = getelementptr i64, i64* %4779, i64 %4861
  %4864 = getelementptr i64, i64* %4771, i64 %4861
  %4865 = bitcast i64* %4863 to <2 x i64>*
  %4866 = load <2 x i64>, <2 x i64>* %4865, align 8, !alias.scope !202
  %4867 = getelementptr i64, i64* %4863, i64 2
  %4868 = bitcast i64* %4867 to <2 x i64>*
  %4869 = load <2 x i64>, <2 x i64>* %4868, align 8, !alias.scope !202
  %4870 = bitcast i64* %4864 to <2 x i64>*
  store <2 x i64> %4866, <2 x i64>* %4870, align 8, !alias.scope !205, !noalias !202
  %4871 = getelementptr i64, i64* %4864, i64 2
  %4872 = bitcast i64* %4871 to <2 x i64>*
  store <2 x i64> %4869, <2 x i64>* %4872, align 8, !alias.scope !205, !noalias !202
  %4873 = add i64 %4861, 4
  %4874 = add i64 %4862, -1
  %4875 = icmp eq i64 %4874, 0
  br i1 %4875, label %4876, label %4860, !llvm.loop !208

4876:                                             ; preds = %4860, %4857
  %4877 = icmp eq i64 %4783, %4798
  br i1 %4877, label %4930, label %4878

4878:                                             ; preds = %4876, %4785, %4775
  %4879 = phi i64* [ %4779, %4785 ], [ %4779, %4775 ], [ %4799, %4876 ]
  %4880 = phi i64* [ %4771, %4785 ], [ %4771, %4775 ], [ %4800, %4876 ]
  %4881 = ptrtoint i64* %4879 to i64
  %4882 = getelementptr i64, i64* %4771, i64 -1
  %4883 = ptrtoint i64* %4882 to i64
  %4884 = sub i64 %4883, %4881
  %4885 = lshr i64 %4884, 3
  %4886 = add nuw nsw i64 %4885, 1
  %4887 = and i64 %4886, 7
  %4888 = icmp eq i64 %4887, 0
  br i1 %4888, label %4898, label %4889

4889:                                             ; preds = %4878, %4889
  %4890 = phi i64* [ %4893, %4889 ], [ %4879, %4878 ]
  %4891 = phi i64* [ %4895, %4889 ], [ %4880, %4878 ]
  %4892 = phi i64 [ %4896, %4889 ], [ %4887, %4878 ]
  %4893 = getelementptr inbounds i64, i64* %4890, i64 1
  %4894 = load i64, i64* %4890, align 8
  %4895 = getelementptr inbounds i64, i64* %4891, i64 1
  store i64 %4894, i64* %4891, align 8
  %4896 = add i64 %4892, -1
  %4897 = icmp eq i64 %4896, 0
  br i1 %4897, label %4898, label %4889, !llvm.loop !209

4898:                                             ; preds = %4889, %4878
  %4899 = phi i64* [ %4879, %4878 ], [ %4893, %4889 ]
  %4900 = phi i64* [ %4880, %4878 ], [ %4895, %4889 ]
  %4901 = icmp ult i64 %4884, 56
  br i1 %4901, label %4930, label %4902

4902:                                             ; preds = %4898, %4902
  %4903 = phi i64* [ %4926, %4902 ], [ %4899, %4898 ]
  %4904 = phi i64* [ %4928, %4902 ], [ %4900, %4898 ]
  %4905 = getelementptr inbounds i64, i64* %4903, i64 1
  %4906 = load i64, i64* %4903, align 8
  %4907 = getelementptr inbounds i64, i64* %4904, i64 1
  store i64 %4906, i64* %4904, align 8
  %4908 = getelementptr inbounds i64, i64* %4903, i64 2
  %4909 = load i64, i64* %4905, align 8
  %4910 = getelementptr inbounds i64, i64* %4904, i64 2
  store i64 %4909, i64* %4907, align 8
  %4911 = getelementptr inbounds i64, i64* %4903, i64 3
  %4912 = load i64, i64* %4908, align 8
  %4913 = getelementptr inbounds i64, i64* %4904, i64 3
  store i64 %4912, i64* %4910, align 8
  %4914 = getelementptr inbounds i64, i64* %4903, i64 4
  %4915 = load i64, i64* %4911, align 8
  %4916 = getelementptr inbounds i64, i64* %4904, i64 4
  store i64 %4915, i64* %4913, align 8
  %4917 = getelementptr inbounds i64, i64* %4903, i64 5
  %4918 = load i64, i64* %4914, align 8
  %4919 = getelementptr inbounds i64, i64* %4904, i64 5
  store i64 %4918, i64* %4916, align 8
  %4920 = getelementptr inbounds i64, i64* %4903, i64 6
  %4921 = load i64, i64* %4917, align 8
  %4922 = getelementptr inbounds i64, i64* %4904, i64 6
  store i64 %4921, i64* %4919, align 8
  %4923 = getelementptr inbounds i64, i64* %4903, i64 7
  %4924 = load i64, i64* %4920, align 8
  %4925 = getelementptr inbounds i64, i64* %4904, i64 7
  store i64 %4924, i64* %4922, align 8
  %4926 = getelementptr inbounds i64, i64* %4903, i64 8
  %4927 = load i64, i64* %4923, align 8
  %4928 = getelementptr inbounds i64, i64* %4904, i64 8
  store i64 %4927, i64* %4925, align 8
  %4929 = icmp eq i64* %4926, %4771
  br i1 %4929, label %4930, label %4902, !llvm.loop !210

4930:                                             ; preds = %4898, %4902, %4876
  %4931 = load i32, i32* %108, align 8
  %4932 = add nsw i32 %4931, -1
  store i32 %4932, i32* %108, align 8
  %4933 = icmp slt i32 %4931, 2
  br i1 %4933, label %4934, label %4951

4934:                                             ; preds = %4930
  store i32 10000, i32* %108, align 8
  %4935 = load i32, i32* %109, align 4
  %4936 = add nsw i32 %4935, 1
  store i32 %4936, i32* %109, align 4
  %4937 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %4938 = icmp eq i8 (i8*, i32)* %4937, null
  br i1 %4938, label %4944, label %4939

4939:                                             ; preds = %4934
  %4940 = load i8*, i8** %111, align 8
  %4941 = call signext i8 %4937(i8* %4940, i32 %4936) #12
  %4942 = icmp eq i8 %4941, 0
  br i1 %4942, label %4943, label %4944

4943:                                             ; preds = %4939
  store i32 66323, i32* %3, align 4
  br label %4951

4944:                                             ; preds = %4939, %4934
  %4945 = load i32, i32* %112, align 8
  %4946 = icmp sgt i32 %4945, 0
  br i1 %4946, label %4947, label %4951

4947:                                             ; preds = %4944
  %4948 = load i32, i32* %109, align 4
  %4949 = icmp slt i32 %4948, %4945
  br i1 %4949, label %4951, label %4950

4950:                                             ; preds = %4947
  store i32 66322, i32* %3, align 4
  br label %4951

4951:                                             ; preds = %4950, %4947, %4944, %4943, %4930
  %4952 = getelementptr inbounds i64, i64* %4779, i64 1
  store i64 %4736, i64* %4952, align 8
  %4953 = bitcast i64* %4771 to %"struct.icu_69::REStackFrame"*
  br label %4954

4954:                                             ; preds = %4739, %4774, %4951
  %4955 = phi %"struct.icu_69::REStackFrame"* [ %148, %4739 ], [ %148, %4774 ], [ %4953, %4951 ]
  %4956 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %4955, i64 0, i32 1
  %4957 = load i64, i64* %4956, align 8
  %4958 = add nsw i64 %4957, 1
  store i64 %4958, i64* %4956, align 8
  br label %5230

4959:                                             ; preds = %147
  %4960 = zext i32 %155 to i64
  %4961 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 2, i64 %4960
  %4962 = load i64, i64* %4961, align 8
  %4963 = shl i64 %4962, 32
  %4964 = ashr exact i64 %4963, 32
  %4965 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %4966 = load i64, i64* %4965, align 8
  %4967 = icmp eq i64 %4964, %4966
  br i1 %4967, label %5230, label %4968

4968:                                             ; preds = %4959
  %4969 = add nsw i64 %4966, -1
  store i64 %4969, i64* %4965, align 8
  %4970 = getelementptr inbounds i16, i16* %39, i64 %4969
  %4971 = load i16, i16* %4970, align 2
  %4972 = zext i16 %4971 to i32
  %4973 = and i32 %4972, 64512
  %4974 = icmp eq i32 %4973, 56320
  %4975 = icmp sgt i64 %4969, 0
  %4976 = and i1 %4975, %4974
  br i1 %4976, label %4977, label %4988

4977:                                             ; preds = %4968
  %4978 = add nsw i64 %4966, -2
  %4979 = getelementptr inbounds i16, i16* %39, i64 %4978
  %4980 = load i16, i16* %4979, align 2
  %4981 = zext i16 %4980 to i32
  %4982 = and i32 %4981, 64512
  %4983 = icmp eq i32 %4982, 55296
  br i1 %4983, label %4984, label %4988

4984:                                             ; preds = %4977
  store i64 %4978, i64* %4965, align 8
  %4985 = shl nuw nsw i32 %4981, 10
  %4986 = add nuw nsw i32 %4972, -56613888
  %4987 = add nsw i32 %4986, %4985
  br label %4988

4988:                                             ; preds = %4977, %4984, %4968
  %4989 = phi i64 [ %4969, %4968 ], [ %4978, %4984 ], [ %4969, %4977 ]
  %4990 = phi i32 [ %4972, %4968 ], [ %4987, %4984 ], [ %4972, %4977 ]
  %4991 = icmp eq i32 %4990, 10
  %4992 = icmp sgt i64 %4989, %4964
  %4993 = and i1 %4991, %4992
  br i1 %4993, label %4994, label %5018

4994:                                             ; preds = %4988
  %4995 = add nsw i64 %4989, -1
  %4996 = getelementptr inbounds i16, i16* %39, i64 %4995
  %4997 = load i16, i16* %4996, align 2
  %4998 = icmp eq i16 %4997, 13
  br i1 %4998, label %4999, label %5018

4999:                                             ; preds = %4994
  %5000 = add nsw i64 %150, -1
  %5001 = getelementptr inbounds i64, i64* %16, i64 %5000
  %5002 = load i64, i64* %5001, align 8
  %5003 = and i64 %5002, 4278190080
  %5004 = icmp eq i64 %5003, 872415232
  br i1 %5004, label %5005, label %5018

5005:                                             ; preds = %4999
  store i64 %4995, i64* %4965, align 8
  %5006 = load i16, i16* %4996, align 2
  %5007 = and i16 %5006, -1024
  %5008 = icmp eq i16 %5007, -9216
  %5009 = icmp sgt i64 %4995, 0
  %5010 = and i1 %5009, %5008
  br i1 %5010, label %5011, label %5018

5011:                                             ; preds = %5005
  %5012 = add nsw i64 %4989, -2
  %5013 = getelementptr inbounds i16, i16* %39, i64 %5012
  %5014 = load i16, i16* %5013, align 2
  %5015 = and i16 %5014, -1024
  %5016 = icmp eq i16 %5015, -10240
  br i1 %5016, label %5017, label %5018

5017:                                             ; preds = %5011
  store i64 %5012, i64* %4965, align 8
  br label %5018

5018:                                             ; preds = %4999, %5017, %5011, %5005, %4994, %4988
  %5019 = load i32, i32* %3, align 4
  %5020 = icmp slt i32 %5019, 1
  br i1 %5020, label %5021, label %5234

5021:                                             ; preds = %5018
  %5022 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %43, align 8
  %5023 = load i32, i32* %42, align 8
  %5024 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5022, i64 0, i32 1
  %5025 = load i32, i32* %5024, align 8
  %5026 = add nsw i32 %5025, %5023
  %5027 = icmp sgt i32 %5026, -1
  br i1 %5027, label %5028, label %5032

5028:                                             ; preds = %5021
  %5029 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5022, i64 0, i32 2
  %5030 = load i32, i32* %5029, align 4
  %5031 = icmp slt i32 %5030, %5026
  br i1 %5031, label %5032, label %5038

5032:                                             ; preds = %5028, %5021
  %5033 = call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %5022, i32 %5026, i32* dereferenceable(4) %3) #12
  %5034 = icmp eq i8 %5033, 0
  br i1 %5034, label %5045, label %5035

5035:                                             ; preds = %5032
  %5036 = load i32, i32* %5024, align 8
  %5037 = add nsw i32 %5036, %5023
  br label %5038

5038:                                             ; preds = %5035, %5028
  %5039 = phi i32 [ %5037, %5035 ], [ %5026, %5028 ]
  %5040 = phi i32 [ %5036, %5035 ], [ %5025, %5028 ]
  %5041 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %5022, i64 0, i32 4
  %5042 = load i64*, i64** %5041, align 8
  %5043 = sext i32 %5040 to i64
  %5044 = getelementptr inbounds i64, i64* %5042, i64 %5043
  store i32 %5039, i32* %5024, align 8
  br label %5045

5045:                                             ; preds = %5038, %5032
  %5046 = phi i64* [ %5044, %5038 ], [ null, %5032 ]
  %5047 = load i32, i32* %3, align 4
  %5048 = icmp slt i32 %5047, 1
  br i1 %5048, label %5050, label %5049

5049:                                             ; preds = %5045
  store i32 66321, i32* %3, align 4
  br label %5234

5050:                                             ; preds = %5045
  %5051 = load i32, i32* %42, align 8
  %5052 = sext i32 %5051 to i64
  %5053 = sub nsw i64 0, %5052
  %5054 = getelementptr inbounds i64, i64* %5046, i64 %5053
  %5055 = shl nsw i64 %5052, 3
  %5056 = add nsw i64 %5055, -8
  %5057 = lshr exact i64 %5056, 3
  %5058 = add nuw nsw i64 %5057, 1
  %5059 = icmp ult i64 %5058, 4
  br i1 %5059, label %5153, label %5060

5060:                                             ; preds = %5050
  %5061 = getelementptr i64, i64* %5046, i64 1
  %5062 = shl nsw i64 %5052, 3
  %5063 = add nsw i64 %5062, -8
  %5064 = lshr exact i64 %5063, 3
  %5065 = getelementptr i64, i64* %5061, i64 %5064
  %5066 = getelementptr i64, i64* %5046, i64 1
  %5067 = sub nsw i64 %5064, %5052
  %5068 = getelementptr i64, i64* %5066, i64 %5067
  %5069 = icmp ult i64* %5046, %5068
  %5070 = icmp ult i64* %5054, %5065
  %5071 = and i1 %5069, %5070
  br i1 %5071, label %5153, label %5072

5072:                                             ; preds = %5060
  %5073 = and i64 %5058, 4611686018427387900
  %5074 = getelementptr i64, i64* %5054, i64 %5073
  %5075 = getelementptr i64, i64* %5046, i64 %5073
  %5076 = add nsw i64 %5073, -4
  %5077 = lshr exact i64 %5076, 2
  %5078 = add nuw nsw i64 %5077, 1
  %5079 = and i64 %5078, 3
  %5080 = icmp ult i64 %5076, 12
  br i1 %5080, label %5132, label %5081

5081:                                             ; preds = %5072
  %5082 = sub nsw i64 %5078, %5079
  br label %5083

5083:                                             ; preds = %5083, %5081
  %5084 = phi i64 [ 0, %5081 ], [ %5129, %5083 ]
  %5085 = phi i64 [ %5082, %5081 ], [ %5130, %5083 ]
  %5086 = getelementptr i64, i64* %5054, i64 %5084
  %5087 = getelementptr i64, i64* %5046, i64 %5084
  %5088 = bitcast i64* %5086 to <2 x i64>*
  %5089 = load <2 x i64>, <2 x i64>* %5088, align 8, !alias.scope !211
  %5090 = getelementptr i64, i64* %5086, i64 2
  %5091 = bitcast i64* %5090 to <2 x i64>*
  %5092 = load <2 x i64>, <2 x i64>* %5091, align 8, !alias.scope !211
  %5093 = bitcast i64* %5087 to <2 x i64>*
  store <2 x i64> %5089, <2 x i64>* %5093, align 8, !alias.scope !214, !noalias !211
  %5094 = getelementptr i64, i64* %5087, i64 2
  %5095 = bitcast i64* %5094 to <2 x i64>*
  store <2 x i64> %5092, <2 x i64>* %5095, align 8, !alias.scope !214, !noalias !211
  %5096 = or i64 %5084, 4
  %5097 = getelementptr i64, i64* %5054, i64 %5096
  %5098 = getelementptr i64, i64* %5046, i64 %5096
  %5099 = bitcast i64* %5097 to <2 x i64>*
  %5100 = load <2 x i64>, <2 x i64>* %5099, align 8, !alias.scope !211
  %5101 = getelementptr i64, i64* %5097, i64 2
  %5102 = bitcast i64* %5101 to <2 x i64>*
  %5103 = load <2 x i64>, <2 x i64>* %5102, align 8, !alias.scope !211
  %5104 = bitcast i64* %5098 to <2 x i64>*
  store <2 x i64> %5100, <2 x i64>* %5104, align 8, !alias.scope !214, !noalias !211
  %5105 = getelementptr i64, i64* %5098, i64 2
  %5106 = bitcast i64* %5105 to <2 x i64>*
  store <2 x i64> %5103, <2 x i64>* %5106, align 8, !alias.scope !214, !noalias !211
  %5107 = or i64 %5084, 8
  %5108 = getelementptr i64, i64* %5054, i64 %5107
  %5109 = getelementptr i64, i64* %5046, i64 %5107
  %5110 = bitcast i64* %5108 to <2 x i64>*
  %5111 = load <2 x i64>, <2 x i64>* %5110, align 8, !alias.scope !211
  %5112 = getelementptr i64, i64* %5108, i64 2
  %5113 = bitcast i64* %5112 to <2 x i64>*
  %5114 = load <2 x i64>, <2 x i64>* %5113, align 8, !alias.scope !211
  %5115 = bitcast i64* %5109 to <2 x i64>*
  store <2 x i64> %5111, <2 x i64>* %5115, align 8, !alias.scope !214, !noalias !211
  %5116 = getelementptr i64, i64* %5109, i64 2
  %5117 = bitcast i64* %5116 to <2 x i64>*
  store <2 x i64> %5114, <2 x i64>* %5117, align 8, !alias.scope !214, !noalias !211
  %5118 = or i64 %5084, 12
  %5119 = getelementptr i64, i64* %5054, i64 %5118
  %5120 = getelementptr i64, i64* %5046, i64 %5118
  %5121 = bitcast i64* %5119 to <2 x i64>*
  %5122 = load <2 x i64>, <2 x i64>* %5121, align 8, !alias.scope !211
  %5123 = getelementptr i64, i64* %5119, i64 2
  %5124 = bitcast i64* %5123 to <2 x i64>*
  %5125 = load <2 x i64>, <2 x i64>* %5124, align 8, !alias.scope !211
  %5126 = bitcast i64* %5120 to <2 x i64>*
  store <2 x i64> %5122, <2 x i64>* %5126, align 8, !alias.scope !214, !noalias !211
  %5127 = getelementptr i64, i64* %5120, i64 2
  %5128 = bitcast i64* %5127 to <2 x i64>*
  store <2 x i64> %5125, <2 x i64>* %5128, align 8, !alias.scope !214, !noalias !211
  %5129 = add i64 %5084, 16
  %5130 = add i64 %5085, -4
  %5131 = icmp eq i64 %5130, 0
  br i1 %5131, label %5132, label %5083, !llvm.loop !216

5132:                                             ; preds = %5083, %5072
  %5133 = phi i64 [ 0, %5072 ], [ %5129, %5083 ]
  %5134 = icmp eq i64 %5079, 0
  br i1 %5134, label %5151, label %5135

5135:                                             ; preds = %5132, %5135
  %5136 = phi i64 [ %5148, %5135 ], [ %5133, %5132 ]
  %5137 = phi i64 [ %5149, %5135 ], [ %5079, %5132 ]
  %5138 = getelementptr i64, i64* %5054, i64 %5136
  %5139 = getelementptr i64, i64* %5046, i64 %5136
  %5140 = bitcast i64* %5138 to <2 x i64>*
  %5141 = load <2 x i64>, <2 x i64>* %5140, align 8, !alias.scope !211
  %5142 = getelementptr i64, i64* %5138, i64 2
  %5143 = bitcast i64* %5142 to <2 x i64>*
  %5144 = load <2 x i64>, <2 x i64>* %5143, align 8, !alias.scope !211
  %5145 = bitcast i64* %5139 to <2 x i64>*
  store <2 x i64> %5141, <2 x i64>* %5145, align 8, !alias.scope !214, !noalias !211
  %5146 = getelementptr i64, i64* %5139, i64 2
  %5147 = bitcast i64* %5146 to <2 x i64>*
  store <2 x i64> %5144, <2 x i64>* %5147, align 8, !alias.scope !214, !noalias !211
  %5148 = add i64 %5136, 4
  %5149 = add i64 %5137, -1
  %5150 = icmp eq i64 %5149, 0
  br i1 %5150, label %5151, label %5135, !llvm.loop !217

5151:                                             ; preds = %5135, %5132
  %5152 = icmp eq i64 %5058, %5073
  br i1 %5152, label %5205, label %5153

5153:                                             ; preds = %5151, %5060, %5050
  %5154 = phi i64* [ %5054, %5060 ], [ %5054, %5050 ], [ %5074, %5151 ]
  %5155 = phi i64* [ %5046, %5060 ], [ %5046, %5050 ], [ %5075, %5151 ]
  %5156 = ptrtoint i64* %5154 to i64
  %5157 = getelementptr i64, i64* %5046, i64 -1
  %5158 = ptrtoint i64* %5157 to i64
  %5159 = sub i64 %5158, %5156
  %5160 = lshr i64 %5159, 3
  %5161 = add nuw nsw i64 %5160, 1
  %5162 = and i64 %5161, 7
  %5163 = icmp eq i64 %5162, 0
  br i1 %5163, label %5173, label %5164

5164:                                             ; preds = %5153, %5164
  %5165 = phi i64* [ %5168, %5164 ], [ %5154, %5153 ]
  %5166 = phi i64* [ %5170, %5164 ], [ %5155, %5153 ]
  %5167 = phi i64 [ %5171, %5164 ], [ %5162, %5153 ]
  %5168 = getelementptr inbounds i64, i64* %5165, i64 1
  %5169 = load i64, i64* %5165, align 8
  %5170 = getelementptr inbounds i64, i64* %5166, i64 1
  store i64 %5169, i64* %5166, align 8
  %5171 = add i64 %5167, -1
  %5172 = icmp eq i64 %5171, 0
  br i1 %5172, label %5173, label %5164, !llvm.loop !218

5173:                                             ; preds = %5164, %5153
  %5174 = phi i64* [ %5154, %5153 ], [ %5168, %5164 ]
  %5175 = phi i64* [ %5155, %5153 ], [ %5170, %5164 ]
  %5176 = icmp ult i64 %5159, 56
  br i1 %5176, label %5205, label %5177

5177:                                             ; preds = %5173, %5177
  %5178 = phi i64* [ %5201, %5177 ], [ %5174, %5173 ]
  %5179 = phi i64* [ %5203, %5177 ], [ %5175, %5173 ]
  %5180 = getelementptr inbounds i64, i64* %5178, i64 1
  %5181 = load i64, i64* %5178, align 8
  %5182 = getelementptr inbounds i64, i64* %5179, i64 1
  store i64 %5181, i64* %5179, align 8
  %5183 = getelementptr inbounds i64, i64* %5178, i64 2
  %5184 = load i64, i64* %5180, align 8
  %5185 = getelementptr inbounds i64, i64* %5179, i64 2
  store i64 %5184, i64* %5182, align 8
  %5186 = getelementptr inbounds i64, i64* %5178, i64 3
  %5187 = load i64, i64* %5183, align 8
  %5188 = getelementptr inbounds i64, i64* %5179, i64 3
  store i64 %5187, i64* %5185, align 8
  %5189 = getelementptr inbounds i64, i64* %5178, i64 4
  %5190 = load i64, i64* %5186, align 8
  %5191 = getelementptr inbounds i64, i64* %5179, i64 4
  store i64 %5190, i64* %5188, align 8
  %5192 = getelementptr inbounds i64, i64* %5178, i64 5
  %5193 = load i64, i64* %5189, align 8
  %5194 = getelementptr inbounds i64, i64* %5179, i64 5
  store i64 %5193, i64* %5191, align 8
  %5195 = getelementptr inbounds i64, i64* %5178, i64 6
  %5196 = load i64, i64* %5192, align 8
  %5197 = getelementptr inbounds i64, i64* %5179, i64 6
  store i64 %5196, i64* %5194, align 8
  %5198 = getelementptr inbounds i64, i64* %5178, i64 7
  %5199 = load i64, i64* %5195, align 8
  %5200 = getelementptr inbounds i64, i64* %5179, i64 7
  store i64 %5199, i64* %5197, align 8
  %5201 = getelementptr inbounds i64, i64* %5178, i64 8
  %5202 = load i64, i64* %5198, align 8
  %5203 = getelementptr inbounds i64, i64* %5179, i64 8
  store i64 %5202, i64* %5200, align 8
  %5204 = icmp eq i64* %5201, %5046
  br i1 %5204, label %5205, label %5177, !llvm.loop !219

5205:                                             ; preds = %5173, %5177, %5151
  %5206 = load i32, i32* %108, align 8
  %5207 = add nsw i32 %5206, -1
  store i32 %5207, i32* %108, align 8
  %5208 = icmp slt i32 %5206, 2
  br i1 %5208, label %5209, label %5226

5209:                                             ; preds = %5205
  store i32 10000, i32* %108, align 8
  %5210 = load i32, i32* %109, align 4
  %5211 = add nsw i32 %5210, 1
  store i32 %5211, i32* %109, align 4
  %5212 = load i8 (i8*, i32)*, i8 (i8*, i32)** %110, align 8
  %5213 = icmp eq i8 (i8*, i32)* %5212, null
  br i1 %5213, label %5219, label %5214

5214:                                             ; preds = %5209
  %5215 = load i8*, i8** %111, align 8
  %5216 = call signext i8 %5212(i8* %5215, i32 %5211) #12
  %5217 = icmp eq i8 %5216, 0
  br i1 %5217, label %5218, label %5219

5218:                                             ; preds = %5214
  store i32 66323, i32* %3, align 4
  br label %5226

5219:                                             ; preds = %5214, %5209
  %5220 = load i32, i32* %112, align 8
  %5221 = icmp sgt i32 %5220, 0
  br i1 %5221, label %5222, label %5226

5222:                                             ; preds = %5219
  %5223 = load i32, i32* %109, align 4
  %5224 = icmp slt i32 %5223, %5220
  br i1 %5224, label %5226, label %5225

5225:                                             ; preds = %5222
  store i32 66322, i32* %3, align 4
  br label %5226

5226:                                             ; preds = %5225, %5222, %5219, %5218, %5205
  %5227 = getelementptr inbounds i64, i64* %5054, i64 1
  store i64 %150, i64* %5227, align 8
  %5228 = bitcast i64* %5046 to %"struct.icu_69::REStackFrame"*
  br label %5230

5229:                                             ; preds = %147
  call void @abort() #13
  unreachable

5230:                                             ; preds = %1562, %1069, %1069, %1069, %1069, %1069, %1069, %749, %749, %749, %749, %749, %749, %749, %663, %663, %663, %663, %663, %663, %200, %1406, %1416, %3531, %1558, %5226, %3203, %2978, %2975, %473, %4737, %4954, %4435, %4652, %4054, %4277, %3714, %3952, %3407, %3409, %3332, %3386, %3258, %3311, %3309, %3245, %3214, %2932, %2984, %2959, %2713, %2928, %2682, %2412, %2441, %2390, %2396, %2388, %1925, %2149, %1689, %1692, %1621, %1625, %1632, %1640, %1645, %1628, %1637, %1563, %1500, %1495, %1481, %1420, %1343, %1336, %1182, %1177, %1111, %1070, %1104, %1110, %1092, %1096, %998, %1006, %907, %913, %849, %844, %800, %792, %776, %771, %750, %672, %667, %664, %593, %246, %248, %694, %714, %766, %1245, %4959, %1255, %1271, %1249, %934, %937, %940, %735, %719, %698, %4302, %4286, %3977, %3961, %3621, %3619, %3536, %3488, %3425, %3388, %3206, %1921, %147, %1708, %1652, %1584, %1521, %1441, %1364, %1277, %1203, %1132, %1027, %961, %870, %693, %657, %636, %635, %634, %606, %605, %540, %522, %504, %498, %482, %204, %158
  %5231 = phi %"struct.icu_69::REStackFrame"* [ %148, %1562 ], [ %148, %1069 ], [ %148, %749 ], [ %148, %663 ], [ %148, %663 ], [ %148, %663 ], [ %148, %663 ], [ %148, %663 ], [ %148, %663 ], [ %148, %1069 ], [ %148, %1069 ], [ %148, %1069 ], [ %148, %1069 ], [ %148, %1069 ], [ %148, %1558 ], [ %148, %749 ], [ %148, %749 ], [ %148, %749 ], [ %148, %749 ], [ %148, %749 ], [ %148, %749 ], [ %5228, %5226 ], [ %3205, %3203 ], [ %148, %2978 ], [ %148, %2975 ], [ %475, %473 ], [ %4955, %4954 ], [ %148, %4737 ], [ %4653, %4652 ], [ %148, %4435 ], [ %4278, %4277 ], [ %148, %4054 ], [ %3953, %3952 ], [ %3729, %3714 ], [ %3424, %3409 ], [ %148, %3407 ], [ %3387, %3386 ], [ %3347, %3332 ], [ %3326, %3311 ], [ %148, %3309 ], [ %3273, %3258 ], [ %148, %3214 ], [ %3247, %3245 ], [ %148, %2959 ], [ %148, %2984 ], [ %148, %2932 ], [ %148, %2713 ], [ %2929, %2928 ], [ %148, %2441 ], [ %148, %2412 ], [ %2683, %2682 ], [ %2389, %2388 ], [ %2411, %2396 ], [ %2389, %2390 ], [ %148, %1925 ], [ %2150, %2149 ], [ %148, %1689 ], [ %1707, %1692 ], [ %148, %1621 ], [ %148, %1625 ], [ %148, %1632 ], [ %148, %1640 ], [ %148, %1645 ], [ %148, %1628 ], [ %148, %1637 ], [ %1578, %1563 ], [ %148, %1495 ], [ %148, %1481 ], [ %1515, %1500 ], [ %148, %1416 ], [ %148, %1406 ], [ %1435, %1420 ], [ %1358, %1343 ], [ %148, %1336 ], [ %1197, %1182 ], [ %148, %1177 ], [ %148, %1096 ], [ %148, %1092 ], [ %148, %1110 ], [ %148, %1104 ], [ %1126, %1111 ], [ %148, %1070 ], [ %1021, %1006 ], [ %148, %998 ], [ %928, %913 ], [ %148, %907 ], [ %864, %849 ], [ %148, %844 ], [ %815, %800 ], [ %148, %792 ], [ %148, %771 ], [ %791, %776 ], [ %765, %750 ], [ %148, %664 ], [ %148, %667 ], [ %687, %672 ], [ %148, %593 ], [ %263, %248 ], [ %148, %246 ], [ %148, %147 ], [ %173, %158 ], [ %148, %200 ], [ %219, %204 ], [ %497, %482 ], [ %148, %498 ], [ %148, %504 ], [ %148, %605 ], [ %621, %606 ], [ %148, %540 ], [ %537, %522 ], [ %148, %635 ], [ %651, %636 ], [ %148, %634 ], [ %148, %657 ], [ %148, %694 ], [ %713, %698 ], [ %148, %693 ], [ %148, %714 ], [ %734, %719 ], [ %148, %735 ], [ %148, %766 ], [ %885, %870 ], [ %955, %940 ], [ %148, %937 ], [ %148, %934 ], [ %976, %961 ], [ %1042, %1027 ], [ %1147, %1132 ], [ %148, %1245 ], [ %148, %1249 ], [ %1218, %1203 ], [ %148, %1271 ], [ %1270, %1255 ], [ %1292, %1277 ], [ %1379, %1364 ], [ %1456, %1441 ], [ %1536, %1521 ], [ %1599, %1584 ], [ %1667, %1652 ], [ %148, %1708 ], [ %1922, %1921 ], [ %148, %3206 ], [ %148, %3388 ], [ %148, %3425 ], [ %3490, %3488 ], [ %148, %3531 ], [ %3551, %3536 ], [ %3620, %3619 ], [ %148, %3621 ], [ %148, %3977 ], [ %3976, %3961 ], [ %4331, %4302 ], [ %4301, %4286 ], [ %148, %4959 ]
  %5232 = load i32, i32* %3, align 4
  %5233 = icmp slt i32 %5232, 1
  br i1 %5233, label %147, label %5234

5234:                                             ; preds = %264, %2993, %5018, %147, %5230, %296, %2974, %2981, %3026, %5049
  %5235 = phi %"struct.icu_69::REStackFrame"* [ %148, %5049 ], [ %148, %3026 ], [ %148, %2981 ], [ %148, %2974 ], [ %148, %296 ], [ %148, %264 ], [ %148, %2993 ], [ %148, %5018 ], [ %148, %147 ], [ %5231, %5230 ]
  store i8 0, i8* %127, align 2
  br label %5242

5236:                                             ; preds = %477, %476
  store i8 1, i8* %127, align 2
  %5237 = load i64, i64* %128, align 8
  %5238 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  store i64 %5237, i64* %5238, align 8
  %5239 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  store i64 %100, i64* %5239, align 8
  %5240 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %148, i64 0, i32 0
  %5241 = load i64, i64* %5240, align 8
  store i64 %5241, i64* %128, align 8
  br label %5242

5242:                                             ; preds = %5234, %5236
  %5243 = phi %"struct.icu_69::REStackFrame"* [ %5235, %5234 ], [ %148, %5236 ]
  %5244 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 26
  store %"struct.icu_69::REStackFrame"* %5243, %"struct.icu_69::REStackFrame"** %5244, align 8
  br label %5245

5245:                                             ; preds = %96, %5242, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6912RegexMatcher5groupER10UErrorCode(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::RegexMatcher"* nocapture readonly, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  tail call void @_ZNK6icu_6912RegexMatcher5groupEiR10UErrorCode(%"class.icu_69::UnicodeString"* sret %0, %"class.icu_69::RegexMatcher"* %1, i32 0, i32* dereferenceable(4) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6912RegexMatcher5groupEiR10UErrorCode(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::RegexMatcher"* nocapture readonly, i32, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 64, i1 false)
  %6 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %7, align 8
  %8 = load i32, i32* %3, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %88

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %1, i64 0, i32 39
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  store i32 %12, i32* %3, align 4
  br label %88

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %1, i64 0, i32 18
  %17 = load i8, i8* %16, align 2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  store i32 66306, i32* %3, align 4
  br label %88

20:                                               ; preds = %15
  %21 = icmp slt i32 %2, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %1, i64 0, i32 1
  %24 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %23, align 8
  %25 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %24, i64 0, i32 12
  %26 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %25, align 8
  %27 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %28, %2
  br i1 %29, label %30, label %31

30:                                               ; preds = %22, %20
  store i32 8, i32* %3, align 4
  br label %88

31:                                               ; preds = %22
  %32 = icmp eq i32 %2, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = icmp sgt i32 %28, 0
  br i1 %34, label %42, label %38

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %1, i64 0, i32 19
  %37 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %1, i64 0, i32 20
  br label %67

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %1, i64 0, i32 26
  %40 = load %"struct.icu_69::REStackFrame"*, %"struct.icu_69::REStackFrame"** %39, align 8
  %41 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %40, i64 0, i32 2, i64 0
  br label %61

42:                                               ; preds = %33
  %43 = add nsw i32 %2, -1
  %44 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %26, i64 0, i32 4
  %45 = load i32*, i32** %44, align 8
  %46 = sext i32 %43 to i64
  %47 = getelementptr inbounds i32, i32* %45, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %1, i64 0, i32 26
  %51 = load %"struct.icu_69::REStackFrame"*, %"struct.icu_69::REStackFrame"** %50, align 8
  %52 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %51, i64 0, i32 2, i64 %49
  %53 = add nsw i32 %2, -1
  %54 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %26, i64 0, i32 4
  %55 = load i32*, i32** %54, align 8
  %56 = sext i32 %53 to i64
  %57 = getelementptr inbounds i32, i32* %55, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = add i32 %58, 1
  %60 = sext i32 %59 to i64
  br label %61

61:                                               ; preds = %38, %42
  %62 = phi i64* [ %52, %42 ], [ %41, %38 ]
  %63 = phi i64 [ %60, %42 ], [ 1, %38 ]
  %64 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %1, i64 0, i32 26
  %65 = load %"struct.icu_69::REStackFrame"*, %"struct.icu_69::REStackFrame"** %64, align 8
  %66 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %65, i64 0, i32 2, i64 %63
  br label %67

67:                                               ; preds = %35, %61
  %68 = phi i64* [ %36, %35 ], [ %62, %61 ]
  %69 = phi i64* [ %37, %35 ], [ %66, %61 ]
  %70 = load i64, i64* %68, align 8
  %71 = load i64, i64* %69, align 8
  %72 = icmp eq i64 %70, -1
  %73 = icmp eq i64 %70, %71
  %74 = or i1 %73, %72
  br i1 %74, label %88, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %1, i64 0, i32 4
  %77 = load %struct.UText*, %struct.UText** %76, align 8
  %78 = tail call i32 @utext_extract_69(%struct.UText* %77, i64 %70, i64 %71, i16* null, i32 0, i32* %3) #12
  %79 = load i32, i32* %3, align 4
  %80 = icmp eq i32 %79, 15
  br i1 %80, label %81, label %88

81:                                               ; preds = %75
  store i32 0, i32* %3, align 4
  %82 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %0, i32 %78) #12
  %83 = icmp eq i16* %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  store i32 7, i32* %3, align 4
  br label %88

85:                                               ; preds = %81
  %86 = load %struct.UText*, %struct.UText** %76, align 8
  %87 = tail call i32 @utext_extract_69(%struct.UText* %86, i64 %70, i64 %71, i16* nonnull %82, i32 %78, i32* %3) #12
  tail call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %0, i32 %87) #12
  br label %88

88:                                               ; preds = %30, %19, %14, %4, %67, %84, %85, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UText* @_ZNK6icu_6912RegexMatcher5groupEP5UTextRlR10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, %struct.UText*, i64* nocapture dereferenceable(8), i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = tail call %struct.UText* @_ZNK6icu_6912RegexMatcher5groupEiP5UTextRlR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 0, %struct.UText* %1, i64* dereferenceable(8) %2, i32* dereferenceable(4) %3)
  ret %struct.UText* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UText* @_ZNK6icu_6912RegexMatcher5groupEiP5UTextRlR10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, i32, %struct.UText*, i64* nocapture dereferenceable(8), i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  store i64 0, i64* %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %96

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  store i32 %10, i32* %4, align 4
  br label %96

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %15 = load i8, i8* %14, align 2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  store i32 66306, i32* %4, align 4
  br label %96

18:                                               ; preds = %13
  %19 = icmp slt i32 %1, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %22 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %21, align 8
  %23 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %22, i64 0, i32 12
  %24 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %23, align 8
  %25 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %26, %1
  br i1 %27, label %28, label %29

28:                                               ; preds = %20, %18
  store i32 8, i32* %4, align 4
  br label %96

29:                                               ; preds = %20
  %30 = icmp eq i32 %1, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %33 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  br label %60

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %36 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %35, align 8
  %37 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %36, i64 0, i32 12
  %38 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %37, align 8
  %39 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp sgt i32 %40, 0
  %42 = icmp sge i32 %40, %1
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %51

44:                                               ; preds = %34
  %45 = add nsw i32 %1, -1
  %46 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %38, i64 0, i32 4
  %47 = load i32*, i32** %46, align 8
  %48 = sext i32 %45 to i64
  %49 = getelementptr inbounds i32, i32* %47, i64 %48
  %50 = load i32, i32* %49, align 4
  br label %51

51:                                               ; preds = %34, %44
  %52 = phi i32 [ %50, %44 ], [ 0, %34 ]
  %53 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 26
  %54 = load %"struct.icu_69::REStackFrame"*, %"struct.icu_69::REStackFrame"** %53, align 8
  %55 = sext i32 %52 to i64
  %56 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %54, i64 0, i32 2, i64 %55
  %57 = add nsw i32 %52, 1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %54, i64 0, i32 2, i64 %58
  br label %60

60:                                               ; preds = %51, %31
  %61 = phi i64* [ %32, %31 ], [ %56, %51 ]
  %62 = phi i64* [ %33, %31 ], [ %59, %51 ]
  %63 = load i64, i64* %61, align 8
  %64 = icmp slt i64 %63, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %67 = load %struct.UText*, %struct.UText** %66, align 8
  %68 = tail call %struct.UText* @utext_clone_69(%struct.UText* %2, %struct.UText* %67, i8 signext 0, i8 signext 1, i32* %4) #12
  br label %96

69:                                               ; preds = %60
  %70 = load i64, i64* %62, align 8
  %71 = sub nsw i64 %70, %63
  store i64 %71, i64* %3, align 8
  %72 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %73 = load %struct.UText*, %struct.UText** %72, align 8
  %74 = tail call %struct.UText* @utext_clone_69(%struct.UText* %2, %struct.UText* %73, i8 signext 0, i8 signext 1, i32* %4) #12
  %75 = icmp eq %struct.UText* %74, null
  br i1 %75, label %96, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %struct.UText, %struct.UText* %74, i64 0, i32 7
  %78 = load i64, i64* %77, align 8
  %79 = sub nsw i64 %63, %78
  %80 = icmp sgt i64 %79, -1
  br i1 %80, label %81, label %95

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.UText, %struct.UText* %74, i64 0, i32 6
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = icmp slt i64 %79, %84
  br i1 %85, label %86, label %95

86:                                               ; preds = %81
  %87 = getelementptr inbounds %struct.UText, %struct.UText* %74, i64 0, i32 10
  %88 = load i16*, i16** %87, align 8
  %89 = getelementptr inbounds i16, i16* %88, i64 %79
  %90 = load i16, i16* %89, align 2
  %91 = icmp ult i16 %90, -9216
  br i1 %91, label %92, label %95

92:                                               ; preds = %86
  %93 = trunc i64 %79 to i32
  %94 = getelementptr inbounds %struct.UText, %struct.UText* %74, i64 0, i32 8
  store i32 %93, i32* %94, align 8
  br label %96

95:                                               ; preds = %86, %81, %76
  tail call void @utext_setNativeIndex_69(%struct.UText* nonnull %74, i64 %63) #12
  br label %96

96:                                               ; preds = %12, %28, %17, %65, %92, %95, %69, %5
  %97 = phi %struct.UText* [ %2, %5 ], [ %68, %65 ], [ %74, %92 ], [ %74, %95 ], [ null, %69 ], [ %2, %17 ], [ %2, %28 ], [ %2, %12 ]
  ret %struct.UText* %97
}

declare %struct.UText* @utext_clone_69(%struct.UText*, %struct.UText*, i8 signext, i8 signext, i32*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZNK6icu_6912RegexMatcher7start64EiR10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, i32, i32* nocapture dereferenceable(4)) unnamed_addr #5 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %49

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 %8, i32* %2, align 4
  br label %49

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %13 = load i8, i8* %12, align 2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  store i32 66306, i32* %2, align 4
  br label %49

16:                                               ; preds = %11
  %17 = icmp slt i32 %1, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %20 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %19, align 8
  %21 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %20, i64 0, i32 12
  %22 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %21, align 8
  %23 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, %1
  br i1 %25, label %26, label %27

26:                                               ; preds = %18, %16
  store i32 8, i32* %2, align 4
  br label %49

27:                                               ; preds = %18
  %28 = icmp eq i32 %1, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  br label %46

31:                                               ; preds = %27
  %32 = icmp sgt i32 %24, 0
  br i1 %32, label %33, label %41

33:                                               ; preds = %31
  %34 = add nsw i32 %1, -1
  %35 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %22, i64 0, i32 4
  %36 = load i32*, i32** %35, align 8
  %37 = sext i32 %34 to i64
  %38 = getelementptr inbounds i32, i32* %36, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  br label %41

41:                                               ; preds = %31, %33
  %42 = phi i64 [ %40, %33 ], [ 0, %31 ]
  %43 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 26
  %44 = load %"struct.icu_69::REStackFrame"*, %"struct.icu_69::REStackFrame"** %43, align 8
  %45 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %44, i64 0, i32 2, i64 %42
  br label %46

46:                                               ; preds = %41, %29
  %47 = phi i64* [ %30, %29 ], [ %45, %41 ]
  %48 = load i64, i64* %47, align 8
  br label %49

49:                                               ; preds = %3, %46, %26, %15, %10
  %50 = phi i64 [ -1, %10 ], [ -1, %15 ], [ -1, %26 ], [ %48, %46 ], [ -1, %3 ]
  ret i64 %50
}

declare i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #4

declare void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6912RegexMatcher10groupCountEv(%"class.icu_69::RegexMatcher"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %3 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %3, i64 0, i32 12
  %5 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  ret i32 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_6912RegexMatcher18hasAnchoringBoundsEv(%"class.icu_69::RegexMatcher"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 17
  %3 = load i8, i8* %2, align 1
  ret i8 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_6912RegexMatcher20hasTransparentBoundsEv(%"class.icu_69::RegexMatcher"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 16
  %3 = load i8, i8* %2, align 8
  ret i8 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_6912RegexMatcher6hitEndEv(%"class.icu_69::RegexMatcher"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  %3 = load i8, i8* %2, align 8
  ret i8 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6912RegexMatcher5inputEv(%"class.icu_69::RegexMatcher"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 3
  %4 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %3, align 8
  %5 = icmp eq %"class.icu_69::UnicodeString"* %4, null
  br i1 %5, label %6, label %33

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #12
  store i32 0, i32* %2, align 4
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %9 = load %struct.UText*, %struct.UText** %8, align 8
  %10 = getelementptr inbounds %struct.UText, %struct.UText* %9, i64 0, i32 11
  %11 = load %struct.UTextFuncs*, %struct.UTextFuncs** %10, align 8
  %12 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %11, i64 0, i32 11
  %13 = load i32 (%struct.UText*, i64)*, i32 (%struct.UText*, i64)** %12, align 8
  %14 = icmp eq i32 (%struct.UText*, i64)* %13, null
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %16 = load i64, i64* %15, align 8
  br i1 %14, label %17, label %19

17:                                               ; preds = %6
  %18 = trunc i64 %16 to i32
  br label %21

19:                                               ; preds = %6
  %20 = call i32 @utext_extract_69(%struct.UText* %9, i64 0, i64 %16, i16* null, i32 0, i32* nonnull %2) #12
  store i32 0, i32* %2, align 4
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi i32 [ %18, %17 ], [ %20, %19 ]
  %23 = call i8* @_ZN6icu_697UMemorynwEm(i64 64) #12
  %24 = icmp eq i8* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast i8* %23 to %"class.icu_69::UnicodeString"*
  call void @_ZN6icu_6913UnicodeStringC1Eiii(%"class.icu_69::UnicodeString"* nonnull %26, i32 %22, i32 0, i32 0) #12
  br label %27

27:                                               ; preds = %25, %21
  %28 = phi %"class.icu_69::UnicodeString"* [ %26, %25 ], [ null, %21 ]
  %29 = call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %28, i32 %22) #12
  %30 = load %struct.UText*, %struct.UText** %8, align 8
  %31 = load i64, i64* %15, align 8
  %32 = call i32 @utext_extract_69(%struct.UText* %30, i64 0, i64 %31, i16* %29, i32 %22, i32* nonnull %2) #12
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %28, i32 %22) #12
  store %"class.icu_69::UnicodeString"* %28, %"class.icu_69::UnicodeString"** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #12
  br label %33

33:                                               ; preds = %1, %27
  %34 = phi %"class.icu_69::UnicodeString"* [ %4, %1 ], [ %28, %27 ]
  ret %"class.icu_69::UnicodeString"* %34
}

declare void @_ZN6icu_6913UnicodeStringC1Eiii(%"class.icu_69::UnicodeString"*, i32, i32, i32) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.UText* @_ZNK6icu_6912RegexMatcher9inputTextEv(%"class.icu_69::RegexMatcher"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %3 = load %struct.UText*, %struct.UText** %2, align 8
  ret %struct.UText* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UText* @_ZNK6icu_6912RegexMatcher8getInputEP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, %struct.UText*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = load i32, i32* %2, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %70

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  store i32 %9, i32* %2, align 4
  br label %70

12:                                               ; preds = %7
  %13 = icmp eq %struct.UText* %1, null
  %14 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %15 = load %struct.UText*, %struct.UText** %14, align 8
  br i1 %13, label %68, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.UText, %struct.UText* %15, i64 0, i32 7
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %39

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.UText, %struct.UText* %15, i64 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  br i1 %25, label %26, label %39

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.UText, %struct.UText* %15, i64 0, i32 6
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = icmp eq i64 %22, %29
  br i1 %30, label %31, label %39

31:                                               ; preds = %26
  %32 = tail call i64 @utext_nativeLength_69(%struct.UText* nonnull %1) #12
  %33 = load %struct.UText*, %struct.UText** %14, align 8
  %34 = getelementptr inbounds %struct.UText, %struct.UText* %33, i64 0, i32 10
  %35 = load i16*, i16** %34, align 8
  %36 = load i64, i64* %21, align 8
  %37 = trunc i64 %36 to i32
  %38 = tail call i32 @utext_replace_69(%struct.UText* nonnull %1, i64 0, i64 %32, i16* %35, i32 %37, i32* %2) #12
  br label %70

39:                                               ; preds = %26, %20, %16
  %40 = getelementptr inbounds %struct.UText, %struct.UText* %15, i64 0, i32 11
  %41 = load %struct.UTextFuncs*, %struct.UTextFuncs** %40, align 8
  %42 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %41, i64 0, i32 11
  %43 = load i32 (%struct.UText*, i64)*, i32 (%struct.UText*, i64)** %42, align 8
  %44 = icmp eq i32 (%struct.UText*, i64)* %43, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  br label %54

49:                                               ; preds = %39
  %50 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #12
  store i32 0, i32* %4, align 4
  %51 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %52 = load i64, i64* %51, align 8
  %53 = call i32 @utext_extract_69(%struct.UText* %15, i64 0, i64 %52, i16* null, i32 0, i32* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #12
  br label %54

54:                                               ; preds = %49, %45
  %55 = phi i32 [ %48, %45 ], [ %53, %49 ]
  %56 = sext i32 %55 to i64
  %57 = shl nsw i64 %56, 1
  %58 = call noalias i8* @uprv_malloc_69(i64 %57) #11
  %59 = bitcast i8* %58 to i16*
  %60 = icmp eq i8* %58, null
  br i1 %60, label %70, label %61

61:                                               ; preds = %54
  store i32 0, i32* %2, align 4
  %62 = load %struct.UText*, %struct.UText** %14, align 8
  %63 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %64 = load i64, i64* %63, align 8
  %65 = call i32 @utext_extract_69(%struct.UText* %62, i64 0, i64 %64, i16* nonnull %59, i32 %55, i32* %2) #12
  store i32 0, i32* %2, align 4
  %66 = call i64 @utext_nativeLength_69(%struct.UText* nonnull %1) #12
  %67 = call i32 @utext_replace_69(%struct.UText* nonnull %1, i64 0, i64 %66, i16* nonnull %59, i32 %55, i32* %2) #12
  call void @uprv_free_69(i8* nonnull %58) #12
  br label %70

68:                                               ; preds = %12
  %69 = tail call %struct.UText* @utext_clone_69(%struct.UText* null, %struct.UText* %15, i8 signext 0, i8 signext 1, i32* %2) #12
  br label %70

70:                                               ; preds = %31, %61, %54, %3, %68, %11
  %71 = phi %struct.UText* [ %1, %11 ], [ %69, %68 ], [ %1, %3 ], [ %1, %54 ], [ %1, %61 ], [ %1, %31 ]
  ret %struct.UText* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6912RegexMatcher9lookingAtER10UErrorCode(%"class.icu_69::RegexMatcher"*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %104

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  store i32 %7, i32* %1, align 4
  br label %104

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 37
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %67, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %16 = load %struct.UText*, %struct.UText** %15, align 8
  %17 = tail call i64 @utext_nativeLength_69(%struct.UText* %16) #12
  %18 = getelementptr inbounds %struct.UText, %struct.UText* %16, i64 0, i32 6
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = icmp eq i64 %17, %20
  br i1 %21, label %77, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.UText, %struct.UText* %16, i64 0, i32 13
  %24 = bitcast i8** %23 to %"class.icu_69::UnicodeString"**
  %25 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %24, align 8
  %26 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = load i16, i16* %26, align 8
  %28 = icmp slt i16 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = lshr i16 %27, 5
  %31 = zext i16 %30 to i32
  br label %35

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %32, %29
  %36 = phi i32 [ %31, %29 ], [ %34, %32 ]
  %37 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1
  %38 = sext i16 %27 to i32
  %39 = and i32 %38, 17
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %50

41:                                               ; preds = %35
  %42 = and i32 %38, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %37 to %struct.anon*
  %46 = getelementptr inbounds %struct.anon, %struct.anon* %45, i64 0, i32 1, i64 0
  br label %50

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1, i32 0, i32 3
  %49 = load i16*, i16** %48, align 8
  br label %50

50:                                               ; preds = %47, %44, %35
  %51 = phi i16* [ %46, %44 ], [ %49, %47 ], [ null, %35 ]
  %52 = getelementptr inbounds %struct.UText, %struct.UText* %16, i64 0, i32 10
  store i16* %51, i16** %52, align 8
  %53 = getelementptr inbounds %struct.UText, %struct.UText* %16, i64 0, i32 9
  store i32 %36, i32* %53, align 4
  %54 = sext i32 %36 to i64
  %55 = getelementptr inbounds %struct.UText, %struct.UText* %16, i64 0, i32 4
  store i64 %54, i64* %55, align 8
  store i32 %36, i32* %18, align 4
  %56 = load %struct.UText*, %struct.UText** %15, align 8
  %57 = tail call i64 @utext_nativeLength_69(%struct.UText* %56) #12
  %58 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %57, i64* %60, align 8
  %61 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %57, i64* %62, align 8
  %63 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %63, align 8
  %64 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %57, i64* %64, align 8
  %65 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %57, i64* %66, align 8
  br label %67

67:                                               ; preds = %10, %50
  %68 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %69 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %70 = bitcast i64* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #12
  %71 = bitcast i64* %69 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %71, align 8
  %72 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %72, align 2
  %73 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %73, align 8
  %74 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %74, align 1
  %75 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %75, align 4
  %76 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %76, align 8
  br label %77

77:                                               ; preds = %67, %14
  %78 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %79 = load %struct.UText*, %struct.UText** %78, align 8
  %80 = getelementptr inbounds %struct.UText, %struct.UText* %79, i64 0, i32 7
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %98

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %struct.UText, %struct.UText* %79, i64 0, i32 4
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %85, %87
  br i1 %88, label %89, label %98

89:                                               ; preds = %83
  %90 = getelementptr inbounds %struct.UText, %struct.UText* %79, i64 0, i32 6
  %91 = load i32, i32* %90, align 4
  %92 = sext i32 %91 to i64
  %93 = icmp eq i64 %85, %92
  br i1 %93, label %94, label %98

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  %96 = load i64, i64* %95, align 8
  %97 = trunc i64 %96 to i32
  tail call void @_ZN6icu_6912RegexMatcher12MatchChunkAtEiaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 %97, i8 signext 0, i32* dereferenceable(4) %1)
  br label %101

98:                                               ; preds = %89, %83, %77
  %99 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  %100 = load i64, i64* %99, align 8
  tail call void @_ZN6icu_6912RegexMatcher7MatchAtElaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i64 %100, i8 signext 0, i32* dereferenceable(4) %1)
  br label %101

101:                                              ; preds = %98, %94
  %102 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %103 = load i8, i8* %102, align 2
  br label %104

104:                                              ; preds = %2, %101, %9
  %105 = phi i8 [ 0, %9 ], [ %103, %101 ], [ 0, %2 ]
  ret i8 %105
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_6912RegexMatcher19resetPreserveRegionEv(%"class.icu_69::RegexMatcher"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  %5 = bitcast i64* %3 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %6, align 2
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6912RegexMatcher9lookingAtElR10UErrorCode(%"class.icu_69::RegexMatcher"*, i64, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %112

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 %8, i32* %2, align 4
  br label %112

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %14, i64* %19, align 8
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %24 = bitcast i64* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #12
  %25 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %26, align 2
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %30, align 8
  %31 = icmp slt i64 %1, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %11
  store i32 8, i32* %2, align 4
  br label %112

33:                                               ; preds = %11
  %34 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 37
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %84, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %39 = load %struct.UText*, %struct.UText** %38, align 8
  %40 = tail call i64 @utext_nativeLength_69(%struct.UText* %39) #12
  %41 = getelementptr inbounds %struct.UText, %struct.UText* %39, i64 0, i32 6
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = icmp eq i64 %40, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %37
  %46 = load i64, i64* %16, align 8
  br label %84

47:                                               ; preds = %37
  %48 = getelementptr inbounds %struct.UText, %struct.UText* %39, i64 0, i32 13
  %49 = bitcast i8** %48 to %"class.icu_69::UnicodeString"**
  %50 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %49, align 8
  %51 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %50, i64 0, i32 1, i32 0, i32 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp slt i16 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = lshr i16 %52, 5
  %56 = zext i16 %55 to i32
  br label %60

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %50, i64 0, i32 1, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  br label %60

60:                                               ; preds = %57, %54
  %61 = phi i32 [ %56, %54 ], [ %59, %57 ]
  %62 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %50, i64 0, i32 1
  %63 = sext i16 %52 to i32
  %64 = and i32 %63, 17
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %75

66:                                               ; preds = %60
  %67 = and i32 %63, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %62 to %struct.anon*
  %71 = getelementptr inbounds %struct.anon, %struct.anon* %70, i64 0, i32 1, i64 0
  br label %75

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %50, i64 0, i32 1, i32 0, i32 3
  %74 = load i16*, i16** %73, align 8
  br label %75

75:                                               ; preds = %72, %69, %60
  %76 = phi i16* [ %71, %69 ], [ %74, %72 ], [ null, %60 ]
  %77 = getelementptr inbounds %struct.UText, %struct.UText* %39, i64 0, i32 10
  store i16* %76, i16** %77, align 8
  %78 = getelementptr inbounds %struct.UText, %struct.UText* %39, i64 0, i32 9
  store i32 %61, i32* %78, align 4
  %79 = sext i32 %61 to i64
  %80 = getelementptr inbounds %struct.UText, %struct.UText* %39, i64 0, i32 4
  store i64 %79, i64* %80, align 8
  store i32 %61, i32* %41, align 4
  %81 = load %struct.UText*, %struct.UText** %38, align 8
  %82 = tail call i64 @utext_nativeLength_69(%struct.UText* %81) #12
  store i64 %82, i64* %13, align 8
  store i64 0, i64* %12, align 8
  store i64 %82, i64* %15, align 8
  store i64 0, i64* %16, align 8
  store i64 %82, i64* %17, align 8
  store i64 0, i64* %18, align 8
  store i64 %82, i64* %19, align 8
  store i64 0, i64* %20, align 8
  store i64 %82, i64* %21, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #12
  %83 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %83, align 8
  store i8 0, i8* %26, align 2
  store i8 0, i8* %27, align 8
  store i8 0, i8* %28, align 1
  store i32 0, i32* %29, align 4
  store i32 10000, i32* %30, align 8
  br label %84

84:                                               ; preds = %45, %33, %75
  %85 = phi i64 [ %46, %45 ], [ 0, %33 ], [ 0, %75 ]
  %86 = icmp sgt i64 %85, %1
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = load i64, i64* %17, align 8
  %89 = icmp slt i64 %88, %1
  br i1 %89, label %90, label %91

90:                                               ; preds = %87, %84
  store i32 8, i32* %2, align 4
  br label %112

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %93 = load %struct.UText*, %struct.UText** %92, align 8
  %94 = getelementptr inbounds %struct.UText, %struct.UText* %93, i64 0, i32 7
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %109

97:                                               ; preds = %91
  %98 = load i64, i64* %13, align 8
  %99 = getelementptr inbounds %struct.UText, %struct.UText* %93, i64 0, i32 4
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %98, %100
  br i1 %101, label %102, label %109

102:                                              ; preds = %97
  %103 = getelementptr inbounds %struct.UText, %struct.UText* %93, i64 0, i32 6
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = icmp eq i64 %98, %105
  br i1 %106, label %107, label %109

107:                                              ; preds = %102
  %108 = trunc i64 %1 to i32
  tail call void @_ZN6icu_6912RegexMatcher12MatchChunkAtEiaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 %108, i8 signext 0, i32* dereferenceable(4) %2)
  br label %110

109:                                              ; preds = %102, %97, %91
  tail call void @_ZN6icu_6912RegexMatcher7MatchAtElaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i64 %1, i8 signext 0, i32* dereferenceable(4) %2)
  br label %110

110:                                              ; preds = %109, %107
  %111 = load i8, i8* %26, align 2
  br label %112

112:                                              ; preds = %90, %110, %3, %32, %10
  %113 = phi i8 [ 0, %10 ], [ 0, %32 ], [ 0, %3 ], [ 0, %90 ], [ %111, %110 ]
  ret i8 %113
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6912RegexMatcher7matchesER10UErrorCode(%"class.icu_69::RegexMatcher"*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %104

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  store i32 %7, i32* %1, align 4
  br label %104

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 37
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %67, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %16 = load %struct.UText*, %struct.UText** %15, align 8
  %17 = tail call i64 @utext_nativeLength_69(%struct.UText* %16) #12
  %18 = getelementptr inbounds %struct.UText, %struct.UText* %16, i64 0, i32 6
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = icmp eq i64 %17, %20
  br i1 %21, label %77, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.UText, %struct.UText* %16, i64 0, i32 13
  %24 = bitcast i8** %23 to %"class.icu_69::UnicodeString"**
  %25 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %24, align 8
  %26 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = load i16, i16* %26, align 8
  %28 = icmp slt i16 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = lshr i16 %27, 5
  %31 = zext i16 %30 to i32
  br label %35

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %32, %29
  %36 = phi i32 [ %31, %29 ], [ %34, %32 ]
  %37 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1
  %38 = sext i16 %27 to i32
  %39 = and i32 %38, 17
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %50

41:                                               ; preds = %35
  %42 = and i32 %38, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %37 to %struct.anon*
  %46 = getelementptr inbounds %struct.anon, %struct.anon* %45, i64 0, i32 1, i64 0
  br label %50

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1, i32 0, i32 3
  %49 = load i16*, i16** %48, align 8
  br label %50

50:                                               ; preds = %47, %44, %35
  %51 = phi i16* [ %46, %44 ], [ %49, %47 ], [ null, %35 ]
  %52 = getelementptr inbounds %struct.UText, %struct.UText* %16, i64 0, i32 10
  store i16* %51, i16** %52, align 8
  %53 = getelementptr inbounds %struct.UText, %struct.UText* %16, i64 0, i32 9
  store i32 %36, i32* %53, align 4
  %54 = sext i32 %36 to i64
  %55 = getelementptr inbounds %struct.UText, %struct.UText* %16, i64 0, i32 4
  store i64 %54, i64* %55, align 8
  store i32 %36, i32* %18, align 4
  %56 = load %struct.UText*, %struct.UText** %15, align 8
  %57 = tail call i64 @utext_nativeLength_69(%struct.UText* %56) #12
  %58 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %57, i64* %60, align 8
  %61 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %57, i64* %62, align 8
  %63 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %63, align 8
  %64 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %57, i64* %64, align 8
  %65 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %57, i64* %66, align 8
  br label %67

67:                                               ; preds = %10, %50
  %68 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %69 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %70 = bitcast i64* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #12
  %71 = bitcast i64* %69 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %71, align 8
  %72 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %72, align 2
  %73 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %73, align 8
  %74 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %74, align 1
  %75 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %75, align 4
  %76 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %76, align 8
  br label %77

77:                                               ; preds = %67, %14
  %78 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %79 = load %struct.UText*, %struct.UText** %78, align 8
  %80 = getelementptr inbounds %struct.UText, %struct.UText* %79, i64 0, i32 7
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %98

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %struct.UText, %struct.UText* %79, i64 0, i32 4
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %85, %87
  br i1 %88, label %89, label %98

89:                                               ; preds = %83
  %90 = getelementptr inbounds %struct.UText, %struct.UText* %79, i64 0, i32 6
  %91 = load i32, i32* %90, align 4
  %92 = sext i32 %91 to i64
  %93 = icmp eq i64 %85, %92
  br i1 %93, label %94, label %98

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  %96 = load i64, i64* %95, align 8
  %97 = trunc i64 %96 to i32
  tail call void @_ZN6icu_6912RegexMatcher12MatchChunkAtEiaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 %97, i8 signext 1, i32* dereferenceable(4) %1)
  br label %101

98:                                               ; preds = %89, %83, %77
  %99 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  %100 = load i64, i64* %99, align 8
  tail call void @_ZN6icu_6912RegexMatcher7MatchAtElaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i64 %100, i8 signext 1, i32* dereferenceable(4) %1)
  br label %101

101:                                              ; preds = %98, %94
  %102 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %103 = load i8, i8* %102, align 2
  br label %104

104:                                              ; preds = %2, %101, %9
  %105 = phi i8 [ 0, %9 ], [ %103, %101 ], [ 0, %2 ]
  ret i8 %105
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6912RegexMatcher7matchesElR10UErrorCode(%"class.icu_69::RegexMatcher"*, i64, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %112

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 %8, i32* %2, align 4
  br label %112

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %14, i64* %19, align 8
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %24 = bitcast i64* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #12
  %25 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %26, align 2
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %30, align 8
  %31 = icmp slt i64 %1, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %11
  store i32 8, i32* %2, align 4
  br label %112

33:                                               ; preds = %11
  %34 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 37
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %84, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %39 = load %struct.UText*, %struct.UText** %38, align 8
  %40 = tail call i64 @utext_nativeLength_69(%struct.UText* %39) #12
  %41 = getelementptr inbounds %struct.UText, %struct.UText* %39, i64 0, i32 6
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = icmp eq i64 %40, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %37
  %46 = load i64, i64* %16, align 8
  br label %84

47:                                               ; preds = %37
  %48 = getelementptr inbounds %struct.UText, %struct.UText* %39, i64 0, i32 13
  %49 = bitcast i8** %48 to %"class.icu_69::UnicodeString"**
  %50 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %49, align 8
  %51 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %50, i64 0, i32 1, i32 0, i32 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp slt i16 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = lshr i16 %52, 5
  %56 = zext i16 %55 to i32
  br label %60

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %50, i64 0, i32 1, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  br label %60

60:                                               ; preds = %57, %54
  %61 = phi i32 [ %56, %54 ], [ %59, %57 ]
  %62 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %50, i64 0, i32 1
  %63 = sext i16 %52 to i32
  %64 = and i32 %63, 17
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %75

66:                                               ; preds = %60
  %67 = and i32 %63, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %62 to %struct.anon*
  %71 = getelementptr inbounds %struct.anon, %struct.anon* %70, i64 0, i32 1, i64 0
  br label %75

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %50, i64 0, i32 1, i32 0, i32 3
  %74 = load i16*, i16** %73, align 8
  br label %75

75:                                               ; preds = %72, %69, %60
  %76 = phi i16* [ %71, %69 ], [ %74, %72 ], [ null, %60 ]
  %77 = getelementptr inbounds %struct.UText, %struct.UText* %39, i64 0, i32 10
  store i16* %76, i16** %77, align 8
  %78 = getelementptr inbounds %struct.UText, %struct.UText* %39, i64 0, i32 9
  store i32 %61, i32* %78, align 4
  %79 = sext i32 %61 to i64
  %80 = getelementptr inbounds %struct.UText, %struct.UText* %39, i64 0, i32 4
  store i64 %79, i64* %80, align 8
  store i32 %61, i32* %41, align 4
  %81 = load %struct.UText*, %struct.UText** %38, align 8
  %82 = tail call i64 @utext_nativeLength_69(%struct.UText* %81) #12
  store i64 %82, i64* %13, align 8
  store i64 0, i64* %12, align 8
  store i64 %82, i64* %15, align 8
  store i64 0, i64* %16, align 8
  store i64 %82, i64* %17, align 8
  store i64 0, i64* %18, align 8
  store i64 %82, i64* %19, align 8
  store i64 0, i64* %20, align 8
  store i64 %82, i64* %21, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #12
  %83 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %83, align 8
  store i8 0, i8* %26, align 2
  store i8 0, i8* %27, align 8
  store i8 0, i8* %28, align 1
  store i32 0, i32* %29, align 4
  store i32 10000, i32* %30, align 8
  br label %84

84:                                               ; preds = %45, %33, %75
  %85 = phi i64 [ %46, %45 ], [ 0, %33 ], [ 0, %75 ]
  %86 = icmp sgt i64 %85, %1
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = load i64, i64* %17, align 8
  %89 = icmp slt i64 %88, %1
  br i1 %89, label %90, label %91

90:                                               ; preds = %87, %84
  store i32 8, i32* %2, align 4
  br label %112

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %93 = load %struct.UText*, %struct.UText** %92, align 8
  %94 = getelementptr inbounds %struct.UText, %struct.UText* %93, i64 0, i32 7
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %109

97:                                               ; preds = %91
  %98 = load i64, i64* %13, align 8
  %99 = getelementptr inbounds %struct.UText, %struct.UText* %93, i64 0, i32 4
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %98, %100
  br i1 %101, label %102, label %109

102:                                              ; preds = %97
  %103 = getelementptr inbounds %struct.UText, %struct.UText* %93, i64 0, i32 6
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = icmp eq i64 %98, %105
  br i1 %106, label %107, label %109

107:                                              ; preds = %102
  %108 = trunc i64 %1 to i32
  tail call void @_ZN6icu_6912RegexMatcher12MatchChunkAtEiaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32 %108, i8 signext 1, i32* dereferenceable(4) %2)
  br label %110

109:                                              ; preds = %102, %97, %91
  tail call void @_ZN6icu_6912RegexMatcher7MatchAtElaR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i64 %1, i8 signext 1, i32* dereferenceable(4) %2)
  br label %110

110:                                              ; preds = %109, %107
  %111 = load i8, i8* %26, align 2
  br label %112

112:                                              ; preds = %90, %110, %3, %32, %10
  %113 = phi i8 [ 0, %10 ], [ 0, %32 ], [ 0, %3 ], [ 0, %90 ], [ %111, %110 ]
  ret i8 %113
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(200) %"class.icu_69::RegexPattern"* @_ZNK6icu_6912RegexMatcher7patternEv(%"class.icu_69::RegexMatcher"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %3 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %2, align 8
  ret %"class.icu_69::RegexPattern"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher6regionElllR10UErrorCode(%"class.icu_69::RegexMatcher"* returned, i64, i64, i64, i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %68

8:                                                ; preds = %5
  %9 = icmp sgt i64 %1, %2
  %10 = or i64 %2, %1
  %11 = icmp slt i64 %10, 0
  %12 = or i1 %9, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  store i32 1, i32* %4, align 4
  br label %14

14:                                               ; preds = %8, %13
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %16 = load i64, i64* %15, align 8
  %17 = icmp slt i64 %16, %1
  %18 = icmp slt i64 %16, %2
  %19 = or i1 %17, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %14
  store i32 1, i32* %4, align 4
  br label %21

21:                                               ; preds = %14, %20
  %22 = icmp eq i64 %3, -1
  br i1 %22, label %23, label %33

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %24, align 8
  %25 = load i64, i64* %15, align 8
  %26 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %25, i64* %28, align 8
  %29 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %25, i64* %30, align 8
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %25, i64* %32, align 8
  br label %33

33:                                               ; preds = %21, %23
  %34 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %35 = bitcast i64* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #12
  %36 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %37 = bitcast i64* %36 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %37, align 8
  %38 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %38, align 2
  %39 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %42, align 8
  %43 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 %1, i64* %43, align 8
  %44 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %2, i64* %44, align 8
  %45 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 %1, i64* %45, align 8
  %46 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %2, i64* %46, align 8
  br i1 %22, label %54, label %47

47:                                               ; preds = %33
  %48 = icmp sgt i64 %1, %3
  %49 = icmp sgt i64 %3, %2
  %50 = or i1 %48, %49
  br i1 %50, label %51, label %52

51:                                               ; preds = %47
  store i32 8, i32* %4, align 4
  br label %52

52:                                               ; preds = %47, %51
  %53 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  store i64 %3, i64* %53, align 8
  br label %54

54:                                               ; preds = %33, %52
  %55 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 16
  %56 = load i8, i8* %55, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 %1, i64* %59, align 8
  %60 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %2, i64* %60, align 8
  br label %61

61:                                               ; preds = %54, %58
  %62 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 17
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 %1, i64* %66, align 8
  %67 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %2, i64* %67, align 8
  br label %68

68:                                               ; preds = %65, %61, %5
  ret %"class.icu_69::RegexMatcher"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher6regionEllR10UErrorCode(%"class.icu_69::RegexMatcher"* returned, i64, i64, i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %49

7:                                                ; preds = %4
  %8 = icmp sgt i64 %1, %2
  %9 = or i64 %2, %1
  %10 = icmp slt i64 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  store i32 1, i32* %3, align 4
  br label %13

13:                                               ; preds = %12, %7
  %14 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %15, %1
  %17 = icmp slt i64 %15, %2
  %18 = or i1 %16, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  store i32 1, i32* %3, align 4
  %20 = load i64, i64* %14, align 8
  br label %21

21:                                               ; preds = %19, %13
  %22 = phi i64 [ %20, %19 ], [ %15, %13 ]
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  %25 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  %26 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %22, i64* %28, align 8
  %29 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %22, i64* %30, align 8
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %32 = bitcast i64* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #12
  %33 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %34 = bitcast i64* %33 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %34, align 8
  %35 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %35, align 2
  %36 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %39, align 8
  store i64 %1, i64* %23, align 8
  store i64 %2, i64* %24, align 8
  store i64 %1, i64* %25, align 8
  store i64 %2, i64* %26, align 8
  %40 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 16
  %41 = load i8, i8* %40, align 8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %21
  store i64 %1, i64* %29, align 8
  store i64 %2, i64* %30, align 8
  br label %44

44:                                               ; preds = %43, %21
  %45 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 17
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %44
  store i64 %1, i64* %27, align 8
  store i64 %2, i64* %28, align 8
  br label %49

49:                                               ; preds = %4, %44, %48
  ret %"class.icu_69::RegexMatcher"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6912RegexMatcher9regionEndEv(%"class.icu_69::RegexMatcher"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6icu_6912RegexMatcher11regionEnd64Ev(%"class.icu_69::RegexMatcher"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6912RegexMatcher11regionStartEv(%"class.icu_69::RegexMatcher"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6icu_6912RegexMatcher13regionStart64Ev(%"class.icu_69::RegexMatcher"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcher10replaceAllERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = alloca %struct.UText, align 8
  %6 = alloca %struct.UText, align 8
  %7 = bitcast %struct.UText* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 144, i1 false)
  %8 = getelementptr inbounds %struct.UText, %struct.UText* %5, i64 0, i32 0
  store i32 878368812, i32* %8, align 8
  %9 = getelementptr inbounds %struct.UText, %struct.UText* %5, i64 0, i32 3
  store i32 144, i32* %9, align 4
  %10 = bitcast %struct.UText* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %10) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 144, i1 false)
  %11 = getelementptr inbounds %struct.UText, %struct.UText* %6, i64 0, i32 0
  store i32 878368812, i32* %11, align 8
  %12 = getelementptr inbounds %struct.UText, %struct.UText* %6, i64 0, i32 3
  store i32 144, i32* %12, align 4
  %13 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -86, i64 64, i1 false)
  %14 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %15, align 8
  %16 = load i32, i32* %3, align 4
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %18, label %24

18:                                               ; preds = %4
  %19 = call %struct.UText* @utext_openConstUnicodeString_69(%struct.UText* nonnull %5, %"class.icu_69::UnicodeString"* %2, i32* %3) #12
  %20 = call %struct.UText* @utext_openUnicodeString_69(%struct.UText* nonnull %6, %"class.icu_69::UnicodeString"* %0, i32* %3) #12
  %21 = call %struct.UText* @_ZN6icu_6912RegexMatcher10replaceAllEP5UTextS2_R10UErrorCode(%"class.icu_69::RegexMatcher"* %1, %struct.UText* nonnull %5, %struct.UText* nonnull %6, i32* dereferenceable(4) %3)
  %22 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %6) #12
  %23 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %5) #12
  br label %24

24:                                               ; preds = %18, %4
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UText* @_ZN6icu_6912RegexMatcher10replaceAllEP5UTextS2_R10UErrorCode(%"class.icu_69::RegexMatcher"*, %struct.UText*, %struct.UText*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.icu_69::UnicodeString", align 8
  %7 = alloca %struct.UText, align 8
  %8 = load i32, i32* %3, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %63

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  store i32 %12, i32* %3, align 4
  br label %63

15:                                               ; preds = %10
  %16 = icmp eq %struct.UText* %2, null
  br i1 %16, label %17, label %29

17:                                               ; preds = %15
  %18 = bitcast %"class.icu_69::UnicodeString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %18) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 64, i1 false)
  %19 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %20, align 8
  %21 = bitcast %struct.UText* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %21) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 144, i1 false)
  %22 = getelementptr inbounds %struct.UText, %struct.UText* %7, i64 0, i32 0
  store i32 878368812, i32* %22, align 8
  %23 = getelementptr inbounds %struct.UText, %struct.UText* %7, i64 0, i32 3
  store i32 144, i32* %23, align 4
  %24 = call %struct.UText* @utext_openUnicodeString_69(%struct.UText* nonnull %7, %"class.icu_69::UnicodeString"* nonnull %6, i32* %3) #12
  %25 = call %struct.UText* @utext_clone_69(%struct.UText* null, %struct.UText* nonnull %7, i8 signext 1, i8 signext 0, i32* %3) #12
  %26 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %21) #12
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %18) #12
  %27 = load i32, i32* %3, align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %63, label %29

29:                                               ; preds = %15, %17
  %30 = phi %struct.UText* [ %25, %17 ], [ %2, %15 ]
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %33, i64* %36, align 8
  %37 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %33, i64* %38, align 8
  %39 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %33, i64* %40, align 8
  %41 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %42 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %43 = bitcast i64* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #12
  %44 = bitcast i64* %42 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %44, align 8
  %45 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %45, align 2
  %46 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %49, align 8
  %50 = bitcast i32* %5 to i8*
  br label %51

51:                                               ; preds = %57, %29
  %52 = load i32, i32* %11, align 4
  %53 = icmp slt i32 %52, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #12
  store i32 0, i32* %5, align 4
  %55 = call signext i8 @_ZN6icu_6912RegexMatcher4findER10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32* nonnull dereferenceable(4) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #12
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %54
  %58 = call dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher17appendReplacementEP5UTextS2_R10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* %30, %struct.UText* %1, i32* dereferenceable(4) %3)
  %59 = load i32, i32* %3, align 4
  %60 = icmp slt i32 %59, 1
  br i1 %60, label %51, label %61

61:                                               ; preds = %51, %57, %54
  %62 = call %struct.UText* @_ZN6icu_6912RegexMatcher10appendTailEP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* %30, i32* dereferenceable(4) %3)
  br label %63

63:                                               ; preds = %61, %17, %4, %14
  %64 = phi %struct.UText* [ %2, %14 ], [ %2, %4 ], [ %25, %17 ], [ %30, %61 ]
  ret %struct.UText* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcher12replaceFirstERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = alloca %struct.UText, align 8
  %6 = alloca %struct.UText, align 8
  %7 = bitcast %struct.UText* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 144, i1 false)
  %8 = getelementptr inbounds %struct.UText, %struct.UText* %5, i64 0, i32 0
  store i32 878368812, i32* %8, align 8
  %9 = getelementptr inbounds %struct.UText, %struct.UText* %5, i64 0, i32 3
  store i32 144, i32* %9, align 4
  %10 = bitcast %struct.UText* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %10) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 144, i1 false)
  %11 = getelementptr inbounds %struct.UText, %struct.UText* %6, i64 0, i32 0
  store i32 878368812, i32* %11, align 8
  %12 = getelementptr inbounds %struct.UText, %struct.UText* %6, i64 0, i32 3
  store i32 144, i32* %12, align 4
  %13 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -86, i64 64, i1 false)
  %14 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %15, align 8
  %16 = call %struct.UText* @utext_openConstUnicodeString_69(%struct.UText* nonnull %5, %"class.icu_69::UnicodeString"* %2, i32* %3) #12
  %17 = call %struct.UText* @utext_openUnicodeString_69(%struct.UText* nonnull %6, %"class.icu_69::UnicodeString"* %0, i32* %3) #12
  %18 = call %struct.UText* @_ZN6icu_6912RegexMatcher12replaceFirstEP5UTextS2_R10UErrorCode(%"class.icu_69::RegexMatcher"* %1, %struct.UText* nonnull %5, %struct.UText* nonnull %6, i32* dereferenceable(4) %3)
  %19 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %6) #12
  %20 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UText* @_ZN6icu_6912RegexMatcher12replaceFirstEP5UTextS2_R10UErrorCode(%"class.icu_69::RegexMatcher"*, %struct.UText*, %struct.UText*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.icu_69::UnicodeString", align 8
  %7 = alloca %struct.UText, align 8
  %8 = load i32, i32* %3, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %56

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  store i32 %12, i32* %3, align 4
  br label %56

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %18, i64* %21, align 8
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %18, i64* %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %18, i64* %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %28 = bitcast i64* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #12
  %29 = bitcast i64* %27 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %30, align 2
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %34, align 8
  %35 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #12
  store i32 0, i32* %5, align 4
  %36 = call signext i8 @_ZN6icu_6912RegexMatcher4findER10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32* nonnull dereferenceable(4) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #12
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %15
  %39 = call %struct.UText* @_ZNK6icu_6912RegexMatcher8getInputEP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* %2, i32* dereferenceable(4) %3)
  br label %56

40:                                               ; preds = %15
  %41 = icmp eq %struct.UText* %2, null
  br i1 %41, label %42, label %52

42:                                               ; preds = %40
  %43 = bitcast %"class.icu_69::UnicodeString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %43) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 64, i1 false)
  %44 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %45, align 8
  %46 = bitcast %struct.UText* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %46) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 144, i1 false)
  %47 = getelementptr inbounds %struct.UText, %struct.UText* %7, i64 0, i32 0
  store i32 878368812, i32* %47, align 8
  %48 = getelementptr inbounds %struct.UText, %struct.UText* %7, i64 0, i32 3
  store i32 144, i32* %48, align 4
  %49 = call %struct.UText* @utext_openUnicodeString_69(%struct.UText* nonnull %7, %"class.icu_69::UnicodeString"* nonnull %6, i32* %3) #12
  %50 = call %struct.UText* @utext_clone_69(%struct.UText* null, %struct.UText* nonnull %7, i8 signext 1, i8 signext 0, i32* %3) #12
  %51 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %46) #12
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %43) #12
  br label %52

52:                                               ; preds = %42, %40
  %53 = phi %struct.UText* [ %50, %42 ], [ %2, %40 ]
  %54 = call dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher17appendReplacementEP5UTextS2_R10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* %53, %struct.UText* %1, i32* dereferenceable(4) %3)
  %55 = call %struct.UText* @_ZN6icu_6912RegexMatcher10appendTailEP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* %53, i32* dereferenceable(4) %3)
  br label %56

56:                                               ; preds = %4, %52, %38, %14
  %57 = phi %struct.UText* [ %2, %14 ], [ %53, %52 ], [ %39, %38 ], [ %2, %4 ]
  ret %struct.UText* %57
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_6912RegexMatcher10requireEndEv(%"class.icu_69::RegexMatcher"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  %3 = load i8, i8* %2, align 1
  ret i8 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher5resetERKNS_13UnicodeStringE(%"class.icu_69::RegexMatcher"* returned, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %4 = load %struct.UText*, %struct.UText** %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %6 = tail call %struct.UText* @utext_openConstUnicodeString_69(%struct.UText* %4, %"class.icu_69::UnicodeString"* %1, i32* %5) #12
  store %struct.UText* %6, %struct.UText** %3, align 8
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %8 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %7, align 8
  %9 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %8, i64 0, i32 19
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 5
  %14 = load %struct.UText*, %struct.UText** %13, align 8
  %15 = tail call %struct.UText* @utext_clone_69(%struct.UText* %14, %struct.UText* %6, i8 signext 0, i8 signext 1, i32* %5) #12
  store %struct.UText* %15, %struct.UText** %13, align 8
  br label %16

16:                                               ; preds = %2, %12
  %17 = load i32, i32* %5, align 4
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %19, label %69

19:                                               ; preds = %16
  %20 = load %struct.UText*, %struct.UText** %3, align 8
  %21 = tail call i64 @utext_nativeLength_69(%struct.UText* %20) #12
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %21, i64* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %21, i64* %26, align 8
  %27 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %21, i64* %28, align 8
  %29 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %21, i64* %30, align 8
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %32 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %33 = bitcast i64* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #12
  %34 = bitcast i64* %32 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %34, align 8
  %35 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %35, align 2
  %36 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %39, align 8
  %40 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 3
  %41 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %40, align 8
  %42 = icmp eq %"class.icu_69::UnicodeString"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %19
  %44 = bitcast %"class.icu_69::UnicodeString"* %41 to void (%"class.icu_69::UnicodeString"*)***
  %45 = load void (%"class.icu_69::UnicodeString"*)**, void (%"class.icu_69::UnicodeString"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %45, i64 1
  %47 = load void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %46, align 8
  tail call void %47(%"class.icu_69::UnicodeString"* nonnull %41) #12
  br label %48

48:                                               ; preds = %43, %19
  store %"class.icu_69::UnicodeString"* null, %"class.icu_69::UnicodeString"** %40, align 8
  %49 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 37
  store i8 1, i8* %49, align 8
  %50 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 40
  %51 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %50, align 8
  %52 = icmp eq %"class.icu_69::BreakIterator"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %48
  %54 = load %struct.UText*, %struct.UText** %3, align 8
  %55 = bitcast %"class.icu_69::BreakIterator"* %51 to void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)***
  %56 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)**, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %56, i64 8
  %58 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %57, align 8
  tail call void %58(%"class.icu_69::BreakIterator"* nonnull %51, %struct.UText* %54, i32* dereferenceable(4) %5) #12
  br label %59

59:                                               ; preds = %48, %53
  %60 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 41
  %61 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %60, align 8
  %62 = icmp eq %"class.icu_69::BreakIterator"* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %59
  %64 = load %struct.UText*, %struct.UText** %3, align 8
  %65 = bitcast %"class.icu_69::BreakIterator"* %61 to void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)***
  %66 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)**, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %66, i64 8
  %68 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %67, align 8
  tail call void %68(%"class.icu_69::BreakIterator"* nonnull %61, %struct.UText* %64, i32* dereferenceable(4) %5) #12
  br label %69

69:                                               ; preds = %63, %59, %16
  ret %"class.icu_69::RegexMatcher"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher5resetElR10UErrorCode(%"class.icu_69::RegexMatcher"* returned, i64, i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %32

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 14
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  store i64 %9, i64* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %9, i64* %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %9, i64* %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %18 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 21
  %19 = bitcast i64* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #12
  %20 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  store i8 0, i8* %21, align 2
  %22 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 24
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %25, align 8
  %26 = icmp slt i64 %1, 0
  %27 = icmp slt i64 %9, %1
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %6
  store i32 8, i32* %2, align 4
  br label %32

30:                                               ; preds = %6
  %31 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  store i64 %1, i64* %31, align 8
  br label %32

32:                                               ; preds = %3, %30, %29
  ret %"class.icu_69::RegexMatcher"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher16refreshInputTextEP5UTextR10UErrorCode(%"class.icu_69::RegexMatcher"* returned, %struct.UText*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %34

6:                                                ; preds = %3
  %7 = icmp eq %struct.UText* %1, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i32 1, i32* %2, align 4
  br label %34

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %11 = load %struct.UText*, %struct.UText** %10, align 8
  %12 = tail call i64 @utext_nativeLength_69(%struct.UText* %11) #12
  %13 = tail call i64 @utext_nativeLength_69(%struct.UText* nonnull %1) #12
  %14 = icmp eq i64 %12, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %9
  store i32 1, i32* %2, align 4
  br label %34

16:                                               ; preds = %9
  %17 = load %struct.UText*, %struct.UText** %10, align 8
  %18 = tail call i64 @utext_getNativeIndex_69(%struct.UText* %17) #12
  %19 = load %struct.UText*, %struct.UText** %10, align 8
  %20 = tail call %struct.UText* @utext_clone_69(%struct.UText* %19, %struct.UText* nonnull %1, i8 signext 0, i8 signext 1, i32* %2) #12
  store %struct.UText* %20, %struct.UText** %10, align 8
  %21 = load i32, i32* %2, align 4
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %34

23:                                               ; preds = %16
  tail call void @utext_setNativeIndex_69(%struct.UText* %20, i64 %18) #12
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 5
  %25 = load %struct.UText*, %struct.UText** %24, align 8
  %26 = icmp eq %struct.UText* %25, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %23
  %28 = tail call i64 @utext_getNativeIndex_69(%struct.UText* nonnull %25) #12
  %29 = load %struct.UText*, %struct.UText** %24, align 8
  %30 = tail call %struct.UText* @utext_clone_69(%struct.UText* %29, %struct.UText* nonnull %1, i8 signext 0, i8 signext 1, i32* %2) #12
  store %struct.UText* %30, %struct.UText** %24, align 8
  %31 = load i32, i32* %2, align 4
  %32 = icmp slt i32 %31, 1
  br i1 %32, label %33, label %34

33:                                               ; preds = %27
  tail call void @utext_setNativeIndex_69(%struct.UText* %30, i64 %28) #12
  br label %34

34:                                               ; preds = %16, %27, %23, %33, %3, %15, %8
  ret %"class.icu_69::RegexMatcher"* %0
}

declare i64 @utext_getNativeIndex_69(%struct.UText*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_6912RegexMatcher8setTraceEa(%"class.icu_69::RegexMatcher"* nocapture, i8 signext) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 38
  store i8 %1, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6912RegexMatcher5splitERKNS_13UnicodeStringEPS1_iR10UErrorCode(%"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeString"*, i32, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %6 = alloca %struct.UText, align 8
  %7 = bitcast %struct.UText* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 144, i1 false)
  %8 = getelementptr inbounds %struct.UText, %struct.UText* %6, i64 0, i32 0
  store i32 878368812, i32* %8, align 8
  %9 = getelementptr inbounds %struct.UText, %struct.UText* %6, i64 0, i32 3
  store i32 144, i32* %9, align 4
  %10 = call %struct.UText* @utext_openConstUnicodeString_69(%struct.UText* nonnull %6, %"class.icu_69::UnicodeString"* %1, i32* %4) #12
  %11 = load i32, i32* %4, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %47

13:                                               ; preds = %5
  %14 = sext i32 %3 to i64
  %15 = shl nsw i64 %14, 3
  %16 = call noalias i8* @uprv_malloc_69(i64 %15) #11
  %17 = bitcast i8* %16 to %struct.UText**
  %18 = icmp eq i8* %16, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %13
  %20 = icmp sgt i32 %3, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = call i32 @_ZN6icu_6912RegexMatcher5splitEP5UTextPS2_iR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* nonnull %6, %struct.UText** nonnull %17, i32 %3, i32* dereferenceable(4) %4)
  br label %44

23:                                               ; preds = %19
  %24 = zext i32 %3 to i64
  br label %26

25:                                               ; preds = %13
  store i32 7, i32* %4, align 4
  br label %47

26:                                               ; preds = %26, %23
  %27 = phi i64 [ 0, %23 ], [ %31, %26 ]
  %28 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 %27
  %29 = call %struct.UText* @utext_openUnicodeString_69(%struct.UText* null, %"class.icu_69::UnicodeString"* %28, i32* %4) #12
  %30 = getelementptr inbounds %struct.UText*, %struct.UText** %17, i64 %27
  store %struct.UText* %29, %struct.UText** %30, align 8
  %31 = add nuw nsw i64 %27, 1
  %32 = icmp eq i64 %31, %24
  br i1 %32, label %33, label %26

33:                                               ; preds = %26
  %34 = call i32 @_ZN6icu_6912RegexMatcher5splitEP5UTextPS2_iR10UErrorCode(%"class.icu_69::RegexMatcher"* %0, %struct.UText* nonnull %6, %struct.UText** nonnull %17, i32 %3, i32* dereferenceable(4) %4)
  br i1 %20, label %35, label %44

35:                                               ; preds = %33
  %36 = zext i32 %3 to i64
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ 0, %35 ], [ %42, %37 ]
  %39 = getelementptr inbounds %struct.UText*, %struct.UText** %17, i64 %38
  %40 = load %struct.UText*, %struct.UText** %39, align 8
  %41 = call %struct.UText* @utext_close_69(%struct.UText* %40) #12
  %42 = add nuw nsw i64 %38, 1
  %43 = icmp eq i64 %42, %36
  br i1 %43, label %44, label %37

44:                                               ; preds = %37, %21, %33
  %45 = phi i32 [ %22, %21 ], [ %34, %33 ], [ %34, %37 ]
  call void @uprv_free_69(i8* nonnull %16) #12
  %46 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %6) #12
  br label %47

47:                                               ; preds = %25, %44, %5
  %48 = phi i32 [ 0, %5 ], [ 0, %25 ], [ %45, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %7) #12
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6912RegexMatcher5splitEP5UTextPS2_iR10UErrorCode(%"class.icu_69::RegexMatcher"*, %struct.UText*, %struct.UText** nocapture, i32, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.icu_69::MaybeStackArray.1", align 8
  %8 = alloca %struct.UText, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.UText, align 8
  %11 = alloca %struct.UText, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.UText, align 8
  %14 = alloca %struct.UText, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.UText, align 8
  %17 = load i32, i32* %4, align 4
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %19, label %450

19:                                               ; preds = %5
  %20 = icmp slt i32 %3, 1
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  store i32 1, i32* %4, align 4
  br label %450

22:                                               ; preds = %19
  %23 = tail call dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher5resetEP5UText(%"class.icu_69::RegexMatcher"* %0, %struct.UText* %1)
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 15
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %450, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %29 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %28, align 8
  %30 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %29, i64 0, i32 12
  %31 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %30, align 8
  %32 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %31, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = add nsw i32 %3, -1
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %66

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %38 = bitcast i32* %6 to i8*
  %39 = getelementptr inbounds %struct.UText, %struct.UText* %1, i64 0, i32 7
  %40 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %41 = getelementptr inbounds %struct.UText, %struct.UText* %1, i64 0, i32 4
  %42 = getelementptr inbounds %struct.UText, %struct.UText* %1, i64 0, i32 6
  %43 = bitcast i32* %12 to i8*
  %44 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %45 = bitcast %struct.UText* %13 to i8*
  %46 = getelementptr inbounds %struct.UText, %struct.UText* %13, i64 0, i32 0
  %47 = getelementptr inbounds %struct.UText, %struct.UText* %13, i64 0, i32 3
  %48 = getelementptr inbounds %struct.UText, %struct.UText* %1, i64 0, i32 10
  %49 = bitcast %struct.UText* %11 to i8*
  %50 = getelementptr inbounds %struct.UText, %struct.UText* %11, i64 0, i32 0
  %51 = getelementptr inbounds %struct.UText, %struct.UText* %11, i64 0, i32 3
  %52 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 20
  %53 = icmp sgt i32 %33, 0
  %54 = add nsw i32 %3, -2
  %55 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %56 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %57 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 26
  %58 = bitcast %"class.icu_69::MaybeStackArray.1"* %7 to i8*
  %59 = getelementptr inbounds %"class.icu_69::MaybeStackArray.1", %"class.icu_69::MaybeStackArray.1"* %7, i64 0, i32 0
  %60 = getelementptr inbounds %"class.icu_69::MaybeStackArray.1", %"class.icu_69::MaybeStackArray.1"* %7, i64 0, i32 4, i64 0
  %61 = getelementptr inbounds %"class.icu_69::MaybeStackArray.1", %"class.icu_69::MaybeStackArray.1"* %7, i64 0, i32 1
  %62 = getelementptr inbounds %"class.icu_69::MaybeStackArray.1", %"class.icu_69::MaybeStackArray.1"* %7, i64 0, i32 2
  %63 = bitcast %"class.icu_69::MaybeStackArray.1"* %7 to i8**
  %64 = sext i32 %33 to i64
  %65 = sext i32 %54 to i64
  br label %140

66:                                               ; preds = %444, %27
  %67 = phi i64 [ %25, %27 ], [ %362, %444 ]
  %68 = phi i64 [ 0, %27 ], [ %210, %444 ]
  %69 = icmp sgt i64 %67, %68
  br i1 %69, label %70, label %447

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.UText, %struct.UText* %1, i64 0, i32 7
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %110

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %struct.UText, %struct.UText* %1, i64 0, i32 4
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %76, %78
  br i1 %79, label %80, label %110

80:                                               ; preds = %74
  %81 = getelementptr inbounds %struct.UText, %struct.UText* %1, i64 0, i32 6
  %82 = load i32, i32* %81, align 4
  %83 = sext i32 %82 to i64
  %84 = icmp eq i64 %76, %83
  br i1 %84, label %85, label %110

85:                                               ; preds = %80
  %86 = sext i32 %34 to i64
  %87 = getelementptr inbounds %struct.UText*, %struct.UText** %2, i64 %86
  %88 = load %struct.UText*, %struct.UText** %87, align 8
  %89 = icmp eq %struct.UText* %88, null
  br i1 %89, label %99, label %90

90:                                               ; preds = %85
  %91 = call i64 @utext_nativeLength_69(%struct.UText* nonnull %88) #12
  %92 = getelementptr inbounds %struct.UText, %struct.UText* %1, i64 0, i32 10
  %93 = load i16*, i16** %92, align 8
  %94 = getelementptr inbounds i16, i16* %93, i64 %68
  %95 = load i64, i64* %24, align 8
  %96 = sub nsw i64 %95, %68
  %97 = trunc i64 %96 to i32
  %98 = call i32 @utext_replace_69(%struct.UText* nonnull %88, i64 0, i64 %91, i16* %94, i32 %97, i32* %4) #12
  br label %447

99:                                               ; preds = %85
  %100 = bitcast %struct.UText* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %100) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 0, i64 144, i1 false)
  %101 = getelementptr inbounds %struct.UText, %struct.UText* %8, i64 0, i32 0
  store i32 878368812, i32* %101, align 8
  %102 = getelementptr inbounds %struct.UText, %struct.UText* %8, i64 0, i32 3
  store i32 144, i32* %102, align 4
  %103 = getelementptr inbounds %struct.UText, %struct.UText* %1, i64 0, i32 10
  %104 = load i16*, i16** %103, align 8
  %105 = getelementptr inbounds i16, i16* %104, i64 %68
  %106 = sub nsw i64 %67, %68
  %107 = call %struct.UText* @utext_openUChars_69(%struct.UText* nonnull %8, i16* %105, i64 %106, i32* %4) #12
  %108 = call %struct.UText* @utext_clone_69(%struct.UText* null, %struct.UText* nonnull %8, i8 signext 1, i8 signext 0, i32* %4) #12
  store %struct.UText* %108, %struct.UText** %87, align 8
  %109 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %100) #12
  br label %447

110:                                              ; preds = %80, %74, %70
  %111 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #12
  store i32 0, i32* %9, align 4
  %112 = call i32 @utext_extract_69(%struct.UText* %1, i64 %68, i64 %67, i16* null, i32 0, i32* nonnull %9) #12
  %113 = add nsw i32 %112, 1
  %114 = sext i32 %113 to i64
  %115 = shl nsw i64 %114, 1
  %116 = call noalias i8* @uprv_malloc_69(i64 %115) #11
  %117 = bitcast i8* %116 to i16*
  %118 = icmp eq i8* %116, null
  br i1 %118, label %119, label %120

119:                                              ; preds = %110
  store i32 7, i32* %4, align 4
  br label %139

120:                                              ; preds = %110
  %121 = load i64, i64* %24, align 8
  %122 = call i32 @utext_extract_69(%struct.UText* %1, i64 %68, i64 %121, i16* nonnull %117, i32 %113, i32* %4) #12
  %123 = sext i32 %34 to i64
  %124 = getelementptr inbounds %struct.UText*, %struct.UText** %2, i64 %123
  %125 = load %struct.UText*, %struct.UText** %124, align 8
  %126 = icmp eq %struct.UText* %125, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %120
  %128 = call i64 @utext_nativeLength_69(%struct.UText* nonnull %125) #12
  %129 = call i32 @utext_replace_69(%struct.UText* nonnull %125, i64 0, i64 %128, i16* nonnull %117, i32 %112, i32* %4) #12
  br label %138

130:                                              ; preds = %120
  %131 = bitcast %struct.UText* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %131) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 0, i64 144, i1 false)
  %132 = getelementptr inbounds %struct.UText, %struct.UText* %10, i64 0, i32 0
  store i32 878368812, i32* %132, align 8
  %133 = getelementptr inbounds %struct.UText, %struct.UText* %10, i64 0, i32 3
  store i32 144, i32* %133, align 4
  %134 = sext i32 %112 to i64
  %135 = call %struct.UText* @utext_openUChars_69(%struct.UText* nonnull %10, i16* nonnull %117, i64 %134, i32* %4) #12
  %136 = call %struct.UText* @utext_clone_69(%struct.UText* null, %struct.UText* nonnull %10, i8 signext 1, i8 signext 0, i32* %4) #12
  store %struct.UText* %136, %struct.UText** %124, align 8
  %137 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %131) #12
  br label %138

138:                                              ; preds = %130, %127
  call void @uprv_free_69(i8* nonnull %116) #12
  br label %139

139:                                              ; preds = %138, %119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #12
  br label %447

140:                                              ; preds = %36, %444
  %141 = phi i32 [ 0, %36 ], [ %445, %444 ]
  %142 = phi i64 [ 0, %36 ], [ %210, %444 ]
  %143 = load i32, i32* %37, align 4
  %144 = icmp slt i32 %143, 1
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = load i64, i64* %39, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %378, label %410

148:                                              ; preds = %140
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #12
  store i32 0, i32* %6, align 4
  %149 = call signext i8 @_ZN6icu_6912RegexMatcher4findER10UErrorCode(%"class.icu_69::RegexMatcher"* %0, i32* nonnull dereferenceable(4) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #12
  %150 = icmp eq i8 %149, 0
  %151 = load i64, i64* %39, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %150, label %377, label %153

153:                                              ; preds = %148
  br i1 %152, label %154, label %183

154:                                              ; preds = %153
  %155 = load i64, i64* %40, align 8
  %156 = load i64, i64* %41, align 8
  %157 = icmp eq i64 %155, %156
  br i1 %157, label %158, label %183

158:                                              ; preds = %154
  %159 = load i32, i32* %42, align 4
  %160 = sext i32 %159 to i64
  %161 = icmp eq i64 %155, %160
  br i1 %161, label %162, label %183

162:                                              ; preds = %158
  %163 = sext i32 %141 to i64
  %164 = getelementptr inbounds %struct.UText*, %struct.UText** %2, i64 %163
  %165 = load %struct.UText*, %struct.UText** %164, align 8
  %166 = icmp eq %struct.UText* %165, null
  br i1 %166, label %175, label %167

167:                                              ; preds = %162
  %168 = call i64 @utext_nativeLength_69(%struct.UText* nonnull %165) #12
  %169 = load i16*, i16** %48, align 8
  %170 = getelementptr inbounds i16, i16* %169, i64 %142
  %171 = load i64, i64* %44, align 8
  %172 = sub nsw i64 %171, %142
  %173 = trunc i64 %172 to i32
  %174 = call i32 @utext_replace_69(%struct.UText* nonnull %165, i64 0, i64 %168, i16* %170, i32 %173, i32* %4) #12
  br label %209

175:                                              ; preds = %162
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %49) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 144, i1 false)
  store i32 878368812, i32* %50, align 8
  store i32 144, i32* %51, align 4
  %176 = load i16*, i16** %48, align 8
  %177 = getelementptr inbounds i16, i16* %176, i64 %142
  %178 = load i64, i64* %44, align 8
  %179 = sub nsw i64 %178, %142
  %180 = call %struct.UText* @utext_openUChars_69(%struct.UText* nonnull %11, i16* %177, i64 %179, i32* %4) #12
  %181 = call %struct.UText* @utext_clone_69(%struct.UText* null, %struct.UText* nonnull %11, i8 signext 1, i8 signext 0, i32* %4) #12
  store %struct.UText* %181, %struct.UText** %164, align 8
  %182 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %49) #12
  br label %209

183:                                              ; preds = %158, %154, %153
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #12
  store i32 0, i32* %12, align 4
  %184 = load i64, i64* %44, align 8
  %185 = call i32 @utext_extract_69(%struct.UText* %1, i64 %142, i64 %184, i16* null, i32 0, i32* nonnull %12) #12
  %186 = add nsw i32 %185, 1
  %187 = sext i32 %186 to i64
  %188 = shl nsw i64 %187, 1
  %189 = call noalias i8* @uprv_malloc_69(i64 %188) #11
  %190 = bitcast i8* %189 to i16*
  %191 = icmp eq i8* %189, null
  br i1 %191, label %192, label %193

192:                                              ; preds = %183
  store i32 7, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #12
  br label %447

193:                                              ; preds = %183
  %194 = load i64, i64* %44, align 8
  %195 = call i32 @utext_extract_69(%struct.UText* %1, i64 %142, i64 %194, i16* nonnull %190, i32 %186, i32* %4) #12
  %196 = sext i32 %141 to i64
  %197 = getelementptr inbounds %struct.UText*, %struct.UText** %2, i64 %196
  %198 = load %struct.UText*, %struct.UText** %197, align 8
  %199 = icmp eq %struct.UText* %198, null
  br i1 %199, label %203, label %200

200:                                              ; preds = %193
  %201 = call i64 @utext_nativeLength_69(%struct.UText* nonnull %198) #12
  %202 = call i32 @utext_replace_69(%struct.UText* nonnull %198, i64 0, i64 %201, i16* nonnull %190, i32 %185, i32* %4) #12
  br label %208

203:                                              ; preds = %193
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %45) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 144, i1 false)
  store i32 878368812, i32* %46, align 8
  store i32 144, i32* %47, align 4
  %204 = sext i32 %185 to i64
  %205 = call %struct.UText* @utext_openUChars_69(%struct.UText* nonnull %13, i16* nonnull %190, i64 %204, i32* %4) #12
  %206 = call %struct.UText* @utext_clone_69(%struct.UText* null, %struct.UText* nonnull %13, i8 signext 1, i8 signext 0, i32* %4) #12
  store %struct.UText* %206, %struct.UText** %197, align 8
  %207 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %45) #12
  br label %208

208:                                              ; preds = %203, %200
  call void @uprv_free_69(i8* nonnull %189) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #12
  br label %209

209:                                              ; preds = %208, %167, %175
  %210 = load i64, i64* %52, align 8
  %211 = icmp slt i32 %141, %54
  %212 = and i1 %211, %53
  br i1 %212, label %213, label %360

213:                                              ; preds = %209
  %214 = sext i32 %141 to i64
  br label %215

215:                                              ; preds = %213, %352
  %216 = phi i64 [ %214, %213 ], [ %218, %352 ]
  %217 = phi i64 [ 1, %213 ], [ %354, %352 ]
  %218 = add nsw i64 %216, 1
  %219 = load %struct.UText*, %struct.UText** %55, align 8
  %220 = getelementptr inbounds %struct.UText*, %struct.UText** %2, i64 %218
  %221 = load %struct.UText*, %struct.UText** %220, align 8
  %222 = load i32, i32* %4, align 4
  %223 = icmp slt i32 %222, 1
  br i1 %223, label %224, label %352

224:                                              ; preds = %215
  %225 = load i32, i32* %37, align 4
  %226 = icmp slt i32 %225, 1
  br i1 %226, label %228, label %227

227:                                              ; preds = %224
  store i32 %225, i32* %4, align 4
  br label %352

228:                                              ; preds = %224
  %229 = load i8, i8* %56, align 2
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  store i32 66306, i32* %4, align 4
  br label %352

232:                                              ; preds = %228
  %233 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %28, align 8
  %234 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %233, i64 0, i32 12
  %235 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %234, align 8
  %236 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %235, i64 0, i32 1
  %237 = load i32, i32* %236, align 8
  %238 = sext i32 %237 to i64
  %239 = icmp sgt i64 %217, %238
  br i1 %239, label %240, label %241

240:                                              ; preds = %232
  store i32 8, i32* %4, align 4
  br label %352

241:                                              ; preds = %232
  %242 = icmp sgt i32 %237, 0
  br i1 %242, label %246, label %243

243:                                              ; preds = %241
  %244 = load %"struct.icu_69::REStackFrame"*, %"struct.icu_69::REStackFrame"** %57, align 8
  %245 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %244, i64 0, i32 2, i64 0
  br label %262

246:                                              ; preds = %241
  %247 = add nsw i64 %217, -1
  %248 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %235, i64 0, i32 4
  %249 = load i32*, i32** %248, align 8
  %250 = getelementptr inbounds i32, i32* %249, i64 %247
  %251 = load i32, i32* %250, align 4
  %252 = sext i32 %251 to i64
  %253 = load %"struct.icu_69::REStackFrame"*, %"struct.icu_69::REStackFrame"** %57, align 8
  %254 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %253, i64 0, i32 2, i64 %252
  %255 = add nsw i64 %217, -1
  %256 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %235, i64 0, i32 4
  %257 = load i32*, i32** %256, align 8
  %258 = getelementptr inbounds i32, i32* %257, i64 %255
  %259 = load i32, i32* %258, align 4
  %260 = add i32 %259, 1
  %261 = sext i32 %260 to i64
  br label %262

262:                                              ; preds = %246, %243
  %263 = phi i64* [ %254, %246 ], [ %245, %243 ]
  %264 = phi %"struct.icu_69::REStackFrame"* [ %253, %246 ], [ %244, %243 ]
  %265 = phi i64 [ %261, %246 ], [ 1, %243 ]
  %266 = load i64, i64* %263, align 8
  %267 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %264, i64 0, i32 2, i64 %265
  %268 = load i64, i64* %267, align 8
  %269 = icmp eq i64 %266, %268
  br i1 %269, label %270, label %277

270:                                              ; preds = %262
  %271 = icmp eq %struct.UText* %221, null
  br i1 %271, label %275, label %272

272:                                              ; preds = %270
  %273 = call i64 @utext_nativeLength_69(%struct.UText* nonnull %221) #12
  %274 = call i32 @utext_replace_69(%struct.UText* nonnull %221, i64 0, i64 %273, i16* null, i32 0, i32* %4) #12
  br label %352

275:                                              ; preds = %270
  %276 = call %struct.UText* @utext_openUChars_69(%struct.UText* null, i16* null, i64 0, i32* %4) #12
  br label %352

277:                                              ; preds = %262
  %278 = call i32 @utext_extract_69(%struct.UText* %219, i64 %266, i64 %268, i16* null, i32 0, i32* %4) #12
  %279 = load i32, i32* %4, align 4
  %280 = icmp eq i32 %279, 15
  %281 = icmp slt i32 %279, 1
  %282 = or i1 %280, %281
  br i1 %282, label %283, label %352

283:                                              ; preds = %277
  store i32 0, i32* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %58) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 96, i1 false) #12
  store i16* %60, i16** %59, align 8
  store i32 40, i32* %61, align 8
  store i8 0, i8* %62, align 4
  %284 = icmp slt i32 %278, 40
  %285 = add nsw i32 %278, 1
  br i1 %284, label %300, label %286

286:                                              ; preds = %283
  %287 = sext i32 %285 to i64
  %288 = shl nsw i64 %287, 1
  %289 = call noalias i8* @uprv_malloc_69(i64 %288) #11
  %290 = icmp eq i8* %289, null
  br i1 %290, label %298, label %291

291:                                              ; preds = %286
  %292 = load i8, i8* %62, align 4
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %296, label %294

294:                                              ; preds = %291
  %295 = load i8*, i8** %63, align 8
  call void @uprv_free_69(i8* %295) #12
  br label %296

296:                                              ; preds = %294, %291
  store i8* %289, i8** %63, align 8
  store i32 %285, i32* %61, align 8
  store i8 1, i8* %62, align 4
  %297 = bitcast i8* %289 to i16*
  br label %300

298:                                              ; preds = %286
  %299 = load i16*, i16** %59, align 8
  store i32 7, i32* %4, align 4
  br label %300

300:                                              ; preds = %298, %296, %283
  %301 = phi i16* [ %297, %296 ], [ %299, %298 ], [ %60, %283 ]
  %302 = call i32 @utext_extract_69(%struct.UText* %219, i64 %266, i64 %268, i16* %301, i32 %285, i32* %4) #12
  %303 = icmp eq %struct.UText* %221, null
  br i1 %303, label %308, label %304

304:                                              ; preds = %300
  %305 = call i64 @utext_nativeLength_69(%struct.UText* nonnull %221) #12
  %306 = load i16*, i16** %59, align 8
  %307 = call i32 @utext_replace_69(%struct.UText* nonnull %221, i64 0, i64 %305, i16* %306, i32 %278, i32* %4) #12
  br label %345

308:                                              ; preds = %300
  %309 = load i32, i32* %4, align 4
  %310 = icmp slt i32 %309, 1
  br i1 %310, label %311, label %345

311:                                              ; preds = %308
  %312 = load i8, i8* %62, align 4
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %317, label %314

314:                                              ; preds = %311
  %315 = load i16*, i16** %59, align 8
  %316 = bitcast i16* %315 to i8*
  br label %330

317:                                              ; preds = %311
  %318 = icmp slt i32 %278, 0
  br i1 %318, label %334, label %319

319:                                              ; preds = %317
  %320 = load i32, i32* %61, align 8
  %321 = icmp slt i32 %320, %285
  %322 = select i1 %321, i32 %320, i32 %285
  %323 = sext i32 %322 to i64
  %324 = shl nsw i64 %323, 1
  %325 = call noalias i8* @uprv_malloc_69(i64 %324) #11
  %326 = icmp eq i8* %325, null
  br i1 %326, label %334, label %327

327:                                              ; preds = %319
  %328 = bitcast i8* %325 to i16*
  %329 = load i8*, i8** %63, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %325, i8* align 2 %329, i64 %324, i1 false) #12
  br label %330

330:                                              ; preds = %327, %314
  %331 = phi i8* [ %316, %314 ], [ %325, %327 ]
  %332 = phi i16* [ %315, %314 ], [ %328, %327 ]
  store i16* %60, i16** %59, align 8
  store i32 40, i32* %61, align 8
  store i8 0, i8* %62, align 4
  %333 = icmp eq i16* %332, null
  br i1 %333, label %334, label %335

334:                                              ; preds = %330, %319, %317
  store i32 7, i32* %4, align 4
  br label %345

335:                                              ; preds = %330
  %336 = sext i32 %278 to i64
  %337 = call %struct.UText* @utext_openUChars_69(%struct.UText* null, i16* nonnull %332, i64 %336, i32* %4) #12
  %338 = load i32, i32* %4, align 4
  %339 = icmp slt i32 %338, 1
  br i1 %339, label %341, label %340

340:                                              ; preds = %335
  call void @uprv_free_69(i8* nonnull %331) #12
  br label %345

341:                                              ; preds = %335
  %342 = getelementptr inbounds %struct.UText, %struct.UText* %337, i64 0, i32 2
  %343 = load i32, i32* %342, align 8
  %344 = or i32 %343, 32
  store i32 %344, i32* %342, align 8
  br label %345

345:                                              ; preds = %341, %340, %334, %308, %304
  %346 = phi %struct.UText* [ %221, %304 ], [ null, %308 ], [ null, %334 ], [ null, %340 ], [ %337, %341 ]
  %347 = load i8, i8* %62, align 4
  %348 = icmp eq i8 %347, 0
  br i1 %348, label %351, label %349

349:                                              ; preds = %345
  %350 = load i8*, i8** %63, align 8
  call void @uprv_free_69(i8* %350) #12
  br label %351

351:                                              ; preds = %349, %345
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %58) #12
  br label %352

352:                                              ; preds = %215, %227, %231, %240, %272, %275, %277, %351
  %353 = phi %struct.UText* [ %221, %272 ], [ %276, %275 ], [ %346, %351 ], [ %221, %277 ], [ %221, %240 ], [ %221, %231 ], [ %221, %227 ], [ %221, %215 ]
  store %struct.UText* %353, %struct.UText** %220, align 8
  %354 = add nuw nsw i64 %217, 1
  %355 = icmp slt i64 %217, %64
  %356 = icmp slt i64 %218, %65
  %357 = and i1 %356, %355
  br i1 %357, label %215, label %358

358:                                              ; preds = %352
  %359 = trunc i64 %218 to i32
  br label %360

360:                                              ; preds = %358, %209
  %361 = phi i32 [ %141, %209 ], [ %359, %358 ]
  %362 = load i64, i64* %24, align 8
  %363 = icmp eq i64 %210, %362
  br i1 %363, label %364, label %441

364:                                              ; preds = %360
  %365 = add nsw i32 %361, 1
  %366 = icmp slt i32 %365, %3
  br i1 %366, label %367, label %447

367:                                              ; preds = %364
  %368 = sext i32 %365 to i64
  %369 = getelementptr inbounds %struct.UText*, %struct.UText** %2, i64 %368
  %370 = load %struct.UText*, %struct.UText** %369, align 8
  %371 = icmp eq %struct.UText* %370, null
  br i1 %371, label %372, label %374

372:                                              ; preds = %367
  %373 = call %struct.UText* @utext_openUChars_69(%struct.UText* null, i16* null, i64 0, i32* %4) #12
  store %struct.UText* %373, %struct.UText** %369, align 8
  br label %447

374:                                              ; preds = %367
  %375 = call i64 @utext_nativeLength_69(%struct.UText* nonnull %370) #12
  %376 = call i32 @utext_replace_69(%struct.UText* nonnull %370, i64 0, i64 %375, i16* getelementptr inbounds ([1 x i16], [1 x i16]* @_ZZN6icu_6912RegexMatcher5splitEP5UTextPS2_iR10UErrorCodeE11emptyString, i64 0, i64 0), i32 0, i32* %4) #12
  br label %447

377:                                              ; preds = %148
  br i1 %152, label %378, label %410

378:                                              ; preds = %145, %377
  %379 = load i64, i64* %40, align 8
  %380 = load i64, i64* %41, align 8
  %381 = icmp eq i64 %379, %380
  br i1 %381, label %382, label %410

382:                                              ; preds = %378
  %383 = load i32, i32* %42, align 4
  %384 = sext i32 %383 to i64
  %385 = icmp eq i64 %379, %384
  br i1 %385, label %386, label %410

386:                                              ; preds = %382
  %387 = sext i32 %141 to i64
  %388 = getelementptr inbounds %struct.UText*, %struct.UText** %2, i64 %387
  %389 = load %struct.UText*, %struct.UText** %388, align 8
  %390 = icmp eq %struct.UText* %389, null
  br i1 %390, label %399, label %391

391:                                              ; preds = %386
  %392 = call i64 @utext_nativeLength_69(%struct.UText* nonnull %389) #12
  %393 = load i16*, i16** %48, align 8
  %394 = getelementptr inbounds i16, i16* %393, i64 %142
  %395 = load i64, i64* %24, align 8
  %396 = sub nsw i64 %395, %142
  %397 = trunc i64 %396 to i32
  %398 = call i32 @utext_replace_69(%struct.UText* nonnull %389, i64 0, i64 %392, i16* %394, i32 %397, i32* %4) #12
  br label %447

399:                                              ; preds = %386
  %400 = bitcast %struct.UText* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %400) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %400, i8 0, i64 144, i1 false)
  %401 = getelementptr inbounds %struct.UText, %struct.UText* %14, i64 0, i32 0
  store i32 878368812, i32* %401, align 8
  %402 = getelementptr inbounds %struct.UText, %struct.UText* %14, i64 0, i32 3
  store i32 144, i32* %402, align 4
  %403 = load i16*, i16** %48, align 8
  %404 = getelementptr inbounds i16, i16* %403, i64 %142
  %405 = load i64, i64* %24, align 8
  %406 = sub nsw i64 %405, %142
  %407 = call %struct.UText* @utext_openUChars_69(%struct.UText* nonnull %14, i16* %404, i64 %406, i32* %4) #12
  %408 = call %struct.UText* @utext_clone_69(%struct.UText* null, %struct.UText* nonnull %14, i8 signext 1, i8 signext 0, i32* %4) #12
  store %struct.UText* %408, %struct.UText** %388, align 8
  %409 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %400) #12
  br label %447

410:                                              ; preds = %145, %382, %378, %377
  %411 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %411) #12
  store i32 0, i32* %15, align 4
  %412 = load i64, i64* %24, align 8
  %413 = call i32 @utext_extract_69(%struct.UText* %1, i64 %142, i64 %412, i16* null, i32 0, i32* nonnull %15) #12
  %414 = add nsw i32 %413, 1
  %415 = sext i32 %414 to i64
  %416 = shl nsw i64 %415, 1
  %417 = call noalias i8* @uprv_malloc_69(i64 %416) #11
  %418 = bitcast i8* %417 to i16*
  %419 = icmp eq i8* %417, null
  br i1 %419, label %420, label %421

420:                                              ; preds = %410
  store i32 7, i32* %4, align 4
  br label %440

421:                                              ; preds = %410
  %422 = load i64, i64* %24, align 8
  %423 = call i32 @utext_extract_69(%struct.UText* %1, i64 %142, i64 %422, i16* nonnull %418, i32 %414, i32* %4) #12
  %424 = sext i32 %141 to i64
  %425 = getelementptr inbounds %struct.UText*, %struct.UText** %2, i64 %424
  %426 = load %struct.UText*, %struct.UText** %425, align 8
  %427 = icmp eq %struct.UText* %426, null
  br i1 %427, label %431, label %428

428:                                              ; preds = %421
  %429 = call i64 @utext_nativeLength_69(%struct.UText* nonnull %426) #12
  %430 = call i32 @utext_replace_69(%struct.UText* nonnull %426, i64 0, i64 %429, i16* nonnull %418, i32 %413, i32* %4) #12
  br label %439

431:                                              ; preds = %421
  %432 = bitcast %struct.UText* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %432) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %432, i8 0, i64 144, i1 false)
  %433 = getelementptr inbounds %struct.UText, %struct.UText* %16, i64 0, i32 0
  store i32 878368812, i32* %433, align 8
  %434 = getelementptr inbounds %struct.UText, %struct.UText* %16, i64 0, i32 3
  store i32 144, i32* %434, align 4
  %435 = sext i32 %413 to i64
  %436 = call %struct.UText* @utext_openUChars_69(%struct.UText* nonnull %16, i16* nonnull %418, i64 %435, i32* %4) #12
  %437 = call %struct.UText* @utext_clone_69(%struct.UText* null, %struct.UText* nonnull %16, i8 signext 1, i8 signext 0, i32* %4) #12
  store %struct.UText* %437, %struct.UText** %425, align 8
  %438 = call %struct.UText* @utext_close_69(%struct.UText* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %432) #12
  br label %439

439:                                              ; preds = %431, %428
  call void @uprv_free_69(i8* nonnull %417) #12
  br label %440

440:                                              ; preds = %439, %420
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %411) #12
  br label %447

441:                                              ; preds = %360
  %442 = load i32, i32* %4, align 4
  %443 = icmp slt i32 %442, 1
  br i1 %443, label %444, label %447

444:                                              ; preds = %441
  %445 = add nsw i32 %361, 1
  %446 = icmp slt i32 %445, %34
  br i1 %446, label %140, label %66

447:                                              ; preds = %441, %364, %374, %372, %192, %440, %139, %399, %391, %66, %90, %99
  %448 = phi i32 [ %34, %90 ], [ %34, %99 ], [ %34, %139 ], [ %34, %66 ], [ %141, %391 ], [ %141, %399 ], [ %141, %440 ], [ %141, %192 ], [ %361, %364 ], [ %365, %374 ], [ %365, %372 ], [ %361, %441 ]
  %449 = add nsw i32 %448, 1
  br label %450

450:                                              ; preds = %447, %22, %5, %21
  %451 = phi i32 [ 0, %21 ], [ 0, %5 ], [ %449, %447 ], [ 0, %22 ]
  ret i32 %451
}

declare %struct.UText* @utext_openUChars_69(%struct.UText*, i16*, i64, i32*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6912RegexMatcher5startER10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, i32* nocapture dereferenceable(4)) unnamed_addr #5 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %28

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  store i32 %7, i32* %1, align 4
  br label %28

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i32 66306, i32* %1, align 4
  br label %28

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %17 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %16, align 8
  %18 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %17, i64 0, i32 12
  %19 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %18, align 8
  %20 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %15
  store i32 8, i32* %1, align 4
  br label %28

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  br label %28

28:                                               ; preds = %2, %9, %14, %23, %24
  %29 = phi i32 [ -1, %9 ], [ -1, %14 ], [ -1, %23 ], [ %27, %24 ], [ -1, %2 ]
  ret i32 %29
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6912RegexMatcher5startEiR10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, i32, i32* nocapture dereferenceable(4)) unnamed_addr #5 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %50

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 %8, i32* %2, align 4
  br label %50

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %13 = load i8, i8* %12, align 2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  store i32 66306, i32* %2, align 4
  br label %50

16:                                               ; preds = %11
  %17 = icmp slt i32 %1, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %20 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %19, align 8
  %21 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %20, i64 0, i32 12
  %22 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %21, align 8
  %23 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, %1
  br i1 %25, label %26, label %27

26:                                               ; preds = %18, %16
  store i32 8, i32* %2, align 4
  br label %50

27:                                               ; preds = %18
  %28 = icmp eq i32 %1, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  br label %46

31:                                               ; preds = %27
  %32 = icmp sgt i32 %24, 0
  br i1 %32, label %33, label %41

33:                                               ; preds = %31
  %34 = add nsw i32 %1, -1
  %35 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %22, i64 0, i32 4
  %36 = load i32*, i32** %35, align 8
  %37 = sext i32 %34 to i64
  %38 = getelementptr inbounds i32, i32* %36, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  br label %41

41:                                               ; preds = %33, %31
  %42 = phi i64 [ %40, %33 ], [ 0, %31 ]
  %43 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 26
  %44 = load %"struct.icu_69::REStackFrame"*, %"struct.icu_69::REStackFrame"** %43, align 8
  %45 = getelementptr inbounds %"struct.icu_69::REStackFrame", %"struct.icu_69::REStackFrame"* %44, i64 0, i32 2, i64 %42
  br label %46

46:                                               ; preds = %41, %29
  %47 = phi i64* [ %30, %29 ], [ %45, %41 ]
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  br label %50

50:                                               ; preds = %3, %10, %15, %26, %46
  %51 = phi i32 [ -1, %10 ], [ -1, %15 ], [ -1, %26 ], [ %49, %46 ], [ -1, %3 ]
  ret i32 %51
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZNK6icu_6912RegexMatcher7start64ER10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, i32* nocapture dereferenceable(4)) unnamed_addr #5 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %27

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  store i32 %7, i32* %1, align 4
  br label %27

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 18
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i32 66306, i32* %1, align 4
  br label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %17 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %16, align 8
  %18 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %17, i64 0, i32 12
  %19 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %18, align 8
  %20 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %15
  store i32 8, i32* %1, align 4
  br label %27

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 19
  %26 = load i64, i64* %25, align 8
  br label %27

27:                                               ; preds = %2, %9, %14, %23, %24
  %28 = phi i64 [ -1, %9 ], [ -1, %14 ], [ -1, %23 ], [ %26, %24 ], [ -1, %2 ]
  ret i64 %28
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher18useAnchoringBoundsEa(%"class.icu_69::RegexMatcher"* returned, i8 signext) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 17
  store i8 %1, i8* %3, align 1
  %4 = icmp eq i8 %1, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %2, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %2 ]
  %10 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 10
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %13 = select i1 %4, i64* %12, i64* %11
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 11
  store i64 %14, i64* %15, align 8
  ret %"class.icu_69::RegexMatcher"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher20useTransparentBoundsEa(%"class.icu_69::RegexMatcher"* returned, i8 signext) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 16
  store i8 %1, i8* %3, align 8
  %4 = icmp eq i8 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 8
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %2, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %2 ]
  %10 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 9
  %13 = select i1 %4, i64* %12, i64* %11
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  store i64 %14, i64* %15, align 8
  ret %"class.icu_69::RegexMatcher"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcher12setTimeLimitEiR10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture, i32, i32* nocapture dereferenceable(4)) unnamed_addr #5 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %16

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 %8, i32* %2, align 4
  br label %16

11:                                               ; preds = %6
  %12 = icmp slt i32 %1, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  store i32 1, i32* %2, align 4
  br label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 29
  store i32 %1, i32* %15, align 8
  br label %16

16:                                               ; preds = %3, %14, %13, %10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6912RegexMatcher12getTimeLimitEv(%"class.icu_69::RegexMatcher"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 29
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare void @_ZN6icu_699UVector6414setMaxCapacityEi(%"class.icu_69::UVector64"*, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6912RegexMatcher13getStackLimitEv(%"class.icu_69::RegexMatcher"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 32
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcher16setMatchCallbackEPFaPKviES2_R10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture, i8 (i8*, i32)*, i8*, i32* nocapture readonly dereferenceable(4)) unnamed_addr #5 align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 33
  store i8 (i8*, i32)* %1, i8 (i8*, i32)** %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 34
  store i8* %2, i8** %9, align 8
  br label %10

10:                                               ; preds = %4, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcher16getMatchCallbackERPFaPKviERS2_R10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, i8 (i8*, i32)** nocapture dereferenceable(8), i8** nocapture dereferenceable(8), i32* nocapture readonly dereferenceable(4)) unnamed_addr #5 align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %16

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 33
  %9 = bitcast i8 (i8*, i32)** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8 (i8*, i32)** %1 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 34
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8** %2 to i64*
  store i64 %14, i64* %15, align 8
  br label %16

16:                                               ; preds = %4, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcher23setFindProgressCallbackEPFaPKvlES2_R10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture, i8 (i8*, i64)*, i8*, i32* nocapture readonly dereferenceable(4)) unnamed_addr #5 align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 35
  store i8 (i8*, i64)* %1, i8 (i8*, i64)** %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 36
  store i8* %2, i8** %9, align 8
  br label %10

10:                                               ; preds = %4, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcher23getFindProgressCallbackERPFaPKvlERS2_R10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture readonly, i8 (i8*, i64)** nocapture dereferenceable(8), i8** nocapture dereferenceable(8), i32* nocapture readonly dereferenceable(4)) unnamed_addr #5 align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %16

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 35
  %9 = bitcast i8 (i8*, i64)** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8 (i8*, i64)** %1 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 36
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8** %2 to i64*
  store i64 %14, i64* %15, align 8
  br label %16

16:                                               ; preds = %4, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.icu_69::REStackFrame"* @_ZN6icu_6912RegexMatcher10resetStackEv(%"class.icu_69::RegexMatcher"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 25
  %3 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %2, align 8
  tail call void @_ZN6icu_699UVector6417removeAllElementsEv(%"class.icu_69::UVector64"* %3) #12
  %4 = load %"class.icu_69::UVector64"*, %"class.icu_69::UVector64"** %2, align 8
  %5 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 1
  %6 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %6, i64 0, i32 10
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 39
  %10 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, %8
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %18

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, %12
  br i1 %17, label %18, label %24

18:                                               ; preds = %14, %1
  %19 = tail call signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* %4, i32 %12, i32* dereferenceable(4) %9) #12
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %18
  %22 = load i32, i32* %10, align 8
  %23 = add nsw i32 %22, %8
  br label %24

24:                                               ; preds = %21, %14
  %25 = phi i32 [ %23, %21 ], [ %12, %14 ]
  %26 = phi i32 [ %22, %21 ], [ %11, %14 ]
  %27 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %4, i64 0, i32 4
  %28 = load i64*, i64** %27, align 8
  %29 = sext i32 %26 to i64
  %30 = getelementptr inbounds i64, i64* %28, i64 %29
  store i32 %25, i32* %10, align 8
  br label %31

31:                                               ; preds = %18, %24
  %32 = phi i64* [ %30, %24 ], [ null, %18 ]
  %33 = bitcast i64* %32 to %"struct.icu_69::REStackFrame"*
  %34 = load i32, i32* %9, align 4
  %35 = icmp slt i32 %34, 1
  br i1 %35, label %36, label %53

36:                                               ; preds = %31
  %37 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %5, align 8
  %38 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %37, i64 0, i32 10
  %39 = load i32, i32* %38, align 8
  %40 = icmp sgt i32 %39, 2
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds i64, i64* %32, i64 2
  br label %43

43:                                               ; preds = %41, %43
  %44 = phi i64 [ 0, %41 ], [ %46, %43 ]
  %45 = getelementptr inbounds i64, i64* %42, i64 %44
  store i64 -1, i64* %45, align 8
  %46 = add nuw nsw i64 %44, 1
  %47 = load %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"** %5, align 8
  %48 = getelementptr inbounds %"class.icu_69::RegexPattern", %"class.icu_69::RegexPattern"* %47, i64 0, i32 10
  %49 = load i32, i32* %48, align 8
  %50 = add nsw i32 %49, -2
  %51 = sext i32 %50 to i64
  %52 = icmp slt i64 %46, %51
  br i1 %52, label %43, label %53

53:                                               ; preds = %43, %36, %31
  %54 = phi %"struct.icu_69::REStackFrame"* [ null, %31 ], [ %33, %36 ], [ %33, %43 ]
  ret %"struct.icu_69::REStackFrame"* %54
}

declare void @_ZN6icu_699UVector6417removeAllElementsEv(%"class.icu_69::UVector64"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6912RegexMatcher14isWordBoundaryEl(%"class.icu_69::RegexMatcher"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  %4 = load i64, i64* %3, align 8
  %5 = icmp sgt i64 %4, %1
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %7, align 8
  br label %59

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %10 = load %struct.UText*, %struct.UText** %9, align 8
  %11 = getelementptr inbounds %struct.UText, %struct.UText* %10, i64 0, i32 7
  %12 = load i64, i64* %11, align 8
  %13 = sub nsw i64 %1, %12
  %14 = icmp sgt i64 %13, -1
  br i1 %14, label %15, label %29

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.UText, %struct.UText* %10, i64 0, i32 6
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = icmp slt i64 %13, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.UText, %struct.UText* %10, i64 0, i32 10
  %22 = load i16*, i16** %21, align 8
  %23 = getelementptr inbounds i16, i16* %22, i64 %13
  %24 = load i16, i16* %23, align 2
  %25 = icmp ult i16 %24, -9216
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = trunc i64 %13 to i32
  %28 = getelementptr inbounds %struct.UText, %struct.UText* %10, i64 0, i32 8
  store i32 %27, i32* %28, align 8
  br label %30

29:                                               ; preds = %20, %15, %8
  tail call void @utext_setNativeIndex_69(%struct.UText* %10, i64 %1) #12
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.UText*, %struct.UText** %9, align 8
  %32 = getelementptr inbounds %struct.UText, %struct.UText* %31, i64 0, i32 8
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.UText, %struct.UText* %31, i64 0, i32 9
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %33, %35
  br i1 %36, label %37, label %46

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.UText, %struct.UText* %31, i64 0, i32 10
  %39 = load i16*, i16** %38, align 8
  %40 = sext i32 %33 to i64
  %41 = getelementptr inbounds i16, i16* %39, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = icmp ult i16 %42, -10240
  br i1 %43, label %44, label %46

44:                                               ; preds = %37
  %45 = zext i16 %42 to i32
  br label %48

46:                                               ; preds = %37, %30
  %47 = tail call i32 @utext_current32_69(%struct.UText* %31) #12
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i32 [ %45, %44 ], [ %47, %46 ]
  %50 = tail call signext i8 @u_hasBinaryProperty_69(i32 %49, i32 11) #12
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %118

52:                                               ; preds = %48
  %53 = tail call signext i8 @u_charType_69(i32 %49) #12
  %54 = icmp eq i8 %53, 16
  br i1 %54, label %118, label %55

55:                                               ; preds = %52
  %56 = load %"class.icu_69::RegexStaticSets"*, %"class.icu_69::RegexStaticSets"** @_ZN6icu_6915RegexStaticSets11gStaticSetsE, align 8
  %57 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %56, i64 0, i32 1, i64 1
  %58 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %57, i32 %49) #12
  br label %59

59:                                               ; preds = %55, %6
  %60 = phi i8 [ 0, %6 ], [ %58, %55 ]
  %61 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %62 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  br label %63

63:                                               ; preds = %110, %59
  %64 = load %struct.UText*, %struct.UText** %61, align 8
  %65 = getelementptr inbounds %struct.UText, %struct.UText* %64, i64 0, i32 8
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %struct.UText, %struct.UText* %64, i64 0, i32 6
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %66, %68
  br i1 %69, label %75, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %struct.UText, %struct.UText* %64, i64 0, i32 7
  %72 = load i64, i64* %71, align 8
  %73 = sext i32 %66 to i64
  %74 = add nsw i64 %72, %73
  br label %81

75:                                               ; preds = %63
  %76 = getelementptr inbounds %struct.UText, %struct.UText* %64, i64 0, i32 11
  %77 = load %struct.UTextFuncs*, %struct.UTextFuncs** %76, align 8
  %78 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %77, i64 0, i32 10
  %79 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %78, align 8
  %80 = tail call i64 %79(%struct.UText* %64) #12
  br label %81

81:                                               ; preds = %75, %70
  %82 = phi i64 [ %74, %70 ], [ %80, %75 ]
  %83 = load i64, i64* %62, align 8
  %84 = icmp sgt i64 %82, %83
  br i1 %84, label %85, label %115

85:                                               ; preds = %81
  %86 = load %struct.UText*, %struct.UText** %61, align 8
  %87 = getelementptr inbounds %struct.UText, %struct.UText* %86, i64 0, i32 8
  %88 = load i32, i32* %87, align 8
  %89 = icmp sgt i32 %88, 0
  br i1 %89, label %90, label %101

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.UText, %struct.UText* %86, i64 0, i32 10
  %92 = load i16*, i16** %91, align 8
  %93 = add nsw i32 %88, -1
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i16, i16* %92, i64 %94
  %96 = load i16, i16* %95, align 2
  %97 = icmp ult i16 %96, -10240
  br i1 %97, label %98, label %101

98:                                               ; preds = %90
  store i32 %93, i32* %87, align 8
  %99 = load i16, i16* %95, align 2
  %100 = zext i16 %99 to i32
  br label %103

101:                                              ; preds = %90, %85
  %102 = tail call i32 @utext_previous32_69(%struct.UText* %86) #12
  br label %103

103:                                              ; preds = %101, %98
  %104 = phi i32 [ %100, %98 ], [ %102, %101 ]
  %105 = tail call signext i8 @u_hasBinaryProperty_69(i32 %104, i32 11) #12
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %103
  %108 = tail call signext i8 @u_charType_69(i32 %104) #12
  %109 = icmp eq i8 %108, 16
  br i1 %109, label %110, label %111

110:                                              ; preds = %107, %103
  br label %63

111:                                              ; preds = %107
  %112 = load %"class.icu_69::RegexStaticSets"*, %"class.icu_69::RegexStaticSets"** @_ZN6icu_6915RegexStaticSets11gStaticSetsE, align 8
  %113 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %112, i64 0, i32 1, i64 1
  %114 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %113, i32 %104) #12
  br label %115

115:                                              ; preds = %81, %111
  %116 = phi i8 [ %114, %111 ], [ 0, %81 ]
  %117 = xor i8 %116, %60
  br label %118

118:                                              ; preds = %52, %48, %115
  %119 = phi i8 [ %117, %115 ], [ 0, %48 ], [ 0, %52 ]
  ret i8 %119
}

declare signext i8 @u_hasBinaryProperty_69(i32, i32) local_unnamed_addr #4

declare signext i8 @u_charType_69(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6912RegexMatcher19isChunkWordBoundaryEi(%"class.icu_69::RegexMatcher"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %4 = load %struct.UText*, %struct.UText** %3, align 8
  %5 = getelementptr inbounds %struct.UText, %struct.UText* %4, i64 0, i32 10
  %6 = load i16*, i16** %5, align 8
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  %9 = load i64, i64* %8, align 8
  %10 = icmp sgt i64 %9, %7
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %12, align 8
  br label %63

13:                                               ; preds = %2
  %14 = getelementptr inbounds i16, i16* %6, i64 %7
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = and i32 %16, 63488
  %18 = icmp eq i32 %17, 55296
  br i1 %18, label %19, label %52

19:                                               ; preds = %13
  %20 = and i32 %16, 1024
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %36

22:                                               ; preds = %19
  %23 = add nsw i32 %1, 1
  %24 = sext i32 %23 to i64
  %25 = icmp eq i64 %9, %24
  br i1 %25, label %52, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds i16, i16* %6, i64 %24
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 64512
  %31 = icmp eq i32 %30, 56320
  br i1 %31, label %32, label %52

32:                                               ; preds = %26
  %33 = shl nuw nsw i32 %16, 10
  %34 = add nsw i32 %33, -56613888
  %35 = add nsw i32 %34, %29
  br label %52

36:                                               ; preds = %19
  %37 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  %38 = load i64, i64* %37, align 8
  %39 = icmp slt i64 %38, %7
  br i1 %39, label %40, label %52

40:                                               ; preds = %36
  %41 = add nsw i32 %1, -1
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i16, i16* %6, i64 %42
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = and i32 %45, 64512
  %47 = icmp eq i32 %46, 55296
  br i1 %47, label %48, label %52

48:                                               ; preds = %40
  %49 = shl nuw nsw i32 %45, 10
  %50 = add nuw nsw i32 %16, -56613888
  %51 = add nsw i32 %50, %49
  br label %52

52:                                               ; preds = %32, %26, %48, %40, %36, %22, %13
  %53 = phi i32 [ %16, %13 ], [ %35, %32 ], [ %16, %26 ], [ %16, %22 ], [ %51, %48 ], [ %16, %40 ], [ %16, %36 ]
  %54 = tail call signext i8 @u_hasBinaryProperty_69(i32 %53, i32 11) #12
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %111

56:                                               ; preds = %52
  %57 = tail call signext i8 @u_charType_69(i32 %53) #12
  %58 = icmp eq i8 %57, 16
  br i1 %58, label %111, label %59

59:                                               ; preds = %56
  %60 = load %"class.icu_69::RegexStaticSets"*, %"class.icu_69::RegexStaticSets"** @_ZN6icu_6915RegexStaticSets11gStaticSetsE, align 8
  %61 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %60, i64 0, i32 1, i64 1
  %62 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %61, i32 %53) #12
  br label %63

63:                                               ; preds = %59, %11
  %64 = phi i8 [ 0, %11 ], [ %62, %59 ]
  %65 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 12
  %66 = load i64, i64* %65, align 8
  %67 = icmp slt i64 %66, %7
  br i1 %67, label %68, label %108

68:                                               ; preds = %63, %104
  %69 = phi i64 [ %106, %104 ], [ %66, %63 ]
  %70 = phi i32 [ %93, %104 ], [ %1, %63 ]
  %71 = add nsw i32 %70, -1
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i16, i16* %6, i64 %72
  %74 = load i16, i16* %73, align 2
  %75 = zext i16 %74 to i32
  %76 = and i32 %75, 64512
  %77 = icmp eq i32 %76, 56320
  %78 = icmp slt i64 %69, %72
  %79 = and i1 %78, %77
  br i1 %79, label %80, label %92

80:                                               ; preds = %68
  %81 = add nsw i32 %70, -2
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i16, i16* %6, i64 %82
  %84 = load i16, i16* %83, align 2
  %85 = zext i16 %84 to i32
  %86 = and i32 %85, 64512
  %87 = icmp eq i32 %86, 55296
  br i1 %87, label %88, label %92

88:                                               ; preds = %80
  %89 = shl nuw nsw i32 %85, 10
  %90 = add nuw nsw i32 %75, -56613888
  %91 = add nsw i32 %90, %89
  br label %92

92:                                               ; preds = %80, %88, %68
  %93 = phi i32 [ %71, %68 ], [ %81, %88 ], [ %71, %80 ]
  %94 = phi i32 [ %75, %68 ], [ %91, %88 ], [ %75, %80 ]
  %95 = tail call signext i8 @u_hasBinaryProperty_69(i32 %94, i32 11) #12
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %104

97:                                               ; preds = %92
  %98 = tail call signext i8 @u_charType_69(i32 %94) #12
  %99 = icmp eq i8 %98, 16
  br i1 %99, label %104, label %100

100:                                              ; preds = %97
  %101 = load %"class.icu_69::RegexStaticSets"*, %"class.icu_69::RegexStaticSets"** @_ZN6icu_6915RegexStaticSets11gStaticSetsE, align 8
  %102 = getelementptr inbounds %"class.icu_69::RegexStaticSets", %"class.icu_69::RegexStaticSets"* %101, i64 0, i32 1, i64 1
  %103 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %102, i32 %94) #12
  br label %108

104:                                              ; preds = %97, %92
  %105 = sext i32 %93 to i64
  %106 = load i64, i64* %65, align 8
  %107 = icmp slt i64 %106, %105
  br i1 %107, label %68, label %108

108:                                              ; preds = %104, %63, %100
  %109 = phi i8 [ %103, %100 ], [ 0, %63 ], [ 0, %104 ]
  %110 = xor i8 %109, %64
  br label %111

111:                                              ; preds = %56, %52, %108
  %112 = phi i8 [ %110, %108 ], [ 0, %52 ], [ 0, %56 ]
  ret i8 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6912RegexMatcher15isUWordBoundaryElR10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture, i64, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 40
  %5 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %4, align 8
  %6 = icmp eq %"class.icu_69::BreakIterator"* %5, null
  br i1 %6, label %7, label %19

7:                                                ; preds = %3
  %8 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getEnglishEv() #12
  %9 = tail call %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIterator18createWordInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224) %8, i32* dereferenceable(4) %2) #12
  store %"class.icu_69::BreakIterator"* %9, %"class.icu_69::BreakIterator"** %4, align 8
  %10 = load i32, i32* %2, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %33

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %14 = load %struct.UText*, %struct.UText** %13, align 8
  %15 = bitcast %"class.icu_69::BreakIterator"* %9 to void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)***
  %16 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)**, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %16, i64 8
  %18 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %17, align 8
  tail call void %18(%"class.icu_69::BreakIterator"* %9, %struct.UText* %14, i32* dereferenceable(4) %2) #12
  br label %19

19:                                               ; preds = %12, %3
  %20 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 13
  %21 = load i64, i64* %20, align 8
  %22 = icmp sgt i64 %21, %1
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 23
  store i8 1, i8* %24, align 8
  br label %33

25:                                               ; preds = %19
  %26 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %4, align 8
  %27 = trunc i64 %1 to i32
  %28 = bitcast %"class.icu_69::BreakIterator"* %26 to i8 (%"class.icu_69::BreakIterator"*, i32)***
  %29 = load i8 (%"class.icu_69::BreakIterator"*, i32)**, i8 (%"class.icu_69::BreakIterator"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i8 (%"class.icu_69::BreakIterator"*, i32)*, i8 (%"class.icu_69::BreakIterator"*, i32)** %29, i64 17
  %31 = load i8 (%"class.icu_69::BreakIterator"*, i32)*, i8 (%"class.icu_69::BreakIterator"*, i32)** %30, align 8
  %32 = tail call signext i8 %31(%"class.icu_69::BreakIterator"* %26, i32 %27) #12
  br label %33

33:                                               ; preds = %23, %25, %7
  %34 = phi i8 [ 0, %7 ], [ 1, %23 ], [ %32, %25 ]
  ret i8 %34
}

declare %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIterator18createWordInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224), i32* dereferenceable(4)) local_unnamed_addr #4

declare dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getEnglishEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6icu_6912RegexMatcher19followingGCBoundaryElR10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture, i64, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 41
  %5 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %4, align 8
  %6 = icmp eq %"class.icu_69::BreakIterator"* %5, null
  br i1 %6, label %7, label %20

7:                                                ; preds = %3
  %8 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getEnglishEv() #12
  %9 = tail call %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIterator23createCharacterInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224) %8, i32* dereferenceable(4) %2) #12
  store %"class.icu_69::BreakIterator"* %9, %"class.icu_69::BreakIterator"** %4, align 8
  %10 = load i32, i32* %2, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %31

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 4
  %14 = load %struct.UText*, %struct.UText** %13, align 8
  %15 = bitcast %"class.icu_69::BreakIterator"* %9 to void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)***
  %16 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)**, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %16, i64 8
  %18 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %17, align 8
  tail call void %18(%"class.icu_69::BreakIterator"* %9, %struct.UText* %14, i32* dereferenceable(4) %2) #12
  %19 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %4, align 8
  br label %20

20:                                               ; preds = %12, %3
  %21 = phi %"class.icu_69::BreakIterator"* [ %19, %12 ], [ %5, %3 ]
  %22 = trunc i64 %1 to i32
  %23 = bitcast %"class.icu_69::BreakIterator"* %21 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %24 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %24, i64 15
  %26 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %25, align 8
  %27 = tail call i32 %26(%"class.icu_69::BreakIterator"* %21, i32 %22) #12
  %28 = sext i32 %27 to i64
  %29 = icmp eq i32 %27, -1
  %30 = select i1 %29, i64 %1, i64 %28
  br label %31

31:                                               ; preds = %7, %20
  %32 = phi i64 [ %30, %20 ], [ %1, %7 ]
  ret i64 %32
}

declare %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIterator23createCharacterInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224), i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912RegexMatcher13IncrementTimeER10UErrorCode(%"class.icu_69::RegexMatcher"* nocapture, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 31
  store i32 10000, i32* %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 30
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 33
  %8 = load i8 (i8*, i32)*, i8 (i8*, i32)** %7, align 8
  %9 = icmp eq i8 (i8*, i32)* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 34
  %12 = load i8*, i8** %11, align 8
  %13 = tail call signext i8 %8(i8* %12, i32 %6) #12
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  store i32 66323, i32* %1, align 4
  br label %24

16:                                               ; preds = %2, %10
  %17 = getelementptr inbounds %"class.icu_69::RegexMatcher", %"class.icu_69::RegexMatcher"* %0, i64 0, i32 29
  %18 = load i32, i32* %17, align 8
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = load i32, i32* %4, align 4
  %22 = icmp slt i32 %21, %18
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  store i32 66322, i32* %1, align 4
  br label %24

24:                                               ; preds = %20, %15, %23, %16
  ret void
}

declare i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"*, i32) local_unnamed_addr #4

declare void @_ZN6icu_699UVector647setSizeEi(%"class.icu_69::UVector64"*, i32) local_unnamed_addr #4

declare void @_ZN6icu_6924CaseFoldingUTextIteratorC1ER5UText(%"class.icu_69::CaseFoldingUTextIterator"*, %struct.UText* dereferenceable(144)) unnamed_addr #4

declare signext i8 @_ZN6icu_6924CaseFoldingUTextIterator11inExpansionEv(%"class.icu_69::CaseFoldingUTextIterator"*) local_unnamed_addr #4

declare i32 @_ZN6icu_6924CaseFoldingUTextIterator4nextEv(%"class.icu_69::CaseFoldingUTextIterator"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6924CaseFoldingUTextIteratorD1Ev(%"class.icu_69::CaseFoldingUTextIterator"*) unnamed_addr #6

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #4

declare void @_ZN6icu_6924CaseFoldingUCharIteratorC1EPKDsll(%"class.icu_69::CaseFoldingUCharIterator"*, i16*, i64, i64) unnamed_addr #4

declare i32 @_ZN6icu_6924CaseFoldingUCharIterator4nextEv(%"class.icu_69::CaseFoldingUCharIterator"*) local_unnamed_addr #4

declare signext i8 @_ZN6icu_6924CaseFoldingUCharIterator11inExpansionEv(%"class.icu_69::CaseFoldingUCharIterator"*) local_unnamed_addr #4

declare i64 @_ZN6icu_6924CaseFoldingUCharIterator8getIndexEv(%"class.icu_69::CaseFoldingUCharIterator"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6924CaseFoldingUCharIteratorD1Ev(%"class.icu_69::CaseFoldingUCharIterator"*) unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZN6icu_6912RegexMatcher16getStaticClassIDEv() local_unnamed_addr #10 align 2 {
  ret i8* @_ZZN6icu_6912RegexMatcher16getStaticClassIDEvE7classID
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZNK6icu_6912RegexMatcher17getDynamicClassIDEv(%"class.icu_69::RegexMatcher"* nocapture readnone) unnamed_addr #10 align 2 {
  ret i8* @_ZZN6icu_6912RegexMatcher16getStaticClassIDEvE7classID
}

declare signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind allocsize(0) }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !8}
!49 = !{!50}
!50 = distinct !{!50, !51}
!51 = distinct !{!51, !"LVerDomain"}
!52 = !{!53}
!53 = distinct !{!53, !51}
!54 = distinct !{!54, !8}
!55 = distinct !{!55, !10}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !8}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !8}
!64 = distinct !{!64, !10}
!65 = distinct !{!65, !10}
!66 = distinct !{!66, !8}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !8}
!73 = distinct !{!73, !10}
!74 = distinct !{!74, !10}
!75 = distinct !{!75, !8}
!76 = !{!77}
!77 = distinct !{!77, !78}
!78 = distinct !{!78, !"LVerDomain"}
!79 = !{!80}
!80 = distinct !{!80, !78}
!81 = distinct !{!81, !8}
!82 = distinct !{!82, !10}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !8}
!85 = !{!86}
!86 = distinct !{!86, !87}
!87 = distinct !{!87, !"LVerDomain"}
!88 = !{!89}
!89 = distinct !{!89, !87}
!90 = distinct !{!90, !8}
!91 = distinct !{!91, !10}
!92 = distinct !{!92, !10}
!93 = distinct !{!93, !8}
!94 = !{!95}
!95 = distinct !{!95, !96}
!96 = distinct !{!96, !"LVerDomain"}
!97 = !{!98}
!98 = distinct !{!98, !96}
!99 = distinct !{!99, !8}
!100 = distinct !{!100, !10}
!101 = distinct !{!101, !10}
!102 = distinct !{!102, !8}
!103 = !{!104}
!104 = distinct !{!104, !105}
!105 = distinct !{!105, !"LVerDomain"}
!106 = !{!107}
!107 = distinct !{!107, !105}
!108 = distinct !{!108, !8}
!109 = distinct !{!109, !10}
!110 = distinct !{!110, !10}
!111 = distinct !{!111, !8}
!112 = !{!113}
!113 = distinct !{!113, !114}
!114 = distinct !{!114, !"LVerDomain"}
!115 = !{!116}
!116 = distinct !{!116, !114}
!117 = distinct !{!117, !8}
!118 = distinct !{!118, !10}
!119 = distinct !{!119, !10}
!120 = distinct !{!120, !8}
!121 = !{!122}
!122 = distinct !{!122, !123}
!123 = distinct !{!123, !"LVerDomain"}
!124 = !{!125}
!125 = distinct !{!125, !123}
!126 = distinct !{!126, !8}
!127 = distinct !{!127, !10}
!128 = distinct !{!128, !10}
!129 = distinct !{!129, !8}
!130 = !{!131}
!131 = distinct !{!131, !132}
!132 = distinct !{!132, !"LVerDomain"}
!133 = !{!134}
!134 = distinct !{!134, !132}
!135 = distinct !{!135, !8}
!136 = distinct !{!136, !10}
!137 = distinct !{!137, !10}
!138 = distinct !{!138, !8}
!139 = !{!140}
!140 = distinct !{!140, !141}
!141 = distinct !{!141, !"LVerDomain"}
!142 = !{!143}
!143 = distinct !{!143, !141}
!144 = distinct !{!144, !8}
!145 = distinct !{!145, !10}
!146 = distinct !{!146, !10}
!147 = distinct !{!147, !8}
!148 = !{!149}
!149 = distinct !{!149, !150}
!150 = distinct !{!150, !"LVerDomain"}
!151 = !{!152}
!152 = distinct !{!152, !150}
!153 = distinct !{!153, !8}
!154 = distinct !{!154, !10}
!155 = distinct !{!155, !10}
!156 = distinct !{!156, !8}
!157 = !{!158}
!158 = distinct !{!158, !159}
!159 = distinct !{!159, !"LVerDomain"}
!160 = !{!161}
!161 = distinct !{!161, !159}
!162 = distinct !{!162, !8}
!163 = distinct !{!163, !10}
!164 = distinct !{!164, !10}
!165 = distinct !{!165, !8}
!166 = !{!167}
!167 = distinct !{!167, !168}
!168 = distinct !{!168, !"LVerDomain"}
!169 = !{!170}
!170 = distinct !{!170, !168}
!171 = distinct !{!171, !8}
!172 = distinct !{!172, !10}
!173 = distinct !{!173, !10}
!174 = distinct !{!174, !8}
!175 = !{!176}
!176 = distinct !{!176, !177}
!177 = distinct !{!177, !"LVerDomain"}
!178 = !{!179}
!179 = distinct !{!179, !177}
!180 = distinct !{!180, !8}
!181 = distinct !{!181, !10}
!182 = distinct !{!182, !10}
!183 = distinct !{!183, !8}
!184 = !{!185}
!185 = distinct !{!185, !186}
!186 = distinct !{!186, !"LVerDomain"}
!187 = !{!188}
!188 = distinct !{!188, !186}
!189 = distinct !{!189, !8}
!190 = distinct !{!190, !10}
!191 = distinct !{!191, !10}
!192 = distinct !{!192, !8}
!193 = !{!194}
!194 = distinct !{!194, !195}
!195 = distinct !{!195, !"LVerDomain"}
!196 = !{!197}
!197 = distinct !{!197, !195}
!198 = distinct !{!198, !8}
!199 = distinct !{!199, !10}
!200 = distinct !{!200, !10}
!201 = distinct !{!201, !8}
!202 = !{!203}
!203 = distinct !{!203, !204}
!204 = distinct !{!204, !"LVerDomain"}
!205 = !{!206}
!206 = distinct !{!206, !204}
!207 = distinct !{!207, !8}
!208 = distinct !{!208, !10}
!209 = distinct !{!209, !10}
!210 = distinct !{!210, !8}
!211 = !{!212}
!212 = distinct !{!212, !213}
!213 = distinct !{!213, !"LVerDomain"}
!214 = !{!215}
!215 = distinct !{!215, !213}
!216 = distinct !{!216, !8}
!217 = distinct !{!217, !10}
!218 = distinct !{!218, !10}
!219 = distinct !{!219, !8}
