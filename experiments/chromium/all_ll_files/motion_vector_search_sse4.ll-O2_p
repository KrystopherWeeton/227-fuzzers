; ModuleID = '../../third_party/libgav1/src/src/dsp/x86/motion_vector_search_sse4.cc'
source_filename = "../../third_party/libgav1/src/src/dsp/x86/motion_vector_search_sse4.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.libgav1::dsp::Dsp" = type { void (i8*, i8*, i32, i32, i8*, i64)*, void (i8*, i64, i8*, i32*)*, [2 x [3 x void (i16*, i64, i32, i32, i32, i32, i32, i8*, i64)*]], [19 x void (i8*, i64, [32 x i16]*, i32)*], [19 x [3 x void ([32 x i16]*, i32, i32, i8*, i64)*]], [2 x [2 x [2 x [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i8*, i64)*]]]], [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64)*], void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i64, i8*, i8*, i32, i32, i32, i32, i1, i1)*, void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i8*, i8, i8, i32, i32, i8*, i64)*, %"struct.libgav1::dsp::FilmGrainFuncs", void (i8*, i64, i8*, i8*, i8, i32, i32)*, [3 x void (i8*, i8*, i64, i8*, i64, i32, i32)*], void (i8*, i32, i32)*, void (i8*, i32)*, [19 x [10 x void (i8*, i64, i8*, i8*)*]], [4 x [5 x [2 x void (i8, i8, i32, i8*, i32, i32, i8*)*]]], [4 x [2 x void (i8*, i64, i32, i32, i32)*]], [2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*], [3 x [2 x void (i8*, i8*, i64, i8*, i64, i32, i32, i8*, i64)*]], void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*], [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*], [2 x void (i8*, i64, i32, i32, i8*, i64)*], void (i32, i32, i32, i8*)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, [6 x [6 x [2 x void (i8*, i8*, i8*, i64)*]]] }
%"struct.libgav1::dsp::FilmGrainFuncs" = type { [3 x void (%"struct.libgav1::FilmGrainParams"*, i8*)*], [2 x [4 x void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)*]], [2 x void (i8*, i32, i32, i32, i32, i32, i8*)*], void (i8*, i32, i32, i32, i32, i8*)*, void (i32, i8*, i8*, i8*)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, [2 x void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*] }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"struct.libgav1::RestorationUnitInfo" = type { i8, %"struct.libgav1::SgrProjInfo", [16 x i8], %"struct.libgav1::WienerInfo" }
%"struct.libgav1::SgrProjInfo" = type { i32, [2 x i32] }
%"struct.libgav1::WienerInfo" = type { [2 x i16], [28 x i8], [2 x [4 x i16]], [16 x i8] }
%"union.libgav1::RestorationBuffer" = type { %"struct.libgav1::SgrBuffer", [5024 x i8] }
%"struct.libgav1::SgrBuffer" = type { [1152 x i16], [1440 x i16], [1152 x i32], [1440 x i32], [1024 x i16], [768 x i16], [512 x i16], [1024 x i32], [768 x i32], [512 x i32], [288 x i8], [288 x i32] }
%"struct.libgav1::ReferenceInfo" = type { %"struct.std::__1::array", %"struct.std::__1::array.0", %"struct.std::__1::array.0", %"struct.std::__1::array.1", %"struct.std::__1::array.2", %"class.libgav1::Array2D", %"class.libgav1::Array2D.4" }
%"struct.std::__1::array" = type { [8 x i8] }
%"struct.std::__1::array.0" = type { [8 x i8] }
%"struct.std::__1::array.1" = type { [8 x i8] }
%"struct.std::__1::array.2" = type { [8 x i16] }
%"class.libgav1::Array2D" = type { %"class.std::__1::unique_ptr", i64, i64, %"class.libgav1::Array2DView" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.libgav1::Array2DView" = type { i32, i32, i8* }
%"class.libgav1::Array2D.4" = type { %"class.std::__1::unique_ptr.5", i64, i64, %"class.libgav1::Array2DView.11" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.libgav1::MotionVector"* }
%"struct.libgav1::MotionVector" = type { %union.anon }
%union.anon = type { i32 }
%"class.libgav1::Array2DView.11" = type { i32, i32, %"struct.libgav1::MotionVector"* }
%"struct.libgav1::TemporalMotionField" = type { %"class.libgav1::Array2D.4", %"class.libgav1::Array2D.12" }
%"class.libgav1::Array2D.12" = type { %"class.std::__1::unique_ptr.13", i64, i64, %"class.libgav1::Array2DView.19" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%"class.libgav1::Array2DView.19" = type { i32, i32, i8* }
%"union.libgav1::CompoundMotionVector" = type { i64 }

@_ZN7libgav127kProjectionMvDivisionLookupE = external local_unnamed_addr constant [32 x i16], align 16
@_ZN7libgav13dsp12_GLOBAL__N_133kProjectionMvDivisionLookup_32bitE = internal unnamed_addr constant [32 x i32] [i32 0, i32 16384, i32 8192, i32 5461, i32 4096, i32 3276, i32 2730, i32 2340, i32 2048, i32 1820, i32 1638, i32 1489, i32 1365, i32 1260, i32 1170, i32 1092, i32 1024, i32 963, i32 910, i32 862, i32 819, i32 780, i32 744, i32 712, i32 682, i32 655, i32 630, i32 606, i32 585, i32 564, i32 546, i32 528], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav13dsp29MotionVectorSearchInit_SSE4_1Ev() local_unnamed_addr #0 {
  %1 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32 8) #5
  %2 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 22, i64 0
  %3 = bitcast void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)** %2 to <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*>*
  store <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*> <void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_139MvProjectionCompoundLowPrecision_SSE4_1EPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE, void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_139MvProjectionCompoundForceInteger_SSE4_1EPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE>, <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*>* %3, align 8
  %4 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 22, i64 2
  store void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_140MvProjectionCompoundHighPrecision_SSE4_1EPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE, void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)** %4, align 8
  %5 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 23, i64 0
  %6 = bitcast void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)** %5 to <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*>*
  store <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*> <void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_137MvProjectionSingleLowPrecision_SSE4_1EPKNS_12MotionVectorEPKaiiPS2_, void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_137MvProjectionSingleForceInteger_SSE4_1EPKNS_12MotionVectorEPKaiiPS2_>, <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*>* %6, align 8
  %7 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 23, i64 2
  store void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_138MvProjectionSingleHighPrecision_SSE4_1EPKNS_12MotionVectorEPKaiiPS2_, void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)** %7, align 8
  %8 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32 10) #5
  %9 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %8, i64 0, i32 22, i64 0
  %10 = bitcast void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)** %9 to <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*>*
  store <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*> <void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_139MvProjectionCompoundLowPrecision_SSE4_1EPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE, void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_139MvProjectionCompoundForceInteger_SSE4_1EPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE>, <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*>* %10, align 8
  %11 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %8, i64 0, i32 22, i64 2
  store void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_140MvProjectionCompoundHighPrecision_SSE4_1EPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE, void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)** %11, align 8
  %12 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %8, i64 0, i32 23, i64 0
  %13 = bitcast void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)** %12 to <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*>*
  store <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*> <void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_137MvProjectionSingleLowPrecision_SSE4_1EPKNS_12MotionVectorEPKaiiPS2_, void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_137MvProjectionSingleForceInteger_SSE4_1EPKNS_12MotionVectorEPKaiiPS2_>, <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*>* %13, align 8
  %14 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %8, i64 0, i32 23, i64 2
  store void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_138MvProjectionSingleHighPrecision_SSE4_1EPKNS_12MotionVectorEPKaiiPS2_, void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)** %14, align 8
  ret void
}

declare %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_139MvProjectionCompoundLowPrecision_SSE4_1EPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE(%"struct.libgav1::MotionVector"* nocapture readonly, i8* nocapture readonly, i32* nocapture readonly, i32, %"union.libgav1::CompoundMotionVector"* nocapture) #2 {
  %6 = load i32, i32* %2, align 4
  %7 = getelementptr inbounds i32, i32* %2, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = shl nuw i64 %9, 32
  %11 = zext i32 %6 to i64
  %12 = or i64 %10, %11
  %13 = insertelement <2 x i64> undef, i64 %12, i32 0
  %14 = bitcast <2 x i64> %13 to <4 x i32>
  %15 = shufflevector <4 x i32> %14, <4 x i32> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %16 = sext i32 %3 to i64
  br label %17

17:                                               ; preds = %17, %5
  %18 = phi i64 [ %72, %17 ], [ 0, %5 ]
  %19 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %0, i64 %18
  %20 = getelementptr inbounds i8, i8* %1, i64 %18
  %21 = bitcast %"struct.libgav1::MotionVector"* %19 to i64*
  %22 = load i64, i64* %21, align 1
  %23 = insertelement <2 x i64> undef, i64 %22, i32 0
  %24 = bitcast <2 x i64> %23 to <8 x i16>
  %25 = shufflevector <8 x i16> %24, <8 x i16> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %26 = zext <4 x i16> %25 to <4 x i32>
  %27 = bitcast <4 x i32> %26 to <2 x i64>
  %28 = shufflevector <2 x i64> %27, <2 x i64> undef, <2 x i32> zeroinitializer
  %29 = shufflevector <2 x i64> %27, <2 x i64> undef, <2 x i32> <i32 1, i32 1>
  %30 = load i8, i8* %20, align 1
  %31 = sext i8 %30 to i64
  %32 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %31
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i32
  %35 = insertelement <4 x i32> undef, i32 %34, i32 0
  %36 = shufflevector <4 x i32> %35, <4 x i32> undef, <4 x i32> zeroinitializer
  %37 = getelementptr inbounds i8, i8* %20, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i64
  %40 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = sext i16 %41 to i32
  %43 = insertelement <4 x i32> undef, i32 %42, i32 0
  %44 = shufflevector <4 x i32> %43, <4 x i32> undef, <4 x i32> zeroinitializer
  %45 = bitcast <2 x i64> %28 to <8 x i16>
  %46 = bitcast <4 x i32> %36 to <8 x i16>
  %47 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %45, <8 x i16> %46) #5
  %48 = mul <4 x i32> %47, %15
  %49 = ashr <4 x i32> %48, <i32 31, i32 31, i32 31, i32 31>
  %50 = add <4 x i32> %48, <i32 8192, i32 8192, i32 8192, i32 8192>
  %51 = add <4 x i32> %50, %49
  %52 = ashr <4 x i32> %51, <i32 14, i32 14, i32 14, i32 14>
  %53 = bitcast <2 x i64> %29 to <8 x i16>
  %54 = bitcast <4 x i32> %44 to <8 x i16>
  %55 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %53, <8 x i16> %54) #5
  %56 = mul <4 x i32> %55, %15
  %57 = ashr <4 x i32> %56, <i32 31, i32 31, i32 31, i32 31>
  %58 = add <4 x i32> %56, <i32 8192, i32 8192, i32 8192, i32 8192>
  %59 = add <4 x i32> %58, %57
  %60 = ashr <4 x i32> %59, <i32 14, i32 14, i32 14, i32 14>
  %61 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %52, <4 x i32> %60) #5
  %62 = icmp slt <8 x i16> %61, <i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383>
  %63 = select <8 x i1> %62, <8 x i16> %61, <8 x i16> <i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383>
  %64 = icmp sgt <8 x i16> %63, <i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383>
  %65 = select <8 x i1> %64, <8 x i16> %63, <8 x i16> <i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383>
  %66 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %4, i64 %18
  %67 = ashr <8 x i16> %65, <i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15>
  %68 = sub nsw <8 x i16> %65, %67
  %69 = bitcast <8 x i16> %68 to <2 x i64>
  %70 = and <2 x i64> %69, <i64 -281479271743490, i64 -281479271743490>
  %71 = bitcast %"union.libgav1::CompoundMotionVector"* %66 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %71, align 16
  %72 = add nuw nsw i64 %18, 2
  %73 = icmp slt i64 %72, %16
  br i1 %73, label %17, label %74

74:                                               ; preds = %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_139MvProjectionCompoundForceInteger_SSE4_1EPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE(%"struct.libgav1::MotionVector"* nocapture readonly, i8* nocapture readonly, i32* nocapture readonly, i32, %"union.libgav1::CompoundMotionVector"* nocapture) #2 {
  %6 = load i32, i32* %2, align 4
  %7 = getelementptr inbounds i32, i32* %2, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = shl nuw i64 %9, 32
  %11 = zext i32 %6 to i64
  %12 = or i64 %10, %11
  %13 = insertelement <2 x i64> undef, i64 %12, i32 0
  %14 = bitcast <2 x i64> %13 to <4 x i32>
  %15 = shufflevector <4 x i32> %14, <4 x i32> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %16 = sext i32 %3 to i64
  br label %17

17:                                               ; preds = %17, %5
  %18 = phi i64 [ %73, %17 ], [ 0, %5 ]
  %19 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %0, i64 %18
  %20 = getelementptr inbounds i8, i8* %1, i64 %18
  %21 = bitcast %"struct.libgav1::MotionVector"* %19 to i64*
  %22 = load i64, i64* %21, align 1
  %23 = insertelement <2 x i64> undef, i64 %22, i32 0
  %24 = bitcast <2 x i64> %23 to <8 x i16>
  %25 = shufflevector <8 x i16> %24, <8 x i16> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %26 = zext <4 x i16> %25 to <4 x i32>
  %27 = bitcast <4 x i32> %26 to <2 x i64>
  %28 = shufflevector <2 x i64> %27, <2 x i64> undef, <2 x i32> zeroinitializer
  %29 = shufflevector <2 x i64> %27, <2 x i64> undef, <2 x i32> <i32 1, i32 1>
  %30 = load i8, i8* %20, align 1
  %31 = sext i8 %30 to i64
  %32 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %31
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i32
  %35 = insertelement <4 x i32> undef, i32 %34, i32 0
  %36 = shufflevector <4 x i32> %35, <4 x i32> undef, <4 x i32> zeroinitializer
  %37 = getelementptr inbounds i8, i8* %20, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i64
  %40 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = sext i16 %41 to i32
  %43 = insertelement <4 x i32> undef, i32 %42, i32 0
  %44 = shufflevector <4 x i32> %43, <4 x i32> undef, <4 x i32> zeroinitializer
  %45 = bitcast <2 x i64> %28 to <8 x i16>
  %46 = bitcast <4 x i32> %36 to <8 x i16>
  %47 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %45, <8 x i16> %46) #5
  %48 = mul <4 x i32> %47, %15
  %49 = ashr <4 x i32> %48, <i32 31, i32 31, i32 31, i32 31>
  %50 = add <4 x i32> %48, <i32 8192, i32 8192, i32 8192, i32 8192>
  %51 = add <4 x i32> %50, %49
  %52 = ashr <4 x i32> %51, <i32 14, i32 14, i32 14, i32 14>
  %53 = bitcast <2 x i64> %29 to <8 x i16>
  %54 = bitcast <4 x i32> %44 to <8 x i16>
  %55 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %53, <8 x i16> %54) #5
  %56 = mul <4 x i32> %55, %15
  %57 = ashr <4 x i32> %56, <i32 31, i32 31, i32 31, i32 31>
  %58 = add <4 x i32> %56, <i32 8192, i32 8192, i32 8192, i32 8192>
  %59 = add <4 x i32> %58, %57
  %60 = ashr <4 x i32> %59, <i32 14, i32 14, i32 14, i32 14>
  %61 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %52, <4 x i32> %60) #5
  %62 = icmp slt <8 x i16> %61, <i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383>
  %63 = select <8 x i1> %62, <8 x i16> %61, <8 x i16> <i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383>
  %64 = icmp sgt <8 x i16> %63, <i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383>
  %65 = select <8 x i1> %64, <8 x i16> %63, <8 x i16> <i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383>
  %66 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %4, i64 %18
  %67 = add nsw <8 x i16> %65, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %68 = lshr <8 x i16> %65, <i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15>
  %69 = add <8 x i16> %67, %68
  %70 = bitcast <8 x i16> %69 to <2 x i64>
  %71 = and <2 x i64> %70, <i64 -1970354902204424, i64 -1970354902204424>
  %72 = bitcast %"union.libgav1::CompoundMotionVector"* %66 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %72, align 16
  %73 = add nuw nsw i64 %18, 2
  %74 = icmp slt i64 %73, %16
  br i1 %74, label %17, label %75

75:                                               ; preds = %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_140MvProjectionCompoundHighPrecision_SSE4_1EPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE(%"struct.libgav1::MotionVector"* nocapture readonly, i8* nocapture readonly, i32* nocapture readonly, i32, %"union.libgav1::CompoundMotionVector"* nocapture) #2 {
  %6 = load i32, i32* %2, align 4
  %7 = getelementptr inbounds i32, i32* %2, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = shl nuw i64 %9, 32
  %11 = zext i32 %6 to i64
  %12 = or i64 %10, %11
  %13 = insertelement <2 x i64> undef, i64 %12, i32 0
  %14 = bitcast <2 x i64> %13 to <4 x i32>
  %15 = shufflevector <4 x i32> %14, <4 x i32> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %16 = sext i32 %3 to i64
  br label %17

17:                                               ; preds = %17, %5
  %18 = phi i64 [ %68, %17 ], [ 0, %5 ]
  %19 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %0, i64 %18
  %20 = getelementptr inbounds i8, i8* %1, i64 %18
  %21 = bitcast %"struct.libgav1::MotionVector"* %19 to i64*
  %22 = load i64, i64* %21, align 1
  %23 = insertelement <2 x i64> undef, i64 %22, i32 0
  %24 = bitcast <2 x i64> %23 to <8 x i16>
  %25 = shufflevector <8 x i16> %24, <8 x i16> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %26 = zext <4 x i16> %25 to <4 x i32>
  %27 = bitcast <4 x i32> %26 to <2 x i64>
  %28 = shufflevector <2 x i64> %27, <2 x i64> undef, <2 x i32> zeroinitializer
  %29 = shufflevector <2 x i64> %27, <2 x i64> undef, <2 x i32> <i32 1, i32 1>
  %30 = load i8, i8* %20, align 1
  %31 = sext i8 %30 to i64
  %32 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %31
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i32
  %35 = insertelement <4 x i32> undef, i32 %34, i32 0
  %36 = shufflevector <4 x i32> %35, <4 x i32> undef, <4 x i32> zeroinitializer
  %37 = getelementptr inbounds i8, i8* %20, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i64
  %40 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = sext i16 %41 to i32
  %43 = insertelement <4 x i32> undef, i32 %42, i32 0
  %44 = shufflevector <4 x i32> %43, <4 x i32> undef, <4 x i32> zeroinitializer
  %45 = bitcast <2 x i64> %28 to <8 x i16>
  %46 = bitcast <4 x i32> %36 to <8 x i16>
  %47 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %45, <8 x i16> %46) #5
  %48 = mul <4 x i32> %47, %15
  %49 = ashr <4 x i32> %48, <i32 31, i32 31, i32 31, i32 31>
  %50 = add <4 x i32> %48, <i32 8192, i32 8192, i32 8192, i32 8192>
  %51 = add <4 x i32> %50, %49
  %52 = ashr <4 x i32> %51, <i32 14, i32 14, i32 14, i32 14>
  %53 = bitcast <2 x i64> %29 to <8 x i16>
  %54 = bitcast <4 x i32> %44 to <8 x i16>
  %55 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %53, <8 x i16> %54) #5
  %56 = mul <4 x i32> %55, %15
  %57 = ashr <4 x i32> %56, <i32 31, i32 31, i32 31, i32 31>
  %58 = add <4 x i32> %56, <i32 8192, i32 8192, i32 8192, i32 8192>
  %59 = add <4 x i32> %58, %57
  %60 = ashr <4 x i32> %59, <i32 14, i32 14, i32 14, i32 14>
  %61 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %52, <4 x i32> %60) #5
  %62 = icmp slt <8 x i16> %61, <i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383>
  %63 = select <8 x i1> %62, <8 x i16> %61, <8 x i16> <i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383>
  %64 = icmp sgt <8 x i16> %63, <i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383>
  %65 = select <8 x i1> %64, <8 x i16> %63, <8 x i16> <i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383>
  %66 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %4, i64 %18
  %67 = bitcast %"union.libgav1::CompoundMotionVector"* %66 to <8 x i16>*
  store <8 x i16> %65, <8 x i16>* %67, align 16
  %68 = add nuw nsw i64 %18, 2
  %69 = icmp slt i64 %68, %16
  br i1 %69, label %17, label %70

70:                                               ; preds = %17
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_137MvProjectionSingleLowPrecision_SSE4_1EPKNS_12MotionVectorEPKaiiPS2_(%"struct.libgav1::MotionVector"* nocapture readonly, i8* nocapture readonly, i32, i32, %"struct.libgav1::MotionVector"* nocapture) #3 {
  %6 = insertelement <4 x i32> undef, i32 %2, i32 0
  %7 = shufflevector <4 x i32> %6, <4 x i32> undef, <4 x i32> zeroinitializer
  %8 = sext i32 %3 to i64
  br label %9

9:                                                ; preds = %9, %5
  %10 = phi i64 [ %67, %9 ], [ 0, %5 ]
  %11 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %0, i64 %10
  %12 = getelementptr inbounds i8, i8* %1, i64 %10
  %13 = bitcast %"struct.libgav1::MotionVector"* %11 to <8 x i16>*
  %14 = load <8 x i16>, <8 x i16>* %13, align 16
  %15 = load i8, i8* %12, align 1
  %16 = sext i8 %15 to i64
  %17 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZN7libgav13dsp12_GLOBAL__N_133kProjectionMvDivisionLookup_32bitE, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = insertelement <4 x i32> undef, i32 %18, i32 0
  %20 = getelementptr inbounds i8, i8* %12, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i64
  %23 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZN7libgav13dsp12_GLOBAL__N_133kProjectionMvDivisionLookup_32bitE, i64 0, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = insertelement <4 x i32> %19, i32 %24, i64 1
  %26 = getelementptr inbounds i8, i8* %12, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i64
  %29 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZN7libgav13dsp12_GLOBAL__N_133kProjectionMvDivisionLookup_32bitE, i64 0, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = insertelement <4 x i32> %25, i32 %30, i64 2
  %32 = getelementptr inbounds i8, i8* %12, i64 3
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i64
  %35 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZN7libgav13dsp12_GLOBAL__N_133kProjectionMvDivisionLookup_32bitE, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = insertelement <4 x i32> %31, i32 %36, i64 3
  %38 = shufflevector <8 x i16> %14, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %39 = shufflevector <8 x i16> %14, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %40 = shufflevector <4 x i32> %37, <4 x i32> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %41 = shufflevector <4 x i32> %37, <4 x i32> undef, <4 x i32> <i32 2, i32 2, i32 3, i32 3>
  %42 = bitcast <4 x i32> %40 to <8 x i16>
  %43 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %38, <8 x i16> %42) #5
  %44 = mul <4 x i32> %43, %7
  %45 = ashr <4 x i32> %44, <i32 31, i32 31, i32 31, i32 31>
  %46 = add <4 x i32> %44, <i32 8192, i32 8192, i32 8192, i32 8192>
  %47 = add <4 x i32> %46, %45
  %48 = ashr <4 x i32> %47, <i32 14, i32 14, i32 14, i32 14>
  %49 = bitcast <4 x i32> %41 to <8 x i16>
  %50 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %39, <8 x i16> %49) #5
  %51 = mul <4 x i32> %50, %7
  %52 = ashr <4 x i32> %51, <i32 31, i32 31, i32 31, i32 31>
  %53 = add <4 x i32> %51, <i32 8192, i32 8192, i32 8192, i32 8192>
  %54 = add <4 x i32> %53, %52
  %55 = ashr <4 x i32> %54, <i32 14, i32 14, i32 14, i32 14>
  %56 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %48, <4 x i32> %55) #5
  %57 = icmp slt <8 x i16> %56, <i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383>
  %58 = select <8 x i1> %57, <8 x i16> %56, <8 x i16> <i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383>
  %59 = icmp sgt <8 x i16> %58, <i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383>
  %60 = select <8 x i1> %59, <8 x i16> %58, <8 x i16> <i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383>
  %61 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %4, i64 %10
  %62 = ashr <8 x i16> %60, <i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15>
  %63 = sub nsw <8 x i16> %60, %62
  %64 = bitcast <8 x i16> %63 to <2 x i64>
  %65 = and <2 x i64> %64, <i64 -281479271743490, i64 -281479271743490>
  %66 = bitcast %"struct.libgav1::MotionVector"* %61 to <2 x i64>*
  store <2 x i64> %65, <2 x i64>* %66, align 16
  %67 = add nuw nsw i64 %10, 4
  %68 = icmp slt i64 %67, %8
  br i1 %68, label %9, label %69

69:                                               ; preds = %9
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_137MvProjectionSingleForceInteger_SSE4_1EPKNS_12MotionVectorEPKaiiPS2_(%"struct.libgav1::MotionVector"* nocapture readonly, i8* nocapture readonly, i32, i32, %"struct.libgav1::MotionVector"* nocapture) #3 {
  %6 = insertelement <4 x i32> undef, i32 %2, i32 0
  %7 = shufflevector <4 x i32> %6, <4 x i32> undef, <4 x i32> zeroinitializer
  %8 = sext i32 %3 to i64
  br label %9

9:                                                ; preds = %9, %5
  %10 = phi i64 [ %68, %9 ], [ 0, %5 ]
  %11 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %0, i64 %10
  %12 = getelementptr inbounds i8, i8* %1, i64 %10
  %13 = bitcast %"struct.libgav1::MotionVector"* %11 to <8 x i16>*
  %14 = load <8 x i16>, <8 x i16>* %13, align 16
  %15 = load i8, i8* %12, align 1
  %16 = sext i8 %15 to i64
  %17 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZN7libgav13dsp12_GLOBAL__N_133kProjectionMvDivisionLookup_32bitE, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = insertelement <4 x i32> undef, i32 %18, i32 0
  %20 = getelementptr inbounds i8, i8* %12, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i64
  %23 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZN7libgav13dsp12_GLOBAL__N_133kProjectionMvDivisionLookup_32bitE, i64 0, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = insertelement <4 x i32> %19, i32 %24, i64 1
  %26 = getelementptr inbounds i8, i8* %12, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i64
  %29 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZN7libgav13dsp12_GLOBAL__N_133kProjectionMvDivisionLookup_32bitE, i64 0, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = insertelement <4 x i32> %25, i32 %30, i64 2
  %32 = getelementptr inbounds i8, i8* %12, i64 3
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i64
  %35 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZN7libgav13dsp12_GLOBAL__N_133kProjectionMvDivisionLookup_32bitE, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = insertelement <4 x i32> %31, i32 %36, i64 3
  %38 = shufflevector <8 x i16> %14, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %39 = shufflevector <8 x i16> %14, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %40 = shufflevector <4 x i32> %37, <4 x i32> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %41 = shufflevector <4 x i32> %37, <4 x i32> undef, <4 x i32> <i32 2, i32 2, i32 3, i32 3>
  %42 = bitcast <4 x i32> %40 to <8 x i16>
  %43 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %38, <8 x i16> %42) #5
  %44 = mul <4 x i32> %43, %7
  %45 = ashr <4 x i32> %44, <i32 31, i32 31, i32 31, i32 31>
  %46 = add <4 x i32> %44, <i32 8192, i32 8192, i32 8192, i32 8192>
  %47 = add <4 x i32> %46, %45
  %48 = ashr <4 x i32> %47, <i32 14, i32 14, i32 14, i32 14>
  %49 = bitcast <4 x i32> %41 to <8 x i16>
  %50 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %39, <8 x i16> %49) #5
  %51 = mul <4 x i32> %50, %7
  %52 = ashr <4 x i32> %51, <i32 31, i32 31, i32 31, i32 31>
  %53 = add <4 x i32> %51, <i32 8192, i32 8192, i32 8192, i32 8192>
  %54 = add <4 x i32> %53, %52
  %55 = ashr <4 x i32> %54, <i32 14, i32 14, i32 14, i32 14>
  %56 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %48, <4 x i32> %55) #5
  %57 = icmp slt <8 x i16> %56, <i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383>
  %58 = select <8 x i1> %57, <8 x i16> %56, <8 x i16> <i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383>
  %59 = icmp sgt <8 x i16> %58, <i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383>
  %60 = select <8 x i1> %59, <8 x i16> %58, <8 x i16> <i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383>
  %61 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %4, i64 %10
  %62 = add nsw <8 x i16> %60, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %63 = lshr <8 x i16> %60, <i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15>
  %64 = add <8 x i16> %62, %63
  %65 = bitcast <8 x i16> %64 to <2 x i64>
  %66 = and <2 x i64> %65, <i64 -1970354902204424, i64 -1970354902204424>
  %67 = bitcast %"struct.libgav1::MotionVector"* %61 to <2 x i64>*
  store <2 x i64> %66, <2 x i64>* %67, align 16
  %68 = add nuw nsw i64 %10, 4
  %69 = icmp slt i64 %68, %8
  br i1 %69, label %9, label %70

70:                                               ; preds = %9
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_138MvProjectionSingleHighPrecision_SSE4_1EPKNS_12MotionVectorEPKaiiPS2_(%"struct.libgav1::MotionVector"* nocapture readonly, i8* nocapture readonly, i32, i32, %"struct.libgav1::MotionVector"* nocapture) #3 {
  %6 = insertelement <4 x i32> undef, i32 %2, i32 0
  %7 = shufflevector <4 x i32> %6, <4 x i32> undef, <4 x i32> zeroinitializer
  %8 = sext i32 %3 to i64
  br label %9

9:                                                ; preds = %9, %5
  %10 = phi i64 [ %63, %9 ], [ 0, %5 ]
  %11 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %0, i64 %10
  %12 = getelementptr inbounds i8, i8* %1, i64 %10
  %13 = bitcast %"struct.libgav1::MotionVector"* %11 to <8 x i16>*
  %14 = load <8 x i16>, <8 x i16>* %13, align 16
  %15 = load i8, i8* %12, align 1
  %16 = sext i8 %15 to i64
  %17 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZN7libgav13dsp12_GLOBAL__N_133kProjectionMvDivisionLookup_32bitE, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = insertelement <4 x i32> undef, i32 %18, i32 0
  %20 = getelementptr inbounds i8, i8* %12, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i64
  %23 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZN7libgav13dsp12_GLOBAL__N_133kProjectionMvDivisionLookup_32bitE, i64 0, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = insertelement <4 x i32> %19, i32 %24, i64 1
  %26 = getelementptr inbounds i8, i8* %12, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i64
  %29 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZN7libgav13dsp12_GLOBAL__N_133kProjectionMvDivisionLookup_32bitE, i64 0, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = insertelement <4 x i32> %25, i32 %30, i64 2
  %32 = getelementptr inbounds i8, i8* %12, i64 3
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i64
  %35 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZN7libgav13dsp12_GLOBAL__N_133kProjectionMvDivisionLookup_32bitE, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = insertelement <4 x i32> %31, i32 %36, i64 3
  %38 = shufflevector <8 x i16> %14, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %39 = shufflevector <8 x i16> %14, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %40 = shufflevector <4 x i32> %37, <4 x i32> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %41 = shufflevector <4 x i32> %37, <4 x i32> undef, <4 x i32> <i32 2, i32 2, i32 3, i32 3>
  %42 = bitcast <4 x i32> %40 to <8 x i16>
  %43 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %38, <8 x i16> %42) #5
  %44 = mul <4 x i32> %43, %7
  %45 = ashr <4 x i32> %44, <i32 31, i32 31, i32 31, i32 31>
  %46 = add <4 x i32> %44, <i32 8192, i32 8192, i32 8192, i32 8192>
  %47 = add <4 x i32> %46, %45
  %48 = ashr <4 x i32> %47, <i32 14, i32 14, i32 14, i32 14>
  %49 = bitcast <4 x i32> %41 to <8 x i16>
  %50 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %39, <8 x i16> %49) #5
  %51 = mul <4 x i32> %50, %7
  %52 = ashr <4 x i32> %51, <i32 31, i32 31, i32 31, i32 31>
  %53 = add <4 x i32> %51, <i32 8192, i32 8192, i32 8192, i32 8192>
  %54 = add <4 x i32> %53, %52
  %55 = ashr <4 x i32> %54, <i32 14, i32 14, i32 14, i32 14>
  %56 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %48, <4 x i32> %55) #5
  %57 = icmp slt <8 x i16> %56, <i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383>
  %58 = select <8 x i1> %57, <8 x i16> %56, <8 x i16> <i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383, i16 16383>
  %59 = icmp sgt <8 x i16> %58, <i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383>
  %60 = select <8 x i1> %59, <8 x i16> %58, <8 x i16> <i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383, i16 -16383>
  %61 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %4, i64 %10
  %62 = bitcast %"struct.libgav1::MotionVector"* %61 to <8 x i16>*
  store <8 x i16> %60, <8 x i16>* %62, align 16
  %63 = add nuw nsw i64 %10, 4
  %64 = icmp slt i64 %63, %8
  br i1 %64, label %9, label %65

65:                                               ; preds = %9
  ret void
}

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16>, <8 x i16>) #4

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32>, <4 x i32>) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
