; ModuleID = '../../third_party/abseil-cpp/absl/base/internal/raw_logging.cc'
source_filename = "../../third_party/abseil-cpp/absl/base/internal/raw_logging.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4absl13base_internal10AtomicHookIPFbNS_11LogSeverityEPKciPPcPiEE13DummyFunctionES2_S4_iS6_S7_ = comdat any

$_ZN4absl13base_internal10AtomicHookIPFvPKciS3_S3_S3_EE13DummyFunctionES3_iS3_S3_S3_ = comdat any

@_ZN4absl20raw_logging_internal21internal_log_functionE = hidden global { { { void (i32, i8*, i32, %"class.std::__1::basic_string"*)* } }, void (i32, i8*, i32, %"class.std::__1::basic_string"*)* } { { { void (i32, i8*, i32, %"class.std::__1::basic_string"*)* } } { { void (i32, i8*, i32, %"class.std::__1::basic_string"*)* } { void (i32, i8*, i32, %"class.std::__1::basic_string"*)* @_ZN4absl20raw_logging_internal12_GLOBAL__N_118DefaultInternalLogENS_11LogSeverityEPKciRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE } }, void (i32, i8*, i32, %"class.std::__1::basic_string"*)* @_ZN4absl20raw_logging_internal12_GLOBAL__N_118DefaultInternalLogENS_11LogSeverityEPKciRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE }, align 8
@.str = private unnamed_addr constant [16 x i8] c"[%s : %d] RAW: \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@_ZN4absl20raw_logging_internal12_GLOBAL__N_110kTruncatedE = internal constant [26 x i8] c" ... (message truncated)\0A\00", align 16
@.str.3 = private unnamed_addr constant [5 x i8] c"%.*s\00", align 1
@_ZN4absl20raw_logging_internal12_GLOBAL__N_115log_prefix_hookE = internal global { { { i1 (i32, i8*, i32, i8**, i32*)* } }, i1 (i32, i8*, i32, i8**, i32*)* } { { { i1 (i32, i8*, i32, i8**, i32*)* } } { { i1 (i32, i8*, i32, i8**, i32*)* } { i1 (i32, i8*, i32, i8**, i32*)* @_ZN4absl13base_internal10AtomicHookIPFbNS_11LogSeverityEPKciPPcPiEE13DummyFunctionES2_S4_iS6_S7_ } }, i1 (i32, i8*, i32, i8**, i32*)* @_ZN4absl13base_internal10AtomicHookIPFbNS_11LogSeverityEPKciPPcPiEE13DummyFunctionES2_S4_iS6_S7_ }, align 8
@_ZN4absl20raw_logging_internal12_GLOBAL__N_110abort_hookE = internal global { { { void (i8*, i32, i8*, i8*, i8*)* } }, void (i8*, i32, i8*, i8*, i8*)* } { { { void (i8*, i32, i8*, i8*, i8*)* } } { { void (i8*, i32, i8*, i8*, i8*)* } { void (i8*, i32, i8*, i8*, i8*)* @_ZN4absl13base_internal10AtomicHookIPFvPKciS3_S3_S3_EE13DummyFunctionES3_iS3_S3_S3_ } }, void (i8*, i32, i8*, i8*, i8*)* @_ZN4absl13base_internal10AtomicHookIPFvPKciS3_S3_S3_EE13DummyFunctionES3_iS3_S3_S3_ }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl20raw_logging_internal17SafeWriteToStderrEPKcm(i8*, i64) local_unnamed_addr #0 {
  %3 = tail call i64 (i64, ...) @syscall(i64 1, i32 2, i8* %0, i64 %1) #3
  ret void
}

; Function Attrs: nounwind
declare i64 @syscall(i64, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32, i8*, i32, i8* nocapture readonly, ...) local_unnamed_addr #0 {
  %5 = alloca [3000 x i8], align 16
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca [1 x %struct.__va_list_tag], align 16
  %9 = bitcast [1 x %struct.__va_list_tag]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #3
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %8, i64 0, i64 0
  %11 = bitcast [1 x %struct.__va_list_tag]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %9)
  %12 = getelementptr inbounds [3000 x i8], [3000 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3000, i8* nonnull %12) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 3000, i1 false) #3
  %13 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #3
  store i8* %12, i8** %6, align 8
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #3
  store i32 3000, i32* %7, align 4
  %15 = load atomic i64, i64* bitcast ({ { { i1 (i32, i8*, i32, i8**, i32*)* } }, i1 (i32, i8*, i32, i8**, i32*)* }* @_ZN4absl20raw_logging_internal12_GLOBAL__N_115log_prefix_hookE to i64*) acquire, align 8
  %16 = inttoptr i64 %15 to i1 (i32, i8*, i32, i8**, i32*)*
  %17 = icmp eq i1 (i32, i8*, i32, i8**, i32*)* %16, @_ZN4absl13base_internal10AtomicHookIPFbNS_11LogSeverityEPKciPPcPiEE13DummyFunctionES2_S4_iS6_S7_
  %18 = icmp eq i64 %15, 0
  %19 = or i1 %18, %17
  br i1 %19, label %20, label %23

20:                                               ; preds = %4
  call void (i8**, i32*, i8*, ...) @_ZN4absl20raw_logging_internal12_GLOBAL__N_18DoRawLogEPPcPiPKcz(i8** nonnull %6, i32* nonnull %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* %1, i32 %2) #3
  %21 = bitcast i8** %6 to i64*
  %22 = load i64, i64* %21, align 8
  br label %27

23:                                               ; preds = %4
  %24 = call zeroext i1 %16(i32 %0, i8* %1, i32 %2, i8** nonnull %6, i32* nonnull %7) #3
  %25 = bitcast i8** %6 to i64*
  %26 = load i64, i64* %25, align 8
  br i1 %24, label %27, label %53

27:                                               ; preds = %23, %20
  %28 = phi i64 [ %22, %20 ], [ %26, %23 ]
  %29 = inttoptr i64 %28 to i8*
  %30 = load i32, i32* %7, align 4
  %31 = sext i32 %30 to i64
  %32 = call i32 @vsnprintf(i8* %29, i64 %31, i8* %3, %struct.__va_list_tag* nonnull %10) #3
  %33 = icmp slt i32 %32, 0
  %34 = load i32, i32* %7, align 4
  %35 = icmp slt i32 %34, %32
  %36 = or i1 %33, %35
  br i1 %36, label %42, label %37

37:                                               ; preds = %27
  %38 = sub nsw i32 %34, %32
  store i32 %38, i32* %7, align 4
  %39 = load i8*, i8** %6, align 8
  %40 = sext i32 %32 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  store i8* %41, i8** %6, align 8
  call void (i8**, i32*, i8*, ...) @_ZN4absl20raw_logging_internal12_GLOBAL__N_18DoRawLogEPPcPiPKcz(i8** nonnull %6, i32* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #3
  br label %50

42:                                               ; preds = %27
  %43 = icmp ugt i32 %34, 26
  %44 = add i32 %34, -26
  %45 = select i1 %43, i32 %44, i32 0
  %46 = sub nsw i32 %34, %45
  store i32 %46, i32* %7, align 4
  %47 = load i8*, i8** %6, align 8
  %48 = sext i32 %45 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  store i8* %49, i8** %6, align 8
  call void (i8**, i32*, i8*, ...) @_ZN4absl20raw_logging_internal12_GLOBAL__N_18DoRawLogEPPcPiPKcz(i8** nonnull %6, i32* nonnull %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZN4absl20raw_logging_internal12_GLOBAL__N_110kTruncatedE, i64 0, i64 0)) #3
  br label %50

50:                                               ; preds = %42, %37
  %51 = call i64 @strlen(i8* nonnull %12) #9
  %52 = call i64 (i64, ...) @syscall(i64 1, i32 2, i8* nonnull %12, i64 %51) #3
  br label %53

53:                                               ; preds = %50, %23
  %54 = phi i64 [ %28, %50 ], [ %26, %23 ]
  %55 = icmp eq i32 %0, 3
  br i1 %55, label %56, label %61

56:                                               ; preds = %53
  %57 = getelementptr inbounds [3000 x i8], [3000 x i8]* %5, i64 0, i64 3000
  %58 = load atomic i64, i64* bitcast ({ { { void (i8*, i32, i8*, i8*, i8*)* } }, void (i8*, i32, i8*, i8*, i8*)* }* @_ZN4absl20raw_logging_internal12_GLOBAL__N_110abort_hookE to i64*) acquire, align 8
  %59 = inttoptr i64 %58 to void (i8*, i32, i8*, i8*, i8*)*
  %60 = inttoptr i64 %54 to i8*
  call void %59(i8* %1, i32 %2, i8* nonnull %12, i8* %60, i8* %57) #3
  call void @abort() #10
  unreachable

61:                                               ; preds = %53
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #3
  call void @llvm.lifetime.end.p0i8(i64 3000, i8* nonnull %12) #3
  call void @llvm.va_end(i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4absl20raw_logging_internal24RawLoggingFullySupportedEv() local_unnamed_addr #4 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4absl20raw_logging_internal12_GLOBAL__N_118DefaultInternalLogENS_11LogSeverityEPKciRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(i32, i8*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) #0 {
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = zext i8 %7 to i32
  %15 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %16 = select i1 %8, i32 %11, i32 %14
  %17 = select i1 %8, i8* %13, i8* %15
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 %0, i8* %1, i32 %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i32 %16, i8* %17)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4absl20raw_logging_internal21RegisterLogPrefixHookEPFbNS_11LogSeverityEPKciPPcPiE(i1 (i32, i8*, i32, i8**, i32*)*) local_unnamed_addr #5 {
  %2 = load i64, i64* bitcast (i1 (i32, i8*, i32, i8**, i32*)** getelementptr inbounds ({ { { i1 (i32, i8*, i32, i8**, i32*)* } }, i1 (i32, i8*, i32, i8**, i32*)* }, { { { i1 (i32, i8*, i32, i8**, i32*)* } }, i1 (i32, i8*, i32, i8**, i32*)* }* @_ZN4absl20raw_logging_internal12_GLOBAL__N_115log_prefix_hookE, i64 0, i32 1) to i64*), align 8
  %3 = ptrtoint i1 (i32, i8*, i32, i8**, i32*)* %0 to i64
  %4 = cmpxchg i64* bitcast ({ { { i1 (i32, i8*, i32, i8**, i32*)* } }, i1 (i32, i8*, i32, i8**, i32*)* }* @_ZN4absl20raw_logging_internal12_GLOBAL__N_115log_prefix_hookE to i64*), i64 %2, i64 %3 acq_rel acquire
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4absl20raw_logging_internal17RegisterAbortHookEPFvPKciS2_S2_S2_E(void (i8*, i32, i8*, i8*, i8*)*) local_unnamed_addr #5 {
  %2 = load i64, i64* bitcast (void (i8*, i32, i8*, i8*, i8*)** getelementptr inbounds ({ { { void (i8*, i32, i8*, i8*, i8*)* } }, void (i8*, i32, i8*, i8*, i8*)* }, { { { void (i8*, i32, i8*, i8*, i8*)* } }, void (i8*, i32, i8*, i8*, i8*)* }* @_ZN4absl20raw_logging_internal12_GLOBAL__N_110abort_hookE, i64 0, i32 1) to i64*), align 8
  %3 = ptrtoint void (i8*, i32, i8*, i8*, i8*)* %0 to i64
  %4 = cmpxchg i64* bitcast ({ { { void (i8*, i32, i8*, i8*, i8*)* } }, void (i8*, i32, i8*, i8*, i8*)* }* @_ZN4absl20raw_logging_internal12_GLOBAL__N_110abort_hookE to i64*), i64 %2, i64 %3 acq_rel acquire
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4absl20raw_logging_internal27RegisterInternalLogFunctionEPFvNS_11LogSeverityEPKciRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEE(void (i32, i8*, i32, %"class.std::__1::basic_string"*)*) local_unnamed_addr #5 {
  %2 = load i64, i64* bitcast (void (i32, i8*, i32, %"class.std::__1::basic_string"*)** getelementptr inbounds ({ { { void (i32, i8*, i32, %"class.std::__1::basic_string"*)* } }, void (i32, i8*, i32, %"class.std::__1::basic_string"*)* }, { { { void (i32, i8*, i32, %"class.std::__1::basic_string"*)* } }, void (i32, i8*, i32, %"class.std::__1::basic_string"*)* }* @_ZN4absl20raw_logging_internal21internal_log_functionE, i64 0, i32 1) to i64*), align 8
  %3 = ptrtoint void (i32, i8*, i32, %"class.std::__1::basic_string"*)* %0 to i64
  %4 = cmpxchg i64* bitcast ({ { { void (i32, i8*, i32, %"class.std::__1::basic_string"*)* } }, void (i32, i8*, i32, %"class.std::__1::basic_string"*)* }* @_ZN4absl20raw_logging_internal21internal_log_functionE to i64*), i64 %2, i64 %3 acq_rel acquire
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4absl20raw_logging_internal12_GLOBAL__N_18DoRawLogEPPcPiPKcz(i8** nocapture, i32* nocapture, i8* nocapture readonly, ...) unnamed_addr #0 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #3
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %7 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %5)
  %8 = load i8*, i8** %0, align 8
  %9 = load i32, i32* %1, align 4
  %10 = sext i32 %9 to i64
  %11 = call i32 @vsnprintf(i8* %8, i64 %10, i8* %2, %struct.__va_list_tag* nonnull %6) #3
  call void @llvm.va_end(i8* nonnull %5)
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %3
  %14 = load i32, i32* %1, align 4
  %15 = icmp slt i32 %14, %11
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = sub nsw i32 %14, %11
  store i32 %17, i32* %1, align 4
  %18 = load i8*, i8** %0, align 8
  %19 = sext i32 %11 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  store i8* %20, i8** %0, align 8
  br label %21

21:                                               ; preds = %3, %13, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #3
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4absl13base_internal10AtomicHookIPFbNS_11LogSeverityEPKciPPcPiEE13DummyFunctionES2_S4_iS6_S7_(i32, i8*, i32, i8**, i32*) #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nofree nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl13base_internal10AtomicHookIPFvPKciS3_S3_S3_EE13DummyFunctionES3_iS3_S3_S3_(i8*, i32, i8*, i8*, i8*) #0 comdat align 2 {
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
