; ModuleID = '../../third_party/blink/renderer/platform/scheduler/worker/worker_scheduler.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/worker/worker_scheduler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::WorkerScheduler::PauseHandle" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.7, %class.scoped_refptr.7, %class.scoped_refptr.7, %"class.std::__1::map", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.200" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.7 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type { %"class.base::sequence_manager::TaskQueue", %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.absl::optional.76" }
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.8", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr", %"class.base::WeakPtr.73", %class.scoped_refptr.9, %class.scoped_refptr.74, i32, i32, i8*, %"class.base::WeakPtrFactory.75" }
%"class.base::RefCountedThreadSafe.8" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr.9, %class.scoped_refptr.11, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%class.scoped_refptr.11 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.12", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.13", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.18, i8, [7 x i8] }>
%class.scoped_refptr.18 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.19", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.19" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.20" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap", i32, %class.scoped_refptr.9 }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.23" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.28", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.33", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.33" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.57", %"class.base::RepeatingCallback.58", %"class.absl::optional.59", i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.40", %"struct.std::__1::less" }>
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.44" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.42, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.42 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.43" }>
%"class.base::RefCountedThreadSafe.43" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.49", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.51" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory.56" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory.56" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.57" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.58" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr.9, %"class.std::__1::unique_ptr.64", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.201", i64, [64 x %"class.base::RepeatingCallback.112"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.64", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.201" = type { %"struct.std::__1::__atomic_base.202" }
%"struct.std::__1::__atomic_base.202" = type { %"struct.std::__1::__atomic_base.203" }
%"struct.std::__1::__atomic_base.203" = type { %"struct.std::__1::__cxx_atomic_impl.204" }
%"struct.std::__1::__cxx_atomic_impl.204" = type { %"struct.std::__1::__cxx_atomic_base_impl.205" }
%"struct.std::__1::__cxx_atomic_base_impl.205" = type { i64 }
%"class.base::RepeatingCallback.112" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.73" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.9 = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.10", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.74 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.75" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::NonMainThreadSchedulerImpl" = type { %"class.blink::scheduler::ThreadSchedulerImpl", %"class.blink::scheduler::NonMainThreadSchedulerHelper" }
%"class.blink::scheduler::ThreadSchedulerImpl" = type { %"class.blink::ThreadScheduler", %"class.blink::scheduler::WebThreadScheduler", %"class.v8::Isolate"* }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::scheduler::WebThreadScheduler" = type { i32 (...)** }
%"class.v8::Isolate" = type opaque
%"class.blink::scheduler::NonMainThreadSchedulerHelper" = type { %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %class.scoped_refptr.7, %class.scoped_refptr.7 }
%"class.blink::scheduler::SchedulerHelper" = type { %"class.base::sequence_manager::SequenceManager::Observer", %"class.base::sequence_manager::SequenceManager"*, %class.scoped_refptr.74, %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::UkmTaskSampler", %"class.absl::optional.90" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.blink::scheduler::SchedulerHelper::Observer" = type { i32 (...)** }
%"class.blink::scheduler::UkmTaskSampler" = type { double, double, %"class.std::__1::mersenne_twister_engine" }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.absl::optional.90" = type { %"class.absl::optional_internal::optional_data.91" }
%"class.absl::optional_internal::optional_data.91" = type { %"class.absl::optional_internal::optional_data_base.92" }
%"class.absl::optional_internal::optional_data_base.92" = type { %"class.absl::optional_internal::optional_data_dtor_base.93" }
%"class.absl::optional_internal::optional_data_dtor_base.93" = type { i8, %union.anon.94 }
%union.anon.94 = type { %"class.base::SimpleTaskExecutor" }
%"class.base::SimpleTaskExecutor" = type { %"class.base::TaskExecutor", %class.scoped_refptr.74, %"class.base::TaskExecutor"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%"class.absl::optional.76" = type { %"class.absl::optional_internal::optional_data.77" }
%"class.absl::optional_internal::optional_data.77" = type { %"class.absl::optional_internal::optional_data_base.78" }
%"class.absl::optional_internal::optional_data_base.78" = type { %"class.absl::optional_internal::optional_data_dtor_base.79" }
%"class.absl::optional_internal::optional_data_dtor_base.79" = type { i8, %union.anon.80 }
%union.anon.80 = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::WeakPtrFactory.200" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::WorkerThreadScheduler" = type { %"class.blink::scheduler::NonMainThreadSchedulerImpl", %"class.blink::scheduler::IdleHelper::Delegate", i32, %"class.blink::scheduler::IdleHelper", i8, %class.scoped_refptr.7, %class.scoped_refptr.74, %class.scoped_refptr.74, i32, %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::TraceableVariableController", %"class.WTF::HashSet", %"class.std::__1::unique_ptr.160", %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"*, i32, i64, %"class.std::__1::unique_ptr.194" }
%"class.blink::scheduler::IdleHelper::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper" = type { %"class.base::TaskObserver", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate", %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, %class.scoped_refptr.97, %class.scoped_refptr.98, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::IdleHelper::State", %"class.base::TimeDelta", i8, %"class.base::WeakPtr.114", %"class.base::WeakPtrFactory.115" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate" = type { i32 (...)** }
%class.scoped_refptr.97 = type { %"class.base::sequence_manager::TaskQueue"* }
%class.scoped_refptr.98 = type { %"class.blink::scheduler::SingleThreadIdleTaskRunner"* }
%"class.blink::scheduler::SingleThreadIdleTaskRunner" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.99", %class.scoped_refptr.74, %"class.std::__1::multimap", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate"*, %"class.base::trace_event::BlameContext"*, %"class.base::WeakPtr.110", %"class.base::WeakPtrFactory.111" }
%"class.base::RefCountedThreadSafe.99" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.100" }
%"class.std::__1::__tree.100" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::WeakPtr.110" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.111" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::CancelableClosureHolder" = type { %"class.base::RepeatingCallback.112", %"class.base::internal::CancelableCallbackImpl" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::RepeatingCallback.112", %"class.base::WeakPtrFactory.113" }
%"class.base::WeakPtrFactory.113" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::IdleHelper::State" = type { i32 (...)**, %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, i32, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, i8*, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::WeakPtr.114" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.115" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::WorkerMetricsHelper" = type { %"class.blink::scheduler::MetricsHelper", %"class.scheduling_metrics::TaskDurationMetricReporter.131", %"class.scheduling_metrics::TaskDurationMetricReporter.131", %"class.scheduling_metrics::TaskDurationMetricReporter.132", %"class.scheduling_metrics::TaskDurationMetricReporter.132", %"class.absl::optional.133" }
%"class.blink::scheduler::MetricsHelper" = type { i32, %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::TaskDurationMetricReporter.130", %"class.scheduling_metrics::TaskDurationMetricReporter.130", %"class.scheduling_metrics::TaskDurationMetricReporter.130", %"class.scheduling_metrics::TaskDurationMetricReporter.130", %"class.scheduling_metrics::TaskDurationMetricReporter.130", %"class.scheduling_metrics::TaskDurationMetricReporter.130" }
%"class.scheduling_metrics::ThreadMetrics" = type { i32, i8, %"class.base::ThreadTicks", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.116" }
%"class.base::time_internal::TimeBase.116" = type { i64 }
%"class.scheduling_metrics::TaskDurationMetricReporter" = type { %"class.std::__1::unique_ptr.117" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.base::ScaledLinearHistogram"* }
%"class.base::ScaledLinearHistogram" = type { %"class.base::HistogramBase"*, i32, %"class.std::__1::vector.120" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.13", [4 x i8] }>
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { i32*, i32*, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { i32* }
%"class.scheduling_metrics::TaskDurationMetricReporter.130" = type { %"class.std::__1::unique_ptr.117" }
%"class.scheduling_metrics::TaskDurationMetricReporter.131" = type { %"class.std::__1::unique_ptr.117" }
%"class.scheduling_metrics::TaskDurationMetricReporter.132" = type { %"class.std::__1::unique_ptr.117" }
%"class.absl::optional.133" = type { %"class.absl::optional_internal::optional_data.134" }
%"class.absl::optional_internal::optional_data.134" = type { %"class.absl::optional_internal::optional_data_base.135" }
%"class.absl::optional_internal::optional_data_base.135" = type { %"class.absl::optional_internal::optional_data_dtor_base.136" }
%"class.absl::optional_internal::optional_data_dtor_base.136" = type { i8, %union.anon.137 }
%union.anon.137 = type { i32 }
%"class.blink::scheduler::TraceableVariableController" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.138", %"class.std::__1::__compressed_pair.146", %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.153", [4 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140", %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { float }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.157" }
%"class.WTF::HashTable.157" = type <{ %"class.blink::scheduler::WorkerScheduler"**, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::scheduler::TaskQueueThrottler"* }
%"class.blink::scheduler::TaskQueueThrottler" = type { %"class.blink::scheduler::BudgetPoolController", %"class.WTF::HashMap.163", %"class.base::RepeatingCallback.168", %class.scoped_refptr.74, %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::TraceableVariableController"*, %"class.base::TickClock"*, %"class.std::__1::unique_ptr.169", %"class.blink::scheduler::CancelableClosureHolder", %"class.absl::optional", i8, [7 x i8], %"class.WTF::HashMap.175", %"class.base::WeakPtrFactory.180" }
%"class.blink::scheduler::BudgetPoolController" = type { i32 (...)** }
%"class.WTF::HashMap.163" = type { %"class.WTF::HashTable.164" }
%"class.WTF::HashTable.164" = type <{ %"struct.WTF::KeyValuePair.167"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.167" = type opaque
%"class.base::RepeatingCallback.168" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::scheduler::ThrottledTimeDomain"* }
%"class.blink::scheduler::ThrottledTimeDomain" = type opaque
%"class.WTF::HashMap.175" = type { %"class.WTF::HashTable.176" }
%"class.WTF::HashTable.176" = type <{ %"struct.WTF::KeyValuePair.179"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.179" = type opaque
%"class.base::WeakPtrFactory.180" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::WakeUpBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, %"class.absl::optional" }
%"class.blink::scheduler::BudgetPool.base" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet.184", i8 }>
%"class.WTF::HashSet.184" = type { %"class.WTF::HashTable.185" }
%"class.WTF::HashTable.185" = type <{ %"class.base::sequence_manager::TaskQueue"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::CPUTimeBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.absl::optional.188", %"class.absl::optional.188", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter", %"class.base::TimeTicks", double, %"class.base::RepeatingCallback.193" }
%"class.absl::optional.188" = type { %"class.absl::optional_internal::optional_data.189" }
%"class.absl::optional_internal::optional_data.189" = type { %"class.absl::optional_internal::optional_data_base.190" }
%"class.absl::optional_internal::optional_data_base.190" = type { %"class.absl::optional_internal::optional_data_dtor_base.191" }
%"class.absl::optional_internal::optional_data_dtor_base.191" = type { i8, %union.anon.192 }
%union.anon.192 = type { %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableCounter" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableVariable" = type { i32 (...)**, %"class.blink::scheduler::TraceableVariableController"* }
%"class.base::RepeatingCallback.193" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.blink::scheduler::WorkerSchedulerProxy" = type { %"class.blink::FrameOrWorkerScheduler::Observer", %"class.base::WeakPtr", %class.scoped_refptr.74, i32, %"class.std::__1::unique_ptr.206", i8, %"class.absl::optional.133", i32, i64 }
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.209", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::WeakPtr.209" = type { %"class.base::internal::WeakPtrBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.240 }
%union.anon.240 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter" = type <{ %class.scoped_refptr.97, i8, [7 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.225" }
%"struct.std::__1::pair.225" = type { %class.scoped_refptr.7, %"class.std::__1::unique_ptr.213" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* }
%"class.blink::scheduler::BudgetPool" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet.184", i8, [7 x i8] }>
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.blink::WebSchedulingTaskQueue" = type { i32 (...)** }
%"class.blink::scheduler::NonMainThreadWebSchedulingTaskQueueImpl" = type { %"class.blink::WebSchedulingTaskQueue", %class.scoped_refptr.74, %class.scoped_refptr.7 }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }

$_ZN5blink9scheduler15WorkerScheduler36SetPreemptedForCooperativeSchedulingEN4base11StrongAliasINS_12PreemptedTagEbEE = comdat any

$_ZN5blink22FrameOrWorkerScheduler16ToFrameSchedulerEv = comdat any

$_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE16__emplace_uniqueIRS6_DnEENS_9enable_ifIXsr21__can_extract_map_keyIT_S6_NS_4pairIKS6_SE_EEEE5valueENSR_INS_15__tree_iteratorISF_PNS_11__tree_nodeISF_PvEElEEbEEE4typeEOSQ_OT0_ = comdat any

@_ZTVN5blink9scheduler15WorkerSchedulerE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::WorkerScheduler"*)* @_ZN5blink9scheduler15WorkerSchedulerD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::WorkerScheduler"*)* @_ZN5blink9scheduler15WorkerSchedulerD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::WorkerScheduler"*, i8)* @_ZN5blink9scheduler15WorkerScheduler36SetPreemptedForCooperativeSchedulingEN4base11StrongAliasINS_12PreemptedTagEbEE to i8*), i8* bitcast (%"class.blink::WebSchedulingTaskQueue"* (%"class.blink::scheduler::WorkerScheduler"*, i32)* @_ZN5blink9scheduler15WorkerScheduler28CreateWebSchedulingTaskQueueENS_21WebSchedulingPriorityE to i8*), i8* bitcast (%"class.blink::FrameScheduler"* (%"class.blink::FrameOrWorkerScheduler"*)* @_ZN5blink22FrameOrWorkerScheduler16ToFrameSchedulerEv to i8*), i8* bitcast (i32 (%"class.blink::scheduler::WorkerScheduler"*, i32)* @_ZNK5blink9scheduler15WorkerScheduler23CalculateLifecycleStateENS_22FrameOrWorkerScheduler12ObserverTypeE to i8*), i8* bitcast (void (%"class.blink::scheduler::WorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)* @_ZN5blink9scheduler15WorkerScheduler21OnStartedUsingFeatureENS0_26WebSchedulerTrackedFeatureERKNS_16SchedulingPolicyE to i8*), i8* bitcast (void (%"class.blink::scheduler::WorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)* @_ZN5blink9scheduler15WorkerScheduler21OnStoppedUsingFeatureENS0_26WebSchedulerTrackedFeatureERKNS_16SchedulingPolicyE to i8*), i8* bitcast (void (%"class.base::WeakPtr.209"*, %"class.blink::FrameOrWorkerScheduler"*)* @_ZN5blink22FrameOrWorkerScheduler23GetDocumentBoundWeakPtrEv to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"worker_throttleable_tq\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"worker_pausable_tq\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"worker_unpausable_tq\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"worker_web_scheduling_tq\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN5blink9scheduler15WorkerScheduler11PauseHandleC1EN4base7WeakPtrIS1_EE = hidden unnamed_addr alias void (%"class.blink::scheduler::WorkerScheduler::PauseHandle"*, %"class.base::WeakPtr"*), void (%"class.blink::scheduler::WorkerScheduler::PauseHandle"*, %"class.base::WeakPtr"*)* @_ZN5blink9scheduler15WorkerScheduler11PauseHandleC2EN4base7WeakPtrIS1_EE
@_ZN5blink9scheduler15WorkerScheduler11PauseHandleD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::WorkerScheduler::PauseHandle"*), void (%"class.blink::scheduler::WorkerScheduler::PauseHandle"*)* @_ZN5blink9scheduler15WorkerScheduler11PauseHandleD2Ev
@_ZN5blink9scheduler15WorkerSchedulerC1EPNS0_21WorkerThreadSchedulerEPNS0_20WorkerSchedulerProxyE = hidden unnamed_addr alias void (%"class.blink::scheduler::WorkerScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerSchedulerProxy"*), void (%"class.blink::scheduler::WorkerScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerSchedulerProxy"*)* @_ZN5blink9scheduler15WorkerSchedulerC2EPNS0_21WorkerThreadSchedulerEPNS0_20WorkerSchedulerProxyE
@_ZN5blink9scheduler15WorkerSchedulerD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::WorkerScheduler"*), void (%"class.blink::scheduler::WorkerScheduler"*)* @_ZN5blink9scheduler15WorkerSchedulerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WorkerScheduler11PauseHandleC2EN4base7WeakPtrIS1_EE(%"class.blink::scheduler::WorkerScheduler::PauseHandle"*, %"class.base::WeakPtr"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler::PauseHandle", %"class.blink::scheduler::WorkerScheduler::PauseHandle"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %4, %"class.base::internal::WeakReference"* dereferenceable(8) %5) #10
  %6 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler::PauseHandle", %"class.blink::scheduler::WorkerScheduler::PauseHandle"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #10
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #10
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %13

13:                                               ; preds = %10, %2
  %14 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #10
  br i1 %14, label %15, label %18

15:                                               ; preds = %13
  %16 = bitcast i64* %6 to %"class.blink::scheduler::WorkerScheduler"**
  %17 = load %"class.blink::scheduler::WorkerScheduler"*, %"class.blink::scheduler::WorkerScheduler"** %16, align 8
  br label %18

18:                                               ; preds = %13, %15
  %19 = phi %"class.blink::scheduler::WorkerScheduler"* [ %17, %15 ], [ null, %13 ]
  %20 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %19, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %20, align 4
  %23 = icmp eq i32 %21, 0
  br i1 %23, label %24, label %67

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %19, i64 0, i32 4, i32 0, i32 0
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %19, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %28 = icmp eq %"class.std::__1::__tree_end_node"* %26, %27
  br i1 %28, label %67, label %29

29:                                               ; preds = %24, %64
  %30 = phi %"class.std::__1::__tree_end_node"* [ %65, %64 ], [ %26, %24 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 5
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"**
  %33 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %32, align 8
  %34 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %29
  call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoter15SetVoteToEnableEb(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %33, i1 zeroext false) #10
  br label %36

36:                                               ; preds = %35, %29
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 1, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %40, label %48

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node_base"*
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 2
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_end_node"**
  %44 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, %41
  br i1 %47, label %64, label %55

48:                                               ; preds = %36, %48
  %49 = phi %"class.std::__1::__tree_node_base"* [ %51, %48 ], [ %38, %36 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %52, label %53, label %48

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 0
  br label %64

55:                                               ; preds = %40, %55
  %56 = phi %"class.std::__1::__tree_end_node"** [ %59, %55 ], [ %43, %40 ]
  %57 = bitcast %"class.std::__1::__tree_end_node"** %56 to %"class.std::__1::__tree_node_base"**
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 2
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, %58
  br i1 %63, label %64, label %55

64:                                               ; preds = %55, %53, %40
  %65 = phi %"class.std::__1::__tree_end_node"* [ %54, %53 ], [ %44, %40 ], [ %60, %55 ]
  %66 = icmp eq %"class.std::__1::__tree_end_node"* %65, %27
  br i1 %66, label %67, label %29

67:                                               ; preds = %64, %18, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WorkerScheduler9PauseImplEv(%"class.blink::scheduler::WorkerScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, 1
  store i32 %4, i32* %2, align 4
  %5 = icmp eq i32 %3, 0
  br i1 %5, label %6, label %49

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %10 = icmp eq %"class.std::__1::__tree_end_node"* %8, %9
  br i1 %10, label %49, label %11

11:                                               ; preds = %6, %46
  %12 = phi %"class.std::__1::__tree_end_node"* [ %47, %46 ], [ %8, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 5
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"**
  %15 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %14, align 8
  %16 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %11
  tail call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoter15SetVoteToEnableEb(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %15, i1 zeroext false) #10
  br label %18

18:                                               ; preds = %11, %17
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 1, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node_base"*
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 2
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_end_node"**
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %23
  br i1 %29, label %46, label %37

30:                                               ; preds = %18, %30
  %31 = phi %"class.std::__1::__tree_node_base"* [ %33, %30 ], [ %20, %18 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %30

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %31, i64 0, i32 0
  br label %46

37:                                               ; preds = %22, %37
  %38 = phi %"class.std::__1::__tree_end_node"** [ %41, %37 ], [ %25, %22 ]
  %39 = bitcast %"class.std::__1::__tree_end_node"** %38 to %"class.std::__1::__tree_node_base"**
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  %42 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, %40
  br i1 %45, label %46, label %37

46:                                               ; preds = %37, %22, %35
  %47 = phi %"class.std::__1::__tree_end_node"* [ %36, %35 ], [ %26, %22 ], [ %42, %37 ]
  %48 = icmp eq %"class.std::__1::__tree_end_node"* %47, %9
  br i1 %48, label %49, label %11

49:                                               ; preds = %46, %6, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WorkerScheduler11PauseHandleD2Ev(%"class.blink::scheduler::WorkerScheduler::PauseHandle"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler::PauseHandle", %"class.blink::scheduler::WorkerScheduler::PauseHandle"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #10
  br i1 %4, label %5, label %72

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler::PauseHandle", %"class.blink::scheduler::WorkerScheduler::PauseHandle"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.blink::scheduler::WorkerScheduler"**
  %8 = load %"class.blink::scheduler::WorkerScheduler"*, %"class.blink::scheduler::WorkerScheduler"** %7, align 8
  %9 = icmp eq %"class.blink::scheduler::WorkerScheduler"* %8, null
  br i1 %9, label %72, label %10

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #10
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #10
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br label %15

15:                                               ; preds = %12, %10
  %16 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #10
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = load %"class.blink::scheduler::WorkerScheduler"*, %"class.blink::scheduler::WorkerScheduler"** %7, align 8
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi %"class.blink::scheduler::WorkerScheduler"* [ %18, %17 ], [ null, %15 ]
  %21 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %20, i64 0, i32 8
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -1
  store i32 %23, i32* %21, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %72

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %20, i64 0, i32 7
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %72

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %20, i64 0, i32 4, i32 0, i32 0
  %31 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %20, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %33 = icmp eq %"class.std::__1::__tree_end_node"* %31, %32
  br i1 %33, label %72, label %34

34:                                               ; preds = %29, %69
  %35 = phi %"class.std::__1::__tree_end_node"* [ %70, %69 ], [ %31, %29 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 5
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"**
  %38 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %37, align 8
  %39 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %34
  call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoter15SetVoteToEnableEb(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %38, i1 zeroext true) #10
  br label %41

41:                                               ; preds = %40, %34
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 1, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %53

45:                                               ; preds = %41
  %46 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node_base"*
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 2
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_end_node"**
  %49 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, %46
  br i1 %52, label %69, label %60

53:                                               ; preds = %41, %53
  %54 = phi %"class.std::__1::__tree_node_base"* [ %56, %53 ], [ %43, %41 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, null
  br i1 %57, label %58, label %53

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 0
  br label %69

60:                                               ; preds = %45, %60
  %61 = phi %"class.std::__1::__tree_end_node"** [ %64, %60 ], [ %48, %45 ]
  %62 = bitcast %"class.std::__1::__tree_end_node"** %61 to %"class.std::__1::__tree_node_base"**
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 2
  %65 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, %63
  br i1 %68, label %69, label %60

69:                                               ; preds = %60, %58, %45
  %70 = phi %"class.std::__1::__tree_end_node"* [ %59, %58 ], [ %49, %45 ], [ %65, %60 ]
  %71 = icmp eq %"class.std::__1::__tree_end_node"* %70, %32
  br i1 %71, label %72, label %34

72:                                               ; preds = %69, %5, %1, %29, %25, %19
  %73 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler::PauseHandle", %"class.blink::scheduler::WorkerScheduler::PauseHandle"* %0, i64 0, i32 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %73) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WorkerScheduler10ResumeImplEv(%"class.blink::scheduler::WorkerScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1
  store i32 %4, i32* %2, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %53

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 7
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %53

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %14 = icmp eq %"class.std::__1::__tree_end_node"* %12, %13
  br i1 %14, label %53, label %15

15:                                               ; preds = %10, %50
  %16 = phi %"class.std::__1::__tree_end_node"* [ %51, %50 ], [ %12, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 5
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"**
  %19 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %18, align 8
  %20 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %15
  tail call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoter15SetVoteToEnableEb(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %19, i1 zeroext true) #10
  br label %22

22:                                               ; preds = %15, %21
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 2
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_end_node"**
  %30 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, %27
  br i1 %33, label %50, label %41

34:                                               ; preds = %22, %34
  %35 = phi %"class.std::__1::__tree_node_base"* [ %37, %34 ], [ %24, %22 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %34

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 0
  br label %50

41:                                               ; preds = %26, %41
  %42 = phi %"class.std::__1::__tree_end_node"** [ %45, %41 ], [ %29, %26 ]
  %43 = bitcast %"class.std::__1::__tree_end_node"** %42 to %"class.std::__1::__tree_node_base"**
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 2
  %46 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, %44
  br i1 %49, label %50, label %41

50:                                               ; preds = %41, %26, %39
  %51 = phi %"class.std::__1::__tree_end_node"* [ %40, %39 ], [ %30, %26 ], [ %46, %41 ]
  %52 = icmp eq %"class.std::__1::__tree_end_node"* %51, %13
  br i1 %52, label %53, label %15

53:                                               ; preds = %50, %10, %6, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WorkerSchedulerC2EPNS0_21WorkerThreadSchedulerEPNS0_20WorkerSchedulerProxyE(%"class.blink::scheduler::WorkerScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerSchedulerProxy"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 0
  tail call void @_ZN5blink22FrameOrWorkerSchedulerC2Ev(%"class.blink::FrameOrWorkerScheduler"* %7) #10
  %8 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9scheduler15WorkerSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::scheduler::WorkerThreadScheduler", %"class.blink::scheduler::WorkerThreadScheduler"* %1, i64 0, i32 0
  %10 = tail call %"class.blink::scheduler::NonMainThreadTaskQueue"* @_ZN5blink9scheduler26NonMainThreadSchedulerImpl15CreateTaskQueueEPKc(%"class.blink::scheduler::NonMainThreadSchedulerImpl"* %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0)) #10
  %11 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 1, i32 0
  store %"class.blink::scheduler::NonMainThreadTaskQueue"* %10, %"class.blink::scheduler::NonMainThreadTaskQueue"** %11, align 8
  %12 = tail call %"class.blink::scheduler::NonMainThreadTaskQueue"* @_ZN5blink9scheduler26NonMainThreadSchedulerImpl15CreateTaskQueueEPKc(%"class.blink::scheduler::NonMainThreadSchedulerImpl"* %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #10
  %13 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 2, i32 0
  store %"class.blink::scheduler::NonMainThreadTaskQueue"* %12, %"class.blink::scheduler::NonMainThreadTaskQueue"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 3
  %15 = tail call %"class.blink::scheduler::NonMainThreadTaskQueue"* @_ZN5blink9scheduler26NonMainThreadSchedulerImpl15CreateTaskQueueEPKc(%"class.blink::scheduler::NonMainThreadSchedulerImpl"* %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0)) #10
  %16 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %14, i64 0, i32 0
  store %"class.blink::scheduler::NonMainThreadTaskQueue"* %15, %"class.blink::scheduler::NonMainThreadTaskQueue"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %17, i64 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_node_base"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %19, %"class.std::__1::__tree_end_node"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 5
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 6
  store %"class.blink::scheduler::WorkerThreadScheduler"* %1, %"class.blink::scheduler::WorkerThreadScheduler"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 7
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 8
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 9, i32 0
  %27 = ptrtoint %"class.blink::scheduler::WorkerScheduler"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %26, i64 %27) #10
  %28 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %11, align 8
  %29 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %28, i64 0, i32 0
  %30 = tail call %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* @_ZN4base16sequence_manager9TaskQueue23CreateQueueEnabledVoterEv(%"class.base::sequence_manager::TaskQueue"* %29) #10
  %31 = ptrtoint %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %30 to i64
  %32 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %17, i64 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node"* %34, null
  br i1 %35, label %64, label %36

36:                                               ; preds = %3
  %37 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %11, align 8
  br label %38

38:                                               ; preds = %60, %36
  %39 = phi %"class.std::__1::__tree_node"* [ %63, %60 ], [ %34, %36 ]
  %40 = phi %"class.std::__1::__tree_node_base"** [ %62, %60 ], [ %18, %36 ]
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %39, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %41, align 8
  %43 = icmp ult %"class.blink::scheduler::NonMainThreadTaskQueue"* %37, %42
  br i1 %43, label %44, label %50

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %39, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %60

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %39, i64 0, i32 0, i32 0
  br label %66

50:                                               ; preds = %38
  %51 = icmp ult %"class.blink::scheduler::NonMainThreadTaskQueue"* %42, %37
  br i1 %51, label %52, label %58

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %39, i64 0, i32 0, i32 1
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, null
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %39, i64 0, i32 0, i32 0
  br label %66

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %39, i64 0, i32 0, i32 0
  br label %66

60:                                               ; preds = %52, %44
  %61 = phi %"class.std::__1::__tree_node_base"* [ %46, %44 ], [ %54, %52 ]
  %62 = phi %"class.std::__1::__tree_node_base"** [ %45, %44 ], [ %53, %52 ]
  %63 = bitcast %"class.std::__1::__tree_node_base"* %61 to %"class.std::__1::__tree_node"*
  br label %38

64:                                               ; preds = %3
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 0, i32 0
  br label %66

66:                                               ; preds = %64, %58, %56, %48
  %67 = phi %"class.std::__1::__tree_end_node"* [ %19, %64 ], [ %49, %48 ], [ %57, %56 ], [ %59, %58 ]
  %68 = phi %"class.std::__1::__tree_node_base"** [ %65, %64 ], [ %45, %48 ], [ %53, %56 ], [ %40, %58 ]
  %69 = bitcast %"class.std::__1::__tree_node_base"** %68 to %"class.std::__1::__tree_node"**
  %70 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node"* %70, null
  br i1 %71, label %72, label %102

72:                                               ; preds = %66
  %73 = tail call i8* @_Znwm(i64 48) #11, !noalias !3
  %74 = getelementptr inbounds i8, i8* %73, i64 32
  %75 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %11, align 8, !noalias !3
  %76 = bitcast i8* %74 to %"class.blink::scheduler::NonMainThreadTaskQueue"**
  store %"class.blink::scheduler::NonMainThreadTaskQueue"* %75, %"class.blink::scheduler::NonMainThreadTaskQueue"** %76, align 8, !noalias !3
  %77 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %75, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %75, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 1 monotonic, !noalias !3
  br label %81

81:                                               ; preds = %78, %72
  %82 = getelementptr inbounds i8, i8* %73, i64 40
  %83 = bitcast i8* %82 to i64*
  store i64 %31, i64* %83, align 8, !noalias !3
  %84 = bitcast i8* %73 to %"class.std::__1::__tree_node_base"*
  %85 = getelementptr inbounds i8, i8* %73, i64 16
  %86 = bitcast i8* %85 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %67, %"class.std::__1::__tree_end_node"** %86, align 8
  %87 = bitcast %"class.std::__1::__tree_node_base"** %68 to i8**
  store i8* %73, i8** %87, align 8
  %88 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %81
  %93 = ptrtoint %"class.std::__1::__tree_node_base"* %90 to i64
  %94 = bitcast %"class.std::__1::map"* %17 to i64*
  store i64 %93, i64* %94, align 8
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  br label %96

96:                                               ; preds = %81, %92
  %97 = phi %"class.std::__1::__tree_node_base"* [ %84, %81 ], [ %95, %92 ]
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %97) #10
  %99 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 1
  store i64 %101, i64* %99, align 8
  br label %106

102:                                              ; preds = %66
  %103 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %30, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  tail call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %30) #10
  %105 = bitcast %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %30 to i8*
  tail call void @_ZdlPv(i8* %105) #11
  br label %106

106:                                              ; preds = %96, %102, %104
  %107 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %13, align 8
  %108 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %107, i64 0, i32 0
  %109 = tail call %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* @_ZN4base16sequence_manager9TaskQueue23CreateQueueEnabledVoterEv(%"class.base::sequence_manager::TaskQueue"* %108) #10
  %110 = ptrtoint %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %109 to i64
  %111 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  %112 = icmp eq %"class.std::__1::__tree_node"* %111, null
  br i1 %112, label %141, label %113

113:                                              ; preds = %106
  %114 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %13, align 8
  br label %115

115:                                              ; preds = %137, %113
  %116 = phi %"class.std::__1::__tree_node"* [ %140, %137 ], [ %111, %113 ]
  %117 = phi %"class.std::__1::__tree_node_base"** [ %139, %137 ], [ %18, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %116, i64 0, i32 1, i32 0, i32 0, i32 0
  %119 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %118, align 8
  %120 = icmp ult %"class.blink::scheduler::NonMainThreadTaskQueue"* %114, %119
  br i1 %120, label %121, label %127

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %116, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, null
  br i1 %124, label %125, label %137

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %116, i64 0, i32 0, i32 0
  br label %143

127:                                              ; preds = %115
  %128 = icmp ult %"class.blink::scheduler::NonMainThreadTaskQueue"* %119, %114
  br i1 %128, label %129, label %135

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %116, i64 0, i32 0, i32 1
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %133, label %137

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %116, i64 0, i32 0, i32 0
  br label %143

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %116, i64 0, i32 0, i32 0
  br label %143

137:                                              ; preds = %129, %121
  %138 = phi %"class.std::__1::__tree_node_base"* [ %123, %121 ], [ %131, %129 ]
  %139 = phi %"class.std::__1::__tree_node_base"** [ %122, %121 ], [ %130, %129 ]
  %140 = bitcast %"class.std::__1::__tree_node_base"* %138 to %"class.std::__1::__tree_node"*
  br label %115

141:                                              ; preds = %106
  %142 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 0, i32 0
  br label %143

143:                                              ; preds = %141, %135, %133, %125
  %144 = phi %"class.std::__1::__tree_end_node"* [ %19, %141 ], [ %126, %125 ], [ %134, %133 ], [ %136, %135 ]
  %145 = phi %"class.std::__1::__tree_node_base"** [ %142, %141 ], [ %122, %125 ], [ %130, %133 ], [ %117, %135 ]
  %146 = bitcast %"class.std::__1::__tree_node_base"** %145 to %"class.std::__1::__tree_node"**
  %147 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node"* %147, null
  br i1 %148, label %149, label %179

149:                                              ; preds = %143
  %150 = tail call i8* @_Znwm(i64 48) #11, !noalias !6
  %151 = getelementptr inbounds i8, i8* %150, i64 32
  %152 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %13, align 8, !noalias !6
  %153 = bitcast i8* %151 to %"class.blink::scheduler::NonMainThreadTaskQueue"**
  store %"class.blink::scheduler::NonMainThreadTaskQueue"* %152, %"class.blink::scheduler::NonMainThreadTaskQueue"** %153, align 8, !noalias !6
  %154 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %152, null
  br i1 %154, label %158, label %155

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %152, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = atomicrmw add i32* %156, i32 1 monotonic, !noalias !6
  br label %158

158:                                              ; preds = %155, %149
  %159 = getelementptr inbounds i8, i8* %150, i64 40
  %160 = bitcast i8* %159 to i64*
  store i64 %110, i64* %160, align 8, !noalias !6
  %161 = bitcast i8* %150 to %"class.std::__1::__tree_node_base"*
  %162 = getelementptr inbounds i8, i8* %150, i64 16
  %163 = bitcast i8* %162 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %144, %"class.std::__1::__tree_end_node"** %163, align 8
  %164 = bitcast %"class.std::__1::__tree_node_base"** %145 to i8**
  store i8* %150, i8** %164, align 8
  %165 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 0, i32 0
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_node_base"* %167, null
  br i1 %168, label %173, label %169

169:                                              ; preds = %158
  %170 = ptrtoint %"class.std::__1::__tree_node_base"* %167 to i64
  %171 = bitcast %"class.std::__1::map"* %17 to i64*
  store i64 %170, i64* %171, align 8
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  br label %173

173:                                              ; preds = %158, %169
  %174 = phi %"class.std::__1::__tree_node_base"* [ %161, %158 ], [ %172, %169 ]
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %175, %"class.std::__1::__tree_node_base"* %174) #10
  %176 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %177 = load i64, i64* %176, align 8
  %178 = add i64 %177, 1
  store i64 %178, i64* %176, align 8
  br label %183

179:                                              ; preds = %143
  %180 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %109, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %179
  tail call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %109) #10
  %182 = bitcast %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %109 to i8*
  tail call void @_ZdlPv(i8* %182) #11
  br label %183

183:                                              ; preds = %173, %179, %181
  %184 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #10
  store i8* null, i8** %5, align 8
  %185 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE16__emplace_uniqueIRS6_DnEENS_9enable_ifIXsr21__can_extract_map_keyIT_S6_NS_4pairIKS6_SE_EEEE5valueENSR_INS_15__tree_iteratorISF_PNS_11__tree_nodeISF_PvEElEEbEEE4typeEOSQ_OT0_(%"class.std::__1::__tree"* %32, %class.scoped_refptr.7* dereferenceable(8) %14, i8** nonnull dereferenceable(8) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #10
  %186 = load %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"** %23, align 8
  call void @_ZN5blink9scheduler21WorkerThreadScheduler23RegisterWorkerSchedulerEPNS0_15WorkerSchedulerE(%"class.blink::scheduler::WorkerThreadScheduler"* %186, %"class.blink::scheduler::WorkerScheduler"* %0) #10
  %187 = load %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"** %23, align 8
  %188 = getelementptr inbounds %"class.blink::scheduler::WorkerThreadScheduler", %"class.blink::scheduler::WorkerThreadScheduler"* %187, i64 0, i32 12, i32 0, i32 0, i32 0
  %189 = load %"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::TaskQueueThrottler"** %188, align 8
  %190 = icmp eq %"class.blink::scheduler::TaskQueueThrottler"* %189, null
  br i1 %190, label %219, label %191

191:                                              ; preds = %183
  %192 = getelementptr inbounds %"class.blink::scheduler::WorkerThreadScheduler", %"class.blink::scheduler::WorkerThreadScheduler"* %187, i64 0, i32 0
  %193 = bitcast %"class.blink::scheduler::WorkerThreadScheduler"* %187 to %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)***
  %194 = load %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)**, %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)*** %193, align 8
  %195 = getelementptr inbounds %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)*, %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)** %194, i64 32
  %196 = load %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)*, %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)** %195, align 8
  %197 = call %"class.base::TickClock"* %196(%"class.blink::scheduler::NonMainThreadSchedulerImpl"* %192) #10
  %198 = bitcast %"class.base::TickClock"* %197 to i64 (%"class.base::TickClock"*)***
  %199 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %198, align 8
  %200 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %199, i64 2
  %201 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %200, align 8
  %202 = call i64 %201(%"class.base::TickClock"* %197) #10
  %203 = load %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"** %23, align 8
  %204 = getelementptr inbounds %"class.blink::scheduler::WorkerThreadScheduler", %"class.blink::scheduler::WorkerThreadScheduler"* %203, i64 0, i32 13
  %205 = load %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"** %204, align 8
  %206 = getelementptr inbounds %"class.blink::scheduler::WorkerThreadScheduler", %"class.blink::scheduler::WorkerThreadScheduler"* %203, i64 0, i32 14
  %207 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %206, align 8
  %208 = icmp eq %"class.blink::scheduler::WakeUpBudgetPool"* %205, null
  br i1 %208, label %213, label %209

209:                                              ; preds = %191
  %210 = bitcast %"class.blink::scheduler::WakeUpBudgetPool"* %205 to %"class.blink::scheduler::BudgetPool"*
  %211 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %11, align 8
  %212 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %211, i64 0, i32 0
  call void @_ZN5blink9scheduler10BudgetPool8AddQueueEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueE(%"class.blink::scheduler::BudgetPool"* nonnull %210, i64 %202, %"class.base::sequence_manager::TaskQueue"* %212) #10
  br label %213

213:                                              ; preds = %209, %191
  %214 = icmp eq %"class.blink::scheduler::CPUTimeBudgetPool"* %207, null
  br i1 %214, label %219, label %215

215:                                              ; preds = %213
  %216 = bitcast %"class.blink::scheduler::CPUTimeBudgetPool"* %207 to %"class.blink::scheduler::BudgetPool"*
  %217 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %11, align 8
  %218 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %217, i64 0, i32 0
  call void @_ZN5blink9scheduler10BudgetPool8AddQueueEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueE(%"class.blink::scheduler::BudgetPool"* nonnull %216, i64 %202, %"class.base::sequence_manager::TaskQueue"* %218) #10
  br label %219

219:                                              ; preds = %183, %213, %215
  %220 = icmp eq %"class.blink::scheduler::WorkerSchedulerProxy"* %2, null
  br i1 %220, label %227, label %221

221:                                              ; preds = %219
  %222 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #10, !noalias !9
  %223 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 9, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %223) #10, !noalias !9
  %224 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 9, i32 0, i32 1
  %225 = load i64, i64* %224, align 8, !noalias !9
  %226 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %226, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %225) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #10, !noalias !9
  call void @_ZN5blink9scheduler20WorkerSchedulerProxy24OnWorkerSchedulerCreatedEN4base7WeakPtrINS0_15WorkerSchedulerEEE(%"class.blink::scheduler::WorkerSchedulerProxy"* nonnull %2, %"class.base::WeakPtr"* nonnull %6) #10
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %226) #10
  br label %227

227:                                              ; preds = %219, %221
  ret void
}

declare void @_ZN5blink22FrameOrWorkerSchedulerC2Ev(%"class.blink::FrameOrWorkerScheduler"*) unnamed_addr #2

declare %"class.blink::scheduler::NonMainThreadTaskQueue"* @_ZN5blink9scheduler26NonMainThreadSchedulerImpl15CreateTaskQueueEPKc(%"class.blink::scheduler::NonMainThreadSchedulerImpl"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* @_ZN4base16sequence_manager9TaskQueue23CreateQueueEnabledVoterEv(%"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink9scheduler21WorkerThreadScheduler23RegisterWorkerSchedulerEPNS0_15WorkerSchedulerE(%"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerScheduler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WorkerScheduler15SetUpThrottlingEv(%"class.blink::scheduler::WorkerScheduler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 6
  %3 = load %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::WorkerThreadScheduler", %"class.blink::scheduler::WorkerThreadScheduler"* %3, i64 0, i32 12, i32 0, i32 0, i32 0
  %5 = load %"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::TaskQueueThrottler"** %4, align 8
  %6 = icmp eq %"class.blink::scheduler::TaskQueueThrottler"* %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::scheduler::WorkerThreadScheduler", %"class.blink::scheduler::WorkerThreadScheduler"* %3, i64 0, i32 0
  %9 = bitcast %"class.blink::scheduler::WorkerThreadScheduler"* %3 to %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)***
  %10 = load %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)**, %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)*, %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)** %10, i64 32
  %12 = load %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)*, %"class.base::TickClock"* (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*)** %11, align 8
  %13 = tail call %"class.base::TickClock"* %12(%"class.blink::scheduler::NonMainThreadSchedulerImpl"* %8) #10
  %14 = bitcast %"class.base::TickClock"* %13 to i64 (%"class.base::TickClock"*)***
  %15 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %15, i64 2
  %17 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %16, align 8
  %18 = tail call i64 %17(%"class.base::TickClock"* %13) #10
  %19 = load %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"** %2, align 8
  %20 = getelementptr inbounds %"class.blink::scheduler::WorkerThreadScheduler", %"class.blink::scheduler::WorkerThreadScheduler"* %19, i64 0, i32 13
  %21 = load %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::scheduler::WorkerThreadScheduler", %"class.blink::scheduler::WorkerThreadScheduler"* %19, i64 0, i32 14
  %23 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %22, align 8
  %24 = icmp eq %"class.blink::scheduler::WakeUpBudgetPool"* %21, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %7
  %26 = bitcast %"class.blink::scheduler::WakeUpBudgetPool"* %21 to %"class.blink::scheduler::BudgetPool"*
  %27 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 1, i32 0
  %28 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %28, i64 0, i32 0
  tail call void @_ZN5blink9scheduler10BudgetPool8AddQueueEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueE(%"class.blink::scheduler::BudgetPool"* nonnull %26, i64 %18, %"class.base::sequence_manager::TaskQueue"* %29) #10
  br label %30

30:                                               ; preds = %7, %25
  %31 = icmp eq %"class.blink::scheduler::CPUTimeBudgetPool"* %23, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %30
  %33 = bitcast %"class.blink::scheduler::CPUTimeBudgetPool"* %23 to %"class.blink::scheduler::BudgetPool"*
  %34 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 1, i32 0
  %35 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %35, i64 0, i32 0
  tail call void @_ZN5blink9scheduler10BudgetPool8AddQueueEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueE(%"class.blink::scheduler::BudgetPool"* nonnull %33, i64 %18, %"class.base::sequence_manager::TaskQueue"* %36) #10
  br label %37

37:                                               ; preds = %32, %30, %1
  ret void
}

declare void @_ZN5blink9scheduler20WorkerSchedulerProxy24OnWorkerSchedulerCreatedEN4base7WeakPtrINS0_15WorkerSchedulerEEE(%"class.blink::scheduler::WorkerSchedulerProxy"*, %"class.base::WeakPtr"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WorkerScheduler10GetWeakPtrEv(%"class.base::WeakPtr"* noalias sret, %"class.blink::scheduler::WorkerScheduler"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10, !noalias !14
  %5 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %1, i64 0, i32 9, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %5) #10, !noalias !14
  %6 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %1, i64 0, i32 9, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !noalias !14
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* %8, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %7) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10, !noalias !14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WorkerSchedulerD2Ev(%"class.blink::scheduler::WorkerScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9scheduler15WorkerSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4, i32 0
  %5 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"* %4, %"class.std::__1::__tree_node"* %7) #10
  %8 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 3, i32 0
  %9 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %8, align 8
  %10 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %9, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %12, i64 -2
  %18 = bitcast %"class.base::RefCountedThreadSafe.8"* %17 to %"class.base::sequence_manager::TaskQueue"*
  %19 = bitcast %"class.base::RefCountedThreadSafe.8"* %17 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %20 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %20, i64 3
  %22 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %21, align 8
  tail call void %22(%"class.base::sequence_manager::TaskQueue"* nonnull %18) #10
  br label %23

23:                                               ; preds = %1, %11, %16
  %24 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 2, i32 0
  %25 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %24, align 8
  %26 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %25, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %25, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %39

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe.8"* %33 to %"class.base::sequence_manager::TaskQueue"*
  %35 = bitcast %"class.base::RefCountedThreadSafe.8"* %33 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %36 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %36, i64 3
  %38 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %37, align 8
  tail call void %38(%"class.base::sequence_manager::TaskQueue"* nonnull %34) #10
  br label %39

39:                                               ; preds = %23, %27, %32
  %40 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 1, i32 0
  %41 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %40, align 8
  %42 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %41, null
  br i1 %42, label %55, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %41, i64 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw sub i32* %45, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %55

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %44, i64 -2
  %50 = bitcast %"class.base::RefCountedThreadSafe.8"* %49 to %"class.base::sequence_manager::TaskQueue"*
  %51 = bitcast %"class.base::RefCountedThreadSafe.8"* %49 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %52 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %52, i64 3
  %54 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %53, align 8
  tail call void %54(%"class.base::sequence_manager::TaskQueue"* nonnull %50) #10
  br label %55

55:                                               ; preds = %39, %43, %48
  %56 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 0
  tail call void @_ZN5blink22FrameOrWorkerSchedulerD2Ev(%"class.blink::FrameOrWorkerScheduler"* %56) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink22FrameOrWorkerSchedulerD2Ev(%"class.blink::FrameOrWorkerScheduler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WorkerSchedulerD0Ev(%"class.blink::scheduler::WorkerScheduler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9scheduler15WorkerSchedulerD2Ev(%"class.blink::scheduler::WorkerScheduler"* %0) #10
  %2 = bitcast %"class.blink::scheduler::WorkerScheduler"* %0 to i8*
  tail call void @free(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::scheduler::WorkerScheduler::PauseHandle"* @_ZN5blink9scheduler15WorkerScheduler5PauseEv(%"class.blink::scheduler::WorkerScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::WeakPtr", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 7
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %1
  %9 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10, !noalias !17
  %11 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 9, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %11) #10, !noalias !17
  %12 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !noalias !17
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %14, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %13) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10, !noalias !17
  %15 = bitcast %"class.base::WeakPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15)
  %16 = call noalias i8* @malloc(i64 16) #10
  %17 = bitcast i8* %16 to %"class.blink::scheduler::WorkerScheduler::PauseHandle"*
  %18 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %18, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %19) #10
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %20, align 8
  call void @_ZN5blink9scheduler15WorkerScheduler11PauseHandleC2EN4base7WeakPtrIS1_EE(%"class.blink::scheduler::WorkerScheduler::PauseHandle"* %17, %"class.base::WeakPtr"* nonnull %3) #10
  %23 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15)
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  br label %24

24:                                               ; preds = %1, %8
  %25 = phi %"class.blink::scheduler::WorkerScheduler::PauseHandle"* [ %17, %8 ], [ null, %1 ]
  ret %"class.blink::scheduler::WorkerScheduler::PauseHandle"* %25
}

declare void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoter15SetVoteToEnableEb(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink9scheduler10BudgetPool8AddQueueEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueE(%"class.blink::scheduler::BudgetPool"*, i64, %"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9scheduler15WorkerScheduler23CalculateLifecycleStateENS_22FrameOrWorkerScheduler12ObserverTypeE(%"class.blink::scheduler::WorkerScheduler"* nocapture readonly, i32) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 6
  %4 = load %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::WorkerThreadScheduler", %"class.blink::scheduler::WorkerThreadScheduler"* %4, i64 0, i32 8
  %6 = load i32, i32* %5, align 8
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WorkerScheduler7DisposeEv(%"class.blink::scheduler::WorkerScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 6
  %3 = load %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::WorkerThreadScheduler", %"class.blink::scheduler::WorkerThreadScheduler"* %3, i64 0, i32 12, i32 0, i32 0, i32 0
  %5 = load %"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::TaskQueueThrottler"** %4, align 8
  %6 = icmp eq %"class.blink::scheduler::TaskQueueThrottler"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 1, i32 0
  %9 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %9, i64 0, i32 0
  tail call void @_ZN5blink9scheduler18TaskQueueThrottler17ShutdownTaskQueueEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::TaskQueueThrottler"* nonnull %5, %"class.base::sequence_manager::TaskQueue"* %10) #10
  %11 = load %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"** %2, align 8
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi %"class.blink::scheduler::WorkerThreadScheduler"* [ %3, %1 ], [ %11, %7 ]
  tail call void @_ZN5blink9scheduler21WorkerThreadScheduler25UnregisterWorkerSchedulerEPNS0_15WorkerSchedulerE(%"class.blink::scheduler::WorkerThreadScheduler"* %13, %"class.blink::scheduler::WorkerScheduler"* %0) #10
  %14 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %16, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %62, %12
  %20 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"* %20, %"class.std::__1::__tree_node"* %22) #10
  %23 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %23, align 8
  store %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"** %15, align 8
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %24, align 8
  %25 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 7
  store i8 1, i8* %25, align 8
  ret void

26:                                               ; preds = %12, %62
  %27 = phi %"class.std::__1::__tree_end_node"* [ %63, %62 ], [ %16, %12 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 4
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.blink::scheduler::NonMainThreadTaskQueue"**
  %30 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %30, i64 0, i32 0
  %32 = bitcast %"class.blink::scheduler::NonMainThreadTaskQueue"* %30 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %33 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %32, align 8
  %34 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %33, align 8
  tail call void %34(%"class.base::sequence_manager::TaskQueue"* %31) #10
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 1, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %46

38:                                               ; preds = %26
  %39 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node_base"*
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 2
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_end_node"**
  %42 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, %39
  br i1 %45, label %62, label %53

46:                                               ; preds = %26, %46
  %47 = phi %"class.std::__1::__tree_node_base"* [ %49, %46 ], [ %36, %26 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %46

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %47, i64 0, i32 0
  br label %62

53:                                               ; preds = %38, %53
  %54 = phi %"class.std::__1::__tree_end_node"** [ %57, %53 ], [ %41, %38 ]
  %55 = bitcast %"class.std::__1::__tree_end_node"** %54 to %"class.std::__1::__tree_node_base"**
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %56, i64 0, i32 2
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, %56
  br i1 %61, label %62, label %53

62:                                               ; preds = %53, %38, %51
  %63 = phi %"class.std::__1::__tree_end_node"* [ %52, %51 ], [ %42, %38 ], [ %58, %53 ]
  %64 = icmp eq %"class.std::__1::__tree_end_node"* %63, %17
  br i1 %64, label %19, label %26
}

declare void @_ZN5blink9scheduler18TaskQueueThrottler17ShutdownTaskQueueEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #2

declare void @_ZN5blink9scheduler21WorkerThreadScheduler25UnregisterWorkerSchedulerEPNS0_15WorkerSchedulerE(%"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerScheduler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZNK5blink9scheduler15WorkerScheduler13GetTaskRunnerENS_8TaskTypeE(%"class.blink::scheduler::WorkerScheduler"* nocapture readonly, i8 zeroext) local_unnamed_addr #0 align 2 {
  switch i8 %1, label %21 [
    i8 72, label %3
    i8 73, label %3
    i8 10, label %3
    i8 13, label %3
    i8 51, label %3
    i8 1, label %5
    i8 2, label %5
    i8 3, label %5
    i8 50, label %5
    i8 4, label %5
    i8 5, label %5
    i8 6, label %5
    i8 7, label %5
    i8 8, label %5
    i8 9, label %5
    i8 11, label %5
    i8 12, label %5
    i8 14, label %5
    i8 15, label %5
    i8 16, label %5
    i8 17, label %5
    i8 18, label %5
    i8 19, label %5
    i8 20, label %5
    i8 78, label %5
    i8 21, label %5
    i8 22, label %5
    i8 56, label %5
    i8 57, label %5
    i8 58, label %5
    i8 59, label %5
    i8 23, label %5
    i8 24, label %5
    i8 27, label %5
    i8 29, label %5
    i8 30, label %5
    i8 32, label %5
    i8 44, label %5
    i8 63, label %5
    i8 65, label %5
    i8 76, label %5
    i8 0, label %7
    i8 33, label %7
    i8 26, label %7
    i8 64, label %7
    i8 66, label %7
    i8 75, label %9
  ]

3:                                                ; preds = %2, %2, %2, %2, %2
  %4 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 1, i32 0
  br label %15

5:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %6 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 2, i32 0
  br label %15

7:                                                ; preds = %2, %2, %2, %2, %2
  %8 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 3, i32 0
  br label %15

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZN5blink54IsInflightNetworkRequestBackForwardCacheSupportEnabledEv() #10
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 3, i32 0
  br label %15

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 2, i32 0
  br label %15

15:                                               ; preds = %3, %5, %7, %13, %11
  %16 = phi %"class.blink::scheduler::NonMainThreadTaskQueue"** [ %12, %11 ], [ %14, %13 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]
  %17 = phi i8 [ 75, %11 ], [ 75, %13 ], [ %1, %7 ], [ %1, %5 ], [ %1, %3 ]
  %18 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %16, align 8
  %19 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %18, i64 0, i32 0
  %20 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN4base16sequence_manager9TaskQueue16CreateTaskRunnerEh(%"class.base::sequence_manager::TaskQueue"* %19, i8 zeroext %17) #10
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi %"class.base::SingleThreadTaskRunner"* [ null, %2 ], [ %20, %15 ]
  ret %"class.base::SingleThreadTaskRunner"* %22
}

declare zeroext i1 @_ZN5blink54IsInflightNetworkRequestBackForwardCacheSupportEnabledEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WorkerScheduler23OnLifecycleStateChangedENS0_24SchedulingLifecycleStateE(%"class.blink::scheduler::WorkerScheduler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  %7 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 6
  %8 = load %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"** %7, align 8
  %9 = bitcast %"class.blink::scheduler::WorkerThreadScheduler"* %8 to void (%"class.blink::scheduler::WorkerThreadScheduler"*, i32)***
  %10 = load void (%"class.blink::scheduler::WorkerThreadScheduler"*, i32)**, void (%"class.blink::scheduler::WorkerThreadScheduler"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::scheduler::WorkerThreadScheduler"*, i32)*, void (%"class.blink::scheduler::WorkerThreadScheduler"*, i32)** %10, i64 36
  %12 = load void (%"class.blink::scheduler::WorkerThreadScheduler"*, i32)*, void (%"class.blink::scheduler::WorkerThreadScheduler"*, i32)** %11, align 8
  tail call void %12(%"class.blink::scheduler::WorkerThreadScheduler"* %8, i32 %1) #10
  %13 = load %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"** %7, align 8
  %14 = getelementptr inbounds %"class.blink::scheduler::WorkerThreadScheduler", %"class.blink::scheduler::WorkerThreadScheduler"* %13, i64 0, i32 12, i32 0, i32 0, i32 0
  %15 = load %"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::TaskQueueThrottler"** %14, align 8
  %16 = icmp eq %"class.blink::scheduler::TaskQueueThrottler"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %6
  %18 = load i32, i32* %3, align 8
  %19 = icmp eq i32 %18, 2
  %20 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 1, i32 0
  %21 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %21, i64 0, i32 0
  br i1 %19, label %23, label %24

23:                                               ; preds = %17
  tail call void @_ZN5blink9scheduler18TaskQueueThrottler24IncreaseThrottleRefCountEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::TaskQueueThrottler"* nonnull %15, %"class.base::sequence_manager::TaskQueue"* %22) #10
  br label %25

24:                                               ; preds = %17
  tail call void @_ZN5blink9scheduler18TaskQueueThrottler24DecreaseThrottleRefCountEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::TaskQueueThrottler"* nonnull %15, %"class.base::sequence_manager::TaskQueue"* %22) #10
  br label %25

25:                                               ; preds = %6, %23, %24
  %26 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 0
  tail call void @_ZN5blink22FrameOrWorkerScheduler24NotifyLifecycleObserversEv(%"class.blink::FrameOrWorkerScheduler"* %26) #10
  br label %27

27:                                               ; preds = %2, %25
  ret void
}

declare void @_ZN5blink9scheduler18TaskQueueThrottler24IncreaseThrottleRefCountEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #2

declare void @_ZN5blink9scheduler18TaskQueueThrottler24DecreaseThrottleRefCountEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #2

declare void @_ZN5blink22FrameOrWorkerScheduler24NotifyLifecycleObserversEv(%"class.blink::FrameOrWorkerScheduler"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.blink::scheduler::NonMainThreadTaskQueue"* @_ZN5blink9scheduler15WorkerScheduler19UnpausableTaskQueueEv(%"class.blink::scheduler::WorkerScheduler"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %2, align 8
  %4 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  br label %8

8:                                                ; preds = %1, %5
  ret %"class.blink::scheduler::NonMainThreadTaskQueue"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.blink::scheduler::NonMainThreadTaskQueue"* @_ZN5blink9scheduler15WorkerScheduler17PausableTaskQueueEv(%"class.blink::scheduler::WorkerScheduler"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %2, align 8
  %4 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  br label %8

8:                                                ; preds = %1, %5
  ret %"class.blink::scheduler::NonMainThreadTaskQueue"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.blink::scheduler::NonMainThreadTaskQueue"* @_ZN5blink9scheduler15WorkerScheduler21ThrottleableTaskQueueEv(%"class.blink::scheduler::WorkerScheduler"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %2, align 8
  %4 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  br label %8

8:                                                ; preds = %1, %5
  ret %"class.blink::scheduler::NonMainThreadTaskQueue"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler15WorkerScheduler21OnStartedUsingFeatureENS0_26WebSchedulerTrackedFeatureERKNS_16SchedulingPolicyE(%"class.blink::scheduler::WorkerScheduler"* nocapture, i32, %"struct.blink::SchedulingPolicy"* nocapture dereferenceable(2)) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler15WorkerScheduler21OnStoppedUsingFeatureENS0_26WebSchedulerTrackedFeatureERKNS_16SchedulingPolicyE(%"class.blink::scheduler::WorkerScheduler"* nocapture, i32, %"struct.blink::SchedulingPolicy"* nocapture dereferenceable(2)) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebSchedulingTaskQueue"* @_ZN5blink9scheduler15WorkerScheduler28CreateWebSchedulingTaskQueueENS_21WebSchedulingPriorityE(%"class.blink::scheduler::WorkerScheduler"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %0, i64 0, i32 6
  %4 = bitcast %"class.blink::scheduler::WorkerThreadScheduler"** %3 to %"class.blink::scheduler::NonMainThreadSchedulerImpl"**
  %5 = load %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.blink::scheduler::NonMainThreadSchedulerImpl"** %4, align 8
  %6 = tail call %"class.blink::scheduler::NonMainThreadTaskQueue"* @_ZN5blink9scheduler26NonMainThreadSchedulerImpl15CreateTaskQueueEPKc(%"class.blink::scheduler::NonMainThreadSchedulerImpl"* %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0)) #10
  tail call void @_ZN5blink9scheduler22NonMainThreadTaskQueue24SetWebSchedulingPriorityENS_21WebSchedulingPriorityE(%"class.blink::scheduler::NonMainThreadTaskQueue"* %6, i32 %1) #10
  %7 = tail call i8* @_Znwm(i64 24) #11
  %8 = bitcast i8* %7 to %"class.blink::scheduler::NonMainThreadWebSchedulingTaskQueueImpl"*
  tail call void @_ZN5blink9scheduler39NonMainThreadWebSchedulingTaskQueueImplC1E13scoped_refptrINS0_22NonMainThreadTaskQueueEE(%"class.blink::scheduler::NonMainThreadWebSchedulingTaskQueueImpl"* nonnull %8, %"class.blink::scheduler::NonMainThreadTaskQueue"* %6) #10
  %9 = bitcast i8* %7 to %"class.blink::WebSchedulingTaskQueue"*
  ret %"class.blink::WebSchedulingTaskQueue"* %9
}

declare void @_ZN5blink9scheduler22NonMainThreadTaskQueue24SetWebSchedulingPriorityENS_21WebSchedulingPriorityE(%"class.blink::scheduler::NonMainThreadTaskQueue"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9scheduler15WorkerScheduler36SetPreemptedForCooperativeSchedulingEN4base11StrongAliasINS_12PreemptedTagEbEE(%"class.blink::scheduler::WorkerScheduler"*, i8) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FrameScheduler"* @_ZN5blink22FrameOrWorkerScheduler16ToFrameSchedulerEv(%"class.blink::FrameOrWorkerScheduler"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FrameScheduler"* null
}

declare void @_ZN5blink22FrameOrWorkerScheduler23GetDocumentBoundWeakPtrEv(%"class.base::WeakPtr.209"* sret, %"class.blink::FrameOrWorkerScheduler"*) unnamed_addr #2

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #1

declare %"class.base::SingleThreadTaskRunner"* @_ZN4base16sequence_manager9TaskQueue16CreateTaskRunnerEh(%"class.base::sequence_manager::TaskQueue"*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %33, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %10, align 8
  store %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* null, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %10, align 8
  %12 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  tail call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %11) #10
  %14 = bitcast %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  br label %15

15:                                               ; preds = %13, %4
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %16, align 8
  %18 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %17, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.8"* %25 to %"class.base::sequence_manager::TaskQueue"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.8"* %25 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %28 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %28, i64 3
  %30 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %29, align 8
  tail call void %30(%"class.base::sequence_manager::TaskQueue"* nonnull %26) #10
  br label %31

31:                                               ; preds = %15, %19, %24
  %32 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %2, %31
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE16__emplace_uniqueIRS6_DnEENS_9enable_ifIXsr21__can_extract_map_keyIT_S6_NS_4pairIKS6_SE_EEEE5valueENSR_INS_15__tree_iteratorISF_PNS_11__tree_nodeISF_PvEElEEbEEE4typeEOSQ_OT0_(%"class.std::__1::__tree"*, %class.scoped_refptr.7* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %38, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %1, i64 0, i32 0
  %11 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %10, align 8
  br label %12

12:                                               ; preds = %34, %8
  %13 = phi %"class.std::__1::__tree_node"* [ %37, %34 ], [ %6, %8 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %36, %34 ], [ %9, %8 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %15, align 8
  %17 = icmp ult %"class.blink::scheduler::NonMainThreadTaskQueue"* %11, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %40

24:                                               ; preds = %12
  %25 = icmp ult %"class.blink::scheduler::NonMainThreadTaskQueue"* %16, %11
  br i1 %25, label %26, label %32

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %40

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %40

34:                                               ; preds = %26, %18
  %35 = phi %"class.std::__1::__tree_node_base"* [ %20, %18 ], [ %28, %26 ]
  %36 = phi %"class.std::__1::__tree_node_base"** [ %19, %18 ], [ %27, %26 ]
  %37 = bitcast %"class.std::__1::__tree_node_base"* %35 to %"class.std::__1::__tree_node"*
  br label %12

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %40

40:                                               ; preds = %38, %32, %30, %22
  %41 = phi %"class.std::__1::__tree_end_node"* [ %4, %38 ], [ %23, %22 ], [ %31, %30 ], [ %33, %32 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %39, %38 ], [ %19, %22 ], [ %27, %30 ], [ %14, %32 ]
  %43 = bitcast %"class.std::__1::__tree_node_base"** %42 to %"class.std::__1::__tree_node"**
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %46, label %80

46:                                               ; preds = %40
  %47 = tail call i8* @_Znwm(i64 48) #11, !noalias !22
  %48 = getelementptr inbounds i8, i8* %47, i64 32
  %49 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %1, i64 0, i32 0
  %50 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %49, align 8, !noalias !22
  %51 = bitcast i8* %48 to %"class.blink::scheduler::NonMainThreadTaskQueue"**
  store %"class.blink::scheduler::NonMainThreadTaskQueue"* %50, %"class.blink::scheduler::NonMainThreadTaskQueue"** %51, align 8, !noalias !22
  %52 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %50, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %50, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic, !noalias !22
  br label %56

56:                                               ; preds = %53, %46
  %57 = getelementptr inbounds i8, i8* %47, i64 40
  %58 = bitcast i8* %57 to i64*
  store i64 0, i64* %58, align 8, !noalias !22
  %59 = bitcast i8* %47 to %"class.std::__1::__tree_node"*
  %60 = bitcast i8* %47 to %"class.std::__1::__tree_node_base"*
  %61 = getelementptr inbounds i8, i8* %47, i64 16
  %62 = bitcast i8* %61 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %62, align 8
  %63 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8**
  store i8* %47, i8** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %65 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %56
  %70 = ptrtoint %"class.std::__1::__tree_node_base"* %67 to i64
  %71 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %70, i64* %71, align 8
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  br label %73

73:                                               ; preds = %69, %56
  %74 = phi %"class.std::__1::__tree_node_base"* [ %60, %56 ], [ %72, %69 ]
  %75 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"* %74) #10
  %77 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 1
  store i64 %79, i64* %77, align 8
  br label %80

80:                                               ; preds = %40, %73
  %81 = phi i8 [ 1, %73 ], [ 0, %40 ]
  %82 = phi %"class.std::__1::__tree_node"* [ %59, %73 ], [ %44, %40 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 0, i32 0
  %84 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %83, 0
  %85 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %84, i8 %81, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %85
}

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink9scheduler39NonMainThreadWebSchedulingTaskQueueImplC1E13scoped_refptrINS0_22NonMainThreadTaskQueueEE(%"class.blink::scheduler::NonMainThreadWebSchedulingTaskQueueImpl"*, %"class.blink::scheduler::NonMainThreadTaskQueue"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE16__construct_nodeIJRS6_SE_EEENS7_INS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINSK_ISR_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE16__construct_nodeIJRS6_SE_EEENS7_INS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINSK_ISR_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE16__construct_nodeIJRS6_SE_EEENS7_INS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINSK_ISR_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE16__construct_nodeIJRS6_SE_EEENS7_INS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINSK_ISR_EEEEEEDpOT_"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZNK4base14WeakPtrFactoryIN5blink9scheduler15WorkerSchedulerEE10GetWeakPtrEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4base14WeakPtrFactoryIN5blink9scheduler15WorkerSchedulerEE10GetWeakPtrEv"}
!12 = distinct !{!12, !13, !"_ZN5blink9scheduler15WorkerScheduler10GetWeakPtrEv: argument 0"}
!13 = distinct !{!13, !"_ZN5blink9scheduler15WorkerScheduler10GetWeakPtrEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK4base14WeakPtrFactoryIN5blink9scheduler15WorkerSchedulerEE10GetWeakPtrEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4base14WeakPtrFactoryIN5blink9scheduler15WorkerSchedulerEE10GetWeakPtrEv"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZNK4base14WeakPtrFactoryIN5blink9scheduler15WorkerSchedulerEE10GetWeakPtrEv: argument 0"}
!19 = distinct !{!19, !"_ZNK4base14WeakPtrFactoryIN5blink9scheduler15WorkerSchedulerEE10GetWeakPtrEv"}
!20 = distinct !{!20, !21, !"_ZN5blink9scheduler15WorkerScheduler10GetWeakPtrEv: argument 0"}
!21 = distinct !{!21, !"_ZN5blink9scheduler15WorkerScheduler10GetWeakPtrEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE16__construct_nodeIJRS6_DnEEENS7_INS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINSK_ISR_EEEEEEDpOT_: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__16__treeINS_12__value_typeI13scoped_refptrIN5blink9scheduler22NonMainThreadTaskQueueEENS_10unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS_14default_deleteISB_EEEEEENS_19__map_value_compareIS6_SF_NS_4lessIS6_EELb1EEENS_9allocatorISF_EEE16__construct_nodeIJRS6_DnEEENS7_INS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINSK_ISR_EEEEEEDpOT_"}
