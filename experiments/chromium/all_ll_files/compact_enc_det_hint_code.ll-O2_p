; ModuleID = '../../third_party/ced/src/compact_enc_det/compact_enc_det_hint_code.cc'
source_filename = "../../third_party/ced/src/compact_enc_det/compact_enc_det_hint_code.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Latin1\00", align 1
@_ZL18kFakeEncodingName2 = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0)], align 16
@_ZL17kFakeEncodingName = internal unnamed_addr constant [20 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0)], align 16
@_ZL18kCharsetToLowerTbl = internal unnamed_addr constant [256 x i8] c"------------------------------------------------0123456789-------abcdefghijklmnopqrstuvwxyz------abcdefghijklmnopqrstuvwxyz-------------------------------------------------------------------------------------------------------------------------------------", align 16
@.str.4 = private unnamed_addr constant [10 x i8] c"FakeEnc_0\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"FakeEnc_1\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"FakeEnc_2\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"FakeEnc_3\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"FakeEnc_4\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"FakeEnc100\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"FakeEnc101\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"FakeEnc102\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"FakeEnc103\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"FakeEnc104\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"FakeEnc105\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"FakeEnc106\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"FakeEnc107\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"FakeEnc108\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"FakeEnc109\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"FakeEnc110\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"FakeEnc111\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"FakeEnc112\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"FakeEnc113\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"FakeEnc114\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"FakeEnc115\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"FakeEnc116\00", align 1
@.str.26 = private unnamed_addr constant [11 x i8] c"FakeEnc117\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"FakeEnc118\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"FakeEnc119\00", align 1
@_ZL8kIsAlpha = internal unnamed_addr constant <{ [123 x i8], [133 x i8] }> <{ [123 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01", [133 x i8] zeroinitializer }>, align 16
@_ZL8kIsDigit = internal unnamed_addr constant <{ [58 x i8], [198 x i8] }> <{ [58 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01", [198 x i8] zeroinitializer }>, align 16

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_Z14MyEncodingName8Encoding(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 0
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %3
  %6 = icmp slt i32 %0, 75
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i8* @_Z12EncodingName8Encoding(i32 %0) #3
  br label %23

9:                                                ; preds = %5
  %10 = icmp slt i32 %0, 79
  br i1 %10, label %11, label %16

11:                                               ; preds = %9
  %12 = add nsw i32 %0, -75
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [5 x i8*], [5 x i8*]* @_ZL18kFakeEncodingName2, i64 0, i64 %13
  %15 = load i8*, i8** %14, align 8
  br label %23

16:                                               ; preds = %9
  %17 = add nsw i32 %0, -100
  %18 = icmp ult i32 %17, 20
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds [20 x i8*], [20 x i8*]* @_ZL17kFakeEncodingName, i64 0, i64 %20
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %16, %3, %1, %19, %11, %7
  %24 = phi i8* [ %8, %7 ], [ %15, %11 ], [ %22, %19 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), %1 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), %16 ]
  ret i8* %24
}

declare i8* @_Z12EncodingName8Encoding(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z10MakeChar44RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  store i8 8, i8* %6, align 1
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  store i64 6872316419617283935, i64* %8, align 8
  %9 = bitcast i64* %4 to i8*
  store i8 0, i8* %9, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %101, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %23

23:                                               ; preds = %19, %90
  %24 = phi i1 [ %13, %19 ], [ %96, %90 ]
  %25 = phi i64 [ 0, %19 ], [ %94, %90 ]
  %26 = phi i32 [ 0, %19 ], [ %93, %90 ]
  %27 = phi i32 [ 0, %19 ], [ %92, %90 ]
  %28 = phi i32 [ 0, %19 ], [ %91, %90 ]
  %29 = load i8*, i8** %20, align 8
  %30 = select i1 %24, i8* %29, i8* %21
  %31 = getelementptr inbounds i8, i8* %30, i64 %25
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [123 x i8], [133 x i8] }>* @_ZL8kIsAlpha to [256 x i8]*), i64 0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %23
  %38 = icmp slt i32 %28, 4
  br i1 %38, label %39, label %90

39:                                               ; preds = %37
  %40 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL18kCharsetToLowerTbl, i64 0, i64 %33
  %41 = load i8, i8* %40, align 1
  %42 = sext i32 %28 to i64
  %43 = load i8, i8* %6, align 1
  %44 = icmp slt i8 %43, 0
  %45 = load i8*, i8** %3, align 8
  %46 = select i1 %44, i8* %45, i8* %22
  %47 = getelementptr inbounds i8, i8* %46, i64 %42
  store i8 %41, i8* %47, align 1
  %48 = add nsw i32 %28, 1
  br label %90

49:                                               ; preds = %23
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [58 x i8], [198 x i8] }>* @_ZL8kIsDigit to [256 x i8]*), i64 0, i64 %33
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %90, label %53

53:                                               ; preds = %49
  %54 = icmp slt i32 %27, 4
  br i1 %54, label %55, label %58

55:                                               ; preds = %53
  %56 = add nsw i32 %27, 4
  %57 = sext i32 %56 to i64
  br label %80

58:                                               ; preds = %53
  %59 = load i8, i8* %6, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i8*, i8** %3, align 8
  %62 = select i1 %60, i8* %61, i8* %22
  %63 = getelementptr inbounds i8, i8* %62, i64 5
  %64 = load i8, i8* %63, align 1
  %65 = getelementptr inbounds i8, i8* %62, i64 4
  store i8 %64, i8* %65, align 1
  %66 = load i8, i8* %6, align 1
  %67 = icmp slt i8 %66, 0
  %68 = load i8*, i8** %3, align 8
  %69 = select i1 %67, i8* %68, i8* %22
  %70 = getelementptr inbounds i8, i8* %69, i64 6
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds i8, i8* %69, i64 5
  store i8 %71, i8* %72, align 1
  %73 = load i8, i8* %6, align 1
  %74 = icmp slt i8 %73, 0
  %75 = load i8*, i8** %3, align 8
  %76 = select i1 %74, i8* %75, i8* %22
  %77 = getelementptr inbounds i8, i8* %76, i64 7
  %78 = load i8, i8* %77, align 1
  %79 = getelementptr inbounds i8, i8* %76, i64 6
  store i8 %78, i8* %79, align 1
  br label %80

80:                                               ; preds = %58, %55
  %81 = phi i64 [ 7, %58 ], [ %57, %55 ]
  %82 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL18kCharsetToLowerTbl, i64 0, i64 %33
  %83 = load i8, i8* %82, align 1
  %84 = load i8, i8* %6, align 1
  %85 = icmp slt i8 %84, 0
  %86 = load i8*, i8** %3, align 8
  %87 = select i1 %85, i8* %86, i8* %22
  %88 = getelementptr inbounds i8, i8* %87, i64 %81
  store i8 %83, i8* %88, align 1
  %89 = add nsw i32 %27, 1
  br label %90

90:                                               ; preds = %49, %80, %37, %39
  %91 = phi i32 [ %48, %39 ], [ %28, %37 ], [ %28, %80 ], [ %28, %49 ]
  %92 = phi i32 [ %27, %39 ], [ %27, %37 ], [ %89, %80 ], [ %27, %49 ]
  %93 = add i32 %26, 1
  %94 = zext i32 %93 to i64
  %95 = load i8, i8* %11, align 1
  %96 = icmp slt i8 %95, 0
  %97 = load i64, i64* %14, align 8
  %98 = zext i8 %95 to i64
  %99 = select i1 %96, i64 %97, i64 %98
  %100 = icmp ugt i64 %99, %94
  br i1 %100, label %23, label %101

101:                                              ; preds = %90, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z9MakeChar4RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  store i8 4, i8* %5, align 1
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1600085855, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 4
  store i8 0, i8* %9, align 4
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %64, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %22

22:                                               ; preds = %19, %54
  %23 = phi i64 [ %15, %19 ], [ %55, %54 ]
  %24 = phi i8 [ %12, %19 ], [ %56, %54 ]
  %25 = phi i1 [ %13, %19 ], [ %60, %54 ]
  %26 = phi i64 [ 0, %19 ], [ %59, %54 ]
  %27 = phi i32 [ 0, %19 ], [ %58, %54 ]
  %28 = phi i32 [ 0, %19 ], [ %57, %54 ]
  %29 = load i8*, i8** %20, align 8
  %30 = select i1 %25, i8* %29, i8* %21
  %31 = getelementptr inbounds i8, i8* %30, i64 %26
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [123 x i8], [133 x i8] }>* @_ZL8kIsAlpha to [256 x i8]*), i64 0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [58 x i8], [198 x i8] }>* @_ZL8kIsDigit to [256 x i8]*), i64 0, i64 %33
  %37 = load i8, i8* %36, align 1
  %38 = or i8 %37, %35
  %39 = icmp ne i8 %38, 0
  %40 = icmp slt i32 %28, 4
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %54

42:                                               ; preds = %22
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL18kCharsetToLowerTbl, i64 0, i64 %33
  %44 = load i8, i8* %43, align 1
  %45 = sext i32 %28 to i64
  %46 = load i8, i8* %5, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i8*, i8** %3, align 8
  %49 = select i1 %47, i8* %48, i8* %7
  %50 = getelementptr inbounds i8, i8* %49, i64 %45
  store i8 %44, i8* %50, align 1
  %51 = add nsw i32 %28, 1
  %52 = load i8, i8* %11, align 1
  %53 = load i64, i64* %14, align 8
  br label %54

54:                                               ; preds = %42, %22
  %55 = phi i64 [ %53, %42 ], [ %23, %22 ]
  %56 = phi i8 [ %52, %42 ], [ %24, %22 ]
  %57 = phi i32 [ %51, %42 ], [ %28, %22 ]
  %58 = add i32 %27, 1
  %59 = zext i32 %58 to i64
  %60 = icmp slt i8 %56, 0
  %61 = zext i8 %56 to i64
  %62 = select i1 %60, i64 %55, i64 %61
  %63 = icmp ugt i64 %62, %59
  br i1 %63, label %22, label %64

64:                                               ; preds = %54, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z9MakeChar8RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  store i8 8, i8* %6, align 1
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  store i64 6872316419617283935, i64* %8, align 8
  %9 = bitcast i64* %4 to i8*
  store i8 0, i8* %9, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %65, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %23

23:                                               ; preds = %19, %55
  %24 = phi i64 [ %15, %19 ], [ %56, %55 ]
  %25 = phi i8 [ %12, %19 ], [ %57, %55 ]
  %26 = phi i1 [ %13, %19 ], [ %61, %55 ]
  %27 = phi i64 [ 0, %19 ], [ %60, %55 ]
  %28 = phi i32 [ 0, %19 ], [ %59, %55 ]
  %29 = phi i32 [ 0, %19 ], [ %58, %55 ]
  %30 = load i8*, i8** %20, align 8
  %31 = select i1 %26, i8* %30, i8* %21
  %32 = getelementptr inbounds i8, i8* %31, i64 %27
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i64
  %35 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [123 x i8], [133 x i8] }>* @_ZL8kIsAlpha to [256 x i8]*), i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [58 x i8], [198 x i8] }>* @_ZL8kIsDigit to [256 x i8]*), i64 0, i64 %34
  %38 = load i8, i8* %37, align 1
  %39 = or i8 %38, %36
  %40 = icmp ne i8 %39, 0
  %41 = icmp slt i32 %29, 8
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %55

43:                                               ; preds = %23
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL18kCharsetToLowerTbl, i64 0, i64 %34
  %45 = load i8, i8* %44, align 1
  %46 = sext i32 %29 to i64
  %47 = load i8, i8* %6, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i8*, i8** %3, align 8
  %50 = select i1 %48, i8* %49, i8* %22
  %51 = getelementptr inbounds i8, i8* %50, i64 %46
  store i8 %45, i8* %51, align 1
  %52 = add nsw i32 %29, 1
  %53 = load i8, i8* %11, align 1
  %54 = load i64, i64* %14, align 8
  br label %55

55:                                               ; preds = %43, %23
  %56 = phi i64 [ %54, %43 ], [ %24, %23 ]
  %57 = phi i8 [ %53, %43 ], [ %25, %23 ]
  %58 = phi i32 [ %52, %43 ], [ %29, %23 ]
  %59 = add i32 %28, 1
  %60 = zext i32 %59 to i64
  %61 = icmp slt i8 %57, 0
  %62 = zext i8 %57 to i64
  %63 = select i1 %61, i64 %56, i64 %62
  %64 = icmp ugt i64 %63, %60
  br i1 %64, label %23, label %65

65:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
