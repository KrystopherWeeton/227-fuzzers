; ModuleID = '../../net/spdy/header_coalescer.cc'
source_filename = "../../net/spdy/header_coalescer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::HeaderCoalescer" = type { %"class.spdy::SpdyHeadersHandlerInterface", %"class.spdy::Http2HeaderBlock", i8, i64, i8, i8, i32, %"class.net::NetLogWithSource" }
%"class.spdy::SpdyHeadersHandlerInterface" = type { i32 (...)** }
%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"struct.std::__1::pair"**, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"struct.std::__1::pair" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.10" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i8* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.15", %"class.std::__1::vector.22" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.17" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.24" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%class.GetParamsImpl = type { %"class.net::NetLog::GetParamsInterface", %class.anon* }
%"class.net::NetLog::GetParamsInterface" = type { i32 (...)** }
%class.anon = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, i8** }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.35" }
%"union.absl::variant_internal::DestructibleUnionImpl.35" = type { %"union.absl::variant_internal::DestructibleUnionImpl.36" }
%"union.absl::variant_internal::DestructibleUnionImpl.36" = type { %"union.absl::variant_internal::DestructibleUnionImpl.37" }
%"union.absl::variant_internal::DestructibleUnionImpl.37" = type { %"union.absl::variant_internal::DestructibleUnionImpl.38" }
%"union.absl::variant_internal::DestructibleUnionImpl.38" = type { %"class.std::__1::basic_string" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN3net15HeaderCoalescerD2Ev = comdat any

$_ZN3net15HeaderCoalescerD0Ev = comdat any

$_ZN3net15HeaderCoalescer18OnHeaderBlockStartEv = comdat any

$_ZN3net15HeaderCoalescer16OnHeaderBlockEndEmm = comdat any

$_ZN3net6NetLog18GetParamsInterfaceD2Ev = comdat any

@_ZTVN3net15HeaderCoalescerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HeaderCoalescer"*)* @_ZN3net15HeaderCoalescerD2Ev to i8*), i8* bitcast (void (%"class.net::HeaderCoalescer"*)* @_ZN3net15HeaderCoalescerD0Ev to i8*), i8* bitcast (void (%"class.net::HeaderCoalescer"*)* @_ZN3net15HeaderCoalescer18OnHeaderBlockStartEv to i8*), i8* bitcast (void (%"class.net::HeaderCoalescer"*, i8*, i64, i8*, i64)* @_ZN3net15HeaderCoalescer8OnHeaderEN4absl11string_viewES2_ to i8*), i8* bitcast (void (%"class.net::HeaderCoalescer"*, i64, i64)* @_ZN3net15HeaderCoalescer16OnHeaderBlockEndEmm to i8*)] }, align 8
@.str = private unnamed_addr constant [31 x i8] c"Header name must not be empty.\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"Pseudo header must not follow regular headers.\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"Invalid character in header name.\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"Upper case characters in header name.\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"Header list too large.\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"Invalid character 0x%02X in header value.\00", align 1
@"_ZTVZN3net6NetLog8AddEntryIZNS_12_GLOBAL__N_119NetLogInvalidHeaderERKNS_16NetLogWithSourceEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEESB_PKcE3$_0EENS8_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSG_E13GetParamsImpl" = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::Value"*, %class.GetParamsImpl*, i32)* @"_ZZN3net6NetLog8AddEntryIZNS_12_GLOBAL__N_119NetLogInvalidHeaderERKNS_16NetLogWithSourceEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEESB_PKcE3$_0EENS8_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSG_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE" to i8*), i8* bitcast (void (%"class.net::NetLog::GetParamsInterface"*)* @_ZN3net6NetLog18GetParamsInterfaceD2Ev to i8*), i8* bitcast (void (%class.GetParamsImpl*)* @"_ZZN3net6NetLog8AddEntryIZNS_12_GLOBAL__N_119NetLogInvalidHeaderERKNS_16NetLogWithSourceEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEESB_PKcE3$_0EENS8_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSG_EN13GetParamsImplD0Ev" to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [12 x i8] c"header_name\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"header_value\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.10 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"s\00", align 1

@_ZN3net15HeaderCoalescerC1EjRKNS_16NetLogWithSourceE = hidden unnamed_addr alias void (%"class.net::HeaderCoalescer"*, i32, %"class.net::NetLogWithSource"*), void (%"class.net::HeaderCoalescer"*, i32, %"class.net::NetLogWithSource"*)* @_ZN3net15HeaderCoalescerC2EjRKNS_16NetLogWithSourceE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HeaderCoalescerC2EjRKNS_16NetLogWithSourceE(%"class.net::HeaderCoalescer"*, i32, %"class.net::NetLogWithSource"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net15HeaderCoalescerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 1
  tail call void @_ZN4spdy16Http2HeaderBlockC1Ev(%"class.spdy::Http2HeaderBlock"* %5) #10
  %6 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 2
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 3
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 4
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 5
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 6
  store i32 %1, i32* %10, align 4
  %11 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7
  %12 = bitcast %"class.net::NetLogWithSource"* %11 to i8*
  %13 = bitcast %"class.net::NetLogWithSource"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  ret void
}

declare void @_ZN4spdy16Http2HeaderBlockC1Ev(%"class.spdy::Http2HeaderBlock"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HeaderCoalescer8OnHeaderEN4absl11string_viewES2_(%"class.net::HeaderCoalescer"*, i8*, i64, i8*, i64) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = tail call zeroext i1 @_ZN3net15HeaderCoalescer9AddHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.net::HeaderCoalescer"* %0, i8* %1, i64 %2, i8* %3, i64 %4)
  br i1 %10, label %12, label %11

11:                                               ; preds = %9
  store i8 1, i8* %6, align 8
  br label %12

12:                                               ; preds = %9, %5, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net15HeaderCoalescer9AddHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.net::HeaderCoalescer"*, i8*, i64, i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.GetParamsImpl, align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca i8*, align 8
  %10 = alloca %class.anon, align 8
  %11 = alloca %class.GetParamsImpl, align 8
  %12 = alloca <2 x i64>, align 16
  %13 = alloca %"class.base::BasicStringPiece", align 8
  %14 = alloca i8*, align 8
  %15 = alloca %class.anon, align 8
  %16 = alloca %class.GetParamsImpl, align 8
  %17 = alloca <2 x i64>, align 16
  %18 = alloca %"class.base::BasicStringPiece", align 8
  %19 = alloca i8*, align 8
  %20 = alloca %class.anon, align 8
  %21 = alloca %class.GetParamsImpl, align 8
  %22 = alloca <2 x i64>, align 16
  %23 = alloca %"class.base::BasicStringPiece", align 8
  %24 = alloca i8*, align 8
  %25 = alloca %class.anon, align 8
  %26 = alloca %class.GetParamsImpl, align 8
  %27 = alloca <2 x i64>, align 16
  %28 = alloca %"class.base::BasicStringPiece", align 8
  %29 = alloca i8*, align 8
  %30 = alloca %class.anon, align 8
  %31 = alloca %class.GetParamsImpl, align 8
  %32 = alloca %"class.base::BasicStringPiece", align 8
  %33 = alloca %"class.base::BasicStringPiece", align 8
  %34 = alloca i8*, align 8
  %35 = alloca %class.anon, align 8
  %36 = alloca <2 x i64>, align 16
  %37 = bitcast <2 x i64>* %36 to %"class.base::BasicStringPiece"*
  %38 = alloca %"class.base::BasicStringPiece", align 8
  %39 = alloca %"class.std::__1::basic_string", align 8
  %40 = bitcast <2 x i64>* %36 to i8**
  store i8* %1, i8** %40, align 16
  %41 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %37, i64 0, i32 1
  store i64 %2, i64* %41, align 8
  %42 = icmp eq i64 %2, 0
  br i1 %42, label %43, label %67

43:                                               ; preds = %5
  %44 = bitcast %"class.base::BasicStringPiece"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44)
  %45 = bitcast %"class.base::BasicStringPiece"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45)
  %46 = bitcast i8** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  %47 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %32, i64 0, i32 0
  store i8* %1, i8** %47, align 8
  %48 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %32, i64 0, i32 1
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %33, i64 0, i32 0
  store i8* %3, i8** %49, align 8
  %50 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %33, i64 0, i32 1
  store i64 %4, i64* %50, align 8
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8** %34, align 8
  %51 = bitcast %class.anon* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #10
  %52 = getelementptr inbounds %class.anon, %class.anon* %35, i64 0, i32 0
  store %"class.base::BasicStringPiece"* %32, %"class.base::BasicStringPiece"** %52, align 8
  %53 = getelementptr inbounds %class.anon, %class.anon* %35, i64 0, i32 1
  store %"class.base::BasicStringPiece"* %33, %"class.base::BasicStringPiece"** %53, align 8
  %54 = getelementptr inbounds %class.anon, %class.anon* %35, i64 0, i32 2
  store i8** %34, i8*** %54, align 8
  %55 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7, i32 1
  %56 = load %"class.net::NetLog"*, %"class.net::NetLog"** %55, align 8
  %57 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %56, i64 0, i32 3
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %66, label %60, !prof !3

60:                                               ; preds = %43
  %61 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7, i32 0
  %62 = bitcast %class.GetParamsImpl* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #10
  %63 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %31, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %31, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVZN3net6NetLog8AddEntryIZNS_12_GLOBAL__N_119NetLogInvalidHeaderERKNS_16NetLogWithSourceEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEESB_PKcE3$_0EENS8_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSG_E13GetParamsImpl", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  store %class.anon* %35, %class.anon** %64, align 8
  %65 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %31, i64 0, i32 0
  call void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"* %56, i32 204, %"struct.net::NetLogSource"* dereferenceable(16) %61, i32 0, %"class.net::NetLog::GetParamsInterface"* nonnull %65) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #10
  br label %66

66:                                               ; preds = %43, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  br label %270

67:                                               ; preds = %5
  %68 = bitcast %"class.base::BasicStringPiece"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #10
  %69 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %38, i64 0, i32 0
  %70 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %38, i64 0, i32 1
  %71 = bitcast <2 x i64>* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* nonnull align 16 %71, i64 16, i1 false)
  %72 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %37, i64 0) #10
  %73 = load i8, i8* %72, align 1
  %74 = icmp eq i8 %73, 58
  %75 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 5
  %76 = load i8, i8* %75, align 1, !range !2
  %77 = icmp ne i8 %76, 0
  br i1 %74, label %78, label %103

78:                                               ; preds = %67
  br i1 %77, label %79, label %102

79:                                               ; preds = %78
  %80 = load <2 x i64>, <2 x i64>* %36, align 16
  %81 = bitcast <2 x i64>* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81)
  %82 = bitcast %"class.base::BasicStringPiece"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82)
  %83 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store <2 x i64> %80, <2 x i64>* %27, align 16
  %84 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %28, i64 0, i32 0
  store i8* %3, i8** %84, align 8
  %85 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %28, i64 0, i32 1
  store i64 %4, i64* %85, align 8
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i8** %29, align 8
  %86 = bitcast %class.anon* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #10
  %87 = bitcast %class.anon* %30 to <2 x i64>**
  store <2 x i64>* %27, <2 x i64>** %87, align 8
  %88 = getelementptr inbounds %class.anon, %class.anon* %30, i64 0, i32 1
  store %"class.base::BasicStringPiece"* %28, %"class.base::BasicStringPiece"** %88, align 8
  %89 = getelementptr inbounds %class.anon, %class.anon* %30, i64 0, i32 2
  store i8** %29, i8*** %89, align 8
  %90 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7, i32 1
  %91 = load %"class.net::NetLog"*, %"class.net::NetLog"** %90, align 8
  %92 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %91, i64 0, i32 3
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %101, label %95, !prof !3

95:                                               ; preds = %79
  %96 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7, i32 0
  %97 = bitcast %class.GetParamsImpl* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #10
  %98 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %26, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %26, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVZN3net6NetLog8AddEntryIZNS_12_GLOBAL__N_119NetLogInvalidHeaderERKNS_16NetLogWithSourceEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEESB_PKcE3$_0EENS8_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSG_E13GetParamsImpl", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  store %class.anon* %30, %class.anon** %99, align 8
  %100 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %26, i64 0, i32 0
  call void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"* %91, i32 204, %"struct.net::NetLogSource"* dereferenceable(16) %96, i32 0, %"class.net::NetLog::GetParamsInterface"* nonnull %100) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #10
  br label %101

101:                                              ; preds = %79, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %268

102:                                              ; preds = %78
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %38, i64 1)
  br label %105

103:                                              ; preds = %67
  br i1 %77, label %105, label %104

104:                                              ; preds = %103
  store i8 1, i8* %75, align 1
  br label %105

105:                                              ; preds = %103, %104, %102
  %106 = load i8*, i8** %69, align 8
  %107 = load i64, i64* %70, align 8
  %108 = call zeroext i1 @_ZN3net8HttpUtil17IsValidHeaderNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %106, i64 %107) #10
  br i1 %108, label %132, label %109

109:                                              ; preds = %105
  %110 = load <2 x i64>, <2 x i64>* %36, align 16
  %111 = bitcast <2 x i64>* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111)
  %112 = bitcast %"class.base::BasicStringPiece"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112)
  %113 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113)
  store <2 x i64> %110, <2 x i64>* %22, align 16
  %114 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 0, i32 0
  store i8* %3, i8** %114, align 8
  %115 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 0, i32 1
  store i64 %4, i64* %115, align 8
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i8** %24, align 8
  %116 = bitcast %class.anon* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #10
  %117 = bitcast %class.anon* %25 to <2 x i64>**
  store <2 x i64>* %22, <2 x i64>** %117, align 8
  %118 = getelementptr inbounds %class.anon, %class.anon* %25, i64 0, i32 1
  store %"class.base::BasicStringPiece"* %23, %"class.base::BasicStringPiece"** %118, align 8
  %119 = getelementptr inbounds %class.anon, %class.anon* %25, i64 0, i32 2
  store i8** %24, i8*** %119, align 8
  %120 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7, i32 1
  %121 = load %"class.net::NetLog"*, %"class.net::NetLog"** %120, align 8
  %122 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %121, i64 0, i32 3
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %131, label %125, !prof !3

125:                                              ; preds = %109
  %126 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7, i32 0
  %127 = bitcast %class.GetParamsImpl* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #10
  %128 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %21, i64 0, i32 0, i32 0
  %129 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %21, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVZN3net6NetLog8AddEntryIZNS_12_GLOBAL__N_119NetLogInvalidHeaderERKNS_16NetLogWithSourceEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEESB_PKcE3$_0EENS8_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSG_E13GetParamsImpl", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  store %class.anon* %25, %class.anon** %129, align 8
  %130 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %21, i64 0, i32 0
  call void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"* %121, i32 204, %"struct.net::NetLogSource"* dereferenceable(16) %126, i32 0, %"class.net::NetLog::GetParamsInterface"* nonnull %130) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #10
  br label %131

131:                                              ; preds = %109, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113)
  br label %268

132:                                              ; preds = %105
  %133 = load i8*, i8** %69, align 8
  %134 = load i64, i64* %70, align 8
  %135 = getelementptr inbounds i8, i8* %133, i64 %134
  %136 = icmp eq i64 %134, 0
  br i1 %136, label %168, label %139

137:                                              ; preds = %139
  %138 = icmp eq i8* %144, %135
  br i1 %138, label %168, label %139

139:                                              ; preds = %132, %137
  %140 = phi i8* [ %144, %137 ], [ %133, %132 ]
  %141 = load i8, i8* %140, align 1
  %142 = add i8 %141, -65
  %143 = icmp ult i8 %142, 26
  %144 = getelementptr inbounds i8, i8* %140, i64 1
  br i1 %143, label %145, label %137

145:                                              ; preds = %139
  %146 = load <2 x i64>, <2 x i64>* %36, align 16
  %147 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147)
  %148 = bitcast %"class.base::BasicStringPiece"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148)
  %149 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149)
  store <2 x i64> %146, <2 x i64>* %12, align 16
  %150 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 0
  store i8* %3, i8** %150, align 8
  %151 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 1
  store i64 %4, i64* %151, align 8
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i8** %14, align 8
  %152 = bitcast %class.anon* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #10
  %153 = bitcast %class.anon* %15 to <2 x i64>**
  store <2 x i64>* %12, <2 x i64>** %153, align 8
  %154 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 1
  store %"class.base::BasicStringPiece"* %13, %"class.base::BasicStringPiece"** %154, align 8
  %155 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 2
  store i8** %14, i8*** %155, align 8
  %156 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7, i32 1
  %157 = load %"class.net::NetLog"*, %"class.net::NetLog"** %156, align 8
  %158 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %157, i64 0, i32 3
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %167, label %161, !prof !3

161:                                              ; preds = %145
  %162 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7, i32 0
  %163 = bitcast %class.GetParamsImpl* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #10
  %164 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %11, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %11, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVZN3net6NetLog8AddEntryIZNS_12_GLOBAL__N_119NetLogInvalidHeaderERKNS_16NetLogWithSourceEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEESB_PKcE3$_0EENS8_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSG_E13GetParamsImpl", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %164, align 8
  store %class.anon* %15, %class.anon** %165, align 8
  %166 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %11, i64 0, i32 0
  call void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"* %157, i32 204, %"struct.net::NetLogSource"* dereferenceable(16) %162, i32 0, %"class.net::NetLog::GetParamsInterface"* nonnull %166) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #10
  br label %167

167:                                              ; preds = %145, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149)
  br label %268

168:                                              ; preds = %137, %132
  %169 = load i64, i64* %41, align 8
  %170 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 3
  %171 = load i64, i64* %170, align 8
  %172 = add i64 %4, 32
  %173 = add i64 %172, %169
  %174 = add i64 %173, %171
  store i64 %174, i64* %170, align 8
  %175 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 6
  %176 = load i32, i32* %175, align 4
  %177 = zext i32 %176 to i64
  %178 = icmp ugt i64 %174, %177
  br i1 %178, label %179, label %205

179:                                              ; preds = %168
  %180 = getelementptr inbounds <2 x i64>, <2 x i64>* %36, i64 0, i64 0
  %181 = load i64, i64* %180, align 16
  %182 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182)
  %183 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %183)
  %184 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184)
  %185 = bitcast %"class.base::BasicStringPiece"* %7 to i64*
  store i64 %181, i64* %185, align 8
  %186 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  store i64 %169, i64* %186, align 8
  %187 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  store i8* %3, i8** %187, align 8
  %188 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  store i64 %4, i64* %188, align 8
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8** %9, align 8
  %189 = bitcast %class.anon* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #10
  %190 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 0
  store %"class.base::BasicStringPiece"* %7, %"class.base::BasicStringPiece"** %190, align 8
  %191 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 1
  store %"class.base::BasicStringPiece"* %8, %"class.base::BasicStringPiece"** %191, align 8
  %192 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 2
  store i8** %9, i8*** %192, align 8
  %193 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7, i32 1
  %194 = load %"class.net::NetLog"*, %"class.net::NetLog"** %193, align 8
  %195 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %194, i64 0, i32 3
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %204, label %198, !prof !3

198:                                              ; preds = %179
  %199 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7, i32 0
  %200 = bitcast %class.GetParamsImpl* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %200) #10
  %201 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %6, i64 0, i32 0, i32 0
  %202 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %6, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVZN3net6NetLog8AddEntryIZNS_12_GLOBAL__N_119NetLogInvalidHeaderERKNS_16NetLogWithSourceEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEESB_PKcE3$_0EENS8_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSG_E13GetParamsImpl", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %201, align 8
  store %class.anon* %10, %class.anon** %202, align 8
  %203 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %6, i64 0, i32 0
  call void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"* %194, i32 204, %"struct.net::NetLogSource"* dereferenceable(16) %199, i32 0, %"class.net::NetLog::GetParamsInterface"* nonnull %203) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %200) #10
  br label %204

204:                                              ; preds = %179, %198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %183)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184)
  br label %268

205:                                              ; preds = %168
  %206 = getelementptr inbounds i8, i8* %3, i64 %4
  %207 = icmp eq i64 %4, 0
  br i1 %207, label %259, label %210

208:                                              ; preds = %214
  %209 = icmp eq i8* %220, %206
  br i1 %209, label %259, label %210

210:                                              ; preds = %205, %208
  %211 = phi i8* [ %220, %208 ], [ %3, %205 ]
  %212 = load i8, i8* %211, align 1
  %213 = icmp ult i8 %212, 9
  br i1 %213, label %221, label %214

214:                                              ; preds = %210
  %215 = icmp ne i8 %212, 9
  %216 = icmp ult i8 %212, 32
  %217 = and i1 %215, %216
  %218 = icmp eq i8 %212, 127
  %219 = or i1 %218, %217
  %220 = getelementptr inbounds i8, i8* %211, i64 1
  br i1 %219, label %221, label %208

221:                                              ; preds = %214, %210
  %222 = zext i8 %212 to i32
  %223 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #10
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %223, i8 0, i64 24, i1 false) #10
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* nonnull %39, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 %222) #10
  %225 = load <2 x i64>, <2 x i64>* %36, align 16
  %226 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %227 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %226, i64 0, i32 1, i32 0
  %228 = load i8, i8* %227, align 1
  %229 = icmp slt i8 %228, 0
  %230 = load i8*, i8** %224, align 8
  %231 = select i1 %229, i8* %230, i8* %223
  %232 = bitcast <2 x i64>* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %232)
  %233 = bitcast %"class.base::BasicStringPiece"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %233)
  %234 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234)
  store <2 x i64> %225, <2 x i64>* %17, align 16
  %235 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 0
  store i8* %3, i8** %235, align 8
  %236 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 1
  store i64 %4, i64* %236, align 8
  store i8* %231, i8** %19, align 8
  %237 = bitcast %class.anon* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #10
  %238 = bitcast %class.anon* %20 to <2 x i64>**
  store <2 x i64>* %17, <2 x i64>** %238, align 8
  %239 = getelementptr inbounds %class.anon, %class.anon* %20, i64 0, i32 1
  store %"class.base::BasicStringPiece"* %18, %"class.base::BasicStringPiece"** %239, align 8
  %240 = getelementptr inbounds %class.anon, %class.anon* %20, i64 0, i32 2
  store i8** %19, i8*** %240, align 8
  %241 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7, i32 1
  %242 = load %"class.net::NetLog"*, %"class.net::NetLog"** %241, align 8
  %243 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %242, i64 0, i32 3
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %253, label %246, !prof !3

246:                                              ; preds = %221
  %247 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7, i32 0
  %248 = bitcast %class.GetParamsImpl* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %248) #10
  %249 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %16, i64 0, i32 0, i32 0
  %250 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %16, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVZN3net6NetLog8AddEntryIZNS_12_GLOBAL__N_119NetLogInvalidHeaderERKNS_16NetLogWithSourceEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEESB_PKcE3$_0EENS8_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSG_E13GetParamsImpl", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %249, align 8
  store %class.anon* %20, %class.anon** %250, align 8
  %251 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %16, i64 0, i32 0
  call void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"* %242, i32 204, %"struct.net::NetLogSource"* dereferenceable(16) %247, i32 0, %"class.net::NetLog::GetParamsInterface"* nonnull %251) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %248) #10
  %252 = load i8, i8* %227, align 1
  br label %253

253:                                              ; preds = %221, %246
  %254 = phi i8 [ %228, %221 ], [ %252, %246 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %232)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %233)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234)
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %258

256:                                              ; preds = %253
  %257 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %257) #11
  br label %258

258:                                              ; preds = %253, %256
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #10
  br label %268

259:                                              ; preds = %208, %205
  %260 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 1
  %261 = load i8*, i8** %40, align 16
  %262 = icmp sgt i64 %169, -1
  br i1 %262, label %264, label %263, !prof !3

263:                                              ; preds = %259
  call void @llvm.trap() #10
  unreachable

264:                                              ; preds = %259
  %265 = icmp sgt i64 %4, -1
  br i1 %265, label %267, label %266, !prof !3

266:                                              ; preds = %264
  call void @llvm.trap() #10
  unreachable

267:                                              ; preds = %264
  call void @_ZN4spdy16Http2HeaderBlock22AppendValueOrAddHeaderEN4absl11string_viewES2_(%"class.spdy::Http2HeaderBlock"* %260, i8* %261, i64 %169, i8* %3, i64 %4) #10
  br label %268

268:                                              ; preds = %258, %267, %204, %167, %131, %101
  %269 = phi i1 [ false, %101 ], [ false, %167 ], [ false, %204 ], [ true, %267 ], [ false, %258 ], [ false, %131 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #10
  br label %270

270:                                              ; preds = %268, %66
  %271 = phi i1 [ false, %66 ], [ %269, %268 ]
  ret i1 %271
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HeaderCoalescer15release_headersEv(%"class.spdy::Http2HeaderBlock"* noalias sret, %"class.net::HeaderCoalescer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %1, i64 0, i32 2
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %1, i64 0, i32 1
  tail call void @_ZN4spdy16Http2HeaderBlockC1EOS0_(%"class.spdy::Http2HeaderBlock"* %0, %"class.spdy::Http2HeaderBlock"* dereferenceable(120) %4) #10
  ret void
}

declare void @_ZN4spdy16Http2HeaderBlockC1EOS0_(%"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"* dereferenceable(120)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare zeroext i1 @_ZN3net8HttpUtil17IsValidHeaderNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare void @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"*, i8*, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4spdy16Http2HeaderBlock22AppendValueOrAddHeaderEN4absl11string_viewES2_(%"class.spdy::Http2HeaderBlock"*, i8*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net15HeaderCoalescerD2Ev(%"class.net::HeaderCoalescer"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net15HeaderCoalescerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %3) #10
  %4 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 1
  tail call void @_ZN4spdy16Http2HeaderBlockD1Ev(%"class.spdy::Http2HeaderBlock"* %4) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net15HeaderCoalescerD0Ev(%"class.net::HeaderCoalescer"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net15HeaderCoalescerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 7
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %3) #10
  %4 = getelementptr inbounds %"class.net::HeaderCoalescer", %"class.net::HeaderCoalescer"* %0, i64 0, i32 1
  tail call void @_ZN4spdy16Http2HeaderBlockD1Ev(%"class.spdy::Http2HeaderBlock"* %4) #10
  %5 = bitcast %"class.net::HeaderCoalescer"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net15HeaderCoalescer18OnHeaderBlockStartEv(%"class.net::HeaderCoalescer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net15HeaderCoalescer16OnHeaderBlockEndEmm(%"class.net::HeaderCoalescer"*, i64, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.net::NetLog::GetParamsInterface"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net6NetLog18GetParamsInterfaceD2Ev(%"class.net::NetLog::GetParamsInterface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_12_GLOBAL__N_119NetLogInvalidHeaderERKNS_16NetLogWithSourceEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEESB_PKcE3$_0EENS8_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSG_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE"(%"class.base::Value"* noalias sret, %class.GetParamsImpl* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::Value", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.base::DictionaryValue", align 8
  %11 = bitcast %"class.base::DictionaryValue"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #10
  %12 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %1, i64 0, i32 1
  %13 = load %class.anon*, %class.anon** %12, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false) #10, !alias.scope !4
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %10) #10
  %14 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %10, i64 0, i32 0
  %15 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #10, !noalias !4
  %16 = getelementptr inbounds %class.anon, %class.anon* %13, i64 0, i32 0
  %17 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %16, align 8, !noalias !4
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  call void @_ZN3net17NetLogStringValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull sret %5, i8* %19, i64 %21) #10
  %22 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %5) #10
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #10, !noalias !4
  %23 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #10, !noalias !4
  %24 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10, !noalias !4
  %25 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10, !noalias !4
  %26 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %16, align 8, !noalias !4
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %26, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8, !noalias !7
  %29 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %26, i64 0, i32 1
  %30 = load i64, i64* %29, align 8, !noalias !7
  %31 = icmp ugt i64 %30, -17
  br i1 %31, label %32, label %34

32:                                               ; preds = %3
  %33 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %33) #12
  unreachable

34:                                               ; preds = %3
  %35 = icmp ult i64 %30, 23
  br i1 %35, label %44, label %36

36:                                               ; preds = %34
  %37 = add nuw i64 %30, 16
  %38 = and i64 %37, -16
  %39 = call i8* @_Znwm(i64 %38) #11
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %40, align 8, !alias.scope !7, !noalias !4
  %41 = or i64 %38, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8, !alias.scope !7, !noalias !4
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %30, i64* %43, align 8, !alias.scope !7, !noalias !4
  br label %49

44:                                               ; preds = %34
  %45 = trunc i64 %30 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  store i8 %45, i8* %47, align 1, !alias.scope !7, !noalias !4
  %48 = icmp eq i64 %30, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %44, %36
  %50 = phi i8* [ %39, %36 ], [ %25, %44 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %50, i8* align 1 %28, i64 %30, i1 false) #10
  br label %51

51:                                               ; preds = %49, %44
  %52 = phi i8* [ %25, %44 ], [ %50, %49 ]
  %53 = getelementptr inbounds i8, i8* %52, i64 %30
  store i8 0, i8* %53, align 1, !noalias !4
  %54 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #10, !noalias !4
  %55 = getelementptr inbounds %class.anon, %class.anon* %13, i64 0, i32 1
  %56 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %55, align 8, !noalias !4
  %57 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %56, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8, !noalias !10
  %59 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %56, i64 0, i32 1
  %60 = load i64, i64* %59, align 8, !noalias !10
  %61 = icmp ugt i64 %60, -17
  br i1 %61, label %62, label %64

62:                                               ; preds = %51
  %63 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %63) #12
  unreachable

64:                                               ; preds = %51
  %65 = icmp ult i64 %60, 23
  br i1 %65, label %74, label %66

66:                                               ; preds = %64
  %67 = add nuw i64 %60, 16
  %68 = and i64 %67, -16
  %69 = call i8* @_Znwm(i64 %68) #11
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %69, i8** %70, align 8, !alias.scope !10, !noalias !4
  %71 = or i64 %68, -9223372036854775808
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %71, i64* %72, align 8, !alias.scope !10, !noalias !4
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %60, i64* %73, align 8, !alias.scope !10, !noalias !4
  br label %79

74:                                               ; preds = %64
  %75 = trunc i64 %60 to i8
  %76 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 %75, i8* %77, align 1, !alias.scope !10, !noalias !4
  %78 = icmp eq i64 %60, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %74, %66
  %80 = phi i8* [ %69, %66 ], [ %54, %74 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %80, i8* align 1 %58, i64 %60, i1 false) #10
  br label %81

81:                                               ; preds = %79, %74
  %82 = phi i8* [ %54, %74 ], [ %80, %79 ]
  %83 = getelementptr inbounds i8, i8* %82, i64 %60
  store i8 0, i8* %83, align 1, !noalias !4
  call void @_ZN3net25ElideHeaderValueForNetLogENS_17NetLogCaptureModeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string"* nonnull sret %7, i32 %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #10
  %84 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1, !noalias !4
  %87 = icmp slt i8 %86, 0
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8, !noalias !4
  %90 = select i1 %87, i8* %89, i8* %24
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8, !noalias !4
  %93 = zext i8 %86 to i64
  %94 = select i1 %87, i64 %92, i64 %93
  call void @_ZN3net17NetLogStringValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull sret %6, i8* %90, i64 %94) #10
  %95 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %6) #10
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #10
  %96 = load i8, i8* %85, align 1, !noalias !4
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %81
  %99 = load i8*, i8** %88, align 8, !noalias !4
  call void @_ZdlPv(i8* %99) #11
  br label %100

100:                                              ; preds = %98, %81
  %101 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1, !noalias !4
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8, !noalias !4
  call void @_ZdlPv(i8* %107) #11
  br label %108

108:                                              ; preds = %105, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #10, !noalias !4
  %109 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1, !noalias !4
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8, !noalias !4
  call void @_ZdlPv(i8* %115) #11
  br label %116

116:                                              ; preds = %113, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #10, !noalias !4
  %117 = getelementptr inbounds %class.anon, %class.anon* %13, i64 0, i32 2
  %118 = load i8**, i8*** %117, align 8, !noalias !4
  %119 = load i8*, i8** %118, align 8
  %120 = icmp eq i8* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %116
  %122 = call i64 @strlen(i8* nonnull %119) #10
  br label %126

123:                                              ; preds = %116
  %124 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #10, !noalias !4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #10
  %125 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #10, !noalias !4
  br label %126

126:                                              ; preds = %121, %123
  %127 = phi i64 [ 0, %123 ], [ %122, %121 ]
  %128 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5, i8* %119, i64 %127) #10
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %0, %"class.base::Value"* nonnull dereferenceable(32) %14) #10
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_12_GLOBAL__N_119NetLogInvalidHeaderERKNS_16NetLogWithSourceEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEESB_PKcE3$_0EENS8_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSG_EN13GetParamsImplD0Ev"(%class.GetParamsImpl*) unnamed_addr #3 align 2 {
  %2 = bitcast %class.GetParamsImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #5

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN3net17NetLogStringValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #5

declare void @_ZN3net25ElideHeaderValueForNetLogENS_17NetLogCaptureModeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string"* sret, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"*, i8*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4spdy16Http2HeaderBlockD1Ev(%"class.spdy::Http2HeaderBlock"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZZN3net12_GLOBAL__N_119NetLogInvalidHeaderERKNS_16NetLogWithSourceEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES9_PKcENK3$_0clENS_17NetLogCaptureModeE: argument 0"}
!6 = distinct !{!6, !"_ZZN3net12_GLOBAL__N_119NetLogInvalidHeaderERKNS_16NetLogWithSourceEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES9_PKcENK3$_0clENS_17NetLogCaptureModeE"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
