; ModuleID = '../../components/variations/synthetic_trial_registry.cc'
source_filename = "../../components/variations/synthetic_trial_registry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.variations::SyntheticTrialRegistry" = type { i8, %"class.std::__1::vector", %"class.base::ObserverList" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"*, %"class.std::__1::__compressed_pair" }
%"struct.variations::SyntheticTrialGroup" = type <{ %"struct.variations::ActiveGroupId", %"class.base::TimeTicks", i8, [7 x i8] }>
%"struct.variations::ActiveGroupId" = type { i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.variations::SyntheticTrialGroup"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.1", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.3" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.variations::SyntheticTrialObserver" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { i32*, i32*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i32* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.variations::ActiveGroupId"* }

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_ = comdat any

@.str = private unnamed_addr constant [28 x i8] c"ExternalExperimentAllowlist\00", align 1
@_ZN10variations8internal28kExternalExperimentAllowlistE = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0), i32 1 }, align 8
@.str.1 = private unnamed_addr constant [34 x i8] c"UMA.ExternalExperiment.GroupCount\00", align 1

@_ZN10variations22SyntheticTrialRegistryC1Eb = hidden unnamed_addr alias void (%"class.variations::SyntheticTrialRegistry"*, i1), void (%"class.variations::SyntheticTrialRegistry"*, i1)* @_ZN10variations22SyntheticTrialRegistryC2Eb
@_ZN10variations22SyntheticTrialRegistryC1Ev = hidden unnamed_addr alias void (%"class.variations::SyntheticTrialRegistry"*), void (%"class.variations::SyntheticTrialRegistry"*)* @_ZN10variations22SyntheticTrialRegistryC2Ev
@_ZN10variations22SyntheticTrialRegistryD1Ev = hidden unnamed_addr alias void (%"class.variations::SyntheticTrialRegistry"*), void (%"class.variations::SyntheticTrialRegistry"*)* @_ZN10variations22SyntheticTrialRegistryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations22SyntheticTrialRegistryC2Eb(%"class.variations::SyntheticTrialRegistry"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 0
  br i1 %1, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN10variations8internal28kExternalExperimentAllowlistE) #9
  %6 = zext i1 %5 to i8
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i8 [ 0, %2 ], [ %6, %4 ]
  store i8 %8, i8* %3, align 8
  %9 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 48, i1 false)
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %10, %"class.base::internal::LinkNodeBase"* %10, %"class.base::internal::LinkNodeBase"* %10) #9
  %12 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 2
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %13, align 8
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations22SyntheticTrialRegistryC2Ev(%"class.variations::SyntheticTrialRegistry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN10variations8internal28kExternalExperimentAllowlistE) #9
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %2, align 8
  %5 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 48, i1 false)
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6) #9
  %8 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 2
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations22SyntheticTrialRegistryD2Ev(%"class.variations::SyntheticTrialRegistry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::LinkNodeBase"** %2 to %"class.base::LinkNode"**
  %4 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 1, i32 0
  %5 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  %6 = icmp eq %"class.base::LinkNode"* %5, %4
  br i1 %6, label %19, label %7

7:                                                ; preds = %1, %16
  %8 = phi %"class.base::LinkNode"* [ %17, %16 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 1
  %10 = bitcast %"class.base::LinkNode"* %9 to %"class.base::ObserverList"**
  %11 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %12 = icmp eq %"class.base::ObserverList"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %10, align 8
  %14 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %14) #9
  %15 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  br label %16

16:                                               ; preds = %13, %7
  %17 = phi %"class.base::LinkNode"* [ %8, %7 ], [ %15, %13 ]
  %18 = icmp eq %"class.base::LinkNode"* %17, %4
  br i1 %18, label %19, label %7

19:                                               ; preds = %16, %1
  %20 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %20, align 8
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %21 to i64
  %25 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %26 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %29, i64 0, i32 0, i32 0
  %31 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %30, align 8
  %32 = icmp eq %"struct.variations::SyntheticTrialGroup"* %31, null
  br i1 %32, label %47, label %33

33:                                               ; preds = %28
  %34 = bitcast %"struct.variations::SyntheticTrialGroup"* %31 to i8*
  %35 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1, i32 0, i32 1
  %36 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %35, align 8
  %37 = icmp eq %"struct.variations::SyntheticTrialGroup"* %36, %31
  br i1 %37, label %45, label %38

38:                                               ; preds = %33, %38
  %39 = phi %"struct.variations::SyntheticTrialGroup"* [ %40, %38 ], [ %36, %33 ]
  %40 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %39, i64 -1
  tail call void @_ZN10variations19SyntheticTrialGroupD1Ev(%"struct.variations::SyntheticTrialGroup"* %40) #9
  %41 = icmp eq %"struct.variations::SyntheticTrialGroup"* %40, %31
  br i1 %41, label %42, label %38

42:                                               ; preds = %38
  %43 = bitcast %"class.std::__1::vector"* %29 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi i8* [ %44, %42 ], [ %34, %33 ]
  store %"struct.variations::SyntheticTrialGroup"* %31, %"struct.variations::SyntheticTrialGroup"** %35, align 8
  tail call void @_ZdlPv(i8* %46) #10
  br label %47

47:                                               ; preds = %28, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations22SyntheticTrialRegistry25AddSyntheticTrialObserverEPNS_22SyntheticTrialObserverE(%"class.variations::SyntheticTrialRegistry"*, %"class.variations::SyntheticTrialObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2
  %4 = icmp eq %"class.variations::SyntheticTrialObserver"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.variations::SyntheticTrialObserver"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.variations::SyntheticTrialObserver"* %1 to i64
  %32 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #11
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #11
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #10
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #9
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #10
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  %100 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1
  %101 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %100, i64 0, i32 0, i32 0
  %102 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %101, align 8
  %103 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1, i32 0, i32 1
  %104 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %103, align 8
  %105 = icmp eq %"struct.variations::SyntheticTrialGroup"* %102, %104
  br i1 %105, label %110, label %106

106:                                              ; preds = %99
  %107 = bitcast %"class.variations::SyntheticTrialObserver"* %1 to void (%"class.variations::SyntheticTrialObserver"*, %"class.std::__1::vector"*)***
  %108 = load void (%"class.variations::SyntheticTrialObserver"*, %"class.std::__1::vector"*)**, void (%"class.variations::SyntheticTrialObserver"*, %"class.std::__1::vector"*)*** %107, align 8
  %109 = load void (%"class.variations::SyntheticTrialObserver"*, %"class.std::__1::vector"*)*, void (%"class.variations::SyntheticTrialObserver"*, %"class.std::__1::vector"*)** %108, align 8
  tail call void %109(%"class.variations::SyntheticTrialObserver"* %1, %"class.std::__1::vector"* dereferenceable(24) %100) #9
  br label %110

110:                                              ; preds = %106, %99
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations22SyntheticTrialRegistry28RemoveSyntheticTrialObserverEPNS_22SyntheticTrialObserverE(%"class.variations::SyntheticTrialRegistry"*, %"class.variations::SyntheticTrialObserver"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.variations::SyntheticTrialObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #9
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations22SyntheticTrialRegistry27RegisterExternalExperimentsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIiNS5_IiEEEENS0_12OverrideModeE(%"class.variations::SyntheticTrialRegistry"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.13"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::map", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.variations::ActiveGroupId", align 4
  %8 = alloca %"struct.variations::SyntheticTrialGroup", align 8
  %9 = bitcast %"class.std::__1::map"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_node_base"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"** %10, align 8
  %14 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %4
  %18 = call zeroext i1 @_ZN4base28GetFieldTrialParamsByFeatureERKNS_7FeatureEPNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN10variations8internal28kExternalExperimentAllowlistE, %"class.std::__1::map"* nonnull %5) #9
  br i1 %18, label %19, label %262

19:                                               ; preds = %4, %17
  %20 = icmp eq i32 %3, 0
  br i1 %20, label %21, label %72

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %22, align 8
  %24 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1, i32 0, i32 1
  %25 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %24, align 8
  %26 = icmp eq %"struct.variations::SyntheticTrialGroup"* %23, %25
  br i1 %26, label %35, label %27

27:                                               ; preds = %21, %32
  %28 = phi %"struct.variations::SyntheticTrialGroup"* [ %33, %32 ], [ %23, %21 ]
  %29 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %28, i64 0, i32 2
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %28, i64 1
  %34 = icmp eq %"struct.variations::SyntheticTrialGroup"* %33, %25
  br i1 %34, label %72, label %27

35:                                               ; preds = %27, %21
  %36 = phi %"struct.variations::SyntheticTrialGroup"* [ %23, %21 ], [ %28, %27 ]
  %37 = icmp eq %"struct.variations::SyntheticTrialGroup"* %36, %25
  br i1 %37, label %72, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %36, i64 1
  %40 = icmp eq %"struct.variations::SyntheticTrialGroup"* %39, %25
  br i1 %40, label %63, label %41

41:                                               ; preds = %38
  %42 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %36 to i64
  br label %43

43:                                               ; preds = %56, %41
  %44 = phi %"struct.variations::SyntheticTrialGroup"* [ %58, %56 ], [ %39, %41 ]
  %45 = phi %"struct.variations::SyntheticTrialGroup"* [ %44, %56 ], [ %36, %41 ]
  %46 = phi i64 [ %57, %56 ], [ %42, %41 ]
  %47 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %45, i64 1, i32 2
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %43
  %51 = inttoptr i64 %46 to %"struct.variations::SyntheticTrialGroup"*
  %52 = inttoptr i64 %46 to i8*
  %53 = bitcast %"struct.variations::SyntheticTrialGroup"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 17, i1 false) #9
  %54 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %51, i64 1
  %55 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %54 to i64
  br label %56

56:                                               ; preds = %50, %43
  %57 = phi i64 [ %46, %43 ], [ %55, %50 ]
  %58 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %44, i64 1
  %59 = icmp eq %"struct.variations::SyntheticTrialGroup"* %58, %25
  br i1 %59, label %60, label %43

60:                                               ; preds = %56
  %61 = inttoptr i64 %57 to %"struct.variations::SyntheticTrialGroup"*
  %62 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %24, align 8
  br label %63

63:                                               ; preds = %60, %38
  %64 = phi %"struct.variations::SyntheticTrialGroup"* [ %25, %38 ], [ %62, %60 ]
  %65 = phi %"struct.variations::SyntheticTrialGroup"* [ %36, %38 ], [ %61, %60 ]
  %66 = icmp eq %"struct.variations::SyntheticTrialGroup"* %65, %64
  br i1 %66, label %72, label %67

67:                                               ; preds = %63, %67
  %68 = phi %"struct.variations::SyntheticTrialGroup"* [ %69, %67 ], [ %64, %63 ]
  %69 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %68, i64 -1
  call void @_ZN10variations19SyntheticTrialGroupD1Ev(%"struct.variations::SyntheticTrialGroup"* %69) #9
  %70 = icmp eq %"struct.variations::SyntheticTrialGroup"* %69, %65
  br i1 %70, label %71, label %67

71:                                               ; preds = %67
  store %"struct.variations::SyntheticTrialGroup"* %65, %"struct.variations::SyntheticTrialGroup"** %24, align 8
  br label %72

72:                                               ; preds = %32, %71, %63, %35, %19
  %73 = call i64 @_ZN4base9TimeTicks3NowEv() #9
  %74 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %2, i64 0, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %2, i64 0, i32 0, i32 1
  %77 = load i32*, i32** %76, align 8
  %78 = icmp eq i32* %75, %77
  br i1 %78, label %79, label %80

79:                                               ; preds = %72
  call void @_ZN4base21UmaHistogramCounts100EPKci(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 0) #9
  br label %262

80:                                               ; preds = %72
  %81 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0
  %85 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = icmp eq i32 %3, 1
  %91 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1, i32 0, i32 0
  %92 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1, i32 0, i32 1
  %93 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = bitcast %"struct.variations::ActiveGroupId"* %7 to i8*
  %96 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %7, i64 0, i32 0
  %97 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %7, i64 0, i32 1
  %98 = bitcast %"struct.variations::SyntheticTrialGroup"* %8 to i8*
  %99 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %8, i64 0, i32 1, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %8, i64 0, i32 2
  %101 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1
  %102 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %103 = bitcast %"struct.variations::SyntheticTrialGroup"** %92 to i64*
  %104 = bitcast %"class.std::__1::vector"* %101 to i64*
  %105 = bitcast %"struct.variations::SyntheticTrialGroup"** %102 to i64*
  %106 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %101, i64 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %108 = bitcast %"struct.variations::SyntheticTrialGroup"* %8 to i8*
  br label %111

109:                                              ; preds = %258
  call void @_ZN4base21UmaHistogramCounts100EPKci(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 %253) #9
  %110 = icmp sgt i32 %253, 0
  br i1 %110, label %261, label %262

111:                                              ; preds = %80, %258
  %112 = phi i32 [ 0, %80 ], [ %253, %258 ]
  %113 = phi i32* [ %75, %80 ], [ %259, %258 ]
  %114 = load i32, i32* %113, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 24, i1 false)
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %6, i32 %114) #9
  %115 = load i8, i8* %14, align 8, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %125

117:                                              ; preds = %111
  %118 = load i8, i8* %86, align 1
  %119 = icmp slt i8 %118, 0
  %120 = load i8*, i8** %87, align 8
  %121 = select i1 %119, i8* %120, i8* %88
  %122 = load i64, i64* %89, align 8
  %123 = zext i8 %118 to i64
  %124 = select i1 %119, i64 %122, i64 %123
  br label %152

125:                                              ; preds = %111
  %126 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"* nonnull %84, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #9
  %127 = icmp eq %"class.std::__1::__tree_end_node"* %126, %12
  br i1 %127, label %252, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %126, i64 7
  %130 = bitcast %"class.std::__1::__tree_end_node"* %129 to %"class.std::__1::basic_string"*
  %131 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %130, i8 signext 44, i64 0) #9
  %132 = icmp eq i64 %131, -1
  %133 = bitcast %"class.std::__1::__tree_end_node"* %129 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %132, label %137, label %144

137:                                              ; preds = %128
  br i1 %136, label %138, label %142

138:                                              ; preds = %137
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %126, i64 8
  %140 = bitcast %"class.std::__1::__tree_end_node"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  br label %145

142:                                              ; preds = %137
  %143 = zext i8 %135 to i64
  br label %149

144:                                              ; preds = %128
  br i1 %136, label %145, label %149

145:                                              ; preds = %144, %138
  %146 = phi i64 [ %141, %138 ], [ %131, %144 ]
  %147 = bitcast %"class.std::__1::__tree_end_node"* %129 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %152

149:                                              ; preds = %144, %142
  %150 = phi i64 [ %143, %142 ], [ %131, %144 ]
  %151 = bitcast %"class.std::__1::__tree_end_node"* %129 to i8*
  br label %152

152:                                              ; preds = %117, %145, %149
  %153 = phi i64 [ %124, %117 ], [ %146, %145 ], [ %150, %149 ]
  %154 = phi i8* [ %121, %117 ], [ %148, %145 ], [ %151, %149 ]
  %155 = icmp eq i64 %153, 0
  br i1 %155, label %252, label %156

156:                                              ; preds = %152
  %157 = call i32 @_ZN10variations8HashNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %154, i64 %153) #9
  br i1 %90, label %158, label %170

158:                                              ; preds = %156
  %159 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %91, align 8
  %160 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %92, align 8
  %161 = icmp eq %"struct.variations::SyntheticTrialGroup"* %159, %160
  br i1 %161, label %170, label %164

162:                                              ; preds = %164
  %163 = icmp eq %"struct.variations::SyntheticTrialGroup"* %169, %160
  br i1 %163, label %170, label %164

164:                                              ; preds = %158, %162
  %165 = phi %"struct.variations::SyntheticTrialGroup"* [ %169, %162 ], [ %159, %158 ]
  %166 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %165, i64 0, i32 0, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %167, %157
  %169 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %165, i64 1
  br i1 %168, label %252, label %162

170:                                              ; preds = %162, %158, %156
  %171 = load i8, i8* %94, align 1
  %172 = icmp slt i8 %171, 0
  %173 = load i8*, i8** %82, align 8
  %174 = select i1 %172, i8* %173, i8* %81
  %175 = load i64, i64* %83, align 8
  %176 = zext i8 %171 to i64
  %177 = select i1 %172, i64 %175, i64 %176
  %178 = call i32 @_ZN10variations8HashNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %174, i64 %177) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #9
  store i32 %157, i32* %96, align 4
  store i32 %178, i32* %97, align 4
  call void @_ZN10variations37AssociateGoogleVariationIDForceHashesENS_15IDCollectionKeyERKNS_13ActiveGroupIdEi(i32 2, %"struct.variations::ActiveGroupId"* nonnull dereferenceable(8) %7, i32 %114) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false)
  call void @_ZN10variations19SyntheticTrialGroupC1Ejj(%"struct.variations::SyntheticTrialGroup"* nonnull %8, i32 %157, i32 %178) #9
  store i64 %73, i64* %99, align 8
  store i8 1, i8* %100, align 8
  %179 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %92, align 8
  %180 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %102, align 8
  %181 = icmp eq %"struct.variations::SyntheticTrialGroup"* %179, %180
  %182 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %180 to i64
  br i1 %181, label %187, label %183

183:                                              ; preds = %170
  %184 = bitcast %"struct.variations::SyntheticTrialGroup"* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* nonnull align 8 %98, i64 24, i1 false) #9
  %185 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %179, i64 1
  %186 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %185 to i64
  store i64 %186, i64* %103, align 8
  br label %250

187:                                              ; preds = %170
  %188 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %179 to i64
  %189 = load i64, i64* %104, align 8
  %190 = sub i64 %188, %189
  %191 = sdiv exact i64 %190, 24
  %192 = add nsw i64 %191, 1
  %193 = icmp ugt i64 %192, 768614336404564650
  br i1 %193, label %194, label %196

194:                                              ; preds = %187
  %195 = bitcast %"class.std::__1::vector"* %101 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %195) #11
  unreachable

196:                                              ; preds = %187
  %197 = sub i64 %182, %189
  %198 = sdiv exact i64 %197, 24
  %199 = icmp ult i64 %198, 384307168202282325
  br i1 %199, label %200, label %205

200:                                              ; preds = %196
  %201 = shl nsw i64 %198, 1
  %202 = icmp ult i64 %201, %192
  %203 = select i1 %202, i64 %192, i64 %201
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %210, label %205

205:                                              ; preds = %200, %196
  %206 = phi i64 [ %203, %200 ], [ 768614336404564650, %196 ]
  %207 = mul i64 %206, 24
  %208 = call i8* @_Znwm(i64 %207) #10
  %209 = bitcast i8* %208 to %"struct.variations::SyntheticTrialGroup"*
  br label %210

210:                                              ; preds = %205, %200
  %211 = phi i64 [ %206, %205 ], [ 0, %200 ]
  %212 = phi %"struct.variations::SyntheticTrialGroup"* [ %209, %205 ], [ null, %200 ]
  %213 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %212, i64 %191
  %214 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %212, i64 %211
  %215 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %214 to i64
  %216 = bitcast %"struct.variations::SyntheticTrialGroup"* %213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %216, i8* nonnull align 8 %98, i64 24, i1 false) #9
  %217 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %213, i64 1
  %218 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %217 to i64
  %219 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %106, align 8
  %220 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %92, align 8
  %221 = icmp eq %"struct.variations::SyntheticTrialGroup"* %220, %219
  br i1 %221, label %222, label %224

222:                                              ; preds = %210
  %223 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %219 to i64
  br label %235

224:                                              ; preds = %210, %224
  %225 = phi %"struct.variations::SyntheticTrialGroup"* [ %227, %224 ], [ %213, %210 ]
  %226 = phi %"struct.variations::SyntheticTrialGroup"* [ %228, %224 ], [ %220, %210 ]
  %227 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %225, i64 -1
  %228 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %226, i64 -1
  %229 = bitcast %"struct.variations::SyntheticTrialGroup"* %227 to i8*
  %230 = bitcast %"struct.variations::SyntheticTrialGroup"* %228 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %230, i64 24, i1 false) #9
  %231 = icmp eq %"struct.variations::SyntheticTrialGroup"* %228, %219
  br i1 %231, label %232, label %224

232:                                              ; preds = %224
  %233 = load i64, i64* %104, align 8
  %234 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %92, align 8
  br label %235

235:                                              ; preds = %232, %222
  %236 = phi %"struct.variations::SyntheticTrialGroup"* [ %219, %222 ], [ %234, %232 ]
  %237 = phi %"struct.variations::SyntheticTrialGroup"* [ %213, %222 ], [ %227, %232 ]
  %238 = phi i64 [ %223, %222 ], [ %233, %232 ]
  %239 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %237 to i64
  store i64 %239, i64* %104, align 8
  store i64 %218, i64* %103, align 8
  store i64 %215, i64* %105, align 8
  %240 = inttoptr i64 %238 to %"struct.variations::SyntheticTrialGroup"*
  %241 = icmp eq %"struct.variations::SyntheticTrialGroup"* %236, %240
  br i1 %241, label %246, label %242

242:                                              ; preds = %235, %242
  %243 = phi %"struct.variations::SyntheticTrialGroup"* [ %244, %242 ], [ %236, %235 ]
  %244 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %243, i64 -1
  call void @_ZN10variations19SyntheticTrialGroupD1Ev(%"struct.variations::SyntheticTrialGroup"* %244) #9
  %245 = icmp eq %"struct.variations::SyntheticTrialGroup"* %244, %240
  br i1 %245, label %246, label %242

246:                                              ; preds = %242, %235
  %247 = icmp eq i64 %238, 0
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = inttoptr i64 %238 to i8*
  call void @_ZdlPv(i8* %249) #10
  br label %250

250:                                              ; preds = %248, %246, %183
  %251 = add nsw i32 %112, 1
  call void @_ZN10variations19SyntheticTrialGroupD1Ev(%"struct.variations::SyntheticTrialGroup"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #9
  br label %252

252:                                              ; preds = %164, %125, %250, %152
  %253 = phi i32 [ %112, %152 ], [ %251, %250 ], [ %112, %125 ], [ %112, %164 ]
  %254 = load i8, i8* %94, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %258

256:                                              ; preds = %252
  %257 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %257) #10
  br label %258

258:                                              ; preds = %252, %256
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #9
  %259 = getelementptr inbounds i32, i32* %113, i64 1
  %260 = icmp eq i32* %259, %77
  br i1 %260, label %109, label %111

261:                                              ; preds = %109
  call void @_ZN10variations22SyntheticTrialRegistry29NotifySyntheticTrialObserversEv(%"class.variations::SyntheticTrialRegistry"* %0)
  br label %262

262:                                              ; preds = %79, %109, %261, %17
  %263 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0
  %264 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %265 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %264, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* nonnull %263, %"class.std::__1::__tree_node"* %265) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN4base28GetFieldTrialParamsByFeatureERKNS_7FeatureEPNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEE(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::map"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN10variations22SyntheticTrialRegistry20GetStudyNameForExpIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_3mapIS7_S7_NS1_4lessIS7_EENS5_INS1_4pairIS8_S7_EEEEEES9_(%"class.variations::SyntheticTrialRegistry"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::map"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %21

8:                                                ; preds = %4
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i64 %18, i64 %19
  br label %50

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0
  %23 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"* %22, %"class.std::__1::basic_string"* dereferenceable(24) %3) #9
  %24 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %23, %24
  br i1 %25, label %50, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 7
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::basic_string"*
  %29 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %28, i8 signext 44, i64 0) #9
  %30 = icmp eq i64 %29, -1
  %31 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %30, label %35, label %42

35:                                               ; preds = %26
  br i1 %34, label %36, label %40

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 8
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  br label %43

40:                                               ; preds = %35
  %41 = zext i8 %33 to i64
  br label %47

42:                                               ; preds = %26
  br i1 %34, label %43, label %47

43:                                               ; preds = %36, %42
  %44 = phi i64 [ %39, %36 ], [ %29, %42 ]
  %45 = bitcast %"class.std::__1::__tree_end_node"* %27 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %50

47:                                               ; preds = %40, %42
  %48 = phi i64 [ %41, %40 ], [ %29, %42 ]
  %49 = bitcast %"class.std::__1::__tree_end_node"* %27 to i8*
  br label %50

50:                                               ; preds = %21, %43, %47, %8
  %51 = phi i64 [ %20, %8 ], [ 0, %21 ], [ %44, %43 ], [ %48, %47 ]
  %52 = phi i8* [ %16, %8 ], [ null, %21 ], [ %46, %43 ], [ %49, %47 ]
  %53 = insertvalue { i8*, i64 } undef, i8* %52, 0
  %54 = insertvalue { i8*, i64 } %53, i64 %51, 1
  ret { i8*, i64 } %54
}

declare i32 @_ZN10variations8HashNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN10variations37AssociateGoogleVariationIDForceHashesENS_15IDCollectionKeyERKNS_13ActiveGroupIdEi(i32, %"struct.variations::ActiveGroupId"* dereferenceable(8), i32) local_unnamed_addr #1

declare void @_ZN10variations19SyntheticTrialGroupC1Ejj(%"struct.variations::SyntheticTrialGroup"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10variations19SyntheticTrialGroupD1Ev(%"struct.variations::SyntheticTrialGroup"*) unnamed_addr #3

declare void @_ZN4base21UmaHistogramCounts100EPKci(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations22SyntheticTrialRegistry29NotifySyntheticTrialObserversEv(%"class.variations::SyntheticTrialRegistry"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2
  %5 = bitcast %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8, !noalias !3
  %12 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !3
  %14 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %11, %13
  %15 = getelementptr inbounds %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %15) #9
  br i1 %14, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.base::ObserverList"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #9, !alias.scope !3
  br label %58

18:                                               ; preds = %1
  store %"class.base::ObserverList"* %4, %"class.base::ObserverList"** %6, align 8
  %19 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %15, %"class.base::internal::LinkNodeBase"* %19) #9
  store i64 0, i64* %7, align 8
  %20 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 2, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %12 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::ObserverList"* %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  br label %30

30:                                               ; preds = %23, %18
  %31 = phi i64 [ %29, %23 ], [ -1, %18 ]
  store i64 %31, i64* %8, align 8
  %32 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %33 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %32, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.base::ObserverList"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, %31
  %41 = select i1 %40, i64 %39, i64 %31
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %30
  %44 = inttoptr i64 %37 to %"class.base::internal::UncheckedObserverAdapter"*
  %45 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %32, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %44, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %58

49:                                               ; preds = %43, %53
  %50 = phi i64 [ %51, %53 ], [ 0, %43 ]
  %51 = add nuw i64 %50, 1
  store i64 %51, i64* %7, align 8
  %52 = icmp ult i64 %51, %41
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %45, align 8
  %55 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %54, i64 %51, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %49, label %58

58:                                               ; preds = %53, %49, %43, %30, %16
  %59 = bitcast %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #9
  %60 = getelementptr inbounds %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %63 = getelementptr inbounds %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::ObserverList<variations::SyntheticTrialObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %63) #9
  %65 = bitcast %"class.base::ObserverList"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #9, !alias.scope !6
  %66 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1
  %67 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  br label %68

68:                                               ; preds = %307, %58
  %69 = phi %"class.base::ObserverList"* [ %67, %58 ], [ %305, %307 ]
  %70 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %68
  %72 = load i64, i64* %7, align 8
  %73 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::ObserverList"* %69 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = ashr exact i64 %78, 3
  %80 = load i64, i64* %8, align 8
  %81 = icmp ult i64 %79, %80
  %82 = select i1 %81, i64 %79, i64 %80
  %83 = icmp eq i64 %72, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %71
  %85 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  br label %102

86:                                               ; preds = %71, %68
  %87 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  %88 = icmp eq %"class.base::ObserverList"* %87, null
  br i1 %88, label %202, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %61, align 8
  %91 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::ObserverList"* %87 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = load i64, i64* %62, align 8
  %99 = icmp ult i64 %97, %98
  %100 = select i1 %99, i64 %97, i64 %98
  %101 = icmp eq i64 %90, %100
  br i1 %101, label %111, label %102

102:                                              ; preds = %89, %84
  %103 = phi %"class.base::ObserverList"* [ %85, %84 ], [ %87, %89 ]
  %104 = icmp eq %"class.base::ObserverList"* %69, %103
  %105 = load i64, i64* %7, align 8
  %106 = load i64, i64* %61, align 8
  %107 = icmp eq i64 %105, %106
  %108 = and i1 %104, %107
  br i1 %108, label %109, label %296

109:                                              ; preds = %102
  %110 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %110, label %202, label %111

111:                                              ; preds = %89, %109
  %112 = phi %"class.base::ObserverList"* [ %69, %109 ], [ %87, %89 ]
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::LinkNodeBase"** %114 to %"class.base::LinkNode"**
  %116 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %115, align 8
  %117 = bitcast %"class.base::LinkedList"* %113 to %"class.base::LinkNode"**
  %118 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %117, align 8
  %119 = icmp eq %"class.base::LinkNode"* %116, %118
  br i1 %119, label %120, label %198

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %121, align 8
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 1
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %122, %124
  br i1 %125, label %134, label %126

126:                                              ; preds = %120, %131
  %127 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %131 ], [ %122, %120 ]
  %128 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 1
  %133 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %124
  br i1 %133, label %198, label %126

134:                                              ; preds = %126, %120
  %135 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %122, %120 ], [ %127, %126 ]
  %136 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %135 to i64
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %124
  br i1 %137, label %198, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %135, i64 1
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %124
  br i1 %140, label %193, label %141

141:                                              ; preds = %138
  %142 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %124, i64 -2, i32 0
  %143 = ptrtoint i8** %142 to i64
  %144 = sub i64 %143, %136
  %145 = lshr i64 %144, 3
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %167, label %149

149:                                              ; preds = %141, %162
  %150 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %164, %162 ], [ %139, %141 ]
  %151 = phi i64 [ %163, %162 ], [ %136, %141 ]
  %152 = phi i64 [ %165, %162 ], [ %147, %141 ]
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %149
  %157 = ptrtoint i8* %154 to i64
  %158 = inttoptr i64 %151 to %"class.base::internal::UncheckedObserverAdapter"*
  %159 = inttoptr i64 %151 to i64*
  store i64 %157, i64* %159, align 8
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %161 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %160 to i64
  br label %162

162:                                              ; preds = %156, %149
  %163 = phi i64 [ %151, %149 ], [ %161, %156 ]
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %165 = add i64 %152, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %149, !llvm.loop !9

167:                                              ; preds = %162, %141
  %168 = phi i64 [ undef, %141 ], [ %163, %162 ]
  %169 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %141 ], [ %164, %162 ]
  %170 = phi i64 [ %136, %141 ], [ %163, %162 ]
  %171 = icmp ult i64 %144, 24
  br i1 %171, label %189, label %172

172:                                              ; preds = %167, %397
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %399, %397 ], [ %169, %167 ]
  %174 = phi i64 [ %398, %397 ], [ %170, %167 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = ptrtoint i8* %176 to i64
  %180 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %181 = inttoptr i64 %174 to i64*
  store i64 %179, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1
  %183 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %182 to i64
  br label %184

184:                                              ; preds = %178, %172
  %185 = phi i64 [ %174, %172 ], [ %183, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %375, label %369

189:                                              ; preds = %397, %167
  %190 = phi i64 [ %168, %167 ], [ %398, %397 ]
  %191 = inttoptr i64 %190 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %193

193:                                              ; preds = %189, %138
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %138 ], [ %192, %189 ]
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %138 ], [ %191, %189 ]
  %196 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %195, %194
  br i1 %196, label %198, label %197

197:                                              ; preds = %193
  store %"class.base::internal::UncheckedObserverAdapter"* %195, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %198

198:                                              ; preds = %131, %197, %193, %134, %111
  %199 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  %200 = icmp eq %"class.base::ObserverList"* %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %60, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %63) #9
  br label %202

202:                                              ; preds = %86, %109, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #9
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %295, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1, i32 0, i32 0, i32 1
  %208 = bitcast %"class.base::internal::LinkNodeBase"** %207 to %"class.base::LinkNode"**
  %209 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %208, align 8
  %210 = bitcast %"class.base::LinkedList"* %206 to %"class.base::LinkNode"**
  %211 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %210, align 8
  %212 = icmp eq %"class.base::LinkNode"* %209, %211
  br i1 %212, label %213, label %291

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %214, align 8
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 1
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %215, %217
  br i1 %218, label %227, label %219

219:                                              ; preds = %213, %224
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %224 ], [ %215, %213 ]
  %221 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 1
  %226 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %217
  br i1 %226, label %291, label %219

227:                                              ; preds = %219, %213
  %228 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %213 ], [ %220, %219 ]
  %229 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %228 to i64
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %217
  br i1 %230, label %291, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %217
  br i1 %233, label %286, label %234

234:                                              ; preds = %231
  %235 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %217, i64 -2, i32 0
  %236 = ptrtoint i8** %235 to i64
  %237 = sub i64 %236, %229
  %238 = lshr i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %260, label %242

242:                                              ; preds = %234, %255
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %257, %255 ], [ %232, %234 ]
  %244 = phi i64 [ %256, %255 ], [ %229, %234 ]
  %245 = phi i64 [ %258, %255 ], [ %240, %234 ]
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %242
  %250 = ptrtoint i8* %247 to i64
  %251 = inttoptr i64 %244 to %"class.base::internal::UncheckedObserverAdapter"*
  %252 = inttoptr i64 %244 to i64*
  store i64 %250, i64* %252, align 8
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %254 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %253 to i64
  br label %255

255:                                              ; preds = %249, %242
  %256 = phi i64 [ %244, %242 ], [ %254, %249 ]
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %258 = add i64 %245, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %242, !llvm.loop !11

260:                                              ; preds = %255, %234
  %261 = phi i64 [ undef, %234 ], [ %256, %255 ]
  %262 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %234 ], [ %257, %255 ]
  %263 = phi i64 [ %229, %234 ], [ %256, %255 ]
  %264 = icmp ult i64 %237, 24
  br i1 %264, label %282, label %265

265:                                              ; preds = %260, %365
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %367, %365 ], [ %262, %260 ]
  %267 = phi i64 [ %366, %365 ], [ %263, %260 ]
  %268 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = icmp eq i8* %269, null
  br i1 %270, label %277, label %271

271:                                              ; preds = %265
  %272 = ptrtoint i8* %269 to i64
  %273 = inttoptr i64 %267 to %"class.base::internal::UncheckedObserverAdapter"*
  %274 = inttoptr i64 %267 to i64*
  store i64 %272, i64* %274, align 8
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 1
  %276 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %275 to i64
  br label %277

277:                                              ; preds = %271, %265
  %278 = phi i64 [ %267, %265 ], [ %276, %271 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %343, label %337

282:                                              ; preds = %365, %260
  %283 = phi i64 [ %261, %260 ], [ %366, %365 ]
  %284 = inttoptr i64 %283 to %"class.base::internal::UncheckedObserverAdapter"*
  %285 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %286

286:                                              ; preds = %282, %231
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %231 ], [ %285, %282 ]
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %231 ], [ %284, %282 ]
  %289 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %288, %287
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  store %"class.base::internal::UncheckedObserverAdapter"* %288, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %291

291:                                              ; preds = %224, %290, %286, %227, %205
  %292 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %293 = icmp eq %"class.base::ObserverList"* %292, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %291
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %6, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %15) #9
  br label %295

295:                                              ; preds = %202, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #9
  ret void

296:                                              ; preds = %102
  %297 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %297, align 8
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %298, i64 %105
  %300 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %299 to %"class.variations::SyntheticTrialObserver"**
  %301 = load %"class.variations::SyntheticTrialObserver"*, %"class.variations::SyntheticTrialObserver"** %300, align 8
  %302 = bitcast %"class.variations::SyntheticTrialObserver"* %301 to void (%"class.variations::SyntheticTrialObserver"*, %"class.std::__1::vector"*)***
  %303 = load void (%"class.variations::SyntheticTrialObserver"*, %"class.std::__1::vector"*)**, void (%"class.variations::SyntheticTrialObserver"*, %"class.std::__1::vector"*)*** %302, align 8
  %304 = load void (%"class.variations::SyntheticTrialObserver"*, %"class.std::__1::vector"*)*, void (%"class.variations::SyntheticTrialObserver"*, %"class.std::__1::vector"*)** %303, align 8
  call void %304(%"class.variations::SyntheticTrialObserver"* %301, %"class.std::__1::vector"* dereferenceable(24) %66) #9
  %305 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %306 = icmp eq %"class.base::ObserverList"* %305, null
  br i1 %306, label %307, label %308

307:                                              ; preds = %332, %328, %296, %308, %322
  br label %68

308:                                              ; preds = %296
  %309 = load i64, i64* %7, align 8
  %310 = add i64 %309, 1
  store i64 %310, i64* %7, align 8
  %311 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 1
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.base::ObserverList"* %305 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = sub i64 %313, %315
  %317 = ashr exact i64 %316, 3
  %318 = load i64, i64* %8, align 8
  %319 = icmp ult i64 %317, %318
  %320 = select i1 %319, i64 %317, i64 %318
  %321 = icmp ult i64 %310, %320
  br i1 %321, label %322, label %307

322:                                              ; preds = %308
  %323 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %324 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 %310, i32 0
  %326 = load i8*, i8** %325, align 8
  %327 = icmp eq i8* %326, null
  br i1 %327, label %328, label %307

328:                                              ; preds = %322, %332
  %329 = phi i64 [ %330, %332 ], [ %310, %322 ]
  %330 = add nuw i64 %329, 1
  store i64 %330, i64* %7, align 8
  %331 = icmp ult i64 %330, %320
  br i1 %331, label %332, label %307

332:                                              ; preds = %328
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %324, align 8
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 %330, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %328, label %307

337:                                              ; preds = %277
  %338 = ptrtoint i8* %280 to i64
  %339 = inttoptr i64 %278 to %"class.base::internal::UncheckedObserverAdapter"*
  %340 = inttoptr i64 %278 to i64*
  store i64 %338, i64* %340, align 8
  %341 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %339, i64 1
  %342 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %341 to i64
  br label %343

343:                                              ; preds = %337, %277
  %344 = phi i64 [ %278, %277 ], [ %342, %337 ]
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 2, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %354, label %348

348:                                              ; preds = %343
  %349 = ptrtoint i8* %346 to i64
  %350 = inttoptr i64 %344 to %"class.base::internal::UncheckedObserverAdapter"*
  %351 = inttoptr i64 %344 to i64*
  store i64 %349, i64* %351, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %350, i64 1
  %353 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %352 to i64
  br label %354

354:                                              ; preds = %348, %343
  %355 = phi i64 [ %344, %343 ], [ %353, %348 ]
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 3, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %365, label %359

359:                                              ; preds = %354
  %360 = ptrtoint i8* %357 to i64
  %361 = inttoptr i64 %355 to %"class.base::internal::UncheckedObserverAdapter"*
  %362 = inttoptr i64 %355 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1
  %364 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  br label %365

365:                                              ; preds = %359, %354
  %366 = phi i64 [ %355, %354 ], [ %364, %359 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 4
  %368 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %367, %217
  br i1 %368, label %282, label %265

369:                                              ; preds = %184
  %370 = ptrtoint i8* %187 to i64
  %371 = inttoptr i64 %185 to %"class.base::internal::UncheckedObserverAdapter"*
  %372 = inttoptr i64 %185 to i64*
  store i64 %370, i64* %372, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %371, i64 1
  %374 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %373 to i64
  br label %375

375:                                              ; preds = %369, %184
  %376 = phi i64 [ %185, %184 ], [ %374, %369 ]
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 2, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %386, label %380

380:                                              ; preds = %375
  %381 = ptrtoint i8* %378 to i64
  %382 = inttoptr i64 %376 to %"class.base::internal::UncheckedObserverAdapter"*
  %383 = inttoptr i64 %376 to i64*
  store i64 %381, i64* %383, align 8
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %382, i64 1
  %385 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %384 to i64
  br label %386

386:                                              ; preds = %380, %375
  %387 = phi i64 [ %376, %375 ], [ %385, %380 ]
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 3, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %397, label %391

391:                                              ; preds = %386
  %392 = ptrtoint i8* %389 to i64
  %393 = inttoptr i64 %387 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %387 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %386
  %398 = phi i64 [ %387, %386 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 4
  %400 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %399, %124
  br i1 %400, label %189, label %172
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations22SyntheticTrialRegistry27RegisterSyntheticFieldTrialERKNS_19SyntheticTrialGroupE(%"class.variations::SyntheticTrialRegistry"*, %"struct.variations::SyntheticTrialGroup"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.variations::SyntheticTrialGroup", align 8
  %4 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %6 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %5, align 8
  %7 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %7, align 8
  %9 = icmp eq %"struct.variations::SyntheticTrialGroup"* %6, %8
  br i1 %9, label %30, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %1, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  br label %13

13:                                               ; preds = %10, %27
  %14 = phi %"struct.variations::SyntheticTrialGroup"* [ %6, %10 ], [ %28, %27 ]
  %15 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %14, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, %12
  br i1 %17, label %18, label %27

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %14, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %1, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %112, label %24

24:                                               ; preds = %18
  store i32 %22, i32* %19, align 4
  %25 = tail call i64 @_ZN4base9TimeTicks3NowEv() #9
  %26 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %14, i64 0, i32 1, i32 0, i32 0
  store i64 %25, i64* %26, align 8
  tail call void @_ZN10variations22SyntheticTrialRegistry29NotifySyntheticTrialObserversEv(%"class.variations::SyntheticTrialRegistry"* %0)
  br label %112

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %14, i64 1
  %29 = icmp eq %"struct.variations::SyntheticTrialGroup"* %28, %8
  br i1 %29, label %30, label %13

30:                                               ; preds = %27, %2
  %31 = bitcast %"struct.variations::SyntheticTrialGroup"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %3, i64 0, i32 1, i32 0, i32 0
  %33 = bitcast %"struct.variations::SyntheticTrialGroup"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 %33, i64 24, i1 false)
  %34 = tail call i64 @_ZN4base9TimeTicks3NowEv() #9
  store i64 %34, i64* %32, align 8
  %35 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %7, align 8
  %36 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %37 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %36, align 8
  %38 = icmp eq %"struct.variations::SyntheticTrialGroup"* %35, %37
  %39 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %37 to i64
  br i1 %38, label %45, label %40

40:                                               ; preds = %30
  %41 = bitcast %"struct.variations::SyntheticTrialGroup"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %31, i64 24, i1 false) #9
  %42 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %35, i64 1
  %43 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %42 to i64
  %44 = bitcast %"struct.variations::SyntheticTrialGroup"** %7 to i64*
  store i64 %43, i64* %44, align 8
  br label %111

45:                                               ; preds = %30
  %46 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %35 to i64
  %47 = bitcast %"struct.variations::SyntheticTrialGroup"** %7 to i64*
  %48 = bitcast %"class.std::__1::vector"* %4 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %46, %49
  %51 = sdiv exact i64 %50, 24
  %52 = add nsw i64 %51, 1
  %53 = icmp ugt i64 %52, 768614336404564650
  br i1 %53, label %54, label %56

54:                                               ; preds = %45
  %55 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #11
  unreachable

56:                                               ; preds = %45
  %57 = bitcast %"struct.variations::SyntheticTrialGroup"** %36 to i64*
  %58 = sub i64 %39, %49
  %59 = sdiv exact i64 %58, 24
  %60 = icmp ult i64 %59, 384307168202282325
  br i1 %60, label %61, label %66

61:                                               ; preds = %56
  %62 = shl nsw i64 %59, 1
  %63 = icmp ult i64 %62, %52
  %64 = select i1 %63, i64 %52, i64 %62
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %61, %56
  %67 = phi i64 [ %64, %61 ], [ 768614336404564650, %56 ]
  %68 = mul i64 %67, 24
  %69 = tail call i8* @_Znwm(i64 %68) #10
  %70 = bitcast i8* %69 to %"struct.variations::SyntheticTrialGroup"*
  br label %71

71:                                               ; preds = %66, %61
  %72 = phi i64 [ %67, %66 ], [ 0, %61 ]
  %73 = phi %"struct.variations::SyntheticTrialGroup"* [ %70, %66 ], [ null, %61 ]
  %74 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %73, i64 %51
  %75 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %73, i64 %72
  %76 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %75 to i64
  %77 = bitcast %"struct.variations::SyntheticTrialGroup"* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* nonnull align 8 %31, i64 24, i1 false) #9
  %78 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %74, i64 1
  %79 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %78 to i64
  %80 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %5, align 8
  %81 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %7, align 8
  %82 = icmp eq %"struct.variations::SyntheticTrialGroup"* %81, %80
  br i1 %82, label %83, label %85

83:                                               ; preds = %71
  %84 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %80 to i64
  br label %96

85:                                               ; preds = %71, %85
  %86 = phi %"struct.variations::SyntheticTrialGroup"* [ %88, %85 ], [ %74, %71 ]
  %87 = phi %"struct.variations::SyntheticTrialGroup"* [ %89, %85 ], [ %81, %71 ]
  %88 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %86, i64 -1
  %89 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %87, i64 -1
  %90 = bitcast %"struct.variations::SyntheticTrialGroup"* %88 to i8*
  %91 = bitcast %"struct.variations::SyntheticTrialGroup"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 24, i1 false) #9
  %92 = icmp eq %"struct.variations::SyntheticTrialGroup"* %89, %80
  br i1 %92, label %93, label %85

93:                                               ; preds = %85
  %94 = load i64, i64* %48, align 8
  %95 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %7, align 8
  br label %96

96:                                               ; preds = %93, %83
  %97 = phi %"struct.variations::SyntheticTrialGroup"* [ %80, %83 ], [ %95, %93 ]
  %98 = phi %"struct.variations::SyntheticTrialGroup"* [ %74, %83 ], [ %88, %93 ]
  %99 = phi i64 [ %84, %83 ], [ %94, %93 ]
  %100 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %98 to i64
  store i64 %100, i64* %48, align 8
  store i64 %79, i64* %47, align 8
  store i64 %76, i64* %57, align 8
  %101 = inttoptr i64 %99 to %"struct.variations::SyntheticTrialGroup"*
  %102 = icmp eq %"struct.variations::SyntheticTrialGroup"* %97, %101
  br i1 %102, label %107, label %103

103:                                              ; preds = %96, %103
  %104 = phi %"struct.variations::SyntheticTrialGroup"* [ %105, %103 ], [ %97, %96 ]
  %105 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %104, i64 -1
  tail call void @_ZN10variations19SyntheticTrialGroupD1Ev(%"struct.variations::SyntheticTrialGroup"* %105) #9
  %106 = icmp eq %"struct.variations::SyntheticTrialGroup"* %105, %101
  br i1 %106, label %107, label %103

107:                                              ; preds = %103, %96
  %108 = icmp eq i64 %99, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %99 to i8*
  tail call void @_ZdlPv(i8* %110) #10
  br label %111

111:                                              ; preds = %109, %107, %40
  tail call void @_ZN10variations22SyntheticTrialRegistry29NotifySyntheticTrialObserversEv(%"class.variations::SyntheticTrialRegistry"* %0)
  call void @_ZN10variations19SyntheticTrialGroupD1Ev(%"struct.variations::SyntheticTrialGroup"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br label %112

112:                                              ; preds = %24, %18, %111
  ret void
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10variations22SyntheticTrialRegistry32GetSyntheticFieldTrialsOlderThanEN4base9TimeTicksEPNSt3__16vectorINS_13ActiveGroupIdENS3_9allocatorIS5_EEEE(%"class.variations::SyntheticTrialRegistry"* nocapture readonly, i64, %"class.std::__1::vector.31"*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::vector.31"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %2, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.variations::ActiveGroupId"** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %8, align 8
  %10 = getelementptr inbounds %"class.variations::SyntheticTrialRegistry", %"class.variations::SyntheticTrialRegistry"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %10, align 8
  %12 = icmp eq %"struct.variations::SyntheticTrialGroup"* %9, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"struct.variations::ActiveGroupId"** %14 to i64*
  %16 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %2, i64 0, i32 0, i32 0
  br label %18

17:                                               ; preds = %89, %3
  ret void

18:                                               ; preds = %13, %89
  %19 = phi %"struct.variations::SyntheticTrialGroup"* [ %9, %13 ], [ %90, %89 ]
  %20 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp sgt i64 %21, %1
  br i1 %22, label %89, label %23

23:                                               ; preds = %18
  %24 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %6, align 8
  %25 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %14, align 8
  %26 = icmp eq %"struct.variations::ActiveGroupId"* %24, %25
  %27 = ptrtoint %"struct.variations::ActiveGroupId"* %25 to i64
  br i1 %26, label %34, label %28

28:                                               ; preds = %23
  %29 = bitcast %"struct.variations::SyntheticTrialGroup"* %19 to i64*
  %30 = bitcast %"struct.variations::ActiveGroupId"* %24 to i64*
  %31 = load i64, i64* %29, align 4
  store i64 %31, i64* %30, align 4
  %32 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %24, i64 1
  %33 = ptrtoint %"struct.variations::ActiveGroupId"* %32 to i64
  store i64 %33, i64* %7, align 8
  br label %89

34:                                               ; preds = %23
  %35 = ptrtoint %"struct.variations::ActiveGroupId"* %24 to i64
  %36 = load i64, i64* %4, align 8
  %37 = sub i64 %35, %36
  %38 = ashr exact i64 %37, 3
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 2305843009213693951
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::vector.31"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #11
  unreachable

43:                                               ; preds = %34
  %44 = sub i64 %27, %36
  %45 = ashr exact i64 %44, 3
  %46 = icmp ult i64 %45, 1152921504606846975
  br i1 %46, label %47, label %55

47:                                               ; preds = %43
  %48 = ashr exact i64 %44, 2
  %49 = icmp ult i64 %48, %39
  %50 = select i1 %49, i64 %39, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %47
  %53 = icmp ugt i64 %50, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  tail call void @abort() #11
  unreachable

55:                                               ; preds = %52, %43
  %56 = phi i64 [ %50, %52 ], [ 2305843009213693951, %43 ]
  %57 = shl i64 %56, 3
  %58 = tail call i8* @_Znwm(i64 %57) #10
  %59 = bitcast i8* %58 to %"struct.variations::ActiveGroupId"*
  br label %60

60:                                               ; preds = %55, %47
  %61 = phi i64 [ %56, %55 ], [ 0, %47 ]
  %62 = phi %"struct.variations::ActiveGroupId"* [ %59, %55 ], [ null, %47 ]
  %63 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %62, i64 %38
  %64 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %62, i64 %61
  %65 = ptrtoint %"struct.variations::ActiveGroupId"* %64 to i64
  %66 = bitcast %"struct.variations::SyntheticTrialGroup"* %19 to i64*
  %67 = bitcast %"struct.variations::ActiveGroupId"* %63 to i64*
  %68 = load i64, i64* %66, align 4
  store i64 %68, i64* %67, align 4
  %69 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %63, i64 1
  %70 = ptrtoint %"struct.variations::ActiveGroupId"* %69 to i64
  %71 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %16, align 8
  %72 = load i64, i64* %7, align 8
  %73 = ptrtoint %"struct.variations::ActiveGroupId"* %71 to i64
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 3
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %63, i64 %76
  %78 = ptrtoint %"struct.variations::ActiveGroupId"* %77 to i64
  %79 = icmp sgt i64 %74, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %60
  %81 = bitcast %"struct.variations::ActiveGroupId"* %77 to i8*
  %82 = bitcast %"struct.variations::ActiveGroupId"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %82, i64 %74, i1 false) #9
  %83 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %16, align 8
  br label %84

84:                                               ; preds = %80, %60
  %85 = phi %"struct.variations::ActiveGroupId"* [ %71, %60 ], [ %83, %80 ]
  store i64 %78, i64* %4, align 8
  store i64 %70, i64* %7, align 8
  store i64 %65, i64* %15, align 8
  %86 = icmp eq %"struct.variations::ActiveGroupId"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %84
  %88 = bitcast %"struct.variations::ActiveGroupId"* %85 to i8*
  tail call void @_ZdlPv(i8* %88) #10
  br label %89

89:                                               ; preds = %18, %87, %84, %28
  %90 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %19, i64 1
  %91 = icmp eq %"struct.variations::SyntheticTrialGroup"* %90, %11
  br i1 %91, label %17, label %18
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %16, %4
  %20 = bitcast %"struct.std::__1::pair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %19, %24
  %28 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %2, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #9
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #9
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base12ObserverListIN10variations22SyntheticTrialObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base12ObserverListIN10variations22SyntheticTrialObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base12ObserverListIN10variations22SyntheticTrialObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base12ObserverListIN10variations22SyntheticTrialObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
