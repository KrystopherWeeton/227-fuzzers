; ModuleID = '../../components/query_parser/snippet.cc'
source_filename = "../../components/query_parser/snippet.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.query_parser::Snippet" = type { %"class.std::__1::basic_string.13", %"class.std::__1::vector" }
%"class.std::__1::basic_string.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.16 }
%union.anon.16 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::pair" = type { i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::pair"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.17 }
%struct.anon.17 = type { %"struct.std::__1::__padding.18", i8 }
%"struct.std::__1::__padding.18" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.UText = type { i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i16*, %struct.UTextFuncs*, i8*, i8*, i8*, i8*, i8*, i8*, i64, i32, i32, i64, i32, i32 }
%struct.UTextFuncs = type { i32, i32, i32, i32, %struct.UText* (%struct.UText*, %struct.UText*, i8, i32*)*, i64 (%struct.UText*)*, i8 (%struct.UText*, i64, i8)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, void (%struct.UText*, i64, i64, i64, i8, i32*)*, i64 (%struct.UText*)*, i32 (%struct.UText*, i64)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)* }
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.std::__1::allocator" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"../../components/query_parser/snippet.cc\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"end >= start\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"match_end > match_start\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"match_end <= document.size()\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"start < document.size()\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"end >= match_end\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"end <= document.size()\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c" 000000000000\1000\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00\1E\0F\0F\0F\00\00\00\00\00", align 1

@_ZN12query_parser7SnippetC1Ev = hidden unnamed_addr alias void (%"class.query_parser::Snippet"*), void (%"class.query_parser::Snippet"*)* @_ZN12query_parser7SnippetC2Ev
@_ZN12query_parser7SnippetC1ERKS0_ = hidden unnamed_addr alias void (%"class.query_parser::Snippet"*, %"class.query_parser::Snippet"*), void (%"class.query_parser::Snippet"*, %"class.query_parser::Snippet"*)* @_ZN12query_parser7SnippetC2ERKS0_
@_ZN12query_parser7SnippetC1EOS0_ = hidden unnamed_addr alias void (%"class.query_parser::Snippet"*, %"class.query_parser::Snippet"*), void (%"class.query_parser::Snippet"*, %"class.query_parser::Snippet"*)* @_ZN12query_parser7SnippetC2EOS0_
@_ZN12query_parser7SnippetD1Ev = hidden unnamed_addr alias void (%"class.query_parser::Snippet"*), void (%"class.query_parser::Snippet"*)* @_ZN12query_parser7SnippetD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser7Snippet21ExtractMatchPositionsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS1_6vectorINS1_4pairImmEENS5_ISC_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = alloca %"class.std::__1::vector.6", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %9 to i64
  %14 = select i1 %10, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %660, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.std::__1::vector.6"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %5, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %5, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::vector.6"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = load i8*, i8** %20, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %24 = select i1 %10, i8* %22, i8* %23
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.6"* nonnull sret %5, i8* %24, i64 %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 1, i32 0) #11
  %25 = bitcast %"class.std::__1::basic_string"** %19 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.6"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = icmp eq i64 %29, 72
  %31 = inttoptr i64 %28 to %"class.std::__1::basic_string"*
  %32 = inttoptr i64 %26 to %"class.std::__1::basic_string"*
  br i1 %30, label %51, label %33

33:                                               ; preds = %16
  %34 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %39 = bitcast %"class.logging::CheckError"* %6 to i8*
  %40 = bitcast %"struct.std::__1::pair"* %4 to i8*
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %45 = bitcast %"struct.std::__1::pair"** %44 to i64*
  %46 = bitcast %"class.std::__1::vector"* %2 to i64*
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast %"struct.std::__1::pair"** %44 to <2 x i64>*
  br label %77

49:                                               ; preds = %650
  %50 = inttoptr i64 %652 to %"class.std::__1::basic_string"*
  br label %51

51:                                               ; preds = %49, %16
  %52 = phi %"class.std::__1::basic_string"* [ %32, %16 ], [ %651, %49 ]
  %53 = phi i64 [ %28, %16 ], [ %652, %49 ]
  %54 = phi %"class.std::__1::basic_string"* [ %31, %16 ], [ %50, %49 ]
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %76, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %53 to i8*
  %58 = icmp eq %"class.std::__1::basic_string"* %52, %54
  br i1 %58, label %74, label %59

59:                                               ; preds = %56, %69
  %60 = phi %"class.std::__1::basic_string"* [ %61, %69 ], [ %52, %56 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %66, %59
  %70 = icmp eq %"class.std::__1::basic_string"* %61, %54
  br i1 %70, label %71, label %59

71:                                               ; preds = %69
  %72 = bitcast %"class.std::__1::vector.6"* %5 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %56
  %75 = phi i8* [ %73, %71 ], [ %57, %56 ]
  store %"class.std::__1::basic_string"* %54, %"class.std::__1::basic_string"** %19, align 8
  call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %51, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  br label %660

77:                                               ; preds = %33, %650
  %78 = phi %"class.std::__1::basic_string"* [ %32, %33 ], [ %651, %650 ]
  %79 = phi i64 [ %28, %33 ], [ %652, %650 ]
  %80 = phi i64 [ %26, %33 ], [ %653, %650 ]
  %81 = phi %"class.std::__1::basic_string"* [ %31, %33 ], [ %659, %650 ]
  %82 = phi i64 [ 0, %33 ], [ %654, %650 ]
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 %82
  %84 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 %82, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = zext i8 %86 to i64
  %91 = select i1 %87, i64 %89, i64 %90
  %92 = load i8, i8* %35, align 1
  %93 = icmp slt i8 %92, 0
  %94 = load i64, i64* %36, align 8
  %95 = zext i8 %92 to i64
  %96 = select i1 %93, i64 %94, i64 %95
  %97 = icmp eq i64 %91, %96
  br i1 %97, label %98, label %650

98:                                               ; preds = %77
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  %102 = select i1 %87, i8* %100, i8* %101
  %103 = load i8*, i8** %37, align 8
  %104 = select i1 %93, i8* %103, i8* %38
  %105 = icmp eq i64 %91, 0
  br i1 %87, label %112, label %106

106:                                              ; preds = %98
  br i1 %105, label %128, label %107

107:                                              ; preds = %106
  %108 = ptrtoint i8* %100 to i64
  %109 = trunc i64 %108 to i8
  %110 = load i8, i8* %104, align 1
  %111 = icmp eq i8 %110, %109
  br i1 %111, label %113, label %650

112:                                              ; preds = %98
  br i1 %105, label %128, label %125

113:                                              ; preds = %107, %120
  %114 = phi i64 [ %117, %120 ], [ %90, %107 ]
  %115 = phi i8* [ %118, %120 ], [ %101, %107 ]
  %116 = phi i8* [ %121, %120 ], [ %104, %107 ]
  %117 = add i64 %114, -1
  %118 = getelementptr inbounds i8, i8* %115, i64 1
  %119 = icmp eq i64 %117, 0
  br i1 %119, label %128, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds i8, i8* %116, i64 1
  %122 = load i8, i8* %118, align 1
  %123 = load i8, i8* %121, align 1
  %124 = icmp eq i8 %122, %123
  br i1 %124, label %113, label %650

125:                                              ; preds = %112
  %126 = call i32 @bcmp(i8* %102, i8* %104, i64 %91) #11
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %650

128:                                              ; preds = %113, %125, %106, %112
  %129 = or i64 %82, 2
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 %129
  %131 = bitcast %"class.std::__1::basic_string"* %130 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  br label %140

138:                                              ; preds = %128
  %139 = bitcast %"class.std::__1::basic_string"* %130 to i8*
  br label %140

140:                                              ; preds = %135, %138
  %141 = phi i8* [ %137, %135 ], [ %139, %138 ]
  %142 = call i64 @strtol(i8* nocapture %141, i8** null, i32 10) #11
  %143 = shl i64 %142, 32
  %144 = ashr exact i64 %143, 32
  %145 = or i64 %82, 3
  %146 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %146, i64 %145
  %148 = bitcast %"class.std::__1::basic_string"* %147 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %140
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  br label %157

155:                                              ; preds = %140
  %156 = bitcast %"class.std::__1::basic_string"* %147 to i8*
  br label %157

157:                                              ; preds = %152, %155
  %158 = phi i8* [ %154, %152 ], [ %156, %155 ]
  %159 = call i64 @strtol(i8* nocapture %158, i8** null, i32 10) #11
  %160 = shl i64 %159, 32
  %161 = ashr exact i64 %160, 32
  %162 = add nsw i64 %161, %144
  %163 = icmp ult i64 %162, %144
  br i1 %163, label %164, label %166

164:                                              ; preds = %157
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 182, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)) #11
  %165 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  br label %166

166:                                              ; preds = %157, %164
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #11
  store i64 %144, i64* %41, align 8
  store i64 %162, i64* %42, align 8
  %167 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %43, align 8
  %168 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %44, align 8
  %169 = icmp eq %"struct.std::__1::pair"* %167, %168
  %170 = ptrtoint %"struct.std::__1::pair"* %167 to i64
  %171 = ptrtoint %"struct.std::__1::pair"* %168 to i64
  br i1 %169, label %172, label %199

172:                                              ; preds = %166
  %173 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %47, align 8
  %174 = icmp eq %"struct.std::__1::pair"* %167, %173
  br i1 %174, label %179, label %175

175:                                              ; preds = %172
  %176 = bitcast %"struct.std::__1::pair"* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* nonnull align 8 %40, i64 16, i1 false) #11
  %177 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %167, i64 1
  %178 = ptrtoint %"struct.std::__1::pair"* %177 to i64
  store i64 %178, i64* %45, align 8
  br label %646

179:                                              ; preds = %172
  %180 = call i8* @_Znwm(i64 16) #12
  %181 = bitcast i8* %180 to %"struct.std::__1::pair"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %180, i8* nonnull align 8 %40, i64 16, i1 false) #11
  %182 = insertelement <2 x i8*> undef, i8* %180, i32 0
  %183 = shufflevector <2 x i8*> %182, <2 x i8*> undef, <2 x i32> zeroinitializer
  %184 = getelementptr i8, <2 x i8*> %183, <2 x i64> <i64 16, i64 16>
  %185 = ptrtoint <2 x i8*> %184 to <2 x i64>
  %186 = sub i64 %171, %170
  %187 = ashr exact i64 %186, 4
  %188 = sub nsw i64 0, %187
  %189 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %181, i64 %188
  %190 = ptrtoint %"struct.std::__1::pair"* %189 to i64
  %191 = icmp sgt i64 %186, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %179
  %193 = bitcast %"struct.std::__1::pair"* %189 to i8*
  %194 = bitcast %"struct.std::__1::pair"* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 %186, i1 false) #11
  br label %195

195:                                              ; preds = %192, %179
  store i64 %190, i64* %46, align 8
  store <2 x i64> %185, <2 x i64>* %48, align 8
  %196 = icmp eq %"struct.std::__1::pair"* %167, null
  br i1 %196, label %646, label %197

197:                                              ; preds = %195
  %198 = bitcast %"struct.std::__1::pair"* %167 to i8*
  call void @_ZdlPv(i8* %198) #12
  br label %646

199:                                              ; preds = %166
  %200 = sub i64 %171, %170
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %220, label %202

202:                                              ; preds = %199
  %203 = ashr exact i64 %200, 4
  br label %204

204:                                              ; preds = %204, %202
  %205 = phi %"struct.std::__1::pair"* [ %216, %204 ], [ %167, %202 ]
  %206 = phi i64 [ %215, %204 ], [ %203, %202 ]
  %207 = lshr i64 %206, 1
  %208 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %205, i64 %207
  %209 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %208, i64 0, i32 0
  %210 = load i64, i64* %209, align 8
  %211 = icmp ult i64 %210, %144
  %212 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %208, i64 1
  %213 = xor i64 %207, -1
  %214 = add i64 %206, %213
  %215 = select i1 %211, i64 %214, i64 %207
  %216 = select i1 %211, %"struct.std::__1::pair"* %212, %"struct.std::__1::pair"* %205
  %217 = icmp eq i64 %215, 0
  br i1 %217, label %218, label %204

218:                                              ; preds = %204
  %219 = ptrtoint %"struct.std::__1::pair"* %216 to i64
  br label %220

220:                                              ; preds = %218, %199
  %221 = phi i64 [ %219, %218 ], [ %170, %199 ]
  %222 = phi %"struct.std::__1::pair"* [ %216, %218 ], [ %167, %199 ]
  %223 = icmp eq %"struct.std::__1::pair"* %222, %168
  br i1 %223, label %332, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %222, i64 0, i32 0
  %226 = load i64, i64* %225, align 8
  %227 = icmp eq i64 %226, %144
  br i1 %227, label %228, label %332

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %222, i64 0, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = icmp ult i64 %230, %162
  br i1 %231, label %232, label %646

232:                                              ; preds = %228
  store i64 %162, i64* %229, align 8
  %233 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %43, align 8
  %234 = ptrtoint %"struct.std::__1::pair"* %233 to i64
  %235 = sub i64 %221, %234
  %236 = ashr exact i64 %235, 4
  %237 = add nsw i64 %236, 1
  %238 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %233, i64 %236, i32 1
  %239 = load i64, i64* %45, align 8
  %240 = sub i64 %239, %234
  %241 = ashr exact i64 %240, 4
  %242 = icmp ult i64 %237, %241
  br i1 %242, label %243, label %646

243:                                              ; preds = %232
  %244 = sub nsw i64 0, %236
  br label %245

245:                                              ; preds = %243, %324
  %246 = phi %"struct.std::__1::pair"* [ %331, %324 ], [ %233, %243 ]
  %247 = load i64, i64* %238, align 8
  %248 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %246, i64 %237, i32 0
  %249 = load i64, i64* %248, align 8
  %250 = icmp ult i64 %247, %249
  br i1 %250, label %646, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %246, i64 %237, i32 1
  %253 = load i64, i64* %252, align 8
  %254 = icmp ult i64 %247, %253
  %255 = select i1 %254, i64* %252, i64* %238
  %256 = load i64, i64* %255, align 8
  store i64 %256, i64* %238, align 8
  %257 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %43, align 8
  %258 = ptrtoint %"struct.std::__1::pair"* %257 to i64
  %259 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %257, i64 %237
  %260 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %259, i64 1
  %261 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %44, align 8
  %262 = icmp eq %"struct.std::__1::pair"* %260, %261
  br i1 %262, label %324, label %263

263:                                              ; preds = %251
  %264 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %261, i64 -3
  %265 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %264, i64 %244
  %266 = ptrtoint %"struct.std::__1::pair"* %265 to i64
  %267 = sub i64 %266, %258
  %268 = lshr i64 %267, 4
  %269 = add nuw nsw i64 %268, 1
  %270 = and i64 %269, 3
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %286, label %272

272:                                              ; preds = %263, %272
  %273 = phi %"struct.std::__1::pair"* [ %283, %272 ], [ %259, %263 ]
  %274 = phi %"struct.std::__1::pair"* [ %282, %272 ], [ %260, %263 ]
  %275 = phi i64 [ %284, %272 ], [ %270, %263 ]
  %276 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %274, i64 0, i32 0
  %277 = load i64, i64* %276, align 8
  %278 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %273, i64 0, i32 0
  store i64 %277, i64* %278, align 8
  %279 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %274, i64 0, i32 1
  %280 = load i64, i64* %279, align 8
  %281 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %273, i64 0, i32 1
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %274, i64 1
  %283 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %273, i64 1
  %284 = add i64 %275, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %272, !llvm.loop !2

286:                                              ; preds = %272, %263
  %287 = phi %"struct.std::__1::pair"* [ undef, %263 ], [ %283, %272 ]
  %288 = phi %"struct.std::__1::pair"* [ %259, %263 ], [ %283, %272 ]
  %289 = phi %"struct.std::__1::pair"* [ %260, %263 ], [ %282, %272 ]
  %290 = icmp ult i64 %267, 48
  br i1 %290, label %321, label %291

291:                                              ; preds = %286, %291
  %292 = phi %"struct.std::__1::pair"* [ %319, %291 ], [ %288, %286 ]
  %293 = phi %"struct.std::__1::pair"* [ %318, %291 ], [ %289, %286 ]
  %294 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %293, i64 0, i32 0
  %295 = load i64, i64* %294, align 8
  %296 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %292, i64 0, i32 0
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %293, i64 0, i32 1
  %298 = load i64, i64* %297, align 8
  %299 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %292, i64 0, i32 1
  store i64 %298, i64* %299, align 8
  %300 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %293, i64 1, i32 0
  %301 = load i64, i64* %300, align 8
  %302 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %292, i64 1, i32 0
  store i64 %301, i64* %302, align 8
  %303 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %293, i64 1, i32 1
  %304 = load i64, i64* %303, align 8
  %305 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %292, i64 1, i32 1
  store i64 %304, i64* %305, align 8
  %306 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %293, i64 2, i32 0
  %307 = load i64, i64* %306, align 8
  %308 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %292, i64 2, i32 0
  store i64 %307, i64* %308, align 8
  %309 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %293, i64 2, i32 1
  %310 = load i64, i64* %309, align 8
  %311 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %292, i64 2, i32 1
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %293, i64 3, i32 0
  %313 = load i64, i64* %312, align 8
  %314 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %292, i64 3, i32 0
  store i64 %313, i64* %314, align 8
  %315 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %293, i64 3, i32 1
  %316 = load i64, i64* %315, align 8
  %317 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %292, i64 3, i32 1
  store i64 %316, i64* %317, align 8
  %318 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %293, i64 4
  %319 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %292, i64 4
  %320 = icmp eq %"struct.std::__1::pair"* %318, %261
  br i1 %320, label %321, label %291

321:                                              ; preds = %291, %286
  %322 = phi %"struct.std::__1::pair"* [ %287, %286 ], [ %319, %291 ]
  %323 = load i64, i64* %46, align 8
  br label %324

324:                                              ; preds = %321, %251
  %325 = phi i64 [ %258, %251 ], [ %323, %321 ]
  %326 = phi %"struct.std::__1::pair"* [ %259, %251 ], [ %322, %321 ]
  store %"struct.std::__1::pair"* %326, %"struct.std::__1::pair"** %44, align 8
  %327 = ptrtoint %"struct.std::__1::pair"* %326 to i64
  %328 = sub i64 %327, %325
  %329 = ashr exact i64 %328, 4
  %330 = icmp ult i64 %237, %329
  %331 = inttoptr i64 %325 to %"struct.std::__1::pair"*
  br i1 %330, label %245, label %646

332:                                              ; preds = %224, %220
  %333 = icmp eq %"struct.std::__1::pair"* %222, %167
  br i1 %333, label %334, label %429

334:                                              ; preds = %332
  %335 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_(%"class.std::__1::vector"* %2, %"struct.std::__1::pair"* %167, %"struct.std::__1::pair"* nonnull dereferenceable(16) %4) #11
  %336 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %43, align 8
  %337 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %336, i64 0, i32 1
  %338 = load i64, i64* %45, align 8
  %339 = ptrtoint %"struct.std::__1::pair"* %336 to i64
  %340 = sub i64 %338, %339
  %341 = ashr exact i64 %340, 4
  %342 = icmp ugt i64 %341, 1
  br i1 %342, label %343, label %646

343:                                              ; preds = %334, %421
  %344 = phi %"struct.std::__1::pair"* [ %428, %421 ], [ %336, %334 ]
  %345 = load i64, i64* %337, align 8
  %346 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %344, i64 1, i32 0
  %347 = load i64, i64* %346, align 8
  %348 = icmp ult i64 %345, %347
  br i1 %348, label %646, label %349

349:                                              ; preds = %343
  %350 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %344, i64 1, i32 1
  %351 = load i64, i64* %350, align 8
  %352 = icmp ult i64 %345, %351
  %353 = select i1 %352, i64* %350, i64* %337
  %354 = load i64, i64* %353, align 8
  store i64 %354, i64* %337, align 8
  %355 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %43, align 8
  %356 = ptrtoint %"struct.std::__1::pair"* %355 to i64
  %357 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %355, i64 1
  %358 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %355, i64 2
  %359 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %44, align 8
  %360 = icmp eq %"struct.std::__1::pair"* %358, %359
  br i1 %360, label %421, label %361

361:                                              ; preds = %349
  %362 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %359, i64 -3
  %363 = ptrtoint %"struct.std::__1::pair"* %362 to i64
  %364 = sub i64 %363, %356
  %365 = lshr i64 %364, 4
  %366 = add nuw nsw i64 %365, 1
  %367 = and i64 %366, 3
  %368 = icmp eq i64 %367, 0
  br i1 %368, label %383, label %369

369:                                              ; preds = %361, %369
  %370 = phi %"struct.std::__1::pair"* [ %380, %369 ], [ %357, %361 ]
  %371 = phi %"struct.std::__1::pair"* [ %379, %369 ], [ %358, %361 ]
  %372 = phi i64 [ %381, %369 ], [ %367, %361 ]
  %373 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %371, i64 0, i32 0
  %374 = load i64, i64* %373, align 8
  %375 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %370, i64 0, i32 0
  store i64 %374, i64* %375, align 8
  %376 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %371, i64 0, i32 1
  %377 = load i64, i64* %376, align 8
  %378 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %370, i64 0, i32 1
  store i64 %377, i64* %378, align 8
  %379 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %371, i64 1
  %380 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %370, i64 1
  %381 = add i64 %372, -1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %369, !llvm.loop !4

383:                                              ; preds = %369, %361
  %384 = phi %"struct.std::__1::pair"* [ undef, %361 ], [ %380, %369 ]
  %385 = phi %"struct.std::__1::pair"* [ %357, %361 ], [ %380, %369 ]
  %386 = phi %"struct.std::__1::pair"* [ %358, %361 ], [ %379, %369 ]
  %387 = icmp ult i64 %364, 48
  br i1 %387, label %418, label %388

388:                                              ; preds = %383, %388
  %389 = phi %"struct.std::__1::pair"* [ %416, %388 ], [ %385, %383 ]
  %390 = phi %"struct.std::__1::pair"* [ %415, %388 ], [ %386, %383 ]
  %391 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %390, i64 0, i32 0
  %392 = load i64, i64* %391, align 8
  %393 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %389, i64 0, i32 0
  store i64 %392, i64* %393, align 8
  %394 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %390, i64 0, i32 1
  %395 = load i64, i64* %394, align 8
  %396 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %389, i64 0, i32 1
  store i64 %395, i64* %396, align 8
  %397 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %390, i64 1, i32 0
  %398 = load i64, i64* %397, align 8
  %399 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %389, i64 1, i32 0
  store i64 %398, i64* %399, align 8
  %400 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %390, i64 1, i32 1
  %401 = load i64, i64* %400, align 8
  %402 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %389, i64 1, i32 1
  store i64 %401, i64* %402, align 8
  %403 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %390, i64 2, i32 0
  %404 = load i64, i64* %403, align 8
  %405 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %389, i64 2, i32 0
  store i64 %404, i64* %405, align 8
  %406 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %390, i64 2, i32 1
  %407 = load i64, i64* %406, align 8
  %408 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %389, i64 2, i32 1
  store i64 %407, i64* %408, align 8
  %409 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %390, i64 3, i32 0
  %410 = load i64, i64* %409, align 8
  %411 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %389, i64 3, i32 0
  store i64 %410, i64* %411, align 8
  %412 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %390, i64 3, i32 1
  %413 = load i64, i64* %412, align 8
  %414 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %389, i64 3, i32 1
  store i64 %413, i64* %414, align 8
  %415 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %390, i64 4
  %416 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %389, i64 4
  %417 = icmp eq %"struct.std::__1::pair"* %415, %359
  br i1 %417, label %418, label %388

418:                                              ; preds = %388, %383
  %419 = phi %"struct.std::__1::pair"* [ %384, %383 ], [ %416, %388 ]
  %420 = load i64, i64* %46, align 8
  br label %421

421:                                              ; preds = %418, %349
  %422 = phi i64 [ %356, %349 ], [ %420, %418 ]
  %423 = phi %"struct.std::__1::pair"* [ %357, %349 ], [ %419, %418 ]
  store %"struct.std::__1::pair"* %423, %"struct.std::__1::pair"** %44, align 8
  %424 = ptrtoint %"struct.std::__1::pair"* %423 to i64
  %425 = sub i64 %424, %422
  %426 = ashr exact i64 %425, 4
  %427 = icmp ugt i64 %426, 1
  %428 = inttoptr i64 %422 to %"struct.std::__1::pair"*
  br i1 %427, label %343, label %646

429:                                              ; preds = %332
  %430 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %222, i64 -1, i32 1
  %431 = load i64, i64* %430, align 8
  %432 = icmp uge i64 %431, %144
  %433 = icmp ult i64 %431, %162
  %434 = and i1 %432, %433
  br i1 %434, label %435, label %537

435:                                              ; preds = %429
  %436 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %222, i64 -1
  %437 = ptrtoint %"struct.std::__1::pair"* %436 to i64
  store i64 %162, i64* %430, align 8
  %438 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %43, align 8
  %439 = ptrtoint %"struct.std::__1::pair"* %438 to i64
  %440 = sub i64 %437, %439
  %441 = ashr exact i64 %440, 4
  %442 = add nsw i64 %441, 1
  %443 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %438, i64 %441, i32 1
  %444 = load i64, i64* %45, align 8
  %445 = sub i64 %444, %439
  %446 = ashr exact i64 %445, 4
  %447 = icmp ult i64 %442, %446
  br i1 %447, label %448, label %646

448:                                              ; preds = %435
  %449 = sub nsw i64 0, %441
  br label %450

450:                                              ; preds = %448, %529
  %451 = phi %"struct.std::__1::pair"* [ %536, %529 ], [ %438, %448 ]
  %452 = load i64, i64* %443, align 8
  %453 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %451, i64 %442, i32 0
  %454 = load i64, i64* %453, align 8
  %455 = icmp ult i64 %452, %454
  br i1 %455, label %646, label %456

456:                                              ; preds = %450
  %457 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %451, i64 %442, i32 1
  %458 = load i64, i64* %457, align 8
  %459 = icmp ult i64 %452, %458
  %460 = select i1 %459, i64* %457, i64* %443
  %461 = load i64, i64* %460, align 8
  store i64 %461, i64* %443, align 8
  %462 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %43, align 8
  %463 = ptrtoint %"struct.std::__1::pair"* %462 to i64
  %464 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %462, i64 %442
  %465 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %464, i64 1
  %466 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %44, align 8
  %467 = icmp eq %"struct.std::__1::pair"* %465, %466
  br i1 %467, label %529, label %468

468:                                              ; preds = %456
  %469 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %466, i64 -3
  %470 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %469, i64 %449
  %471 = ptrtoint %"struct.std::__1::pair"* %470 to i64
  %472 = sub i64 %471, %463
  %473 = lshr i64 %472, 4
  %474 = add nuw nsw i64 %473, 1
  %475 = and i64 %474, 3
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %491, label %477

477:                                              ; preds = %468, %477
  %478 = phi %"struct.std::__1::pair"* [ %488, %477 ], [ %464, %468 ]
  %479 = phi %"struct.std::__1::pair"* [ %487, %477 ], [ %465, %468 ]
  %480 = phi i64 [ %489, %477 ], [ %475, %468 ]
  %481 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %479, i64 0, i32 0
  %482 = load i64, i64* %481, align 8
  %483 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %478, i64 0, i32 0
  store i64 %482, i64* %483, align 8
  %484 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %479, i64 0, i32 1
  %485 = load i64, i64* %484, align 8
  %486 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %478, i64 0, i32 1
  store i64 %485, i64* %486, align 8
  %487 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %479, i64 1
  %488 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %478, i64 1
  %489 = add i64 %480, -1
  %490 = icmp eq i64 %489, 0
  br i1 %490, label %491, label %477, !llvm.loop !5

491:                                              ; preds = %477, %468
  %492 = phi %"struct.std::__1::pair"* [ undef, %468 ], [ %488, %477 ]
  %493 = phi %"struct.std::__1::pair"* [ %464, %468 ], [ %488, %477 ]
  %494 = phi %"struct.std::__1::pair"* [ %465, %468 ], [ %487, %477 ]
  %495 = icmp ult i64 %472, 48
  br i1 %495, label %526, label %496

496:                                              ; preds = %491, %496
  %497 = phi %"struct.std::__1::pair"* [ %524, %496 ], [ %493, %491 ]
  %498 = phi %"struct.std::__1::pair"* [ %523, %496 ], [ %494, %491 ]
  %499 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %498, i64 0, i32 0
  %500 = load i64, i64* %499, align 8
  %501 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %497, i64 0, i32 0
  store i64 %500, i64* %501, align 8
  %502 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %498, i64 0, i32 1
  %503 = load i64, i64* %502, align 8
  %504 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %497, i64 0, i32 1
  store i64 %503, i64* %504, align 8
  %505 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %498, i64 1, i32 0
  %506 = load i64, i64* %505, align 8
  %507 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %497, i64 1, i32 0
  store i64 %506, i64* %507, align 8
  %508 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %498, i64 1, i32 1
  %509 = load i64, i64* %508, align 8
  %510 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %497, i64 1, i32 1
  store i64 %509, i64* %510, align 8
  %511 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %498, i64 2, i32 0
  %512 = load i64, i64* %511, align 8
  %513 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %497, i64 2, i32 0
  store i64 %512, i64* %513, align 8
  %514 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %498, i64 2, i32 1
  %515 = load i64, i64* %514, align 8
  %516 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %497, i64 2, i32 1
  store i64 %515, i64* %516, align 8
  %517 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %498, i64 3, i32 0
  %518 = load i64, i64* %517, align 8
  %519 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %497, i64 3, i32 0
  store i64 %518, i64* %519, align 8
  %520 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %498, i64 3, i32 1
  %521 = load i64, i64* %520, align 8
  %522 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %497, i64 3, i32 1
  store i64 %521, i64* %522, align 8
  %523 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %498, i64 4
  %524 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %497, i64 4
  %525 = icmp eq %"struct.std::__1::pair"* %523, %466
  br i1 %525, label %526, label %496

526:                                              ; preds = %496, %491
  %527 = phi %"struct.std::__1::pair"* [ %492, %491 ], [ %524, %496 ]
  %528 = load i64, i64* %46, align 8
  br label %529

529:                                              ; preds = %526, %456
  %530 = phi i64 [ %463, %456 ], [ %528, %526 ]
  %531 = phi %"struct.std::__1::pair"* [ %464, %456 ], [ %527, %526 ]
  store %"struct.std::__1::pair"* %531, %"struct.std::__1::pair"** %44, align 8
  %532 = ptrtoint %"struct.std::__1::pair"* %531 to i64
  %533 = sub i64 %532, %530
  %534 = ashr exact i64 %533, 4
  %535 = icmp ult i64 %442, %534
  %536 = inttoptr i64 %530 to %"struct.std::__1::pair"*
  br i1 %535, label %450, label %646

537:                                              ; preds = %429
  br i1 %433, label %538, label %646

538:                                              ; preds = %537
  br i1 %223, label %543, label %539

539:                                              ; preds = %538
  %540 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %222, i64 0, i32 0
  %541 = load i64, i64* %540, align 8
  %542 = icmp ugt i64 %541, %162
  br i1 %542, label %543, label %545

543:                                              ; preds = %539, %538
  %544 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_(%"class.std::__1::vector"* %2, %"struct.std::__1::pair"* %222, %"struct.std::__1::pair"* nonnull dereferenceable(16) %4) #11
  br label %646

545:                                              ; preds = %539
  store i64 %144, i64* %540, align 8
  %546 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %222, i64 0, i32 1
  store i64 %162, i64* %546, align 8
  %547 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %43, align 8
  %548 = ptrtoint %"struct.std::__1::pair"* %547 to i64
  %549 = sub i64 %221, %548
  %550 = ashr exact i64 %549, 4
  %551 = add nsw i64 %550, 1
  %552 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %547, i64 %550, i32 1
  %553 = load i64, i64* %45, align 8
  %554 = sub i64 %553, %548
  %555 = ashr exact i64 %554, 4
  %556 = icmp ult i64 %551, %555
  br i1 %556, label %557, label %646

557:                                              ; preds = %545
  %558 = sub nsw i64 0, %550
  br label %559

559:                                              ; preds = %557, %638
  %560 = phi %"struct.std::__1::pair"* [ %645, %638 ], [ %547, %557 ]
  %561 = load i64, i64* %552, align 8
  %562 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %560, i64 %551, i32 0
  %563 = load i64, i64* %562, align 8
  %564 = icmp ult i64 %561, %563
  br i1 %564, label %646, label %565

565:                                              ; preds = %559
  %566 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %560, i64 %551, i32 1
  %567 = load i64, i64* %566, align 8
  %568 = icmp ult i64 %561, %567
  %569 = select i1 %568, i64* %566, i64* %552
  %570 = load i64, i64* %569, align 8
  store i64 %570, i64* %552, align 8
  %571 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %43, align 8
  %572 = ptrtoint %"struct.std::__1::pair"* %571 to i64
  %573 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %571, i64 %551
  %574 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %573, i64 1
  %575 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %44, align 8
  %576 = icmp eq %"struct.std::__1::pair"* %574, %575
  br i1 %576, label %638, label %577

577:                                              ; preds = %565
  %578 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %575, i64 -3
  %579 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %578, i64 %558
  %580 = ptrtoint %"struct.std::__1::pair"* %579 to i64
  %581 = sub i64 %580, %572
  %582 = lshr i64 %581, 4
  %583 = add nuw nsw i64 %582, 1
  %584 = and i64 %583, 3
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %600, label %586

586:                                              ; preds = %577, %586
  %587 = phi %"struct.std::__1::pair"* [ %597, %586 ], [ %573, %577 ]
  %588 = phi %"struct.std::__1::pair"* [ %596, %586 ], [ %574, %577 ]
  %589 = phi i64 [ %598, %586 ], [ %584, %577 ]
  %590 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %588, i64 0, i32 0
  %591 = load i64, i64* %590, align 8
  %592 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %587, i64 0, i32 0
  store i64 %591, i64* %592, align 8
  %593 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %588, i64 0, i32 1
  %594 = load i64, i64* %593, align 8
  %595 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %587, i64 0, i32 1
  store i64 %594, i64* %595, align 8
  %596 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %588, i64 1
  %597 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %587, i64 1
  %598 = add i64 %589, -1
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %600, label %586, !llvm.loop !6

600:                                              ; preds = %586, %577
  %601 = phi %"struct.std::__1::pair"* [ undef, %577 ], [ %597, %586 ]
  %602 = phi %"struct.std::__1::pair"* [ %573, %577 ], [ %597, %586 ]
  %603 = phi %"struct.std::__1::pair"* [ %574, %577 ], [ %596, %586 ]
  %604 = icmp ult i64 %581, 48
  br i1 %604, label %635, label %605

605:                                              ; preds = %600, %605
  %606 = phi %"struct.std::__1::pair"* [ %633, %605 ], [ %602, %600 ]
  %607 = phi %"struct.std::__1::pair"* [ %632, %605 ], [ %603, %600 ]
  %608 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %607, i64 0, i32 0
  %609 = load i64, i64* %608, align 8
  %610 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %606, i64 0, i32 0
  store i64 %609, i64* %610, align 8
  %611 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %607, i64 0, i32 1
  %612 = load i64, i64* %611, align 8
  %613 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %606, i64 0, i32 1
  store i64 %612, i64* %613, align 8
  %614 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %607, i64 1, i32 0
  %615 = load i64, i64* %614, align 8
  %616 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %606, i64 1, i32 0
  store i64 %615, i64* %616, align 8
  %617 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %607, i64 1, i32 1
  %618 = load i64, i64* %617, align 8
  %619 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %606, i64 1, i32 1
  store i64 %618, i64* %619, align 8
  %620 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %607, i64 2, i32 0
  %621 = load i64, i64* %620, align 8
  %622 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %606, i64 2, i32 0
  store i64 %621, i64* %622, align 8
  %623 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %607, i64 2, i32 1
  %624 = load i64, i64* %623, align 8
  %625 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %606, i64 2, i32 1
  store i64 %624, i64* %625, align 8
  %626 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %607, i64 3, i32 0
  %627 = load i64, i64* %626, align 8
  %628 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %606, i64 3, i32 0
  store i64 %627, i64* %628, align 8
  %629 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %607, i64 3, i32 1
  %630 = load i64, i64* %629, align 8
  %631 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %606, i64 3, i32 1
  store i64 %630, i64* %631, align 8
  %632 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %607, i64 4
  %633 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %606, i64 4
  %634 = icmp eq %"struct.std::__1::pair"* %632, %575
  br i1 %634, label %635, label %605

635:                                              ; preds = %605, %600
  %636 = phi %"struct.std::__1::pair"* [ %601, %600 ], [ %633, %605 ]
  %637 = load i64, i64* %46, align 8
  br label %638

638:                                              ; preds = %635, %565
  %639 = phi i64 [ %572, %565 ], [ %637, %635 ]
  %640 = phi %"struct.std::__1::pair"* [ %573, %565 ], [ %636, %635 ]
  store %"struct.std::__1::pair"* %640, %"struct.std::__1::pair"** %44, align 8
  %641 = ptrtoint %"struct.std::__1::pair"* %640 to i64
  %642 = sub i64 %641, %639
  %643 = ashr exact i64 %642, 4
  %644 = icmp ult i64 %551, %643
  %645 = inttoptr i64 %639 to %"struct.std::__1::pair"*
  br i1 %644, label %559, label %646

646:                                              ; preds = %245, %324, %559, %638, %450, %529, %343, %421, %175, %195, %197, %228, %232, %334, %435, %537, %543, %545
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #11
  %647 = load i64, i64* %25, align 8
  %648 = load i64, i64* %27, align 8
  %649 = inttoptr i64 %647 to %"class.std::__1::basic_string"*
  br label %650

650:                                              ; preds = %120, %107, %125, %77, %646
  %651 = phi %"class.std::__1::basic_string"* [ %78, %107 ], [ %78, %125 ], [ %78, %77 ], [ %649, %646 ], [ %78, %120 ]
  %652 = phi i64 [ %79, %107 ], [ %79, %125 ], [ %79, %77 ], [ %648, %646 ], [ %79, %120 ]
  %653 = phi i64 [ %80, %107 ], [ %80, %125 ], [ %80, %77 ], [ %647, %646 ], [ %80, %120 ]
  %654 = add i64 %82, 4
  %655 = sub i64 %653, %652
  %656 = sdiv exact i64 %655, 24
  %657 = add nsw i64 %656, -3
  %658 = icmp ult i64 %654, %657
  %659 = inttoptr i64 %652 to %"class.std::__1::basic_string"*
  br i1 %658, label %77, label %49

660:                                              ; preds = %3, %76
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.6"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser7Snippet27ConvertMatchPositionsToWideERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS1_4pairImmEENS5_ISC_EEEE(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  store i32 0, i32* %3, align 4
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  store i64 0, i64* %4, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %21 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %23 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %22, align 8
  %24 = icmp eq %"struct.std::__1::pair"* %21, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %26, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  ret void

26:                                               ; preds = %2, %26
  %27 = phi %"struct.std::__1::pair"* [ %36, %26 ], [ %21, %2 ]
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = call fastcc i64 @_ZN12query_parser12_GLOBAL__N_124AdvanceAndReturnUTF16PosEPKciiPiPm(i8* %17, i32 %19, i32 %30, i32* nonnull %3, i64* nonnull %4)
  store i64 %31, i64* %28, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = call fastcc i64 @_ZN12query_parser12_GLOBAL__N_124AdvanceAndReturnUTF16PosEPKciiPiPm(i8* %17, i32 %19, i32 %34, i32* nonnull %3, i64* nonnull %4)
  store i64 %35, i64* %32, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 1
  %37 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %22, align 8
  %38 = icmp eq %"struct.std::__1::pair"* %36, %37
  br i1 %38, label %25, label %26
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i64 @_ZN12query_parser12_GLOBAL__N_124AdvanceAndReturnUTF16PosEPKciiPiPm(i8* nocapture readonly, i32, i32, i32* nocapture, i64* nocapture) unnamed_addr #4 {
  %6 = load i32, i32* %3, align 4
  %7 = icmp slt i32 %6, %2
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  %9 = load i64, i64* %4, align 8
  br label %102

10:                                               ; preds = %5, %96
  %11 = phi i32 [ %100, %96 ], [ %6, %5 ]
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %3, align 4
  %13 = sext i32 %11 to i64
  %14 = getelementptr inbounds i8, i8* %0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = icmp sgt i8 %15, -1
  %18 = icmp eq i32 %12, %1
  %19 = or i1 %18, %17
  br i1 %19, label %95, label %20

20:                                               ; preds = %10
  %21 = icmp ugt i8 %15, -33
  br i1 %21, label %22, label %77

22:                                               ; preds = %20
  %23 = icmp ult i8 %15, -16
  br i1 %23, label %24, label %40

24:                                               ; preds = %22
  %25 = and i32 %16, 15
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.12, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = sext i32 %12 to i64
  %31 = getelementptr inbounds i8, i8* %0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = lshr i8 %32, 5
  %34 = zext i8 %33 to i32
  %35 = shl i32 1, %34
  %36 = and i32 %35, %29
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %95, label %38

38:                                               ; preds = %24
  %39 = and i8 %32, 63
  br label %68

40:                                               ; preds = %22
  %41 = add nsw i32 %16, -240
  %42 = icmp slt i32 %41, 5
  br i1 %42, label %43, label %95

43:                                               ; preds = %40
  %44 = sext i32 %12 to i64
  %45 = getelementptr inbounds i8, i8* %0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = lshr i32 %47, 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13, i64 0, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = sext i8 %51 to i32
  %53 = shl i32 1, %41
  %54 = and i32 %53, %52
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %95, label %56

56:                                               ; preds = %43
  %57 = add nsw i32 %11, 2
  store i32 %57, i32* %3, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %95, label %59

59:                                               ; preds = %56
  %60 = shl nsw i32 %41, 6
  %61 = and i32 %47, 63
  %62 = or i32 %61, %60
  %63 = sext i32 %57 to i64
  %64 = getelementptr inbounds i8, i8* %0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = xor i8 %65, -128
  %67 = icmp ult i8 %66, 64
  br i1 %67, label %68, label %95

68:                                               ; preds = %38, %59
  %69 = phi i32 [ %12, %38 ], [ %57, %59 ]
  %70 = phi i32 [ %25, %38 ], [ %62, %59 ]
  %71 = phi i8 [ %39, %38 ], [ %66, %59 ]
  %72 = shl nsw i32 %70, 6
  %73 = zext i8 %71 to i32
  %74 = or i32 %72, %73
  %75 = add nsw i32 %69, 1
  store i32 %75, i32* %3, align 4
  %76 = icmp eq i32 %75, %1
  br i1 %76, label %95, label %81

77:                                               ; preds = %20
  %78 = icmp ugt i8 %15, -63
  br i1 %78, label %79, label %95

79:                                               ; preds = %77
  %80 = and i32 %16, 31
  br label %81

81:                                               ; preds = %68, %79
  %82 = phi i32 [ %75, %68 ], [ %12, %79 ]
  %83 = phi i32 [ %74, %68 ], [ %80, %79 ]
  %84 = sext i32 %82 to i64
  %85 = getelementptr inbounds i8, i8* %0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = xor i8 %86, -128
  %88 = icmp ult i8 %87, 64
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = zext i8 %87 to i32
  %91 = shl i32 %83, 6
  %92 = or i32 %91, %90
  %93 = add nsw i32 %82, 1
  store i32 %93, i32* %3, align 4
  %94 = icmp slt i32 %92, 65536
  br i1 %94, label %95, label %96

95:                                               ; preds = %40, %59, %77, %81, %43, %56, %68, %24, %10, %89
  br label %96

96:                                               ; preds = %89, %95
  %97 = phi i64 [ 1, %95 ], [ 2, %89 ]
  %98 = load i64, i64* %4, align 8
  %99 = add i64 %98, %97
  store i64 %99, i64* %4, align 8
  %100 = load i32, i32* %3, align 4
  %101 = icmp slt i32 %100, %2
  br i1 %101, label %10, label %102

102:                                              ; preds = %96, %8
  %103 = phi i64 [ %9, %8 ], [ %99, %96 ]
  ret i64 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser7SnippetC2Ev(%"class.query_parser::Snippet"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.query_parser::Snippet"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser7SnippetC2ERKS0_(%"class.query_parser::Snippet"*, %"class.query_parser::Snippet"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.query_parser::Snippet"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.query_parser::Snippet"* %0 to i8*
  %9 = bitcast %"class.query_parser::Snippet"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #11
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"class.query_parser::Snippet"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"class.query_parser::Snippet"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.query_parser::Snippet"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #13
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #13
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"class.query_parser::Snippet"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !7
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !7
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !10, !noalias !7
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !10, !noalias !7
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !7
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !7
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !10, !noalias !7
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !10, !noalias !7
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !7
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !7
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !10, !noalias !7
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !10, !noalias !7
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !7
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !7
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !10, !noalias !7
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !10, !noalias !7
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !12

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !7
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !7
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !10, !noalias !7
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !10, !noalias !7
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !14

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !15

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !16

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::vector"* %186 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 24, i1 false) #11
  %189 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 1, i32 0, i32 1
  %190 = bitcast %"struct.std::__1::pair"** %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.std::__1::vector"* %187 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = sub i64 %191, %193
  %195 = ashr exact i64 %194, 4
  %196 = icmp eq i64 %194, 0
  br i1 %196, label %224, label %197

197:                                              ; preds = %185
  %198 = icmp ugt i64 %195, 1152921504606846975
  br i1 %198, label %199, label %201

199:                                              ; preds = %197
  %200 = bitcast %"class.std::__1::vector"* %186 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %200) #13
  unreachable

201:                                              ; preds = %197
  %202 = tail call i8* @_Znwm(i64 %194) #12
  %203 = bitcast i8* %202 to %"struct.std::__1::pair"*
  %204 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1, i32 0, i32 1
  %205 = bitcast %"struct.std::__1::pair"** %204 to i8**
  store i8* %202, i8** %205, align 8
  %206 = bitcast %"class.std::__1::vector"* %186 to i8**
  store i8* %202, i8** %206, align 8
  %207 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %203, i64 %195
  %208 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair"* %207, %"struct.std::__1::pair"** %208, align 8
  %209 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %187, i64 0, i32 0, i32 0
  %210 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %209, align 8
  %211 = load i64, i64* %190, align 8
  %212 = bitcast %"struct.std::__1::pair"** %204 to i64*
  %213 = ptrtoint i8* %202 to i64
  %214 = ptrtoint %"struct.std::__1::pair"* %210 to i64
  %215 = sub i64 %211, %214
  %216 = icmp sgt i64 %215, 0
  br i1 %216, label %217, label %222

217:                                              ; preds = %201
  %218 = lshr exact i64 %215, 4
  %219 = bitcast %"struct.std::__1::pair"* %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %202, i8* align 8 %219, i64 %215, i1 false) #11
  %220 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %203, i64 %218
  %221 = ptrtoint %"struct.std::__1::pair"* %220 to i64
  br label %222

222:                                              ; preds = %217, %201
  %223 = phi i64 [ %221, %217 ], [ %213, %201 ]
  store i64 %223, i64* %212, align 8
  br label %224

224:                                              ; preds = %185, %222
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser7SnippetC2EOS0_(%"class.query_parser::Snippet"* nocapture, %"class.query_parser::Snippet"* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.query_parser::Snippet"* %0 to i8*
  %4 = bitcast %"class.query_parser::Snippet"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  %5 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #11
  %8 = bitcast %"class.std::__1::vector"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"struct.std::__1::pair"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.std::__1::pair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.std::__1::pair"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser7SnippetD2Ev(%"class.query_parser::Snippet"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.std::__1::pair"* %3 to i64
  %7 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.std::__1::pair"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  %11 = bitcast %"class.query_parser::Snippet"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = bitcast %"class.query_parser::Snippet"* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %10, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.query_parser::Snippet"* @_ZN12query_parser7SnippetaSERKS0_(%"class.query_parser::Snippet"* returned, %"class.query_parser::Snippet"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string.13"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.13"* %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %4)
  %6 = icmp eq %"class.query_parser::Snippet"* %0, %1
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 1, i32 0, i32 0
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  tail call void @_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %8, %"struct.std::__1::pair"* %10, %"struct.std::__1::pair"* %12) #11
  br label %13

13:                                               ; preds = %2, %7
  ret %"class.query_parser::Snippet"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.13"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.13"*, %"class.std::__1::basic_string.13"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.13"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.13"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.13"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.13"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.13"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.13"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.13"*
  %35 = icmp ugt %"class.std::__1::basic_string.13"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !17
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !17
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !20, !noalias !17
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !20, !noalias !17
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !17
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !17
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !20, !noalias !17
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !20, !noalias !17
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !17
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !17
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !20, !noalias !17
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !20, !noalias !17
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !17
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !17
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !20, !noalias !17
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !20, !noalias !17
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !22

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !17
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !17
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !20, !noalias !17
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !20, !noalias !17
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !23

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !24

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !25

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.13"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !26
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !26
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !29, !noalias !26
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !29, !noalias !26
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !26
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !26
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !29, !noalias !26
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !29, !noalias !26
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !26
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !26
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !29, !noalias !26
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !29, !noalias !26
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !26
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !26
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !29, !noalias !26
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !29, !noalias !26
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !31

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !26
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !26
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !29, !noalias !26
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !29, !noalias !26
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !32

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !33

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !34

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.13"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.13"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !35
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !35
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !38, !noalias !35
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !38, !noalias !35
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !35
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !35
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !38, !noalias !35
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !38, !noalias !35
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !35
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !35
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !38, !noalias !35
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !38, !noalias !35
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !35
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !35
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !38, !noalias !35
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !38, !noalias !35
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !40

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !35
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !35
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !38, !noalias !35
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !38, !noalias !35
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !41

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !42

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !43

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.13"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #11
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.13"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser7Snippet14ComputeSnippetERKNSt3__16vectorINS1_4pairImmEENS1_9allocatorIS4_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEE(%"class.query_parser::Snippet"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string.13", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::basic_string.13", align 16
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.std::__1::basic_string.13", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string.13", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.logging::CheckError", align 8
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca %"class.std::__1::basic_string.13", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.logging::CheckError", align 8
  %19 = alloca %"class.logging::CheckError", align 8
  %20 = alloca %"class.std::__1::basic_string.13", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  %26 = bitcast %"class.std::__1::basic_string.13"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  store i8 5, i8* %27, align 1
  %28 = bitcast %"class.std::__1::basic_string.13"* %4 to i16*
  store i16 32, i16* %28, align 8
  %29 = getelementptr inbounds i16, i16* %28, i64 1
  store i16 46, i16* %29, align 2
  %30 = getelementptr inbounds i16, i16* %28, i64 2
  store i16 46, i16* %30, align 4
  %31 = getelementptr inbounds i16, i16* %28, i64 3
  store i16 46, i16* %31, align 2
  %32 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast i64* %32 to i16*
  store i16 32, i16* %33, align 8
  %34 = getelementptr inbounds i16, i16* %28, i64 5
  store i16 0, i16* %34, align 2
  %35 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #11
  store i32 0, i32* %5, align 4
  %36 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %45 = zext i8 %38 to i64
  %46 = select i1 %39, i8* %41, i8* %44
  %47 = select i1 %39, i64 %43, i64 %45
  %48 = call %struct.UText* @utext_openUTF8_69(%struct.UText* null, i8* %46, i64 %47, i32* nonnull %5) #11
  %49 = call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #11
  %50 = call %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIterator23createCharacterInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224) %49, i32* nonnull dereferenceable(4) %5) #11
  %51 = bitcast %"class.icu_69::BreakIterator"* %50 to void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)***
  %52 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)**, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %52, i64 8
  %54 = load void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)*, void (%"class.icu_69::BreakIterator"*, %struct.UText*, i32*)** %53, align 8
  call void %54(%"class.icu_69::BreakIterator"* %50, %struct.UText* %48, i32* nonnull dereferenceable(4) %5) #11
  %55 = bitcast %"class.std::__1::basic_string.13"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %55, i8 0, i64 24, i1 false) #11
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %60 = bitcast %"struct.std::__1::pair"** %59 to i64*
  %61 = bitcast %"class.std::__1::vector"* %1 to i64*
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %63 = bitcast %"class.logging::CheckError"* %7 to i8*
  %64 = bitcast %"class.logging::CheckError"* %8 to i8*
  %65 = bitcast %"class.icu_69::BreakIterator"* %50 to i8 (%"class.icu_69::BreakIterator"*, i32)***
  %66 = bitcast %"class.icu_69::BreakIterator"* %50 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %67 = bitcast %"class.icu_69::BreakIterator"* %50 to i32 (%"class.icu_69::BreakIterator"*)***
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %69 = bitcast %"class.std::__1::basic_string.13"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %69, i64 0, i32 1, i32 1
  %71 = bitcast %"class.std::__1::basic_string.13"* %6 to i16*
  %72 = bitcast %"class.logging::CheckError"* %9 to i8*
  %73 = bitcast %"class.std::__1::basic_string.13"* %10 to i8*
  %74 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %75 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::allocator"*
  %76 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = bitcast %"class.std::__1::basic_string.13"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %80, i64 0, i32 1, i32 1
  %82 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = bitcast %"class.std::__1::basic_string.13"* %10 to i16*
  %85 = bitcast %"class.std::__1::basic_string.13"* %10 to i8**
  %86 = bitcast %"class.std::__1::basic_string.13"* %12 to i8*
  %87 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.std::__1::basic_string.13"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.std::__1::basic_string.13"* %12 to i16*
  %97 = bitcast %"class.std::__1::basic_string.13"* %12 to i8**
  %98 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1
  %99 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1, i32 0, i32 1
  %100 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast %"struct.std::__1::pair"** %99 to i64*
  %102 = bitcast %"class.std::__1::vector"* %98 to i64*
  %103 = bitcast %"struct.std::__1::pair"** %100 to i64*
  %104 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %98, i64 0, i32 0, i32 0
  %105 = bitcast %"class.logging::CheckError"* %18 to i8*
  %106 = bitcast %"class.logging::CheckError"* %19 to i8*
  %107 = bitcast %"class.std::__1::basic_string.13"* %20 to i8*
  %108 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %109 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::basic_string.13"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %113, i64 0, i32 1, i32 1
  %115 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = bitcast %"class.std::__1::basic_string.13"* %20 to i16*
  %118 = bitcast %"class.std::__1::basic_string.13"* %20 to i8**
  %119 = bitcast %"class.logging::CheckError"* %14 to i8*
  %120 = bitcast %"class.logging::CheckError"* %15 to i8*
  %121 = bitcast %"class.std::__1::basic_string.13"* %16 to i8*
  %122 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %123 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = bitcast %"class.std::__1::basic_string.13"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %127, i64 0, i32 1, i32 1
  %129 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = bitcast %"class.std::__1::basic_string.13"* %16 to i16*
  %132 = bitcast %"class.std::__1::basic_string.13"* %16 to i8**
  br label %133

133:                                              ; preds = %1519, %3
  %134 = phi i64 [ 0, %3 ], [ %1520, %1519 ]
  %135 = phi i64 [ 0, %3 ], [ %849, %1519 ]
  %136 = load i64, i64* %60, align 8
  %137 = load i64, i64* %61, align 8
  %138 = sub i64 %136, %137
  %139 = ashr exact i64 %138, 4
  %140 = icmp ult i64 %135, %139
  %141 = inttoptr i64 %137 to %"struct.std::__1::pair"*
  br i1 %140, label %142, label %1527

142:                                              ; preds = %133
  %143 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 %135, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 %135, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = icmp ugt i64 %146, %144
  br i1 %147, label %150, label %148

148:                                              ; preds = %142
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 248, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #11
  %149 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  br label %150

150:                                              ; preds = %142, %148
  %151 = load i8, i8* %37, align 1
  %152 = icmp slt i8 %151, 0
  %153 = load i64, i64* %42, align 8
  %154 = zext i8 %151 to i64
  %155 = select i1 %152, i64 %153, i64 %154
  %156 = icmp ugt i64 %146, %155
  br i1 %156, label %157, label %159

157:                                              ; preds = %150
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 249, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0)) #11
  %158 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  br label %159

159:                                              ; preds = %150, %157
  %160 = trunc i64 %144 to i32
  %161 = load i8 (%"class.icu_69::BreakIterator"*, i32)**, i8 (%"class.icu_69::BreakIterator"*, i32)*** %65, align 8
  %162 = getelementptr inbounds i8 (%"class.icu_69::BreakIterator"*, i32)*, i8 (%"class.icu_69::BreakIterator"*, i32)** %161, i64 17
  %163 = load i8 (%"class.icu_69::BreakIterator"*, i32)*, i8 (%"class.icu_69::BreakIterator"*, i32)** %162, align 8
  %164 = call signext i8 %163(%"class.icu_69::BreakIterator"* %50, i32 %160) #11
  %165 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %66, align 8
  %166 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %165, i64 18
  %167 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %166, align 8
  %168 = call i32 %167(%"class.icu_69::BreakIterator"* %50, i32 -50) #11
  %169 = load i32 (%"class.icu_69::BreakIterator"*)**, i32 (%"class.icu_69::BreakIterator"*)*** %67, align 8
  %170 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %169, i64 14
  %171 = load i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %170, align 8
  %172 = call i32 %171(%"class.icu_69::BreakIterator"* %50) #11
  %173 = sext i32 %172 to i64
  %174 = icmp ult i64 %134, %173
  %175 = select i1 %174, i64 %173, i64 %134
  %176 = icmp ugt i64 %144, %175
  br i1 %176, label %177, label %573

177:                                              ; preds = %159
  %178 = icmp eq i64 %175, 0
  br i1 %178, label %362, label %179

179:                                              ; preds = %177
  %180 = load i8, i8* %68, align 1
  %181 = icmp slt i8 %180, 0
  %182 = load i16*, i16** %23, align 8
  %183 = load i64, i64* %24, align 8
  %184 = zext i8 %180 to i64
  %185 = select i1 %181, i16* %182, i16* %28
  %186 = select i1 %181, i64 %183, i64 %184
  %187 = load i8, i8* %70, align 1
  %188 = icmp slt i8 %187, 0
  br i1 %188, label %189, label %194

189:                                              ; preds = %179
  %190 = load i64, i64* %58, align 16
  %191 = and i64 %190, 9223372036854775807
  %192 = add nsw i64 %191, -1
  %193 = load i64, i64* %57, align 8
  br label %196

194:                                              ; preds = %179
  %195 = zext i8 %187 to i64
  br label %196

196:                                              ; preds = %194, %189
  %197 = phi i64 [ %192, %189 ], [ 10, %194 ]
  %198 = phi i64 [ %193, %189 ], [ %195, %194 ]
  %199 = sub i64 %197, %198
  %200 = icmp ult i64 %199, %186
  br i1 %200, label %359, label %201

201:                                              ; preds = %196
  %202 = icmp eq i64 %186, 0
  br i1 %202, label %362, label %203

203:                                              ; preds = %201
  %204 = load i16*, i16** %56, align 16
  %205 = select i1 %188, i16* %204, i16* %71
  %206 = getelementptr inbounds i16, i16* %205, i64 %198
  %207 = icmp ult i64 %186, 16
  br i1 %207, label %297, label %208

208:                                              ; preds = %203
  %209 = add i64 %186, %198
  %210 = getelementptr i16, i16* %205, i64 %209
  %211 = getelementptr i16, i16* %185, i64 %186
  %212 = icmp ult i16* %206, %211
  %213 = icmp ult i16* %185, %210
  %214 = and i1 %212, %213
  br i1 %214, label %297, label %215

215:                                              ; preds = %208
  %216 = and i64 %186, -16
  %217 = sub i64 %186, %216
  %218 = getelementptr i16, i16* %185, i64 %216
  %219 = getelementptr i16, i16* %206, i64 %216
  %220 = add i64 %216, -16
  %221 = lshr exact i64 %220, 4
  %222 = add nuw nsw i64 %221, 1
  %223 = and i64 %222, 3
  %224 = icmp ult i64 %220, 48
  br i1 %224, label %276, label %225

225:                                              ; preds = %215
  %226 = sub nsw i64 %222, %223
  br label %227

227:                                              ; preds = %227, %225
  %228 = phi i64 [ 0, %225 ], [ %273, %227 ]
  %229 = phi i64 [ %226, %225 ], [ %274, %227 ]
  %230 = getelementptr i16, i16* %185, i64 %228
  %231 = getelementptr i16, i16* %206, i64 %228
  %232 = bitcast i16* %230 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !44
  %234 = getelementptr i16, i16* %230, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  %236 = load <8 x i16>, <8 x i16>* %235, align 2, !alias.scope !44
  %237 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %237, align 2, !alias.scope !47, !noalias !44
  %238 = getelementptr i16, i16* %231, i64 8
  %239 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %236, <8 x i16>* %239, align 2, !alias.scope !47, !noalias !44
  %240 = or i64 %228, 16
  %241 = getelementptr i16, i16* %185, i64 %240
  %242 = getelementptr i16, i16* %206, i64 %240
  %243 = bitcast i16* %241 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !44
  %245 = getelementptr i16, i16* %241, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  %247 = load <8 x i16>, <8 x i16>* %246, align 2, !alias.scope !44
  %248 = bitcast i16* %242 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %248, align 2, !alias.scope !47, !noalias !44
  %249 = getelementptr i16, i16* %242, i64 8
  %250 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %247, <8 x i16>* %250, align 2, !alias.scope !47, !noalias !44
  %251 = or i64 %228, 32
  %252 = getelementptr i16, i16* %185, i64 %251
  %253 = getelementptr i16, i16* %206, i64 %251
  %254 = bitcast i16* %252 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !44
  %256 = getelementptr i16, i16* %252, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !44
  %259 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %259, align 2, !alias.scope !47, !noalias !44
  %260 = getelementptr i16, i16* %253, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %261, align 2, !alias.scope !47, !noalias !44
  %262 = or i64 %228, 48
  %263 = getelementptr i16, i16* %185, i64 %262
  %264 = getelementptr i16, i16* %206, i64 %262
  %265 = bitcast i16* %263 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !44
  %267 = getelementptr i16, i16* %263, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !44
  %270 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %270, align 2, !alias.scope !47, !noalias !44
  %271 = getelementptr i16, i16* %264, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %272, align 2, !alias.scope !47, !noalias !44
  %273 = add i64 %228, 64
  %274 = add i64 %229, -4
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %276, label %227, !llvm.loop !49

276:                                              ; preds = %227, %215
  %277 = phi i64 [ 0, %215 ], [ %273, %227 ]
  %278 = icmp eq i64 %223, 0
  br i1 %278, label %295, label %279

279:                                              ; preds = %276, %279
  %280 = phi i64 [ %292, %279 ], [ %277, %276 ]
  %281 = phi i64 [ %293, %279 ], [ %223, %276 ]
  %282 = getelementptr i16, i16* %185, i64 %280
  %283 = getelementptr i16, i16* %206, i64 %280
  %284 = bitcast i16* %282 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !44
  %286 = getelementptr i16, i16* %282, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !44
  %289 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %289, align 2, !alias.scope !47, !noalias !44
  %290 = getelementptr i16, i16* %283, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %291, align 2, !alias.scope !47, !noalias !44
  %292 = add i64 %280, 16
  %293 = add i64 %281, -1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %279, !llvm.loop !50

295:                                              ; preds = %279, %276
  %296 = icmp eq i64 %186, %216
  br i1 %296, label %350, label %297

297:                                              ; preds = %295, %208, %203
  %298 = phi i64 [ %186, %208 ], [ %186, %203 ], [ %217, %295 ]
  %299 = phi i16* [ %185, %208 ], [ %185, %203 ], [ %218, %295 ]
  %300 = phi i16* [ %206, %208 ], [ %206, %203 ], [ %219, %295 ]
  %301 = add i64 %298, -1
  %302 = and i64 %298, 7
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %315, label %304

304:                                              ; preds = %297, %304
  %305 = phi i64 [ %310, %304 ], [ %298, %297 ]
  %306 = phi i16* [ %312, %304 ], [ %299, %297 ]
  %307 = phi i16* [ %311, %304 ], [ %300, %297 ]
  %308 = phi i64 [ %313, %304 ], [ %302, %297 ]
  %309 = load i16, i16* %306, align 2
  store i16 %309, i16* %307, align 2
  %310 = add i64 %305, -1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = getelementptr inbounds i16, i16* %306, i64 1
  %313 = add i64 %308, -1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %304, !llvm.loop !51

315:                                              ; preds = %304, %297
  %316 = phi i64 [ %298, %297 ], [ %310, %304 ]
  %317 = phi i16* [ %299, %297 ], [ %312, %304 ]
  %318 = phi i16* [ %300, %297 ], [ %311, %304 ]
  %319 = icmp ult i64 %301, 7
  br i1 %319, label %350, label %320

320:                                              ; preds = %315, %320
  %321 = phi i64 [ %346, %320 ], [ %316, %315 ]
  %322 = phi i16* [ %348, %320 ], [ %317, %315 ]
  %323 = phi i16* [ %347, %320 ], [ %318, %315 ]
  %324 = load i16, i16* %322, align 2
  store i16 %324, i16* %323, align 2
  %325 = getelementptr inbounds i16, i16* %323, i64 1
  %326 = getelementptr inbounds i16, i16* %322, i64 1
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %323, i64 2
  %329 = getelementptr inbounds i16, i16* %322, i64 2
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %323, i64 3
  %332 = getelementptr inbounds i16, i16* %322, i64 3
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %323, i64 4
  %335 = getelementptr inbounds i16, i16* %322, i64 4
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %323, i64 5
  %338 = getelementptr inbounds i16, i16* %322, i64 5
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %323, i64 6
  %341 = getelementptr inbounds i16, i16* %322, i64 6
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = getelementptr inbounds i16, i16* %323, i64 7
  %344 = getelementptr inbounds i16, i16* %322, i64 7
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = add i64 %321, -8
  %347 = getelementptr inbounds i16, i16* %323, i64 8
  %348 = getelementptr inbounds i16, i16* %322, i64 8
  %349 = icmp eq i64 %346, 0
  br i1 %349, label %350, label %320, !llvm.loop !52

350:                                              ; preds = %315, %320, %295
  %351 = add i64 %198, %186
  %352 = load i8, i8* %70, align 1
  %353 = icmp slt i8 %352, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %350
  store i64 %351, i64* %57, align 8
  br label %357

355:                                              ; preds = %350
  %356 = trunc i64 %351 to i8
  store i8 %356, i8* %70, align 1
  br label %357

357:                                              ; preds = %355, %354
  %358 = getelementptr inbounds i16, i16* %205, i64 %351
  store i16 0, i16* %358, align 2
  br label %362

359:                                              ; preds = %196
  %360 = add i64 %198, %186
  %361 = sub i64 %360, %197
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.13"* nonnull %6, i64 %197, i64 %361, i64 %198, i64 %198, i64 0, i64 %186, i16* %185) #11
  br label %362

362:                                              ; preds = %359, %357, %201, %177
  %363 = load i8, i8* %37, align 1
  %364 = icmp slt i8 %363, 0
  %365 = load i64, i64* %42, align 8
  %366 = zext i8 %363 to i64
  %367 = select i1 %364, i64 %365, i64 %366
  %368 = icmp ult i64 %175, %367
  br i1 %368, label %371, label %369

369:                                              ; preds = %362
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 259, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0)) #11
  %370 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %371

371:                                              ; preds = %362, %369
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #11
  %372 = sub i64 %144, %175
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %11, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %175, i64 %372, %"class.std::__1::allocator"* dereferenceable(1) %75) #11
  %373 = load i8, i8* %77, align 1
  %374 = icmp slt i8 %373, 0
  %375 = load i8*, i8** %78, align 8
  %376 = select i1 %374, i8* %375, i8* %74
  %377 = load i64, i64* %79, align 8
  %378 = zext i8 %373 to i64
  %379 = select i1 %374, i64 %377, i64 %378
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %10, i8* %376, i64 %379) #11
  %380 = load i8, i8* %81, align 1
  %381 = icmp slt i8 %380, 0
  %382 = load i16*, i16** %82, align 8
  %383 = load i64, i64* %83, align 8
  %384 = zext i8 %380 to i64
  %385 = select i1 %381, i16* %382, i16* %84
  %386 = select i1 %381, i64 %383, i64 %384
  %387 = load i8, i8* %70, align 1
  %388 = icmp slt i8 %387, 0
  br i1 %388, label %389, label %394

389:                                              ; preds = %371
  %390 = load i64, i64* %58, align 16
  %391 = and i64 %390, 9223372036854775807
  %392 = add nsw i64 %391, -1
  %393 = load i64, i64* %57, align 8
  br label %396

394:                                              ; preds = %371
  %395 = zext i8 %387 to i64
  br label %396

396:                                              ; preds = %394, %389
  %397 = phi i64 [ %392, %389 ], [ 10, %394 ]
  %398 = phi i64 [ %393, %389 ], [ %395, %394 ]
  %399 = sub i64 %397, %398
  %400 = icmp ult i64 %399, %386
  br i1 %400, label %559, label %401

401:                                              ; preds = %396
  %402 = icmp eq i64 %386, 0
  br i1 %402, label %562, label %403

403:                                              ; preds = %401
  %404 = load i16*, i16** %56, align 16
  %405 = select i1 %388, i16* %404, i16* %71
  %406 = getelementptr inbounds i16, i16* %405, i64 %398
  %407 = icmp ult i64 %386, 16
  br i1 %407, label %497, label %408

408:                                              ; preds = %403
  %409 = add i64 %386, %398
  %410 = getelementptr i16, i16* %405, i64 %409
  %411 = getelementptr i16, i16* %385, i64 %386
  %412 = icmp ult i16* %406, %411
  %413 = icmp ult i16* %385, %410
  %414 = and i1 %412, %413
  br i1 %414, label %497, label %415

415:                                              ; preds = %408
  %416 = and i64 %386, -16
  %417 = sub i64 %386, %416
  %418 = getelementptr i16, i16* %385, i64 %416
  %419 = getelementptr i16, i16* %406, i64 %416
  %420 = add i64 %416, -16
  %421 = lshr exact i64 %420, 4
  %422 = add nuw nsw i64 %421, 1
  %423 = and i64 %422, 3
  %424 = icmp ult i64 %420, 48
  br i1 %424, label %476, label %425

425:                                              ; preds = %415
  %426 = sub nsw i64 %422, %423
  br label %427

427:                                              ; preds = %427, %425
  %428 = phi i64 [ 0, %425 ], [ %473, %427 ]
  %429 = phi i64 [ %426, %425 ], [ %474, %427 ]
  %430 = getelementptr i16, i16* %385, i64 %428
  %431 = getelementptr i16, i16* %406, i64 %428
  %432 = bitcast i16* %430 to <8 x i16>*
  %433 = load <8 x i16>, <8 x i16>* %432, align 2, !alias.scope !53
  %434 = getelementptr i16, i16* %430, i64 8
  %435 = bitcast i16* %434 to <8 x i16>*
  %436 = load <8 x i16>, <8 x i16>* %435, align 2, !alias.scope !53
  %437 = bitcast i16* %431 to <8 x i16>*
  store <8 x i16> %433, <8 x i16>* %437, align 2, !alias.scope !56, !noalias !53
  %438 = getelementptr i16, i16* %431, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %436, <8 x i16>* %439, align 2, !alias.scope !56, !noalias !53
  %440 = or i64 %428, 16
  %441 = getelementptr i16, i16* %385, i64 %440
  %442 = getelementptr i16, i16* %406, i64 %440
  %443 = bitcast i16* %441 to <8 x i16>*
  %444 = load <8 x i16>, <8 x i16>* %443, align 2, !alias.scope !53
  %445 = getelementptr i16, i16* %441, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  %447 = load <8 x i16>, <8 x i16>* %446, align 2, !alias.scope !53
  %448 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %444, <8 x i16>* %448, align 2, !alias.scope !56, !noalias !53
  %449 = getelementptr i16, i16* %442, i64 8
  %450 = bitcast i16* %449 to <8 x i16>*
  store <8 x i16> %447, <8 x i16>* %450, align 2, !alias.scope !56, !noalias !53
  %451 = or i64 %428, 32
  %452 = getelementptr i16, i16* %385, i64 %451
  %453 = getelementptr i16, i16* %406, i64 %451
  %454 = bitcast i16* %452 to <8 x i16>*
  %455 = load <8 x i16>, <8 x i16>* %454, align 2, !alias.scope !53
  %456 = getelementptr i16, i16* %452, i64 8
  %457 = bitcast i16* %456 to <8 x i16>*
  %458 = load <8 x i16>, <8 x i16>* %457, align 2, !alias.scope !53
  %459 = bitcast i16* %453 to <8 x i16>*
  store <8 x i16> %455, <8 x i16>* %459, align 2, !alias.scope !56, !noalias !53
  %460 = getelementptr i16, i16* %453, i64 8
  %461 = bitcast i16* %460 to <8 x i16>*
  store <8 x i16> %458, <8 x i16>* %461, align 2, !alias.scope !56, !noalias !53
  %462 = or i64 %428, 48
  %463 = getelementptr i16, i16* %385, i64 %462
  %464 = getelementptr i16, i16* %406, i64 %462
  %465 = bitcast i16* %463 to <8 x i16>*
  %466 = load <8 x i16>, <8 x i16>* %465, align 2, !alias.scope !53
  %467 = getelementptr i16, i16* %463, i64 8
  %468 = bitcast i16* %467 to <8 x i16>*
  %469 = load <8 x i16>, <8 x i16>* %468, align 2, !alias.scope !53
  %470 = bitcast i16* %464 to <8 x i16>*
  store <8 x i16> %466, <8 x i16>* %470, align 2, !alias.scope !56, !noalias !53
  %471 = getelementptr i16, i16* %464, i64 8
  %472 = bitcast i16* %471 to <8 x i16>*
  store <8 x i16> %469, <8 x i16>* %472, align 2, !alias.scope !56, !noalias !53
  %473 = add i64 %428, 64
  %474 = add i64 %429, -4
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %476, label %427, !llvm.loop !58

476:                                              ; preds = %427, %415
  %477 = phi i64 [ 0, %415 ], [ %473, %427 ]
  %478 = icmp eq i64 %423, 0
  br i1 %478, label %495, label %479

479:                                              ; preds = %476, %479
  %480 = phi i64 [ %492, %479 ], [ %477, %476 ]
  %481 = phi i64 [ %493, %479 ], [ %423, %476 ]
  %482 = getelementptr i16, i16* %385, i64 %480
  %483 = getelementptr i16, i16* %406, i64 %480
  %484 = bitcast i16* %482 to <8 x i16>*
  %485 = load <8 x i16>, <8 x i16>* %484, align 2, !alias.scope !53
  %486 = getelementptr i16, i16* %482, i64 8
  %487 = bitcast i16* %486 to <8 x i16>*
  %488 = load <8 x i16>, <8 x i16>* %487, align 2, !alias.scope !53
  %489 = bitcast i16* %483 to <8 x i16>*
  store <8 x i16> %485, <8 x i16>* %489, align 2, !alias.scope !56, !noalias !53
  %490 = getelementptr i16, i16* %483, i64 8
  %491 = bitcast i16* %490 to <8 x i16>*
  store <8 x i16> %488, <8 x i16>* %491, align 2, !alias.scope !56, !noalias !53
  %492 = add i64 %480, 16
  %493 = add i64 %481, -1
  %494 = icmp eq i64 %493, 0
  br i1 %494, label %495, label %479, !llvm.loop !59

495:                                              ; preds = %479, %476
  %496 = icmp eq i64 %386, %416
  br i1 %496, label %550, label %497

497:                                              ; preds = %495, %408, %403
  %498 = phi i64 [ %386, %408 ], [ %386, %403 ], [ %417, %495 ]
  %499 = phi i16* [ %385, %408 ], [ %385, %403 ], [ %418, %495 ]
  %500 = phi i16* [ %406, %408 ], [ %406, %403 ], [ %419, %495 ]
  %501 = add i64 %498, -1
  %502 = and i64 %498, 7
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %515, label %504

504:                                              ; preds = %497, %504
  %505 = phi i64 [ %510, %504 ], [ %498, %497 ]
  %506 = phi i16* [ %512, %504 ], [ %499, %497 ]
  %507 = phi i16* [ %511, %504 ], [ %500, %497 ]
  %508 = phi i64 [ %513, %504 ], [ %502, %497 ]
  %509 = load i16, i16* %506, align 2
  store i16 %509, i16* %507, align 2
  %510 = add i64 %505, -1
  %511 = getelementptr inbounds i16, i16* %507, i64 1
  %512 = getelementptr inbounds i16, i16* %506, i64 1
  %513 = add i64 %508, -1
  %514 = icmp eq i64 %513, 0
  br i1 %514, label %515, label %504, !llvm.loop !60

515:                                              ; preds = %504, %497
  %516 = phi i64 [ %498, %497 ], [ %510, %504 ]
  %517 = phi i16* [ %499, %497 ], [ %512, %504 ]
  %518 = phi i16* [ %500, %497 ], [ %511, %504 ]
  %519 = icmp ult i64 %501, 7
  br i1 %519, label %550, label %520

520:                                              ; preds = %515, %520
  %521 = phi i64 [ %546, %520 ], [ %516, %515 ]
  %522 = phi i16* [ %548, %520 ], [ %517, %515 ]
  %523 = phi i16* [ %547, %520 ], [ %518, %515 ]
  %524 = load i16, i16* %522, align 2
  store i16 %524, i16* %523, align 2
  %525 = getelementptr inbounds i16, i16* %523, i64 1
  %526 = getelementptr inbounds i16, i16* %522, i64 1
  %527 = load i16, i16* %526, align 2
  store i16 %527, i16* %525, align 2
  %528 = getelementptr inbounds i16, i16* %523, i64 2
  %529 = getelementptr inbounds i16, i16* %522, i64 2
  %530 = load i16, i16* %529, align 2
  store i16 %530, i16* %528, align 2
  %531 = getelementptr inbounds i16, i16* %523, i64 3
  %532 = getelementptr inbounds i16, i16* %522, i64 3
  %533 = load i16, i16* %532, align 2
  store i16 %533, i16* %531, align 2
  %534 = getelementptr inbounds i16, i16* %523, i64 4
  %535 = getelementptr inbounds i16, i16* %522, i64 4
  %536 = load i16, i16* %535, align 2
  store i16 %536, i16* %534, align 2
  %537 = getelementptr inbounds i16, i16* %523, i64 5
  %538 = getelementptr inbounds i16, i16* %522, i64 5
  %539 = load i16, i16* %538, align 2
  store i16 %539, i16* %537, align 2
  %540 = getelementptr inbounds i16, i16* %523, i64 6
  %541 = getelementptr inbounds i16, i16* %522, i64 6
  %542 = load i16, i16* %541, align 2
  store i16 %542, i16* %540, align 2
  %543 = getelementptr inbounds i16, i16* %523, i64 7
  %544 = getelementptr inbounds i16, i16* %522, i64 7
  %545 = load i16, i16* %544, align 2
  store i16 %545, i16* %543, align 2
  %546 = add i64 %521, -8
  %547 = getelementptr inbounds i16, i16* %523, i64 8
  %548 = getelementptr inbounds i16, i16* %522, i64 8
  %549 = icmp eq i64 %546, 0
  br i1 %549, label %550, label %520, !llvm.loop !61

550:                                              ; preds = %515, %520, %495
  %551 = add i64 %398, %386
  %552 = load i8, i8* %70, align 1
  %553 = icmp slt i8 %552, 0
  br i1 %553, label %554, label %555

554:                                              ; preds = %550
  store i64 %551, i64* %57, align 8
  br label %557

555:                                              ; preds = %550
  %556 = trunc i64 %551 to i8
  store i8 %556, i8* %70, align 1
  br label %557

557:                                              ; preds = %555, %554
  %558 = getelementptr inbounds i16, i16* %405, i64 %551
  store i16 0, i16* %558, align 2
  br label %562

559:                                              ; preds = %396
  %560 = add i64 %398, %386
  %561 = sub i64 %560, %397
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.13"* nonnull %6, i64 %397, i64 %561, i64 %398, i64 %398, i64 0, i64 %386, i16* %385) #11
  br label %562

562:                                              ; preds = %401, %557, %559
  %563 = load i8, i8* %81, align 1
  %564 = icmp slt i8 %563, 0
  br i1 %564, label %565, label %567

565:                                              ; preds = %562
  %566 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %566) #12
  br label %567

567:                                              ; preds = %562, %565
  %568 = load i8, i8* %77, align 1
  %569 = icmp slt i8 %568, 0
  br i1 %569, label %570, label %572

570:                                              ; preds = %567
  %571 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %571) #12
  br label %572

572:                                              ; preds = %567, %570
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #11
  br label %573

573:                                              ; preds = %572, %159
  %574 = load i8, i8* %70, align 1
  %575 = icmp slt i8 %574, 0
  %576 = load i64, i64* %57, align 8
  %577 = zext i8 %574 to i64
  %578 = select i1 %575, i64 %576, i64 %577
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #11
  %579 = sub i64 %146, %144
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %13, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %144, i64 %579, %"class.std::__1::allocator"* dereferenceable(1) %75) #11
  %580 = load i8, i8* %89, align 1
  %581 = icmp slt i8 %580, 0
  %582 = load i8*, i8** %90, align 8
  %583 = select i1 %581, i8* %582, i8* %87
  %584 = load i64, i64* %91, align 8
  %585 = zext i8 %580 to i64
  %586 = select i1 %581, i64 %584, i64 %585
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %12, i8* %583, i64 %586) #11
  %587 = load i8, i8* %93, align 1
  %588 = icmp slt i8 %587, 0
  %589 = load i16*, i16** %94, align 8
  %590 = load i64, i64* %95, align 8
  %591 = zext i8 %587 to i64
  %592 = select i1 %588, i16* %589, i16* %96
  %593 = select i1 %588, i64 %590, i64 %591
  %594 = load i8, i8* %70, align 1
  %595 = icmp slt i8 %594, 0
  br i1 %595, label %596, label %601

596:                                              ; preds = %573
  %597 = load i64, i64* %58, align 16
  %598 = and i64 %597, 9223372036854775807
  %599 = add nsw i64 %598, -1
  %600 = load i64, i64* %57, align 8
  br label %603

601:                                              ; preds = %573
  %602 = zext i8 %594 to i64
  br label %603

603:                                              ; preds = %601, %596
  %604 = phi i64 [ %599, %596 ], [ 10, %601 ]
  %605 = phi i64 [ %600, %596 ], [ %602, %601 ]
  %606 = sub i64 %604, %605
  %607 = icmp ult i64 %606, %593
  br i1 %607, label %766, label %608

608:                                              ; preds = %603
  %609 = icmp eq i64 %593, 0
  br i1 %609, label %769, label %610

610:                                              ; preds = %608
  %611 = load i16*, i16** %56, align 16
  %612 = select i1 %595, i16* %611, i16* %71
  %613 = getelementptr inbounds i16, i16* %612, i64 %605
  %614 = icmp ult i64 %593, 16
  br i1 %614, label %704, label %615

615:                                              ; preds = %610
  %616 = add i64 %593, %605
  %617 = getelementptr i16, i16* %612, i64 %616
  %618 = getelementptr i16, i16* %592, i64 %593
  %619 = icmp ult i16* %613, %618
  %620 = icmp ult i16* %592, %617
  %621 = and i1 %619, %620
  br i1 %621, label %704, label %622

622:                                              ; preds = %615
  %623 = and i64 %593, -16
  %624 = sub i64 %593, %623
  %625 = getelementptr i16, i16* %592, i64 %623
  %626 = getelementptr i16, i16* %613, i64 %623
  %627 = add i64 %623, -16
  %628 = lshr exact i64 %627, 4
  %629 = add nuw nsw i64 %628, 1
  %630 = and i64 %629, 3
  %631 = icmp ult i64 %627, 48
  br i1 %631, label %683, label %632

632:                                              ; preds = %622
  %633 = sub nsw i64 %629, %630
  br label %634

634:                                              ; preds = %634, %632
  %635 = phi i64 [ 0, %632 ], [ %680, %634 ]
  %636 = phi i64 [ %633, %632 ], [ %681, %634 ]
  %637 = getelementptr i16, i16* %592, i64 %635
  %638 = getelementptr i16, i16* %613, i64 %635
  %639 = bitcast i16* %637 to <8 x i16>*
  %640 = load <8 x i16>, <8 x i16>* %639, align 2, !alias.scope !62
  %641 = getelementptr i16, i16* %637, i64 8
  %642 = bitcast i16* %641 to <8 x i16>*
  %643 = load <8 x i16>, <8 x i16>* %642, align 2, !alias.scope !62
  %644 = bitcast i16* %638 to <8 x i16>*
  store <8 x i16> %640, <8 x i16>* %644, align 2, !alias.scope !65, !noalias !62
  %645 = getelementptr i16, i16* %638, i64 8
  %646 = bitcast i16* %645 to <8 x i16>*
  store <8 x i16> %643, <8 x i16>* %646, align 2, !alias.scope !65, !noalias !62
  %647 = or i64 %635, 16
  %648 = getelementptr i16, i16* %592, i64 %647
  %649 = getelementptr i16, i16* %613, i64 %647
  %650 = bitcast i16* %648 to <8 x i16>*
  %651 = load <8 x i16>, <8 x i16>* %650, align 2, !alias.scope !62
  %652 = getelementptr i16, i16* %648, i64 8
  %653 = bitcast i16* %652 to <8 x i16>*
  %654 = load <8 x i16>, <8 x i16>* %653, align 2, !alias.scope !62
  %655 = bitcast i16* %649 to <8 x i16>*
  store <8 x i16> %651, <8 x i16>* %655, align 2, !alias.scope !65, !noalias !62
  %656 = getelementptr i16, i16* %649, i64 8
  %657 = bitcast i16* %656 to <8 x i16>*
  store <8 x i16> %654, <8 x i16>* %657, align 2, !alias.scope !65, !noalias !62
  %658 = or i64 %635, 32
  %659 = getelementptr i16, i16* %592, i64 %658
  %660 = getelementptr i16, i16* %613, i64 %658
  %661 = bitcast i16* %659 to <8 x i16>*
  %662 = load <8 x i16>, <8 x i16>* %661, align 2, !alias.scope !62
  %663 = getelementptr i16, i16* %659, i64 8
  %664 = bitcast i16* %663 to <8 x i16>*
  %665 = load <8 x i16>, <8 x i16>* %664, align 2, !alias.scope !62
  %666 = bitcast i16* %660 to <8 x i16>*
  store <8 x i16> %662, <8 x i16>* %666, align 2, !alias.scope !65, !noalias !62
  %667 = getelementptr i16, i16* %660, i64 8
  %668 = bitcast i16* %667 to <8 x i16>*
  store <8 x i16> %665, <8 x i16>* %668, align 2, !alias.scope !65, !noalias !62
  %669 = or i64 %635, 48
  %670 = getelementptr i16, i16* %592, i64 %669
  %671 = getelementptr i16, i16* %613, i64 %669
  %672 = bitcast i16* %670 to <8 x i16>*
  %673 = load <8 x i16>, <8 x i16>* %672, align 2, !alias.scope !62
  %674 = getelementptr i16, i16* %670, i64 8
  %675 = bitcast i16* %674 to <8 x i16>*
  %676 = load <8 x i16>, <8 x i16>* %675, align 2, !alias.scope !62
  %677 = bitcast i16* %671 to <8 x i16>*
  store <8 x i16> %673, <8 x i16>* %677, align 2, !alias.scope !65, !noalias !62
  %678 = getelementptr i16, i16* %671, i64 8
  %679 = bitcast i16* %678 to <8 x i16>*
  store <8 x i16> %676, <8 x i16>* %679, align 2, !alias.scope !65, !noalias !62
  %680 = add i64 %635, 64
  %681 = add i64 %636, -4
  %682 = icmp eq i64 %681, 0
  br i1 %682, label %683, label %634, !llvm.loop !67

683:                                              ; preds = %634, %622
  %684 = phi i64 [ 0, %622 ], [ %680, %634 ]
  %685 = icmp eq i64 %630, 0
  br i1 %685, label %702, label %686

686:                                              ; preds = %683, %686
  %687 = phi i64 [ %699, %686 ], [ %684, %683 ]
  %688 = phi i64 [ %700, %686 ], [ %630, %683 ]
  %689 = getelementptr i16, i16* %592, i64 %687
  %690 = getelementptr i16, i16* %613, i64 %687
  %691 = bitcast i16* %689 to <8 x i16>*
  %692 = load <8 x i16>, <8 x i16>* %691, align 2, !alias.scope !62
  %693 = getelementptr i16, i16* %689, i64 8
  %694 = bitcast i16* %693 to <8 x i16>*
  %695 = load <8 x i16>, <8 x i16>* %694, align 2, !alias.scope !62
  %696 = bitcast i16* %690 to <8 x i16>*
  store <8 x i16> %692, <8 x i16>* %696, align 2, !alias.scope !65, !noalias !62
  %697 = getelementptr i16, i16* %690, i64 8
  %698 = bitcast i16* %697 to <8 x i16>*
  store <8 x i16> %695, <8 x i16>* %698, align 2, !alias.scope !65, !noalias !62
  %699 = add i64 %687, 16
  %700 = add i64 %688, -1
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %702, label %686, !llvm.loop !68

702:                                              ; preds = %686, %683
  %703 = icmp eq i64 %593, %623
  br i1 %703, label %757, label %704

704:                                              ; preds = %702, %615, %610
  %705 = phi i64 [ %593, %615 ], [ %593, %610 ], [ %624, %702 ]
  %706 = phi i16* [ %592, %615 ], [ %592, %610 ], [ %625, %702 ]
  %707 = phi i16* [ %613, %615 ], [ %613, %610 ], [ %626, %702 ]
  %708 = add i64 %705, -1
  %709 = and i64 %705, 7
  %710 = icmp eq i64 %709, 0
  br i1 %710, label %722, label %711

711:                                              ; preds = %704, %711
  %712 = phi i64 [ %717, %711 ], [ %705, %704 ]
  %713 = phi i16* [ %719, %711 ], [ %706, %704 ]
  %714 = phi i16* [ %718, %711 ], [ %707, %704 ]
  %715 = phi i64 [ %720, %711 ], [ %709, %704 ]
  %716 = load i16, i16* %713, align 2
  store i16 %716, i16* %714, align 2
  %717 = add i64 %712, -1
  %718 = getelementptr inbounds i16, i16* %714, i64 1
  %719 = getelementptr inbounds i16, i16* %713, i64 1
  %720 = add i64 %715, -1
  %721 = icmp eq i64 %720, 0
  br i1 %721, label %722, label %711, !llvm.loop !69

722:                                              ; preds = %711, %704
  %723 = phi i64 [ %705, %704 ], [ %717, %711 ]
  %724 = phi i16* [ %706, %704 ], [ %719, %711 ]
  %725 = phi i16* [ %707, %704 ], [ %718, %711 ]
  %726 = icmp ult i64 %708, 7
  br i1 %726, label %757, label %727

727:                                              ; preds = %722, %727
  %728 = phi i64 [ %753, %727 ], [ %723, %722 ]
  %729 = phi i16* [ %755, %727 ], [ %724, %722 ]
  %730 = phi i16* [ %754, %727 ], [ %725, %722 ]
  %731 = load i16, i16* %729, align 2
  store i16 %731, i16* %730, align 2
  %732 = getelementptr inbounds i16, i16* %730, i64 1
  %733 = getelementptr inbounds i16, i16* %729, i64 1
  %734 = load i16, i16* %733, align 2
  store i16 %734, i16* %732, align 2
  %735 = getelementptr inbounds i16, i16* %730, i64 2
  %736 = getelementptr inbounds i16, i16* %729, i64 2
  %737 = load i16, i16* %736, align 2
  store i16 %737, i16* %735, align 2
  %738 = getelementptr inbounds i16, i16* %730, i64 3
  %739 = getelementptr inbounds i16, i16* %729, i64 3
  %740 = load i16, i16* %739, align 2
  store i16 %740, i16* %738, align 2
  %741 = getelementptr inbounds i16, i16* %730, i64 4
  %742 = getelementptr inbounds i16, i16* %729, i64 4
  %743 = load i16, i16* %742, align 2
  store i16 %743, i16* %741, align 2
  %744 = getelementptr inbounds i16, i16* %730, i64 5
  %745 = getelementptr inbounds i16, i16* %729, i64 5
  %746 = load i16, i16* %745, align 2
  store i16 %746, i16* %744, align 2
  %747 = getelementptr inbounds i16, i16* %730, i64 6
  %748 = getelementptr inbounds i16, i16* %729, i64 6
  %749 = load i16, i16* %748, align 2
  store i16 %749, i16* %747, align 2
  %750 = getelementptr inbounds i16, i16* %730, i64 7
  %751 = getelementptr inbounds i16, i16* %729, i64 7
  %752 = load i16, i16* %751, align 2
  store i16 %752, i16* %750, align 2
  %753 = add i64 %728, -8
  %754 = getelementptr inbounds i16, i16* %730, i64 8
  %755 = getelementptr inbounds i16, i16* %729, i64 8
  %756 = icmp eq i64 %753, 0
  br i1 %756, label %757, label %727, !llvm.loop !70

757:                                              ; preds = %722, %727, %702
  %758 = add i64 %605, %593
  %759 = load i8, i8* %70, align 1
  %760 = icmp slt i8 %759, 0
  br i1 %760, label %761, label %762

761:                                              ; preds = %757
  store i64 %758, i64* %57, align 8
  br label %764

762:                                              ; preds = %757
  %763 = trunc i64 %758 to i8
  store i8 %763, i8* %70, align 1
  br label %764

764:                                              ; preds = %762, %761
  %765 = getelementptr inbounds i16, i16* %612, i64 %758
  store i16 0, i16* %765, align 2
  br label %769

766:                                              ; preds = %603
  %767 = add i64 %605, %593
  %768 = sub i64 %767, %604
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.13"* nonnull %6, i64 %604, i64 %768, i64 %605, i64 %605, i64 0, i64 %593, i16* %592) #11
  br label %769

769:                                              ; preds = %608, %764, %766
  %770 = load i8, i8* %93, align 1
  %771 = icmp slt i8 %770, 0
  br i1 %771, label %772, label %774

772:                                              ; preds = %769
  %773 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %773) #12
  br label %774

774:                                              ; preds = %769, %772
  %775 = load i8, i8* %89, align 1
  %776 = icmp slt i8 %775, 0
  br i1 %776, label %777, label %779

777:                                              ; preds = %774
  %778 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %778) #12
  br label %779

779:                                              ; preds = %774, %777
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %780 = load i8, i8* %70, align 1
  %781 = icmp slt i8 %780, 0
  %782 = load i64, i64* %57, align 8
  %783 = zext i8 %780 to i64
  %784 = select i1 %781, i64 %782, i64 %783
  %785 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %99, align 8
  %786 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %100, align 8
  %787 = icmp ult %"struct.std::__1::pair"* %785, %786
  %788 = ptrtoint %"struct.std::__1::pair"* %786 to i64
  br i1 %787, label %789, label %794

789:                                              ; preds = %779
  %790 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %785, i64 0, i32 0
  store i64 %578, i64* %790, align 8
  %791 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %785, i64 0, i32 1
  store i64 %784, i64* %791, align 8
  %792 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %785, i64 1
  %793 = ptrtoint %"struct.std::__1::pair"* %792 to i64
  store i64 %793, i64* %101, align 8
  br label %848

794:                                              ; preds = %779
  %795 = ptrtoint %"struct.std::__1::pair"* %785 to i64
  %796 = load i64, i64* %102, align 8
  %797 = sub i64 %795, %796
  %798 = ashr exact i64 %797, 4
  %799 = add nsw i64 %798, 1
  %800 = icmp ugt i64 %799, 1152921504606846975
  br i1 %800, label %801, label %803

801:                                              ; preds = %794
  %802 = bitcast %"class.std::__1::vector"* %98 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %802) #13
  unreachable

803:                                              ; preds = %794
  %804 = sub i64 %788, %796
  %805 = ashr exact i64 %804, 4
  %806 = icmp ult i64 %805, 576460752303423487
  br i1 %806, label %807, label %815

807:                                              ; preds = %803
  %808 = ashr exact i64 %804, 3
  %809 = icmp ult i64 %808, %799
  %810 = select i1 %809, i64 %799, i64 %808
  %811 = icmp eq i64 %810, 0
  br i1 %811, label %820, label %812

812:                                              ; preds = %807
  %813 = icmp ugt i64 %810, 1152921504606846975
  br i1 %813, label %814, label %815

814:                                              ; preds = %812
  call void @abort() #13
  unreachable

815:                                              ; preds = %812, %803
  %816 = phi i64 [ %810, %812 ], [ 1152921504606846975, %803 ]
  %817 = shl i64 %816, 4
  %818 = call i8* @_Znwm(i64 %817) #12
  %819 = bitcast i8* %818 to %"struct.std::__1::pair"*
  br label %820

820:                                              ; preds = %815, %807
  %821 = phi i64 [ %816, %815 ], [ 0, %807 ]
  %822 = phi %"struct.std::__1::pair"* [ %819, %815 ], [ null, %807 ]
  %823 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %822, i64 %798
  %824 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %822, i64 %821
  %825 = ptrtoint %"struct.std::__1::pair"* %824 to i64
  %826 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %823, i64 0, i32 0
  store i64 %578, i64* %826, align 8
  %827 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %822, i64 %798, i32 1
  store i64 %784, i64* %827, align 8
  %828 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %823, i64 1
  %829 = ptrtoint %"struct.std::__1::pair"* %828 to i64
  %830 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %104, align 8
  %831 = load i64, i64* %101, align 8
  %832 = ptrtoint %"struct.std::__1::pair"* %830 to i64
  %833 = sub i64 %831, %832
  %834 = ashr exact i64 %833, 4
  %835 = sub nsw i64 0, %834
  %836 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %823, i64 %835
  %837 = ptrtoint %"struct.std::__1::pair"* %836 to i64
  %838 = icmp sgt i64 %833, 0
  br i1 %838, label %839, label %843

839:                                              ; preds = %820
  %840 = bitcast %"struct.std::__1::pair"* %836 to i8*
  %841 = bitcast %"struct.std::__1::pair"* %830 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %840, i8* align 8 %841, i64 %833, i1 false) #11
  %842 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %104, align 8
  br label %843

843:                                              ; preds = %839, %820
  %844 = phi %"struct.std::__1::pair"* [ %830, %820 ], [ %842, %839 ]
  store i64 %837, i64* %102, align 8
  store i64 %829, i64* %101, align 8
  store i64 %825, i64* %103, align 8
  %845 = icmp eq %"struct.std::__1::pair"* %844, null
  br i1 %845, label %848, label %846

846:                                              ; preds = %843
  %847 = bitcast %"struct.std::__1::pair"* %844 to i8*
  call void @_ZdlPv(i8* %847) #12
  br label %848

848:                                              ; preds = %789, %843, %846
  %849 = add i64 %135, 1
  %850 = load i64, i64* %60, align 8
  %851 = load i64, i64* %61, align 8
  %852 = sub i64 %850, %851
  %853 = ashr exact i64 %852, 4
  %854 = icmp ult i64 %849, %853
  br i1 %854, label %857, label %855

855:                                              ; preds = %848
  %856 = trunc i64 %146 to i32
  br label %1101

857:                                              ; preds = %848
  %858 = inttoptr i64 %851 to %"struct.std::__1::pair"*
  %859 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %858, i64 %849, i32 0
  %860 = load i64, i64* %859, align 8
  %861 = add i64 %146, 50
  %862 = icmp ugt i64 %861, %860
  br i1 %862, label %885, label %863

863:                                              ; preds = %857
  %864 = trunc i64 %146 to i32
  %865 = load i8 (%"class.icu_69::BreakIterator"*, i32)**, i8 (%"class.icu_69::BreakIterator"*, i32)*** %65, align 8
  %866 = getelementptr inbounds i8 (%"class.icu_69::BreakIterator"*, i32)*, i8 (%"class.icu_69::BreakIterator"*, i32)** %865, i64 17
  %867 = load i8 (%"class.icu_69::BreakIterator"*, i32)*, i8 (%"class.icu_69::BreakIterator"*, i32)** %866, align 8
  %868 = call signext i8 %867(%"class.icu_69::BreakIterator"* %50, i32 %864) #11
  %869 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %66, align 8
  %870 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %869, i64 18
  %871 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %870, align 8
  %872 = call i32 %871(%"class.icu_69::BreakIterator"* %50, i32 50) #11
  %873 = load i32 (%"class.icu_69::BreakIterator"*)**, i32 (%"class.icu_69::BreakIterator"*)*** %67, align 8
  %874 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %873, i64 14
  %875 = load i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %874, align 8
  %876 = call i32 %875(%"class.icu_69::BreakIterator"* %50) #11
  %877 = sext i32 %876 to i64
  %878 = icmp ult i64 %860, %877
  %879 = icmp eq i32 %876, -1
  %880 = or i1 %879, %878
  br i1 %880, label %881, label %1101

881:                                              ; preds = %863
  %882 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %62, align 8
  %883 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %882, i64 %849, i32 0
  %884 = load i64, i64* %883, align 8
  br label %885

885:                                              ; preds = %881, %857
  %886 = phi i64 [ %884, %881 ], [ %860, %857 ]
  %887 = icmp ult i64 %886, %146
  br i1 %887, label %888, label %890

888:                                              ; preds = %885
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %14, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 279, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #11
  %889 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %14) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #11
  br label %890

890:                                              ; preds = %885, %888
  %891 = load i8, i8* %37, align 1
  %892 = icmp slt i8 %891, 0
  %893 = load i64, i64* %42, align 8
  %894 = zext i8 %891 to i64
  %895 = select i1 %892, i64 %893, i64 %894
  %896 = icmp ugt i64 %886, %895
  br i1 %896, label %897, label %899

897:                                              ; preds = %890
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 280, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0)) #11
  %898 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #11
  br label %899

899:                                              ; preds = %890, %897
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #11
  %900 = sub i64 %886, %146
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %17, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %146, i64 %900, %"class.std::__1::allocator"* dereferenceable(1) %75) #11
  %901 = load i8, i8* %124, align 1
  %902 = icmp slt i8 %901, 0
  %903 = load i8*, i8** %125, align 8
  %904 = select i1 %902, i8* %903, i8* %122
  %905 = load i64, i64* %126, align 8
  %906 = zext i8 %901 to i64
  %907 = select i1 %902, i64 %905, i64 %906
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %16, i8* %904, i64 %907) #11
  %908 = load i8, i8* %128, align 1
  %909 = icmp slt i8 %908, 0
  %910 = load i16*, i16** %129, align 8
  %911 = load i64, i64* %130, align 8
  %912 = zext i8 %908 to i64
  %913 = select i1 %909, i16* %910, i16* %131
  %914 = select i1 %909, i64 %911, i64 %912
  %915 = load i8, i8* %70, align 1
  %916 = icmp slt i8 %915, 0
  br i1 %916, label %917, label %922

917:                                              ; preds = %899
  %918 = load i64, i64* %58, align 16
  %919 = and i64 %918, 9223372036854775807
  %920 = add nsw i64 %919, -1
  %921 = load i64, i64* %57, align 8
  br label %924

922:                                              ; preds = %899
  %923 = zext i8 %915 to i64
  br label %924

924:                                              ; preds = %922, %917
  %925 = phi i64 [ %920, %917 ], [ 10, %922 ]
  %926 = phi i64 [ %921, %917 ], [ %923, %922 ]
  %927 = sub i64 %925, %926
  %928 = icmp ult i64 %927, %914
  br i1 %928, label %1087, label %929

929:                                              ; preds = %924
  %930 = icmp eq i64 %914, 0
  br i1 %930, label %1090, label %931

931:                                              ; preds = %929
  %932 = load i16*, i16** %56, align 16
  %933 = select i1 %916, i16* %932, i16* %71
  %934 = getelementptr inbounds i16, i16* %933, i64 %926
  %935 = icmp ult i64 %914, 16
  br i1 %935, label %1025, label %936

936:                                              ; preds = %931
  %937 = add i64 %914, %926
  %938 = getelementptr i16, i16* %933, i64 %937
  %939 = getelementptr i16, i16* %913, i64 %914
  %940 = icmp ult i16* %934, %939
  %941 = icmp ult i16* %913, %938
  %942 = and i1 %940, %941
  br i1 %942, label %1025, label %943

943:                                              ; preds = %936
  %944 = and i64 %914, -16
  %945 = sub i64 %914, %944
  %946 = getelementptr i16, i16* %913, i64 %944
  %947 = getelementptr i16, i16* %934, i64 %944
  %948 = add i64 %944, -16
  %949 = lshr exact i64 %948, 4
  %950 = add nuw nsw i64 %949, 1
  %951 = and i64 %950, 3
  %952 = icmp ult i64 %948, 48
  br i1 %952, label %1004, label %953

953:                                              ; preds = %943
  %954 = sub nsw i64 %950, %951
  br label %955

955:                                              ; preds = %955, %953
  %956 = phi i64 [ 0, %953 ], [ %1001, %955 ]
  %957 = phi i64 [ %954, %953 ], [ %1002, %955 ]
  %958 = getelementptr i16, i16* %913, i64 %956
  %959 = getelementptr i16, i16* %934, i64 %956
  %960 = bitcast i16* %958 to <8 x i16>*
  %961 = load <8 x i16>, <8 x i16>* %960, align 2, !alias.scope !71
  %962 = getelementptr i16, i16* %958, i64 8
  %963 = bitcast i16* %962 to <8 x i16>*
  %964 = load <8 x i16>, <8 x i16>* %963, align 2, !alias.scope !71
  %965 = bitcast i16* %959 to <8 x i16>*
  store <8 x i16> %961, <8 x i16>* %965, align 2, !alias.scope !74, !noalias !71
  %966 = getelementptr i16, i16* %959, i64 8
  %967 = bitcast i16* %966 to <8 x i16>*
  store <8 x i16> %964, <8 x i16>* %967, align 2, !alias.scope !74, !noalias !71
  %968 = or i64 %956, 16
  %969 = getelementptr i16, i16* %913, i64 %968
  %970 = getelementptr i16, i16* %934, i64 %968
  %971 = bitcast i16* %969 to <8 x i16>*
  %972 = load <8 x i16>, <8 x i16>* %971, align 2, !alias.scope !71
  %973 = getelementptr i16, i16* %969, i64 8
  %974 = bitcast i16* %973 to <8 x i16>*
  %975 = load <8 x i16>, <8 x i16>* %974, align 2, !alias.scope !71
  %976 = bitcast i16* %970 to <8 x i16>*
  store <8 x i16> %972, <8 x i16>* %976, align 2, !alias.scope !74, !noalias !71
  %977 = getelementptr i16, i16* %970, i64 8
  %978 = bitcast i16* %977 to <8 x i16>*
  store <8 x i16> %975, <8 x i16>* %978, align 2, !alias.scope !74, !noalias !71
  %979 = or i64 %956, 32
  %980 = getelementptr i16, i16* %913, i64 %979
  %981 = getelementptr i16, i16* %934, i64 %979
  %982 = bitcast i16* %980 to <8 x i16>*
  %983 = load <8 x i16>, <8 x i16>* %982, align 2, !alias.scope !71
  %984 = getelementptr i16, i16* %980, i64 8
  %985 = bitcast i16* %984 to <8 x i16>*
  %986 = load <8 x i16>, <8 x i16>* %985, align 2, !alias.scope !71
  %987 = bitcast i16* %981 to <8 x i16>*
  store <8 x i16> %983, <8 x i16>* %987, align 2, !alias.scope !74, !noalias !71
  %988 = getelementptr i16, i16* %981, i64 8
  %989 = bitcast i16* %988 to <8 x i16>*
  store <8 x i16> %986, <8 x i16>* %989, align 2, !alias.scope !74, !noalias !71
  %990 = or i64 %956, 48
  %991 = getelementptr i16, i16* %913, i64 %990
  %992 = getelementptr i16, i16* %934, i64 %990
  %993 = bitcast i16* %991 to <8 x i16>*
  %994 = load <8 x i16>, <8 x i16>* %993, align 2, !alias.scope !71
  %995 = getelementptr i16, i16* %991, i64 8
  %996 = bitcast i16* %995 to <8 x i16>*
  %997 = load <8 x i16>, <8 x i16>* %996, align 2, !alias.scope !71
  %998 = bitcast i16* %992 to <8 x i16>*
  store <8 x i16> %994, <8 x i16>* %998, align 2, !alias.scope !74, !noalias !71
  %999 = getelementptr i16, i16* %992, i64 8
  %1000 = bitcast i16* %999 to <8 x i16>*
  store <8 x i16> %997, <8 x i16>* %1000, align 2, !alias.scope !74, !noalias !71
  %1001 = add i64 %956, 64
  %1002 = add i64 %957, -4
  %1003 = icmp eq i64 %1002, 0
  br i1 %1003, label %1004, label %955, !llvm.loop !76

1004:                                             ; preds = %955, %943
  %1005 = phi i64 [ 0, %943 ], [ %1001, %955 ]
  %1006 = icmp eq i64 %951, 0
  br i1 %1006, label %1023, label %1007

1007:                                             ; preds = %1004, %1007
  %1008 = phi i64 [ %1020, %1007 ], [ %1005, %1004 ]
  %1009 = phi i64 [ %1021, %1007 ], [ %951, %1004 ]
  %1010 = getelementptr i16, i16* %913, i64 %1008
  %1011 = getelementptr i16, i16* %934, i64 %1008
  %1012 = bitcast i16* %1010 to <8 x i16>*
  %1013 = load <8 x i16>, <8 x i16>* %1012, align 2, !alias.scope !71
  %1014 = getelementptr i16, i16* %1010, i64 8
  %1015 = bitcast i16* %1014 to <8 x i16>*
  %1016 = load <8 x i16>, <8 x i16>* %1015, align 2, !alias.scope !71
  %1017 = bitcast i16* %1011 to <8 x i16>*
  store <8 x i16> %1013, <8 x i16>* %1017, align 2, !alias.scope !74, !noalias !71
  %1018 = getelementptr i16, i16* %1011, i64 8
  %1019 = bitcast i16* %1018 to <8 x i16>*
  store <8 x i16> %1016, <8 x i16>* %1019, align 2, !alias.scope !74, !noalias !71
  %1020 = add i64 %1008, 16
  %1021 = add i64 %1009, -1
  %1022 = icmp eq i64 %1021, 0
  br i1 %1022, label %1023, label %1007, !llvm.loop !77

1023:                                             ; preds = %1007, %1004
  %1024 = icmp eq i64 %914, %944
  br i1 %1024, label %1078, label %1025

1025:                                             ; preds = %1023, %936, %931
  %1026 = phi i64 [ %914, %936 ], [ %914, %931 ], [ %945, %1023 ]
  %1027 = phi i16* [ %913, %936 ], [ %913, %931 ], [ %946, %1023 ]
  %1028 = phi i16* [ %934, %936 ], [ %934, %931 ], [ %947, %1023 ]
  %1029 = add i64 %1026, -1
  %1030 = and i64 %1026, 7
  %1031 = icmp eq i64 %1030, 0
  br i1 %1031, label %1043, label %1032

1032:                                             ; preds = %1025, %1032
  %1033 = phi i64 [ %1038, %1032 ], [ %1026, %1025 ]
  %1034 = phi i16* [ %1040, %1032 ], [ %1027, %1025 ]
  %1035 = phi i16* [ %1039, %1032 ], [ %1028, %1025 ]
  %1036 = phi i64 [ %1041, %1032 ], [ %1030, %1025 ]
  %1037 = load i16, i16* %1034, align 2
  store i16 %1037, i16* %1035, align 2
  %1038 = add i64 %1033, -1
  %1039 = getelementptr inbounds i16, i16* %1035, i64 1
  %1040 = getelementptr inbounds i16, i16* %1034, i64 1
  %1041 = add i64 %1036, -1
  %1042 = icmp eq i64 %1041, 0
  br i1 %1042, label %1043, label %1032, !llvm.loop !78

1043:                                             ; preds = %1032, %1025
  %1044 = phi i64 [ %1026, %1025 ], [ %1038, %1032 ]
  %1045 = phi i16* [ %1027, %1025 ], [ %1040, %1032 ]
  %1046 = phi i16* [ %1028, %1025 ], [ %1039, %1032 ]
  %1047 = icmp ult i64 %1029, 7
  br i1 %1047, label %1078, label %1048

1048:                                             ; preds = %1043, %1048
  %1049 = phi i64 [ %1074, %1048 ], [ %1044, %1043 ]
  %1050 = phi i16* [ %1076, %1048 ], [ %1045, %1043 ]
  %1051 = phi i16* [ %1075, %1048 ], [ %1046, %1043 ]
  %1052 = load i16, i16* %1050, align 2
  store i16 %1052, i16* %1051, align 2
  %1053 = getelementptr inbounds i16, i16* %1051, i64 1
  %1054 = getelementptr inbounds i16, i16* %1050, i64 1
  %1055 = load i16, i16* %1054, align 2
  store i16 %1055, i16* %1053, align 2
  %1056 = getelementptr inbounds i16, i16* %1051, i64 2
  %1057 = getelementptr inbounds i16, i16* %1050, i64 2
  %1058 = load i16, i16* %1057, align 2
  store i16 %1058, i16* %1056, align 2
  %1059 = getelementptr inbounds i16, i16* %1051, i64 3
  %1060 = getelementptr inbounds i16, i16* %1050, i64 3
  %1061 = load i16, i16* %1060, align 2
  store i16 %1061, i16* %1059, align 2
  %1062 = getelementptr inbounds i16, i16* %1051, i64 4
  %1063 = getelementptr inbounds i16, i16* %1050, i64 4
  %1064 = load i16, i16* %1063, align 2
  store i16 %1064, i16* %1062, align 2
  %1065 = getelementptr inbounds i16, i16* %1051, i64 5
  %1066 = getelementptr inbounds i16, i16* %1050, i64 5
  %1067 = load i16, i16* %1066, align 2
  store i16 %1067, i16* %1065, align 2
  %1068 = getelementptr inbounds i16, i16* %1051, i64 6
  %1069 = getelementptr inbounds i16, i16* %1050, i64 6
  %1070 = load i16, i16* %1069, align 2
  store i16 %1070, i16* %1068, align 2
  %1071 = getelementptr inbounds i16, i16* %1051, i64 7
  %1072 = getelementptr inbounds i16, i16* %1050, i64 7
  %1073 = load i16, i16* %1072, align 2
  store i16 %1073, i16* %1071, align 2
  %1074 = add i64 %1049, -8
  %1075 = getelementptr inbounds i16, i16* %1051, i64 8
  %1076 = getelementptr inbounds i16, i16* %1050, i64 8
  %1077 = icmp eq i64 %1074, 0
  br i1 %1077, label %1078, label %1048, !llvm.loop !79

1078:                                             ; preds = %1043, %1048, %1023
  %1079 = add i64 %926, %914
  %1080 = load i8, i8* %70, align 1
  %1081 = icmp slt i8 %1080, 0
  br i1 %1081, label %1082, label %1083

1082:                                             ; preds = %1078
  store i64 %1079, i64* %57, align 8
  br label %1085

1083:                                             ; preds = %1078
  %1084 = trunc i64 %1079 to i8
  store i8 %1084, i8* %70, align 1
  br label %1085

1085:                                             ; preds = %1083, %1082
  %1086 = getelementptr inbounds i16, i16* %933, i64 %1079
  store i16 0, i16* %1086, align 2
  br label %1090

1087:                                             ; preds = %924
  %1088 = add i64 %926, %914
  %1089 = sub i64 %1088, %925
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.13"* nonnull %6, i64 %925, i64 %1089, i64 %926, i64 %926, i64 0, i64 %914, i16* %913) #11
  br label %1090

1090:                                             ; preds = %929, %1085, %1087
  %1091 = load i8, i8* %128, align 1
  %1092 = icmp slt i8 %1091, 0
  br i1 %1092, label %1093, label %1095

1093:                                             ; preds = %1090
  %1094 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %1094) #12
  br label %1095

1095:                                             ; preds = %1090, %1093
  %1096 = load i8, i8* %124, align 1
  %1097 = icmp slt i8 %1096, 0
  br i1 %1097, label %1098, label %1100

1098:                                             ; preds = %1095
  %1099 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %1099) #12
  br label %1100

1100:                                             ; preds = %1095, %1098
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #11
  br label %1519

1101:                                             ; preds = %855, %863
  %1102 = phi i32 [ %856, %855 ], [ %864, %863 ]
  %1103 = load i8 (%"class.icu_69::BreakIterator"*, i32)**, i8 (%"class.icu_69::BreakIterator"*, i32)*** %65, align 8
  %1104 = getelementptr inbounds i8 (%"class.icu_69::BreakIterator"*, i32)*, i8 (%"class.icu_69::BreakIterator"*, i32)** %1103, i64 17
  %1105 = load i8 (%"class.icu_69::BreakIterator"*, i32)*, i8 (%"class.icu_69::BreakIterator"*, i32)** %1104, align 8
  %1106 = call signext i8 %1105(%"class.icu_69::BreakIterator"* %50, i32 %1102) #11
  %1107 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %66, align 8
  %1108 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %1107, i64 18
  %1109 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %1108, align 8
  %1110 = call i32 %1109(%"class.icu_69::BreakIterator"* %50, i32 50) #11
  %1111 = load i32 (%"class.icu_69::BreakIterator"*)**, i32 (%"class.icu_69::BreakIterator"*)*** %67, align 8
  %1112 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %1111, i64 14
  %1113 = load i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %1112, align 8
  %1114 = call i32 %1113(%"class.icu_69::BreakIterator"* %50) #11
  %1115 = sext i32 %1114 to i64
  %1116 = icmp ugt i64 %146, %1115
  br i1 %1116, label %1117, label %1119

1117:                                             ; preds = %1101
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %18, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 287, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #11
  %1118 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %18) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  br label %1119

1119:                                             ; preds = %1101, %1117
  %1120 = load i8, i8* %37, align 1
  %1121 = icmp slt i8 %1120, 0
  %1122 = load i64, i64* %42, align 8
  %1123 = zext i8 %1120 to i64
  %1124 = select i1 %1121, i64 %1122, i64 %1123
  %1125 = icmp ult i64 %1124, %1115
  br i1 %1125, label %1126, label %1128

1126:                                             ; preds = %1119
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %19, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 288, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0)) #11
  %1127 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %19) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #11
  br label %1128

1128:                                             ; preds = %1119, %1126
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #11
  %1129 = sub i64 %1115, %146
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %21, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %146, i64 %1129, %"class.std::__1::allocator"* dereferenceable(1) %75) #11
  %1130 = load i8, i8* %110, align 1
  %1131 = icmp slt i8 %1130, 0
  %1132 = load i8*, i8** %111, align 8
  %1133 = select i1 %1131, i8* %1132, i8* %108
  %1134 = load i64, i64* %112, align 8
  %1135 = zext i8 %1130 to i64
  %1136 = select i1 %1131, i64 %1134, i64 %1135
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %20, i8* %1133, i64 %1136) #11
  %1137 = load i8, i8* %114, align 1
  %1138 = icmp slt i8 %1137, 0
  %1139 = load i16*, i16** %115, align 8
  %1140 = load i64, i64* %116, align 8
  %1141 = zext i8 %1137 to i64
  %1142 = select i1 %1138, i16* %1139, i16* %117
  %1143 = select i1 %1138, i64 %1140, i64 %1141
  %1144 = load i8, i8* %70, align 1
  %1145 = icmp slt i8 %1144, 0
  br i1 %1145, label %1146, label %1151

1146:                                             ; preds = %1128
  %1147 = load i64, i64* %58, align 16
  %1148 = and i64 %1147, 9223372036854775807
  %1149 = add nsw i64 %1148, -1
  %1150 = load i64, i64* %57, align 8
  br label %1153

1151:                                             ; preds = %1128
  %1152 = zext i8 %1144 to i64
  br label %1153

1153:                                             ; preds = %1151, %1146
  %1154 = phi i64 [ %1149, %1146 ], [ 10, %1151 ]
  %1155 = phi i64 [ %1150, %1146 ], [ %1152, %1151 ]
  %1156 = sub i64 %1154, %1155
  %1157 = icmp ult i64 %1156, %1143
  br i1 %1157, label %1316, label %1158

1158:                                             ; preds = %1153
  %1159 = icmp eq i64 %1143, 0
  br i1 %1159, label %1319, label %1160

1160:                                             ; preds = %1158
  %1161 = load i16*, i16** %56, align 16
  %1162 = select i1 %1145, i16* %1161, i16* %71
  %1163 = getelementptr inbounds i16, i16* %1162, i64 %1155
  %1164 = icmp ult i64 %1143, 16
  br i1 %1164, label %1254, label %1165

1165:                                             ; preds = %1160
  %1166 = add i64 %1143, %1155
  %1167 = getelementptr i16, i16* %1162, i64 %1166
  %1168 = getelementptr i16, i16* %1142, i64 %1143
  %1169 = icmp ult i16* %1163, %1168
  %1170 = icmp ult i16* %1142, %1167
  %1171 = and i1 %1169, %1170
  br i1 %1171, label %1254, label %1172

1172:                                             ; preds = %1165
  %1173 = and i64 %1143, -16
  %1174 = sub i64 %1143, %1173
  %1175 = getelementptr i16, i16* %1142, i64 %1173
  %1176 = getelementptr i16, i16* %1163, i64 %1173
  %1177 = add i64 %1173, -16
  %1178 = lshr exact i64 %1177, 4
  %1179 = add nuw nsw i64 %1178, 1
  %1180 = and i64 %1179, 3
  %1181 = icmp ult i64 %1177, 48
  br i1 %1181, label %1233, label %1182

1182:                                             ; preds = %1172
  %1183 = sub nsw i64 %1179, %1180
  br label %1184

1184:                                             ; preds = %1184, %1182
  %1185 = phi i64 [ 0, %1182 ], [ %1230, %1184 ]
  %1186 = phi i64 [ %1183, %1182 ], [ %1231, %1184 ]
  %1187 = getelementptr i16, i16* %1142, i64 %1185
  %1188 = getelementptr i16, i16* %1163, i64 %1185
  %1189 = bitcast i16* %1187 to <8 x i16>*
  %1190 = load <8 x i16>, <8 x i16>* %1189, align 2, !alias.scope !80
  %1191 = getelementptr i16, i16* %1187, i64 8
  %1192 = bitcast i16* %1191 to <8 x i16>*
  %1193 = load <8 x i16>, <8 x i16>* %1192, align 2, !alias.scope !80
  %1194 = bitcast i16* %1188 to <8 x i16>*
  store <8 x i16> %1190, <8 x i16>* %1194, align 2, !alias.scope !83, !noalias !80
  %1195 = getelementptr i16, i16* %1188, i64 8
  %1196 = bitcast i16* %1195 to <8 x i16>*
  store <8 x i16> %1193, <8 x i16>* %1196, align 2, !alias.scope !83, !noalias !80
  %1197 = or i64 %1185, 16
  %1198 = getelementptr i16, i16* %1142, i64 %1197
  %1199 = getelementptr i16, i16* %1163, i64 %1197
  %1200 = bitcast i16* %1198 to <8 x i16>*
  %1201 = load <8 x i16>, <8 x i16>* %1200, align 2, !alias.scope !80
  %1202 = getelementptr i16, i16* %1198, i64 8
  %1203 = bitcast i16* %1202 to <8 x i16>*
  %1204 = load <8 x i16>, <8 x i16>* %1203, align 2, !alias.scope !80
  %1205 = bitcast i16* %1199 to <8 x i16>*
  store <8 x i16> %1201, <8 x i16>* %1205, align 2, !alias.scope !83, !noalias !80
  %1206 = getelementptr i16, i16* %1199, i64 8
  %1207 = bitcast i16* %1206 to <8 x i16>*
  store <8 x i16> %1204, <8 x i16>* %1207, align 2, !alias.scope !83, !noalias !80
  %1208 = or i64 %1185, 32
  %1209 = getelementptr i16, i16* %1142, i64 %1208
  %1210 = getelementptr i16, i16* %1163, i64 %1208
  %1211 = bitcast i16* %1209 to <8 x i16>*
  %1212 = load <8 x i16>, <8 x i16>* %1211, align 2, !alias.scope !80
  %1213 = getelementptr i16, i16* %1209, i64 8
  %1214 = bitcast i16* %1213 to <8 x i16>*
  %1215 = load <8 x i16>, <8 x i16>* %1214, align 2, !alias.scope !80
  %1216 = bitcast i16* %1210 to <8 x i16>*
  store <8 x i16> %1212, <8 x i16>* %1216, align 2, !alias.scope !83, !noalias !80
  %1217 = getelementptr i16, i16* %1210, i64 8
  %1218 = bitcast i16* %1217 to <8 x i16>*
  store <8 x i16> %1215, <8 x i16>* %1218, align 2, !alias.scope !83, !noalias !80
  %1219 = or i64 %1185, 48
  %1220 = getelementptr i16, i16* %1142, i64 %1219
  %1221 = getelementptr i16, i16* %1163, i64 %1219
  %1222 = bitcast i16* %1220 to <8 x i16>*
  %1223 = load <8 x i16>, <8 x i16>* %1222, align 2, !alias.scope !80
  %1224 = getelementptr i16, i16* %1220, i64 8
  %1225 = bitcast i16* %1224 to <8 x i16>*
  %1226 = load <8 x i16>, <8 x i16>* %1225, align 2, !alias.scope !80
  %1227 = bitcast i16* %1221 to <8 x i16>*
  store <8 x i16> %1223, <8 x i16>* %1227, align 2, !alias.scope !83, !noalias !80
  %1228 = getelementptr i16, i16* %1221, i64 8
  %1229 = bitcast i16* %1228 to <8 x i16>*
  store <8 x i16> %1226, <8 x i16>* %1229, align 2, !alias.scope !83, !noalias !80
  %1230 = add i64 %1185, 64
  %1231 = add i64 %1186, -4
  %1232 = icmp eq i64 %1231, 0
  br i1 %1232, label %1233, label %1184, !llvm.loop !85

1233:                                             ; preds = %1184, %1172
  %1234 = phi i64 [ 0, %1172 ], [ %1230, %1184 ]
  %1235 = icmp eq i64 %1180, 0
  br i1 %1235, label %1252, label %1236

1236:                                             ; preds = %1233, %1236
  %1237 = phi i64 [ %1249, %1236 ], [ %1234, %1233 ]
  %1238 = phi i64 [ %1250, %1236 ], [ %1180, %1233 ]
  %1239 = getelementptr i16, i16* %1142, i64 %1237
  %1240 = getelementptr i16, i16* %1163, i64 %1237
  %1241 = bitcast i16* %1239 to <8 x i16>*
  %1242 = load <8 x i16>, <8 x i16>* %1241, align 2, !alias.scope !80
  %1243 = getelementptr i16, i16* %1239, i64 8
  %1244 = bitcast i16* %1243 to <8 x i16>*
  %1245 = load <8 x i16>, <8 x i16>* %1244, align 2, !alias.scope !80
  %1246 = bitcast i16* %1240 to <8 x i16>*
  store <8 x i16> %1242, <8 x i16>* %1246, align 2, !alias.scope !83, !noalias !80
  %1247 = getelementptr i16, i16* %1240, i64 8
  %1248 = bitcast i16* %1247 to <8 x i16>*
  store <8 x i16> %1245, <8 x i16>* %1248, align 2, !alias.scope !83, !noalias !80
  %1249 = add i64 %1237, 16
  %1250 = add i64 %1238, -1
  %1251 = icmp eq i64 %1250, 0
  br i1 %1251, label %1252, label %1236, !llvm.loop !86

1252:                                             ; preds = %1236, %1233
  %1253 = icmp eq i64 %1143, %1173
  br i1 %1253, label %1307, label %1254

1254:                                             ; preds = %1252, %1165, %1160
  %1255 = phi i64 [ %1143, %1165 ], [ %1143, %1160 ], [ %1174, %1252 ]
  %1256 = phi i16* [ %1142, %1165 ], [ %1142, %1160 ], [ %1175, %1252 ]
  %1257 = phi i16* [ %1163, %1165 ], [ %1163, %1160 ], [ %1176, %1252 ]
  %1258 = add i64 %1255, -1
  %1259 = and i64 %1255, 7
  %1260 = icmp eq i64 %1259, 0
  br i1 %1260, label %1272, label %1261

1261:                                             ; preds = %1254, %1261
  %1262 = phi i64 [ %1267, %1261 ], [ %1255, %1254 ]
  %1263 = phi i16* [ %1269, %1261 ], [ %1256, %1254 ]
  %1264 = phi i16* [ %1268, %1261 ], [ %1257, %1254 ]
  %1265 = phi i64 [ %1270, %1261 ], [ %1259, %1254 ]
  %1266 = load i16, i16* %1263, align 2
  store i16 %1266, i16* %1264, align 2
  %1267 = add i64 %1262, -1
  %1268 = getelementptr inbounds i16, i16* %1264, i64 1
  %1269 = getelementptr inbounds i16, i16* %1263, i64 1
  %1270 = add i64 %1265, -1
  %1271 = icmp eq i64 %1270, 0
  br i1 %1271, label %1272, label %1261, !llvm.loop !87

1272:                                             ; preds = %1261, %1254
  %1273 = phi i64 [ %1255, %1254 ], [ %1267, %1261 ]
  %1274 = phi i16* [ %1256, %1254 ], [ %1269, %1261 ]
  %1275 = phi i16* [ %1257, %1254 ], [ %1268, %1261 ]
  %1276 = icmp ult i64 %1258, 7
  br i1 %1276, label %1307, label %1277

1277:                                             ; preds = %1272, %1277
  %1278 = phi i64 [ %1303, %1277 ], [ %1273, %1272 ]
  %1279 = phi i16* [ %1305, %1277 ], [ %1274, %1272 ]
  %1280 = phi i16* [ %1304, %1277 ], [ %1275, %1272 ]
  %1281 = load i16, i16* %1279, align 2
  store i16 %1281, i16* %1280, align 2
  %1282 = getelementptr inbounds i16, i16* %1280, i64 1
  %1283 = getelementptr inbounds i16, i16* %1279, i64 1
  %1284 = load i16, i16* %1283, align 2
  store i16 %1284, i16* %1282, align 2
  %1285 = getelementptr inbounds i16, i16* %1280, i64 2
  %1286 = getelementptr inbounds i16, i16* %1279, i64 2
  %1287 = load i16, i16* %1286, align 2
  store i16 %1287, i16* %1285, align 2
  %1288 = getelementptr inbounds i16, i16* %1280, i64 3
  %1289 = getelementptr inbounds i16, i16* %1279, i64 3
  %1290 = load i16, i16* %1289, align 2
  store i16 %1290, i16* %1288, align 2
  %1291 = getelementptr inbounds i16, i16* %1280, i64 4
  %1292 = getelementptr inbounds i16, i16* %1279, i64 4
  %1293 = load i16, i16* %1292, align 2
  store i16 %1293, i16* %1291, align 2
  %1294 = getelementptr inbounds i16, i16* %1280, i64 5
  %1295 = getelementptr inbounds i16, i16* %1279, i64 5
  %1296 = load i16, i16* %1295, align 2
  store i16 %1296, i16* %1294, align 2
  %1297 = getelementptr inbounds i16, i16* %1280, i64 6
  %1298 = getelementptr inbounds i16, i16* %1279, i64 6
  %1299 = load i16, i16* %1298, align 2
  store i16 %1299, i16* %1297, align 2
  %1300 = getelementptr inbounds i16, i16* %1280, i64 7
  %1301 = getelementptr inbounds i16, i16* %1279, i64 7
  %1302 = load i16, i16* %1301, align 2
  store i16 %1302, i16* %1300, align 2
  %1303 = add i64 %1278, -8
  %1304 = getelementptr inbounds i16, i16* %1280, i64 8
  %1305 = getelementptr inbounds i16, i16* %1279, i64 8
  %1306 = icmp eq i64 %1303, 0
  br i1 %1306, label %1307, label %1277, !llvm.loop !88

1307:                                             ; preds = %1272, %1277, %1252
  %1308 = add i64 %1155, %1143
  %1309 = load i8, i8* %70, align 1
  %1310 = icmp slt i8 %1309, 0
  br i1 %1310, label %1311, label %1312

1311:                                             ; preds = %1307
  store i64 %1308, i64* %57, align 8
  br label %1314

1312:                                             ; preds = %1307
  %1313 = trunc i64 %1308 to i8
  store i8 %1313, i8* %70, align 1
  br label %1314

1314:                                             ; preds = %1312, %1311
  %1315 = getelementptr inbounds i16, i16* %1162, i64 %1308
  store i16 0, i16* %1315, align 2
  br label %1319

1316:                                             ; preds = %1153
  %1317 = add i64 %1155, %1143
  %1318 = sub i64 %1317, %1154
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.13"* nonnull %6, i64 %1154, i64 %1318, i64 %1155, i64 %1155, i64 0, i64 %1143, i16* %1142) #11
  br label %1319

1319:                                             ; preds = %1158, %1314, %1316
  %1320 = load i8, i8* %114, align 1
  %1321 = icmp slt i8 %1320, 0
  br i1 %1321, label %1322, label %1324

1322:                                             ; preds = %1319
  %1323 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %1323) #12
  br label %1324

1324:                                             ; preds = %1319, %1322
  %1325 = load i8, i8* %110, align 1
  %1326 = icmp slt i8 %1325, 0
  br i1 %1326, label %1327, label %1329

1327:                                             ; preds = %1324
  %1328 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %1328) #12
  br label %1329

1329:                                             ; preds = %1324, %1327
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #11
  %1330 = load i8, i8* %37, align 1
  %1331 = icmp slt i8 %1330, 0
  %1332 = load i64, i64* %42, align 8
  %1333 = zext i8 %1330 to i64
  %1334 = select i1 %1331, i64 %1332, i64 %1333
  %1335 = icmp ugt i64 %1334, %1115
  br i1 %1335, label %1336, label %1519

1336:                                             ; preds = %1329
  %1337 = load i8, i8* %68, align 1
  %1338 = icmp slt i8 %1337, 0
  %1339 = load i16*, i16** %23, align 8
  %1340 = load i64, i64* %24, align 8
  %1341 = zext i8 %1337 to i64
  %1342 = select i1 %1338, i16* %1339, i16* %28
  %1343 = select i1 %1338, i64 %1340, i64 %1341
  %1344 = load i8, i8* %70, align 1
  %1345 = icmp slt i8 %1344, 0
  br i1 %1345, label %1346, label %1351

1346:                                             ; preds = %1336
  %1347 = load i64, i64* %58, align 16
  %1348 = and i64 %1347, 9223372036854775807
  %1349 = add nsw i64 %1348, -1
  %1350 = load i64, i64* %57, align 8
  br label %1353

1351:                                             ; preds = %1336
  %1352 = zext i8 %1344 to i64
  br label %1353

1353:                                             ; preds = %1351, %1346
  %1354 = phi i64 [ %1349, %1346 ], [ 10, %1351 ]
  %1355 = phi i64 [ %1350, %1346 ], [ %1352, %1351 ]
  %1356 = sub i64 %1354, %1355
  %1357 = icmp ult i64 %1356, %1343
  br i1 %1357, label %1516, label %1358

1358:                                             ; preds = %1353
  %1359 = icmp eq i64 %1343, 0
  br i1 %1359, label %1519, label %1360

1360:                                             ; preds = %1358
  %1361 = load i16*, i16** %56, align 16
  %1362 = select i1 %1345, i16* %1361, i16* %71
  %1363 = getelementptr inbounds i16, i16* %1362, i64 %1355
  %1364 = icmp ult i64 %1343, 16
  br i1 %1364, label %1454, label %1365

1365:                                             ; preds = %1360
  %1366 = add i64 %1343, %1355
  %1367 = getelementptr i16, i16* %1362, i64 %1366
  %1368 = getelementptr i16, i16* %1342, i64 %1343
  %1369 = icmp ult i16* %1363, %1368
  %1370 = icmp ult i16* %1342, %1367
  %1371 = and i1 %1369, %1370
  br i1 %1371, label %1454, label %1372

1372:                                             ; preds = %1365
  %1373 = and i64 %1343, -16
  %1374 = sub i64 %1343, %1373
  %1375 = getelementptr i16, i16* %1342, i64 %1373
  %1376 = getelementptr i16, i16* %1363, i64 %1373
  %1377 = add i64 %1373, -16
  %1378 = lshr exact i64 %1377, 4
  %1379 = add nuw nsw i64 %1378, 1
  %1380 = and i64 %1379, 3
  %1381 = icmp ult i64 %1377, 48
  br i1 %1381, label %1433, label %1382

1382:                                             ; preds = %1372
  %1383 = sub nsw i64 %1379, %1380
  br label %1384

1384:                                             ; preds = %1384, %1382
  %1385 = phi i64 [ 0, %1382 ], [ %1430, %1384 ]
  %1386 = phi i64 [ %1383, %1382 ], [ %1431, %1384 ]
  %1387 = getelementptr i16, i16* %1342, i64 %1385
  %1388 = getelementptr i16, i16* %1363, i64 %1385
  %1389 = bitcast i16* %1387 to <8 x i16>*
  %1390 = load <8 x i16>, <8 x i16>* %1389, align 2, !alias.scope !89
  %1391 = getelementptr i16, i16* %1387, i64 8
  %1392 = bitcast i16* %1391 to <8 x i16>*
  %1393 = load <8 x i16>, <8 x i16>* %1392, align 2, !alias.scope !89
  %1394 = bitcast i16* %1388 to <8 x i16>*
  store <8 x i16> %1390, <8 x i16>* %1394, align 2, !alias.scope !92, !noalias !89
  %1395 = getelementptr i16, i16* %1388, i64 8
  %1396 = bitcast i16* %1395 to <8 x i16>*
  store <8 x i16> %1393, <8 x i16>* %1396, align 2, !alias.scope !92, !noalias !89
  %1397 = or i64 %1385, 16
  %1398 = getelementptr i16, i16* %1342, i64 %1397
  %1399 = getelementptr i16, i16* %1363, i64 %1397
  %1400 = bitcast i16* %1398 to <8 x i16>*
  %1401 = load <8 x i16>, <8 x i16>* %1400, align 2, !alias.scope !89
  %1402 = getelementptr i16, i16* %1398, i64 8
  %1403 = bitcast i16* %1402 to <8 x i16>*
  %1404 = load <8 x i16>, <8 x i16>* %1403, align 2, !alias.scope !89
  %1405 = bitcast i16* %1399 to <8 x i16>*
  store <8 x i16> %1401, <8 x i16>* %1405, align 2, !alias.scope !92, !noalias !89
  %1406 = getelementptr i16, i16* %1399, i64 8
  %1407 = bitcast i16* %1406 to <8 x i16>*
  store <8 x i16> %1404, <8 x i16>* %1407, align 2, !alias.scope !92, !noalias !89
  %1408 = or i64 %1385, 32
  %1409 = getelementptr i16, i16* %1342, i64 %1408
  %1410 = getelementptr i16, i16* %1363, i64 %1408
  %1411 = bitcast i16* %1409 to <8 x i16>*
  %1412 = load <8 x i16>, <8 x i16>* %1411, align 2, !alias.scope !89
  %1413 = getelementptr i16, i16* %1409, i64 8
  %1414 = bitcast i16* %1413 to <8 x i16>*
  %1415 = load <8 x i16>, <8 x i16>* %1414, align 2, !alias.scope !89
  %1416 = bitcast i16* %1410 to <8 x i16>*
  store <8 x i16> %1412, <8 x i16>* %1416, align 2, !alias.scope !92, !noalias !89
  %1417 = getelementptr i16, i16* %1410, i64 8
  %1418 = bitcast i16* %1417 to <8 x i16>*
  store <8 x i16> %1415, <8 x i16>* %1418, align 2, !alias.scope !92, !noalias !89
  %1419 = or i64 %1385, 48
  %1420 = getelementptr i16, i16* %1342, i64 %1419
  %1421 = getelementptr i16, i16* %1363, i64 %1419
  %1422 = bitcast i16* %1420 to <8 x i16>*
  %1423 = load <8 x i16>, <8 x i16>* %1422, align 2, !alias.scope !89
  %1424 = getelementptr i16, i16* %1420, i64 8
  %1425 = bitcast i16* %1424 to <8 x i16>*
  %1426 = load <8 x i16>, <8 x i16>* %1425, align 2, !alias.scope !89
  %1427 = bitcast i16* %1421 to <8 x i16>*
  store <8 x i16> %1423, <8 x i16>* %1427, align 2, !alias.scope !92, !noalias !89
  %1428 = getelementptr i16, i16* %1421, i64 8
  %1429 = bitcast i16* %1428 to <8 x i16>*
  store <8 x i16> %1426, <8 x i16>* %1429, align 2, !alias.scope !92, !noalias !89
  %1430 = add i64 %1385, 64
  %1431 = add i64 %1386, -4
  %1432 = icmp eq i64 %1431, 0
  br i1 %1432, label %1433, label %1384, !llvm.loop !94

1433:                                             ; preds = %1384, %1372
  %1434 = phi i64 [ 0, %1372 ], [ %1430, %1384 ]
  %1435 = icmp eq i64 %1380, 0
  br i1 %1435, label %1452, label %1436

1436:                                             ; preds = %1433, %1436
  %1437 = phi i64 [ %1449, %1436 ], [ %1434, %1433 ]
  %1438 = phi i64 [ %1450, %1436 ], [ %1380, %1433 ]
  %1439 = getelementptr i16, i16* %1342, i64 %1437
  %1440 = getelementptr i16, i16* %1363, i64 %1437
  %1441 = bitcast i16* %1439 to <8 x i16>*
  %1442 = load <8 x i16>, <8 x i16>* %1441, align 2, !alias.scope !89
  %1443 = getelementptr i16, i16* %1439, i64 8
  %1444 = bitcast i16* %1443 to <8 x i16>*
  %1445 = load <8 x i16>, <8 x i16>* %1444, align 2, !alias.scope !89
  %1446 = bitcast i16* %1440 to <8 x i16>*
  store <8 x i16> %1442, <8 x i16>* %1446, align 2, !alias.scope !92, !noalias !89
  %1447 = getelementptr i16, i16* %1440, i64 8
  %1448 = bitcast i16* %1447 to <8 x i16>*
  store <8 x i16> %1445, <8 x i16>* %1448, align 2, !alias.scope !92, !noalias !89
  %1449 = add i64 %1437, 16
  %1450 = add i64 %1438, -1
  %1451 = icmp eq i64 %1450, 0
  br i1 %1451, label %1452, label %1436, !llvm.loop !95

1452:                                             ; preds = %1436, %1433
  %1453 = icmp eq i64 %1343, %1373
  br i1 %1453, label %1507, label %1454

1454:                                             ; preds = %1452, %1365, %1360
  %1455 = phi i64 [ %1343, %1365 ], [ %1343, %1360 ], [ %1374, %1452 ]
  %1456 = phi i16* [ %1342, %1365 ], [ %1342, %1360 ], [ %1375, %1452 ]
  %1457 = phi i16* [ %1363, %1365 ], [ %1363, %1360 ], [ %1376, %1452 ]
  %1458 = add i64 %1455, -1
  %1459 = and i64 %1455, 7
  %1460 = icmp eq i64 %1459, 0
  br i1 %1460, label %1472, label %1461

1461:                                             ; preds = %1454, %1461
  %1462 = phi i64 [ %1467, %1461 ], [ %1455, %1454 ]
  %1463 = phi i16* [ %1469, %1461 ], [ %1456, %1454 ]
  %1464 = phi i16* [ %1468, %1461 ], [ %1457, %1454 ]
  %1465 = phi i64 [ %1470, %1461 ], [ %1459, %1454 ]
  %1466 = load i16, i16* %1463, align 2
  store i16 %1466, i16* %1464, align 2
  %1467 = add i64 %1462, -1
  %1468 = getelementptr inbounds i16, i16* %1464, i64 1
  %1469 = getelementptr inbounds i16, i16* %1463, i64 1
  %1470 = add i64 %1465, -1
  %1471 = icmp eq i64 %1470, 0
  br i1 %1471, label %1472, label %1461, !llvm.loop !96

1472:                                             ; preds = %1461, %1454
  %1473 = phi i64 [ %1455, %1454 ], [ %1467, %1461 ]
  %1474 = phi i16* [ %1456, %1454 ], [ %1469, %1461 ]
  %1475 = phi i16* [ %1457, %1454 ], [ %1468, %1461 ]
  %1476 = icmp ult i64 %1458, 7
  br i1 %1476, label %1507, label %1477

1477:                                             ; preds = %1472, %1477
  %1478 = phi i64 [ %1503, %1477 ], [ %1473, %1472 ]
  %1479 = phi i16* [ %1505, %1477 ], [ %1474, %1472 ]
  %1480 = phi i16* [ %1504, %1477 ], [ %1475, %1472 ]
  %1481 = load i16, i16* %1479, align 2
  store i16 %1481, i16* %1480, align 2
  %1482 = getelementptr inbounds i16, i16* %1480, i64 1
  %1483 = getelementptr inbounds i16, i16* %1479, i64 1
  %1484 = load i16, i16* %1483, align 2
  store i16 %1484, i16* %1482, align 2
  %1485 = getelementptr inbounds i16, i16* %1480, i64 2
  %1486 = getelementptr inbounds i16, i16* %1479, i64 2
  %1487 = load i16, i16* %1486, align 2
  store i16 %1487, i16* %1485, align 2
  %1488 = getelementptr inbounds i16, i16* %1480, i64 3
  %1489 = getelementptr inbounds i16, i16* %1479, i64 3
  %1490 = load i16, i16* %1489, align 2
  store i16 %1490, i16* %1488, align 2
  %1491 = getelementptr inbounds i16, i16* %1480, i64 4
  %1492 = getelementptr inbounds i16, i16* %1479, i64 4
  %1493 = load i16, i16* %1492, align 2
  store i16 %1493, i16* %1491, align 2
  %1494 = getelementptr inbounds i16, i16* %1480, i64 5
  %1495 = getelementptr inbounds i16, i16* %1479, i64 5
  %1496 = load i16, i16* %1495, align 2
  store i16 %1496, i16* %1494, align 2
  %1497 = getelementptr inbounds i16, i16* %1480, i64 6
  %1498 = getelementptr inbounds i16, i16* %1479, i64 6
  %1499 = load i16, i16* %1498, align 2
  store i16 %1499, i16* %1497, align 2
  %1500 = getelementptr inbounds i16, i16* %1480, i64 7
  %1501 = getelementptr inbounds i16, i16* %1479, i64 7
  %1502 = load i16, i16* %1501, align 2
  store i16 %1502, i16* %1500, align 2
  %1503 = add i64 %1478, -8
  %1504 = getelementptr inbounds i16, i16* %1480, i64 8
  %1505 = getelementptr inbounds i16, i16* %1479, i64 8
  %1506 = icmp eq i64 %1503, 0
  br i1 %1506, label %1507, label %1477, !llvm.loop !97

1507:                                             ; preds = %1472, %1477, %1452
  %1508 = add i64 %1355, %1343
  %1509 = load i8, i8* %70, align 1
  %1510 = icmp slt i8 %1509, 0
  br i1 %1510, label %1511, label %1512

1511:                                             ; preds = %1507
  store i64 %1508, i64* %57, align 8
  br label %1514

1512:                                             ; preds = %1507
  %1513 = trunc i64 %1508 to i8
  store i8 %1513, i8* %70, align 1
  br label %1514

1514:                                             ; preds = %1512, %1511
  %1515 = getelementptr inbounds i16, i16* %1362, i64 %1508
  store i16 0, i16* %1515, align 2
  br label %1519

1516:                                             ; preds = %1353
  %1517 = add i64 %1355, %1343
  %1518 = sub i64 %1517, %1354
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.13"* nonnull %6, i64 %1354, i64 %1518, i64 %1355, i64 %1355, i64 0, i64 %1343, i16* %1342) #11
  br label %1519

1519:                                             ; preds = %1516, %1514, %1358, %1329, %1100
  %1520 = phi i64 [ %886, %1100 ], [ %1115, %1329 ], [ %1115, %1358 ], [ %1115, %1514 ], [ %1115, %1516 ]
  %1521 = load i8, i8* %70, align 1
  %1522 = icmp slt i8 %1521, 0
  %1523 = load i64, i64* %57, align 8
  %1524 = zext i8 %1521 to i64
  %1525 = select i1 %1522, i64 %1523, i64 %1524
  %1526 = icmp ult i64 %1525, 200
  br i1 %1526, label %133, label %1527

1527:                                             ; preds = %133, %1519
  %1528 = call %struct.UText* @utext_close_69(%struct.UText* %48) #11
  %1529 = bitcast %"class.query_parser::Snippet"* %0 to <2 x i64>*
  %1530 = load <2 x i64>, <2 x i64>* %1529, align 8
  %1531 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1532 = load i64, i64* %1531, align 8
  %1533 = bitcast %"class.query_parser::Snippet"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1533, i8* nonnull align 16 %55, i64 24, i1 false) #11
  %1534 = bitcast %"class.std::__1::basic_string.13"* %6 to <2 x i64>*
  store <2 x i64> %1530, <2 x i64>* %1534, align 16
  store i64 %1532, i64* %58, align 16
  %1535 = lshr i64 %1532, 56
  %1536 = trunc i64 %1535 to i8
  %1537 = icmp slt i8 %1536, 0
  br i1 %1537, label %1538, label %1541

1538:                                             ; preds = %1527
  %1539 = extractelement <2 x i64> %1530, i32 0
  %1540 = inttoptr i64 %1539 to i8*
  call void @_ZdlPv(i8* %1540) #12
  br label %1541

1541:                                             ; preds = %1527, %1538
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #11
  %1542 = icmp eq %"class.icu_69::BreakIterator"* %50, null
  br i1 %1542, label %1548, label %1543

1543:                                             ; preds = %1541
  %1544 = bitcast %"class.icu_69::BreakIterator"* %50 to void (%"class.icu_69::BreakIterator"*)***
  %1545 = load void (%"class.icu_69::BreakIterator"*)**, void (%"class.icu_69::BreakIterator"*)*** %1544, align 8
  %1546 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %1545, i64 1
  %1547 = load void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %1546, align 8
  call void %1547(%"class.icu_69::BreakIterator"* nonnull %50) #11
  br label %1548

1548:                                             ; preds = %1541, %1543
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #11
  %1549 = load i8, i8* %68, align 1
  %1550 = icmp slt i8 %1549, 0
  br i1 %1550, label %1551, label %1554

1551:                                             ; preds = %1548
  %1552 = bitcast %"class.std::__1::basic_string.13"* %4 to i8**
  %1553 = load i8*, i8** %1552, align 8
  call void @_ZdlPv(i8* %1553) #12
  br label %1554

1554:                                             ; preds = %1548, %1551
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  ret void
}

declare %struct.UText* @utext_openUTF8_69(%struct.UText*, i8*, i64, i32*) local_unnamed_addr #2

declare %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIterator23createCharacterInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224), i32* dereferenceable(4)) local_unnamed_addr #2

declare dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() local_unnamed_addr #2

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* sret, i8*, i64) local_unnamed_addr #2

declare %struct.UText* @utext_close_69(%struct.UText*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser7Snippet4SwapEPS0_(%"class.query_parser::Snippet"* nocapture, %"class.query_parser::Snippet"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.query_parser::Snippet"* %0 to <2 x i64>*
  %4 = load <2 x i64>, <2 x i64>* %3, align 8
  %5 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.query_parser::Snippet"* %0 to i8*
  %8 = bitcast %"class.query_parser::Snippet"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #11
  %9 = bitcast %"class.query_parser::Snippet"* %1 to <2 x i64>*
  store <2 x i64> %4, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %6, i64* %10, align 8
  %11 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 1
  %13 = bitcast %"class.std::__1::vector"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %12 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  %17 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 1, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair"** %17 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.std::__1::pair"** %18 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %19, align 8
  store i64 %20, i64* %21, align 8
  %23 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.query_parser::Snippet", %"class.query_parser::Snippet"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"struct.std::__1::pair"** %23 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"struct.std::__1::pair"** %24 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %25, align 8
  store i64 %26, i64* %27, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_(%"class.std::__1::vector"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = icmp ult %"struct.std::__1::pair"* %7, %9
  %11 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %12 = ptrtoint %"struct.std::__1::pair"* %9 to i64
  br i1 %10, label %13, label %150

13:                                               ; preds = %3
  %14 = icmp eq %"struct.std::__1::pair"* %7, %1
  br i1 %14, label %15, label %21

15:                                               ; preds = %13
  %16 = bitcast %"struct.std::__1::pair"* %1 to i8*
  %17 = bitcast %"struct.std::__1::pair"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false) #11
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %19 = ptrtoint %"struct.std::__1::pair"* %18 to i64
  %20 = bitcast %"struct.std::__1::pair"** %6 to i64*
  store i64 %19, i64* %20, align 8
  br label %288

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %23 = ptrtoint %"struct.std::__1::pair"* %22 to i64
  %24 = sub i64 %11, %23
  %25 = ashr exact i64 %24, 4
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %25
  %27 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %28 = icmp ult %"struct.std::__1::pair"* %26, %7
  br i1 %28, label %29, label %58

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 %30, i32 0
  %32 = bitcast i64* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 4
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %29, %40
  %41 = phi %"struct.std::__1::pair"* [ %47, %40 ], [ %7, %29 ]
  %42 = phi %"struct.std::__1::pair"* [ %46, %40 ], [ %26, %29 ]
  %43 = phi i64 [ %48, %40 ], [ %38, %29 ]
  %44 = bitcast %"struct.std::__1::pair"* %41 to i8*
  %45 = bitcast %"struct.std::__1::pair"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false) #11
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 1
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %41, i64 1
  %48 = add i64 %43, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %40, !llvm.loop !98

50:                                               ; preds = %40, %29
  %51 = phi %"struct.std::__1::pair"* [ %7, %29 ], [ %47, %40 ]
  %52 = phi %"struct.std::__1::pair"* [ %26, %29 ], [ %46, %40 ]
  %53 = phi %"struct.std::__1::pair"* [ undef, %29 ], [ %47, %40 ]
  %54 = icmp ult i8* %34, inttoptr (i64 48 to i8*)
  br i1 %54, label %55, label %115

55:                                               ; preds = %115, %50
  %56 = phi %"struct.std::__1::pair"* [ %53, %50 ], [ %133, %115 ]
  %57 = ptrtoint %"struct.std::__1::pair"* %56 to i64
  br label %58

58:                                               ; preds = %55, %21
  %59 = phi i64 [ %57, %55 ], [ %11, %21 ]
  store i64 %59, i64* %27, align 8
  %60 = icmp eq i64 %24, 0
  br i1 %60, label %135, label %61

61:                                               ; preds = %58
  %62 = add i64 %24, -16
  %63 = lshr i64 %62, 4
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %61, %67
  %68 = phi %"struct.std::__1::pair"* [ %72, %67 ], [ %7, %61 ]
  %69 = phi %"struct.std::__1::pair"* [ %71, %67 ], [ %26, %61 ]
  %70 = phi i64 [ %79, %67 ], [ %65, %61 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 -1
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 -1
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 0, i32 0
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 -1, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 -1, i32 1
  store i64 %77, i64* %78, align 8
  %79 = add i64 %70, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %67, !llvm.loop !99

81:                                               ; preds = %67, %61
  %82 = phi %"struct.std::__1::pair"* [ %7, %61 ], [ %72, %67 ]
  %83 = phi %"struct.std::__1::pair"* [ %26, %61 ], [ %71, %67 ]
  %84 = icmp ult i64 %62, 48
  br i1 %84, label %135, label %85

85:                                               ; preds = %81, %85
  %86 = phi %"struct.std::__1::pair"* [ %107, %85 ], [ %82, %81 ]
  %87 = phi %"struct.std::__1::pair"* [ %106, %85 ], [ %83, %81 ]
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -1, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 -1, i32 0
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -1, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 -1, i32 1
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -2, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 -2, i32 0
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -2, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 -2, i32 1
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -3, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 -3, i32 0
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -3, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 -3, i32 1
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -4
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 -4
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %107, i64 0, i32 0
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -4, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 -4, i32 1
  store i64 %112, i64* %113, align 8
  %114 = icmp eq %"struct.std::__1::pair"* %106, %1
  br i1 %114, label %135, label %85

115:                                              ; preds = %50, %115
  %116 = phi %"struct.std::__1::pair"* [ %133, %115 ], [ %51, %50 ]
  %117 = phi %"struct.std::__1::pair"* [ %132, %115 ], [ %52, %50 ]
  %118 = bitcast %"struct.std::__1::pair"* %116 to i8*
  %119 = bitcast %"struct.std::__1::pair"* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 16, i1 false) #11
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 1
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %116, i64 1
  %122 = bitcast %"struct.std::__1::pair"* %121 to i8*
  %123 = bitcast %"struct.std::__1::pair"* %120 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 16, i1 false) #11
  %124 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 2
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %116, i64 2
  %126 = bitcast %"struct.std::__1::pair"* %125 to i8*
  %127 = bitcast %"struct.std::__1::pair"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false) #11
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 3
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %116, i64 3
  %130 = bitcast %"struct.std::__1::pair"* %129 to i8*
  %131 = bitcast %"struct.std::__1::pair"* %128 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 16, i1 false) #11
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 4
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %116, i64 4
  %134 = icmp ult %"struct.std::__1::pair"* %132, %7
  br i1 %134, label %115, label %55

135:                                              ; preds = %81, %85, %58
  %136 = icmp ugt %"struct.std::__1::pair"* %1, %2
  br i1 %136, label %142, label %137

137:                                              ; preds = %135
  %138 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %139 = icmp ugt %"struct.std::__1::pair"* %138, %2
  %140 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 1
  %141 = select i1 %139, %"struct.std::__1::pair"* %140, %"struct.std::__1::pair"* %2
  br label %142

142:                                              ; preds = %137, %135
  %143 = phi %"struct.std::__1::pair"* [ %2, %135 ], [ %141, %137 ]
  %144 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 0, i32 0
  %145 = load i64, i64* %144, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 0, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  store i64 %148, i64* %149, align 8
  br label %288

150:                                              ; preds = %3
  %151 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %152 = bitcast %"class.std::__1::vector"* %0 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %11, %153
  %155 = ashr exact i64 %154, 4
  %156 = add nsw i64 %155, 1
  %157 = icmp ugt i64 %156, 1152921504606846975
  br i1 %157, label %158, label %160

158:                                              ; preds = %150
  %159 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %159) #13
  unreachable

160:                                              ; preds = %150
  %161 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %162 = sub i64 %12, %153
  %163 = ashr exact i64 %162, 4
  %164 = icmp ult i64 %163, 576460752303423487
  br i1 %164, label %168, label %165

165:                                              ; preds = %160
  %166 = sub i64 %4, %153
  %167 = ashr exact i64 %166, 4
  br label %178

168:                                              ; preds = %160
  %169 = ashr exact i64 %162, 3
  %170 = icmp ult i64 %169, %156
  %171 = select i1 %170, i64 %156, i64 %169
  %172 = sub i64 %4, %153
  %173 = ashr exact i64 %172, 4
  %174 = icmp eq i64 %171, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %168
  %176 = icmp ugt i64 %171, 1152921504606846975
  br i1 %176, label %177, label %178

177:                                              ; preds = %175
  tail call void @abort() #13
  unreachable

178:                                              ; preds = %165, %175
  %179 = phi i64 [ 1152921504606846975, %165 ], [ %171, %175 ]
  %180 = phi i64 [ %167, %165 ], [ %173, %175 ]
  %181 = shl i64 %179, 4
  %182 = tail call i8* @_Znwm(i64 %181) #12
  %183 = bitcast i8* %182 to %"struct.std::__1::pair"*
  br label %184

184:                                              ; preds = %168, %178
  %185 = phi i64 [ %180, %178 ], [ %173, %168 ]
  %186 = phi i64 [ %179, %178 ], [ 0, %168 ]
  %187 = phi i8* [ %182, %178 ], [ null, %168 ]
  %188 = phi %"struct.std::__1::pair"* [ %183, %178 ], [ null, %168 ]
  %189 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %188, i64 %185
  %190 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %188, i64 %186
  %191 = ptrtoint %"struct.std::__1::pair"* %190 to i64
  %192 = icmp eq i64 %185, %186
  %193 = bitcast %"struct.std::__1::pair"* %189 to i8*
  br i1 %192, label %194, label %218

194:                                              ; preds = %184
  %195 = icmp sgt i64 %185, 0
  br i1 %195, label %196, label %201

196:                                              ; preds = %194
  %197 = add nuw nsw i64 %185, 1
  %198 = sdiv i64 %197, -2
  %199 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %189, i64 %198
  %200 = bitcast %"struct.std::__1::pair"* %199 to i8*
  br label %218

201:                                              ; preds = %194
  %202 = shl nsw i64 %185, 1
  %203 = icmp eq i64 %185, 0
  %204 = select i1 %203, i64 1, i64 %202
  %205 = icmp ugt i64 %204, 1152921504606846975
  br i1 %205, label %206, label %207

206:                                              ; preds = %201
  tail call void @abort() #13
  unreachable

207:                                              ; preds = %201
  %208 = lshr i64 %204, 2
  %209 = shl i64 %204, 4
  %210 = tail call i8* @_Znwm(i64 %209) #12
  %211 = bitcast i8* %210 to %"struct.std::__1::pair"*
  %212 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %211, i64 %208
  %213 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %211, i64 %204
  %214 = ptrtoint %"struct.std::__1::pair"* %213 to i64
  %215 = icmp eq %"struct.std::__1::pair"* %188, null
  %216 = bitcast %"struct.std::__1::pair"* %212 to i8*
  br i1 %215, label %218, label %217

217:                                              ; preds = %207
  tail call void @_ZdlPv(i8* %187) #12
  br label %218

218:                                              ; preds = %184, %196, %207, %217
  %219 = phi %"struct.std::__1::pair"* [ %199, %196 ], [ %212, %207 ], [ %212, %217 ], [ %189, %184 ]
  %220 = phi i64 [ %191, %196 ], [ %214, %207 ], [ %214, %217 ], [ %191, %184 ]
  %221 = phi i8* [ %200, %196 ], [ %216, %207 ], [ %216, %217 ], [ %193, %184 ]
  %222 = bitcast %"struct.std::__1::pair"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %221, i8* align 8 %222, i64 16, i1 false) #11
  %223 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %219, i64 1
  %224 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %225 = ptrtoint %"struct.std::__1::pair"* %224 to i64
  %226 = sub i64 %4, %225
  %227 = ashr exact i64 %226, 4
  %228 = sub nsw i64 0, %227
  %229 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %219, i64 %228
  %230 = ptrtoint %"struct.std::__1::pair"* %229 to i64
  %231 = icmp sgt i64 %226, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %218
  %233 = bitcast %"struct.std::__1::pair"* %229 to i8*
  %234 = bitcast %"struct.std::__1::pair"* %224 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 %226, i1 false) #11
  br label %235

235:                                              ; preds = %232, %218
  %236 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %237 = icmp eq %"struct.std::__1::pair"* %236, %1
  br i1 %237, label %281, label %238

238:                                              ; preds = %235
  %239 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %236, i64 -1, i32 0
  %240 = ptrtoint i64* %239 to i64
  %241 = sub i64 %240, %4
  %242 = lshr i64 %241, 4
  %243 = add nuw nsw i64 %242, 1
  %244 = and i64 %243, 3
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %256, label %246

246:                                              ; preds = %238, %246
  %247 = phi %"struct.std::__1::pair"* [ %253, %246 ], [ %223, %238 ]
  %248 = phi %"struct.std::__1::pair"* [ %252, %246 ], [ %1, %238 ]
  %249 = phi i64 [ %254, %246 ], [ %244, %238 ]
  %250 = bitcast %"struct.std::__1::pair"* %247 to i8*
  %251 = bitcast %"struct.std::__1::pair"* %248 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* align 8 %251, i64 16, i1 false) #11
  %252 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %248, i64 1
  %253 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %247, i64 1
  %254 = add i64 %249, -1
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %246, !llvm.loop !100

256:                                              ; preds = %246, %238
  %257 = phi %"struct.std::__1::pair"* [ undef, %238 ], [ %253, %246 ]
  %258 = phi %"struct.std::__1::pair"* [ %223, %238 ], [ %253, %246 ]
  %259 = phi %"struct.std::__1::pair"* [ %1, %238 ], [ %252, %246 ]
  %260 = icmp ult i64 %241, 48
  br i1 %260, label %281, label %261

261:                                              ; preds = %256, %261
  %262 = phi %"struct.std::__1::pair"* [ %279, %261 ], [ %258, %256 ]
  %263 = phi %"struct.std::__1::pair"* [ %278, %261 ], [ %259, %256 ]
  %264 = bitcast %"struct.std::__1::pair"* %262 to i8*
  %265 = bitcast %"struct.std::__1::pair"* %263 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %264, i8* align 8 %265, i64 16, i1 false) #11
  %266 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %263, i64 1
  %267 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %262, i64 1
  %268 = bitcast %"struct.std::__1::pair"* %267 to i8*
  %269 = bitcast %"struct.std::__1::pair"* %266 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %268, i8* align 8 %269, i64 16, i1 false) #11
  %270 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %263, i64 2
  %271 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %262, i64 2
  %272 = bitcast %"struct.std::__1::pair"* %271 to i8*
  %273 = bitcast %"struct.std::__1::pair"* %270 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 16, i1 false) #11
  %274 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %263, i64 3
  %275 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %262, i64 3
  %276 = bitcast %"struct.std::__1::pair"* %275 to i8*
  %277 = bitcast %"struct.std::__1::pair"* %274 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %276, i8* align 8 %277, i64 16, i1 false) #11
  %278 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %263, i64 4
  %279 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %262, i64 4
  %280 = icmp eq %"struct.std::__1::pair"* %278, %236
  br i1 %280, label %281, label %261

281:                                              ; preds = %256, %261, %235
  %282 = phi %"struct.std::__1::pair"* [ %223, %235 ], [ %257, %256 ], [ %279, %261 ]
  %283 = ptrtoint %"struct.std::__1::pair"* %282 to i64
  %284 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  store i64 %230, i64* %152, align 8
  store i64 %283, i64* %151, align 8
  store i64 %220, i64* %161, align 8
  %285 = icmp eq %"struct.std::__1::pair"* %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %281
  %287 = bitcast %"struct.std::__1::pair"* %284 to i8*
  tail call void @_ZdlPv(i8* %287) #12
  br label %288

288:                                              ; preds = %286, %281, %15, %142
  %289 = phi %"struct.std::__1::pair"* [ %1, %15 ], [ %1, %142 ], [ %219, %281 ], [ %219, %286 ]
  ret %"struct.std::__1::pair"* %289
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.13"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.13"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.13"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.13"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !101
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !101
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !104, !noalias !101
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !104, !noalias !101
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !101
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !101
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !104, !noalias !101
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !104, !noalias !101
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !101
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !101
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !104, !noalias !101
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !104, !noalias !101
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !101
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !101
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !104, !noalias !101
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !104, !noalias !101
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !106

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !101
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !101
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !104, !noalias !101
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !104, !noalias !101
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !107

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !108

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !109

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !110

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !111

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !112

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !114
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !114
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !117, !noalias !114
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !117, !noalias !114
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !114
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !114
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !117, !noalias !114
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !117, !noalias !114
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !114
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !114
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !117, !noalias !114
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !117, !noalias !114
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !114
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !114
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !117, !noalias !114
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !117, !noalias !114
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !119

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !114
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !114
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !117, !noalias !114
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !117, !noalias !114
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !120

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !121

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !122

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.13"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair"*
  br i1 %15, label %101, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %22
  %25 = select i1 %23, %"struct.std::__1::pair"* %24, %"struct.std::__1::pair"* %2
  %26 = icmp eq %"struct.std::__1::pair"* %25, %1
  br i1 %26, label %84, label %27

27:                                               ; preds = %17
  %28 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 -1, i32 0
  %29 = ptrtoint i64* %28 to i64
  %30 = sub i64 %29, %4
  %31 = lshr i64 %30, 4
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"struct.std::__1::pair"* [ %46, %35 ], [ %16, %27 ]
  %37 = phi %"struct.std::__1::pair"* [ %45, %35 ], [ %1, %27 ]
  %38 = phi i64 [ %47, %35 ], [ %33, %27 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %47 = add i64 %38, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %35, !llvm.loop !123

49:                                               ; preds = %35, %27
  %50 = phi %"struct.std::__1::pair"* [ undef, %27 ], [ %46, %35 ]
  %51 = phi %"struct.std::__1::pair"* [ %16, %27 ], [ %46, %35 ]
  %52 = phi %"struct.std::__1::pair"* [ %1, %27 ], [ %45, %35 ]
  %53 = icmp ult i64 %30, 48
  br i1 %53, label %84, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"struct.std::__1::pair"* [ %82, %54 ], [ %51, %49 ]
  %56 = phi %"struct.std::__1::pair"* [ %81, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 1, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 0
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 1, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 1
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 2, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 0
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 2, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 1
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 3, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 0
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 3, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 1
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 4
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 4
  %83 = icmp eq %"struct.std::__1::pair"* %81, %25
  br i1 %83, label %84, label %54

84:                                               ; preds = %49, %54, %17
  %85 = phi %"struct.std::__1::pair"* [ %16, %17 ], [ %50, %49 ], [ %82, %54 ]
  br i1 %23, label %86, label %100

86:                                               ; preds = %84
  %87 = load i64, i64* %19, align 8
  %88 = ptrtoint %"struct.std::__1::pair"* %25 to i64
  %89 = sub i64 %5, %88
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %86
  %92 = lshr exact i64 %89, 4
  %93 = inttoptr i64 %87 to i8*
  %94 = bitcast %"struct.std::__1::pair"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 %89, i1 false) #11
  %95 = inttoptr i64 %87 to %"struct.std::__1::pair"*
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 %92
  %97 = ptrtoint %"struct.std::__1::pair"* %96 to i64
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i64 [ %97, %91 ], [ %87, %86 ]
  store i64 %99, i64* %19, align 8
  br label %142

100:                                              ; preds = %84
  store %"struct.std::__1::pair"* %85, %"struct.std::__1::pair"** %18, align 8
  br label %142

101:                                              ; preds = %3
  %102 = icmp eq i64 %12, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %105 = bitcast %"struct.std::__1::pair"** %104 to i64*
  store i64 %12, i64* %105, align 8
  %106 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %106) #12
  %107 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #11
  br label %108

108:                                              ; preds = %101, %103
  %109 = phi i64 [ %10, %101 ], [ 0, %103 ]
  %110 = icmp ugt i64 %7, 1152921504606846975
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #13
  unreachable

113:                                              ; preds = %108
  %114 = ashr exact i64 %109, 4
  %115 = icmp ult i64 %114, 576460752303423487
  br i1 %115, label %116, label %123

116:                                              ; preds = %113
  %117 = ashr exact i64 %109, 3
  %118 = icmp ult i64 %117, %7
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = icmp ugt i64 %117, 1152921504606846975
  br i1 %120, label %121, label %123

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %122) #13
  unreachable

123:                                              ; preds = %116, %113, %119
  %124 = phi i64 [ %117, %119 ], [ 1152921504606846975, %113 ], [ %7, %116 ]
  %125 = shl i64 %124, 4
  %126 = tail call i8* @_Znwm(i64 %125) #12
  %127 = bitcast i8* %126 to %"struct.std::__1::pair"*
  %128 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %129 = bitcast %"struct.std::__1::pair"** %128 to i8**
  store i8* %126, i8** %129, align 8
  %130 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %126, i8** %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %124
  store %"struct.std::__1::pair"* %131, %"struct.std::__1::pair"** %8, align 8
  %132 = bitcast %"struct.std::__1::pair"** %128 to i64*
  %133 = ptrtoint i8* %126 to i64
  %134 = icmp sgt i64 %6, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %123
  %136 = lshr exact i64 %6, 4
  %137 = bitcast %"struct.std::__1::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 %137, i64 %6, i1 false) #11
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %136
  %139 = ptrtoint %"struct.std::__1::pair"* %138 to i64
  br label %140

140:                                              ; preds = %123, %135
  %141 = phi i64 [ %139, %135 ], [ %133, %123 ]
  store i64 %141, i64* %132, align 8
  br label %142

142:                                              ; preds = %98, %100, %140
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = !{!8}
!8 = distinct !{!8, !9}
!9 = distinct !{!9, !"LVerDomain"}
!10 = !{!11}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !13}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !13}
!23 = distinct !{!23, !3}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !13}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !13}
!32 = distinct !{!32, !3}
!33 = distinct !{!33, !3}
!34 = distinct !{!34, !13}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !13}
!41 = distinct !{!41, !3}
!42 = distinct !{!42, !3}
!43 = distinct !{!43, !13}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !13}
!50 = distinct !{!50, !3}
!51 = distinct !{!51, !3}
!52 = distinct !{!52, !13}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !13}
!59 = distinct !{!59, !3}
!60 = distinct !{!60, !3}
!61 = distinct !{!61, !13}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !13}
!68 = distinct !{!68, !3}
!69 = distinct !{!69, !3}
!70 = distinct !{!70, !13}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !13}
!77 = distinct !{!77, !3}
!78 = distinct !{!78, !3}
!79 = distinct !{!79, !13}
!80 = !{!81}
!81 = distinct !{!81, !82}
!82 = distinct !{!82, !"LVerDomain"}
!83 = !{!84}
!84 = distinct !{!84, !82}
!85 = distinct !{!85, !13}
!86 = distinct !{!86, !3}
!87 = distinct !{!87, !3}
!88 = distinct !{!88, !13}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !13}
!95 = distinct !{!95, !3}
!96 = distinct !{!96, !3}
!97 = distinct !{!97, !13}
!98 = distinct !{!98, !3}
!99 = distinct !{!99, !3}
!100 = distinct !{!100, !3}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !13}
!107 = distinct !{!107, !3}
!108 = distinct !{!108, !3}
!109 = distinct !{!109, !13}
!110 = distinct !{!110, !13}
!111 = distinct !{!111, !3}
!112 = distinct !{!112, !113, !13}
!113 = !{!"llvm.loop.unroll.runtime.disable"}
!114 = !{!115}
!115 = distinct !{!115, !116}
!116 = distinct !{!116, !"LVerDomain"}
!117 = !{!118}
!118 = distinct !{!118, !116}
!119 = distinct !{!119, !13}
!120 = distinct !{!120, !3}
!121 = distinct !{!121, !3}
!122 = distinct !{!122, !13}
!123 = distinct !{!123, !3}
