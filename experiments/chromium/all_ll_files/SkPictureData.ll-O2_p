; ModuleID = '../../third_party/skia/src/core/SkPictureData.cpp'
source_filename = "../../third_party/skia/src/core/SkPictureData.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp, %class.sk_sp.1, %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.3 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.4 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkPictureData = type <{ %class.SkTArray, %class.SkTArray.5, %class.sk_sp.19, %class.SkPath, %class.SkBitmap, %class.SkTArray.25, %class.SkTArray.27, %class.SkTArray.29, %class.SkTArray.37, %class.SkTArray.40, %class.SkTypefacePlayback, %"class.std::__1::unique_ptr.44", %struct.SkPictInfo, [4 x i8] }>
%class.SkTArray = type { %class.SkPaint*, i64 }
%class.SkTArray.5 = type { %class.SkPath*, i64 }
%class.sk_sp.19 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.20, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.20 = type { %"struct.std::__1::atomic" }
%class.SkPath = type <{ %class.sk_sp.6, i32, %"struct.std::__1::atomic.9", %"struct.std::__1::atomic.9", i8, i8 }>
%class.sk_sp.6 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.7, %class.SkTDArray.8, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.7 = type { i8*, i32, i32 }
%class.SkTDArray.8 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.14 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.9" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.14 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.15", [3 x i8] }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%class.SkBitmap = type { %class.sk_sp.21, %class.SkPixmap, %class.sk_sp.24 }
%class.sk_sp.21 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.22, i32, i32 }
%class.sk_sp.22 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.23, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.23 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.24 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkTArray.25 = type { %class.sk_sp.26*, i64 }
%class.sk_sp.26 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.15", [7 x i8] }>
%class.SkTArray.27 = type { %class.sk_sp.28*, i64 }
%class.sk_sp.28 = type { %class.SkDrawable* }
%class.SkDrawable = type { %class.SkFlattenable.base, i32 }
%class.SkTArray.29 = type { %class.sk_sp.30*, i64 }
%class.sk_sp.30 = type { %class.SkTextBlob* }
%class.SkTextBlob = type { %class.SkNVRefCnt.31, %struct.SkRect, i32, %"struct.std::__1::atomic.32" }
%class.SkNVRefCnt.31 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i32 }
%class.SkTArray.37 = type { %class.sk_sp.38*, i64 }
%class.sk_sp.38 = type { %class.SkVertices* }
%class.SkVertices = type <{ %class.SkNVRefCnt.39, i32, %struct.SkPoint*, i16*, %struct.SkPoint*, i32*, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkNVRefCnt.39 = type { %"struct.std::__1::atomic" }
%class.SkTArray.40 = type { %class.sk_sp.41*, i64 }
%class.sk_sp.41 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkTypefacePlayback = type { i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.42* }
%class.sk_sp.42 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.SkFactoryPlayback* }
%class.SkFactoryPlayback = type { i32, void (%class.sk_sp.55*, %class.SkReadBuffer*)** }
%class.sk_sp.55 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.42*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.55*, %class.SkReadBuffer*)* }
%struct.SkDeserialProcs = type { void (%class.sk_sp.53*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.54*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.42*, i8*, i64, i8*)*, i8* }
%class.sk_sp.53 = type { %class.SkPicture* }
%class.sk_sp.54 = type { %class.SkImage* }
%struct.SkPictInfo = type { [8 x i8], i32, %struct.SkRect }
%class.SkPictureRecord = type { %class.SkCanvasVirtualEnforcer, %class.SkTDArray.73, %class.SkTDArray.74, %class.SkTArray, %class.SkTHashMap.75, %class.SkWriter32, %class.SkTArray.40, %class.SkTArray.25, %class.SkTArray.27, %class.SkTArray.29, %class.SkTArray.37, i32, i32 }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.59, [384 x i64], %class.sk_sp.60, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.61", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.67" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.59 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.60 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkTDArray.73 = type { i32*, i32, i32 }
%class.SkTDArray.74 = type { i32*, i32, i32 }
%class.SkTHashMap.75 = type { %class.SkTHashTable.76 }
%class.SkTHashTable.76 = type { i32, i32, %class.SkAutoTArray.77 }
%class.SkAutoTArray.77 = type { %"class.std::__1::unique_ptr.78" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair" = type { %"struct.std::__1::pair.base", [4 x i8] }
%"struct.std::__1::pair.base" = type { %class.SkPath, i32 }
%class.SkWriter32 = type { i8*, i64, i64, i8*, %class.SkAutoTMalloc }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.84" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { i8* }
%class.SkWStream = type { i32 (...)** }
%class.SkFactorySet = type { %class.SkTPtrSet }
%class.SkTPtrSet = type { %class.SkPtrSet }
%class.SkPtrSet = type { %class.SkRefCnt.base, %class.SkTDArray.88 }
%class.SkTDArray.88 = type { %"struct.SkPtrSet::Pair"*, i32, i32 }
%"struct.SkPtrSet::Pair" = type { i8*, i32 }
%class.SkAutoSTMalloc = type { void (%class.sk_sp.55*, %class.SkReadBuffer*)**, %union.anon.89 }
%union.anon.89 = type { [1 x void (%class.sk_sp.55*, %class.SkReadBuffer*)*], [120 x i8] }
%class.SkRefCntSet = type { %class.SkTPtrSet.90 }
%class.SkTPtrSet.90 = type { %class.SkPtrSet }
%struct.SkSerialProcs = type { void (%class.sk_sp.19*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.19*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.19*, %class.SkTypeface*, i8*)*, i8* }
%class.SkAutoSTMalloc.91 = type { %class.SkTypeface**, %union.anon.92 }
%union.anon.92 = type { [1 x %class.SkTypeface*], [120 x i8] }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%class.SkVerticesPriv = type { %class.SkVertices* }
%class.SkBinaryWriteBuffer = type { %class.SkWriteBuffer, %class.sk_sp.93, %class.sk_sp.94, %class.SkWriter32, %class.SkTHashMap.95 }
%class.sk_sp.93 = type { %class.SkFactorySet* }
%class.sk_sp.94 = type { %class.SkRefCntSet* }
%class.SkTHashMap.95 = type { %class.SkTHashTable.96 }
%class.SkTHashTable.96 = type { i32, i32, %class.SkAutoTArray.97 }
%class.SkAutoTArray.97 = type { %"class.std::__1::unique_ptr.98" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot" = type opaque
%struct.DevNull = type { %class.SkWStream, i64 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkStream = type { i32 (...)** }
%class.SkString = type { %class.sk_sp.104 }
%class.sk_sp.104 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.sk_sp.110 = type { %class.SkVertices* }
%class.sk_sp.109 = type { %class.SkTextBlob* }
%class.SkFont = type <{ %class.sk_sp.42, float, float, float, i8, i8, i8, i8 }>

$_ZN8SkTArrayI7SkPaintLb0EEaSERKS1_ = comdat any

$_ZN8SkTArrayI6SkPathLb0EE5resetEi = comdat any

$_ZN8SkPtrSetD2Ev = comdat any

$_Z21new_array_from_bufferIK7SkImageS0_EbR12SkReadBufferjR8SkTArrayI5sk_spIT_ELb0EEPFS5_IT0_ES3_E = comdat any

$_Z21new_array_from_bufferI10SkDrawableS0_EbR12SkReadBufferjR8SkTArrayI5sk_spIT_ELb0EEPFS4_IT0_ES2_E = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN8SkPtrSet6incPtrEPv = comdat any

$_ZN8SkPtrSet6decPtrEPv = comdat any

$_ZN8SkPtrSetD0Ev = comdat any

$_ZN12SkFactorySetD0Ev = comdat any

$_ZN8SkTArrayI7SkPaintLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN8SkTArrayI6SkPathLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN8SkTArrayI5sk_spIK9SkPictureELb0EE12checkReallocEiNS4_11ReallocTypeE = comdat any

$_ZN8SkTArrayI5sk_spIK10SkTextBlobELb0EE12checkReallocEiNS4_11ReallocTypeE = comdat any

$_ZN8SkTArrayI5sk_spIK10SkVerticesELb0EE12checkReallocEiNS4_11ReallocTypeE = comdat any

$_ZN8SkTArrayI5sk_spIK7SkImageELb0EE12checkReallocEiNS4_11ReallocTypeE = comdat any

$_ZN8SkTArrayI5sk_spI10SkDrawableELb0EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZN13SkPictureDataD2Ev = comdat any

$_ZTV8SkPtrSet = comdat any

$_ZTV12SkFactorySet = comdat any

@_ZZNK13SkPictureData13requiredPaintEP12SkReadBufferE4stub = internal unnamed_addr global %class.SkPaint* null, align 8
@_ZGVZNK13SkPictureData13requiredPaintEP12SkReadBufferE4stub = internal global i64 0, align 8
@_ZTV11SkRefCntSet = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTV8SkPtrSet = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPtrSet*)* @_ZN8SkPtrSetD2Ev to i8*), i8* bitcast (void (%class.SkPtrSet*)* @_ZN8SkPtrSetD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.SkPtrSet*, i8*)* @_ZN8SkPtrSet6incPtrEPv to i8*), i8* bitcast (void (%class.SkPtrSet*, i8*)* @_ZN8SkPtrSet6decPtrEPv to i8*)] }, comdat, align 8
@_ZTV12SkFactorySet = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPtrSet*)* @_ZN8SkPtrSetD2Ev to i8*), i8* bitcast (void (%class.SkFactorySet*)* @_ZN12SkFactorySetD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.SkPtrSet*, i8*)* @_ZN8SkPtrSet6incPtrEPv to i8*), i8* bitcast (void (%class.SkPtrSet*, i8*)* @_ZN8SkPtrSet6decPtrEPv to i8*)] }, comdat, align 8
@_ZTVZNK13SkPictureData9serializeEP9SkWStreamRK13SkSerialProcsP11SkRefCntSetbE7DevNull = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkWStream*)* @_ZN9SkWStreamD2Ev to i8*), i8* bitcast (void (%struct.DevNull*)* @_ZZNK13SkPictureData9serializeEP9SkWStreamRK13SkSerialProcsP11SkRefCntSetbEN7DevNullD0Ev to i8*), i8* bitcast (i1 (%struct.DevNull*, i8*, i64)* @_ZZNK13SkPictureData9serializeEP9SkWStreamRK13SkSerialProcsP11SkRefCntSetbEN7DevNull5writeEPKvm to i8*), i8* bitcast (void (%class.SkWStream*)* @_ZN9SkWStream5flushEv to i8*), i8* bitcast (i64 (%struct.DevNull*)* @_ZZNK13SkPictureData9serializeEP9SkWStreamRK13SkSerialProcsP11SkRefCntSetbENK7DevNull12bytesWrittenEv to i8*)] }, align 8

@_ZN13SkPictureDataC1ERK10SkPictInfo = hidden unnamed_addr alias void (%class.SkPictureData*, %struct.SkPictInfo*), void (%class.SkPictureData*, %struct.SkPictInfo*)* @_ZN13SkPictureDataC2ERK10SkPictInfo
@_ZN13SkPictureDataC1ERK15SkPictureRecordRK10SkPictInfo = hidden unnamed_addr alias void (%class.SkPictureData*, %class.SkPictureRecord*, %struct.SkPictInfo*), void (%class.SkPictureData*, %class.SkPictureRecord*, %struct.SkPictInfo*)* @_ZN13SkPictureDataC2ERK15SkPictureRecordRK10SkPictInfo

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPictureDataC2ERK10SkPictInfo(%class.SkPictureData*, %struct.SkPictInfo* nocapture readonly dereferenceable(28)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 0
  store %class.SkPaint* null, %class.SkPaint** %4, align 8
  store i64 1, i64* %3, align 8
  %5 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1, i32 1
  %6 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1, i32 0
  store %class.SkPath* null, %class.SkPath** %6, align 8
  store i64 1, i64* %5, align 8
  %7 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 2, i32 0
  store %class.SkData* null, %class.SkData** %7, align 8
  %8 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 3
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %8) #12
  %9 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 4
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %9) #12
  %10 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 1
  %11 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 0
  store %class.sk_sp.26* null, %class.sk_sp.26** %11, align 8
  store i64 1, i64* %10, align 8
  %12 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 6, i32 1
  %13 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 6, i32 0
  store %class.sk_sp.28* null, %class.sk_sp.28** %13, align 8
  store i64 1, i64* %12, align 8
  %14 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 7, i32 1
  %15 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 7, i32 0
  store %class.sk_sp.30* null, %class.sk_sp.30** %15, align 8
  store i64 1, i64* %14, align 8
  %16 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 8, i32 1
  %17 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 8, i32 0
  store %class.sk_sp.38* null, %class.sk_sp.38** %17, align 8
  store i64 1, i64* %16, align 8
  %18 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 9, i32 1
  %19 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 9, i32 0
  store %class.sk_sp.41* null, %class.sk_sp.41** %19, align 8
  store i64 1, i64* %18, align 8
  %20 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 10
  %21 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 12, i32 0, i64 0
  %22 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %1, i64 0, i32 0, i64 0
  %23 = bitcast %class.SkTypefacePlayback* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 28, i1 false)
  ret void
}

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkPictureData15initForPlaybackEv(%class.SkPictureData* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 4294967294
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1, i32 0
  br label %9

8:                                                ; preds = %28, %1
  ret void

9:                                                ; preds = %6, %28
  %10 = phi i64 [ %3, %6 ], [ %29, %28 ]
  %11 = phi i64 [ 0, %6 ], [ %30, %28 ]
  %12 = load %class.SkPath*, %class.SkPath** %7, align 8
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 %11, i32 0, i32 0
  %14 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 1
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 3, i32 0
  %21 = load %struct.SkPoint*, %struct.SkPoint** %20, align 8
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 3, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %19, %struct.SkPoint* %21, i32 %23) #12
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 10
  %26 = zext i1 %24 to i8
  store i8 %26, i8* %25, align 1
  store i8 0, i8* %15, align 8
  %27 = load i64, i64* %2, align 8
  br label %28

28:                                               ; preds = %9, %18
  %29 = phi i64 [ %10, %9 ], [ %27, %18 ]
  %30 = add nuw nsw i64 %11, 1
  %31 = lshr i64 %29, 1
  %32 = and i64 %31, 2147483647
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %9, label %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPictureDataC2ERK15SkPictureRecordRK10SkPictInfo(%class.SkPictureData*, %class.SkPictureRecord* dereferenceable(3424), %struct.SkPictInfo* nocapture readonly dereferenceable(28)) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.19, align 8
  %5 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0
  %6 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 0
  store %class.SkPaint* null, %class.SkPaint** %7, align 8
  store i64 1, i64* %6, align 8
  %8 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %class.SkTArray.5, %class.SkTArray.5* %8, i64 0, i32 0
  store %class.SkPath* null, %class.SkPath** %10, align 8
  store i64 1, i64* %9, align 8
  %11 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 2
  %12 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %11, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %12, align 8
  %13 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 3
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %13) #12
  %14 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 4
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %14) #12
  %15 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5
  %16 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 7, i32 0
  %17 = load %class.sk_sp.26*, %class.sk_sp.26** %16, align 8
  %18 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 7, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = lshr i64 %19, 1
  %21 = trunc i64 %20 to i32
  %22 = and i32 %21, 2147483647
  %23 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %19, 4294967294
  %26 = and i64 %24, -4294967295
  %27 = or i64 %26, %25
  store i64 %27, i64* %23, align 8
  %28 = icmp eq i32 %22, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %3
  %30 = and i64 %27, 8589934591
  store i64 %30, i64* %23, align 8
  %31 = getelementptr inbounds %class.SkTArray.25, %class.SkTArray.25* %15, i64 0, i32 0
  store %class.sk_sp.26* null, %class.sk_sp.26** %31, align 8
  br label %43

32:                                               ; preds = %3
  %33 = icmp ugt i32 %22, 8
  %34 = select i1 %33, i32 %22, i32 8
  %35 = zext i32 %34 to i64
  %36 = shl nuw i64 %35, 33
  %37 = and i64 %27, 8589934591
  %38 = or i64 %36, %37
  store i64 %38, i64* %23, align 8
  %39 = tail call i8* @_Z15sk_malloc_throwmm(i64 %35, i64 8) #12
  %40 = bitcast %class.SkTArray.25* %15 to i8**
  store i8* %39, i8** %40, align 8
  %41 = load i64, i64* %23, align 8
  %42 = bitcast i8* %39 to %class.sk_sp.26*
  br label %43

43:                                               ; preds = %32, %29
  %44 = phi %class.sk_sp.26* [ %42, %32 ], [ null, %29 ]
  %45 = phi i64 [ %41, %32 ], [ %30, %29 ]
  %46 = and i64 %45, -4294967298
  %47 = or i64 %46, 1
  store i64 %47, i64* %23, align 8
  %48 = and i64 %45, 4294967294
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %70, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %class.SkTArray.25, %class.SkTArray.25* %15, i64 0, i32 0
  br label %52

52:                                               ; preds = %68, %50
  %53 = phi %class.sk_sp.26* [ %44, %50 ], [ %69, %68 ]
  %54 = phi i64 [ 0, %50 ], [ %63, %68 ]
  %55 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %53, i64 %54, i32 0
  %56 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %17, i64 %54, i32 0
  %57 = load %class.SkPicture*, %class.SkPicture** %56, align 8
  %58 = icmp eq %class.SkPicture* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %57, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 1 monotonic
  br label %62

62:                                               ; preds = %59, %52
  store %class.SkPicture* %57, %class.SkPicture** %55, align 8
  %63 = add nuw nsw i64 %54, 1
  %64 = load i64, i64* %23, align 8
  %65 = lshr i64 %64, 1
  %66 = and i64 %65, 2147483647
  %67 = icmp ult i64 %63, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = load %class.sk_sp.26*, %class.sk_sp.26** %51, align 8
  br label %52

70:                                               ; preds = %62, %43
  %71 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 6
  %72 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 8, i32 0
  %73 = load %class.sk_sp.28*, %class.sk_sp.28** %72, align 8
  %74 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 8, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = lshr i64 %75, 1
  %77 = trunc i64 %76 to i32
  %78 = and i32 %77, 2147483647
  %79 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 6, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %75, 4294967294
  %82 = and i64 %80, -4294967295
  %83 = or i64 %82, %81
  store i64 %83, i64* %79, align 8
  %84 = icmp eq i32 %78, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %70
  %86 = and i64 %83, 8589934591
  store i64 %86, i64* %79, align 8
  %87 = getelementptr inbounds %class.SkTArray.27, %class.SkTArray.27* %71, i64 0, i32 0
  store %class.sk_sp.28* null, %class.sk_sp.28** %87, align 8
  br label %99

88:                                               ; preds = %70
  %89 = icmp ugt i32 %78, 8
  %90 = select i1 %89, i32 %78, i32 8
  %91 = zext i32 %90 to i64
  %92 = shl nuw i64 %91, 33
  %93 = and i64 %83, 8589934591
  %94 = or i64 %92, %93
  store i64 %94, i64* %79, align 8
  %95 = tail call i8* @_Z15sk_malloc_throwmm(i64 %91, i64 8) #12
  %96 = bitcast %class.SkTArray.27* %71 to i8**
  store i8* %95, i8** %96, align 8
  %97 = load i64, i64* %79, align 8
  %98 = bitcast i8* %95 to %class.sk_sp.28*
  br label %99

99:                                               ; preds = %88, %85
  %100 = phi %class.sk_sp.28* [ %98, %88 ], [ null, %85 ]
  %101 = phi i64 [ %97, %88 ], [ %86, %85 ]
  %102 = and i64 %101, -4294967298
  %103 = or i64 %102, 1
  store i64 %103, i64* %79, align 8
  %104 = and i64 %101, 4294967294
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %126, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %class.SkTArray.27, %class.SkTArray.27* %71, i64 0, i32 0
  br label %108

108:                                              ; preds = %124, %106
  %109 = phi %class.sk_sp.28* [ %100, %106 ], [ %125, %124 ]
  %110 = phi i64 [ 0, %106 ], [ %119, %124 ]
  %111 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %109, i64 %110, i32 0
  %112 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %73, i64 %110, i32 0
  %113 = load %class.SkDrawable*, %class.SkDrawable** %112, align 8
  %114 = icmp eq %class.SkDrawable* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %class.SkDrawable, %class.SkDrawable* %113, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 1 monotonic
  br label %118

118:                                              ; preds = %115, %108
  store %class.SkDrawable* %113, %class.SkDrawable** %111, align 8
  %119 = add nuw nsw i64 %110, 1
  %120 = load i64, i64* %79, align 8
  %121 = lshr i64 %120, 1
  %122 = and i64 %121, 2147483647
  %123 = icmp ult i64 %119, %122
  br i1 %123, label %124, label %126

124:                                              ; preds = %118
  %125 = load %class.sk_sp.28*, %class.sk_sp.28** %107, align 8
  br label %108

126:                                              ; preds = %118, %99
  %127 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 7
  %128 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 9, i32 0
  %129 = load %class.sk_sp.30*, %class.sk_sp.30** %128, align 8
  %130 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 9, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = lshr i64 %131, 1
  %133 = trunc i64 %132 to i32
  %134 = and i32 %133, 2147483647
  %135 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 7, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %131, 4294967294
  %138 = and i64 %136, -4294967295
  %139 = or i64 %138, %137
  store i64 %139, i64* %135, align 8
  %140 = icmp eq i32 %134, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %126
  %142 = and i64 %139, 8589934591
  store i64 %142, i64* %135, align 8
  %143 = getelementptr inbounds %class.SkTArray.29, %class.SkTArray.29* %127, i64 0, i32 0
  store %class.sk_sp.30* null, %class.sk_sp.30** %143, align 8
  br label %155

144:                                              ; preds = %126
  %145 = icmp ugt i32 %134, 8
  %146 = select i1 %145, i32 %134, i32 8
  %147 = zext i32 %146 to i64
  %148 = shl nuw i64 %147, 33
  %149 = and i64 %139, 8589934591
  %150 = or i64 %148, %149
  store i64 %150, i64* %135, align 8
  %151 = tail call i8* @_Z15sk_malloc_throwmm(i64 %147, i64 8) #12
  %152 = bitcast %class.SkTArray.29* %127 to i8**
  store i8* %151, i8** %152, align 8
  %153 = load i64, i64* %135, align 8
  %154 = bitcast i8* %151 to %class.sk_sp.30*
  br label %155

155:                                              ; preds = %144, %141
  %156 = phi %class.sk_sp.30* [ %154, %144 ], [ null, %141 ]
  %157 = phi i64 [ %153, %144 ], [ %142, %141 ]
  %158 = and i64 %157, -4294967298
  %159 = or i64 %158, 1
  store i64 %159, i64* %135, align 8
  %160 = and i64 %157, 4294967294
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %182, label %162

162:                                              ; preds = %155
  %163 = getelementptr inbounds %class.SkTArray.29, %class.SkTArray.29* %127, i64 0, i32 0
  br label %164

164:                                              ; preds = %180, %162
  %165 = phi %class.sk_sp.30* [ %156, %162 ], [ %181, %180 ]
  %166 = phi i64 [ 0, %162 ], [ %175, %180 ]
  %167 = getelementptr inbounds %class.sk_sp.30, %class.sk_sp.30* %165, i64 %166, i32 0
  %168 = getelementptr inbounds %class.sk_sp.30, %class.sk_sp.30* %129, i64 %166, i32 0
  %169 = load %class.SkTextBlob*, %class.SkTextBlob** %168, align 8
  %170 = icmp eq %class.SkTextBlob* %169, null
  br i1 %170, label %174, label %171

171:                                              ; preds = %164
  %172 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = atomicrmw add i32* %172, i32 1 monotonic
  br label %174

174:                                              ; preds = %171, %164
  store %class.SkTextBlob* %169, %class.SkTextBlob** %167, align 8
  %175 = add nuw nsw i64 %166, 1
  %176 = load i64, i64* %135, align 8
  %177 = lshr i64 %176, 1
  %178 = and i64 %177, 2147483647
  %179 = icmp ult i64 %175, %178
  br i1 %179, label %180, label %182

180:                                              ; preds = %174
  %181 = load %class.sk_sp.30*, %class.sk_sp.30** %163, align 8
  br label %164

182:                                              ; preds = %174, %155
  %183 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 8
  %184 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 10, i32 0
  %185 = load %class.sk_sp.38*, %class.sk_sp.38** %184, align 8
  %186 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 10, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = lshr i64 %187, 1
  %189 = trunc i64 %188 to i32
  %190 = and i32 %189, 2147483647
  %191 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 8, i32 1
  %192 = load i64, i64* %191, align 8
  %193 = and i64 %187, 4294967294
  %194 = and i64 %192, -4294967295
  %195 = or i64 %194, %193
  store i64 %195, i64* %191, align 8
  %196 = icmp eq i32 %190, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %182
  %198 = and i64 %195, 8589934591
  store i64 %198, i64* %191, align 8
  %199 = getelementptr inbounds %class.SkTArray.37, %class.SkTArray.37* %183, i64 0, i32 0
  store %class.sk_sp.38* null, %class.sk_sp.38** %199, align 8
  br label %211

200:                                              ; preds = %182
  %201 = icmp ugt i32 %190, 8
  %202 = select i1 %201, i32 %190, i32 8
  %203 = zext i32 %202 to i64
  %204 = shl nuw i64 %203, 33
  %205 = and i64 %195, 8589934591
  %206 = or i64 %204, %205
  store i64 %206, i64* %191, align 8
  %207 = tail call i8* @_Z15sk_malloc_throwmm(i64 %203, i64 8) #12
  %208 = bitcast %class.SkTArray.37* %183 to i8**
  store i8* %207, i8** %208, align 8
  %209 = load i64, i64* %191, align 8
  %210 = bitcast i8* %207 to %class.sk_sp.38*
  br label %211

211:                                              ; preds = %200, %197
  %212 = phi %class.sk_sp.38* [ %210, %200 ], [ null, %197 ]
  %213 = phi i64 [ %209, %200 ], [ %198, %197 ]
  %214 = and i64 %213, -4294967298
  %215 = or i64 %214, 1
  store i64 %215, i64* %191, align 8
  %216 = and i64 %213, 4294967294
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %238, label %218

218:                                              ; preds = %211
  %219 = getelementptr inbounds %class.SkTArray.37, %class.SkTArray.37* %183, i64 0, i32 0
  br label %220

220:                                              ; preds = %236, %218
  %221 = phi %class.sk_sp.38* [ %212, %218 ], [ %237, %236 ]
  %222 = phi i64 [ 0, %218 ], [ %231, %236 ]
  %223 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %221, i64 %222, i32 0
  %224 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %185, i64 %222, i32 0
  %225 = load %class.SkVertices*, %class.SkVertices** %224, align 8
  %226 = icmp eq %class.SkVertices* %225, null
  br i1 %226, label %230, label %227

227:                                              ; preds = %220
  %228 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %225, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = atomicrmw add i32* %228, i32 1 monotonic
  br label %230

230:                                              ; preds = %227, %220
  store %class.SkVertices* %225, %class.SkVertices** %223, align 8
  %231 = add nuw nsw i64 %222, 1
  %232 = load i64, i64* %191, align 8
  %233 = lshr i64 %232, 1
  %234 = and i64 %233, 2147483647
  %235 = icmp ult i64 %231, %234
  br i1 %235, label %236, label %238

236:                                              ; preds = %230
  %237 = load %class.sk_sp.38*, %class.sk_sp.38** %219, align 8
  br label %220

238:                                              ; preds = %230, %211
  %239 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 9
  %240 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 6, i32 0
  %241 = load %class.sk_sp.41*, %class.sk_sp.41** %240, align 8
  %242 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 6, i32 1
  %243 = load i64, i64* %242, align 8
  %244 = lshr i64 %243, 1
  %245 = trunc i64 %244 to i32
  %246 = and i32 %245, 2147483647
  %247 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 9, i32 1
  %248 = load i64, i64* %247, align 8
  %249 = and i64 %243, 4294967294
  %250 = and i64 %248, -4294967295
  %251 = or i64 %250, %249
  store i64 %251, i64* %247, align 8
  %252 = icmp eq i32 %246, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %238
  %254 = and i64 %251, 8589934591
  store i64 %254, i64* %247, align 8
  %255 = getelementptr inbounds %class.SkTArray.40, %class.SkTArray.40* %239, i64 0, i32 0
  store %class.sk_sp.41* null, %class.sk_sp.41** %255, align 8
  br label %267

256:                                              ; preds = %238
  %257 = icmp ugt i32 %246, 8
  %258 = select i1 %257, i32 %246, i32 8
  %259 = zext i32 %258 to i64
  %260 = shl nuw i64 %259, 33
  %261 = and i64 %251, 8589934591
  %262 = or i64 %260, %261
  store i64 %262, i64* %247, align 8
  %263 = tail call i8* @_Z15sk_malloc_throwmm(i64 %259, i64 8) #12
  %264 = bitcast %class.SkTArray.40* %239 to i8**
  store i8* %263, i8** %264, align 8
  %265 = load i64, i64* %247, align 8
  %266 = bitcast i8* %263 to %class.sk_sp.41*
  br label %267

267:                                              ; preds = %256, %253
  %268 = phi %class.sk_sp.41* [ %266, %256 ], [ null, %253 ]
  %269 = phi i64 [ %265, %256 ], [ %254, %253 ]
  %270 = and i64 %269, -4294967298
  %271 = or i64 %270, 1
  store i64 %271, i64* %247, align 8
  %272 = and i64 %269, 4294967294
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %294, label %274

274:                                              ; preds = %267
  %275 = getelementptr inbounds %class.SkTArray.40, %class.SkTArray.40* %239, i64 0, i32 0
  br label %276

276:                                              ; preds = %292, %274
  %277 = phi %class.sk_sp.41* [ %268, %274 ], [ %293, %292 ]
  %278 = phi i64 [ 0, %274 ], [ %287, %292 ]
  %279 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %277, i64 %278, i32 0
  %280 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %241, i64 %278, i32 0
  %281 = load %class.SkImage*, %class.SkImage** %280, align 8
  %282 = icmp eq %class.SkImage* %281, null
  br i1 %282, label %286, label %283

283:                                              ; preds = %276
  %284 = getelementptr inbounds %class.SkImage, %class.SkImage* %281, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = atomicrmw add i32* %284, i32 1 monotonic
  br label %286

286:                                              ; preds = %283, %276
  store %class.SkImage* %281, %class.SkImage** %279, align 8
  %287 = add nuw nsw i64 %278, 1
  %288 = load i64, i64* %247, align 8
  %289 = lshr i64 %288, 1
  %290 = and i64 %289, 2147483647
  %291 = icmp ult i64 %287, %290
  br i1 %291, label %292, label %294

292:                                              ; preds = %286
  %293 = load %class.sk_sp.41*, %class.sk_sp.41** %275, align 8
  br label %276

294:                                              ; preds = %286, %267
  %295 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 10
  %296 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 12, i32 0, i64 0
  %297 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %2, i64 0, i32 0, i64 0
  %298 = bitcast %class.SkTypefacePlayback* %295 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %298, i8 0, i64 24, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %296, i8* align 4 %297, i64 28, i1 false)
  %299 = bitcast %class.sk_sp.19* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %299) #12
  %300 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 5, i32 2
  %301 = load i64, i64* %300, align 8, !noalias !2
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %294
  call void @_ZN6SkData9MakeEmptyEv(%class.sk_sp.19* nonnull sret %4) #12
  br label %306

304:                                              ; preds = %294
  %305 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 5
  call void @_ZNK10SkWriter3214snapshotAsDataEv(%class.sk_sp.19* nonnull sret %4, %class.SkWriter32* %305) #12
  br label %306

306:                                              ; preds = %303, %304
  %307 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %4, i64 0, i32 0
  %308 = bitcast %class.sk_sp.19* %4 to i64*
  %309 = load i64, i64* %308, align 8
  store %class.SkData* null, %class.SkData** %307, align 8
  %310 = load %class.SkData*, %class.SkData** %12, align 8
  %311 = bitcast %class.sk_sp.19* %11 to i64*
  store i64 %309, i64* %311, align 8
  %312 = icmp eq %class.SkData* %310, null
  br i1 %312, label %328, label %313

313:                                              ; preds = %306
  %314 = getelementptr inbounds %class.SkData, %class.SkData* %310, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = atomicrmw add i32* %314, i32 -1 acq_rel
  %316 = icmp eq i32 %315, 1
  br i1 %316, label %317, label %319

317:                                              ; preds = %313
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %310) #12
  %318 = bitcast %class.SkData* %310 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %318) #12
  br label %319

319:                                              ; preds = %313, %317
  %320 = load %class.SkData*, %class.SkData** %307, align 8
  %321 = icmp eq %class.SkData* %320, null
  br i1 %321, label %328, label %322

322:                                              ; preds = %319
  %323 = getelementptr inbounds %class.SkData, %class.SkData* %320, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = atomicrmw add i32* %323, i32 -1 acq_rel
  %325 = icmp eq i32 %324, 1
  br i1 %325, label %326, label %328

326:                                              ; preds = %322
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %320) #12
  %327 = bitcast %class.SkData* %320 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %327) #12
  br label %328

328:                                              ; preds = %306, %319, %322, %326
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %299) #12
  %329 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 3
  %330 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayI7SkPaintLb0EEaSERKS1_(%class.SkTArray* %5, %class.SkTArray* dereferenceable(16) %329)
  %331 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 4, i32 0, i32 0
  %332 = load i32, i32* %331, align 8
  call void @_ZN8SkTArrayI6SkPathLb0EE5resetEi(%class.SkTArray.5* %8, i32 %332)
  %333 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 4, i32 0, i32 1
  %334 = load i32, i32* %333, align 4
  %335 = icmp sgt i32 %334, 0
  br i1 %335, label %336, label %361

336:                                              ; preds = %328
  %337 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %338 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1, i32 0
  br label %339

339:                                              ; preds = %356, %336
  %340 = phi i32 [ %334, %336 ], [ %357, %356 ]
  %341 = phi i64 [ 0, %336 ], [ %358, %356 ]
  %342 = load %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"** %337, align 8
  %343 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* %342, i64 %341, i32 1
  %344 = load i32, i32* %343, align 8
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %356, label %346

346:                                              ; preds = %339
  %347 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* %342, i64 %341, i32 0, i32 0, i32 0
  %348 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* %342, i64 %341, i32 0, i32 0, i32 1
  %349 = load i32, i32* %348, align 8
  %350 = add nsw i32 %349, -1
  %351 = load %class.SkPath*, %class.SkPath** %338, align 8
  %352 = sext i32 %350 to i64
  %353 = getelementptr inbounds %class.SkPath, %class.SkPath* %351, i64 %352
  %354 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %353, %class.SkPath* dereferenceable(16) %347) #12
  %355 = load i32, i32* %333, align 4
  br label %356

356:                                              ; preds = %346, %339
  %357 = phi i32 [ %340, %339 ], [ %355, %346 ]
  %358 = add nuw nsw i64 %341, 1
  %359 = sext i32 %357 to i64
  %360 = icmp slt i64 %358, %359
  br i1 %360, label %339, label %361

361:                                              ; preds = %356, %328
  %362 = load i64, i64* %9, align 8
  %363 = and i64 %362, 4294967294
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %392, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1, i32 0
  br label %367

367:                                              ; preds = %386, %365
  %368 = phi i64 [ %362, %365 ], [ %387, %386 ]
  %369 = phi i64 [ 0, %365 ], [ %388, %386 ]
  %370 = load %class.SkPath*, %class.SkPath** %366, align 8
  %371 = getelementptr inbounds %class.SkPath, %class.SkPath* %370, i64 %369, i32 0, i32 0
  %372 = load %class.SkPathRef*, %class.SkPathRef** %371, align 8
  %373 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %372, i64 0, i32 9
  %374 = load i8, i8* %373, align 8
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %386, label %376

376:                                              ; preds = %367
  %377 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %372, i64 0, i32 1
  %378 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %372, i64 0, i32 3, i32 0
  %379 = load %struct.SkPoint*, %struct.SkPoint** %378, align 8
  %380 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %372, i64 0, i32 3, i32 2
  %381 = load i32, i32* %380, align 4
  %382 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %377, %struct.SkPoint* %379, i32 %381) #12
  %383 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %372, i64 0, i32 10
  %384 = zext i1 %382 to i8
  store i8 %384, i8* %383, align 1
  store i8 0, i8* %373, align 8
  %385 = load i64, i64* %9, align 8
  br label %386

386:                                              ; preds = %376, %367
  %387 = phi i64 [ %368, %367 ], [ %385, %376 ]
  %388 = add nuw nsw i64 %369, 1
  %389 = lshr i64 %387, 1
  %390 = and i64 %389, 2147483647
  %391 = icmp ult i64 %388, %390
  br i1 %391, label %367, label %392

392:                                              ; preds = %386, %361
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayI7SkPaintLb0EEaSERKS1_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray* %0, %1
  br i1 %3, label %48, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %39

11:                                               ; preds = %39, %4
  %12 = phi i64 [ %6, %4 ], [ %44, %39 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayI7SkPaintLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  %25 = load %class.SkPaint*, %class.SkPaint** %24, align 8
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %11
  %28 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %34, %29 ]
  %31 = load %class.SkPaint*, %class.SkPaint** %28, align 8
  %32 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %31, i64 %30
  %33 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %25, i64 %30
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %32, %class.SkPaint* dereferenceable(72) %33) #12
  %34 = add nuw nsw i64 %30, 1
  %35 = load i64, i64* %5, align 8
  %36 = lshr i64 %35, 1
  %37 = and i64 %36, 2147483647
  %38 = icmp ult i64 %34, %37
  br i1 %38, label %29, label %48

39:                                               ; preds = %9, %39
  %40 = phi i64 [ 0, %9 ], [ %43, %39 ]
  %41 = load %class.SkPaint*, %class.SkPaint** %10, align 8
  %42 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %41, i64 %40
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %42) #12
  %43 = add nuw nsw i64 %40, 1
  %44 = load i64, i64* %5, align 8
  %45 = lshr i64 %44, 1
  %46 = and i64 %45, 2147483647
  %47 = icmp ult i64 %43, %46
  br i1 %47, label %39, label %11

48:                                               ; preds = %29, %11, %2
  ret %class.SkTArray* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI6SkPathLb0EE5resetEi(%class.SkTArray.5*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray.5, %class.SkTArray.5* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4294967294
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray.5, %class.SkTArray.5* %0, i64 0, i32 0
  br label %21

9:                                                ; preds = %21, %2
  %10 = phi i64 [ %4, %2 ], [ %26, %21 ]
  %11 = and i64 %10, -4294967295
  store i64 %11, i64* %3, align 8
  tail call void @_ZN8SkTArrayI6SkPathLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.5* %0, i32 %1, i32 0)
  %12 = load i64, i64* %3, align 8
  %13 = shl i32 %1, 1
  %14 = zext i32 %13 to i64
  %15 = and i64 %12, -4294967295
  %16 = or i64 %15, %14
  store i64 %16, i64* %3, align 8
  %17 = and i32 %1, 2147483647
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %class.SkTArray.5, %class.SkTArray.5* %0, i64 0, i32 0
  br label %33

21:                                               ; preds = %7, %21
  %22 = phi i64 [ 0, %7 ], [ %25, %21 ]
  %23 = load %class.SkPath*, %class.SkPath** %8, align 8
  %24 = getelementptr inbounds %class.SkPath, %class.SkPath* %23, i64 %22
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %24) #12
  %25 = add nuw nsw i64 %22, 1
  %26 = load i64, i64* %3, align 8
  %27 = lshr i64 %26, 1
  %28 = and i64 %27, 2147483647
  %29 = icmp ult i64 %25, %28
  br i1 %29, label %21, label %9

30:                                               ; preds = %33, %9
  %31 = phi i64 [ %16, %9 ], [ %38, %33 ]
  %32 = and i64 %31, -4294967297
  store i64 %32, i64* %3, align 8
  ret void

33:                                               ; preds = %19, %33
  %34 = phi i64 [ 0, %19 ], [ %37, %33 ]
  %35 = load %class.SkPath*, %class.SkPath** %20, align 8
  %36 = getelementptr inbounds %class.SkPath, %class.SkPath* %35, i64 %34
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %36) #12
  %37 = add nuw nsw i64 %34, 1
  %38 = load i64, i64* %3, align 8
  %39 = lshr i64 %38, 1
  %40 = and i64 %39, 2147483647
  %41 = icmp ult i64 %37, %40
  br i1 %41, label %33, label %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPictureData14WriteFactoriesEP9SkWStreamRK12SkFactorySet(%class.SkWStream*, %class.SkFactorySet* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %class.SkAutoSTMalloc, align 8
  %7 = getelementptr inbounds %class.SkFactorySet, %class.SkFactorySet* %1, i64 0, i32 0, i32 0, i32 1, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = bitcast %class.SkAutoSTMalloc* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 136, i1 false)
  %10 = icmp ugt i32 %8, 16
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = sext i32 %8 to i64
  %13 = tail call i8* @_Z15sk_malloc_throwmm(i64 %12, i64 8) #12
  %14 = bitcast %class.SkAutoSTMalloc* %6 to i8**
  store i8* %13, i8** %14, align 8
  %15 = bitcast i8* %13 to void (%class.sk_sp.55*, %class.SkReadBuffer*)**
  br label %23

16:                                               ; preds = %2
  %17 = icmp eq i32 %8, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %6, i64 0, i32 1, i32 0, i64 0
  %20 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %6, i64 0, i32 0
  store void (%class.sk_sp.55*, %class.SkReadBuffer*)** %19, void (%class.sk_sp.55*, %class.SkReadBuffer*)*** %20, align 8
  br label %23

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %6, i64 0, i32 0
  store void (%class.sk_sp.55*, %class.SkReadBuffer*)** null, void (%class.sk_sp.55*, %class.SkReadBuffer*)*** %22, align 8
  br label %23

23:                                               ; preds = %11, %18, %21
  %24 = phi void (%class.sk_sp.55*, %class.SkReadBuffer*)** [ %15, %11 ], [ %19, %18 ], [ null, %21 ]
  %25 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %6, i64 0, i32 0
  %26 = getelementptr inbounds %class.SkFactorySet, %class.SkFactorySet* %1, i64 0, i32 0, i32 0
  %27 = bitcast void (%class.sk_sp.55*, %class.SkReadBuffer*)** %24 to i8**
  call void @_ZNK8SkPtrSet11copyToArrayEPPv(%class.SkPtrSet* %26, i8** %27) #12
  %28 = icmp sgt i32 %8, 0
  br i1 %28, label %29, label %55

29:                                               ; preds = %23
  %30 = zext i32 %8 to i64
  br label %31

31:                                               ; preds = %51, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %51 ]
  %33 = phi i64 [ 4, %29 ], [ %52, %51 ]
  %34 = getelementptr inbounds void (%class.sk_sp.55*, %class.SkReadBuffer*)*, void (%class.sk_sp.55*, %class.SkReadBuffer*)** %24, i64 %32
  %35 = load void (%class.sk_sp.55*, %class.SkReadBuffer*)*, void (%class.sk_sp.55*, %class.SkReadBuffer*)** %34, align 8
  %36 = call i8* @_ZN13SkFlattenable13FactoryToNameEPF5sk_spIS_ER12SkReadBufferE(void (%class.sk_sp.55*, %class.SkReadBuffer*)* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = load i8, i8* %36, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %38, %31
  %42 = call i32 @_ZN9SkWStream16SizeOfPackedUIntEm(i64 0) #12
  %43 = sext i32 %42 to i64
  %44 = add i64 %33, %43
  br label %51

45:                                               ; preds = %38
  %46 = call i64 @strlen(i8* nonnull %36) #13
  %47 = call i32 @_ZN9SkWStream16SizeOfPackedUIntEm(i64 %46) #12
  %48 = sext i32 %47 to i64
  %49 = add i64 %46, %33
  %50 = add i64 %49, %48
  br label %51

51:                                               ; preds = %45, %41
  %52 = phi i64 [ %44, %41 ], [ %50, %45 ]
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %51, %23
  %56 = phi i64 [ 4, %23 ], [ %52, %51 ]
  %57 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #12
  store i32 1717658484, i32* %5, align 4
  %58 = bitcast %class.SkWStream* %0 to i1 (%class.SkWStream*, i8*, i64)***
  %59 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %58, align 8
  %60 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %59, i64 2
  %61 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %60, align 8
  %62 = call zeroext i1 %61(%class.SkWStream* %0, i8* nonnull %57, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #12
  %63 = trunc i64 %56 to i32
  %64 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #12
  store i32 %63, i32* %4, align 4
  %65 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %58, align 8
  %66 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %65, i64 2
  %67 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %66, align 8
  %68 = call zeroext i1 %67(%class.SkWStream* %0, i8* nonnull %64, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #12
  %69 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69)
  store i32 %8, i32* %3, align 4
  %70 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %58, align 8
  %71 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %70, i64 2
  %72 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %71, align 8
  %73 = call zeroext i1 %72(%class.SkWStream* %0, i8* nonnull %69, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69)
  br i1 %28, label %74, label %76

74:                                               ; preds = %55
  %75 = zext i32 %8 to i64
  br label %83

76:                                               ; preds = %101, %55
  %77 = load void (%class.sk_sp.55*, %class.SkReadBuffer*)**, void (%class.sk_sp.55*, %class.SkReadBuffer*)*** %25, align 8
  %78 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %6, i64 0, i32 1, i32 0, i64 0
  %79 = icmp eq void (%class.sk_sp.55*, %class.SkReadBuffer*)** %77, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = bitcast void (%class.sk_sp.55*, %class.SkReadBuffer*)** %77 to i8*
  call void @_Z7sk_freePv(i8* %81) #12
  br label %82

82:                                               ; preds = %76, %80
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %9) #12
  ret void

83:                                               ; preds = %101, %74
  %84 = phi i64 [ 0, %74 ], [ %102, %101 ]
  %85 = getelementptr inbounds void (%class.sk_sp.55*, %class.SkReadBuffer*)*, void (%class.sk_sp.55*, %class.SkReadBuffer*)** %24, i64 %84
  %86 = load void (%class.sk_sp.55*, %class.SkReadBuffer*)*, void (%class.sk_sp.55*, %class.SkReadBuffer*)** %85, align 8
  %87 = call i8* @_ZN13SkFlattenable13FactoryToNameEPF5sk_spIS_ER12SkReadBufferE(void (%class.sk_sp.55*, %class.SkReadBuffer*)* %86) #12
  %88 = icmp eq i8* %87, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %83
  %90 = load i8, i8* %87, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %89, %83
  %93 = call zeroext i1 @_ZN9SkWStream15writePackedUIntEm(%class.SkWStream* %0, i64 0) #12
  br label %101

94:                                               ; preds = %89
  %95 = call i64 @strlen(i8* nonnull %87) #13
  %96 = call zeroext i1 @_ZN9SkWStream15writePackedUIntEm(%class.SkWStream* %0, i64 %95) #12
  %97 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %58, align 8
  %98 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %97, i64 2
  %99 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %98, align 8
  %100 = call zeroext i1 %99(%class.SkWStream* %0, i8* nonnull %87, i64 %95) #12
  br label %101

101:                                              ; preds = %94, %92
  %102 = add nuw nsw i64 %84, 1
  %103 = icmp eq i64 %102, %75
  br i1 %103, label %76, label %83
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i8* @_ZN13SkFlattenable13FactoryToNameEPF5sk_spIS_ER12SkReadBufferE(void (%class.sk_sp.55*, %class.SkReadBuffer*)*) local_unnamed_addr #1

declare zeroext i1 @_ZN9SkWStream15writePackedUIntEm(%class.SkWStream*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPictureData14WriteTypefacesEP9SkWStreamRK11SkRefCntSetRK13SkSerialProcs(%class.SkWStream*, %class.SkRefCntSet* dereferenceable(32), %struct.SkSerialProcs* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %class.SkAutoSTMalloc.91, align 8
  %7 = alloca %class.sk_sp.19, align 8
  %8 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %1, i64 0, i32 0, i32 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #12
  store i32 1953523299, i32* %5, align 4
  %11 = bitcast %class.SkWStream* %0 to i1 (%class.SkWStream*, i8*, i64)***
  %12 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %11, align 8
  %13 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %12, i64 2
  %14 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %13, align 8
  %15 = call zeroext i1 %14(%class.SkWStream* %0, i8* nonnull %10, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #12
  %16 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #12
  store i32 %9, i32* %4, align 4
  %17 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %11, align 8
  %18 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %17, i64 2
  %19 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %18, align 8
  %20 = call zeroext i1 %19(%class.SkWStream* %0, i8* nonnull %16, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #12
  %21 = bitcast %class.SkAutoSTMalloc.91* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %21) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 136, i1 false)
  %22 = icmp ugt i32 %9, 16
  br i1 %22, label %23, label %28

23:                                               ; preds = %3
  %24 = sext i32 %9 to i64
  %25 = call i8* @_Z15sk_malloc_throwmm(i64 %24, i64 8) #12
  %26 = bitcast %class.SkAutoSTMalloc.91* %6 to i8**
  store i8* %25, i8** %26, align 8
  %27 = bitcast i8* %25 to %class.SkTypeface**
  br label %35

28:                                               ; preds = %3
  %29 = icmp eq i32 %9, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %class.SkAutoSTMalloc.91, %class.SkAutoSTMalloc.91* %6, i64 0, i32 1, i32 0, i64 0
  %32 = getelementptr inbounds %class.SkAutoSTMalloc.91, %class.SkAutoSTMalloc.91* %6, i64 0, i32 0
  store %class.SkTypeface** %31, %class.SkTypeface*** %32, align 8
  br label %35

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.SkAutoSTMalloc.91, %class.SkAutoSTMalloc.91* %6, i64 0, i32 0
  store %class.SkTypeface** null, %class.SkTypeface*** %34, align 8
  br label %35

35:                                               ; preds = %23, %30, %33
  %36 = phi %class.SkTypeface** [ %27, %23 ], [ %31, %30 ], [ null, %33 ]
  %37 = getelementptr inbounds %class.SkAutoSTMalloc.91, %class.SkAutoSTMalloc.91* %6, i64 0, i32 0
  %38 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %1, i64 0, i32 0, i32 0
  %39 = bitcast %class.SkTypeface** %36 to i8**
  call void @_ZNK8SkPtrSet11copyToArrayEPPv(%class.SkPtrSet* %38, i8** %39) #12
  %40 = icmp sgt i32 %9, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.SkSerialProcs, %struct.SkSerialProcs* %2, i64 0, i32 4
  %43 = bitcast %class.sk_sp.19* %7 to i8*
  %44 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %7, i64 0, i32 0
  %45 = getelementptr inbounds %struct.SkSerialProcs, %struct.SkSerialProcs* %2, i64 0, i32 5
  %46 = zext i32 %9 to i64
  br label %54

47:                                               ; preds = %85, %35
  %48 = load %class.SkTypeface**, %class.SkTypeface*** %37, align 8
  %49 = getelementptr inbounds %class.SkAutoSTMalloc.91, %class.SkAutoSTMalloc.91* %6, i64 0, i32 1, i32 0, i64 0
  %50 = icmp eq %class.SkTypeface** %48, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = bitcast %class.SkTypeface** %48 to i8*
  call void @_Z7sk_freePv(i8* %52) #12
  br label %53

53:                                               ; preds = %47, %51
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %21) #12
  ret void

54:                                               ; preds = %85, %41
  %55 = phi i64 [ 0, %41 ], [ %86, %85 ]
  %56 = getelementptr inbounds %class.SkTypeface*, %class.SkTypeface** %36, i64 %55
  %57 = load void (%class.sk_sp.19*, %class.SkTypeface*, i8*)*, void (%class.sk_sp.19*, %class.SkTypeface*, i8*)** %42, align 8
  %58 = icmp eq void (%class.sk_sp.19*, %class.SkTypeface*, i8*)* %57, null
  br i1 %58, label %83, label %59

59:                                               ; preds = %54
  %60 = load %class.SkTypeface*, %class.SkTypeface** %56, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %44, align 8
  %61 = load i8*, i8** %45, align 8
  call void %57(%class.sk_sp.19* nonnull sret %7, %class.SkTypeface* %60, i8* %61) #12
  %62 = load %class.SkData*, %class.SkData** %44, align 8
  %63 = icmp eq %class.SkData* %62, null
  br i1 %63, label %82, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.SkData, %class.SkData* %62, i64 0, i32 3
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %class.SkData, %class.SkData* %62, i64 0, i32 4
  %68 = load i64, i64* %67, align 8
  %69 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %11, align 8
  %70 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %69, i64 2
  %71 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %70, align 8
  %72 = call zeroext i1 %71(%class.SkWStream* %0, i8* %66, i64 %68) #12
  %73 = load %class.SkData*, %class.SkData** %44, align 8
  %74 = icmp eq %class.SkData* %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %64
  %76 = getelementptr inbounds %class.SkData, %class.SkData* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %73) #12
  %80 = bitcast %class.SkData* %73 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %80) #12
  br label %81

81:                                               ; preds = %64, %75, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  br label %85

82:                                               ; preds = %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  br label %83

83:                                               ; preds = %82, %54
  %84 = load %class.SkTypeface*, %class.SkTypeface** %56, align 8
  call void @_ZNK10SkTypeface9serializeEP9SkWStreamNS_17SerializeBehaviorE(%class.SkTypeface* %84, %class.SkWStream* %0, i32 2) #12
  br label %85

85:                                               ; preds = %81, %83
  %86 = add nuw nsw i64 %55, 1
  %87 = icmp eq i64 %86, %46
  br i1 %87, label %47, label %54
}

declare void @_ZNK10SkTypeface9serializeEP9SkWStreamNS_17SerializeBehaviorE(%class.SkTypeface*, %class.SkWStream*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkPictureData15flattenToBufferER13SkWriteBufferb(%class.SkPictureData* nocapture readonly, %class.SkWriteBuffer* dereferenceable(56), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkVerticesPriv, align 8
  br i1 %2, label %62, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = trunc i64 %8 to i32
  %10 = and i32 %9, 2147483647
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %5
  %13 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %14 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %14, i64 9
  %16 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %15, align 8
  tail call void %16(%class.SkWriteBuffer* %1, i32 1886286880) #12
  %17 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %13, align 8
  %18 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %17, i64 9
  %19 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %18, align 8
  tail call void %19(%class.SkWriteBuffer* %1, i32 %10) #12
  %20 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 0
  %21 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkPaint*)***
  %22 = zext i32 %10 to i64
  br label %23

23:                                               ; preds = %23, %12
  %24 = phi i64 [ 0, %12 ], [ %30, %23 ]
  %25 = load %class.SkPaint*, %class.SkPaint** %20, align 8
  %26 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %25, i64 %24
  %27 = load void (%class.SkWriteBuffer*, %class.SkPaint*)**, void (%class.SkWriteBuffer*, %class.SkPaint*)*** %21, align 8
  %28 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkPaint*)*, void (%class.SkWriteBuffer*, %class.SkPaint*)** %27, i64 28
  %29 = load void (%class.SkWriteBuffer*, %class.SkPaint*)*, void (%class.SkWriteBuffer*, %class.SkPaint*)** %28, align 8
  tail call void %29(%class.SkWriteBuffer* %1, %class.SkPaint* dereferenceable(72) %26) #12
  %30 = add nuw nsw i64 %24, 1
  %31 = icmp eq i64 %30, %22
  br i1 %31, label %32, label %23

32:                                               ; preds = %23, %5
  %33 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = lshr i64 %34, 1
  %36 = trunc i64 %35 to i32
  %37 = and i32 %36, 2147483647
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %62, label %39

39:                                               ; preds = %32
  %40 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %41 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %41, i64 9
  %43 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %42, align 8
  tail call void %43(%class.SkWriteBuffer* %1, i32 1886677024) #12
  %44 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %40, align 8
  %45 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %44, i64 9
  %46 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %45, align 8
  tail call void %46(%class.SkWriteBuffer* %1, i32 %37) #12
  %47 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %40, align 8
  %48 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %47, i64 7
  %49 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %48, align 8
  tail call void %49(%class.SkWriteBuffer* %1, i32 %37) #12
  %50 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1, i32 0
  %51 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkPath*)***
  %52 = zext i32 %37 to i64
  br label %53

53:                                               ; preds = %53, %39
  %54 = phi i64 [ 0, %39 ], [ %60, %53 ]
  %55 = load %class.SkPath*, %class.SkPath** %50, align 8
  %56 = getelementptr inbounds %class.SkPath, %class.SkPath* %55, i64 %54
  %57 = load void (%class.SkWriteBuffer*, %class.SkPath*)**, void (%class.SkWriteBuffer*, %class.SkPath*)*** %51, align 8
  %58 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkPath*)*, void (%class.SkWriteBuffer*, %class.SkPath*)** %57, i64 24
  %59 = load void (%class.SkWriteBuffer*, %class.SkPath*)*, void (%class.SkWriteBuffer*, %class.SkPath*)** %58, align 8
  tail call void %59(%class.SkWriteBuffer* %1, %class.SkPath* dereferenceable(16) %56) #12
  %60 = add nuw nsw i64 %54, 1
  %61 = icmp eq i64 %60, %52
  br i1 %61, label %62, label %53

62:                                               ; preds = %53, %32, %3
  %63 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 7, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 4294967294
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %93, label %67

67:                                               ; preds = %62
  %68 = lshr i64 %64, 1
  %69 = trunc i64 %68 to i32
  %70 = and i32 %69, 2147483647
  %71 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %72 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %72, i64 9
  %74 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %73, align 8
  tail call void %74(%class.SkWriteBuffer* %1, i32 1651273570) #12
  %75 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %71, align 8
  %76 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %75, i64 9
  %77 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %76, align 8
  tail call void %77(%class.SkWriteBuffer* %1, i32 %70) #12
  %78 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 7, i32 0
  %79 = load %class.sk_sp.30*, %class.sk_sp.30** %78, align 8
  %80 = icmp eq %class.sk_sp.30* %79, null
  br i1 %80, label %93, label %81

81:                                               ; preds = %67
  %82 = load i64, i64* %63, align 8
  %83 = lshr i64 %82, 1
  %84 = and i64 %83, 2147483647
  %85 = getelementptr inbounds %class.sk_sp.30, %class.sk_sp.30* %79, i64 %84
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %81, %87
  %88 = phi %class.sk_sp.30* [ %91, %87 ], [ %79, %81 ]
  %89 = getelementptr inbounds %class.sk_sp.30, %class.sk_sp.30* %88, i64 0, i32 0
  %90 = load %class.SkTextBlob*, %class.SkTextBlob** %89, align 8
  tail call void @_ZN14SkTextBlobPriv7FlattenERK10SkTextBlobR13SkWriteBuffer(%class.SkTextBlob* dereferenceable(28) %90, %class.SkWriteBuffer* dereferenceable(56) %1) #12
  %91 = getelementptr inbounds %class.sk_sp.30, %class.sk_sp.30* %88, i64 1
  %92 = icmp eq %class.sk_sp.30* %91, %85
  br i1 %92, label %93, label %87

93:                                               ; preds = %87, %67, %81, %62
  br i1 %2, label %164, label %94

94:                                               ; preds = %93
  %95 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 8, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 4294967294
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %128, label %99

99:                                               ; preds = %94
  %100 = lshr i64 %96, 1
  %101 = trunc i64 %100 to i32
  %102 = and i32 %101, 2147483647
  %103 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %104 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %103, align 8
  %105 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %104, i64 9
  %106 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %105, align 8
  tail call void %106(%class.SkWriteBuffer* %1, i32 1986359924) #12
  %107 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %103, align 8
  %108 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %107, i64 9
  %109 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %108, align 8
  tail call void %109(%class.SkWriteBuffer* %1, i32 %102) #12
  %110 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 8, i32 0
  %111 = load %class.sk_sp.38*, %class.sk_sp.38** %110, align 8
  %112 = icmp eq %class.sk_sp.38* %111, null
  br i1 %112, label %128, label %113

113:                                              ; preds = %99
  %114 = load i64, i64* %95, align 8
  %115 = lshr i64 %114, 1
  %116 = and i64 %115, 2147483647
  %117 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %111, i64 %116
  %118 = icmp eq i64 %116, 0
  br i1 %118, label %128, label %119

119:                                              ; preds = %113
  %120 = bitcast %class.SkVerticesPriv* %4 to i8*
  %121 = bitcast %class.SkVerticesPriv* %4 to i64*
  br label %122

122:                                              ; preds = %119, %122
  %123 = phi %class.sk_sp.38* [ %111, %119 ], [ %126, %122 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #12
  %124 = bitcast %class.sk_sp.38* %123 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %121, align 8
  call void @_ZNK14SkVerticesPriv6encodeER13SkWriteBuffer(%class.SkVerticesPriv* nonnull %4, %class.SkWriteBuffer* dereferenceable(56) %1) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #12
  %126 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %123, i64 1
  %127 = icmp eq %class.sk_sp.38* %126, %117
  br i1 %127, label %128, label %122

128:                                              ; preds = %122, %99, %113, %94
  %129 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 9, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = and i64 %130, 4294967294
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %164, label %133

133:                                              ; preds = %128
  %134 = lshr i64 %130, 1
  %135 = trunc i64 %134 to i32
  %136 = and i32 %135, 2147483647
  %137 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %138 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %137, align 8
  %139 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %138, i64 9
  %140 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %139, align 8
  call void %140(%class.SkWriteBuffer* %1, i32 1768776039) #12
  %141 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %137, align 8
  %142 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %141, i64 9
  %143 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %142, align 8
  call void %143(%class.SkWriteBuffer* %1, i32 %136) #12
  %144 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 9, i32 0
  %145 = load %class.sk_sp.41*, %class.sk_sp.41** %144, align 8
  %146 = icmp eq %class.sk_sp.41* %145, null
  br i1 %146, label %164, label %147

147:                                              ; preds = %133
  %148 = load i64, i64* %129, align 8
  %149 = lshr i64 %148, 1
  %150 = and i64 %149, 2147483647
  %151 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %145, i64 %150
  %152 = icmp eq i64 %150, 0
  br i1 %152, label %164, label %153

153:                                              ; preds = %147
  %154 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkImage*)***
  br label %155

155:                                              ; preds = %153, %155
  %156 = phi %class.sk_sp.41* [ %145, %153 ], [ %162, %155 ]
  %157 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %156, i64 0, i32 0
  %158 = load %class.SkImage*, %class.SkImage** %157, align 8
  %159 = load void (%class.SkWriteBuffer*, %class.SkImage*)**, void (%class.SkWriteBuffer*, %class.SkImage*)*** %154, align 8
  %160 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkImage*)*, void (%class.SkWriteBuffer*, %class.SkImage*)** %159, i64 26
  %161 = load void (%class.SkWriteBuffer*, %class.SkImage*)*, void (%class.SkWriteBuffer*, %class.SkImage*)** %160, align 8
  call void %161(%class.SkWriteBuffer* %1, %class.SkImage* %158) #12
  %162 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %156, i64 1
  %163 = icmp eq %class.sk_sp.41* %162, %151
  br i1 %163, label %164, label %155

164:                                              ; preds = %155, %133, %147, %128, %93
  ret void
}

declare void @_ZN14SkTextBlobPriv7FlattenERK10SkTextBlobR13SkWriteBuffer(%class.SkTextBlob* dereferenceable(28), %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZNK14SkVerticesPriv6encodeER13SkWriteBuffer(%class.SkVerticesPriv*, %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkPictureData9serializeEP9SkWStreamRK13SkSerialProcsP11SkRefCntSetb(%class.SkPictureData* nocapture readonly, %class.SkWStream*, %struct.SkSerialProcs* dereferenceable(48), %class.SkRefCntSet*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %class.SkRefCntSet, align 8
  %14 = alloca %class.SkFactorySet, align 8
  %15 = alloca %class.SkBinaryWriteBuffer, align 8
  %16 = alloca %class.sk_sp.93, align 8
  %17 = alloca %struct.SkSerialProcs, align 8
  %18 = alloca %class.sk_sp.94, align 8
  %19 = alloca %struct.DevNull, align 8
  %20 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 2, i32 0
  %21 = load %class.SkData*, %class.SkData** %20, align 8
  %22 = getelementptr inbounds %class.SkData, %class.SkData* %21, i64 0, i32 4
  %23 = load i64, i64* %22, align 8
  %24 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #12
  store i32 1919246692, i32* %9, align 4
  %25 = bitcast %class.SkWStream* %1 to i1 (%class.SkWStream*, i8*, i64)***
  %26 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %25, align 8
  %27 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %26, i64 2
  %28 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %27, align 8
  %29 = call zeroext i1 %28(%class.SkWStream* %1, i8* nonnull %24, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #12
  %30 = trunc i64 %23 to i32
  %31 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #12
  store i32 %30, i32* %8, align 4
  %32 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %25, align 8
  %33 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %32, i64 2
  %34 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %33, align 8
  %35 = call zeroext i1 %34(%class.SkWStream* %1, i8* nonnull %31, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #12
  %36 = load %class.SkData*, %class.SkData** %20, align 8
  %37 = getelementptr inbounds %class.SkData, %class.SkData* %36, i64 0, i32 3
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %class.SkData, %class.SkData* %36, i64 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %25, align 8
  %42 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %41, i64 2
  %43 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %42, align 8
  %44 = call zeroext i1 %43(%class.SkWStream* %1, i8* %38, i64 %40) #12
  %45 = bitcast %class.SkRefCntSet* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  %46 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %46, align 8
  %47 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %13, i64 0, i32 0, i32 0, i32 1
  %48 = bitcast %class.SkTDArray.88* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #12
  %49 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV11SkRefCntSet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = icmp eq %class.SkRefCntSet* %3, null
  %51 = select i1 %50, %class.SkRefCntSet* %13, %class.SkRefCntSet* %3
  %52 = bitcast %class.SkFactorySet* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 16, i1 false)
  %53 = getelementptr inbounds %class.SkFactorySet, %class.SkFactorySet* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %53, align 8
  %54 = getelementptr inbounds %class.SkFactorySet, %class.SkFactorySet* %14, i64 0, i32 0, i32 0, i32 1
  %55 = bitcast %class.SkTDArray.88* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #12
  %56 = getelementptr inbounds %class.SkFactorySet, %class.SkFactorySet* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV12SkFactorySet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = bitcast %class.SkBinaryWriteBuffer* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %57) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 128, i1 false)
  call void @_ZN19SkBinaryWriteBufferC1Ev(%class.SkBinaryWriteBuffer* nonnull %15) #12
  %58 = atomicrmw add i32* %53, i32 1 monotonic, !noalias !5
  %59 = getelementptr inbounds %class.sk_sp.93, %class.sk_sp.93* %16, i64 0, i32 0
  store %class.SkFactorySet* %14, %class.SkFactorySet** %59, align 8, !alias.scope !5
  call void @_ZN19SkBinaryWriteBuffer18setFactoryRecorderE5sk_spI12SkFactorySetE(%class.SkBinaryWriteBuffer* nonnull %15, %class.sk_sp.93* nonnull %16) #12
  %60 = load %class.SkFactorySet*, %class.SkFactorySet** %59, align 8
  %61 = icmp eq %class.SkFactorySet* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %5
  %63 = getelementptr inbounds %class.SkFactorySet, %class.SkFactorySet* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %class.SkFactorySet* %60 to %class.SkRefCntBase*
  %68 = bitcast %class.SkFactorySet* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #12
  br label %72

72:                                               ; preds = %5, %62, %66
  %73 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %15, i64 0, i32 0
  %74 = bitcast %struct.SkSerialProcs* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %74)
  %75 = bitcast %struct.SkSerialProcs* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %75, i64 32, i1 false) #12
  %76 = getelementptr inbounds %struct.SkSerialProcs, %struct.SkSerialProcs* %17, i64 0, i32 4
  %77 = bitcast void (%class.sk_sp.19*, %class.SkTypeface*, i8*)** %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false), !alias.scope !8
  %78 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %15, i64 0, i32 0, i32 1
  %79 = bitcast %struct.SkSerialProcs* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 8 %74, i64 48, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %74)
  %80 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 1 monotonic, !noalias !11
  %82 = getelementptr inbounds %class.sk_sp.94, %class.sk_sp.94* %18, i64 0, i32 0
  store %class.SkRefCntSet* %51, %class.SkRefCntSet** %82, align 8, !alias.scope !11
  call void @_ZN19SkBinaryWriteBuffer19setTypefaceRecorderE5sk_spI11SkRefCntSetE(%class.SkBinaryWriteBuffer* nonnull %15, %class.sk_sp.94* nonnull %18) #12
  %83 = load %class.SkRefCntSet*, %class.SkRefCntSet** %82, align 8
  %84 = icmp eq %class.SkRefCntSet* %83, null
  br i1 %84, label %95, label %85

85:                                               ; preds = %72
  %86 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  %90 = bitcast %class.SkRefCntSet* %83 to %class.SkRefCntBase*
  %91 = bitcast %class.SkRefCntSet* %83 to void (%class.SkRefCntBase*)***
  %92 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %91, align 8
  %93 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, i64 2
  %94 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, align 8
  call void %94(%class.SkRefCntBase* nonnull %90) #12
  br label %95

95:                                               ; preds = %72, %85, %89
  call void @_ZNK13SkPictureData15flattenToBufferER13SkWriteBufferb(%class.SkPictureData* %0, %class.SkWriteBuffer* nonnull dereferenceable(56) %73, i1 zeroext %4)
  %96 = bitcast %struct.DevNull* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #12
  %97 = getelementptr inbounds %struct.DevNull, %struct.DevNull* %19, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %struct.DevNull, %struct.DevNull* %19, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVZNK13SkPictureData9serializeEP9SkWStreamRK13SkSerialProcsP11SkRefCntSetbE7DevNull, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 0
  %100 = load %class.sk_sp.26*, %class.sk_sp.26** %99, align 8
  %101 = icmp eq %class.sk_sp.26* %100, null
  br i1 %101, label %111, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = lshr i64 %104, 1
  %106 = and i64 %105, 2147483647
  %107 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %100, i64 %106
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %struct.DevNull, %struct.DevNull* %19, i64 0, i32 0
  br label %112

111:                                              ; preds = %112, %95, %102
  br i1 %4, label %171, label %118

112:                                              ; preds = %109, %112
  %113 = phi %class.sk_sp.26* [ %100, %109 ], [ %116, %112 ]
  %114 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %113, i64 0, i32 0
  %115 = load %class.SkPicture*, %class.SkPicture** %114, align 8
  call void @_ZNK9SkPicture9serializeEP9SkWStreamPK13SkSerialProcsP11SkRefCntSetb(%class.SkPicture* %115, %class.SkWStream* nonnull %110, %struct.SkSerialProcs* null, %class.SkRefCntSet* %51, i1 zeroext true) #12
  %116 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %113, i64 1
  %117 = icmp eq %class.sk_sp.26* %116, %107
  br i1 %117, label %111, label %112

118:                                              ; preds = %111
  call void @_ZN13SkPictureData14WriteFactoriesEP9SkWStreamRK12SkFactorySet(%class.SkWStream* %1, %class.SkFactorySet* nonnull dereferenceable(32) %14)
  call void @_ZN13SkPictureData14WriteTypefacesEP9SkWStreamRK11SkRefCntSetRK13SkSerialProcs(%class.SkWStream* %1, %class.SkRefCntSet* dereferenceable(32) %51, %struct.SkSerialProcs* dereferenceable(48) %2)
  %119 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %15, i64 0, i32 3, i32 2
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #12
  store i32 1634886009, i32* %7, align 4
  %122 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %25, align 8
  %123 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %122, i64 2
  %124 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %123, align 8
  %125 = call zeroext i1 %124(%class.SkWStream* %1, i8* nonnull %121, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #12
  %126 = trunc i64 %120 to i32
  %127 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127) #12
  store i32 %126, i32* %6, align 4
  %128 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %25, align 8
  %129 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %128, i64 2
  %130 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %129, align 8
  %131 = call zeroext i1 %130(%class.SkWStream* %1, i8* nonnull %127, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #12
  %132 = call zeroext i1 @_ZNK19SkBinaryWriteBuffer13writeToStreamEP9SkWStream(%class.SkBinaryWriteBuffer* nonnull %15, %class.SkWStream* %1) #12
  %133 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = and i64 %134, 4294967294
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %165, label %137

137:                                              ; preds = %118
  %138 = lshr i64 %134, 1
  %139 = trunc i64 %138 to i32
  %140 = and i32 %139, 2147483647
  %141 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %141) #12
  store i32 1885566066, i32* %11, align 4
  %142 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %25, align 8
  %143 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %142, i64 2
  %144 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %143, align 8
  %145 = call zeroext i1 %144(%class.SkWStream* %1, i8* nonnull %141, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %141) #12
  %146 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146) #12
  store i32 %140, i32* %10, align 4
  %147 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %25, align 8
  %148 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %147, i64 2
  %149 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %148, align 8
  %150 = call zeroext i1 %149(%class.SkWStream* %1, i8* nonnull %146, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #12
  %151 = load %class.sk_sp.26*, %class.sk_sp.26** %99, align 8
  %152 = icmp eq %class.sk_sp.26* %151, null
  br i1 %152, label %165, label %153

153:                                              ; preds = %137
  %154 = load i64, i64* %133, align 8
  %155 = lshr i64 %154, 1
  %156 = and i64 %155, 2147483647
  %157 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %151, i64 %156
  %158 = icmp eq i64 %156, 0
  br i1 %158, label %165, label %159

159:                                              ; preds = %153, %159
  %160 = phi %class.sk_sp.26* [ %163, %159 ], [ %151, %153 ]
  %161 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %160, i64 0, i32 0
  %162 = load %class.SkPicture*, %class.SkPicture** %161, align 8
  call void @_ZNK9SkPicture9serializeEP9SkWStreamPK13SkSerialProcsP11SkRefCntSetb(%class.SkPicture* %162, %class.SkWStream* %1, %struct.SkSerialProcs* %2, %class.SkRefCntSet* %51, i1 zeroext false) #12
  %163 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %160, i64 1
  %164 = icmp eq %class.sk_sp.26* %163, %157
  br i1 %164, label %165, label %159

165:                                              ; preds = %159, %137, %153, %118
  %166 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %166)
  store i32 1701799456, i32* %12, align 4
  %167 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %25, align 8
  %168 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %167, i64 2
  %169 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %168, align 8
  %170 = call zeroext i1 %169(%class.SkWStream* %1, i8* nonnull %166, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %166)
  br label %171

171:                                              ; preds = %111, %165
  %172 = getelementptr inbounds %struct.DevNull, %struct.DevNull* %19, i64 0, i32 0
  call void @_ZN9SkWStreamD2Ev(%class.SkWStream* nonnull %172) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #12
  call void @_ZN19SkBinaryWriteBufferD1Ev(%class.SkBinaryWriteBuffer* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %57) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8SkPtrSet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %173 = bitcast %class.SkTDArray.88* %54 to i8**
  %174 = load i8*, i8** %173, align 8
  call void @_Z7sk_freePv(i8* %174) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #12
  call void @_ZN11SkRefCntSetD1Ev(%class.SkRefCntSet* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #12
  ret void
}

declare void @_ZN19SkBinaryWriteBufferC1Ev(%class.SkBinaryWriteBuffer*) unnamed_addr #1

declare void @_ZN19SkBinaryWriteBuffer18setFactoryRecorderE5sk_spI12SkFactorySetE(%class.SkBinaryWriteBuffer*, %class.sk_sp.93*) local_unnamed_addr #1

declare void @_ZN19SkBinaryWriteBuffer19setTypefaceRecorderE5sk_spI11SkRefCntSetE(%class.SkBinaryWriteBuffer*, %class.sk_sp.94*) local_unnamed_addr #1

declare void @_ZNK9SkPicture9serializeEP9SkWStreamPK13SkSerialProcsP11SkRefCntSetb(%class.SkPicture*, %class.SkWStream*, %struct.SkSerialProcs*, %class.SkRefCntSet*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK19SkBinaryWriteBuffer13writeToStreamEP9SkWStream(%class.SkBinaryWriteBuffer*, %class.SkWStream*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9SkWStreamD2Ev(%class.SkWStream*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN19SkBinaryWriteBufferD1Ev(%class.SkBinaryWriteBuffer*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkPtrSetD2Ev(%class.SkPtrSet*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPtrSet, %class.SkPtrSet* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8SkPtrSet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPtrSet, %class.SkPtrSet* %0, i64 0, i32 1
  %4 = bitcast %class.SkTDArray.88* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @_Z7sk_freePv(i8* %5) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11SkRefCntSetD1Ev(%class.SkRefCntSet*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkPictureData7flattenER13SkWriteBuffer(%class.SkPictureData* nocapture readonly, %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.26, align 8
  %4 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 2, i32 0
  %5 = load %class.SkData*, %class.SkData** %4, align 8
  %6 = getelementptr inbounds %class.SkData, %class.SkData* %5, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %9 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %9, i64 9
  %11 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %10, align 8
  tail call void %11(%class.SkWriteBuffer* %1, i32 1919246692) #12
  %12 = trunc i64 %7 to i32
  %13 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %8, align 8
  %14 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %13, i64 9
  %15 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %14, align 8
  tail call void %15(%class.SkWriteBuffer* %1, i32 %12) #12
  %16 = load %class.SkData*, %class.SkData** %4, align 8
  %17 = getelementptr inbounds %class.SkData, %class.SkData* %16, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %class.SkData, %class.SkData* %16, i64 0, i32 4
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i8*, i64)***
  %22 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %22, i64 3
  %24 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %23, align 8
  tail call void %24(%class.SkWriteBuffer* %1, i8* %18, i64 %20) #12
  %25 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %74, label %29

29:                                               ; preds = %2
  %30 = lshr i64 %26, 1
  %31 = trunc i64 %30 to i32
  %32 = and i32 %31, 2147483647
  %33 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %8, align 8
  %34 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %33, i64 9
  %35 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %34, align 8
  tail call void %35(%class.SkWriteBuffer* %1, i32 1885566066) #12
  %36 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %8, align 8
  %37 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %36, i64 9
  %38 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %37, align 8
  tail call void %38(%class.SkWriteBuffer* %1, i32 %32) #12
  %39 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 0
  %40 = load %class.sk_sp.26*, %class.sk_sp.26** %39, align 8
  %41 = icmp eq %class.sk_sp.26* %40, null
  br i1 %41, label %74, label %42

42:                                               ; preds = %29
  %43 = load i64, i64* %25, align 8
  %44 = lshr i64 %43, 1
  %45 = and i64 %44, 2147483647
  %46 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %40, i64 %45
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %74, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %3, i64 0, i32 0
  br label %50

50:                                               ; preds = %48, %71
  %51 = phi %class.sk_sp.26* [ %40, %48 ], [ %72, %71 ]
  %52 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %51, i64 0, i32 0
  %53 = load %class.SkPicture*, %class.SkPicture** %52, align 8
  %54 = icmp eq %class.SkPicture* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %53, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic
  br label %58

58:                                               ; preds = %50, %55
  store %class.SkPicture* %53, %class.SkPicture** %49, align 8
  call void @_ZN13SkPicturePriv7FlattenE5sk_spIK9SkPictureER13SkWriteBuffer(%class.sk_sp.26* nonnull %3, %class.SkWriteBuffer* dereferenceable(56) %1) #12
  %59 = load %class.SkPicture*, %class.SkPicture** %49, align 8
  %60 = icmp eq %class.SkPicture* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %class.SkPicture* %59 to %class.SkRefCntBase*
  %67 = bitcast %class.SkPicture* %59 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8
  call void %70(%class.SkRefCntBase* nonnull %66) #12
  br label %71

71:                                               ; preds = %58, %61, %65
  %72 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %51, i64 1
  %73 = icmp eq %class.sk_sp.26* %72, %46
  br i1 %73, label %74, label %50

74:                                               ; preds = %71, %29, %42, %2
  %75 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 6, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 4294967294
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %109, label %79

79:                                               ; preds = %74
  %80 = lshr i64 %76, 1
  %81 = trunc i64 %80 to i32
  %82 = and i32 %81, 2147483647
  %83 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %8, align 8
  %84 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %83, i64 9
  %85 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %84, align 8
  call void %85(%class.SkWriteBuffer* %1, i32 1685217655) #12
  %86 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %8, align 8
  %87 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %86, i64 9
  %88 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %87, align 8
  call void %88(%class.SkWriteBuffer* %1, i32 %82) #12
  %89 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 6, i32 0
  %90 = load %class.sk_sp.28*, %class.sk_sp.28** %89, align 8
  %91 = icmp eq %class.sk_sp.28* %90, null
  br i1 %91, label %109, label %92

92:                                               ; preds = %79
  %93 = load i64, i64* %75, align 8
  %94 = lshr i64 %93, 1
  %95 = and i64 %94, 2147483647
  %96 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %90, i64 %95
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %109, label %98

98:                                               ; preds = %92
  %99 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkFlattenable*)***
  br label %100

100:                                              ; preds = %98, %100
  %101 = phi %class.sk_sp.28* [ %90, %98 ], [ %107, %100 ]
  %102 = bitcast %class.sk_sp.28* %101 to %class.SkFlattenable**
  %103 = load %class.SkFlattenable*, %class.SkFlattenable** %102, align 8
  %104 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %99, align 8
  %105 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %104, i64 11
  %106 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %105, align 8
  call void %106(%class.SkWriteBuffer* %1, %class.SkFlattenable* %103) #12
  %107 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %101, i64 1
  %108 = icmp eq %class.sk_sp.28* %107, %96
  br i1 %108, label %109, label %100

109:                                              ; preds = %100, %79, %92, %74
  call void @_ZNK13SkPictureData15flattenToBufferER13SkWriteBufferb(%class.SkPictureData* %0, %class.SkWriteBuffer* dereferenceable(56) %1, i1 zeroext false)
  %110 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %8, align 8
  %111 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %110, i64 7
  %112 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %111, align 8
  call void %112(%class.SkWriteBuffer* %1, i32 1701799456) #12
  ret void
}

declare void @_ZN13SkPicturePriv7FlattenE5sk_spIK9SkPictureER13SkWriteBuffer(%class.sk_sp.26*, %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkPictureData14parseStreamTagEP8SkStreamjjRK15SkDeserialProcsP18SkTypefacePlayback(%class.SkPictureData*, %class.SkStream*, i32, i32, %struct.SkDeserialProcs* dereferenceable(48), %class.SkTypefacePlayback*) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkStream*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %class.sk_sp.19, align 8
  %10 = alloca %class.SkString, align 8
  %11 = alloca i64, align 8
  %12 = alloca %class.sk_sp.42, align 8
  %13 = alloca %class.sk_sp.42, align 8
  %14 = alloca %class.sk_sp.42, align 8
  %15 = alloca %class.sk_sp.53, align 8
  %16 = alloca %class.SkReadBuffer, align 8
  store %class.SkStream* %1, %class.SkStream** %7, align 8
  store i32 %3, i32* %8, align 4
  switch i32 %2, label %304 [
    i32 1919246692, label %17
    i32 1717658484, label %46
    i32 1953523299, label %111
    i32 1885566066, label %163
    i32 1634886009, label %220
  ]

17:                                               ; preds = %6
  %18 = bitcast %class.sk_sp.19* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = zext i32 %3 to i64
  call void @_ZN6SkData14MakeFromStreamEP8SkStreamm(%class.sk_sp.19* nonnull sret %9, %class.SkStream* %1, i64 %19) #12
  %20 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 2
  %21 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %9, i64 0, i32 0
  %22 = bitcast %class.sk_sp.19* %9 to i64*
  %23 = load i64, i64* %22, align 8
  store %class.SkData* null, %class.SkData** %21, align 8
  %24 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %20, i64 0, i32 0
  %25 = load %class.SkData*, %class.SkData** %24, align 8
  %26 = bitcast %class.sk_sp.19* %20 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %class.SkData* %25, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %class.SkData, %class.SkData* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %25) #12
  %33 = bitcast %class.SkData* %25 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %33) #12
  br label %34

34:                                               ; preds = %17, %28, %32
  %35 = load %class.SkData*, %class.SkData** %21, align 8
  %36 = icmp eq %class.SkData* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %class.SkData, %class.SkData* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %35) #12
  %42 = bitcast %class.SkData* %35 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %42) #12
  br label %43

43:                                               ; preds = %34, %37, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %44 = load %class.SkData*, %class.SkData** %24, align 8
  %45 = icmp eq %class.SkData* %44, null
  br i1 %45, label %305, label %304

46:                                               ; preds = %6
  %47 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* %1, i32* nonnull %8) #12
  br i1 %47, label %48, label %305

48:                                               ; preds = %46
  %49 = call i8* @_Znwm(i64 16) #14
  %50 = load i32, i32* %8, align 4
  %51 = bitcast i8* %49 to i32*
  store i32 %50, i32* %51, align 8
  %52 = sext i32 %50 to i64
  %53 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %52, i64 8) #12
  %54 = extractvalue { i64, i1 } %53, 1
  %55 = extractvalue { i64, i1 } %53, 0
  %56 = select i1 %54, i64 -1, i64 %55
  %57 = call i8* @_Znam(i64 %56) #14
  %58 = getelementptr inbounds i8, i8* %49, i64 8
  %59 = bitcast i8* %58 to i8**
  store i8* %57, i8** %59, align 8
  %60 = ptrtoint i8* %49 to i64
  %61 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 11
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %class.SkFactoryPlayback*, %class.SkFactoryPlayback** %62, align 8
  %64 = bitcast %"class.std::__1::unique_ptr.44"* %61 to i64*
  store i64 %60, i64* %64, align 8
  %65 = icmp eq %class.SkFactoryPlayback* %63, null
  br i1 %65, label %75, label %66

66:                                               ; preds = %48
  %67 = getelementptr inbounds %class.SkFactoryPlayback, %class.SkFactoryPlayback* %63, i64 0, i32 1
  %68 = load void (%class.sk_sp.55*, %class.SkReadBuffer*)**, void (%class.sk_sp.55*, %class.SkReadBuffer*)*** %67, align 8
  %69 = icmp eq void (%class.sk_sp.55*, %class.SkReadBuffer*)** %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = bitcast void (%class.sk_sp.55*, %class.SkReadBuffer*)** %68 to i8*
  call void @_ZdaPv(i8* %71) #14
  br label %72

72:                                               ; preds = %70, %66
  %73 = bitcast %class.SkFactoryPlayback* %63 to i8*
  call void @_ZdlPv(i8* %73) #14
  %74 = load i32, i32* %8, align 4
  br label %75

75:                                               ; preds = %72, %48
  %76 = phi i32 [ %74, %72 ], [ %50, %48 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %304, label %78

78:                                               ; preds = %75
  %79 = bitcast %class.SkString* %10 to i8*
  %80 = getelementptr inbounds %class.SkString, %class.SkString* %10, i64 0, i32 0, i32 0
  %81 = bitcast i64* %11 to i8*
  br label %82

82:                                               ; preds = %78, %98
  %83 = phi i64 [ 0, %78 ], [ %106, %98 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #12
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %80, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %10) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #12
  store i64 -6148914691236517206, i64* %11, align 8
  %84 = load %class.SkStream*, %class.SkStream** %7, align 8
  %85 = call zeroext i1 @_ZN8SkStream14readPackedUIntEPm(%class.SkStream* %84, i64* nonnull %11) #12
  br i1 %85, label %86, label %110

86:                                               ; preds = %82
  %87 = load i64, i64* %11, align 8
  call void @_ZN8SkString6resizeEm(%class.SkString* nonnull %10, i64 %87) #12
  %88 = load %class.SkStream*, %class.SkStream** %7, align 8
  %89 = call i8* @_ZN8SkString12writable_strEv(%class.SkString* nonnull %10) #12
  %90 = load i64, i64* %11, align 8
  %91 = bitcast %class.SkStream* %88 to i64 (%class.SkStream*, i8*, i64)***
  %92 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %91, align 8
  %93 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %92, i64 2
  %94 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %93, align 8
  %95 = call i64 %94(%class.SkStream* %88, i8* %89, i64 %90) #12
  %96 = load i64, i64* %11, align 8
  %97 = icmp eq i64 %95, %96
  br i1 %97, label %98, label %110

98:                                               ; preds = %86
  %99 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %80, align 8
  %100 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %99, i64 0, i32 2
  %101 = call void (%class.sk_sp.55*, %class.SkReadBuffer*)* @_ZN13SkFlattenable13NameToFactoryEPKc(i8* %100) #12
  %102 = load %class.SkFactoryPlayback*, %class.SkFactoryPlayback** %62, align 8
  %103 = getelementptr inbounds %class.SkFactoryPlayback, %class.SkFactoryPlayback* %102, i64 0, i32 1
  %104 = load void (%class.sk_sp.55*, %class.SkReadBuffer*)**, void (%class.sk_sp.55*, %class.SkReadBuffer*)*** %103, align 8
  %105 = getelementptr inbounds void (%class.sk_sp.55*, %class.SkReadBuffer*)*, void (%class.sk_sp.55*, %class.SkReadBuffer*)** %104, i64 %83
  store void (%class.sk_sp.55*, %class.SkReadBuffer*)* %101, void (%class.sk_sp.55*, %class.SkReadBuffer*)** %105, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #12
  %106 = add nuw nsw i64 %83, 1
  %107 = load i32, i32* %8, align 4
  %108 = zext i32 %107 to i64
  %109 = icmp ult i64 %106, %108
  br i1 %109, label %82, label %304

110:                                              ; preds = %86, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #12
  br label %305

111:                                              ; preds = %6
  %112 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 10
  %113 = zext i32 %3 to i64
  tail call void @_ZN18SkTypefacePlayback8setCountEm(%class.SkTypefacePlayback* %112, i64 %113) #12
  %114 = icmp eq i32 %3, 0
  br i1 %114, label %304, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %struct.SkDeserialProcs, %struct.SkDeserialProcs* %4, i64 0, i32 4
  %117 = bitcast %class.sk_sp.42* %12 to i8*
  %118 = bitcast %class.SkStream** %7 to i8*
  %119 = getelementptr inbounds %struct.SkDeserialProcs, %struct.SkDeserialProcs* %4, i64 0, i32 5
  %120 = bitcast %class.sk_sp.42* %13 to i8*
  %121 = bitcast %class.sk_sp.42* %14 to i8*
  %122 = bitcast %class.sk_sp.42* %14 to i64*
  %123 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  br label %124

124:                                              ; preds = %115, %158
  %125 = phi i64 [ 0, %115 ], [ %159, %158 ]
  %126 = load void (%class.sk_sp.42*, i8*, i64, i8*)*, void (%class.sk_sp.42*, i8*, i64, i8*)** %116, align 8
  %127 = icmp eq void (%class.sk_sp.42*, i8*, i64, i8*)* %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #12
  %129 = load i8*, i8** %119, align 8
  call void %126(%class.sk_sp.42* nonnull sret %12, i8* nonnull %118, i64 8, i8* %129) #12
  br label %132

130:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #12
  %131 = load %class.SkStream*, %class.SkStream** %7, align 8
  call void @_ZN10SkTypeface15MakeDeserializeEP8SkStream(%class.sk_sp.42* nonnull sret %13, %class.SkStream* %131) #12
  br label %132

132:                                              ; preds = %130, %128
  %133 = phi %class.sk_sp.42* [ %13, %130 ], [ %12, %128 ]
  %134 = phi i8* [ %120, %130 ], [ %117, %128 ]
  %135 = bitcast %class.sk_sp.42* %133 to i64*
  %136 = load i64, i64* %135, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #12
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #12
  call void @_ZN10SkTypeface11MakeDefaultEv(%class.sk_sp.42* nonnull sret %14) #12
  %139 = load i64, i64* %122, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #12
  br label %140

140:                                              ; preds = %132, %138
  %141 = phi i64 [ %136, %132 ], [ %139, %138 ]
  %142 = load %class.sk_sp.42*, %class.sk_sp.42** %123, align 8
  %143 = getelementptr inbounds %class.sk_sp.42, %class.sk_sp.42* %142, i64 %125
  %144 = getelementptr inbounds %class.sk_sp.42, %class.sk_sp.42* %143, i64 0, i32 0
  %145 = load %class.SkTypeface*, %class.SkTypeface** %144, align 8
  %146 = bitcast %class.sk_sp.42* %143 to i64*
  store i64 %141, i64* %146, align 8
  %147 = icmp eq %class.SkTypeface* %145, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %140
  %149 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %145, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 -1 acq_rel
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %158

152:                                              ; preds = %148
  %153 = bitcast %class.SkTypeface* %145 to %class.SkRefCntBase*
  %154 = bitcast %class.SkTypeface* %145 to void (%class.SkRefCntBase*)***
  %155 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %154, align 8
  %156 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %155, i64 2
  %157 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %156, align 8
  call void %157(%class.SkRefCntBase* nonnull %153) #12
  br label %158

158:                                              ; preds = %152, %148, %140
  %159 = add nuw nsw i64 %125, 1
  %160 = load i32, i32* %8, align 4
  %161 = zext i32 %160 to i64
  %162 = icmp ult i64 %159, %161
  br i1 %162, label %124, label %304

163:                                              ; preds = %6
  %164 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5
  %165 = icmp sgt i32 %3, 0
  br i1 %165, label %166, label %173

166:                                              ; preds = %163
  tail call void @_ZN8SkTArrayI5sk_spIK9SkPictureELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.25* %164, i32 %3, i32 0) #12
  %167 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = shl i64 %168, 32
  %170 = and i64 %169, 4294967296
  %171 = and i64 %168, -4294967297
  %172 = or i64 %170, %171
  store i64 %172, i64* %167, align 8
  br label %178

173:                                              ; preds = %163
  %174 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = and i64 %175, -4294967297
  store i64 %176, i64* %174, align 8
  %177 = icmp eq i32 %3, 0
  br i1 %177, label %304, label %178

178:                                              ; preds = %166, %173
  %179 = bitcast %class.sk_sp.53* %15 to i8*
  %180 = getelementptr inbounds %class.sk_sp.53, %class.sk_sp.53* %15, i64 0, i32 0
  %181 = getelementptr inbounds %class.SkTArray.25, %class.SkTArray.25* %164, i64 0, i32 0
  %182 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #12
  store %class.SkPicture* inttoptr (i64 -6148914691236517206 to %class.SkPicture*), %class.SkPicture** %180, align 8
  call void @_ZN9SkPicture14MakeFromStreamEP8SkStreamPK15SkDeserialProcsP18SkTypefacePlayback(%class.sk_sp.53* nonnull sret %15, %class.SkStream* %1, %struct.SkDeserialProcs* %4, %class.SkTypefacePlayback* %5) #12
  %183 = load %class.SkPicture*, %class.SkPicture** %180, align 8
  %184 = icmp eq %class.SkPicture* %183, null
  br i1 %184, label %219, label %185

185:                                              ; preds = %178, %215
  %186 = phi %class.SkPicture* [ %217, %215 ], [ %183, %178 ]
  %187 = phi i32 [ %212, %215 ], [ 0, %178 ]
  %188 = ptrtoint %class.SkPicture* %186 to i64
  store %class.SkPicture* null, %class.SkPicture** %180, align 8
  call void @_ZN8SkTArrayI5sk_spIK9SkPictureELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.25* %164, i32 1, i32 1) #12
  %189 = load %class.sk_sp.26*, %class.sk_sp.26** %181, align 8
  %190 = load i64, i64* %182, align 8
  %191 = lshr i64 %190, 1
  %192 = and i64 %191, 2147483647
  %193 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %189, i64 %192
  %194 = add i64 %190, 2
  %195 = and i64 %194, 4294967294
  %196 = and i64 %190, -4294967295
  %197 = or i64 %195, %196
  store i64 %197, i64* %182, align 8
  %198 = bitcast %class.sk_sp.26* %193 to i64*
  store i64 %188, i64* %198, align 8
  %199 = load %class.SkPicture*, %class.SkPicture** %180, align 8
  %200 = icmp eq %class.SkPicture* %199, null
  br i1 %200, label %211, label %201

201:                                              ; preds = %185
  %202 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %199, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = atomicrmw add i32* %202, i32 -1 acq_rel
  %204 = icmp eq i32 %203, 1
  br i1 %204, label %205, label %211

205:                                              ; preds = %201
  %206 = bitcast %class.SkPicture* %199 to %class.SkRefCntBase*
  %207 = bitcast %class.SkPicture* %199 to void (%class.SkRefCntBase*)***
  %208 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %207, align 8
  %209 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %208, i64 2
  %210 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %209, align 8
  call void %210(%class.SkRefCntBase* nonnull %206) #12
  br label %211

211:                                              ; preds = %185, %201, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #12
  %212 = add nuw i32 %187, 1
  %213 = load i32, i32* %8, align 4
  %214 = icmp ult i32 %212, %213
  br i1 %214, label %215, label %304

215:                                              ; preds = %211
  %216 = load %class.SkStream*, %class.SkStream** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #12
  store %class.SkPicture* inttoptr (i64 -6148914691236517206 to %class.SkPicture*), %class.SkPicture** %180, align 8
  call void @_ZN9SkPicture14MakeFromStreamEP8SkStreamPK15SkDeserialProcsP18SkTypefacePlayback(%class.sk_sp.53* nonnull sret %15, %class.SkStream* %216, %struct.SkDeserialProcs* %4, %class.SkTypefacePlayback* %5) #12
  %217 = load %class.SkPicture*, %class.SkPicture** %180, align 8
  %218 = icmp eq %class.SkPicture* %217, null
  br i1 %218, label %219, label %185

219:                                              ; preds = %215, %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #12
  br label %305

220:                                              ; preds = %6
  %221 = icmp eq i32 %3, 0
  br i1 %221, label %225, label %222

222:                                              ; preds = %220
  %223 = zext i32 %3 to i64
  %224 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %223, i32 2) #12
  br label %225

225:                                              ; preds = %220, %222
  %226 = phi i64 [ %223, %222 ], [ 0, %220 ]
  %227 = phi i8* [ %224, %222 ], [ null, %220 ]
  %228 = bitcast %class.SkStream* %1 to i64 (%class.SkStream*, i8*, i64)***
  %229 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %228, align 8
  %230 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %229, i64 2
  %231 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %230, align 8
  %232 = tail call i64 %231(%class.SkStream* %1, i8* %227, i64 %226) #12
  %233 = icmp eq i64 %232, %226
  br i1 %233, label %234, label %298

234:                                              ; preds = %225
  %235 = bitcast %class.SkReadBuffer* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %235) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %235, i8 -86, i64 136, i1 false)
  %236 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %16, i64 0, i32 6
  store %class.sk_sp.42* null, %class.sk_sp.42** %236, align 8
  %237 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %16, i64 0, i32 7
  store i32 0, i32* %237, align 8
  %238 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %16, i64 0, i32 9
  %239 = bitcast {}*** %238 to void (%class.sk_sp.55*, %class.SkReadBuffer*)***
  store void (%class.sk_sp.55*, %class.SkReadBuffer*)** null, void (%class.sk_sp.55*, %class.SkReadBuffer*)*** %239, align 8
  %240 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %16, i64 0, i32 10
  store i32 0, i32* %240, align 8
  %241 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %16, i64 0, i32 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %235, i8 0, i64 44, i1 false) #12
  %242 = bitcast %struct.SkDeserialProcs* %241 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 49, i1 false) #12
  call void @_ZN12SkReadBuffer9setMemoryEPKvm(%class.SkReadBuffer* nonnull %16, i8* %227, i64 %226) #12
  %243 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 12, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %16, i64 0, i32 4
  store i32 %244, i32* %245, align 8
  %246 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %247 = load %class.SkFactoryPlayback*, %class.SkFactoryPlayback** %246, align 8
  %248 = icmp eq %class.SkFactoryPlayback* %247, null
  br i1 %248, label %290, label %249

249:                                              ; preds = %234
  %250 = getelementptr inbounds %class.SkFactoryPlayback, %class.SkFactoryPlayback* %247, i64 0, i32 1
  %251 = bitcast void (%class.sk_sp.55*, %class.SkReadBuffer*)*** %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = getelementptr inbounds %class.SkFactoryPlayback, %class.SkFactoryPlayback* %247, i64 0, i32 0
  %254 = load i32, i32* %253, align 8
  %255 = bitcast {}*** %238 to i64*
  store i64 %252, i64* %255, align 8
  store i32 %254, i32* %240, align 8
  call void @_ZN12SkReadBuffer16setDeserialProcsERK15SkDeserialProcs(%class.SkReadBuffer* nonnull %16, %struct.SkDeserialProcs* dereferenceable(48) %4) #12
  %256 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 10, i32 0
  %257 = load i64, i64* %256, align 8
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %261, label %259

259:                                              ; preds = %249
  %260 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  br label %265

261:                                              ; preds = %249
  %262 = getelementptr inbounds %class.SkTypefacePlayback, %class.SkTypefacePlayback* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %263 = getelementptr inbounds %class.SkTypefacePlayback, %class.SkTypefacePlayback* %5, i64 0, i32 0
  %264 = load i64, i64* %263, align 8
  br label %265

265:                                              ; preds = %261, %259
  %266 = phi %class.sk_sp.42** [ %262, %261 ], [ %260, %259 ]
  %267 = phi i64 [ %264, %261 ], [ %257, %259 ]
  %268 = bitcast %class.sk_sp.42** %266 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = bitcast %class.sk_sp.42** %236 to i64*
  store i64 %269, i64* %270, align 8
  %271 = trunc i64 %267 to i32
  store i32 %271, i32* %237, align 8
  %272 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %16, i64 0, i32 13
  %273 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %16, i64 0, i32 0
  %274 = load i8*, i8** %273, align 8
  %275 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %16, i64 0, i32 1
  %276 = load i8*, i8** %275, align 8
  %277 = icmp ult i8* %274, %276
  br i1 %277, label %278, label %287

278:                                              ; preds = %265, %281
  %279 = load i8, i8* %272, align 8, !range !14
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %281, label %287

281:                                              ; preds = %278
  %282 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* nonnull %16) #12
  %283 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* nonnull %16) #12
  store i32 %283, i32* %8, align 4
  call void @_ZN13SkPictureData14parseBufferTagER12SkReadBufferjj(%class.SkPictureData* %0, %class.SkReadBuffer* nonnull dereferenceable(136) %16, i32 %282, i32 %283)
  %284 = load i8*, i8** %273, align 8
  %285 = load i8*, i8** %275, align 8
  %286 = icmp ult i8* %284, %285
  br i1 %286, label %278, label %287

287:                                              ; preds = %278, %281, %265
  %288 = load i8, i8* %272, align 8, !range !14
  %289 = zext i8 %288 to i32
  br label %290

290:                                              ; preds = %234, %287
  %291 = phi i32 [ 1, %234 ], [ %289, %287 ]
  %292 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %16, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %293 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %292, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %292, align 8
  %294 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %293, null
  br i1 %294, label %297, label %295

295:                                              ; preds = %290
  %296 = bitcast %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %293 to i8*
  call void @_ZdaPv(i8* %296) #14
  br label %297

297:                                              ; preds = %290, %295
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %235) #12
  br label %298

298:                                              ; preds = %225, %297
  %299 = phi i32 [ %291, %297 ], [ 1, %225 ]
  %300 = icmp eq i8* %227, null
  br i1 %300, label %302, label %301

301:                                              ; preds = %298
  call void @_Z7sk_freePv(i8* nonnull %227) #12
  br label %302

302:                                              ; preds = %298, %301
  %303 = icmp eq i32 %299, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %211, %158, %98, %75, %111, %173, %43, %302, %6
  br label %305

305:                                              ; preds = %110, %43, %219, %46, %302, %304
  %306 = phi i1 [ true, %304 ], [ false, %302 ], [ false, %219 ], [ false, %43 ], [ false, %46 ], [ false, %110 ]
  ret i1 %306
}

declare void @_ZN6SkData14MakeFromStreamEP8SkStreamm(%class.sk_sp.19* sret, %class.SkStream*, i64) local_unnamed_addr #1

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #1

declare zeroext i1 @_ZN8SkStream14readPackedUIntEPm(%class.SkStream*, i64*) local_unnamed_addr #1

declare void @_ZN8SkString6resizeEm(%class.SkString*, i64) local_unnamed_addr #1

declare i8* @_ZN8SkString12writable_strEv(%class.SkString*) local_unnamed_addr #1

declare void (%class.sk_sp.55*, %class.SkReadBuffer*)* @_ZN13SkFlattenable13NameToFactoryEPKc(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

declare void @_ZN18SkTypefacePlayback8setCountEm(%class.SkTypefacePlayback*, i64) local_unnamed_addr #1

declare void @_ZN10SkTypeface15MakeDeserializeEP8SkStream(%class.sk_sp.42* sret, %class.SkStream*) local_unnamed_addr #1

declare void @_ZN10SkTypeface11MakeDefaultEv(%class.sk_sp.42* sret) local_unnamed_addr #1

declare void @_ZN9SkPicture14MakeFromStreamEP8SkStreamPK15SkDeserialProcsP18SkTypefacePlayback(%class.sk_sp.53* sret, %class.SkStream*, %struct.SkDeserialProcs*, %class.SkTypefacePlayback*) local_unnamed_addr #1

declare void @_ZN12SkReadBuffer16setDeserialProcsERK15SkDeserialProcs(%class.SkReadBuffer*, %struct.SkDeserialProcs* dereferenceable(48)) local_unnamed_addr #1

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPictureData14parseBufferTagER12SkReadBufferjj(%class.SkPictureData*, %class.SkReadBuffer* dereferenceable(136), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.53, align 8
  %6 = alloca %class.sk_sp.110, align 8
  %7 = alloca %class.sk_sp.109, align 8
  %8 = alloca %class.sk_sp.19, align 8
  switch i32 %2, label %401 [
    i32 1886286880, label %9
    i32 1886677024, label %39
    i32 1651273570, label %71
    i32 1986359924, label %159
    i32 1768776039, label %247
    i32 1919246692, label %250
    i32 1885566066, label %302
    i32 1685217655, label %398
  ]

9:                                                ; preds = %4
  %10 = icmp sgt i32 %3, -1
  br i1 %10, label %12, label %11

11:                                               ; preds = %9
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %12

12:                                               ; preds = %9, %11
  %13 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %14 = load i8, i8* %13, align 8, !range !14
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %38

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0
  %18 = icmp sgt i32 %3, 0
  br i1 %18, label %19, label %38

19:                                               ; preds = %16
  %20 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 1
  br label %22

22:                                               ; preds = %22, %19
  %23 = phi i32 [ 0, %19 ], [ %35, %22 ]
  tail call void @_ZN8SkTArrayI7SkPaintLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %17, i32 1, i32 1) #12
  %24 = load %class.SkPaint*, %class.SkPaint** %20, align 8
  %25 = load i64, i64* %21, align 8
  %26 = lshr i64 %25, 1
  %27 = and i64 %26, 2147483647
  %28 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %24, i64 %27
  %29 = add i64 %25, 2
  %30 = and i64 %29, 4294967294
  %31 = and i64 %25, -4294967295
  %32 = or i64 %30, %31
  store i64 %32, i64* %21, align 8
  tail call void @_ZN7SkPaintC1Ev(%class.SkPaint* %28) #12
  %33 = tail call i32 @_ZN11SkPaintPriv9UnflattenEP7SkPaintR12SkReadBufferP6SkFont(%class.SkPaint* %28, %class.SkReadBuffer* dereferenceable(136) %1, %class.SkFont* null) #12
  %34 = icmp ne i32 %33, 0
  %35 = add nuw nsw i32 %23, 1
  %36 = icmp slt i32 %35, %3
  %37 = and i1 %34, %36
  br i1 %37, label %22, label %38

38:                                               ; preds = %393, %242, %154, %55, %22, %49, %16, %311, %168, %80, %45, %247, %398, %401, %12, %260, %301, %39
  ret void

39:                                               ; preds = %4
  %40 = icmp eq i32 %3, 0
  br i1 %40, label %38, label %41

41:                                               ; preds = %39
  %42 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #12
  %43 = icmp sgt i32 %42, -1
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %45

45:                                               ; preds = %41, %44
  %46 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %47 = load i8, i8* %46, align 8, !range !14
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %38

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1
  %51 = icmp sgt i32 %42, 0
  br i1 %51, label %52, label %38

52:                                               ; preds = %49
  %53 = getelementptr inbounds %class.SkTArray.5, %class.SkTArray.5* %50, i64 0, i32 0
  %54 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1, i32 1
  br label %55

55:                                               ; preds = %55, %52
  %56 = phi i32 [ 0, %52 ], [ %68, %55 ]
  tail call void @_ZN8SkTArrayI6SkPathLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.5* %50, i32 1, i32 1) #12
  %57 = load %class.SkPath*, %class.SkPath** %53, align 8
  %58 = load i64, i64* %54, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = getelementptr inbounds %class.SkPath, %class.SkPath* %57, i64 %60
  %62 = add i64 %58, 2
  %63 = and i64 %62, 4294967294
  %64 = and i64 %58, -4294967295
  %65 = or i64 %63, %64
  store i64 %65, i64* %54, align 8
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %61) #12
  tail call void @_ZN12SkReadBuffer8readPathEP6SkPath(%class.SkReadBuffer* %1, %class.SkPath* %61) #12
  %66 = load i8, i8* %46, align 8, !range !14
  %67 = icmp eq i8 %66, 0
  %68 = add nuw nsw i32 %56, 1
  %69 = icmp slt i32 %68, %42
  %70 = and i1 %67, %69
  br i1 %70, label %55, label %38

71:                                               ; preds = %4
  %72 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 7
  %73 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 7, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = and i64 %74, 4294967294
  %76 = icmp eq i64 %75, 0
  %77 = icmp sgt i32 %3, -1
  %78 = and i1 %77, %76
  br i1 %78, label %80, label %79

79:                                               ; preds = %71
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %80

80:                                               ; preds = %79, %71
  %81 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %82 = load i8, i8* %81, align 8, !range !14
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq i32 %3, 0
  %85 = or i1 %84, %83
  br i1 %85, label %38, label %86

86:                                               ; preds = %80
  %87 = bitcast %class.sk_sp.109* %7 to i8*
  %88 = getelementptr inbounds %class.sk_sp.109, %class.sk_sp.109* %7, i64 0, i32 0
  %89 = bitcast %class.sk_sp.109* %7 to i64*
  %90 = getelementptr inbounds %class.SkTArray.29, %class.SkTArray.29* %72, i64 0, i32 0
  br label %91

91:                                               ; preds = %154, %86
  %92 = phi i32 [ 0, %86 ], [ %156, %154 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #12
  store %class.SkTextBlob* inttoptr (i64 -6148914691236517206 to %class.SkTextBlob*), %class.SkTextBlob** %88, align 8
  call void @_ZN14SkTextBlobPriv14MakeFromBufferER12SkReadBuffer(%class.sk_sp.109* nonnull sret %7, %class.SkReadBuffer* dereferenceable(136) %1) #12
  %93 = load %class.SkTextBlob*, %class.SkTextBlob** %88, align 8
  %94 = icmp eq %class.SkTextBlob* %93, null
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %96

96:                                               ; preds = %95, %91
  %97 = load i8, i8* %81, align 8, !range !14
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %132, label %99

99:                                               ; preds = %96
  %100 = load i64, i64* %73, align 8
  %101 = lshr i64 %100, 1
  %102 = trunc i64 %101 to i32
  %103 = and i32 %102, 2147483647
  %104 = and i64 %100, -4294967295
  store i64 %104, i64* %73, align 8
  %105 = icmp eq i32 %103, 0
  br i1 %105, label %129, label %106

106:                                              ; preds = %99, %127
  %107 = phi i64 [ %128, %127 ], [ %104, %99 ]
  %108 = phi i32 [ %125, %127 ], [ 0, %99 ]
  %109 = load %class.sk_sp.30*, %class.sk_sp.30** %90, align 8
  %110 = lshr i64 %107, 1
  %111 = trunc i64 %110 to i32
  %112 = and i32 %111, 2147483647
  %113 = add nuw nsw i32 %112, %108
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds %class.sk_sp.30, %class.sk_sp.30* %109, i64 %114, i32 0
  %116 = load %class.SkTextBlob*, %class.SkTextBlob** %115, align 8
  %117 = icmp eq %class.SkTextBlob* %116, null
  br i1 %117, label %124, label %118

118:                                              ; preds = %106
  %119 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 -1 acq_rel
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %116) #12
  %123 = bitcast %class.SkTextBlob* %116 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %123) #12
  br label %124

124:                                              ; preds = %122, %118, %106
  %125 = add nuw nsw i32 %108, 1
  %126 = icmp eq i32 %125, %103
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = load i64, i64* %73, align 8
  br label %106

129:                                              ; preds = %124, %99
  call void @_ZN8SkTArrayI5sk_spIK10SkTextBlobELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.29* %72, i32 0, i32 2) #12
  %130 = load i64, i64* %73, align 8
  %131 = and i64 %130, -4294967297
  store i64 %131, i64* %73, align 8
  br label %144

132:                                              ; preds = %96
  %133 = load i64, i64* %89, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %88, align 8
  call void @_ZN8SkTArrayI5sk_spIK10SkTextBlobELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.29* %72, i32 1, i32 1) #12
  %134 = load %class.sk_sp.30*, %class.sk_sp.30** %90, align 8
  %135 = load i64, i64* %73, align 8
  %136 = lshr i64 %135, 1
  %137 = and i64 %136, 2147483647
  %138 = getelementptr inbounds %class.sk_sp.30, %class.sk_sp.30* %134, i64 %137
  %139 = add i64 %135, 2
  %140 = and i64 %139, 4294967294
  %141 = and i64 %135, -4294967295
  %142 = or i64 %140, %141
  store i64 %142, i64* %73, align 8
  %143 = bitcast %class.sk_sp.30* %138 to i64*
  store i64 %133, i64* %143, align 8
  br label %144

144:                                              ; preds = %132, %129
  %145 = phi i32 [ 0, %132 ], [ 1, %129 ]
  %146 = load %class.SkTextBlob*, %class.SkTextBlob** %88, align 8
  %147 = icmp eq %class.SkTextBlob* %146, null
  br i1 %147, label %154, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 -1 acq_rel
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %154

152:                                              ; preds = %148
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %146) #12
  %153 = bitcast %class.SkTextBlob* %146 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %153) #12
  br label %154

154:                                              ; preds = %152, %148, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #12
  %155 = icmp ne i32 %145, 0
  %156 = add nuw i32 %92, 1
  %157 = icmp eq i32 %156, %3
  %158 = or i1 %157, %155
  br i1 %158, label %38, label %91

159:                                              ; preds = %4
  %160 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 8
  %161 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 8, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = and i64 %162, 4294967294
  %164 = icmp eq i64 %163, 0
  %165 = icmp sgt i32 %3, -1
  %166 = and i1 %165, %164
  br i1 %166, label %168, label %167

167:                                              ; preds = %159
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %168

168:                                              ; preds = %167, %159
  %169 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %170 = load i8, i8* %169, align 8, !range !14
  %171 = icmp ne i8 %170, 0
  %172 = icmp eq i32 %3, 0
  %173 = or i1 %172, %171
  br i1 %173, label %38, label %174

174:                                              ; preds = %168
  %175 = bitcast %class.sk_sp.110* %6 to i8*
  %176 = getelementptr inbounds %class.sk_sp.110, %class.sk_sp.110* %6, i64 0, i32 0
  %177 = getelementptr inbounds %class.SkTArray.37, %class.SkTArray.37* %160, i64 0, i32 0
  %178 = bitcast %class.sk_sp.110* %6 to i64*
  br label %179

179:                                              ; preds = %242, %174
  %180 = phi i32 [ 0, %174 ], [ %244, %242 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #12
  store %class.SkVertices* inttoptr (i64 -6148914691236517206 to %class.SkVertices*), %class.SkVertices** %176, align 8
  call void @_ZN14SkVerticesPriv6DecodeER12SkReadBuffer(%class.sk_sp.110* nonnull sret %6, %class.SkReadBuffer* dereferenceable(136) %1) #12
  %181 = load %class.SkVertices*, %class.SkVertices** %176, align 8
  %182 = icmp eq %class.SkVertices* %181, null
  br i1 %182, label %183, label %184

183:                                              ; preds = %179
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %184

184:                                              ; preds = %183, %179
  %185 = load i8, i8* %169, align 8, !range !14
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %220, label %187

187:                                              ; preds = %184
  %188 = load i64, i64* %161, align 8
  %189 = lshr i64 %188, 1
  %190 = trunc i64 %189 to i32
  %191 = and i32 %190, 2147483647
  %192 = and i64 %188, -4294967295
  store i64 %192, i64* %161, align 8
  %193 = icmp eq i32 %191, 0
  br i1 %193, label %217, label %194

194:                                              ; preds = %187, %215
  %195 = phi i64 [ %216, %215 ], [ %192, %187 ]
  %196 = phi i32 [ %213, %215 ], [ 0, %187 ]
  %197 = load %class.sk_sp.38*, %class.sk_sp.38** %177, align 8
  %198 = lshr i64 %195, 1
  %199 = trunc i64 %198 to i32
  %200 = and i32 %199, 2147483647
  %201 = add nuw nsw i32 %200, %196
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %197, i64 %202, i32 0
  %204 = load %class.SkVertices*, %class.SkVertices** %203, align 8
  %205 = icmp eq %class.SkVertices* %204, null
  br i1 %205, label %212, label %206

206:                                              ; preds = %194
  %207 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %204, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = atomicrmw add i32* %207, i32 -1 acq_rel
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %210, label %212

210:                                              ; preds = %206
  %211 = bitcast %class.SkVertices* %204 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %211) #12
  br label %212

212:                                              ; preds = %210, %206, %194
  %213 = add nuw nsw i32 %196, 1
  %214 = icmp eq i32 %213, %191
  br i1 %214, label %217, label %215

215:                                              ; preds = %212
  %216 = load i64, i64* %161, align 8
  br label %194

217:                                              ; preds = %212, %187
  call void @_ZN8SkTArrayI5sk_spIK10SkVerticesELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.37* %160, i32 0, i32 2) #12
  %218 = load i64, i64* %161, align 8
  %219 = and i64 %218, -4294967297
  store i64 %219, i64* %161, align 8
  br label %232

220:                                              ; preds = %184
  %221 = load i64, i64* %178, align 8
  store %class.SkVertices* null, %class.SkVertices** %176, align 8
  call void @_ZN8SkTArrayI5sk_spIK10SkVerticesELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.37* %160, i32 1, i32 1) #12
  %222 = load %class.sk_sp.38*, %class.sk_sp.38** %177, align 8
  %223 = load i64, i64* %161, align 8
  %224 = lshr i64 %223, 1
  %225 = and i64 %224, 2147483647
  %226 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %222, i64 %225
  %227 = add i64 %223, 2
  %228 = and i64 %227, 4294967294
  %229 = and i64 %223, -4294967295
  %230 = or i64 %228, %229
  store i64 %230, i64* %161, align 8
  %231 = bitcast %class.sk_sp.38* %226 to i64*
  store i64 %221, i64* %231, align 8
  br label %232

232:                                              ; preds = %220, %217
  %233 = phi i32 [ 0, %220 ], [ 1, %217 ]
  %234 = load %class.SkVertices*, %class.SkVertices** %176, align 8
  %235 = icmp eq %class.SkVertices* %234, null
  br i1 %235, label %242, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = atomicrmw add i32* %237, i32 -1 acq_rel
  %239 = icmp eq i32 %238, 1
  br i1 %239, label %240, label %242

240:                                              ; preds = %236
  %241 = bitcast %class.SkVertices* %234 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %241) #12
  br label %242

242:                                              ; preds = %240, %236, %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #12
  %243 = icmp ne i32 %233, 0
  %244 = add nuw i32 %180, 1
  %245 = icmp eq i32 %244, %3
  %246 = or i1 %245, %243
  br i1 %246, label %38, label %179

247:                                              ; preds = %4
  %248 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 9
  %249 = tail call zeroext i1 @_Z21new_array_from_bufferIK7SkImageS0_EbR12SkReadBufferjR8SkTArrayI5sk_spIT_ELb0EEPFS5_IT0_ES3_E(%class.SkReadBuffer* dereferenceable(136) %1, i32 %3, %class.SkTArray.40* dereferenceable(16) %248, void (%class.sk_sp.54*, %class.SkReadBuffer*)* nonnull @_ZL24create_image_from_bufferR12SkReadBuffer)
  br label %38

250:                                              ; preds = %4
  %251 = zext i32 %3 to i64
  %252 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %253 = bitcast i8** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = bitcast %class.SkReadBuffer* %1 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = sub i64 %254, %256
  %258 = icmp ult i64 %257, %251
  br i1 %258, label %259, label %260

259:                                              ; preds = %250
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %260

260:                                              ; preds = %250, %259
  %261 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %262 = load i8, i8* %261, align 8, !range !14
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %264, label %38

264:                                              ; preds = %260
  %265 = bitcast %class.sk_sp.19* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265) #12
  %266 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %8, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %266, align 8
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.19* nonnull sret %8, i64 %251) #12
  %267 = load %class.SkData*, %class.SkData** %266, align 8
  %268 = getelementptr inbounds %class.SkData, %class.SkData* %267, i64 0, i32 3
  %269 = load i8*, i8** %268, align 8
  %270 = call zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer* %1, i8* %269, i64 %251) #12
  br i1 %270, label %271, label %292

271:                                              ; preds = %264
  %272 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 2
  %273 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %272, i64 0, i32 0
  %274 = load %class.SkData*, %class.SkData** %273, align 8
  %275 = icmp eq %class.SkData* %274, null
  br i1 %275, label %277, label %276

276:                                              ; preds = %271
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %277

277:                                              ; preds = %271, %276
  %278 = load i8, i8* %261, align 8, !range !14
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %280, label %292

280:                                              ; preds = %277
  %281 = bitcast %class.sk_sp.19* %8 to i64*
  %282 = load i64, i64* %281, align 8
  store %class.SkData* null, %class.SkData** %266, align 8
  %283 = load %class.SkData*, %class.SkData** %273, align 8
  %284 = bitcast %class.sk_sp.19* %272 to i64*
  store i64 %282, i64* %284, align 8
  %285 = icmp eq %class.SkData* %283, null
  br i1 %285, label %301, label %286

286:                                              ; preds = %280
  %287 = getelementptr inbounds %class.SkData, %class.SkData* %283, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = atomicrmw add i32* %287, i32 -1 acq_rel
  %289 = icmp eq i32 %288, 1
  br i1 %289, label %290, label %292

290:                                              ; preds = %286
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %283) #12
  %291 = bitcast %class.SkData* %283 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %291) #12
  br label %292

292:                                              ; preds = %290, %286, %264, %277
  %293 = load %class.SkData*, %class.SkData** %266, align 8
  %294 = icmp eq %class.SkData* %293, null
  br i1 %294, label %301, label %295

295:                                              ; preds = %292
  %296 = getelementptr inbounds %class.SkData, %class.SkData* %293, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = atomicrmw add i32* %296, i32 -1 acq_rel
  %298 = icmp eq i32 %297, 1
  br i1 %298, label %299, label %301

299:                                              ; preds = %295
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %293) #12
  %300 = bitcast %class.SkData* %293 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %300) #12
  br label %301

301:                                              ; preds = %280, %292, %295, %299
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #12
  br label %38

302:                                              ; preds = %4
  %303 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5
  %304 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 1
  %305 = load i64, i64* %304, align 8
  %306 = and i64 %305, 4294967294
  %307 = icmp eq i64 %306, 0
  %308 = icmp sgt i32 %3, -1
  %309 = and i1 %308, %307
  br i1 %309, label %311, label %310

310:                                              ; preds = %302
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %311

311:                                              ; preds = %310, %302
  %312 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %313 = load i8, i8* %312, align 8, !range !14
  %314 = icmp ne i8 %313, 0
  %315 = icmp eq i32 %3, 0
  %316 = or i1 %315, %314
  br i1 %316, label %38, label %317

317:                                              ; preds = %311
  %318 = bitcast %class.sk_sp.53* %5 to i8*
  %319 = getelementptr inbounds %class.sk_sp.53, %class.sk_sp.53* %5, i64 0, i32 0
  %320 = getelementptr inbounds %class.SkTArray.25, %class.SkTArray.25* %303, i64 0, i32 0
  %321 = bitcast %class.sk_sp.53* %5 to i64*
  br label %322

322:                                              ; preds = %393, %317
  %323 = phi i32 [ 0, %317 ], [ %395, %393 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %318) #12
  store %class.SkPicture* inttoptr (i64 -6148914691236517206 to %class.SkPicture*), %class.SkPicture** %319, align 8
  call void @_ZN13SkPicturePriv14MakeFromBufferER12SkReadBuffer(%class.sk_sp.53* nonnull sret %5, %class.SkReadBuffer* dereferenceable(136) %1) #12
  %324 = load %class.SkPicture*, %class.SkPicture** %319, align 8
  %325 = icmp eq %class.SkPicture* %324, null
  br i1 %325, label %326, label %327

326:                                              ; preds = %322
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %327

327:                                              ; preds = %326, %322
  %328 = load i8, i8* %312, align 8, !range !14
  %329 = icmp eq i8 %328, 0
  br i1 %329, label %367, label %330

330:                                              ; preds = %327
  %331 = load i64, i64* %304, align 8
  %332 = lshr i64 %331, 1
  %333 = trunc i64 %332 to i32
  %334 = and i32 %333, 2147483647
  %335 = and i64 %331, -4294967295
  store i64 %335, i64* %304, align 8
  %336 = icmp eq i32 %334, 0
  br i1 %336, label %364, label %337

337:                                              ; preds = %330, %362
  %338 = phi i64 [ %363, %362 ], [ %335, %330 ]
  %339 = phi i32 [ %360, %362 ], [ 0, %330 ]
  %340 = load %class.sk_sp.26*, %class.sk_sp.26** %320, align 8
  %341 = lshr i64 %338, 1
  %342 = trunc i64 %341 to i32
  %343 = and i32 %342, 2147483647
  %344 = add nuw nsw i32 %343, %339
  %345 = zext i32 %344 to i64
  %346 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %340, i64 %345, i32 0
  %347 = load %class.SkPicture*, %class.SkPicture** %346, align 8
  %348 = icmp eq %class.SkPicture* %347, null
  br i1 %348, label %359, label %349

349:                                              ; preds = %337
  %350 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %347, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = atomicrmw add i32* %350, i32 -1 acq_rel
  %352 = icmp eq i32 %351, 1
  br i1 %352, label %353, label %359

353:                                              ; preds = %349
  %354 = bitcast %class.SkPicture* %347 to %class.SkRefCntBase*
  %355 = bitcast %class.SkPicture* %347 to void (%class.SkRefCntBase*)***
  %356 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %355, align 8
  %357 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %356, i64 2
  %358 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %357, align 8
  call void %358(%class.SkRefCntBase* nonnull %354) #12
  br label %359

359:                                              ; preds = %353, %349, %337
  %360 = add nuw nsw i32 %339, 1
  %361 = icmp eq i32 %360, %334
  br i1 %361, label %364, label %362

362:                                              ; preds = %359
  %363 = load i64, i64* %304, align 8
  br label %337

364:                                              ; preds = %359, %330
  call void @_ZN8SkTArrayI5sk_spIK9SkPictureELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.25* %303, i32 0, i32 2) #12
  %365 = load i64, i64* %304, align 8
  %366 = and i64 %365, -4294967297
  store i64 %366, i64* %304, align 8
  br label %379

367:                                              ; preds = %327
  %368 = load i64, i64* %321, align 8
  store %class.SkPicture* null, %class.SkPicture** %319, align 8
  call void @_ZN8SkTArrayI5sk_spIK9SkPictureELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.25* %303, i32 1, i32 1) #12
  %369 = load %class.sk_sp.26*, %class.sk_sp.26** %320, align 8
  %370 = load i64, i64* %304, align 8
  %371 = lshr i64 %370, 1
  %372 = and i64 %371, 2147483647
  %373 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %369, i64 %372
  %374 = add i64 %370, 2
  %375 = and i64 %374, 4294967294
  %376 = and i64 %370, -4294967295
  %377 = or i64 %375, %376
  store i64 %377, i64* %304, align 8
  %378 = bitcast %class.sk_sp.26* %373 to i64*
  store i64 %368, i64* %378, align 8
  br label %379

379:                                              ; preds = %367, %364
  %380 = phi i32 [ 0, %367 ], [ 1, %364 ]
  %381 = load %class.SkPicture*, %class.SkPicture** %319, align 8
  %382 = icmp eq %class.SkPicture* %381, null
  br i1 %382, label %393, label %383

383:                                              ; preds = %379
  %384 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %381, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = atomicrmw add i32* %384, i32 -1 acq_rel
  %386 = icmp eq i32 %385, 1
  br i1 %386, label %387, label %393

387:                                              ; preds = %383
  %388 = bitcast %class.SkPicture* %381 to %class.SkRefCntBase*
  %389 = bitcast %class.SkPicture* %381 to void (%class.SkRefCntBase*)***
  %390 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %389, align 8
  %391 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %390, i64 2
  %392 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %391, align 8
  call void %392(%class.SkRefCntBase* nonnull %388) #12
  br label %393

393:                                              ; preds = %387, %383, %379
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %318) #12
  %394 = icmp ne i32 %380, 0
  %395 = add nuw i32 %323, 1
  %396 = icmp eq i32 %395, %3
  %397 = or i1 %396, %394
  br i1 %397, label %38, label %322

398:                                              ; preds = %4
  %399 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 6
  %400 = tail call zeroext i1 @_Z21new_array_from_bufferI10SkDrawableS0_EbR12SkReadBufferjR8SkTArrayI5sk_spIT_ELb0EEPFS4_IT0_ES2_E(%class.SkReadBuffer* dereferenceable(136) %1, i32 %3, %class.SkTArray.27* dereferenceable(16) %399, void (%class.sk_sp.28*, %class.SkReadBuffer*)* nonnull @_ZL27create_drawable_from_bufferR12SkReadBuffer)
  br label %38

401:                                              ; preds = %4
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %38
}

declare i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare void @_ZN12SkReadBuffer8readPathEP6SkPath(%class.SkReadBuffer*, %class.SkPath*) local_unnamed_addr #1

declare void @_ZN14SkTextBlobPriv14MakeFromBufferER12SkReadBuffer(%class.sk_sp.109* sret, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #1

declare void @_ZN14SkVerticesPriv6DecodeER12SkReadBuffer(%class.sk_sp.110* sret, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_Z21new_array_from_bufferIK7SkImageS0_EbR12SkReadBufferjR8SkTArrayI5sk_spIT_ELb0EEPFS5_IT0_ES3_E(%class.SkReadBuffer* dereferenceable(136), i32, %class.SkTArray.40* dereferenceable(16), void (%class.sk_sp.54*, %class.SkReadBuffer*)*) local_unnamed_addr #0 comdat {
  %5 = alloca %class.sk_sp.54, align 8
  %6 = getelementptr inbounds %class.SkTArray.40, %class.SkTArray.40* %2, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 4294967294
  %9 = icmp eq i64 %8, 0
  %10 = icmp sgt i32 %1, -1
  %11 = and i1 %10, %9
  br i1 %11, label %13, label %12

12:                                               ; preds = %4
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %0) #12
  br label %13

13:                                               ; preds = %4, %12
  %14 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %15 = load i8, i8* %14, align 8, !range !14
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %100

17:                                               ; preds = %13
  %18 = icmp eq i32 %1, 0
  br i1 %18, label %100, label %19

19:                                               ; preds = %17
  %20 = bitcast %class.sk_sp.54* %5 to i8*
  %21 = getelementptr inbounds %class.sk_sp.54, %class.sk_sp.54* %5, i64 0, i32 0
  %22 = getelementptr inbounds %class.SkTArray.40, %class.SkTArray.40* %2, i64 0, i32 0
  %23 = bitcast %class.sk_sp.54* %5 to i64*
  br label %26

24:                                               ; preds = %97
  %25 = icmp eq i32 %99, %1
  br i1 %25, label %100, label %26

26:                                               ; preds = %24, %19
  %27 = phi i32 [ 0, %19 ], [ %99, %24 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %21, align 8
  call void %3(%class.sk_sp.54* nonnull sret %5, %class.SkReadBuffer* dereferenceable(136) %0) #12
  %28 = load %class.SkImage*, %class.SkImage** %21, align 8
  %29 = icmp eq %class.SkImage* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %0) #12
  br label %31

31:                                               ; preds = %26, %30
  %32 = load i8, i8* %14, align 8, !range !14
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %71, label %34

34:                                               ; preds = %31
  %35 = load i64, i64* %6, align 8
  %36 = lshr i64 %35, 1
  %37 = trunc i64 %36 to i32
  %38 = and i32 %37, 2147483647
  %39 = and i64 %35, -4294967295
  store i64 %39, i64* %6, align 8
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %68, label %41

41:                                               ; preds = %34, %66
  %42 = phi i64 [ %67, %66 ], [ %39, %34 ]
  %43 = phi i32 [ %64, %66 ], [ 0, %34 ]
  %44 = load %class.sk_sp.41*, %class.sk_sp.41** %22, align 8
  %45 = lshr i64 %42, 1
  %46 = trunc i64 %45 to i32
  %47 = and i32 %46, 2147483647
  %48 = add nuw nsw i32 %47, %43
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %44, i64 %49, i32 0
  %51 = load %class.SkImage*, %class.SkImage** %50, align 8
  %52 = icmp eq %class.SkImage* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %41
  %54 = getelementptr inbounds %class.SkImage, %class.SkImage* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkImage* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkImage* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  call void %62(%class.SkRefCntBase* nonnull %58) #12
  br label %63

63:                                               ; preds = %57, %53, %41
  %64 = add nuw nsw i32 %43, 1
  %65 = icmp eq i32 %64, %38
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = load i64, i64* %6, align 8
  br label %41

68:                                               ; preds = %63, %34
  call void @_ZN8SkTArrayI5sk_spIK7SkImageELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.40* %2, i32 0, i32 2) #12
  %69 = load i64, i64* %6, align 8
  %70 = and i64 %69, -4294967297
  store i64 %70, i64* %6, align 8
  br label %83

71:                                               ; preds = %31
  %72 = load i64, i64* %23, align 8
  store %class.SkImage* null, %class.SkImage** %21, align 8
  call void @_ZN8SkTArrayI5sk_spIK7SkImageELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.40* %2, i32 1, i32 1) #12
  %73 = load %class.sk_sp.41*, %class.sk_sp.41** %22, align 8
  %74 = load i64, i64* %6, align 8
  %75 = lshr i64 %74, 1
  %76 = and i64 %75, 2147483647
  %77 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %73, i64 %76
  %78 = add i64 %74, 2
  %79 = and i64 %78, 4294967294
  %80 = and i64 %74, -4294967295
  %81 = or i64 %79, %80
  store i64 %81, i64* %6, align 8
  %82 = bitcast %class.sk_sp.41* %77 to i64*
  store i64 %72, i64* %82, align 8
  br label %83

83:                                               ; preds = %71, %68
  %84 = phi i32 [ 0, %71 ], [ 1, %68 ]
  %85 = load %class.SkImage*, %class.SkImage** %21, align 8
  %86 = icmp eq %class.SkImage* %85, null
  br i1 %86, label %97, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %class.SkImage, %class.SkImage* %85, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast %class.SkImage* %85 to %class.SkRefCntBase*
  %93 = bitcast %class.SkImage* %85 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  call void %96(%class.SkRefCntBase* nonnull %92) #12
  br label %97

97:                                               ; preds = %83, %87, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %98 = icmp eq i32 %84, 0
  %99 = add nuw i32 %27, 1
  br i1 %98, label %24, label %100

100:                                              ; preds = %97, %24, %17, %13
  %101 = phi i1 [ false, %13 ], [ true, %17 ], [ false, %97 ], [ true, %24 ]
  ret i1 %101
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL24create_image_from_bufferR12SkReadBuffer(%class.sk_sp.54* noalias sret, %class.SkReadBuffer* dereferenceable(136)) #0 {
  tail call void @_ZN12SkReadBuffer9readImageEv(%class.sk_sp.54* sret %0, %class.SkReadBuffer* %1) #12
  ret void
}

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.19* sret, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer*, i8*, i64) local_unnamed_addr #1

declare void @_ZN13SkPicturePriv14MakeFromBufferER12SkReadBuffer(%class.sk_sp.53* sret, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_Z21new_array_from_bufferI10SkDrawableS0_EbR12SkReadBufferjR8SkTArrayI5sk_spIT_ELb0EEPFS4_IT0_ES2_E(%class.SkReadBuffer* dereferenceable(136), i32, %class.SkTArray.27* dereferenceable(16), void (%class.sk_sp.28*, %class.SkReadBuffer*)*) local_unnamed_addr #0 comdat {
  %5 = alloca %class.sk_sp.28, align 8
  %6 = getelementptr inbounds %class.SkTArray.27, %class.SkTArray.27* %2, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 4294967294
  %9 = icmp eq i64 %8, 0
  %10 = icmp sgt i32 %1, -1
  %11 = and i1 %10, %9
  br i1 %11, label %13, label %12

12:                                               ; preds = %4
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %0) #12
  br label %13

13:                                               ; preds = %4, %12
  %14 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %15 = load i8, i8* %14, align 8, !range !14
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %100

17:                                               ; preds = %13
  %18 = icmp eq i32 %1, 0
  br i1 %18, label %100, label %19

19:                                               ; preds = %17
  %20 = bitcast %class.sk_sp.28* %5 to i8*
  %21 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %5, i64 0, i32 0
  %22 = getelementptr inbounds %class.SkTArray.27, %class.SkTArray.27* %2, i64 0, i32 0
  %23 = bitcast %class.sk_sp.28* %5 to i64*
  br label %26

24:                                               ; preds = %97
  %25 = icmp eq i32 %99, %1
  br i1 %25, label %100, label %26

26:                                               ; preds = %24, %19
  %27 = phi i32 [ 0, %19 ], [ %99, %24 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  store %class.SkDrawable* inttoptr (i64 -6148914691236517206 to %class.SkDrawable*), %class.SkDrawable** %21, align 8
  call void %3(%class.sk_sp.28* nonnull sret %5, %class.SkReadBuffer* dereferenceable(136) %0) #12
  %28 = load %class.SkDrawable*, %class.SkDrawable** %21, align 8
  %29 = icmp eq %class.SkDrawable* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %0) #12
  br label %31

31:                                               ; preds = %26, %30
  %32 = load i8, i8* %14, align 8, !range !14
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %71, label %34

34:                                               ; preds = %31
  %35 = load i64, i64* %6, align 8
  %36 = lshr i64 %35, 1
  %37 = trunc i64 %36 to i32
  %38 = and i32 %37, 2147483647
  %39 = and i64 %35, -4294967295
  store i64 %39, i64* %6, align 8
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %68, label %41

41:                                               ; preds = %34, %66
  %42 = phi i64 [ %67, %66 ], [ %39, %34 ]
  %43 = phi i32 [ %64, %66 ], [ 0, %34 ]
  %44 = load %class.sk_sp.28*, %class.sk_sp.28** %22, align 8
  %45 = lshr i64 %42, 1
  %46 = trunc i64 %45 to i32
  %47 = and i32 %46, 2147483647
  %48 = add nuw nsw i32 %47, %43
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %44, i64 %49, i32 0
  %51 = load %class.SkDrawable*, %class.SkDrawable** %50, align 8
  %52 = icmp eq %class.SkDrawable* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %41
  %54 = getelementptr inbounds %class.SkDrawable, %class.SkDrawable* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkDrawable* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkDrawable* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  call void %62(%class.SkRefCntBase* nonnull %58) #12
  br label %63

63:                                               ; preds = %57, %53, %41
  %64 = add nuw nsw i32 %43, 1
  %65 = icmp eq i32 %64, %38
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = load i64, i64* %6, align 8
  br label %41

68:                                               ; preds = %63, %34
  call void @_ZN8SkTArrayI5sk_spI10SkDrawableELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.27* %2, i32 0, i32 2) #12
  %69 = load i64, i64* %6, align 8
  %70 = and i64 %69, -4294967297
  store i64 %70, i64* %6, align 8
  br label %83

71:                                               ; preds = %31
  call void @_ZN8SkTArrayI5sk_spI10SkDrawableELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.27* %2, i32 1, i32 1) #12
  %72 = load %class.sk_sp.28*, %class.sk_sp.28** %22, align 8
  %73 = load i64, i64* %6, align 8
  %74 = lshr i64 %73, 1
  %75 = and i64 %74, 2147483647
  %76 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %72, i64 %75
  %77 = add i64 %73, 2
  %78 = and i64 %77, 4294967294
  %79 = and i64 %73, -4294967295
  %80 = or i64 %78, %79
  store i64 %80, i64* %6, align 8
  %81 = load i64, i64* %23, align 8
  store %class.SkDrawable* null, %class.SkDrawable** %21, align 8
  %82 = bitcast %class.sk_sp.28* %76 to i64*
  store i64 %81, i64* %82, align 8
  br label %83

83:                                               ; preds = %71, %68
  %84 = phi i32 [ 0, %71 ], [ 1, %68 ]
  %85 = load %class.SkDrawable*, %class.SkDrawable** %21, align 8
  %86 = icmp eq %class.SkDrawable* %85, null
  br i1 %86, label %97, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %class.SkDrawable, %class.SkDrawable* %85, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast %class.SkDrawable* %85 to %class.SkRefCntBase*
  %93 = bitcast %class.SkDrawable* %85 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  call void %96(%class.SkRefCntBase* nonnull %92) #12
  br label %97

97:                                               ; preds = %83, %87, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %98 = icmp eq i32 %84, 0
  %99 = add nuw i32 %27, 1
  br i1 %98, label %24, label %100

100:                                              ; preds = %97, %24, %17, %13
  %101 = phi i1 [ false, %13 ], [ true, %17 ], [ false, %97 ], [ true, %24 ]
  ret i1 %101
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL27create_drawable_from_bufferR12SkReadBuffer(%class.sk_sp.28* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 {
  %3 = tail call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 1) #12
  %4 = bitcast %class.sk_sp.28* %0 to %class.SkFlattenable**
  store %class.SkFlattenable* %3, %class.SkFlattenable** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkPictureData* @_ZN13SkPictureData16CreateFromStreamEP8SkStreamRK10SkPictInfoRK15SkDeserialProcsP18SkTypefacePlayback(%class.SkStream*, %struct.SkPictInfo* nocapture readonly dereferenceable(28), %struct.SkDeserialProcs* dereferenceable(48), %class.SkTypefacePlayback*) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = tail call i8* @_Znwm(i64 248) #14
  %8 = bitcast i8* %7 to %class.SkPictureData*
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast i8* %7 to %class.SkPaint**
  store %class.SkPaint* null, %class.SkPaint** %11, align 8
  store i64 1, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = getelementptr inbounds i8, i8* %7, i64 16
  %15 = bitcast i8* %14 to %class.SkPath**
  store %class.SkPath* null, %class.SkPath** %15, align 8
  store i64 1, i64* %13, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 32
  %17 = bitcast i8* %16 to %class.SkData**
  store %class.SkData* null, %class.SkData** %17, align 8
  %18 = getelementptr inbounds i8, i8* %7, i64 40
  %19 = bitcast i8* %18 to %class.SkPath*
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %19) #12
  %20 = getelementptr inbounds i8, i8* %7, i64 56
  %21 = bitcast i8* %20 to %class.SkBitmap*
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %21) #12
  %22 = getelementptr inbounds i8, i8* %7, i64 120
  %23 = bitcast i8* %22 to i64*
  %24 = getelementptr inbounds i8, i8* %7, i64 112
  %25 = bitcast i8* %24 to %class.sk_sp.26**
  store %class.sk_sp.26* null, %class.sk_sp.26** %25, align 8
  store i64 1, i64* %23, align 8
  %26 = getelementptr inbounds i8, i8* %7, i64 136
  %27 = bitcast i8* %26 to i64*
  %28 = getelementptr inbounds i8, i8* %7, i64 128
  %29 = bitcast i8* %28 to %class.sk_sp.28**
  store %class.sk_sp.28* null, %class.sk_sp.28** %29, align 8
  store i64 1, i64* %27, align 8
  %30 = getelementptr inbounds i8, i8* %7, i64 152
  %31 = bitcast i8* %30 to i64*
  %32 = getelementptr inbounds i8, i8* %7, i64 144
  %33 = bitcast i8* %32 to %class.sk_sp.30**
  store %class.sk_sp.30* null, %class.sk_sp.30** %33, align 8
  store i64 1, i64* %31, align 8
  %34 = getelementptr inbounds i8, i8* %7, i64 168
  %35 = bitcast i8* %34 to i64*
  %36 = getelementptr inbounds i8, i8* %7, i64 160
  %37 = bitcast i8* %36 to %class.sk_sp.38**
  store %class.sk_sp.38* null, %class.sk_sp.38** %37, align 8
  store i64 1, i64* %35, align 8
  %38 = getelementptr inbounds i8, i8* %7, i64 184
  %39 = bitcast i8* %38 to i64*
  %40 = getelementptr inbounds i8, i8* %7, i64 176
  %41 = bitcast i8* %40 to %class.sk_sp.41**
  store %class.sk_sp.41* null, %class.sk_sp.41** %41, align 8
  store i64 1, i64* %39, align 8
  %42 = getelementptr inbounds i8, i8* %7, i64 192
  %43 = bitcast i8* %42 to %class.SkTypefacePlayback*
  %44 = getelementptr inbounds i8, i8* %7, i64 216
  %45 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 4 %45, i64 28, i1 false) #12
  %46 = icmp eq %class.SkTypefacePlayback* %3, null
  %47 = select i1 %46, %class.SkTypefacePlayback* %43, %class.SkTypefacePlayback* %3
  %48 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #12
  store i32 -1431655766, i32* %5, align 4
  %49 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* %0, i32* nonnull %5) #12
  br i1 %49, label %50, label %65

50:                                               ; preds = %4
  %51 = bitcast i32* %6 to i8*
  br label %52

52:                                               ; preds = %62, %50
  %53 = load i32, i32* %5, align 4
  %54 = icmp eq i32 %53, 1701799456
  br i1 %54, label %64, label %55

55:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #12
  store i32 -1431655766, i32* %6, align 4
  %56 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* %0, i32* nonnull %6) #12
  br i1 %56, label %57, label %61

57:                                               ; preds = %55
  %58 = load i32, i32* %5, align 4
  %59 = load i32, i32* %6, align 4
  %60 = call zeroext i1 @_ZN13SkPictureData14parseStreamTagEP8SkStreamjjRK15SkDeserialProcsP18SkTypefacePlayback(%class.SkPictureData* nonnull %8, %class.SkStream* %0, i32 %58, i32 %59, %struct.SkDeserialProcs* dereferenceable(48) %2, %class.SkTypefacePlayback* %47) #12
  br i1 %60, label %62, label %61

61:                                               ; preds = %57, %55
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #12
  br label %65

62:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #12
  store i32 -1431655766, i32* %5, align 4
  %63 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* %0, i32* nonnull %5) #12
  br i1 %63, label %52, label %65

64:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #12
  br label %66

65:                                               ; preds = %62, %4, %61
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #12
  call void @_ZN13SkPictureDataD2Ev(%class.SkPictureData* nonnull %8) #12
  call void @_ZdlPv(i8* nonnull %7) #14
  br label %66

66:                                               ; preds = %64, %65
  %67 = phi %class.SkPictureData* [ %8, %64 ], [ null, %65 ]
  ret %class.SkPictureData* %67
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkPictureData11parseStreamEP8SkStreamRK15SkDeserialProcsP18SkTypefacePlayback(%class.SkPictureData*, %class.SkStream*, %struct.SkDeserialProcs* dereferenceable(48), %class.SkTypefacePlayback*) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #12
  store i32 -1431655766, i32* %5, align 4
  %8 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* %1, i32* nonnull %5) #12
  br i1 %8, label %9, label %23

9:                                                ; preds = %4
  %10 = bitcast i32* %6 to i8*
  br label %11

11:                                               ; preds = %9, %21
  %12 = load i32, i32* %5, align 4
  %13 = icmp eq i32 %12, 1701799456
  br i1 %13, label %23, label %14

14:                                               ; preds = %11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #12
  store i32 -1431655766, i32* %6, align 4
  %15 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* %1, i32* nonnull %6) #12
  br i1 %15, label %16, label %20

16:                                               ; preds = %14
  %17 = load i32, i32* %5, align 4
  %18 = load i32, i32* %6, align 4
  %19 = call zeroext i1 @_ZN13SkPictureData14parseStreamTagEP8SkStreamjjRK15SkDeserialProcsP18SkTypefacePlayback(%class.SkPictureData* %0, %class.SkStream* %1, i32 %17, i32 %18, %struct.SkDeserialProcs* dereferenceable(48) %2, %class.SkTypefacePlayback* %3)
  br i1 %19, label %21, label %20

20:                                               ; preds = %14, %16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #12
  br label %23

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #12
  store i32 -1431655766, i32* %5, align 4
  %22 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* %1, i32* nonnull %5) #12
  br i1 %22, label %11, label %23

23:                                               ; preds = %11, %21, %4, %20
  %24 = phi i1 [ false, %20 ], [ false, %4 ], [ true, %11 ], [ false, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #12
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkPictureData* @_ZN13SkPictureData16CreateFromBufferER12SkReadBufferRK10SkPictInfo(%class.SkReadBuffer* dereferenceable(136), %struct.SkPictInfo* nocapture readonly dereferenceable(28)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 248) #14
  %4 = bitcast i8* %3 to %class.SkPictureData*
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i64*
  %7 = bitcast i8* %3 to %class.SkPaint**
  store %class.SkPaint* null, %class.SkPaint** %7, align 8
  store i64 1, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %3, i64 16
  %11 = bitcast i8* %10 to %class.SkPath**
  store %class.SkPath* null, %class.SkPath** %11, align 8
  store i64 1, i64* %9, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 32
  %13 = bitcast i8* %12 to %class.SkData**
  store %class.SkData* null, %class.SkData** %13, align 8
  %14 = getelementptr inbounds i8, i8* %3, i64 40
  %15 = bitcast i8* %14 to %class.SkPath*
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %15) #12
  %16 = getelementptr inbounds i8, i8* %3, i64 56
  %17 = bitcast i8* %16 to %class.SkBitmap*
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %17) #12
  %18 = getelementptr inbounds i8, i8* %3, i64 120
  %19 = bitcast i8* %18 to i64*
  %20 = getelementptr inbounds i8, i8* %3, i64 112
  %21 = bitcast i8* %20 to %class.sk_sp.26**
  store %class.sk_sp.26* null, %class.sk_sp.26** %21, align 8
  store i64 1, i64* %19, align 8
  %22 = getelementptr inbounds i8, i8* %3, i64 136
  %23 = bitcast i8* %22 to i64*
  %24 = getelementptr inbounds i8, i8* %3, i64 128
  %25 = bitcast i8* %24 to %class.sk_sp.28**
  store %class.sk_sp.28* null, %class.sk_sp.28** %25, align 8
  store i64 1, i64* %23, align 8
  %26 = getelementptr inbounds i8, i8* %3, i64 152
  %27 = bitcast i8* %26 to i64*
  %28 = getelementptr inbounds i8, i8* %3, i64 144
  %29 = bitcast i8* %28 to %class.sk_sp.30**
  store %class.sk_sp.30* null, %class.sk_sp.30** %29, align 8
  store i64 1, i64* %27, align 8
  %30 = getelementptr inbounds i8, i8* %3, i64 168
  %31 = bitcast i8* %30 to i64*
  %32 = getelementptr inbounds i8, i8* %3, i64 160
  %33 = bitcast i8* %32 to %class.sk_sp.38**
  store %class.sk_sp.38* null, %class.sk_sp.38** %33, align 8
  store i64 1, i64* %31, align 8
  %34 = getelementptr inbounds i8, i8* %3, i64 184
  %35 = bitcast i8* %34 to i64*
  %36 = getelementptr inbounds i8, i8* %3, i64 176
  %37 = bitcast i8* %36 to %class.sk_sp.41**
  store %class.sk_sp.41* null, %class.sk_sp.41** %37, align 8
  store i64 1, i64* %35, align 8
  %38 = getelementptr inbounds i8, i8* %3, i64 192
  %39 = getelementptr inbounds i8, i8* %3, i64 216
  %40 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 4 %40, i64 28, i1 false) #12
  %41 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %1, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 4
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %45 = load i8, i8* %44, align 8, !range !14
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %54

47:                                               ; preds = %2, %50
  %48 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %0) #12
  %49 = icmp eq i32 %48, 1701799456
  br i1 %49, label %54, label %50

50:                                               ; preds = %47
  %51 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %0) #12
  tail call void @_ZN13SkPictureData14parseBufferTagER12SkReadBufferjj(%class.SkPictureData* nonnull %4, %class.SkReadBuffer* dereferenceable(136) %0, i32 %48, i32 %51) #12
  %52 = load i8, i8* %44, align 8, !range !14
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %47, label %54

54:                                               ; preds = %50, %47, %2
  %55 = load %class.SkData*, %class.SkData** %13, align 8
  %56 = icmp eq %class.SkData* %55, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %0) #12
  br label %58

58:                                               ; preds = %54, %57
  %59 = load i8, i8* %44, align 8, !range !14
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  tail call void @_ZN13SkPictureDataD2Ev(%class.SkPictureData* nonnull %4) #12
  tail call void @_ZdlPv(i8* nonnull %3) #14
  br label %62

62:                                               ; preds = %58, %61
  %63 = phi %class.SkPictureData* [ null, %61 ], [ %4, %58 ]
  ret %class.SkPictureData* %63
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkPictureData11parseBufferER12SkReadBuffer(%class.SkPictureData*, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %4 = load i8, i8* %3, align 8, !range !14
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %2, %9
  %7 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #12
  %8 = icmp eq i32 %7, 1701799456
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #12
  tail call void @_ZN13SkPictureData14parseBufferTagER12SkReadBufferjj(%class.SkPictureData* %0, %class.SkReadBuffer* dereferenceable(136) %1, i32 %7, i32 %10)
  %11 = load i8, i8* %3, align 8, !range !14
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %6, label %13

13:                                               ; preds = %9, %6, %2
  %14 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 2, i32 0
  %15 = load %class.SkData*, %class.SkData** %14, align 8
  %16 = icmp eq %class.SkData* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %18

18:                                               ; preds = %13, %17
  %19 = load i8, i8* %3, align 8, !range !14
  %20 = icmp eq i8 %19, 0
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkPaint* @_ZNK13SkPictureData13optionalPaintEP12SkReadBuffer(%class.SkPictureData* nocapture readonly, %class.SkReadBuffer*) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #12
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %2
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %5
  %8 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %9, 1
  %11 = trunc i64 %10 to i32
  %12 = and i32 %11, 2147483647
  %13 = icmp sgt i32 %3, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %7, %5
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %15

15:                                               ; preds = %7, %14
  %16 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %17 = load i8, i8* %16, align 8, !range !14
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = add nsw i32 %3, -1
  %21 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 0
  %22 = load %class.SkPaint*, %class.SkPaint** %21, align 8
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %22, i64 %23
  br label %25

25:                                               ; preds = %19, %15, %2
  %26 = phi %class.SkPaint* [ null, %2 ], [ %24, %19 ], [ null, %15 ]
  ret %class.SkPaint* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* nocapture readonly, %class.SkReadBuffer*) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #12
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %26, label %5

5:                                                ; preds = %2
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %5
  %8 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %9, 1
  %11 = trunc i64 %10 to i32
  %12 = and i32 %11, 2147483647
  %13 = icmp sgt i32 %3, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %7, %5
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  br label %15

15:                                               ; preds = %14, %7
  %16 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %17 = load i8, i8* %16, align 8, !range !14
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %15
  %20 = add nsw i32 %3, -1
  %21 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 0
  %22 = load %class.SkPaint*, %class.SkPaint** %21, align 8
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %22, i64 %23
  %25 = icmp eq %class.SkPaint* %24, null
  br i1 %25, label %26, label %41

26:                                               ; preds = %2, %15, %19
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #12
  %27 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %28 = load i8, i8* %27, align 8, !range !14
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %41, label %30

30:                                               ; preds = %26
  %31 = load atomic i8, i8* bitcast (i64* @_ZGVZNK13SkPictureData13requiredPaintEP12SkReadBufferE4stub to i8*) acquire, align 8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %39, !prof !15

33:                                               ; preds = %30
  %34 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK13SkPictureData13requiredPaintEP12SkReadBufferE4stub) #12
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = tail call i8* @_Znwm(i64 72) #14
  %38 = bitcast i8* %37 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %38) #12
  store i8* %37, i8** bitcast (%class.SkPaint** @_ZZNK13SkPictureData13requiredPaintEP12SkReadBufferE4stub to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK13SkPictureData13requiredPaintEP12SkReadBufferE4stub) #12
  br label %39

39:                                               ; preds = %33, %36, %30
  %40 = load %class.SkPaint*, %class.SkPaint** @_ZZNK13SkPictureData13requiredPaintEP12SkReadBufferE4stub, align 8
  br label %41

41:                                               ; preds = %19, %26, %39
  %42 = phi %class.SkPaint* [ %40, %39 ], [ null, %26 ], [ %24, %19 ]
  ret %class.SkPaint* %42
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #1

declare void @_ZN6SkData9MakeEmptyEv(%class.sk_sp.19* sret) local_unnamed_addr #1

declare void @_ZNK10SkWriter3214snapshotAsDataEv(%class.sk_sp.19* sret, %class.SkWriter32*) local_unnamed_addr #1

declare i32 @_ZN9SkWStream16SizeOfPackedUIntEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #12
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkPtrSet6incPtrEPv(%class.SkPtrSet*, i8*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkPtrSet6decPtrEPv(%class.SkPtrSet*, i8*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkPtrSetD0Ev(%class.SkPtrSet*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPtrSet, %class.SkPtrSet* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8SkPtrSet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPtrSet, %class.SkPtrSet* %0, i64 0, i32 1
  %4 = bitcast %class.SkTDArray.88* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @_Z7sk_freePv(i8* %5) #12
  %6 = bitcast %class.SkPtrSet* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkFactorySetD0Ev(%class.SkFactorySet*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkFactorySet, %class.SkFactorySet* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8SkPtrSet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkFactorySet, %class.SkFactorySet* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %class.SkTDArray.88* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @_Z7sk_freePv(i8* %5) #12
  %6 = bitcast %class.SkFactorySet* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZNK13SkPictureData9serializeEP9SkWStreamRK13SkSerialProcsP11SkRefCntSetbEN7DevNullD0Ev(%struct.DevNull*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %struct.DevNull, %struct.DevNull* %0, i64 0, i32 0
  tail call void @_ZN9SkWStreamD2Ev(%class.SkWStream* %2) #12
  %3 = bitcast %struct.DevNull* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i1 @_ZZNK13SkPictureData9serializeEP9SkWStreamRK13SkSerialProcsP11SkRefCntSetbEN7DevNull5writeEPKvm(%struct.DevNull* nocapture, i8* nocapture readnone, i64) unnamed_addr #9 align 2 {
  %4 = getelementptr inbounds %struct.DevNull, %struct.DevNull* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %2
  store i64 %6, i64* %4, align 8
  ret i1 true
}

declare void @_ZN9SkWStream5flushEv(%class.SkWStream*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZZNK13SkPictureData9serializeEP9SkWStreamRK13SkSerialProcsP11SkRefCntSetbENK7DevNull12bytesWrittenEv(%struct.DevNull* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %struct.DevNull, %struct.DevNull* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

declare zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream*, i32*) local_unnamed_addr #1

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #1

declare void @_ZN12SkReadBuffer9setMemoryEPKvm(%class.SkReadBuffer*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare i32 @_ZN11SkPaintPriv9UnflattenEP7SkPaintR12SkReadBufferP6SkFont(%class.SkPaint*, %class.SkReadBuffer* dereferenceable(136), %class.SkFont*) local_unnamed_addr #1

declare void @_ZN12SkReadBuffer9readImageEv(%class.sk_sp.54* sret, %class.SkReadBuffer*) local_unnamed_addr #1

declare %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #4

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI7SkPaintLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 72) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = mul nuw nsw i64 %51, 72
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %class.SkPaint*
  %55 = load %class.SkPaint*, %class.SkPaint** %49, align 8
  %56 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %55, i64 %51
  tail call void @_ZN7SkPaintC1EOS_(%class.SkPaint* %54, %class.SkPaint* dereferenceable(72) %56) #12
  %57 = load %class.SkPaint*, %class.SkPaint** %49, align 8
  %58 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %57, i64 %51
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %58) #12
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #12
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare void @_ZN7SkPaintC1EOS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #1

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI6SkPathLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.5*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.5, %class.SkTArray.5* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 16) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.5, %class.SkTArray.5* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 4
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %class.SkPath*
  %55 = load %class.SkPath*, %class.SkPath** %49, align 8
  %56 = getelementptr inbounds %class.SkPath, %class.SkPath* %55, i64 %51
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %54, %class.SkPath* dereferenceable(16) %56) #12
  %57 = load %class.SkPath*, %class.SkPath** %49, align 8
  %58 = getelementptr inbounds %class.SkPath, %class.SkPath* %57, i64 %51
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %58) #12
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.5* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #12
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK8SkPtrSet11copyToArrayEPPv(%class.SkPtrSet*, i8**) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5sk_spIK9SkPictureELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.25*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.25, %class.SkTArray.25* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %92

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %92, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %80, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.25, %class.SkTArray.25* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %74, %48
  %51 = phi i64 [ 0, %48 ], [ %75, %74 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.sk_sp.26*, %class.sk_sp.26** %49, align 8
  %55 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %54, i64 %51
  %56 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %55, i64 0, i32 0
  %57 = bitcast %class.sk_sp.26* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.SkPicture* null, %class.SkPicture** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.sk_sp.26*, %class.sk_sp.26** %49, align 8
  %61 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %60, i64 %51, i32 0
  %62 = load %class.SkPicture*, %class.SkPicture** %61, align 8
  %63 = icmp eq %class.SkPicture* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %62, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %class.SkPicture* %62 to %class.SkRefCntBase*
  %70 = bitcast %class.SkPicture* %62 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8
  tail call void %73(%class.SkRefCntBase* nonnull %69) #12
  br label %74

74:                                               ; preds = %68, %64, %50
  %75 = add nuw nsw i64 %51, 1
  %76 = load i64, i64* %4, align 8
  %77 = lshr i64 %76, 1
  %78 = and i64 %77, 2147483647
  %79 = icmp ult i64 %75, %78
  br i1 %79, label %50, label %80

80:                                               ; preds = %74, %35
  %81 = phi i64 [ %45, %35 ], [ %76, %74 ]
  %82 = and i64 %81, 1
  %83 = icmp eq i64 %82, 0
  %84 = bitcast %class.SkTArray.25* %0 to i8**
  br i1 %83, label %88, label %85

85:                                               ; preds = %80
  %86 = load i8*, i8** %84, align 8
  tail call void @_Z7sk_freePv(i8* %86) #12
  %87 = load i64, i64* %4, align 8
  br label %88

88:                                               ; preds = %80, %85
  %89 = phi i64 [ %87, %85 ], [ %81, %80 ]
  store i8* %44, i8** %84, align 8
  %90 = and i64 %89, -4294967298
  %91 = or i64 %90, 1
  store i64 %91, i64* %4, align 8
  br label %92

92:                                               ; preds = %88, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5sk_spIK10SkTextBlobELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.29*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.29, %class.SkTArray.29* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %88

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %88, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %76, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.29, %class.SkTArray.29* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %70, %48
  %51 = phi i64 [ 0, %48 ], [ %71, %70 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.sk_sp.30*, %class.sk_sp.30** %49, align 8
  %55 = getelementptr inbounds %class.sk_sp.30, %class.sk_sp.30* %54, i64 %51
  %56 = getelementptr inbounds %class.sk_sp.30, %class.sk_sp.30* %55, i64 0, i32 0
  %57 = bitcast %class.sk_sp.30* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.sk_sp.30*, %class.sk_sp.30** %49, align 8
  %61 = getelementptr inbounds %class.sk_sp.30, %class.sk_sp.30* %60, i64 %51, i32 0
  %62 = load %class.SkTextBlob*, %class.SkTextBlob** %61, align 8
  %63 = icmp eq %class.SkTextBlob* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  tail call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %62) #12
  %69 = bitcast %class.SkTextBlob* %62 to i8*
  tail call void @_ZN10SkTextBlobdlEPv(i8* nonnull %69) #12
  br label %70

70:                                               ; preds = %68, %64, %50
  %71 = add nuw nsw i64 %51, 1
  %72 = load i64, i64* %4, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %50, label %76

76:                                               ; preds = %70, %35
  %77 = phi i64 [ %45, %35 ], [ %72, %70 ]
  %78 = and i64 %77, 1
  %79 = icmp eq i64 %78, 0
  %80 = bitcast %class.SkTArray.29* %0 to i8**
  br i1 %79, label %84, label %81

81:                                               ; preds = %76
  %82 = load i8*, i8** %80, align 8
  tail call void @_Z7sk_freePv(i8* %82) #12
  %83 = load i64, i64* %4, align 8
  br label %84

84:                                               ; preds = %76, %81
  %85 = phi i64 [ %83, %81 ], [ %77, %76 ]
  store i8* %44, i8** %80, align 8
  %86 = and i64 %85, -4294967298
  %87 = or i64 %86, 1
  store i64 %87, i64* %4, align 8
  br label %88

88:                                               ; preds = %84, %32, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobdlEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5sk_spIK10SkVerticesELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.37*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.37, %class.SkTArray.37* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %88

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %88, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %76, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.37, %class.SkTArray.37* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %70, %48
  %51 = phi i64 [ 0, %48 ], [ %71, %70 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.sk_sp.38*, %class.sk_sp.38** %49, align 8
  %55 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %54, i64 %51
  %56 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %55, i64 0, i32 0
  %57 = bitcast %class.sk_sp.38* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.SkVertices* null, %class.SkVertices** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.sk_sp.38*, %class.sk_sp.38** %49, align 8
  %61 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %60, i64 %51, i32 0
  %62 = load %class.SkVertices*, %class.SkVertices** %61, align 8
  %63 = icmp eq %class.SkVertices* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = bitcast %class.SkVertices* %62 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %69) #12
  br label %70

70:                                               ; preds = %68, %64, %50
  %71 = add nuw nsw i64 %51, 1
  %72 = load i64, i64* %4, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %50, label %76

76:                                               ; preds = %70, %35
  %77 = phi i64 [ %45, %35 ], [ %72, %70 ]
  %78 = and i64 %77, 1
  %79 = icmp eq i64 %78, 0
  %80 = bitcast %class.SkTArray.37* %0 to i8**
  br i1 %79, label %84, label %81

81:                                               ; preds = %76
  %82 = load i8*, i8** %80, align 8
  tail call void @_Z7sk_freePv(i8* %82) #12
  %83 = load i64, i64* %4, align 8
  br label %84

84:                                               ; preds = %76, %81
  %85 = phi i64 [ %83, %81 ], [ %77, %76 ]
  store i8* %44, i8** %80, align 8
  %86 = and i64 %85, -4294967298
  %87 = or i64 %86, 1
  store i64 %87, i64* %4, align 8
  br label %88

88:                                               ; preds = %84, %32, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10SkVerticesdlEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5sk_spIK7SkImageELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.40*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.40, %class.SkTArray.40* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %92

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %92, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %80, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.40, %class.SkTArray.40* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %74, %48
  %51 = phi i64 [ 0, %48 ], [ %75, %74 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.sk_sp.41*, %class.sk_sp.41** %49, align 8
  %55 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %54, i64 %51
  %56 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %55, i64 0, i32 0
  %57 = bitcast %class.sk_sp.41* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.SkImage* null, %class.SkImage** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.sk_sp.41*, %class.sk_sp.41** %49, align 8
  %61 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %60, i64 %51, i32 0
  %62 = load %class.SkImage*, %class.SkImage** %61, align 8
  %63 = icmp eq %class.SkImage* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %class.SkImage, %class.SkImage* %62, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %class.SkImage* %62 to %class.SkRefCntBase*
  %70 = bitcast %class.SkImage* %62 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8
  tail call void %73(%class.SkRefCntBase* nonnull %69) #12
  br label %74

74:                                               ; preds = %68, %64, %50
  %75 = add nuw nsw i64 %51, 1
  %76 = load i64, i64* %4, align 8
  %77 = lshr i64 %76, 1
  %78 = and i64 %77, 2147483647
  %79 = icmp ult i64 %75, %78
  br i1 %79, label %50, label %80

80:                                               ; preds = %74, %35
  %81 = phi i64 [ %45, %35 ], [ %76, %74 ]
  %82 = and i64 %81, 1
  %83 = icmp eq i64 %82, 0
  %84 = bitcast %class.SkTArray.40* %0 to i8**
  br i1 %83, label %88, label %85

85:                                               ; preds = %80
  %86 = load i8*, i8** %84, align 8
  tail call void @_Z7sk_freePv(i8* %86) #12
  %87 = load i64, i64* %4, align 8
  br label %88

88:                                               ; preds = %80, %85
  %89 = phi i64 [ %87, %85 ], [ %81, %80 ]
  store i8* %44, i8** %84, align 8
  %90 = and i64 %89, -4294967298
  %91 = or i64 %90, 1
  store i64 %91, i64* %4, align 8
  br label %92

92:                                               ; preds = %88, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5sk_spI10SkDrawableELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.27*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.27, %class.SkTArray.27* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %92

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %92, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %80, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.27, %class.SkTArray.27* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %74, %48
  %51 = phi i64 [ 0, %48 ], [ %75, %74 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.sk_sp.28*, %class.sk_sp.28** %49, align 8
  %55 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %54, i64 %51
  %56 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %55, i64 0, i32 0
  %57 = bitcast %class.sk_sp.28* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.SkDrawable* null, %class.SkDrawable** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.sk_sp.28*, %class.sk_sp.28** %49, align 8
  %61 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %60, i64 %51, i32 0
  %62 = load %class.SkDrawable*, %class.SkDrawable** %61, align 8
  %63 = icmp eq %class.SkDrawable* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %class.SkDrawable, %class.SkDrawable* %62, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %class.SkDrawable* %62 to %class.SkRefCntBase*
  %70 = bitcast %class.SkDrawable* %62 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8
  tail call void %73(%class.SkRefCntBase* nonnull %69) #12
  br label %74

74:                                               ; preds = %68, %64, %50
  %75 = add nuw nsw i64 %51, 1
  %76 = load i64, i64* %4, align 8
  %77 = lshr i64 %76, 1
  %78 = and i64 %77, 2147483647
  %79 = icmp ult i64 %75, %78
  br i1 %79, label %50, label %80

80:                                               ; preds = %74, %35
  %81 = phi i64 [ %45, %35 ], [ %76, %74 ]
  %82 = and i64 %81, 1
  %83 = icmp eq i64 %82, 0
  %84 = bitcast %class.SkTArray.27* %0 to i8**
  br i1 %83, label %88, label %85

85:                                               ; preds = %80
  %86 = load i8*, i8** %84, align 8
  tail call void @_Z7sk_freePv(i8* %86) #12
  %87 = load i64, i64* %4, align 8
  br label %88

88:                                               ; preds = %80, %85
  %89 = phi i64 [ %87, %85 ], [ %81, %80 ]
  store i8* %44, i8** %84, align 8
  %90 = and i64 %89, -4294967298
  %91 = or i64 %90, 1
  store i64 %91, i64* %4, align 8
  br label %92

92:                                               ; preds = %88, %32, %21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPictureDataD2Ev(%class.SkPictureData*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %class.SkFactoryPlayback*, %class.SkFactoryPlayback** %2, align 8
  store %class.SkFactoryPlayback* null, %class.SkFactoryPlayback** %2, align 8
  %4 = icmp eq %class.SkFactoryPlayback* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkFactoryPlayback, %class.SkFactoryPlayback* %3, i64 0, i32 1
  %7 = load void (%class.sk_sp.55*, %class.SkReadBuffer*)**, void (%class.sk_sp.55*, %class.SkReadBuffer*)*** %6, align 8
  %8 = icmp eq void (%class.sk_sp.55*, %class.SkReadBuffer*)** %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast void (%class.sk_sp.55*, %class.SkReadBuffer*)** %7 to i8*
  tail call void @_ZdaPv(i8* %10) #14
  br label %11

11:                                               ; preds = %9, %5
  %12 = bitcast %class.SkFactoryPlayback* %3 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  br label %13

13:                                               ; preds = %1, %11
  %14 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.sk_sp.42*, %class.sk_sp.42** %14, align 8
  store %class.sk_sp.42* null, %class.sk_sp.42** %14, align 8
  %16 = icmp eq %class.sk_sp.42* %15, null
  br i1 %16, label %44, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.sk_sp.42, %class.sk_sp.42* %15, i64 -1
  %19 = bitcast %class.sk_sp.42* %18 to i8*
  %20 = bitcast %class.sk_sp.42* %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %43, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.sk_sp.42, %class.sk_sp.42* %15, i64 %21
  br label %25

25:                                               ; preds = %41, %23
  %26 = phi %class.sk_sp.42* [ %27, %41 ], [ %24, %23 ]
  %27 = getelementptr inbounds %class.sk_sp.42, %class.sk_sp.42* %26, i64 -1
  %28 = getelementptr inbounds %class.sk_sp.42, %class.sk_sp.42* %27, i64 0, i32 0
  %29 = load %class.SkTypeface*, %class.SkTypeface** %28, align 8
  %30 = icmp eq %class.SkTypeface* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkTypeface* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkTypeface* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  tail call void %40(%class.SkRefCntBase* nonnull %36) #12
  br label %41

41:                                               ; preds = %35, %31, %25
  %42 = icmp eq %class.sk_sp.42* %27, %15
  br i1 %42, label %43, label %25

43:                                               ; preds = %41, %17
  tail call void @_ZdaPv(i8* %19) #14
  br label %44

44:                                               ; preds = %13, %43
  %45 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 9
  %46 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 9, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 4294967294
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %class.SkTArray.40, %class.SkTArray.40* %45, i64 0, i32 0
  br label %56

52:                                               ; preds = %72, %44
  %53 = phi i64 [ %47, %44 ], [ %74, %72 ]
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %81, label %78

56:                                               ; preds = %72, %50
  %57 = phi i64 [ 0, %50 ], [ %73, %72 ]
  %58 = load %class.sk_sp.41*, %class.sk_sp.41** %51, align 8
  %59 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %58, i64 %57, i32 0
  %60 = load %class.SkImage*, %class.SkImage** %59, align 8
  %61 = icmp eq %class.SkImage* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %class.SkImage, %class.SkImage* %60, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %class.SkImage* %60 to %class.SkRefCntBase*
  %68 = bitcast %class.SkImage* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  tail call void %71(%class.SkRefCntBase* nonnull %67) #12
  br label %72

72:                                               ; preds = %66, %62, %56
  %73 = add nuw nsw i64 %57, 1
  %74 = load i64, i64* %46, align 8
  %75 = lshr i64 %74, 1
  %76 = and i64 %75, 2147483647
  %77 = icmp ult i64 %73, %76
  br i1 %77, label %56, label %52

78:                                               ; preds = %52
  %79 = bitcast %class.SkTArray.40* %45 to i8**
  %80 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %80) #12
  br label %81

81:                                               ; preds = %52, %78
  %82 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 8
  %83 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 8, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 4294967294
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %class.SkTArray.37, %class.SkTArray.37* %82, i64 0, i32 0
  br label %93

89:                                               ; preds = %105, %81
  %90 = phi i64 [ %84, %81 ], [ %107, %105 ]
  %91 = and i64 %90, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %114, label %111

93:                                               ; preds = %105, %87
  %94 = phi i64 [ 0, %87 ], [ %106, %105 ]
  %95 = load %class.sk_sp.38*, %class.sk_sp.38** %88, align 8
  %96 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %95, i64 %94, i32 0
  %97 = load %class.SkVertices*, %class.SkVertices** %96, align 8
  %98 = icmp eq %class.SkVertices* %97, null
  br i1 %98, label %105, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = bitcast %class.SkVertices* %97 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %104) #12
  br label %105

105:                                              ; preds = %103, %99, %93
  %106 = add nuw nsw i64 %94, 1
  %107 = load i64, i64* %83, align 8
  %108 = lshr i64 %107, 1
  %109 = and i64 %108, 2147483647
  %110 = icmp ult i64 %106, %109
  br i1 %110, label %93, label %89

111:                                              ; preds = %89
  %112 = bitcast %class.SkTArray.37* %82 to i8**
  %113 = load i8*, i8** %112, align 8
  tail call void @_Z7sk_freePv(i8* %113) #12
  br label %114

114:                                              ; preds = %89, %111
  %115 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 7
  %116 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 7, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = and i64 %117, 4294967294
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %class.SkTArray.29, %class.SkTArray.29* %115, i64 0, i32 0
  br label %126

122:                                              ; preds = %138, %114
  %123 = phi i64 [ %117, %114 ], [ %140, %138 ]
  %124 = and i64 %123, 1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %147, label %144

126:                                              ; preds = %138, %120
  %127 = phi i64 [ 0, %120 ], [ %139, %138 ]
  %128 = load %class.sk_sp.30*, %class.sk_sp.30** %121, align 8
  %129 = getelementptr inbounds %class.sk_sp.30, %class.sk_sp.30* %128, i64 %127, i32 0
  %130 = load %class.SkTextBlob*, %class.SkTextBlob** %129, align 8
  %131 = icmp eq %class.SkTextBlob* %130, null
  br i1 %131, label %138, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 -1 acq_rel
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %138

136:                                              ; preds = %132
  tail call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %130) #12
  %137 = bitcast %class.SkTextBlob* %130 to i8*
  tail call void @_ZN10SkTextBlobdlEPv(i8* nonnull %137) #12
  br label %138

138:                                              ; preds = %136, %132, %126
  %139 = add nuw nsw i64 %127, 1
  %140 = load i64, i64* %116, align 8
  %141 = lshr i64 %140, 1
  %142 = and i64 %141, 2147483647
  %143 = icmp ult i64 %139, %142
  br i1 %143, label %126, label %122

144:                                              ; preds = %122
  %145 = bitcast %class.SkTArray.29* %115 to i8**
  %146 = load i8*, i8** %145, align 8
  tail call void @_Z7sk_freePv(i8* %146) #12
  br label %147

147:                                              ; preds = %122, %144
  %148 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 6
  %149 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 6, i32 1
  %150 = load i64, i64* %149, align 8
  %151 = and i64 %150, 4294967294
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %class.SkTArray.27, %class.SkTArray.27* %148, i64 0, i32 0
  br label %159

155:                                              ; preds = %175, %147
  %156 = phi i64 [ %150, %147 ], [ %177, %175 ]
  %157 = and i64 %156, 1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %184, label %181

159:                                              ; preds = %175, %153
  %160 = phi i64 [ 0, %153 ], [ %176, %175 ]
  %161 = load %class.sk_sp.28*, %class.sk_sp.28** %154, align 8
  %162 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %161, i64 %160, i32 0
  %163 = load %class.SkDrawable*, %class.SkDrawable** %162, align 8
  %164 = icmp eq %class.SkDrawable* %163, null
  br i1 %164, label %175, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %class.SkDrawable, %class.SkDrawable* %163, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = atomicrmw add i32* %166, i32 -1 acq_rel
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %175

169:                                              ; preds = %165
  %170 = bitcast %class.SkDrawable* %163 to %class.SkRefCntBase*
  %171 = bitcast %class.SkDrawable* %163 to void (%class.SkRefCntBase*)***
  %172 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %171, align 8
  %173 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %172, i64 2
  %174 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %173, align 8
  tail call void %174(%class.SkRefCntBase* nonnull %170) #12
  br label %175

175:                                              ; preds = %169, %165, %159
  %176 = add nuw nsw i64 %160, 1
  %177 = load i64, i64* %149, align 8
  %178 = lshr i64 %177, 1
  %179 = and i64 %178, 2147483647
  %180 = icmp ult i64 %176, %179
  br i1 %180, label %159, label %155

181:                                              ; preds = %155
  %182 = bitcast %class.SkTArray.27* %148 to i8**
  %183 = load i8*, i8** %182, align 8
  tail call void @_Z7sk_freePv(i8* %183) #12
  br label %184

184:                                              ; preds = %155, %181
  %185 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5
  %186 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = and i64 %187, 4294967294
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %184
  %191 = getelementptr inbounds %class.SkTArray.25, %class.SkTArray.25* %185, i64 0, i32 0
  br label %196

192:                                              ; preds = %212, %184
  %193 = phi i64 [ %187, %184 ], [ %214, %212 ]
  %194 = and i64 %193, 1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %221, label %218

196:                                              ; preds = %212, %190
  %197 = phi i64 [ 0, %190 ], [ %213, %212 ]
  %198 = load %class.sk_sp.26*, %class.sk_sp.26** %191, align 8
  %199 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %198, i64 %197, i32 0
  %200 = load %class.SkPicture*, %class.SkPicture** %199, align 8
  %201 = icmp eq %class.SkPicture* %200, null
  br i1 %201, label %212, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %200, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = atomicrmw add i32* %203, i32 -1 acq_rel
  %205 = icmp eq i32 %204, 1
  br i1 %205, label %206, label %212

206:                                              ; preds = %202
  %207 = bitcast %class.SkPicture* %200 to %class.SkRefCntBase*
  %208 = bitcast %class.SkPicture* %200 to void (%class.SkRefCntBase*)***
  %209 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %208, align 8
  %210 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %209, i64 2
  %211 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %210, align 8
  tail call void %211(%class.SkRefCntBase* nonnull %207) #12
  br label %212

212:                                              ; preds = %206, %202, %196
  %213 = add nuw nsw i64 %197, 1
  %214 = load i64, i64* %186, align 8
  %215 = lshr i64 %214, 1
  %216 = and i64 %215, 2147483647
  %217 = icmp ult i64 %213, %216
  br i1 %217, label %196, label %192

218:                                              ; preds = %192
  %219 = bitcast %class.SkTArray.25* %185 to i8**
  %220 = load i8*, i8** %219, align 8
  tail call void @_Z7sk_freePv(i8* %220) #12
  br label %221

221:                                              ; preds = %192, %218
  %222 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 4
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %222) #12
  %223 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 3
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %223) #12
  %224 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 2, i32 0
  %225 = load %class.SkData*, %class.SkData** %224, align 8
  %226 = icmp eq %class.SkData* %225, null
  br i1 %226, label %233, label %227

227:                                              ; preds = %221
  %228 = getelementptr inbounds %class.SkData, %class.SkData* %225, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = atomicrmw add i32* %228, i32 -1 acq_rel
  %230 = icmp eq i32 %229, 1
  br i1 %230, label %231, label %233

231:                                              ; preds = %227
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %225) #12
  %232 = bitcast %class.SkData* %225 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %232) #12
  br label %233

233:                                              ; preds = %221, %227, %231
  %234 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1
  %235 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1, i32 1
  %236 = load i64, i64* %235, align 8
  %237 = and i64 %236, 4294967294
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %241, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %class.SkTArray.5, %class.SkTArray.5* %234, i64 0, i32 0
  br label %245

241:                                              ; preds = %245, %233
  %242 = phi i64 [ %236, %233 ], [ %250, %245 ]
  %243 = and i64 %242, 1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %257, label %254

245:                                              ; preds = %245, %239
  %246 = phi i64 [ 0, %239 ], [ %249, %245 ]
  %247 = load %class.SkPath*, %class.SkPath** %240, align 8
  %248 = getelementptr inbounds %class.SkPath, %class.SkPath* %247, i64 %246
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %248) #12
  %249 = add nuw nsw i64 %246, 1
  %250 = load i64, i64* %235, align 8
  %251 = lshr i64 %250, 1
  %252 = and i64 %251, 2147483647
  %253 = icmp ult i64 %249, %252
  br i1 %253, label %245, label %241

254:                                              ; preds = %241
  %255 = bitcast %class.SkTArray.5* %234 to i8**
  %256 = load i8*, i8** %255, align 8
  tail call void @_Z7sk_freePv(i8* %256) #12
  br label %257

257:                                              ; preds = %241, %254
  %258 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 1
  %259 = load i64, i64* %258, align 8
  %260 = and i64 %259, 4294967294
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %264, label %262

262:                                              ; preds = %257
  %263 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 0
  br label %268

264:                                              ; preds = %268, %257
  %265 = phi i64 [ %259, %257 ], [ %273, %268 ]
  %266 = and i64 %265, 1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %280, label %277

268:                                              ; preds = %268, %262
  %269 = phi i64 [ 0, %262 ], [ %272, %268 ]
  %270 = load %class.SkPaint*, %class.SkPaint** %263, align 8
  %271 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %270, i64 %269
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %271) #12
  %272 = add nuw nsw i64 %269, 1
  %273 = load i64, i64* %258, align 8
  %274 = lshr i64 %273, 1
  %275 = and i64 %274, 2147483647
  %276 = icmp ult i64 %272, %275
  br i1 %276, label %268, label %264

277:                                              ; preds = %264
  %278 = bitcast %class.SkPictureData* %0 to i8**
  %279 = load i8*, i8** %278, align 8
  tail call void @_Z7sk_freePv(i8* %279) #12
  br label %280

280:                                              ; preds = %264, %277
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK15SkPictureRecord6opDataEv: argument 0"}
!4 = distinct !{!4, !"_ZNK15SkPictureRecord6opDataEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_Z9sk_ref_spI12SkFactorySetE5sk_spIT_EPS2_: argument 0"}
!7 = distinct !{!7, !"_Z9sk_ref_spI12SkFactorySetE5sk_spIT_EPS2_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZL18skip_typeface_procRK13SkSerialProcs: argument 0"}
!10 = distinct !{!10, !"_ZL18skip_typeface_procRK13SkSerialProcs"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_Z9sk_ref_spI11SkRefCntSetE5sk_spIT_EPS2_: argument 0"}
!13 = distinct !{!13, !"_Z9sk_ref_spI11SkRefCntSetE5sk_spIT_EPS2_"}
!14 = !{i8 0, i8 2}
!15 = !{!"branch_weights", i32 1, i32 1048575}
