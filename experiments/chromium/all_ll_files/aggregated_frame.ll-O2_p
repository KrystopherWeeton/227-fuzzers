; ModuleID = '../../components/viz/service/display/aggregated_frame.cc'
source_filename = "../../components/viz/service/display/aggregated_frame.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::AggregatedFrame" = type { %"class.absl::optional", %"class.std::__1::vector", i8, i8, i8, i8, %"class.std::__1::vector.8", %"class.std::__1::unique_ptr", %"class.std::__1::vector.18" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"*, %"class.std::__1::__compressed_pair.3" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.0" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.ui::LatencyInfo"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.10" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.gfx::Rect"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.viz::AggregatedRenderPass"* }
%"class.viz::AggregatedRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", i8, i8, [6 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.42", i8, i8, i8, i8, %"class.std::__1::vector.47", %"class.viz::QuadList", %"class.cc::ListContainer.61" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.28" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.37" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.8", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.31, i32, %"class.absl::optional.32", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.31 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.32" = type { %"class.absl::optional_internal::optional_data.33" }
%"class.absl::optional_internal::optional_data.33" = type { %"class.absl::optional_internal::optional_data_base.34" }
%"class.absl::optional_internal::optional_data_base.34" = type { %"class.absl::optional_internal::optional_data_dtor_base.35" }
%"class.absl::optional_internal::optional_data_dtor_base.35" = type { i8, %union.anon.36 }
%union.anon.36 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.42" = type { %"class.absl::optional_internal::optional_data.43" }
%"class.absl::optional_internal::optional_data.43" = type { %"class.absl::optional_internal::optional_data_base.44" }
%"class.absl::optional_internal::optional_data_base.44" = type { %"class.absl::optional_internal::optional_data_dtor_base.45" }
%"class.absl::optional_internal::optional_data_dtor_base.45" = type { i8, %union.anon.46 }
%union.anon.46 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"class.std::__1::unique_ptr.49"*, %"class.std::__1::unique_ptr.49"*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::unique_ptr.49" = type opaque
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::unique_ptr.49"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.61" = type { %"class.cc::ListContainerHelper" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::unique_ptr.20"* }

@_ZN3viz15AggregatedFrameC1Ev = hidden unnamed_addr alias void (%"class.viz::AggregatedFrame"*), void (%"class.viz::AggregatedFrame"*)* @_ZN3viz15AggregatedFrameC2Ev
@_ZN3viz15AggregatedFrameC1EOS0_ = hidden unnamed_addr alias void (%"class.viz::AggregatedFrame"*, %"class.viz::AggregatedFrame"*), void (%"class.viz::AggregatedFrame"*, %"class.viz::AggregatedFrame"*)* @_ZN3viz15AggregatedFrameC2EOS0_
@_ZN3viz15AggregatedFrameD1Ev = hidden unnamed_addr alias void (%"class.viz::AggregatedFrame"*), void (%"class.viz::AggregatedFrame"*)* @_ZN3viz15AggregatedFrameD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15AggregatedFrameC2Ev(%"class.viz::AggregatedFrame"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 6
  %5 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 28, i1 false)
  %6 = bitcast %"class.std::__1::vector.8"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15AggregatedFrameC2EOS0_(%"class.viz::AggregatedFrame"* nocapture, %"class.viz::AggregatedFrame"* nocapture dereferenceable(96)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::AggregatedFrame"* %1 to i64*
  %4 = bitcast %"class.viz::AggregatedFrame"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #4
  %9 = bitcast %"class.std::__1::vector"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %6 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"class.ui::LatencyInfo"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast %"class.ui::LatencyInfo"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.ui::LatencyInfo"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.ui::LatencyInfo"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #4
  %23 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 2
  %25 = bitcast i8* %24 to i32*
  %26 = bitcast i8* %23 to i32*
  %27 = load i32, i32* %25, align 8
  store i32 %27, i32* %26, align 8
  %28 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 6
  %29 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 6
  %30 = bitcast %"class.std::__1::vector.8"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #4
  %31 = bitcast %"class.std::__1::vector.8"* %29 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.8"* %28 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 6, i32 0, i32 1
  %35 = bitcast %"class.gfx::Rect"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 6, i32 0, i32 1
  %38 = bitcast %"class.gfx::Rect"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"class.gfx::Rect"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"class.gfx::Rect"** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = bitcast %"class.std::__1::vector.8"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #4
  %45 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 7
  %46 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 7
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr"* %46 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.gfx::DelegatedInkMetadata"* null, %"class.gfx::DelegatedInkMetadata"** %47, align 8
  %50 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 8
  %52 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 8
  %53 = bitcast %"class.std::__1::vector.18"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #4
  %54 = bitcast %"class.std::__1::vector.18"* %52 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::vector.18"* %51 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 8, i32 0, i32 1
  %58 = bitcast %"class.std::__1::unique_ptr.20"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 8, i32 0, i32 1
  %61 = bitcast %"class.std::__1::unique_ptr.20"** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast %"class.std::__1::unique_ptr.20"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.20"** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = bitcast %"class.std::__1::vector.18"* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15AggregatedFrameD2Ev(%"class.viz::AggregatedFrame"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 8
  %3 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.20"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.20"* %4 to i8*
  %8 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 8, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.20"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.std::__1::unique_ptr.20"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %14, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %14, align 8
  %16 = icmp eq %"class.viz::AggregatedRenderPass"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  tail call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %15) #4
  %18 = bitcast %"class.viz::AggregatedRenderPass"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #5
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr.20"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.18"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.20"* %4, %"class.std::__1::unique_ptr.20"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #5
  br label %26

26:                                               ; preds = %1, %24
  %27 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %28 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %27, align 8
  store %"class.gfx::DelegatedInkMetadata"* null, %"class.gfx::DelegatedInkMetadata"** %27, align 8
  %29 = icmp eq %"class.gfx::DelegatedInkMetadata"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.gfx::DelegatedInkMetadata"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #5
  br label %32

32:                                               ; preds = %26, %30
  %33 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 6, i32 0, i32 0
  %34 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %33, align 8
  %35 = icmp eq %"class.gfx::Rect"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = ptrtoint %"class.gfx::Rect"* %34 to i64
  %38 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 6, i32 0, i32 1
  %39 = bitcast %"class.gfx::Rect"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.gfx::Rect"* %34 to i8*
  tail call void @_ZdlPv(i8* %40) #5
  br label %41

41:                                               ; preds = %32, %36
  %42 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %43, align 8
  %45 = icmp eq %"class.ui::LatencyInfo"* %44, null
  br i1 %45, label %60, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.ui::LatencyInfo"* %44 to i8*
  %48 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 1, i32 0, i32 1
  %49 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %48, align 8
  %50 = icmp eq %"class.ui::LatencyInfo"* %49, %44
  br i1 %50, label %58, label %51

51:                                               ; preds = %46, %51
  %52 = phi %"class.ui::LatencyInfo"* [ %53, %51 ], [ %49, %46 ]
  %53 = getelementptr inbounds %"class.ui::LatencyInfo", %"class.ui::LatencyInfo"* %52, i64 -1
  tail call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %53) #4
  %54 = icmp eq %"class.ui::LatencyInfo"* %53, %44
  br i1 %54, label %55, label %51

55:                                               ; preds = %51
  %56 = bitcast %"class.std::__1::vector"* %42 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %46
  %59 = phi i8* [ %57, %55 ], [ %47, %46 ]
  store %"class.ui::LatencyInfo"* %44, %"class.ui::LatencyInfo"** %48, align 8
  tail call void @_ZdlPv(i8* %59) #5
  br label %60

60:                                               ; preds = %41, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(96) %"class.viz::AggregatedFrame"* @_ZN3viz15AggregatedFrameaSEOS0_(%"class.viz::AggregatedFrame"* returned, %"class.viz::AggregatedFrame"* nocapture dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::AggregatedFrame"* %1 to i64*
  %4 = bitcast %"class.viz::AggregatedFrame"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %8, align 8
  %10 = icmp eq %"class.ui::LatencyInfo"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.ui::LatencyInfo"* %9 to i8*
  %13 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %13, align 8
  %15 = icmp eq %"class.ui::LatencyInfo"* %14, %9
  br i1 %15, label %23, label %16

16:                                               ; preds = %11, %16
  %17 = phi %"class.ui::LatencyInfo"* [ %18, %16 ], [ %14, %11 ]
  %18 = getelementptr inbounds %"class.ui::LatencyInfo", %"class.ui::LatencyInfo"* %17, i64 -1
  tail call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %18) #4
  %19 = icmp eq %"class.ui::LatencyInfo"* %18, %9
  br i1 %19, label %20, label %16

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::vector"* %6 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %11
  %24 = phi i8* [ %22, %20 ], [ %12, %11 ]
  store %"class.ui::LatencyInfo"* %9, %"class.ui::LatencyInfo"** %13, align 8
  tail call void @_ZdlPv(i8* %24) #5
  %25 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #4
  br label %26

26:                                               ; preds = %2, %23
  %27 = bitcast %"class.std::__1::vector"* %7 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector"* %6 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 1, i32 0, i32 1
  %31 = bitcast %"class.ui::LatencyInfo"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 1, i32 0, i32 1
  %34 = bitcast %"class.ui::LatencyInfo"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"class.ui::LatencyInfo"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"class.ui::LatencyInfo"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #4
  %41 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 2
  %42 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 2
  %43 = bitcast i8* %42 to i32*
  %44 = bitcast i8* %41 to i32*
  %45 = load i32, i32* %43, align 8
  store i32 %45, i32* %44, align 8
  %46 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 6
  %47 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 6
  %48 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %46, i64 0, i32 0, i32 0
  %49 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %48, align 8
  %50 = icmp eq %"class.gfx::Rect"* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %26
  %52 = ptrtoint %"class.gfx::Rect"* %49 to i64
  %53 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 6, i32 0, i32 1
  %54 = bitcast %"class.gfx::Rect"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"class.gfx::Rect"* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #5
  %56 = bitcast %"class.std::__1::vector.8"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #4
  br label %57

57:                                               ; preds = %26, %51
  %58 = bitcast %"class.std::__1::vector.8"* %47 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::vector.8"* %46 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 6, i32 0, i32 1
  %62 = bitcast %"class.gfx::Rect"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 6, i32 0, i32 1
  %65 = bitcast %"class.gfx::Rect"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast %"class.gfx::Rect"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast %"class.gfx::Rect"** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = bitcast %"class.std::__1::vector.8"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #4
  %72 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 7
  %73 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 7
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.std::__1::unique_ptr"* %73 to i64*
  %76 = load i64, i64* %75, align 8
  store %"class.gfx::DelegatedInkMetadata"* null, %"class.gfx::DelegatedInkMetadata"** %74, align 8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %72, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %77, align 8
  %79 = bitcast %"class.std::__1::unique_ptr"* %72 to i64*
  store i64 %76, i64* %79, align 8
  %80 = icmp eq %"class.gfx::DelegatedInkMetadata"* %78, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %57
  %82 = bitcast %"class.gfx::DelegatedInkMetadata"* %78 to i8*
  tail call void @_ZdlPv(i8* %82) #5
  br label %83

83:                                               ; preds = %57, %81
  %84 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 8
  %85 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 8
  %86 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %84, i64 0, i32 0, i32 0
  %87 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %86, align 8
  %88 = icmp eq %"class.std::__1::unique_ptr.20"* %87, null
  br i1 %88, label %110, label %89

89:                                               ; preds = %83
  %90 = bitcast %"class.std::__1::unique_ptr.20"* %87 to i8*
  %91 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 8, i32 0, i32 1
  %92 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %91, align 8
  %93 = icmp eq %"class.std::__1::unique_ptr.20"* %92, %87
  br i1 %93, label %107, label %94

94:                                               ; preds = %89, %102
  %95 = phi %"class.std::__1::unique_ptr.20"* [ %96, %102 ], [ %92, %89 ]
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %95, i64 -1
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %97, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %97, align 8
  %99 = icmp eq %"class.viz::AggregatedRenderPass"* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %94
  tail call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %98) #4
  %101 = bitcast %"class.viz::AggregatedRenderPass"* %98 to i8*
  tail call void @_ZdlPv(i8* %101) #5
  br label %102

102:                                              ; preds = %100, %94
  %103 = icmp eq %"class.std::__1::unique_ptr.20"* %96, %87
  br i1 %103, label %104, label %94

104:                                              ; preds = %102
  %105 = bitcast %"class.std::__1::vector.18"* %84 to i8**
  %106 = load i8*, i8** %105, align 8
  br label %107

107:                                              ; preds = %104, %89
  %108 = phi i8* [ %106, %104 ], [ %90, %89 ]
  store %"class.std::__1::unique_ptr.20"* %87, %"class.std::__1::unique_ptr.20"** %91, align 8
  tail call void @_ZdlPv(i8* %108) #5
  %109 = bitcast %"class.std::__1::vector.18"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 24, i1 false) #4
  br label %110

110:                                              ; preds = %83, %107
  %111 = bitcast %"class.std::__1::vector.18"* %85 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.std::__1::vector.18"* %84 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 8, i32 0, i32 1
  %115 = bitcast %"class.std::__1::unique_ptr.20"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 8, i32 0, i32 1
  %118 = bitcast %"class.std::__1::unique_ptr.20"** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %120 = bitcast %"class.std::__1::unique_ptr.20"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %123 = bitcast %"class.std::__1::unique_ptr.20"** %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = bitcast %"class.std::__1::vector.18"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #4
  ret %"class.viz::AggregatedFrame"* %0
}

; Function Attrs: nounwind
declare void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
