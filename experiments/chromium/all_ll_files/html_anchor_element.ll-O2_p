; ModuleID = '../../third_party/blink/renderer/core/html/html_anchor_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/html_anchor_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::Feature" = type { i8*, i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1481", i32, i32, %"class.blink::Persistent.1483" }
%"class.WTF::RefCounted.1481" = type { %"class.base::RefCounted.1482" }
%"class.base::RefCounted.1482" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1483" = type { %"class.blink::PersistentBase.1484" }
%"class.blink::PersistentBase.1484" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.918" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1487" }
%"class.blink::HeapHashMap.1487" = type { %"class.WTF::HashMap.1490" }
%"class.WTF::HashMap.1490" = type { %"class.WTF::HashTable.1491" }
%"class.WTF::HashTable.1491" = type <{ %"struct.WTF::KeyValuePair.1493"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1493" = type { %"class.blink::WeakMember.1494", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.918" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.539", i32, [4 x i8], %"class.std::__1::unique_ptr.677", %"class.std::__1::unique_ptr.677", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.688", %"class.std::__1::unique_ptr.694", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.706", %"class.std::__1::unique_ptr.712", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.178", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.542", %"class.std::__1::unique_ptr.548", %"class.std::__1::unique_ptr.554", %"class.std::__1::unique_ptr.560", %"class.std::__1::unique_ptr.566", %"class.std::__1::unique_ptr.572", %"class.std::__1::unique_ptr.583", %"class.std::__1::unique_ptr.590", %"class.std::__1::unique_ptr.590", %"class.std::__1::unique_ptr.597", %"class.std::__1::unique_ptr.604", %"class.std::__1::unique_ptr.611", %"class.std::__1::unique_ptr.611", %"class.std::__1::unique_ptr.618", %"class.std::__1::unique_ptr.625", %"class.std::__1::unique_ptr.632", %"class.std::__1::unique_ptr.657", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.575" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.575" = type { %"struct.std::__1::__atomic_base.576" }
%"struct.std::__1::__atomic_base.576" = type { %"struct.std::__1::__atomic_base.577" }
%"struct.std::__1::__atomic_base.577" = type { %"struct.std::__1::__cxx_atomic_impl.578" }
%"struct.std::__1::__cxx_atomic_impl.578" = type { %"struct.std::__1::__cxx_atomic_base_impl.579" }
%"struct.std::__1::__cxx_atomic_base_impl.579" = type { i64 }
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.blink::Worklist.586"* }
%"class.blink::Worklist.586" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.575" }
%"class.std::__1::unique_ptr.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.blink::Worklist.593"* }
%"class.blink::Worklist.593" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.575" }
%"class.std::__1::unique_ptr.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.blink::Worklist.600"* }
%"class.blink::Worklist.600" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.575" }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::Worklist.607"* }
%"class.blink::Worklist.607" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.575" }
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.blink::Worklist.614"* }
%"class.blink::Worklist.614" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.575" }
%"class.std::__1::unique_ptr.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.blink::Worklist.621"* }
%"class.blink::Worklist.621" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.575" }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::Worklist.628"* }
%"class.blink::Worklist.628" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.575" }
%"class.std::__1::unique_ptr.632" = type { %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.635", %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.648", %"class.std::__1::__compressed_pair.650", [4 x i8] }>
%"class.std::__1::unique_ptr.635" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637", %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { i64 }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { float }
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.660", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.669" }
%"class.WTF::Vector.669" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671" }
%"class.WTF::VectorBufferBase.671" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.685" }
%"class.WTF::VectorBuffer.685" = type { %"class.WTF::VectorBufferBase.686" }
%"class.WTF::VectorBufferBase.686" = type { %"struct.std::__1::pair.687"*, i32, i32 }
%"struct.std::__1::pair.687" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.700" }
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.586"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.593"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.600"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.607"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.614"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.3077", i64 }
%"class.std::__1::vector.3077" = type { %"class.std::__1::__vector_base.3078" }
%"class.std::__1::__vector_base.3078" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.3079" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.3079" = type { %"struct.std::__1::__compressed_pair_elem.3080" }
%"struct.std::__1::__compressed_pair_elem.3080" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.718 }
%class.scoped_refptr.718 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__cxx_atomic_impl.180" }
%"struct.std::__1::__cxx_atomic_impl.180" = type { %"struct.std::__1::__cxx_atomic_base_impl.181" }
%"struct.std::__1::__cxx_atomic_base_impl.181" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLAnchorElement" = type { %"class.blink::HTMLElement", %"class.blink::DOMURLUtils.base", i32, i64, %"class.blink::Member.19" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::Member.0", %"class.blink::Member.27", %"class.blink::Member.27", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::Document"* }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.34" }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.63", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.65, %"class.WTF::Vector.66", %"class.WTF::Vector.66", %"class.blink::Member", %"class.blink::Member.71", %"class.blink::HeapHashSet", %"class.blink::Member.25", %"class.WTF::HashSet.79", %"class.WTF::TextPosition", %"class.blink::Member.83", %"class.blink::HeapVector.85", %"class.blink::Member.92" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.65 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.73" }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.77" }
%"class.WTF::HashTable.77" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.79" = type { %"class.WTF::HashTable.80" }
%"class.WTF::HashTable.80" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.85" = type { %"class.WTF::Vector.88" }
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90" }
%"class.WTF::VectorBufferBase.90" = type { %"class.blink::Member.71"*, i32, i32 }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::DOMURLUtils.base" = type <{ %"class.blink::DOMURLUtilsReadOnly", i8 }>
%"class.blink::DOMURLUtilsReadOnly" = type { i32 (...)** }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::RelList"* }
%"class.blink::RelList" = type { %"class.blink::DOMTokenList.base", [7 x i8] }
%"class.blink::DOMTokenList.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.21", %"class.blink::QualifiedName", i8 }>
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.102", %"class.WTF::Vector.102", i8, i32, %"class.blink::Member.113", %"class.blink::Member.388", %"class.blink::Member.1452", %"class.blink::Member.1454", %"class.blink::Member.1456", %"class.blink::Member.1458", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1466", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1472", %"class.blink::Member.1474", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1477", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.1427", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.1508", double, double, i64, i64, %"class.blink::HeapHashSet.1510", %"class.blink::HeapHashSet.1517", i16, i8, %"class.blink::Member.1524", %"class.blink::Member.1526", %"class.blink::Member.1528", %"class.blink::Member.1530", %"class.blink::TextLinkColors", %"class.blink::Member.1532", i8, [7 x i8], %"class.blink::HeapHashMap.1534", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.1541", %"class.blink::Member.1546", %"class.blink::Member.1550", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1552", %"class.blink::HeapVector.1554", %"class.std::__1::unique_ptr.1562", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1568", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1581", %"class.WTF::Vector.1583", i8, i8, %"class.std::__1::unique_ptr.1588", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.1594", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1602", i8, i32, %"class.blink::Member.1604", %"class.blink::Member.1606", %"class.blink::Member.1608", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1610", %"class.WTF::HashMap.1612", %"class.blink::Member.1617", %"class.blink::Member.1619", %"class.blink::Member.1621", %"class.blink::Member.1623", %"class.blink::Member.25", %"class.blink::Member.25", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1625", i8, i32, %"class.blink::Member.1632", %"class.blink::Member.1634", i32, %"class.blink::Member.1636", %"class.blink::Member.1638", %"class.blink::Member.1640", %"class.std::__1::unique_ptr.1642", i64, %"class.std::__1::unique_ptr.1648", i32, i32, %"class.blink::Member.1659", %"class.blink::Member.1661", %"class.blink::Member.1663", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1665", %"class.WTF::Vector.1438", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1671", %"class.blink::Member.1678", %"class.std::__1::unique_ptr.1680", %"class.blink::Member.1686", i8, i8, %"class.WTF::String", %"class.blink::Member.1688", i8, [7 x i8], %"class.blink::HeapHashMap.1690", %"class.blink::HeapObserverSet.1697", %"class.blink::Member.1705", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1707", i32, i8, i8, %"class.blink::WeakMember.1709", %"class.blink::Member.1710" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.95" }
%"class.blink::HeapHashMap.95" = type { %"class.WTF::HashMap.98" }
%"class.WTF::HashMap.98" = type { %"class.WTF::HashTable.99" }
%"class.WTF::HashTable.99" = type <{ %"struct.WTF::KeyValuePair.101"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.101" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.102" = type { %"class.WTF::VectorBuffer.103" }
%"class.WTF::VectorBuffer.103" = type { %"class.WTF::VectorBufferBase.104" }
%"class.WTF::VectorBufferBase.104" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.106" }
%"struct.std::__1::atomic.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__cxx_atomic_impl.109" }
%"struct.std::__1::__cxx_atomic_impl.109" = type { %"struct.std::__1::__cxx_atomic_base_impl.110" }
%"struct.std::__1::__cxx_atomic_base_impl.110" = type { i32 }
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.478", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.486", %"class.blink::Member.25", %"class.blink::Member.488", i8, %"class.blink::Member.490", %"class.blink::Member.492", %"class.blink::Member.494", %"class.blink::Member.494", %"class.blink::Member.494", %"class.blink::Member.494", %"class.blink::Member.494", %"class.blink::Member.494", %"class.blink::Member.496", %"class.blink::Member.498", %"class.blink::Member.500", %"class.blink::Member.502", %"class.blink::Member.504", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.445", %"class.blink::Member.506", %class.scoped_refptr.508, %"class.blink::HeapHashSet.772", %"class.blink::Member.779", %"class.blink::HeapHashMap.792", %"class.std::__1::unique_ptr.799", %"class.blink::Member.811", %"class.blink::Member.1431", %"class.blink::Member.1433", %"class.blink::Member.1435", %"class.WTF::Vector.1438", %"class.util::TokenType", %"class.WTF::HashSet.1443", %"class.WTF::Deque.1447" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.130", %"class.blink::Member.132", %"class.blink::Member.134", %"class.blink::Member.136", i8, %"class.WTF::Vector.138" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.117" }
%"class.blink::HeapVector.117" = type { %"class.WTF::Vector.120" }
%"class.WTF::Vector.120" = type { %"class.WTF::VectorBuffer.121" }
%"class.WTF::VectorBuffer.121" = type { %"class.WTF::VectorBufferBase.122", [32 x i8] }
%"class.WTF::VectorBufferBase.122" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.123" }
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::HeapVector.125"* }
%"class.blink::HeapVector.125" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.128"* }
%"class.WTF::Vector.128" = type opaque
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2023", %"class.blink::Member.2025", %"class.blink::Member.2027", i8, i32, i8, i32, %"class.blink::Member.2029", %"class.blink::Member.132", %"class.blink::FrameLifecycle", %"class.blink::Member.130", %"class.blink::Member.130", %"class.blink::Member.130", %"class.blink::Member.130", %"class.blink::Member.130", %"class.blink::Member.130", %"class.blink::Member.817", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.2033", %"class.blink::Member.2043", i8, %"class.base::UnguessableToken", %"class.absl::optional.2045", %"class.absl::optional.1875", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.130", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2023" = type { %"class.blink::MemberBase.2024" }
%"class.blink::MemberBase.2024" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2952", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.130", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2978", %"class.blink::Member.2982", %"class.blink::Member.2984", %"class.blink::Member.2988", %"class.blink::Member.2990", %"class.blink::Member.2992", %"class.blink::Member.2994", %"class.blink::Member.2996", %"class.blink::HeapObserverSet.2998", %"class.blink::Member.3006", %"class.blink::Member.3008", %"class.blink::Member.3010", %"class.blink::Member.3012", %"class.blink::Member.3014", %"class.blink::Member.3016", %"class.blink::Member.3018", %"class.blink::Member.3020", %"class.blink::Member.3022", %"class.blink::Member.3024", %"class.blink::Member.3026", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.3051", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.3058", %"class.blink::Member.2023", %"class.blink::Member.2023", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.3065", %"class.std::__1::unique_ptr.3071", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2952" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2953" }
%"class.blink::HeapHashMap.2953" = type { %"class.WTF::HashMap.2956" }
%"class.WTF::HashMap.2956" = type { %"class.WTF::HashTable.2957" }
%"class.WTF::HashTable.2957" = type <{ %"struct.WTF::KeyValuePair.2959"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2959" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2960" }
%"class.std::__1::unique_ptr.2960" = type { %"class.std::__1::__compressed_pair.2961" }
%"class.std::__1::__compressed_pair.2961" = type { %"struct.std::__1::__compressed_pair_elem.2962" }
%"struct.std::__1::__compressed_pair_elem.2962" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2963", %"class.WTF::HashMap.2963", %"class.WTF::HashMap.2963", %"class.WTF::HashMap.2963", %"class.WTF::HashMap.2963", %"class.WTF::HashMap.2963", %"class.WTF::HashMap.2963", %"class.std::__1::unique_ptr.2968" }
%"class.WTF::HashMap.2963" = type { %"class.WTF::HashTable.2964" }
%"class.WTF::HashTable.2964" = type <{ %"struct.WTF::KeyValuePair.2967"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2967" = type opaque
%"class.std::__1::unique_ptr.2968" = type { %"class.std::__1::__compressed_pair.2969" }
%"class.std::__1::__compressed_pair.2969" = type { %"struct.std::__1::__compressed_pair_elem.2970" }
%"struct.std::__1::__compressed_pair_elem.2970" = type { %"class.WTF::Vector.2971"* }
%"class.WTF::Vector.2971" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2978" = type { %"class.blink::MemberBase.2979" }
%"class.blink::MemberBase.2979" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2023", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.2982" = type { %"class.blink::MemberBase.2983" }
%"class.blink::MemberBase.2983" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2984" = type { %"class.blink::MemberBase.2985" }
%"class.blink::MemberBase.2985" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1709", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::Member.2988" = type { %"class.blink::MemberBase.2989" }
%"class.blink::MemberBase.2989" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2990" = type { %"class.blink::MemberBase.2991" }
%"class.blink::MemberBase.2991" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2992" = type { %"class.blink::MemberBase.2993" }
%"class.blink::MemberBase.2993" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2994" = type { %"class.blink::MemberBase.2995" }
%"class.blink::MemberBase.2995" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2996" = type { %"class.blink::MemberBase.2997" }
%"class.blink::MemberBase.2997" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2998" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2999" }
%"class.blink::HeapHashSet.2999" = type { %"class.WTF::HashSet.3002" }
%"class.WTF::HashSet.3002" = type { %"class.WTF::HashTable.3003" }
%"class.WTF::HashTable.3003" = type <{ %"class.blink::WeakMember.3005"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3005" = type opaque
%"class.blink::Member.3006" = type { %"class.blink::MemberBase.3007" }
%"class.blink::MemberBase.3007" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.3008" = type { %"class.blink::MemberBase.3009" }
%"class.blink::MemberBase.3009" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.3010" = type { %"class.blink::MemberBase.3011" }
%"class.blink::MemberBase.3011" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.3012" = type { %"class.blink::MemberBase.3013" }
%"class.blink::MemberBase.3013" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.3014" = type { %"class.blink::MemberBase.3015" }
%"class.blink::MemberBase.3015" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.3016" = type { %"class.blink::MemberBase.3017" }
%"class.blink::MemberBase.3017" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.3018" = type { %"class.blink::MemberBase.3019" }
%"class.blink::MemberBase.3019" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.3020" = type { %"class.blink::MemberBase.3021" }
%"class.blink::MemberBase.3021" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.3022" = type { %"class.blink::MemberBase.3023" }
%"class.blink::MemberBase.3023" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.3024" = type { %"class.blink::MemberBase.3025" }
%"class.blink::MemberBase.3025" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.3026" = type { %"class.blink::MemberBase.3027" }
%"class.blink::MemberBase.3027" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.3028" }
%"class.WTF::Deque.3028" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.3031" }
%"class.WTF::VectorBuffer.3031" = type { %"class.WTF::VectorBufferBase.3032" }
%"class.WTF::VectorBufferBase.3032" = type { %"class.std::__1::unique_ptr.3033"*, i32, i32 }
%"class.std::__1::unique_ptr.3033" = type { %"class.std::__1::__compressed_pair.3034" }
%"class.std::__1::__compressed_pair.3034" = type { %"struct.std::__1::__compressed_pair_elem.3035" }
%"struct.std::__1::__compressed_pair_elem.3035" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.3039", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.3039" = type { %"class.std::__1::__bitset.3040" }
%"class.std::__1::__bitset.3040" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.3041" }
%"class.absl::optional.3041" = type { %"class.absl::optional_internal::optional_data.3042" }
%"class.absl::optional_internal::optional_data.3042" = type { %"class.absl::optional_internal::optional_data_base.3043" }
%"class.absl::optional_internal::optional_data_base.3043" = type { %"class.absl::optional_internal::optional_data_dtor_base.3044" }
%"class.absl::optional_internal::optional_data_dtor_base.3044" = type { i8, %union.anon.3045 }
%union.anon.3045 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.3046", i64, %"class.absl::optional.264", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.2724" }
%"class.blink::WebPrivatePtr.2724" = type { i8* }
%"class.absl::optional.3046" = type { %"class.absl::optional_internal::optional_data.3047" }
%"class.absl::optional_internal::optional_data.3047" = type { %"class.absl::optional_internal::optional_data_base.3048" }
%"class.absl::optional_internal::optional_data_base.3048" = type { %"class.absl::optional_internal::optional_data_dtor_base.3049" }
%"class.absl::optional_internal::optional_data_dtor_base.3049" = type { i8, %union.anon.3050 }
%union.anon.3050 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.264" = type { %"class.absl::optional_internal::optional_data.265" }
%"class.absl::optional_internal::optional_data.265" = type { %"class.absl::optional_internal::optional_data_base.266" }
%"class.absl::optional_internal::optional_data_base.266" = type { %"class.absl::optional_internal::optional_data_dtor_base.267" }
%"class.absl::optional_internal::optional_data_dtor_base.267" = type { i8, %union.anon.268 }
%union.anon.268 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr.3051" = type { %"class.std::__1::unique_ptr.3052" }
%"class.std::__1::unique_ptr.3052" = type { %"class.std::__1::__compressed_pair.3053" }
%"class.std::__1::__compressed_pair.3053" = type { %"struct.std::__1::__compressed_pair_elem.3054" }
%"struct.std::__1::__compressed_pair_elem.3054" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.3058" = type { %"class.WTF::HashSet.3061" }
%"class.WTF::HashSet.3061" = type { %"class.WTF::HashTable.3062" }
%"class.WTF::HashTable.3062" = type <{ %"class.blink::WeakMember.3064"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3064" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.1789" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.1789" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.219 }
%class.scoped_refptr.219 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.161", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.161" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.162" }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i8 }
%"class.std::__1::unique_ptr.3065" = type { %"class.std::__1::__compressed_pair.3066" }
%"class.std::__1::__compressed_pair.3066" = type { %"struct.std::__1::__compressed_pair_elem.3067" }
%"struct.std::__1::__compressed_pair_elem.3067" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3071" = type { %"class.std::__1::__compressed_pair.3072" }
%"class.std::__1::__compressed_pair.3072" = type { %"struct.std::__1::__compressed_pair_elem.3073" }
%"struct.std::__1::__compressed_pair_elem.3073" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::Member.2025" = type { %"class.blink::MemberBase.2026" }
%"class.blink::MemberBase.2026" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2027" = type { %"class.blink::MemberBase.2028" }
%"class.blink::MemberBase.2028" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.2029" = type { %"class.blink::MemberBase.2030" }
%"class.blink::MemberBase.2030" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2057", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2065", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2073", %"class.blink::FrameLoader", %"class.blink::Member.2090", %"class.blink::Member.21", %"class.blink::Member.2092", %"class.blink::Member.2094", %"class.blink::Member.2096", %"class.blink::Member.2098", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2100", %class.scoped_refptr.2320, %"class.blink::Member.2321", %"class.blink::Member.2323", %"class.blink::Member.2334", %"class.blink::Member.2336", %"class.blink::Member.2338", %"class.blink::Member.2342", %"class.blink::Member.2344", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.2346", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2349", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2371", %"class.std::__1::unique_ptr.2372", %"class.absl::optional.1875", i32, [4 x i8], %"class.std::__1::unique_ptr.2378", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2386", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2391", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2396", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2399", %"class.blink::Member.2401", %"class.blink::Member.2403", %"class.blink::Member.2405", %"class.mojo::StructPtr.2408", %"class.blink::Member.2416", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2418", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2057" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2058" }
%"class.blink::HeapHashMap.2058" = type { %"class.WTF::HashMap.2061" }
%"class.WTF::HashMap.2061" = type { %"class.WTF::HashTable.2062" }
%"class.WTF::HashTable.2062" = type <{ %"struct.WTF::KeyValuePair.2064"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2064" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2065" = type { %"class.std::__1::__compressed_pair.2066" }
%"class.std::__1::__compressed_pair.2066" = type { %"struct.std::__1::__compressed_pair_elem.2067" }
%"struct.std::__1::__compressed_pair_elem.2067" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.802", %"class.base::WeakPtrFactory.807" }
%"class.WTF::HashMap.802" = type { %"class.WTF::HashTable.803" }
%"class.WTF::HashTable.803" = type <{ %"struct.WTF::KeyValuePair.806"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.806" = type opaque
%"class.base::WeakPtrFactory.807" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.160 }
%class.scoped_refptr.160 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2071" }
%"class.blink::Member.2071" = type { %"class.blink::MemberBase.2072" }
%"class.blink::MemberBase.2072" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.815" }
%"class.blink::WeakMember.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.325" }
%"class.blink::HeapHashSet.325" = type { %"class.WTF::HashSet.328" }
%"class.WTF::HashSet.328" = type { %"class.WTF::HashTable.329" }
%"class.WTF::HashTable.329" = type <{ %"class.blink::WeakMember.331"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.331" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.262", %"class.base::RepeatingCallback.3297", i64, %"class.std::__1::map.3298", i8*, i64, %"class.base::WeakPtrFactory.3307" }
%"class.base::RepeatingCallback.262" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.3297" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3298" = type { %"class.std::__1::__tree.3299" }
%"class.std::__1::__tree.3299" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3300", %"class.std::__1::__compressed_pair.3304" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.3300" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3304" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.base::WeakPtrFactory.3307" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2073" = type { %"class.WTF::HashSet.2076" }
%"class.WTF::HashSet.2076" = type { %"class.WTF::HashTable.2077" }
%"class.WTF::HashTable.2077" = type <{ %"class.blink::WeakMember.2079"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2079" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.817", %"class.blink::Member.2080", %"class.blink::Member.2082", %"class.std::__1::unique_ptr.2084", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1994" }
%"class.blink::Member.2080" = type { %"class.blink::MemberBase.2081" }
%"class.blink::MemberBase.2081" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2082" = type { %"class.blink::MemberBase.2083" }
%"class.blink::MemberBase.2083" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.1907", %"class.blink::Member.1968", %"class.std::__1::unique_ptr.2721", %"class.std::__1::unique_ptr.415", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2875, %"class.WTF::AtomicString", i32, %"class.absl::optional.2774", %class.scoped_refptr.348, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2739", i8, %"class.absl::optional.2746", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.817", %"class.blink::Member.2876", %"class.blink::Member.1454", %"class.blink::Member.2887", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2889", %class.scoped_refptr.340, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2902", %"class.std::__1::unique_ptr.2751", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2904", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.525, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.1982, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2909", %"class.blink::Member.2924", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2937", %"class.WTF::Vector.445", i8, i8, i8, %"class.blink::WebVector.2864", %"class.blink::WebVector.2864", %"class.mojo::Remote.2942" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.1907" = type { %"class.WTF::VectorBuffer.1908" }
%"class.WTF::VectorBuffer.1908" = type { %"class.WTF::VectorBufferBase.1909" }
%"class.WTF::VectorBufferBase.1909" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.1968" = type { %"class.blink::MemberBase.1969" }
%"class.blink::MemberBase.1969" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.2721" = type { %"class.std::__1::__compressed_pair.2722" }
%"class.std::__1::__compressed_pair.2722" = type { %"struct.std::__1::__compressed_pair_elem.2723" }
%"struct.std::__1::__compressed_pair_elem.2723" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.2725", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2739", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2746", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2751", %"class.base::UnguessableToken", %"class.blink::WebVector.2757", %"class.base::TickClock"*, %"class.blink::WebVector.2766", %"class.absl::optional.2774", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2779", %"class.blink::WebVector.2354", i8, %"class.blink::WebVector.2798", i8, %"class.std::__1::unique_ptr.2806", %"class.blink::WebVector.2864", %"class.blink::WebVector.2864" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.2725" = type { %"class.std::__1::vector.2726" }
%"class.std::__1::vector.2726" = type { %"class.std::__1::__vector_base.2727" }
%"class.std::__1::__vector_base.2727" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2734" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2734" = type { %"struct.std::__1::__compressed_pair_elem.2735" }
%"struct.std::__1::__compressed_pair_elem.2735" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2728", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2728" = type { %"class.std::__1::__compressed_pair.2729" }
%"class.std::__1::__compressed_pair.2729" = type { %"struct.std::__1::__compressed_pair_elem.2730" }
%"struct.std::__1::__compressed_pair_elem.2730" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2745", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2745" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2757" = type { %"class.std::__1::vector.2758" }
%"class.std::__1::vector.2758" = type { %"class.std::__1::__vector_base.2759" }
%"class.std::__1::__vector_base.2759" = type { %"class.std::__1::unique_ptr.2760"*, %"class.std::__1::unique_ptr.2760"*, %"class.std::__1::__compressed_pair.2761" }
%"class.std::__1::unique_ptr.2760" = type opaque
%"class.std::__1::__compressed_pair.2761" = type { %"struct.std::__1::__compressed_pair_elem.2762" }
%"struct.std::__1::__compressed_pair_elem.2762" = type { %"class.std::__1::unique_ptr.2760"* }
%"class.blink::WebVector.2766" = type { %"class.std::__1::vector.2767" }
%"class.std::__1::vector.2767" = type { %"class.std::__1::__vector_base.2768" }
%"class.std::__1::__vector_base.2768" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2769" }
%"class.std::__1::__compressed_pair.2769" = type { %"struct.std::__1::__compressed_pair_elem.2770" }
%"struct.std::__1::__compressed_pair_elem.2770" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.2779" = type { %"class.absl::optional_internal::optional_data.2780" }
%"class.absl::optional_internal::optional_data.2780" = type { %"class.absl::optional_internal::optional_data_base.2781" }
%"class.absl::optional_internal::optional_data_base.2781" = type { %"class.absl::optional_internal::optional_data_dtor_base.2782" }
%"class.absl::optional_internal::optional_data_dtor_base.2782" = type { i8, [7 x i8], %union.anon.2783 }
%union.anon.2783 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.2354" = type { %"class.std::__1::vector.2355" }
%"class.std::__1::vector.2355" = type { %"class.std::__1::__vector_base.2356" }
%"class.std::__1::__vector_base.2356" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2357" }
%"class.std::__1::__compressed_pair.2357" = type { %"struct.std::__1::__compressed_pair_elem.2358" }
%"struct.std::__1::__compressed_pair_elem.2358" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2798" = type { %"class.std::__1::vector.2799" }
%"class.std::__1::vector.2799" = type { %"class.std::__1::__vector_base.2800" }
%"class.std::__1::__vector_base.2800" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2801" }
%"class.std::__1::__compressed_pair.2801" = type { %"struct.std::__1::__compressed_pair_elem.2802" }
%"struct.std::__1::__compressed_pair_elem.2802" = type { i32* }
%"class.std::__1::unique_ptr.2806" = type { %"class.std::__1::__compressed_pair.2807" }
%"class.std::__1::__compressed_pair.2807" = type { %"struct.std::__1::__compressed_pair_elem.2808" }
%"struct.std::__1::__compressed_pair_elem.2808" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2809" }
%"class.blink::WebVector.2809" = type { %"class.std::__1::vector.2810" }
%"class.std::__1::vector.2810" = type { %"class.std::__1::__vector_base.2811" }
%"class.std::__1::__vector_base.2811" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2856" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2812", %"class.blink::WebVector.2820", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.2354", i32, [4 x i8], %"class.absl::optional.2851", %"class.blink::WebVector.2354" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2812" = type { %"class.std::__1::vector.2813" }
%"class.std::__1::vector.2813" = type { %"class.std::__1::__vector_base.2814" }
%"class.std::__1::__vector_base.2814" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2815" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2815" = type { %"struct.std::__1::__compressed_pair_elem.2816" }
%"struct.std::__1::__compressed_pair_elem.2816" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2820" = type { %"class.std::__1::vector.2821" }
%"class.std::__1::vector.2821" = type { %"class.std::__1::__vector_base.2822" }
%"class.std::__1::__vector_base.2822" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2846" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2823", %"class.blink::WebVector.2354", %"class.blink::WebVector.2831", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2823" = type { %"class.std::__1::vector.2824" }
%"class.std::__1::vector.2824" = type { %"class.std::__1::__vector_base.2825" }
%"class.std::__1::__vector_base.2825" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2826" }
%"class.std::__1::__compressed_pair.2826" = type { %"struct.std::__1::__compressed_pair_elem.2827" }
%"struct.std::__1::__compressed_pair_elem.2827" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2831" = type { %"class.std::__1::vector.2832" }
%"class.std::__1::vector.2832" = type { %"class.std::__1::__vector_base.2833" }
%"class.std::__1::__vector_base.2833" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2841" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2834" }
%"class.blink::WebVector.2834" = type { %"class.std::__1::vector.2835" }
%"class.std::__1::vector.2835" = type { %"class.std::__1::__vector_base.2836" }
%"class.std::__1::__vector_base.2836" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2837" }
%"class.std::__1::__compressed_pair.2837" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { i8* }
%"class.std::__1::__compressed_pair.2841" = type { %"struct.std::__1::__compressed_pair_elem.2842" }
%"struct.std::__1::__compressed_pair_elem.2842" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2846" = type { %"struct.std::__1::__compressed_pair_elem.2847" }
%"struct.std::__1::__compressed_pair_elem.2847" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2851" = type { %"class.absl::optional_internal::optional_data.2852" }
%"class.absl::optional_internal::optional_data.2852" = type { %"class.absl::optional_internal::optional_data_base.2853" }
%"class.absl::optional_internal::optional_data_base.2853" = type { %"class.absl::optional_internal::optional_data_dtor_base.2854" }
%"class.absl::optional_internal::optional_data_dtor_base.2854" = type { i8, [7 x i8], %union.anon.2855 }
%union.anon.2855 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.2354", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2856" = type { %"struct.std::__1::__compressed_pair_elem.2857" }
%"struct.std::__1::__compressed_pair_elem.2857" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.275 }
%class.scoped_refptr.275 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.418" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.421" }
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"class.mojo::StructPtr.424"*, i32, i32 }
%"class.mojo::StructPtr.424" = type { %"class.std::__1::unique_ptr.425" }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.428", %"class.WTF::HashMap.435", %"class.WTF::HashMap.440", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.445", i32, %"class.mojo::StructPtr.450", %"class.WTF::Vector.445" }
%"class.mojo::StructPtr.428" = type { %"class.std::__1::unique_ptr.429" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.435" = type { %"class.WTF::HashTable.436" }
%"class.WTF::HashTable.436" = type <{ %"struct.WTF::KeyValuePair.439"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.439" = type opaque
%"class.WTF::HashMap.440" = type { %"class.WTF::HashTable.441" }
%"class.WTF::HashTable.441" = type <{ %"struct.WTF::KeyValuePair.444"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.444" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.450" = type { %"class.std::__1::unique_ptr.451" }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.445", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.465" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.259", i32 }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.262", %"class.base::OnceCallback.263", %"class.absl::optional.264", %"class.absl::optional.269", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.276", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.284", %"class.std::__1::map.295", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.304", i8, %class.scoped_refptr.143, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.305" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::OnceCallback.263" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.269" = type { %"class.absl::optional_internal::optional_data.270" }
%"class.absl::optional_internal::optional_data.270" = type { %"class.absl::optional_internal::optional_data_base.271" }
%"class.absl::optional_internal::optional_data_base.271" = type { %"class.absl::optional_internal::optional_data_dtor_base.272" }
%"class.absl::optional_internal::optional_data_dtor_base.272" = type { i8, %union.anon.273 }
%union.anon.273 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.143, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.274" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.274" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.218 }
%class.scoped_refptr.218 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3084", [4 x i8], %"class.base::RepeatingCallback.262", %class.scoped_refptr.143, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.3084" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.279", %class.scoped_refptr.280 }
%"class.base::RepeatingCallback.279" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.280 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.142", [4 x i8] }>
%"class.base::RefCountedThreadSafe.142" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.284" = type { %"class.std::__1::__tree.285" }
%"class.std::__1::__tree.285" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::map.295" = type { %"class.std::__1::__tree.296" }
%"class.std::__1::__tree.296" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.base::OnceCallback.304" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.143 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.144" }>
%"class.base::RefCountedThreadSafe.144" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.305" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.2875 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2774" = type { %"class.absl::optional_internal::optional_data.2775" }
%"class.absl::optional_internal::optional_data.2775" = type { %"class.absl::optional_internal::optional_data_base.2776" }
%"class.absl::optional_internal::optional_data_base.2776" = type { %"class.absl::optional_internal::optional_data_dtor_base.2777" }
%"class.absl::optional_internal::optional_data_dtor_base.2777" = type { i8, %union.anon.2778 }
%union.anon.2778 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.2354", %"class.blink::WebString", %"class.blink::WebVector.2354", %"class.blink::WebVector.2354" }
%class.scoped_refptr.348 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.341", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.343", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.348 }
%"class.WTF::RefCounted.341" = type { %"class.base::RefCounted.342" }
%"class.base::RefCounted.342" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.343" = type { %"class.absl::optional_internal::optional_data.344" }
%"class.absl::optional_internal::optional_data.344" = type { %"class.absl::optional_internal::optional_data_base.345" }
%"class.absl::optional_internal::optional_data_base.345" = type { %"class.absl::optional_internal::optional_data_dtor_base.346" }
%"class.absl::optional_internal::optional_data_dtor_base.346" = type { i8, %union.anon.347 }
%union.anon.347 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2739" = type { %"class.std::__1::__compressed_pair.2740" }
%"class.std::__1::__compressed_pair.2740" = type { %"struct.std::__1::__compressed_pair_elem.2741" }
%"struct.std::__1::__compressed_pair_elem.2741" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2746" = type { %"class.absl::optional_internal::optional_data.2747" }
%"class.absl::optional_internal::optional_data.2747" = type { %"class.absl::optional_internal::optional_data_base.2748" }
%"class.absl::optional_internal::optional_data_base.2748" = type { %"class.absl::optional_internal::optional_data_dtor_base.2749" }
%"class.absl::optional_internal::optional_data_dtor_base.2749" = type { i8, %union.anon.2750 }
%union.anon.2750 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2784", %"class.base::flat_map.2033", i8, [7 x i8] }>
%"class.std::__1::vector.2784" = type { %"class.std::__1::__vector_base.2785" }
%"class.std::__1::__vector_base.2785" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2793" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2786", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2786" = type { %"class.std::__1::__vector_base.2787" }
%"class.std::__1::__vector_base.2787" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2788" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.343" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.2788" = type { %"struct.std::__1::__compressed_pair_elem.2789" }
%"struct.std::__1::__compressed_pair_elem.2789" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2793" = type { %"struct.std::__1::__compressed_pair_elem.2794" }
%"struct.std::__1::__compressed_pair_elem.2794" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2876" = type { %"class.blink::MemberBase.2877" }
%"class.blink::MemberBase.2877" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.445", %"class.blink::Member.2880", %"class.absl::optional.2882", i64, i64, i32, %class.scoped_refptr.508, %class.scoped_refptr.2875, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.508 }
%"class.blink::Member.2880" = type { %"class.blink::MemberBase.2881" }
%"class.blink::MemberBase.2881" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2882" = type { %"class.absl::optional_internal::optional_data.2883" }
%"class.absl::optional_internal::optional_data.2883" = type { %"class.absl::optional_internal::optional_data_base.2884" }
%"class.absl::optional_internal::optional_data_base.2884" = type { %"class.absl::optional_internal::optional_data_dtor_base.2885" }
%"class.absl::optional_internal::optional_data_dtor_base.2885" = type { i8, %union.anon.2886 }
%union.anon.2886 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%"class.blink::Member.2887" = type { %"class.blink::MemberBase.2888" }
%"class.blink::MemberBase.2888" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1890", %class.scoped_refptr.1900, %class.scoped_refptr.1901, %"struct.blink::CacheControlHeader", %"class.absl::optional.264", %"class.absl::optional.1902", %"class.absl::optional.1902", %"class.absl::optional.1902", i64, %"class.blink::KURL", %"class.WTF::Vector.1907", %"class.WTF::String", %"class.WTF::Vector.445", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1875", %"class.WTF::Vector.445", %"class.blink::KURL", %"class.absl::optional.1912" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1838" }
%"class.WTF::HashMap.1838" = type { %"class.WTF::HashTable.1839" }
%"class.WTF::HashTable.1839" = type <{ %"struct.WTF::KeyValuePair.1842"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1842" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.1888", i8 }
%"struct.std::__1::array.1888" = type { [16 x i8] }
%"class.absl::optional.1890" = type { %"class.absl::optional_internal::optional_data.1891" }
%"class.absl::optional_internal::optional_data.1891" = type { %"class.absl::optional_internal::optional_data_base.1892" }
%"class.absl::optional_internal::optional_data_base.1892" = type { %"class.absl::optional_internal::optional_data_dtor_base.1893" }
%"class.absl::optional_internal::optional_data_dtor_base.1893" = type { i8, %union.anon.1894 }
%union.anon.1894 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.445", %"class.WTF::String", i64, i64, %"class.WTF::Vector.936", %"class.WTF::Vector.1895" }
%"class.WTF::Vector.936" = type { %"class.WTF::VectorBuffer.937" }
%"class.WTF::VectorBuffer.937" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::Vector.1895" = type { %"class.WTF::VectorBuffer.1896" }
%"class.WTF::VectorBuffer.1896" = type { %"class.WTF::VectorBufferBase.1897" }
%"class.WTF::VectorBufferBase.1897" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1900 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1901 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.264", %"class.absl::optional.264" }
%"class.absl::optional.1902" = type { %"class.absl::optional_internal::optional_data.1903" }
%"class.absl::optional_internal::optional_data.1903" = type { %"class.absl::optional_internal::optional_data_base.1904" }
%"class.absl::optional_internal::optional_data_base.1904" = type { %"class.absl::optional_internal::optional_data_dtor_base.1905" }
%"class.absl::optional_internal::optional_data_dtor_base.1905" = type { i8, %union.anon.1906 }
%union.anon.1906 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1889" }
%"class.base::time_internal::TimeBase.1889" = type { i64 }
%"class.absl::optional.1912" = type { %"class.absl::optional_internal::optional_data.1913" }
%"class.absl::optional_internal::optional_data.1913" = type { %"class.absl::optional_internal::optional_data_base.1914" }
%"class.absl::optional_internal::optional_data_base.1914" = type { %"class.absl::optional_internal::optional_data_dtor_base.1915" }
%"class.absl::optional_internal::optional_data_dtor_base.1915" = type { i8, %union.anon.1916 }
%union.anon.1916 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.2889" = type { %"class.mojo::internal::InterfacePtrState.2890" }
%"class.mojo::internal::InterfacePtrState.2890" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2891" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.141, %"class.std::__1::unique_ptr.259", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.143, i32 }>
%class.scoped_refptr.141 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.143, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.221", %"class.absl::optional.226", %"class.absl::optional.182", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.250", i8, [7 x i8], %class.scoped_refptr.143, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.142" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.143, %"class.std::__1::unique_ptr.167", %"class.absl::optional", %"struct.std::__1::atomic.178", i8, i8, i8, i8, i32, i32, %"class.absl::optional.182", %"class.std::__1::unique_ptr.187", i8, i64, %class.scoped_refptr.217, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.220" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.143, i8, %"class.mojo::ScopedHandleBase.170", %class.scoped_refptr.171, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.172" }
%"class.mojo::ScopedHandleBase.170" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.171 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.172" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.176 }
%union.anon.176 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.177", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.177" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.190", i8, i64, %class.scoped_refptr.191, %class.scoped_refptr.213 }
%"class.base::RepeatingCallback.190" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.191 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.192", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.202", i8, [7 x i8] }>
%"class.base::RefCounted.192" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.193 }
%class.scoped_refptr.193 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.194", %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::map.202" = type { %"class.std::__1::__tree.203" }
%"class.std::__1::__tree.203" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.204", %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%class.scoped_refptr.213 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.217 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.220" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.221" = type { %"class.absl::optional_internal::optional_data.222" }
%"class.absl::optional_internal::optional_data.222" = type { %"class.absl::optional_internal::optional_data_base.223" }
%"class.absl::optional_internal::optional_data_base.223" = type { %"class.absl::optional_internal::optional_data_dtor_base.224" }
%"class.absl::optional_internal::optional_data_dtor_base.224" = type { i8, %union.anon.225 }
%union.anon.225 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.226" = type { %"class.absl::optional_internal::optional_data.227" }
%"class.absl::optional_internal::optional_data.227" = type { %"class.absl::optional_internal::optional_data_base.228" }
%"class.absl::optional_internal::optional_data_base.228" = type { %"class.absl::optional_internal::optional_data_dtor_base.229" }
%"class.absl::optional_internal::optional_data_dtor_base.229" = type { i8, [7 x i8], %union.anon.230 }
%union.anon.230 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.182" = type { %"class.absl::optional_internal::optional_data.183" }
%"class.absl::optional_internal::optional_data.183" = type { %"class.absl::optional_internal::optional_data_base.184" }
%"class.absl::optional_internal::optional_data_base.184" = type { %"class.absl::optional_internal::optional_data_dtor_base.185" }
%"class.absl::optional_internal::optional_data_dtor_base.185" = type { i8, %union.anon.186 }
%union.anon.186 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.235 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.235 = type { %"class.std::__1::map.238" }
%"class.std::__1::map.238" = type { %"class.std::__1::__tree.239" }
%"class.std::__1::__tree.239" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.240", %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.249"*, i64 }
%"class.std::__1::unique_ptr.249" = type opaque
%"class.std::__1::map.250" = type { %"class.std::__1::__tree.251" }
%"class.std::__1::__tree.251" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.252", %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2891" = type { %"class.std::__1::__compressed_pair.2892" }
%"class.std::__1::__compressed_pair.2892" = type { %"struct.std::__1::__compressed_pair_elem.2893" }
%"struct.std::__1::__compressed_pair_elem.2893" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.340 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.264", %"class.absl::optional.264", %"class.absl::optional.264", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2897", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.2082" }
%"class.WTF::Vector.2897" = type { %"class.WTF::VectorBuffer.2898" }
%"class.WTF::VectorBuffer.2898" = type { %"class.WTF::VectorBufferBase.2899" }
%"class.WTF::VectorBufferBase.2899" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.2902" = type { %"class.blink::MemberBase.2903" }
%"class.blink::MemberBase.2903" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2751" = type { %"class.std::__1::__compressed_pair.2752" }
%"class.std::__1::__compressed_pair.2752" = type { %"struct.std::__1::__compressed_pair_elem.2753" }
%"struct.std::__1::__compressed_pair_elem.2753" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.2033", %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.379"*, %"struct.std::__1::pair.379"*, %"class.std::__1::__compressed_pair.380" }
%"struct.std::__1::pair.379" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"struct.std::__1::pair.379"* }
%"class.WTF::Vector.2904" = type { %"class.WTF::VectorBuffer.2905" }
%"class.WTF::VectorBuffer.2905" = type { %"class.WTF::VectorBufferBase.2906" }
%"class.WTF::VectorBufferBase.2906" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.525 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.526", i64, %"class.WTF::Vector.528", %"class.WTF::Vector.533" }
%"class.WTF::RefCounted.526" = type { %"class.base::RefCounted.527" }
%"class.base::RefCounted.527" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { i8*, i32, i32 }
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { %"class.std::__1::unique_ptr.536"*, i32, i32 }
%"class.std::__1::unique_ptr.536" = type opaque
%class.scoped_refptr.1982 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.2909" = type { %"class.blink::MemberBase.2910" }
%"class.blink::MemberBase.2910" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2913", %"class.std::__1::unique_ptr.2918", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2913" = type { %"class.WTF::HashTable.2914" }
%"class.WTF::HashTable.2914" = type <{ %"struct.WTF::KeyValuePair.2917"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2917" = type { %"class.WTF::Vector.3359", %class.scoped_refptr.3363 }
%"class.WTF::Vector.3359" = type { %"class.WTF::VectorBuffer.3360" }
%"class.WTF::VectorBuffer.3360" = type { %"class.WTF::VectorBufferBase.3146", [32 x i8] }
%"class.WTF::VectorBufferBase.3146" = type { i8*, i32, i32 }
%class.scoped_refptr.3363 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.3364", %"class.WTF::Vector.3366", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.3364" = type { %"class.base::RefCounted.3365" }
%"class.base::RefCounted.3365" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3366" = type { %"class.WTF::VectorBuffer.3367" }
%"class.WTF::VectorBuffer.3367" = type { %"class.WTF::VectorBufferBase.3146" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.3370", i64, %"class.absl::optional.3375" }
%"class.std::__1::unique_ptr.3370" = type { %"class.std::__1::__compressed_pair.3371" }
%"class.std::__1::__compressed_pair.3371" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"class.absl::optional.3375" = type { %"class.absl::optional_internal::optional_data.3376" }
%"class.absl::optional_internal::optional_data.3376" = type { %"class.absl::optional_internal::optional_data_base.3377" }
%"class.absl::optional_internal::optional_data_base.3377" = type { %"class.absl::optional_internal::optional_data_dtor_base.3378" }
%"class.absl::optional_internal::optional_data_dtor_base.3378" = type { i8, %union.anon.3379 }
%union.anon.3379 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.3380", %"class.std::__1::unique_ptr.3381" }
%"class.mojo::ScopedHandleBase.3380" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.3381" = type { %"class.std::__1::__compressed_pair.3382" }
%"class.std::__1::__compressed_pair.3382" = type { %"struct.std::__1::__compressed_pair_elem.3383" }
%"struct.std::__1::__compressed_pair_elem.3383" = type { i8* }
%"class.std::__1::unique_ptr.2918" = type { %"class.std::__1::__compressed_pair.2919" }
%"class.std::__1::__compressed_pair.2919" = type { %"struct.std::__1::__compressed_pair_elem.2920" }
%"struct.std::__1::__compressed_pair_elem.2920" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.2924" = type { %"class.blink::MemberBase.2925" }
%"class.blink::MemberBase.2925" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2930" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2926", %"class.std::__1::bitset.2926", %"class.std::__1::bitset.2928" }
%"class.std::__1::bitset.2926" = type { %"class.std::__1::__bitset.2927" }
%"class.std::__1::__bitset.2927" = type { [11 x i64] }
%"class.std::__1::bitset.2928" = type { %"class.std::__1::__bitset.2929" }
%"class.std::__1::__bitset.2929" = type { [2 x i64] }
%"class.blink::HeapHashSet.2930" = type { %"class.WTF::HashSet.2933" }
%"class.WTF::HashSet.2933" = type { %"class.WTF::HashTable.2934" }
%"class.WTF::HashTable.2934" = type <{ %"class.blink::Member.2936"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2936" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2937" = type { %"class.WTF::VectorBuffer.2938" }
%"class.WTF::VectorBuffer.2938" = type { %"class.WTF::VectorBufferBase.2939" }
%"class.WTF::VectorBufferBase.2939" = type { i32*, i32, i32 }
%"class.blink::WebVector.2864" = type { %"class.std::__1::vector.2865" }
%"class.std::__1::vector.2865" = type { %"class.std::__1::__vector_base.2866" }
%"class.std::__1::__vector_base.2866" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2867" }
%"class.std::__1::__compressed_pair.2867" = type { %"struct.std::__1::__compressed_pair_elem.2868" }
%"struct.std::__1::__compressed_pair_elem.2868" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2942" = type { %"class.mojo::internal::InterfacePtrState.2943" }
%"class.mojo::internal::InterfacePtrState.2943" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2944" }
%"class.std::__1::unique_ptr.2944" = type { %"class.std::__1::__compressed_pair.2945" }
%"class.std::__1::__compressed_pair.2945" = type { %"struct.std::__1::__compressed_pair_elem.2946" }
%"struct.std::__1::__compressed_pair_elem.2946" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2084" = type { %"class.std::__1::__compressed_pair.2085" }
%"class.std::__1::__compressed_pair.2085" = type { %"struct.std::__1::__compressed_pair_elem.2086" }
%"struct.std::__1::__compressed_pair_elem.2086" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.1994" = type { %"class.WTF::HashTable.1995" }
%"class.WTF::HashTable.1995" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2090" = type { %"class.blink::MemberBase.2091" }
%"class.blink::MemberBase.2091" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2497", %"class.blink::Member.817", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2502", i8, i32, %"class.blink::Color", %"class.absl::optional.2504", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2509", %"class.blink::Member.2511", %"class.blink::Member.2511", %"class.std::__1::unique_ptr.2514", i32, [4 x i8], %"class.WTF::HashSet.2517", %"class.blink::Member.2524", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2526", %"class.blink::HeapHashSet.2533", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2541", i8, %"class.blink::Member.2547", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2559", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2573", i8, %"class.std::__1::unique_ptr.2579", %"class.std::__1::unique_ptr.2660", %"class.WTF::Vector.2666", i32, %class.scoped_refptr.2671, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2672", %"class.blink::Member.2674", %"class.blink::Member.2676", %"class.blink::HeapHashSet.2678", %"class.blink::HeapHashSet.2685", %"class.std::__1::unique_ptr.2692", %"class.std::__1::unique_ptr.2698", %"class.WTF::Vector.102" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2497" = type { %"class.WTF::HashTable.2498" }
%"class.WTF::HashTable.2498" = type <{ %class.scoped_refptr.2501*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2501 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2502" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2503", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1498, %"class.base::WeakPtrFactory.1499" }
%class.scoped_refptr.1498 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1499" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2503" = type { %"class.blink::MemberBase.2091" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.2504" = type { %"class.absl::optional_internal::optional_data.2505" }
%"class.absl::optional_internal::optional_data.2505" = type { %"class.absl::optional_internal::optional_data_base.2506" }
%"class.absl::optional_internal::optional_data_base.2506" = type { %"class.absl::optional_internal::optional_data_dtor_base.2507" }
%"class.absl::optional_internal::optional_data_dtor_base.2507" = type { i8, %union.anon.2508 }
%union.anon.2508 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2509" = type { %"class.blink::MemberBase.2510" }
%"class.blink::MemberBase.2510" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2511" = type { %"class.blink::MemberBase.2512" }
%"class.blink::MemberBase.2512" = type { %"class.blink::HeapHashSet.2513"* }
%"class.blink::HeapHashSet.2513" = type opaque
%"class.std::__1::unique_ptr.2514" = type { %"class.std::__1::__compressed_pair.2515" }
%"class.std::__1::__compressed_pair.2515" = type { %"struct.std::__1::__compressed_pair_elem.2516" }
%"struct.std::__1::__compressed_pair_elem.2516" = type { %"class.WTF::HashSet.2517"* }
%"class.WTF::HashSet.2517" = type { %"class.WTF::HashTable.2518" }
%"class.WTF::HashTable.2518" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.821, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.821 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1251", %"class.std::__1::unique_ptr.1253" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.886", %"class.blink::DataRef.967", %"class.blink::DataRef.971", %"class.blink::DataRef.1167", %"class.blink::DataRef.1234", %"class.blink::DataRef.1238", %"class.blink::DataRef.1242", %"class.blink::DataRef.1246", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.822 }
%class.scoped_refptr.822 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.823", %"class.blink::DataRef.825", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.823" = type { %"class.base::RefCounted.824" }
%"class.base::RefCounted.824" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.825" = type { %class.scoped_refptr.826 }
%class.scoped_refptr.826 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.827", %"class.blink::Font" }
%"class.WTF::RefCounted.827" = type { %"class.base::RefCounted.828" }
%"class.base::RefCounted.828" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.855 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.830, %class.scoped_refptr.838, %class.scoped_refptr.848, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.854 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.829 }
%class.scoped_refptr.829 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.2019", [4 x i8] }>
%"class.WTF::RefCounted.2019" = type { %"class.base::RefCounted.2020" }
%"class.base::RefCounted.2020" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.830 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.836", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.831" }
%"class.WTF::Vector.831" = type { %"class.WTF::VectorBuffer.832" }
%"class.WTF::VectorBuffer.832" = type { %"class.WTF::VectorBufferBase.833" }
%"class.WTF::VectorBufferBase.833" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.836" = type { %"class.base::RefCounted.837" }
%"class.base::RefCounted.837" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.838 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.839", %"class.WTF::RefCounted.846", [4 x i8] }>
%"class.blink::FontSettings.839" = type { %"class.WTF::Vector.840" }
%"class.WTF::Vector.840" = type { %"class.WTF::VectorBuffer.841" }
%"class.WTF::VectorBuffer.841" = type { %"class.WTF::VectorBufferBase.842" }
%"class.WTF::VectorBufferBase.842" = type { %"class.blink::FontTagValuePair.843"*, i32, i32 }
%"class.blink::FontTagValuePair.843" = type { i32, float }
%"class.WTF::RefCounted.846" = type { %"class.base::RefCounted.847" }
%"class.base::RefCounted.847" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.848 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.849", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.851, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.849" = type { %"class.base::RefCounted.850" }
%"class.base::RefCounted.850" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.851 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.852", [4 x i8] }>
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.854 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.855 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.856", %"class.WTF::Vector.858", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.882", i32, i16, i8, %"class.base::WeakPtr.884" }
%"class.WTF::RefCounted.856" = type { %"class.base::RefCounted.857" }
%"class.base::RefCounted.857" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.858" = type { %"class.WTF::VectorBuffer.859" }
%"class.WTF::VectorBuffer.859" = type { %"class.WTF::VectorBufferBase.860", [8 x i8] }
%"class.WTF::VectorBufferBase.860" = type { %class.scoped_refptr.861*, i32, i32 }
%class.scoped_refptr.861 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.862", [4 x i8] }>
%"class.WTF::RefCounted.862" = type { %"class.base::RefCounted.863" }
%"class.base::RefCounted.863" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.872", %class.scoped_refptr.879, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.862" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.866", %"class.absl::optional.866", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.866" = type { %"class.absl::optional_internal::optional_data.867" }
%"class.absl::optional_internal::optional_data.867" = type { %"class.absl::optional_internal::optional_data_base.868" }
%"class.absl::optional_internal::optional_data_base.868" = type { %"class.absl::optional_internal::optional_data_dtor_base.869" }
%"class.absl::optional_internal::optional_data_dtor_base.869" = type { i8, %union.anon.870 }
%union.anon.870 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.871, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.106" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.106" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.162" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.871 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.875, %class.scoped_refptr.875 }
%class.scoped_refptr.875 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.879 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.880", [4 x i8] }>
%"class.WTF::RefCounted.880" = type { %"class.base::RefCounted.881" }
%"class.base::RefCounted.881" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent.882" = type { %"class.blink::PersistentBase.883" }
%"class.blink::PersistentBase.883" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.884" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.885, i8, i8, i8, i8 }>
%union.anon.885 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.886" = type { %class.scoped_refptr.887 }
%class.scoped_refptr.887 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.888", [4 x i8], %"class.blink::DataRef.890", %"class.blink::DataRef.932", %"class.WTF::Vector.936", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.940, %class.scoped_refptr.949, %"class.blink::Persistent.957", %"class.blink::Persistent.959", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.888" = type { %"class.base::RefCounted.889" }
%"class.base::RefCounted.889" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.890" = type { %class.scoped_refptr.891 }
%class.scoped_refptr.891 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.892", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.894, %class.scoped_refptr.902, %"class.blink::Persistent.919", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.892" = type { %"class.base::RefCounted.893" }
%"class.base::RefCounted.893" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.894 = type { %"class.base::RefCountedData.895"* }
%"class.base::RefCountedData.895" = type { %"class.base::RefCountedThreadSafe.896", %"class.WTF::Vector.897" }
%"class.base::RefCountedThreadSafe.896" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.897" = type { %"class.WTF::VectorBuffer.898" }
%"class.WTF::VectorBuffer.898" = type { %"class.WTF::VectorBufferBase.899" }
%"class.WTF::VectorBufferBase.899" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.902 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.903", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.903" = type { %"class.base::RefCounted.904" }
%"class.base::RefCounted.904" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.905", %"class.blink::Persistent" }
%"class.WTF::HashMap.905" = type { %"class.WTF::HashTable.906" }
%"class.WTF::HashTable.906" = type <{ %"struct.WTF::KeyValuePair.909"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.909" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3399 }
%class.scoped_refptr.3399 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3400", %"class.WTF::Vector.445", %"class.WTF::Vector.3402", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3400" = type { %"class.base::RefCounted.3401" }
%"class.base::RefCounted.3401" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3402" = type { %"class.WTF::VectorBuffer.3403" }
%"class.WTF::VectorBuffer.3403" = type { %"class.WTF::VectorBufferBase.3404" }
%"class.WTF::VectorBufferBase.3404" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3405 }
%union.anon.3405 = type { double }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.910" }
%"class.blink::PersistentBase.910" = type { %"class.blink::HeapHashMap.911"*, %"class.blink::PersistentNodePtr.918" }
%"class.blink::HeapHashMap.911" = type { %"class.WTF::HashMap.914" }
%"class.WTF::HashMap.914" = type { %"class.WTF::HashTable.915" }
%"class.WTF::HashTable.915" = type <{ %"struct.WTF::KeyValuePair.917"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.917" = type opaque
%"class.blink::Persistent.919" = type { %"class.blink::PersistentBase.920" }
%"class.blink::PersistentBase.920" = type { %"class.blink::HeapVector.921"*, %"class.blink::PersistentNodePtr.918" }
%"class.blink::HeapVector.921" = type { %"class.WTF::Vector.924" }
%"class.WTF::Vector.924" = type { %"class.WTF::VectorBuffer.925" }
%"class.WTF::VectorBuffer.925" = type { %"class.WTF::VectorBufferBase.926" }
%"class.WTF::VectorBufferBase.926" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.927", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.927" = type { %"class.blink::MemberBase.928" }
%"class.blink::MemberBase.928" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.932" = type { %class.scoped_refptr.933 }
%class.scoped_refptr.933 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.934", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.934" = type { %"class.base::RefCounted.935" }
%"class.base::RefCounted.935" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.940 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.941", %"class.WTF::Vector.943" }
%"class.WTF::RefCounted.941" = type { %"class.base::RefCounted.942" }
%"class.base::RefCounted.942" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.943" = type { %"class.WTF::VectorBuffer.944" }
%"class.WTF::VectorBuffer.944" = type { %"class.WTF::VectorBufferBase.945" }
%"class.WTF::VectorBufferBase.945" = type { %"struct.std::__1::pair.946"*, i32, i32 }
%"struct.std::__1::pair.946" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.949 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.950", [4 x i8], %"class.WTF::Vector.952" }
%"class.WTF::RefCounted.950" = type { %"class.base::RefCounted.951" }
%"class.base::RefCounted.951" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.952" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.954", [28 x i8] }>
%"class.WTF::VectorBufferBase.954" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.957" = type { %"class.blink::PersistentBase.958" }
%"class.blink::PersistentBase.958" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.918" }
%"class.blink::Persistent.959" = type { %"class.blink::PersistentBase.960" }
%"class.blink::PersistentBase.960" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.918" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.963", %"class.blink::Member.965" }
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.967" = type { %class.scoped_refptr.968 }
%class.scoped_refptr.968 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.969", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.969" = type { %"class.base::RefCounted.970" }
%"class.base::RefCounted.970" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.971" = type { %class.scoped_refptr.972 }
%class.scoped_refptr.972 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.973", [4 x i8], %"class.blink::DataRef.975", %"class.blink::DataRef.1041", %"class.blink::TransformOperations", %class.scoped_refptr.949, %"class.blink::Persistent.1161", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.973" = type { %"class.base::RefCounted.974" }
%"class.base::RefCounted.974" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.975" = type { %class.scoped_refptr.976 }
%class.scoped_refptr.976 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.977", [4 x i8], %"class.blink::DataRef.979", %"class.blink::Persistent.1017", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.977" = type { %"class.base::RefCounted.978" }
%"class.base::RefCounted.978" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.979" = type { %class.scoped_refptr.980 }
%class.scoped_refptr.980 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.981", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.999, %class.scoped_refptr.1002, %class.scoped_refptr.1005, %class.scoped_refptr.1008, %class.scoped_refptr.1009, %class.scoped_refptr.1010, %"class.blink::Persistent.1017", %"class.blink::Persistent.1032", %"class.absl::optional.1036", %"class.absl::optional.1036", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.981" = type { %"class.base::RefCounted.982" }
%"class.base::RefCounted.982" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.983", %"class.std::__1::unique_ptr.988" }
%"class.WTF::Vector.983" = type { %"class.WTF::VectorBuffer.984" }
%"class.WTF::VectorBuffer.984" = type { %"class.WTF::VectorBufferBase.985" }
%"class.WTF::VectorBufferBase.985" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.991", %"class.WTF::Vector.983", i32, i32 }
%"class.WTF::Vector.991" = type { %"class.WTF::VectorBuffer.992" }
%"class.WTF::VectorBuffer.992" = type { %"class.WTF::VectorBufferBase.993" }
%"class.WTF::VectorBufferBase.993" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.999 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1000", [4 x i8] }>
%"class.WTF::RefCounted.1000" = type { %"class.base::RefCounted.1001" }
%"class.base::RefCounted.1001" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1002 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1003", [4 x i8] }>
%"class.WTF::RefCounted.1003" = type { %"class.base::RefCounted.1004" }
%"class.base::RefCounted.1004" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1005 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1006" }>
%"class.WTF::RefCounted.1006" = type { %"class.base::RefCounted.1007" }
%"class.base::RefCounted.1007" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1008 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1009 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1010 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1011", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1011" = type { %"class.base::RefCounted.1012" }
%"class.base::RefCounted.1012" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1013" }
%"class.blink::DataRef.1013" = type { %class.scoped_refptr.1014 }
%class.scoped_refptr.1014 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.957", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1015" }
%"class.WTF::RefCounted.1015" = type { %"class.base::RefCounted.1016" }
%"class.base::RefCounted.1016" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1032" = type { %"class.blink::PersistentBase.1033" }
%"class.blink::PersistentBase.1033" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.918" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1002, %"class.blink::Member.927", i32, [4 x i8] }>
%"class.absl::optional.1036" = type { %"class.absl::optional_internal::optional_data.1037" }
%"class.absl::optional_internal::optional_data.1037" = type { %"class.absl::optional_internal::optional_data_base.1038" }
%"class.absl::optional_internal::optional_data_base.1038" = type { %"class.absl::optional_internal::optional_data_dtor_base.1039" }
%"class.absl::optional_internal::optional_data_dtor_base.1039" = type { i8, [3 x i8], %union.anon.1040 }
%union.anon.1040 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1017" = type { %"class.blink::PersistentBase.1018" }
%"class.blink::PersistentBase.1018" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.918" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1021" }
%"class.blink::HeapVector.1021" = type { %"class.WTF::Vector.1024" }
%"class.WTF::Vector.1024" = type { %"class.WTF::VectorBuffer.1025" }
%"class.WTF::VectorBuffer.1025" = type { %"class.WTF::VectorBufferBase.1026" }
%"class.WTF::VectorBufferBase.1026" = type { %"class.blink::Member.1027"*, i32, i32 }
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1041" = type { %class.scoped_refptr.1042 }
%class.scoped_refptr.1042 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1043", %"class.blink::DataRef.1045", %"class.blink::DataRef.1049", %"class.blink::DataRef.1058", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1077", %"class.std::__1::unique_ptr.1088", %"class.std::__1::unique_ptr.1127", %"class.std::__1::unique_ptr.1138", %"class.std::__1::unique_ptr.1149", %"class.WTF::Vector.445", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1043" = type { %"class.base::RefCounted.1044" }
%"class.base::RefCounted.1044" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1045" = type { %class.scoped_refptr.1046 }
%class.scoped_refptr.1046 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1047", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1047" = type { %"class.base::RefCounted.1048" }
%"class.base::RefCounted.1048" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1049" = type { %class.scoped_refptr.1050 }
%class.scoped_refptr.1050 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1051", [4 x i8], %"class.WTF::Vector.1053", i8, [7 x i8] }>
%"class.WTF::RefCounted.1051" = type { %"class.base::RefCounted.1052" }
%"class.base::RefCounted.1052" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1053" = type { %"class.WTF::VectorBuffer.1054" }
%"class.WTF::VectorBuffer.1054" = type { %"class.WTF::VectorBufferBase.1055" }
%"class.WTF::VectorBufferBase.1055" = type { i32*, i32, i32 }
%"class.blink::DataRef.1058" = type { %class.scoped_refptr.1059 }
%class.scoped_refptr.1059 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1060", [4 x i8], %"class.WTF::HashMap.1062", %"class.WTF::HashMap.1062", %"class.WTF::HashMap.1062", %"class.WTF::HashMap.1062", %"class.WTF::HashMap.1062", %"class.WTF::HashMap.1062", %"class.WTF::HashMap.1067", %"class.WTF::HashMap.1067", %"class.WTF::HashMap.1067", %"class.WTF::HashMap.1067", %"class.WTF::HashMap.1072", %"class.WTF::Vector.983", %"class.WTF::Vector.983", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1060" = type { %"class.base::RefCounted.1061" }
%"class.base::RefCounted.1061" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1062" = type { %"class.WTF::HashTable.1063" }
%"class.WTF::HashTable.1063" = type <{ %"struct.WTF::KeyValuePair.1066"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1066" = type { %"class.WTF::String", %"class.WTF::Vector.3389" }
%"class.WTF::Vector.3389" = type { %"class.WTF::VectorBuffer.3390" }
%"class.WTF::VectorBuffer.3390" = type { %"class.WTF::VectorBufferBase.3391" }
%"class.WTF::VectorBufferBase.3391" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1067" = type { %"class.WTF::HashTable.1068" }
%"class.WTF::HashTable.1068" = type <{ %"struct.WTF::KeyValuePair.1071"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1071" = type { i64, %"class.WTF::Vector.445" }
%"class.WTF::HashMap.1072" = type { %"class.WTF::HashTable.1073" }
%"class.WTF::HashTable.1073" = type <{ %"struct.WTF::KeyValuePair.1076"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1076" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1080" }
%"class.WTF::HashMap.1080" = type { %"class.WTF::HashTable.1081" }
%"class.WTF::HashTable.1081" = type <{ %"struct.WTF::KeyValuePair.1084"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1084" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3394", %"class.absl::optional.3394", %"class.absl::optional.3394" }
%"class.absl::optional.3394" = type { %"class.absl::optional_internal::optional_data.3395" }
%"class.absl::optional_internal::optional_data.3395" = type { %"class.absl::optional_internal::optional_data_base.3396" }
%"class.absl::optional_internal::optional_data_base.3396" = type { %"class.absl::optional_internal::optional_data_dtor_base.3397" }
%"class.absl::optional_internal::optional_data_dtor_base.3397" = type { i8, %union.anon.3398 }
%union.anon.3398 = type { i32 }
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.936", %"class.WTF::Vector.1104", %"class.WTF::Vector.1091", %"class.WTF::Vector.1109", %"class.WTF::Vector.1114", %"class.WTF::Vector.1119" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1091", %"class.WTF::Vector.1091", %"class.WTF::Vector.1096" }
%"class.WTF::Vector.1096" = type { %"class.WTF::VectorBuffer.1097" }
%"class.WTF::VectorBuffer.1097" = type { %"class.WTF::VectorBufferBase.1098" }
%"class.WTF::VectorBufferBase.1098" = type { %class.scoped_refptr.1099*, i32, i32 }
%class.scoped_refptr.1099 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1100", i32 }
%"class.WTF::ThreadSafeRefCounted.1100" = type { %"class.base::RefCountedThreadSafe.1101" }
%"class.base::RefCountedThreadSafe.1101" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1104" = type { %"class.WTF::VectorBuffer.1105" }
%"class.WTF::VectorBuffer.1105" = type { %"class.WTF::VectorBufferBase.1106" }
%"class.WTF::VectorBufferBase.1106" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1091" = type { %"class.WTF::VectorBuffer.1092" }
%"class.WTF::VectorBuffer.1092" = type { %"class.WTF::VectorBufferBase.1093" }
%"class.WTF::VectorBufferBase.1093" = type { double*, i32, i32 }
%"class.WTF::Vector.1109" = type { %"class.WTF::VectorBuffer.1110" }
%"class.WTF::VectorBuffer.1110" = type { %"class.WTF::VectorBufferBase.1111" }
%"class.WTF::VectorBufferBase.1111" = type { i32*, i32, i32 }
%"class.WTF::Vector.1114" = type { %"class.WTF::VectorBuffer.1115" }
%"class.WTF::VectorBuffer.1115" = type { %"class.WTF::VectorBufferBase.1116" }
%"class.WTF::VectorBufferBase.1116" = type { i32*, i32, i32 }
%"class.WTF::Vector.1119" = type { %"class.WTF::VectorBuffer.1120" }
%"class.WTF::VectorBuffer.1120" = type { %"class.WTF::VectorBufferBase.1121" }
%"class.WTF::VectorBufferBase.1121" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1127" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1130" }
%"class.WTF::Vector.1130" = type { %"class.WTF::VectorBuffer.1131" }
%"class.WTF::VectorBuffer.1131" = type { %"class.WTF::VectorBufferBase.1132" }
%"class.WTF::VectorBufferBase.1132" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1138" = type { %"class.std::__1::__compressed_pair.1139" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1141" }
%"class.WTF::Vector.1141" = type { %"class.WTF::VectorBuffer.1142" }
%"class.WTF::VectorBuffer.1142" = type { %"class.WTF::VectorBufferBase.1143" }
%"class.WTF::VectorBufferBase.1143" = type { %"class.blink::Persistent.957"*, i32, i32 }
%"class.std::__1::unique_ptr.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.957", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1155" }
%"class.WTF::Vector.1155" = type { %"class.WTF::VectorBuffer.1156" }
%"class.WTF::VectorBuffer.1156" = type { %"class.WTF::VectorBufferBase.1157" }
%"class.WTF::VectorBufferBase.1157" = type { %class.scoped_refptr.1158*, i32, i32 }
%class.scoped_refptr.1158 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1006", [4 x i8] }>
%"class.blink::Persistent.1161" = type { %"class.blink::PersistentBase.1162" }
%"class.blink::PersistentBase.1162" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.918" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1165" }
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1167" = type { %class.scoped_refptr.1168 }
%class.scoped_refptr.1168 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1169", [4 x i8], %"class.blink::DataRef.1171", %"class.blink::DataRef.1175", %"class.blink::DataRef.1196", %"class.blink::DataRef.1214", %"class.blink::DataRef.1226", %"class.blink::DataRef.1230", %class.scoped_refptr.1200, i32, [4 x i8] }>
%"class.WTF::RefCounted.1169" = type { %"class.base::RefCounted.1170" }
%"class.base::RefCounted.1170" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1171" = type { %class.scoped_refptr.1172 }
%class.scoped_refptr.1172 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1173", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1173" = type { %"class.base::RefCounted.1174" }
%"class.base::RefCounted.1174" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1175" = type { %class.scoped_refptr.1176 }
%class.scoped_refptr.1176 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1177", %class.scoped_refptr.1179, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1177" = type { %"class.base::RefCounted.1178" }
%"class.base::RefCounted.1178" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1179 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1180", %"class.std::__1::unique_ptr.1186", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1003" }>
%"class.std::__1::unique_ptr.1180" = type { %"class.std::__1::__compressed_pair.1181" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.1182" }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1186" = type { %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1189, i32, %"struct.std::__1::atomic.162", %"struct.std::__1::atomic.162", i8, i8 }>
%class.sk_sp.1189 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1190, %class.SkTDArray.1191, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.106" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1190 = type { i8*, i32, i32 }
%class.SkTDArray.1191 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1192 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.106", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1192 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.178", [3 x i8] }
%"class.blink::DataRef.1196" = type { %class.scoped_refptr.1197 }
%class.scoped_refptr.1197 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1198", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1198" = type { %"class.base::RefCounted.1199" }
%"class.base::RefCounted.1199" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1200, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1214" = type { %class.scoped_refptr.1215 }
%class.scoped_refptr.1215 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1216", [4 x i8], %class.scoped_refptr.1218, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1216" = type { %"class.base::RefCounted.1217" }
%"class.base::RefCounted.1217" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1218 = type { %"class.base::RefCountedData.1219"* }
%"class.base::RefCountedData.1219" = type { %"class.base::RefCountedThreadSafe.1220", %"class.WTF::Vector.1221" }
%"class.base::RefCountedThreadSafe.1220" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1221" = type { %"class.WTF::VectorBuffer.1222" }
%"class.WTF::VectorBuffer.1222" = type { %"class.WTF::VectorBufferBase.1223" }
%"class.WTF::VectorBufferBase.1223" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1226" = type { %class.scoped_refptr.1227 }
%class.scoped_refptr.1227 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1228", %class.scoped_refptr.1200, %class.scoped_refptr.1200, %class.scoped_refptr.1200 }
%"class.WTF::RefCounted.1228" = type { %"class.base::RefCounted.1229" }
%"class.base::RefCounted.1229" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1230" = type { %class.scoped_refptr.1231 }
%class.scoped_refptr.1231 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1232", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1232" = type { %"class.base::RefCounted.1233" }
%"class.base::RefCounted.1233" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1200 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1201", %"class.blink::Persistent.1203", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1201" = type { %"class.base::RefCounted.1202" }
%"class.base::RefCounted.1202" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1203" = type { %"class.blink::PersistentBase.1204" }
%"class.blink::PersistentBase.1204" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.918" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.21", %"class.blink::HeapHashMap.1207" }
%"class.blink::HeapHashMap.1207" = type { %"class.WTF::HashMap.1210" }
%"class.WTF::HashMap.1210" = type { %"class.WTF::HashTable.1211" }
%"class.WTF::HashTable.1211" = type <{ %"struct.WTF::KeyValuePair.1213"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1213" = type opaque
%"class.blink::DataRef.1234" = type { %class.scoped_refptr.1235 }
%class.scoped_refptr.1235 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1236", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1236" = type { %"class.base::RefCounted.1237" }
%"class.base::RefCounted.1237" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1238" = type { %class.scoped_refptr.1239 }
%class.scoped_refptr.1239 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1240", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1240" = type { %"class.base::RefCounted.1241" }
%"class.base::RefCounted.1241" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1242" = type { %class.scoped_refptr.1243 }
%class.scoped_refptr.1243 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1244", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1244" = type { %"class.base::RefCounted.1245" }
%"class.base::RefCounted.1245" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1246" = type { %class.scoped_refptr.1247 }
%class.scoped_refptr.1247 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1248", %class.scoped_refptr.1250 }
%"class.WTF::RefCounted.1248" = type { %"class.base::RefCounted.1249" }
%"class.base::RefCounted.1249" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1250 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.2017", %"class.blink::StyleVariables", %class.scoped_refptr.1250 }
%"class.WTF::RefCounted.2017" = type { %"class.base::RefCounted.2018" }
%"class.base::RefCounted.2018" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1251" = type { %"class.base::RefCounted.1252" }
%"class.base::RefCounted.1252" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1253" = type { %"class.std::__1::__compressed_pair.1254" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1256" }
%"class.std::__1::unique_ptr.1256" = type { %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.1258" }
%"struct.std::__1::__compressed_pair_elem.1258" = type { %"class.WTF::Vector.1259"* }
%"class.WTF::Vector.1259" = type { %"class.WTF::VectorBuffer.3409" }
%"class.WTF::VectorBuffer.3409" = type { %"class.WTF::VectorBufferBase.3410", [32 x i8] }
%"class.WTF::VectorBufferBase.3410" = type { %class.scoped_refptr.821*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1267" }
%"class.std::__1::unique_ptr.1267" = type { %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1270", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1276", %"class.std::__1::unique_ptr.1400", i8, %"class.absl::optional.1406", %class.scoped_refptr.1382, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1411" }
%"class.std::__1::unique_ptr.1270" = type { %"class.std::__1::__compressed_pair.1271" }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.1272" }
%"struct.std::__1::__compressed_pair_elem.1272" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1279, %class.scoped_refptr.1279, %class.scoped_refptr.1279, %class.scoped_refptr.1279, %class.scoped_refptr.1279, %class.scoped_refptr.1279, %class.scoped_refptr.1314, %class.scoped_refptr.1330, %class.scoped_refptr.1331, %class.scoped_refptr.1331, %class.scoped_refptr.1331, %class.scoped_refptr.1331, %class.scoped_refptr.1331, %class.scoped_refptr.1331, %class.scoped_refptr.1372, %class.scoped_refptr.1373, %class.scoped_refptr.1373, %class.scoped_refptr.1373, %class.scoped_refptr.1373, %class.scoped_refptr.1373, %class.scoped_refptr.1373, %class.scoped_refptr.1373, %class.scoped_refptr.1373, %class.scoped_refptr.1396 }
%class.scoped_refptr.1279 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1296" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1280", i8, i8, %class.scoped_refptr.1282, i32, i32 }
%"class.WTF::RefCounted.1280" = type { %"class.base::RefCounted.1281" }
%"class.base::RefCounted.1281" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1282 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1289, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1290", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1283" }
%"class.std::__1::unique_ptr.1283" = type { %"class.std::__1::__compressed_pair.1284" }
%"class.std::__1::__compressed_pair.1284" = type { %"struct.std::__1::__compressed_pair_elem.1285" }
%"struct.std::__1::__compressed_pair_elem.1285" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1289 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1315", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1315" = type { %"class.WTF::RefCounted.1316", i8, i8, %class.scoped_refptr.1289, i32, i32 }
%"class.WTF::RefCounted.1316" = type { %"class.base::RefCounted.1317" }
%"class.base::RefCounted.1317" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1318" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1318" = type { %"class.absl::optional_internal::optional_data.1319" }
%"class.absl::optional_internal::optional_data.1319" = type { %"class.absl::optional_internal::optional_data_base.1320" }
%"class.absl::optional_internal::optional_data_base.1320" = type { %"class.absl::optional_internal::optional_data_dtor_base.1321" }
%"class.absl::optional_internal::optional_data_dtor_base.1321" = type { i8, %union.anon.1322 }
%union.anon.1322 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1323", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1323" = type { %"class.std::__1::__vector_base.1324" }
%"class.std::__1::__vector_base.1324" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1325" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1290" = type { %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1296" = type { %"class.std::__1::__compressed_pair.1297" }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1299", %"class.std::__1::unique_ptr.1305", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1299" = type { %"class.std::__1::__compressed_pair.1300" }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.1301" }
%"struct.std::__1::__compressed_pair_elem.1301" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1305" = type { %"class.std::__1::__compressed_pair.1306" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.1307" }
%"struct.std::__1::__compressed_pair_elem.1307" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1314 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1330 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1331 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1332" }
%"class.blink::PaintPropertyNode.1332" = type { %"class.WTF::RefCounted.1333", i8, i8, %class.scoped_refptr.1335, i32, i32 }
%"class.WTF::RefCounted.1333" = type { %"class.base::RefCounted.1334" }
%"class.base::RefCounted.1334" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1335 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1282, %class.scoped_refptr.1336, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1358", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1336 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1374" }
%"class.blink::PaintPropertyNode.1374" = type { %"class.WTF::RefCounted.1375", i8, i8, %class.scoped_refptr.1336, i32, i32 }
%"class.WTF::RefCounted.1375" = type { %"class.base::RefCounted.1376" }
%"class.base::RefCounted.1376" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1337" }
%"class.std::__1::vector.1337" = type { %"class.std::__1::__vector_base.1338" }
%"class.std::__1::__vector_base.1338" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1353" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1339, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1346", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1339 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1340, i32, %"class.absl::optional.1341", i8, i32 }
%class.sk_sp.1340 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1341" = type { %"class.absl::optional_internal::optional_data.1342" }
%"class.absl::optional_internal::optional_data.1342" = type { %"class.absl::optional_internal::optional_data_base.1343" }
%"class.absl::optional_internal::optional_data_base.1343" = type { %"class.absl::optional_internal::optional_data_dtor_base.1344" }
%"class.absl::optional_internal::optional_data_dtor_base.1344" = type { i8, %union.anon.1345 }
%union.anon.1345 = type { %struct.SkRect }
%"class.std::__1::vector.1346" = type { %"class.std::__1::__vector_base.1347" }
%"class.std::__1::__vector_base.1347" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1348" }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.1349" }
%"struct.std::__1::__compressed_pair_elem.1349" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1358" = type { %"class.std::__1::__compressed_pair.1359" }
%"class.std::__1::__compressed_pair.1359" = type { %"struct.std::__1::__compressed_pair_elem.1360" }
%"struct.std::__1::__compressed_pair_elem.1360" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.1364" }
%"class.base::internal::flat_tree.1364" = type { %"class.std::__1::vector.1365" }
%"class.std::__1::vector.1365" = type { %"class.std::__1::__vector_base.1366" }
%"class.std::__1::__vector_base.1366" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1367" }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.1368" }
%"struct.std::__1::__compressed_pair_elem.1368" = type { i32* }
%class.scoped_refptr.1372 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1373 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1385" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1282, %"class.absl::optional.1377", %class.scoped_refptr.1382, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1377" = type { %"class.absl::optional_internal::optional_data.1378" }
%"class.absl::optional_internal::optional_data.1378" = type { %"class.absl::optional_internal::optional_data_base.1379" }
%"class.absl::optional_internal::optional_data_base.1379" = type { %"class.absl::optional_internal::optional_data_dtor_base.1380" }
%"class.absl::optional_internal::optional_data_dtor_base.1380" = type { i8, [3 x i8], %union.anon.1381 }
%union.anon.1381 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1385" = type { %"class.std::__1::__compressed_pair.1386" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.1387" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1388", i32, [4 x i8] }>
%"class.WTF::Vector.1388" = type { %"class.WTF::VectorBuffer.1389" }
%"class.WTF::VectorBuffer.1389" = type { %"class.WTF::VectorBufferBase.1390" }
%"class.WTF::VectorBufferBase.1390" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1396 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1400" = type { %"class.std::__1::__compressed_pair.1401" }
%"class.std::__1::__compressed_pair.1401" = type { %"struct.std::__1::__compressed_pair_elem.1402" }
%"struct.std::__1::__compressed_pair_elem.1402" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1282, %class.scoped_refptr.1336, %class.scoped_refptr.1335 }
%"class.absl::optional.1406" = type { %"class.absl::optional_internal::optional_data.1407" }
%"class.absl::optional_internal::optional_data.1407" = type { %"class.absl::optional_internal::optional_data_base.1408" }
%"class.absl::optional_internal::optional_data_base.1408" = type { %"class.absl::optional_internal::optional_data_dtor_base.1409" }
%"class.absl::optional_internal::optional_data_dtor_base.1409" = type { i8, %union.anon.1410 }
%union.anon.1410 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1382 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1383", [4 x i8] }
%"class.WTF::RefCounted.1383" = type { %"class.base::RefCounted.1384" }
%"class.base::RefCounted.1384" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1411" = type { %"class.std::__1::__compressed_pair.1412" }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.1413" }
%"struct.std::__1::__compressed_pair_elem.1413" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2524" = type { %"class.blink::MemberBase.2525" }
%"class.blink::MemberBase.2525" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2526" = type { %"class.WTF::HashSet.2529" }
%"class.WTF::HashSet.2529" = type { %"class.WTF::HashTable.2530" }
%"class.WTF::HashTable.2530" = type <{ %"class.blink::Member.2532"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2532" = type opaque
%"class.blink::HeapHashSet.2533" = type { %"class.WTF::HashSet.2536" }
%"class.WTF::HashSet.2536" = type { %"class.WTF::HashTable.2537" }
%"class.WTF::HashTable.2537" = type <{ %"class.blink::Member.2539"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2539" = type { %"class.blink::MemberBase.2540" }
%"class.blink::MemberBase.2540" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2706", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2717", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.21" }
%"class.blink::Member.2706" = type { %"class.blink::MemberBase.2707" }
%"class.blink::MemberBase.2707" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2708", %"class.blink::Member.2709", %"class.blink::Member.2711", %"class.blink::Member.2713", %"class.blink::Member.2715", %"class.WTF::Vector.102", i16, %class.scoped_refptr.1498 }
%"class.blink::ThreadState::PrefinalizerRegistration.2708" = type { i8 }
%"class.blink::Member.2709" = type { %"class.blink::MemberBase.2710" }
%"class.blink::MemberBase.2710" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2711" = type { %"class.blink::MemberBase.2712" }
%"class.blink::MemberBase.2712" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2713" = type { %"class.blink::MemberBase.2714" }
%"class.blink::MemberBase.2714" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2715" = type { %"class.blink::MemberBase.2716" }
%"class.blink::MemberBase.2716" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2717" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2718", { i64, i64 } }
%"class.blink::WeakMember.2718" = type { %"class.blink::MemberBase.2540" }
%"class.std::__1::unique_ptr.2541" = type { %"class.std::__1::__compressed_pair.2542" }
%"class.std::__1::__compressed_pair.2542" = type { %"struct.std::__1::__compressed_pair_elem.2543" }
%"struct.std::__1::__compressed_pair_elem.2543" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2547" = type { %"class.blink::MemberBase.2548" }
%"class.blink::MemberBase.2548" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2551", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2551" = type { %"class.WTF::HashTable.2552" }
%"class.WTF::HashTable.2552" = type <{ %"struct.WTF::KeyValuePair.2554"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2554" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2555", i32, i32 }
%"class.WTF::Vector.2555" = type { %"class.WTF::VectorBuffer.2556" }
%"class.WTF::VectorBuffer.2556" = type { %"class.WTF::VectorBufferBase.2557" }
%"class.WTF::VectorBufferBase.2557" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2559" = type { %"class.WTF::LinkedHashSet.2562" }
%"class.WTF::LinkedHashSet.2562" = type { %"class.WTF::HashMap.2563", %"class.WTF::VectorBackedLinkedList.2567" }
%"class.WTF::HashMap.2563" = type { %"class.WTF::HashTable.2564" }
%"class.WTF::HashTable.2564" = type <{ %"struct.WTF::KeyValuePair.2566"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2566" = type opaque
%"class.WTF::VectorBackedLinkedList.2567" = type { %"class.WTF::Vector.2568", i32, i32 }
%"class.WTF::Vector.2568" = type { %"class.WTF::VectorBuffer.2569" }
%"class.WTF::VectorBuffer.2569" = type { %"class.WTF::VectorBufferBase.2570" }
%"class.WTF::VectorBufferBase.2570" = type { %"class.WTF::VectorBackedLinkedListNode.2571"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2571" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2573" = type { %"class.std::__1::__compressed_pair.2574" }
%"class.std::__1::__compressed_pair.2574" = type { %"struct.std::__1::__compressed_pair_elem.2575" }
%"struct.std::__1::__compressed_pair_elem.2575" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2579" = type { %"class.std::__1::__compressed_pair.2580" }
%"class.std::__1::__compressed_pair.2580" = type { %"struct.std::__1::__compressed_pair_elem.2581" }
%"struct.std::__1::__compressed_pair_elem.2581" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2582, %class.scoped_refptr.2582, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2637", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2642", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2582 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2583", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2590" }
%"class.WTF::RefCounted.2583" = type { %"class.base::RefCounted.2584" }
%"class.base::RefCounted.2584" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2585", i32, [4 x i8] }>
%"class.WTF::Vector.2585" = type { %"class.WTF::VectorBuffer.2586" }
%"class.WTF::VectorBuffer.2586" = type { %"class.WTF::VectorBufferBase.2587" }
%"class.WTF::VectorBufferBase.2587" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2590" = type { %"class.WTF::VectorBuffer.2591" }
%"class.WTF::VectorBuffer.2591" = type { %"class.WTF::VectorBufferBase.2592" }
%"class.WTF::VectorBufferBase.2592" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2593", %"class.std::__1::unique_ptr.2609", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2593" = type { %"class.std::__1::__compressed_pair.2594" }
%"class.std::__1::__compressed_pair.2594" = type { %"struct.std::__1::__compressed_pair_elem.2595" }
%"struct.std::__1::__compressed_pair_elem.2595" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2596", %"class.WTF::Vector.2601", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2596" = type { %"class.WTF::VectorBuffer.2597" }
%"class.WTF::VectorBuffer.2597" = type { %"class.WTF::VectorBufferBase.2598" }
%"class.WTF::VectorBufferBase.2598" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2601" = type { %"class.WTF::VectorBuffer.2602" }
%"class.WTF::VectorBuffer.2602" = type { %"class.WTF::VectorBufferBase.2603" }
%"class.WTF::VectorBufferBase.2603" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2609" = type { %"class.std::__1::__compressed_pair.2610" }
%"class.std::__1::__compressed_pair.2610" = type { %"struct.std::__1::__compressed_pair_elem.2611" }
%"struct.std::__1::__compressed_pair_elem.2611" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2612", %"class.absl::optional.2612" }
%"class.absl::optional.2612" = type { %"class.absl::optional_internal::optional_data.2613" }
%"class.absl::optional_internal::optional_data.2613" = type { %"class.absl::optional_internal::optional_data_base.2614" }
%"class.absl::optional_internal::optional_data_base.2614" = type { %"class.absl::optional_internal::optional_data_dtor_base.2615" }
%"class.absl::optional_internal::optional_data_dtor_base.2615" = type { i8, [3 x i8], %union.anon.2616 }
%union.anon.2616 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2590"*, %"class.absl::optional.2622", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2622" = type { %"class.absl::optional_internal::optional_data.2623" }
%"class.absl::optional_internal::optional_data.2623" = type { %"class.absl::optional_internal::optional_data_base.2624" }
%"class.absl::optional_internal::optional_data_base.2624" = type { %"class.absl::optional_internal::optional_data_dtor_base.2625" }
%"class.absl::optional_internal::optional_data_dtor_base.2625" = type { i8, %union.anon.2626 }
%union.anon.2626 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2627", %"class.WTF::Vector.2632" }
%"class.WTF::Vector.2627" = type { %"class.WTF::VectorBuffer.2628" }
%"class.WTF::VectorBuffer.2628" = type { %"class.WTF::VectorBufferBase.2629", [128 x i8] }
%"class.WTF::VectorBufferBase.2629" = type { i32*, i32, i32 }
%"class.WTF::Vector.2632" = type { %"class.WTF::VectorBuffer.2633" }
%"class.WTF::VectorBuffer.2633" = type { %"class.WTF::VectorBufferBase.2634", [128 x i8] }
%"class.WTF::VectorBufferBase.2634" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2637" = type { %"class.WTF::VectorBuffer.2638" }
%"class.WTF::VectorBuffer.2638" = type { %"class.WTF::VectorBufferBase.2639" }
%"class.WTF::VectorBufferBase.2639" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2642" = type { %"class.WTF::HashTable.2643" }
%"class.WTF::HashTable.2643" = type <{ %"struct.WTF::KeyValuePair.2646"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2646" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2647", %"class.WTF::Vector.2652" }
%"class.WTF::HashMap.2647" = type { %"class.WTF::HashTable.2648" }
%"class.WTF::HashTable.2648" = type <{ %"struct.WTF::KeyValuePair.2651"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2651" = type opaque
%"class.WTF::Vector.2652" = type { %"class.WTF::VectorBuffer.2653" }
%"class.WTF::VectorBuffer.2653" = type { %"class.WTF::VectorBufferBase.2654" }
%"class.WTF::VectorBufferBase.2654" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2660" = type { %"class.std::__1::__compressed_pair.2661" }
%"class.std::__1::__compressed_pair.2661" = type { %"struct.std::__1::__compressed_pair_elem.2662" }
%"struct.std::__1::__compressed_pair_elem.2662" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2666" = type { %"class.WTF::VectorBuffer.2667" }
%"class.WTF::VectorBuffer.2667" = type { %"class.WTF::VectorBufferBase.2668" }
%"class.WTF::VectorBufferBase.2668" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2671 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2672" = type { %"class.blink::MemberBase.2673" }
%"class.blink::MemberBase.2673" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2674" = type { %"class.blink::MemberBase.2675" }
%"class.blink::MemberBase.2675" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2676" = type { %"class.blink::MemberBase.2677" }
%"class.blink::MemberBase.2677" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2678" = type { %"class.WTF::HashSet.2681" }
%"class.WTF::HashSet.2681" = type { %"class.WTF::HashTable.2682" }
%"class.WTF::HashTable.2682" = type <{ %"class.blink::WeakMember.2684"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2684" = type opaque
%"class.blink::HeapHashSet.2685" = type { %"class.WTF::HashSet.2688" }
%"class.WTF::HashSet.2688" = type { %"class.WTF::HashTable.2689" }
%"class.WTF::HashTable.2689" = type <{ %"class.blink::WeakMember.2691"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2691" = type opaque
%"class.std::__1::unique_ptr.2692" = type { %"class.std::__1::__compressed_pair.2693" }
%"class.std::__1::__compressed_pair.2693" = type { %"struct.std::__1::__compressed_pair_elem.2694" }
%"struct.std::__1::__compressed_pair_elem.2694" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2698" = type { %"class.std::__1::__compressed_pair.2699" }
%"class.std::__1::__compressed_pair.2699" = type { %"struct.std::__1::__compressed_pair_elem.2700" }
%"struct.std::__1::__compressed_pair_elem.2700" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1902", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.2092" = type { %"class.blink::MemberBase.2093" }
%"class.blink::MemberBase.2093" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2094" = type { %"class.blink::MemberBase.2095" }
%"class.blink::MemberBase.2095" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.2096" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2098" = type { %"class.blink::MemberBase.2099" }
%"class.blink::MemberBase.2099" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2100" = type { %"class.blink::MemberBase.2101" }
%"class.blink::MemberBase.2101" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.2111", %"class.blink::HeapListHashSet.2122", %"class.blink::HeapListHashSet.2133", %"class.blink::HeapListHashSet.2144", %"class.blink::HeapListHashSet.2155", %"class.blink::HeapListHashSet.2166", %"class.blink::HeapListHashSet.2177", %"class.blink::HeapListHashSet.2188", %"class.blink::HeapListHashSet.2199", %"class.blink::HeapListHashSet.2210", %"class.blink::HeapListHashSet.2221", %"class.blink::HeapListHashSet.2232", %"class.blink::HeapListHashSet.2243", %"class.blink::HeapListHashSet.2254", %"class.blink::HeapListHashSet.2265", %"class.blink::HeapListHashSet.2276", %"class.blink::HeapListHashSet.2287", %"class.blink::HeapListHashSet.2298", %"class.blink::HeapListHashSet.2309" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.2107", %"class.blink::Member.2109", %"class.blink::Member.2109", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2107" = type <{ %"class.blink::Member.2109"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2109" = type { %"class.blink::MemberBase.2110" }
%"class.blink::MemberBase.2110" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.2323", %"class.blink::Member.2109", %"class.blink::Member.2109" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.2111" = type { %"class.WTF::ListHashSet.base.2121", [7 x i8] }
%"class.WTF::ListHashSet.base.2121" = type <{ %"class.WTF::HashTable.2116", %"class.blink::Member.2118", %"class.blink::Member.2118", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2116" = type <{ %"class.blink::Member.2118"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2118" = type { %"class.blink::MemberBase.2119" }
%"class.blink::MemberBase.2119" = type { %"class.blink::HeapListHashSetNode.2120"* }
%"class.blink::HeapListHashSetNode.2120" = type { %"class.blink::Member.2491", %"class.blink::Member.2118", %"class.blink::Member.2118" }
%"class.blink::Member.2491" = type { %"class.blink::MemberBase.2492" }
%"class.blink::MemberBase.2492" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2122" = type { %"class.WTF::ListHashSet.base.2132", [7 x i8] }
%"class.WTF::ListHashSet.base.2132" = type <{ %"class.WTF::HashTable.2127", %"class.blink::Member.2129", %"class.blink::Member.2129", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2127" = type <{ %"class.blink::Member.2129"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2129" = type { %"class.blink::MemberBase.2130" }
%"class.blink::MemberBase.2130" = type { %"class.blink::HeapListHashSetNode.2131"* }
%"class.blink::HeapListHashSetNode.2131" = type { %"class.blink::Member.2487", %"class.blink::Member.2129", %"class.blink::Member.2129" }
%"class.blink::Member.2487" = type { %"class.blink::MemberBase.2488" }
%"class.blink::MemberBase.2488" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2133" = type { %"class.WTF::ListHashSet.base.2143", [7 x i8] }
%"class.WTF::ListHashSet.base.2143" = type <{ %"class.WTF::HashTable.2138", %"class.blink::Member.2140", %"class.blink::Member.2140", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2138" = type <{ %"class.blink::Member.2140"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2140" = type { %"class.blink::MemberBase.2141" }
%"class.blink::MemberBase.2141" = type { %"class.blink::HeapListHashSetNode.2142"* }
%"class.blink::HeapListHashSetNode.2142" = type { %"class.blink::Member.2483", %"class.blink::Member.2140", %"class.blink::Member.2140" }
%"class.blink::Member.2483" = type { %"class.blink::MemberBase.2484" }
%"class.blink::MemberBase.2484" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2144" = type { %"class.WTF::ListHashSet.base.2154", [7 x i8] }
%"class.WTF::ListHashSet.base.2154" = type <{ %"class.WTF::HashTable.2149", %"class.blink::Member.2151", %"class.blink::Member.2151", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2149" = type <{ %"class.blink::Member.2151"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2151" = type { %"class.blink::MemberBase.2152" }
%"class.blink::MemberBase.2152" = type { %"class.blink::HeapListHashSetNode.2153"* }
%"class.blink::HeapListHashSetNode.2153" = type { %"class.blink::Member.2479", %"class.blink::Member.2151", %"class.blink::Member.2151" }
%"class.blink::Member.2479" = type { %"class.blink::MemberBase.2480" }
%"class.blink::MemberBase.2480" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2155" = type { %"class.WTF::ListHashSet.base.2165", [7 x i8] }
%"class.WTF::ListHashSet.base.2165" = type <{ %"class.WTF::HashTable.2160", %"class.blink::Member.2162", %"class.blink::Member.2162", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2160" = type <{ %"class.blink::Member.2162"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::HeapListHashSetNode.2164"* }
%"class.blink::HeapListHashSetNode.2164" = type { %"class.blink::Member.2475", %"class.blink::Member.2162", %"class.blink::Member.2162" }
%"class.blink::Member.2475" = type { %"class.blink::MemberBase.2476" }
%"class.blink::MemberBase.2476" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2166" = type { %"class.WTF::ListHashSet.base.2176", [7 x i8] }
%"class.WTF::ListHashSet.base.2176" = type <{ %"class.WTF::HashTable.2171", %"class.blink::Member.2173", %"class.blink::Member.2173", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2171" = type <{ %"class.blink::Member.2173"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2173" = type { %"class.blink::MemberBase.2174" }
%"class.blink::MemberBase.2174" = type { %"class.blink::HeapListHashSetNode.2175"* }
%"class.blink::HeapListHashSetNode.2175" = type { %"class.blink::Member.2471", %"class.blink::Member.2173", %"class.blink::Member.2173" }
%"class.blink::Member.2471" = type { %"class.blink::MemberBase.2472" }
%"class.blink::MemberBase.2472" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2177" = type { %"class.WTF::ListHashSet.base.2187", [7 x i8] }
%"class.WTF::ListHashSet.base.2187" = type <{ %"class.WTF::HashTable.2182", %"class.blink::Member.2184", %"class.blink::Member.2184", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2182" = type <{ %"class.blink::Member.2184"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2184" = type { %"class.blink::MemberBase.2185" }
%"class.blink::MemberBase.2185" = type { %"class.blink::HeapListHashSetNode.2186"* }
%"class.blink::HeapListHashSetNode.2186" = type { %"class.blink::Member.2467", %"class.blink::Member.2184", %"class.blink::Member.2184" }
%"class.blink::Member.2467" = type { %"class.blink::MemberBase.2468" }
%"class.blink::MemberBase.2468" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2188" = type { %"class.WTF::ListHashSet.base.2198", [7 x i8] }
%"class.WTF::ListHashSet.base.2198" = type <{ %"class.WTF::HashTable.2193", %"class.blink::Member.2195", %"class.blink::Member.2195", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2193" = type <{ %"class.blink::Member.2195"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2195" = type { %"class.blink::MemberBase.2196" }
%"class.blink::MemberBase.2196" = type { %"class.blink::HeapListHashSetNode.2197"* }
%"class.blink::HeapListHashSetNode.2197" = type { %"class.blink::Member.2463", %"class.blink::Member.2195", %"class.blink::Member.2195" }
%"class.blink::Member.2463" = type { %"class.blink::MemberBase.2464" }
%"class.blink::MemberBase.2464" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2199" = type { %"class.WTF::ListHashSet.base.2209", [7 x i8] }
%"class.WTF::ListHashSet.base.2209" = type <{ %"class.WTF::HashTable.2204", %"class.blink::Member.2206", %"class.blink::Member.2206", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2204" = type <{ %"class.blink::Member.2206"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2206" = type { %"class.blink::MemberBase.2207" }
%"class.blink::MemberBase.2207" = type { %"class.blink::HeapListHashSetNode.2208"* }
%"class.blink::HeapListHashSetNode.2208" = type { %"class.blink::Member.2459", %"class.blink::Member.2206", %"class.blink::Member.2206" }
%"class.blink::Member.2459" = type { %"class.blink::MemberBase.2460" }
%"class.blink::MemberBase.2460" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2210" = type { %"class.WTF::ListHashSet.base.2220", [7 x i8] }
%"class.WTF::ListHashSet.base.2220" = type <{ %"class.WTF::HashTable.2215", %"class.blink::Member.2217", %"class.blink::Member.2217", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2215" = type <{ %"class.blink::Member.2217"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2217" = type { %"class.blink::MemberBase.2218" }
%"class.blink::MemberBase.2218" = type { %"class.blink::HeapListHashSetNode.2219"* }
%"class.blink::HeapListHashSetNode.2219" = type { %"class.blink::Member.2336", %"class.blink::Member.2217", %"class.blink::Member.2217" }
%"class.blink::HeapListHashSet.2221" = type { %"class.WTF::ListHashSet.base.2231", [7 x i8] }
%"class.WTF::ListHashSet.base.2231" = type <{ %"class.WTF::HashTable.2226", %"class.blink::Member.2228", %"class.blink::Member.2228", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2226" = type <{ %"class.blink::Member.2228"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2228" = type { %"class.blink::MemberBase.2229" }
%"class.blink::MemberBase.2229" = type { %"class.blink::HeapListHashSetNode.2230"* }
%"class.blink::HeapListHashSetNode.2230" = type { %"class.blink::Member.2453", %"class.blink::Member.2228", %"class.blink::Member.2228" }
%"class.blink::Member.2453" = type { %"class.blink::MemberBase.2454" }
%"class.blink::MemberBase.2454" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2232" = type { %"class.WTF::ListHashSet.base.2242", [7 x i8] }
%"class.WTF::ListHashSet.base.2242" = type <{ %"class.WTF::HashTable.2237", %"class.blink::Member.2239", %"class.blink::Member.2239", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2237" = type <{ %"class.blink::Member.2239"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2239" = type { %"class.blink::MemberBase.2240" }
%"class.blink::MemberBase.2240" = type { %"class.blink::HeapListHashSetNode.2241"* }
%"class.blink::HeapListHashSetNode.2241" = type { %"class.blink::Member.2449", %"class.blink::Member.2239", %"class.blink::Member.2239" }
%"class.blink::Member.2449" = type { %"class.blink::MemberBase.2450" }
%"class.blink::MemberBase.2450" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2243" = type { %"class.WTF::ListHashSet.base.2253", [7 x i8] }
%"class.WTF::ListHashSet.base.2253" = type <{ %"class.WTF::HashTable.2248", %"class.blink::Member.2250", %"class.blink::Member.2250", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2248" = type <{ %"class.blink::Member.2250"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2250" = type { %"class.blink::MemberBase.2251" }
%"class.blink::MemberBase.2251" = type { %"class.blink::HeapListHashSetNode.2252"* }
%"class.blink::HeapListHashSetNode.2252" = type { %"class.blink::Member.2445", %"class.blink::Member.2250", %"class.blink::Member.2250" }
%"class.blink::Member.2445" = type { %"class.blink::MemberBase.2446" }
%"class.blink::MemberBase.2446" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2254" = type { %"class.WTF::ListHashSet.base.2264", [7 x i8] }
%"class.WTF::ListHashSet.base.2264" = type <{ %"class.WTF::HashTable.2259", %"class.blink::Member.2261", %"class.blink::Member.2261", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2259" = type <{ %"class.blink::Member.2261"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2261" = type { %"class.blink::MemberBase.2262" }
%"class.blink::MemberBase.2262" = type { %"class.blink::HeapListHashSetNode.2263"* }
%"class.blink::HeapListHashSetNode.2263" = type { %"class.blink::Member.2441", %"class.blink::Member.2261", %"class.blink::Member.2261" }
%"class.blink::Member.2441" = type { %"class.blink::MemberBase.2442" }
%"class.blink::MemberBase.2442" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2265" = type { %"class.WTF::ListHashSet.base.2275", [7 x i8] }
%"class.WTF::ListHashSet.base.2275" = type <{ %"class.WTF::HashTable.2270", %"class.blink::Member.2272", %"class.blink::Member.2272", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2270" = type <{ %"class.blink::Member.2272"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2272" = type { %"class.blink::MemberBase.2273" }
%"class.blink::MemberBase.2273" = type { %"class.blink::HeapListHashSetNode.2274"* }
%"class.blink::HeapListHashSetNode.2274" = type { %"class.blink::Member.2437", %"class.blink::Member.2272", %"class.blink::Member.2272" }
%"class.blink::Member.2437" = type { %"class.blink::MemberBase.2438" }
%"class.blink::MemberBase.2438" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2276" = type { %"class.WTF::ListHashSet.base.2286", [7 x i8] }
%"class.WTF::ListHashSet.base.2286" = type <{ %"class.WTF::HashTable.2281", %"class.blink::Member.2283", %"class.blink::Member.2283", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2281" = type <{ %"class.blink::Member.2283"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2283" = type { %"class.blink::MemberBase.2284" }
%"class.blink::MemberBase.2284" = type { %"class.blink::HeapListHashSetNode.2285"* }
%"class.blink::HeapListHashSetNode.2285" = type { %"class.blink::Member.2433", %"class.blink::Member.2283", %"class.blink::Member.2283" }
%"class.blink::Member.2433" = type { %"class.blink::MemberBase.2434" }
%"class.blink::MemberBase.2434" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2287" = type { %"class.WTF::ListHashSet.base.2297", [7 x i8] }
%"class.WTF::ListHashSet.base.2297" = type <{ %"class.WTF::HashTable.2292", %"class.blink::Member.2294", %"class.blink::Member.2294", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2292" = type <{ %"class.blink::Member.2294"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2294" = type { %"class.blink::MemberBase.2295" }
%"class.blink::MemberBase.2295" = type { %"class.blink::HeapListHashSetNode.2296"* }
%"class.blink::HeapListHashSetNode.2296" = type { %"class.blink::Member.2429", %"class.blink::Member.2294", %"class.blink::Member.2294" }
%"class.blink::Member.2429" = type { %"class.blink::MemberBase.2430" }
%"class.blink::MemberBase.2430" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2298" = type { %"class.WTF::ListHashSet.base.2308", [7 x i8] }
%"class.WTF::ListHashSet.base.2308" = type <{ %"class.WTF::HashTable.2303", %"class.blink::Member.2305", %"class.blink::Member.2305", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2303" = type <{ %"class.blink::Member.2305"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2305" = type { %"class.blink::MemberBase.2306" }
%"class.blink::MemberBase.2306" = type { %"class.blink::HeapListHashSetNode.2307"* }
%"class.blink::HeapListHashSetNode.2307" = type { %"class.blink::Member.2338", %"class.blink::Member.2305", %"class.blink::Member.2305" }
%"class.blink::HeapListHashSet.2309" = type { %"class.WTF::ListHashSet.base.2319", [7 x i8] }
%"class.WTF::ListHashSet.base.2319" = type <{ %"class.WTF::HashTable.2314", %"class.blink::Member.2316", %"class.blink::Member.2316", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2314" = type <{ %"class.blink::Member.2316"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2316" = type { %"class.blink::MemberBase.2317" }
%"class.blink::MemberBase.2317" = type { %"class.blink::HeapListHashSetNode.2318"* }
%"class.blink::HeapListHashSetNode.2318" = type { %"class.blink::Member.2321", %"class.blink::Member.2316", %"class.blink::Member.2316" }
%class.scoped_refptr.2320 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2321" = type { %"class.blink::MemberBase.2322" }
%"class.blink::MemberBase.2322" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2323" = type { %"class.blink::MemberBase.2324" }
%"class.blink::MemberBase.2324" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.817", %"class.WTF::Vector.1438", i32, [4 x i8], %"class.blink::HeapHashMap.2327", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.2327" = type { %"class.WTF::HashMap.2330" }
%"class.WTF::HashMap.2330" = type { %"class.WTF::HashTable.2331" }
%"class.WTF::HashTable.2331" = type <{ %"struct.WTF::KeyValuePair.2333"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2333" = type opaque
%"class.blink::Member.2334" = type { %"class.blink::MemberBase.2335" }
%"class.blink::MemberBase.2335" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2336" = type { %"class.blink::MemberBase.2337" }
%"class.blink::MemberBase.2337" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2338" = type { %"class.blink::MemberBase.2339" }
%"class.blink::MemberBase.2339" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2342" = type { %"class.blink::MemberBase.2343" }
%"class.blink::MemberBase.2343" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2344" = type { %"class.blink::MemberBase.2345" }
%"class.blink::MemberBase.2345" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.2346" = type { %"class.blink::Member.2347" }
%"class.blink::Member.2347" = type { %"class.blink::MemberBase.2348" }
%"class.blink::MemberBase.2348" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3310" }
%"class.mojo::Remote.3310" = type { %"class.mojo::internal::InterfacePtrState.3311" }
%"class.mojo::internal::InterfacePtrState.3311" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3312" }
%"class.std::__1::unique_ptr.3312" = type { %"class.std::__1::__compressed_pair.3313" }
%"class.std::__1::__compressed_pair.3313" = type { %"struct.std::__1::__compressed_pair_elem.3314" }
%"struct.std::__1::__compressed_pair_elem.3314" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2349" = type { %"class.std::__1::__compressed_pair.2350" }
%"class.std::__1::__compressed_pair.2350" = type { %"struct.std::__1::__compressed_pair_elem.2351" }
%"struct.std::__1::__compressed_pair_elem.2351" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2352, %"class.blink::WebVector.2354", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2352 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2353", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2353" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2362, i8, [7 x i8] }>
%class.scoped_refptr.2362 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2363", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2363" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2364" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2364" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2371" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2372" = type { %"class.std::__1::__compressed_pair.2373" }
%"class.std::__1::__compressed_pair.2373" = type { %"struct.std::__1::__compressed_pair_elem.2374" }
%"struct.std::__1::__compressed_pair_elem.2374" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2378" = type { %"class.std::__1::__compressed_pair.2379" }
%"class.std::__1::__compressed_pair.2379" = type { %"struct.std::__1::__compressed_pair_elem.2380" }
%"struct.std::__1::__compressed_pair_elem.2380" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2384" }
%"class.blink::Member.2384" = type { %"class.blink::MemberBase.2385" }
%"class.blink::MemberBase.2385" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3320" }
%"class.mojo::AssociatedRemote.3320" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3321" }
%"class.mojo::internal::AssociatedInterfacePtrState.3321" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3322" }
%"class.std::__1::unique_ptr.3322" = type { %"class.std::__1::__compressed_pair.3323" }
%"class.std::__1::__compressed_pair.3323" = type { %"struct.std::__1::__compressed_pair_elem.3324" }
%"struct.std::__1::__compressed_pair_elem.3324" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2386" = type { %"class.blink::Member.2387" }
%"class.blink::Member.2387" = type { %"class.blink::MemberBase.2388" }
%"class.blink::MemberBase.2388" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3330" }
%"class.mojo::AssociatedRemote.3330" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3331" }
%"class.mojo::internal::AssociatedInterfacePtrState.3331" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3332" }
%"class.std::__1::unique_ptr.3332" = type { %"class.std::__1::__compressed_pair.3333" }
%"class.std::__1::__compressed_pair.3333" = type { %"struct.std::__1::__compressed_pair_elem.3334" }
%"struct.std::__1::__compressed_pair_elem.3334" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2389" }
%"class.blink::Member.2389" = type { %"class.blink::MemberBase.2390" }
%"class.blink::MemberBase.2390" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3340", %"class.blink::Member.817", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3340" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3341" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.259" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3341" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2391" = type { %"class.blink::Member.2392" }
%"class.blink::Member.2392" = type { %"class.blink::MemberBase.2393" }
%"class.blink::MemberBase.2393" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3344", %"class.blink::Member.817", %"class.mojo::AssociatedReceiver.3345" }
%"class.blink::ThreadState::PrefinalizerRegistration.3344" = type { i8 }
%"class.mojo::AssociatedReceiver.3345" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3346" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3346" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2394" }
%"class.blink::Member.2394" = type { %"class.blink::MemberBase.2395" }
%"class.blink::MemberBase.2395" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3349", %"class.blink::Member.817", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3349" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.141, %"class.std::__1::unique_ptr.259", %"class.base::WeakPtrFactory.3350" }
%"class.base::WeakPtrFactory.3350" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2396" = type { %"class.blink::Member.2397" }
%"class.blink::Member.2397" = type { %"class.blink::MemberBase.2398" }
%"class.blink::MemberBase.2398" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3353", %"class.blink::Member.817", %"class.mojo::AssociatedReceiver.3354" }
%"class.blink::ThreadState::PrefinalizerRegistration.3353" = type { i8 }
%"class.mojo::AssociatedReceiver.3354" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3355" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3355" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2399" = type { %"class.blink::MemberBase.2400" }
%"class.blink::MemberBase.2400" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2401" = type { %"class.blink::MemberBase.2402" }
%"class.blink::MemberBase.2402" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2403" = type { %"class.blink::MemberBase.2404" }
%"class.blink::MemberBase.2404" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2405" = type { %"class.blink::MemberBase.2406" }
%"class.blink::MemberBase.2406" = type { %"class.blink::HeapHashMap.2407"* }
%"class.blink::HeapHashMap.2407" = type opaque
%"class.mojo::StructPtr.2408" = type { %"class.std::__1::unique_ptr.2409" }
%"class.std::__1::unique_ptr.2409" = type { %"class.std::__1::__compressed_pair.2410" }
%"class.std::__1::__compressed_pair.2410" = type { %"struct.std::__1::__compressed_pair_elem.2411" }
%"struct.std::__1::__compressed_pair_elem.2411" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2412", %"class.mojo::InlinedStructPtr.1795" }
%"class.mojo::InlinedStructPtr.2412" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1795" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2416" = type { %"class.blink::MemberBase.2417" }
%"class.blink::MemberBase.2417" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2418" = type { %"class.absl::optional_internal::optional_data.2419" }
%"class.absl::optional_internal::optional_data.2419" = type { %"class.absl::optional_internal::optional_data_base.2420" }
%"class.absl::optional_internal::optional_data_base.2420" = type { %"class.absl::optional_internal::optional_data_dtor_base.2421" }
%"class.absl::optional_internal::optional_data_dtor_base.2421" = type { i8, %union.anon.2422 }
%union.anon.2422 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.130", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.2033" = type { %"class.base::internal::flat_tree.2034" }
%"class.base::internal::flat_tree.2034" = type { %"class.std::__1::vector.2035" }
%"class.std::__1::vector.2035" = type { %"class.std::__1::__vector_base.2036" }
%"class.std::__1::__vector_base.2036" = type { %"struct.std::__1::pair.2037"*, %"struct.std::__1::pair.2037"*, %"class.std::__1::__compressed_pair.2038" }
%"struct.std::__1::pair.2037" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2038" = type { %"struct.std::__1::__compressed_pair_elem.2039" }
%"struct.std::__1::__compressed_pair_elem.2039" = type { %"struct.std::__1::pair.2037"* }
%"class.blink::Member.2043" = type { %"class.blink::MemberBase.2044" }
%"class.blink::MemberBase.2044" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.2045" = type { %"class.absl::optional_internal::optional_data.2046" }
%"class.absl::optional_internal::optional_data.2046" = type { %"class.absl::optional_internal::optional_data_base.2047" }
%"class.absl::optional_internal::optional_data_base.2047" = type { %"class.absl::optional_internal::optional_data_dtor_base.2048" }
%"class.absl::optional_internal::optional_data_dtor_base.2048" = type { i8, %union.anon.2049 }
%union.anon.2049 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1875" = type { %"class.absl::optional_internal::optional_data.1876" }
%"class.absl::optional_internal::optional_data.1876" = type { %"class.absl::optional_internal::optional_data_base.1877" }
%"class.absl::optional_internal::optional_data_base.1877" = type { %"class.absl::optional_internal::optional_data_dtor_base.1878" }
%"class.absl::optional_internal::optional_data_dtor_base.1878" = type { i8, %union.anon.1879 }
%union.anon.1879 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2050" }
%"class.blink::HeapHashSet.2050" = type { %"class.WTF::HashSet.2053" }
%"class.WTF::HashSet.2053" = type { %"class.WTF::HashTable.2054" }
%"class.WTF::HashTable.2054" = type <{ %"class.blink::WeakMember.2056"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2056" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.138" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140" }
%"class.WTF::VectorBufferBase.140" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.309" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.317", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.394", i32, i8, [3 x i8], %"class.blink::HeapVector.396", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.404", %"class.blink::Member.406", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.415", %"class.blink::Member.474", %"class.blink::Member.476", i8 }>
%"class.blink::Supplementable.317" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.318" }
%"class.blink::HeapHashMap.318" = type { %"class.WTF::HashMap.321" }
%"class.WTF::HashMap.321" = type { %"class.WTF::HashTable.322" }
%"class.WTF::HashTable.322" = type <{ %"struct.WTF::KeyValuePair.324"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.324" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.332" }
%"class.blink::Supplementable.332" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.333" }
%"class.blink::HeapHashMap.333" = type { %"class.WTF::HashMap.336" }
%"class.WTF::HashMap.336" = type { %"class.WTF::HashTable.337" }
%"class.WTF::HashTable.337" = type <{ %"struct.WTF::KeyValuePair.339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.339" = type { i8*, %"class.blink::Member.3284" }
%"class.blink::Member.3284" = type { %"class.blink::MemberBase.3285" }
%"class.blink::MemberBase.3285" = type { %"class.blink::Supplement.3286"* }
%"class.blink::Supplement.3286" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3287" }
%"class.blink::Member.3287" = type { %"class.blink::MemberBase.3288" }
%"class.blink::MemberBase.3288" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.340, %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.376", %"class.std::__1::unique_ptr.376", %"class.blink::Member.388", i32, [4 x i8], %"class.WTF::HashSet.390", i32, i32 }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.352", %"class.std::__1::map.363", %"class.std::__1::map.372"* }
%"class.std::__1::map.352" = type { %"class.std::__1::__tree.353" }
%"class.std::__1::__tree.353" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.354", %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::map.363" = type { %"class.std::__1::__tree.364" }
%"class.std::__1::__tree.364" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.365", %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::map.372" = type opaque
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.WTF::HashSet.390" = type { %"class.WTF::HashTable.391" }
%"class.WTF::HashTable.391" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.396" = type { %"class.WTF::Vector.399" }
%"class.WTF::Vector.399" = type { %"class.WTF::VectorBuffer.400" }
%"class.WTF::VectorBuffer.400" = type { %"class.WTF::VectorBufferBase.401" }
%"class.WTF::VectorBufferBase.401" = type { %"class.blink::Member.402"*, i32, i32 }
%"class.blink::Member.402" = type opaque
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.408", i32, i32 }
%"class.blink::HeapHashMap.408" = type { %"class.WTF::HashMap.411" }
%"class.WTF::HashMap.411" = type { %"class.WTF::HashTable.412" }
%"class.WTF::HashTable.412" = type <{ %"struct.WTF::KeyValuePair.414"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.414" = type opaque
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.478" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.479" }
%"class.blink::HeapHashMap.479" = type { %"class.WTF::HashMap.482" }
%"class.WTF::HashMap.482" = type { %"class.WTF::HashTable.483" }
%"class.WTF::HashTable.483" = type <{ %"struct.WTF::KeyValuePair.485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.485" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.445" = type { %"class.WTF::VectorBuffer.446" }
%"class.WTF::VectorBuffer.446" = type { %"class.WTF::VectorBufferBase.447" }
%"class.WTF::VectorBufferBase.447" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.508 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.510", i64, %"class.WTF::Vector.514", %"class.WTF::Vector.519", %"class.WTF::Vector.727", %"class.WTF::Vector.745", %class.scoped_refptr.340, %"class.WTF::HashMap.751", %"class.WTF::Vector.756", %"class.WTF::Vector.514", %"class.WTF::Vector.762", %"class.WTF::HashMap.767", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.509" }
%"class.base::RefCountedThreadSafe.509" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"class.WTF::Vector.519" = type { %"class.WTF::VectorBuffer.520" }
%"class.WTF::VectorBuffer.520" = type { %"class.WTF::VectorBufferBase.521", [8 x i8] }
%"class.WTF::VectorBufferBase.521" = type { %class.scoped_refptr.522*, i32, i32 }
%class.scoped_refptr.522 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.523", i8, %class.scoped_refptr.525, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.719" }
%"class.WTF::ThreadSafeRefCounted.523" = type { %"class.base::RefCountedThreadSafe.524" }
%"class.base::RefCountedThreadSafe.524" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"class.WTF::Vector.727" = type { %"class.WTF::VectorBuffer.728" }
%"class.WTF::VectorBuffer.728" = type { %"class.WTF::VectorBufferBase.729" }
%"class.WTF::VectorBufferBase.729" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.731", %"class.std::__1::unique_ptr.737" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.730 }
%class.scoped_refptr.730 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.731" = type { %"class.std::__1::__compressed_pair.732" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.737" = type { %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.745" = type { %"class.WTF::VectorBuffer.746" }
%"class.WTF::VectorBuffer.746" = type { %"class.WTF::VectorBufferBase.747" }
%"class.WTF::VectorBufferBase.747" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.748", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.748" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.751" = type { %"class.WTF::HashTable.752" }
%"class.WTF::HashTable.752" = type <{ %"struct.WTF::KeyValuePair.755"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.755" = type opaque
%"class.WTF::Vector.756" = type { %"class.WTF::VectorBuffer.757" }
%"class.WTF::VectorBuffer.757" = type { %"class.WTF::VectorBufferBase.758" }
%"class.WTF::VectorBufferBase.758" = type { %"class.mojo::ScopedHandleBase.759"*, i32, i32 }
%"class.mojo::ScopedHandleBase.759" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.514" = type { %"class.WTF::VectorBuffer.515" }
%"class.WTF::VectorBuffer.515" = type { %"class.WTF::VectorBufferBase.516", [16 x i8] }
%"class.WTF::VectorBufferBase.516" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.762" = type { %"class.WTF::VectorBuffer.763" }
%"class.WTF::VectorBuffer.763" = type { %"class.WTF::VectorBufferBase.764" }
%"class.WTF::VectorBufferBase.764" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.767" = type { %"class.WTF::HashTable.768" }
%"class.WTF::HashTable.768" = type <{ %"struct.WTF::KeyValuePair.771"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.771" = type { i8**, %"class.std::__1::unique_ptr.3289" }
%"class.std::__1::unique_ptr.3289" = type { %"class.std::__1::__compressed_pair.3290" }
%"class.std::__1::__compressed_pair.3290" = type { %"struct.std::__1::__compressed_pair_elem.3291" }
%"struct.std::__1::__compressed_pair_elem.3291" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.772" = type { %"class.WTF::HashSet.775" }
%"class.WTF::HashSet.775" = type { %"class.WTF::HashTable.776" }
%"class.WTF::HashTable.776" = type <{ %"class.blink::WeakMember.778"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.778" = type opaque
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.786", %"class.blink::Member.786", %"class.blink::Member.788", %"class.blink::Member.790", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.781" }
%"class.absl::optional.781" = type { %"class.absl::optional_internal::optional_data.782" }
%"class.absl::optional_internal::optional_data.782" = type { %"class.absl::optional_internal::optional_data_base.783" }
%"class.absl::optional_internal::optional_data_base.783" = type { %"class.absl::optional_internal::optional_data_dtor_base.784" }
%"class.absl::optional_internal::optional_data_dtor_base.784" = type { i8, %union.anon.785 }
%union.anon.785 = type { i64 }
%"class.blink::Member.786" = type { %"class.blink::MemberBase.787" }
%"class.blink::MemberBase.787" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.788" = type { %"class.blink::MemberBase.789" }
%"class.blink::MemberBase.789" = type { %"class.blink::Event"* }
%"class.blink::Member.790" = type { %"class.blink::MemberBase.791" }
%"class.blink::MemberBase.791" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.792" = type { %"class.WTF::HashMap.795" }
%"class.WTF::HashMap.795" = type { %"class.WTF::HashTable.796" }
%"class.WTF::HashTable.796" = type <{ %"struct.WTF::KeyValuePair.798"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.798" = type opaque
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.817", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1427", %"class.blink::Member.1429", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.819", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1420", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1420" = type { %"class.WTF::HashMap.1423" }
%"class.WTF::HashMap.1423" = type { %"class.WTF::HashTable.1424" }
%"class.WTF::HashTable.1424" = type <{ %"struct.WTF::KeyValuePair.1426"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1426" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.113", %"class.blink::Member.2013", %"class.blink::Member.2015" }
%"class.blink::Member.2013" = type { %"class.blink::MemberBase.2014" }
%"class.blink::MemberBase.2014" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.2015" = type { %"class.blink::MemberBase.2016" }
%"class.blink::MemberBase.2016" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1433" = type { %"class.blink::MemberBase.1434" }
%"class.blink::MemberBase.1434" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.113", %"class.blink::HeapMojoRemote.2008" }
%"class.blink::HeapMojoRemote.2008" = type { %"class.blink::Member.2009" }
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1435" = type { %"class.blink::MemberBase.1436" }
%"class.blink::MemberBase.1436" = type { %"class.blink::HeapHashMap.1437"* }
%"class.blink::HeapHashMap.1437" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1443" = type { %"class.WTF::HashTable.1444" }
%"class.WTF::HashTable.1444" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1447" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1450" }
%"class.WTF::VectorBuffer.1450" = type { %"class.WTF::VectorBufferBase.1451" }
%"class.WTF::VectorBufferBase.1451" = type { i64*, i32, i32 }
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.317", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.394", i32, i8, [3 x i8], %"class.blink::HeapVector.396", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.404", %"class.blink::Member.406", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.415", %"class.blink::Member.474", %"class.blink::Member.476", i8, [7 x i8] }>
%"class.blink::Member.1452" = type { %"class.blink::MemberBase.1453" }
%"class.blink::MemberBase.1453" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1725", %"class.blink::Member.1726", %"class.blink::Member.1728", %"class.blink::Member.1730", %class.scoped_refptr.1498, %class.scoped_refptr.1498, %"class.blink::Member.1732", %"class.blink::Member.1734", %"class.blink::Member.1740", %"class.blink::Member.1744", %"class.blink::Member.1796", %"class.blink::HeapHashMap.1798", %"class.blink::HeapHashSet.1805", %"class.blink::HeapHashSet.1805", %"class.blink::HeapHashMap.1953", %"class.blink::HeapVector.1960", %"class.blink::Member.1968", %"class.blink::HeapTaskRunnerTimer.1970", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1972", %"class.WTF::Vector.1979", %"class.blink::HeapHashSet.1985", %"class.blink::HeapHashSet.1985", %"class.std::__1::unique_ptr.1991", %"class.base::WeakPtr.1789", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.2003", i8, i8, %"class.base::WeakPtrFactory.2005" }
%"class.blink::ThreadState::PrefinalizerRegistration.1725" = type { i8 }
%"class.blink::Member.1726" = type { %"class.blink::MemberBase.1727" }
%"class.blink::MemberBase.1727" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1728" = type { %"class.blink::MemberBase.1729" }
%"class.blink::MemberBase.1729" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.1730" = type { %"class.blink::MemberBase.1731" }
%"class.blink::MemberBase.1731" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.1732" = type { %"class.blink::MemberBase.1733" }
%"class.blink::MemberBase.1733" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1734" = type { %"class.blink::MemberBase.1735" }
%"class.blink::MemberBase.1735" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1738" }
%"class.blink::Member.1738" = type { %"class.blink::MemberBase.1739" }
%"class.blink::MemberBase.1739" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1740" = type { %"class.blink::MemberBase.1741" }
%"class.blink::MemberBase.1741" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1744" = type { %"class.blink::MemberBase.1745" }
%"class.blink::MemberBase.1745" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1748", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1750", %"class.WTF::HashSet.1755", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1759", %"class.std::__1::map.1766", %"class.std::__1::map.1777", %"class.std::__1::unique_ptr.1786", %"class.blink::Member.1734", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1793", %"class.mojo::InlinedStructPtr.1795", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1748" = type { %"class.blink::MemberBase.1749" }
%"class.blink::MemberBase.1749" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1750" = type { %"class.WTF::HashTable.1751" }
%"class.WTF::HashTable.1751" = type <{ %"struct.WTF::KeyValuePair.1754"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1754" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1755" = type { %"class.WTF::HashTable.1756" }
%"class.WTF::HashTable.1756" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1759" = type { %"class.WTF::HashMap.1762" }
%"class.WTF::HashMap.1762" = type { %"class.WTF::HashTable.1763" }
%"class.WTF::HashTable.1763" = type <{ %"struct.WTF::KeyValuePair.1765"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1765" = type opaque
%"class.std::__1::map.1766" = type { %"class.std::__1::__tree.1767" }
%"class.std::__1::__tree.1767" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1768", %"class.std::__1::__compressed_pair.1772" }
%"class.std::__1::__compressed_pair.1768" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.1772" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::map.1777" = type { %"class.std::__1::__tree.1778" }
%"class.std::__1::__tree.1778" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1779", %"class.std::__1::__compressed_pair.1783" }
%"class.std::__1::__compressed_pair.1779" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.1783" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::unique_ptr.1786" = type { %"class.std::__1::__compressed_pair.1787" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1789", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.blink::Member.1793" = type { %"class.blink::MemberBase.1794" }
%"class.blink::MemberBase.1794" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.blink::Member.1796" = type { %"class.blink::MemberBase.1797" }
%"class.blink::MemberBase.1797" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1798" = type { %"class.WTF::HashMap.1801" }
%"class.WTF::HashMap.1801" = type { %"class.WTF::HashTable.1802" }
%"class.WTF::HashTable.1802" = type <{ %"struct.WTF::KeyValuePair.1804"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1804" = type opaque
%"class.blink::HeapHashSet.1805" = type { %"class.WTF::HashSet.1808" }
%"class.WTF::HashSet.1808" = type { %"class.WTF::HashTable.1809" }
%"class.WTF::HashTable.1809" = type <{ %"class.blink::WeakMember.1811"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1811" = type { %"class.blink::MemberBase.1812" }
%"class.blink::MemberBase.1812" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1815", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1835", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1925", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1942", %"class.blink::ResourceResponse", %class.scoped_refptr.525, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1815" = type { %"class.absl::optional_internal::optional_data.1816" }
%"class.absl::optional_internal::optional_data.1816" = type { %"class.absl::optional_internal::optional_data_base.1817" }
%"class.absl::optional_internal::optional_data_base.1817" = type { %"class.absl::optional_internal::optional_data_dtor_base.1818" }
%"class.absl::optional_internal::optional_data_dtor_base.1818" = type { i8, %union.anon.1819 }
%union.anon.1819 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1820", i8, %"class.absl::optional.1825", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1820" = type { %"class.absl::optional_internal::optional_data.1821" }
%"class.absl::optional_internal::optional_data.1821" = type { %"class.absl::optional_internal::optional_data_base.1822" }
%"class.absl::optional_internal::optional_data_base.1822" = type { %"class.absl::optional_internal::optional_data_dtor_base.1823" }
%"class.absl::optional_internal::optional_data_dtor_base.1823" = type { i8, [7 x i8], %union.anon.1824 }
%union.anon.1824 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1825" = type { %"class.absl::optional_internal::optional_data.1826" }
%"class.absl::optional_internal::optional_data.1826" = type { %"class.absl::optional_internal::optional_data_base.1827" }
%"class.absl::optional_internal::optional_data_base.1827" = type { %"class.absl::optional_internal::optional_data_dtor_base.1828" }
%"class.absl::optional_internal::optional_data_dtor_base.1828" = type { i8, %union.anon.1829 }
%union.anon.1829 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1830", %"class.WTF::Vector.445" }
%"class.WTF::Vector.1830" = type { %"class.WTF::VectorBuffer.1831" }
%"class.WTF::VectorBuffer.1831" = type { %"class.WTF::VectorBufferBase.1832" }
%"class.WTF::VectorBufferBase.1832" = type { i32*, i32, i32 }
%"class.WTF::Vector.1835" = type { %"class.WTF::VectorBuffer.1836" }
%"class.WTF::VectorBuffer.1836" = type { %"class.WTF::VectorBufferBase.1837" }
%"class.WTF::VectorBufferBase.1837" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1921" }
%"class.WTF::HashMap.1921" = type { %"class.WTF::HashTable.1922" }
%"class.WTF::HashTable.1922" = type <{ %"struct.WTF::KeyValuePair.1924"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1924" = type <{ %"class.blink::WeakMember.3356", i32, [4 x i8] }>
%"class.blink::WeakMember.3356" = type { %"class.blink::MemberBase.3357" }
%"class.blink::MemberBase.3357" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.3358", [7 x i8], %"class.blink::Member.1966", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.3358" = type { i8 }
%"class.blink::Member.1966" = type { %"class.blink::MemberBase.1812" }
%"class.blink::HeapHashSet.1925" = type { %"class.WTF::HashSet.1928" }
%"class.WTF::HashSet.1928" = type { %"class.WTF::HashTable.1929" }
%"class.WTF::HashTable.1929" = type <{ %"class.blink::WeakMember.1931"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1931" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.1932", %"class.WTF::String", %"class.WTF::HashSet.1933", i8, i8, %class.scoped_refptr.1480, %class.scoped_refptr.1938, %class.scoped_refptr.1940 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias.1932" = type { i8 }
%"class.WTF::HashSet.1933" = type { %"class.WTF::HashTable.1934" }
%"class.WTF::HashTable.1934" = type <{ %"struct.std::__1::pair.1937"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1937" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1480 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.1938 = type { %"class.base::RefCountedData.1939"* }
%"class.base::RefCountedData.1939" = type opaque
%class.scoped_refptr.1940 = type { %"class.base::RefCountedData.1941"* }
%"class.base::RefCountedData.1941" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.348, %class.scoped_refptr.348, %class.scoped_refptr.348, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1843, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1855", %"class.absl::optional.1860", %"class.absl::optional.1870", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1875", %"class.absl::optional.1870", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1870", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1875", %"class.absl::optional.1880", i8, %class.scoped_refptr.1886 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%class.scoped_refptr.1843 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1844", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1853, i8, %"class.url::Origin" }
%"class.base::RefCounted.1844" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1845" }
%"class.std::__1::vector.1845" = type { %"class.std::__1::__vector_base.1846" }
%"class.std::__1::__vector_base.1846" = type { %"class.std::__1::unique_ptr.1847"*, %"class.std::__1::unique_ptr.1847"*, %"class.std::__1::__compressed_pair.1848" }
%"class.std::__1::unique_ptr.1847" = type { %"class.std::__1::__compressed_pair.3270" }
%"class.std::__1::__compressed_pair.3270" = type { %"struct.std::__1::__compressed_pair_elem.3271" }
%"struct.std::__1::__compressed_pair_elem.3271" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1848" = type { %"struct.std::__1::__compressed_pair_elem.1849" }
%"struct.std::__1::__compressed_pair_elem.1849" = type { %"class.std::__1::unique_ptr.1847"* }
%class.scoped_refptr.1853 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1854", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1854" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1855" = type { %"class.absl::optional_internal::optional_data.1856" }
%"class.absl::optional_internal::optional_data.1856" = type { %"class.absl::optional_internal::optional_data_base.1857" }
%"class.absl::optional_internal::optional_data_base.1857" = type { %"class.absl::optional_internal::optional_data_dtor_base.1858" }
%"class.absl::optional_internal::optional_data_dtor_base.1858" = type { i8, %union.anon.1859 }
%union.anon.1859 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1860" = type { %"class.absl::optional_internal::optional_data.1861" }
%"class.absl::optional_internal::optional_data.1861" = type { %"class.absl::optional_internal::optional_data_base.1862" }
%"class.absl::optional_internal::optional_data_base.1862" = type { %"class.absl::optional_internal::optional_data_dtor_base.1863" }
%"class.absl::optional_internal::optional_data_dtor_base.1863" = type { i8, %union.anon.1864 }
%union.anon.1864 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1865", %"class.WTF::Vector.445", %"class.WTF::String" }
%"class.WTF::Vector.1865" = type { %"class.WTF::VectorBuffer.1866" }
%"class.WTF::VectorBuffer.1866" = type { %"class.WTF::VectorBufferBase.1867" }
%"class.WTF::VectorBufferBase.1867" = type { %class.scoped_refptr.348*, i32, i32 }
%"class.absl::optional.1870" = type { %"class.absl::optional_internal::optional_data.1871" }
%"class.absl::optional_internal::optional_data.1871" = type { %"class.absl::optional_internal::optional_data_base.1872" }
%"class.absl::optional_internal::optional_data_base.1872" = type { %"class.absl::optional_internal::optional_data_dtor_base.1873" }
%"class.absl::optional_internal::optional_data_dtor_base.1873" = type { i8, %union.anon.1874 }
%union.anon.1874 = type { %"class.WTF::String" }
%"class.absl::optional.1880" = type { %"class.absl::optional_internal::optional_data.1881" }
%"class.absl::optional_internal::optional_data.1881" = type { %"class.absl::optional_internal::optional_data_base.1882" }
%"class.absl::optional_internal::optional_data_base.1882" = type { %"class.absl::optional_internal::optional_data_dtor_base.1883" }
%"class.absl::optional_internal::optional_data_dtor_base.1883" = type { i8, %union.anon.1884 }
%union.anon.1884 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1885" }
%"class.mojo::PendingRemote.1885" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.1886 = type { %"class.base::RefCountedData.1887"* }
%"class.base::RefCountedData.1887" = type { %"class.base::RefCountedThreadSafe.3275", %"class.base::internal::flat_tree.3276" }
%"class.base::RefCountedThreadSafe.3275" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.3276" = type { %"class.std::__1::vector.3277" }
%"class.std::__1::vector.3277" = type { %"class.std::__1::__vector_base.3278" }
%"class.std::__1::__vector_base.3278" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3279" }
%"class.std::__1::__compressed_pair.3279" = type { %"struct.std::__1::__compressed_pair_elem.3280" }
%"struct.std::__1::__compressed_pair_elem.3280" = type { i32* }
%"class.blink::Member.1942" = type { %"class.blink::MemberBase.1943" }
%"class.blink::MemberBase.1943" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1944" }
%"class.std::__1::__tree.1944" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1945", %"class.std::__1::__compressed_pair.1949" }
%"class.std::__1::__compressed_pair.1945" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.1949" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.blink::HeapHashMap.1953" = type { %"class.WTF::HashMap.1956" }
%"class.WTF::HashMap.1956" = type { %"class.WTF::HashTable.1957" }
%"class.WTF::HashTable.1957" = type <{ %"struct.WTF::KeyValuePair.1959"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1959" = type opaque
%"class.blink::HeapVector.1960" = type { %"class.WTF::Vector.1963" }
%"class.WTF::Vector.1963" = type { %"class.WTF::VectorBuffer.1964" }
%"class.WTF::VectorBuffer.1964" = type { %"class.WTF::VectorBufferBase.1965" }
%"class.WTF::VectorBufferBase.1965" = type { %"class.blink::Member.1966"*, i32, i32 }
%"class.blink::HeapTaskRunnerTimer.1970" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1971", { i64, i64 } }
%"class.blink::WeakMember.1971" = type { %"class.blink::MemberBase.1453" }
%"class.blink::HeapHashMap.1972" = type { %"class.WTF::HashMap.1975" }
%"class.WTF::HashMap.1975" = type { %"class.WTF::HashTable.1976" }
%"class.WTF::HashTable.1976" = type <{ %"struct.WTF::KeyValuePair.1978"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1978" = type opaque
%"class.WTF::Vector.1979" = type { %"class.WTF::VectorBuffer.1980" }
%"class.WTF::VectorBuffer.1980" = type { %"class.WTF::VectorBufferBase.1981" }
%"class.WTF::VectorBufferBase.1981" = type { %class.scoped_refptr.1982*, i32, i32 }
%"class.blink::HeapHashSet.1985" = type { %"class.WTF::HashSet.1988" }
%"class.WTF::HashSet.1988" = type { %"class.WTF::HashTable.1989" }
%"class.WTF::HashTable.1989" = type <{ %"class.blink::Member.1942"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1991" = type { %"class.std::__1::__compressed_pair.1992" }
%"class.std::__1::__compressed_pair.1992" = type { %"struct.std::__1::__compressed_pair_elem.1993" }
%"struct.std::__1::__compressed_pair_elem.1993" = type { %"class.WTF::HashSet.1994"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2001" }
%"class.blink::Member.2001" = type { %"class.blink::MemberBase.2002" }
%"class.blink::MemberBase.2002" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.2005" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1454" = type { %"class.blink::MemberBase.1455" }
%"class.blink::MemberBase.1455" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1456" = type { %"class.blink::MemberBase.1457" }
%"class.blink::MemberBase.1457" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1458" = type { %"class.blink::MemberBase.1459" }
%"class.blink::MemberBase.1459" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1466" = type { %"class.std::__1::__compressed_pair.1467" }
%"class.std::__1::__compressed_pair.1467" = type { %"struct.std::__1::__compressed_pair_elem.1468" }
%"struct.std::__1::__compressed_pair_elem.1468" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1460" }
%"class.std::__1::unique_ptr.1460" = type { %"class.std::__1::__compressed_pair.1461" }
%"class.std::__1::__compressed_pair.1461" = type { %"struct.std::__1::__compressed_pair_elem.1462" }
%"struct.std::__1::__compressed_pair_elem.1462" = type { %"class.blink::KURL"* }
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1476 }
%class.scoped_refptr.1476 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1477" = type { %"class.WTF::VectorBuffer.1478" }
%"class.WTF::VectorBuffer.1478" = type { %"class.WTF::VectorBufferBase.1479" }
%"class.WTF::VectorBufferBase.1479" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1480 }
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.25", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1501" }
%"class.blink::HeapHashMap.1501" = type { %"class.WTF::HashMap.1504" }
%"class.WTF::HashMap.1504" = type { %"class.WTF::HashTable.1505" }
%"class.WTF::HashTable.1505" = type <{ %"struct.WTF::KeyValuePair.1507"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1507" = type opaque
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1510" = type { %"class.WTF::HashSet.1513" }
%"class.WTF::HashSet.1513" = type { %"class.WTF::HashTable.1514" }
%"class.WTF::HashTable.1514" = type <{ %"class.blink::WeakMember.1516"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1516" = type opaque
%"class.blink::HeapHashSet.1517" = type { %"class.WTF::HashSet.1520" }
%"class.WTF::HashSet.1520" = type { %"class.WTF::HashTable.1521" }
%"class.WTF::HashTable.1521" = type <{ %"class.blink::WeakMember.1523"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1523" = type opaque
%"class.blink::Member.1524" = type { %"class.blink::MemberBase.1525" }
%"class.blink::MemberBase.1525" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.55" }
%"class.blink::Member.1530" = type { %"class.blink::MemberBase.1531" }
%"class.blink::MemberBase.1531" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1532" = type { %"class.blink::MemberBase.1533" }
%"class.blink::MemberBase.1533" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1534" = type { %"class.WTF::HashMap.1537" }
%"class.WTF::HashMap.1537" = type { %"class.WTF::HashTable.1538" }
%"class.WTF::HashTable.1538" = type <{ %"struct.WTF::KeyValuePair.1540"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1540" = type opaque
%"class.WTF::Vector.1541" = type { %"class.WTF::VectorBuffer.1542" }
%"class.WTF::VectorBuffer.1542" = type { %"class.WTF::VectorBufferBase.1543" }
%"class.WTF::VectorBufferBase.1543" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1546" = type { %"class.blink::MemberBase.1547" }
%"class.blink::MemberBase.1547" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1550" = type { %"class.blink::MemberBase.1551" }
%"class.blink::MemberBase.1551" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1552" = type { %"class.blink::MemberBase.1553" }
%"class.blink::MemberBase.1553" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1554" = type { %"class.WTF::Vector.1557" }
%"class.WTF::Vector.1557" = type { %"class.WTF::VectorBuffer.1558" }
%"class.WTF::VectorBuffer.1558" = type { %"class.WTF::VectorBufferBase.1559" }
%"class.WTF::VectorBufferBase.1559" = type { %"class.blink::Member.1560"*, i32, i32 }
%"class.blink::Member.1560" = type opaque
%"class.std::__1::unique_ptr.1562" = type { %"class.std::__1::__compressed_pair.1563" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"struct.std::__1::__compressed_pair_elem.1564" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1568" = type { %"class.WTF::HashSet.1571" }
%"class.WTF::HashSet.1571" = type { %"class.WTF::HashTable.1572" }
%"class.WTF::HashTable.1572" = type <{ %"class.blink::WeakMember.1574"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1574" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1575", i32, [4 x i8] }>
%"class.WTF::Vector.1575" = type { %"class.WTF::VectorBuffer.1576" }
%"class.WTF::VectorBuffer.1576" = type { %"class.WTF::VectorBufferBase.1577" }
%"class.WTF::VectorBufferBase.1577" = type { %"struct.std::__1::pair.1578"*, i32, i32 }
%"struct.std::__1::pair.1578" = type opaque
%"class.blink::Member.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1583" = type { %"class.WTF::VectorBuffer.1584" }
%"class.WTF::VectorBuffer.1584" = type { %"class.WTF::VectorBufferBase.1585" }
%"class.WTF::VectorBufferBase.1585" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1588" = type { %"class.std::__1::__compressed_pair.1589" }
%"class.std::__1::__compressed_pair.1589" = type { %"struct.std::__1::__compressed_pair_elem.1590" }
%"struct.std::__1::__compressed_pair_elem.1590" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1594" = type { %"class.WTF::Vector.1597" }
%"class.WTF::Vector.1597" = type { %"class.WTF::VectorBuffer.1598" }
%"class.WTF::VectorBuffer.1598" = type { %"class.WTF::VectorBufferBase.1599" }
%"class.WTF::VectorBufferBase.1599" = type { %"class.blink::Member.1600"*, i32, i32 }
%"class.blink::Member.1600" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.25" }
%"class.blink::Member.1602" = type { %"class.blink::MemberBase.1603" }
%"class.blink::MemberBase.1603" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1604" = type { %"class.blink::MemberBase.1605" }
%"class.blink::MemberBase.1605" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1606" = type { %"class.blink::MemberBase.1607" }
%"class.blink::MemberBase.1607" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1608" = type { %"class.blink::MemberBase.1609" }
%"class.blink::MemberBase.1609" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1612" = type { %"class.WTF::HashTable.1613" }
%"class.WTF::HashTable.1613" = type <{ %"struct.WTF::KeyValuePair.1616"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1616" = type opaque
%"class.blink::Member.1617" = type { %"class.blink::MemberBase.1618" }
%"class.blink::MemberBase.1618" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1619" = type { %"class.blink::MemberBase.1620" }
%"class.blink::MemberBase.1620" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1621" = type { %"class.blink::MemberBase.1622" }
%"class.blink::MemberBase.1622" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1500", { i64, i64 } }
%"class.blink::WeakMember.1500" = type { %"class.blink::MemberBase.26" }
%"class.blink::HeapHashSet.1625" = type { %"class.WTF::HashSet.1628" }
%"class.WTF::HashSet.1628" = type { %"class.WTF::HashTable.1629" }
%"class.WTF::HashTable.1629" = type <{ %"class.blink::Member.1631"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1631" = type opaque
%"class.blink::Member.1632" = type { %"class.blink::MemberBase.1633" }
%"class.blink::MemberBase.1633" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1638" = type { %"class.blink::MemberBase.1639" }
%"class.blink::MemberBase.1639" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1640" = type { %"class.blink::MemberBase.1641" }
%"class.blink::MemberBase.1641" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1642" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1648" = type { %"class.std::__1::__compressed_pair.1649" }
%"class.std::__1::__compressed_pair.1649" = type { %"struct.std::__1::__compressed_pair_elem.1650" }
%"struct.std::__1::__compressed_pair_elem.1650" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", i32, [4 x i8], %"class.WTF::HashMap.1651", %"class.WTF::HashMap.1651", %"class.WTF::HashMap.1651", %"class.WTF::HashMap.1651", %"class.WTF::HashMap.1651", %"class.WTF::HashMap.1651", %"class.WTF::HashMap.1651", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1651" = type { %"class.WTF::HashTable.1652" }
%"class.WTF::HashTable.1652" = type <{ %"struct.WTF::KeyValuePair.1655"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1655" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1659" = type { %"class.blink::MemberBase.1660" }
%"class.blink::MemberBase.1660" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1661" = type { %"class.blink::MemberBase.1662" }
%"class.blink::MemberBase.1662" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member.1669", %"class.blink::Member.1669", i32, i8, [3 x i8] }>
%"class.blink::Member.1669" = type { %"class.blink::MemberBase.1670" }
%"class.blink::MemberBase.1670" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type opaque
%"class.WTF::Vector.1438" = type { %"class.WTF::VectorBuffer.1439" }
%"class.WTF::VectorBuffer.1439" = type { %"class.WTF::VectorBufferBase.1440" }
%"class.WTF::VectorBufferBase.1440" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1671" = type { %"class.WTF::HashMap.1674" }
%"class.WTF::HashMap.1674" = type { %"class.WTF::HashTable.1675" }
%"class.WTF::HashTable.1675" = type <{ %"struct.WTF::KeyValuePair.1677"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1677" = type opaque
%"class.blink::Member.1678" = type { %"class.blink::MemberBase.1679" }
%"class.blink::MemberBase.1679" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1680" = type { %"class.std::__1::__compressed_pair.1681" }
%"class.std::__1::__compressed_pair.1681" = type { %"struct.std::__1::__compressed_pair_elem.1682" }
%"struct.std::__1::__compressed_pair_elem.1682" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1686" = type { %"class.blink::MemberBase.1687" }
%"class.blink::MemberBase.1687" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1688" = type { %"class.blink::MemberBase.1689" }
%"class.blink::MemberBase.1689" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1690" = type { %"class.WTF::HashMap.1693" }
%"class.WTF::HashMap.1693" = type { %"class.WTF::HashTable.1694" }
%"class.WTF::HashTable.1694" = type <{ %"struct.WTF::KeyValuePair.1696"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1696" = type opaque
%"class.blink::HeapObserverSet.1697" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1698" }
%"class.blink::HeapHashSet.1698" = type { %"class.WTF::HashSet.1701" }
%"class.WTF::HashSet.1701" = type { %"class.WTF::HashTable.1702" }
%"class.WTF::HashTable.1702" = type <{ %"class.blink::WeakMember.1704"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1704" = type opaque
%"class.blink::Member.1705" = type { %"class.blink::MemberBase.1706" }
%"class.blink::MemberBase.1706" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1707" = type { %"class.blink::MemberBase.1708" }
%"class.blink::MemberBase.1708" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.25", %"class.blink::HeapHashSet.1714", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1721", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1714" = type { %"class.WTF::HashSet.1717" }
%"class.WTF::HashSet.1717" = type { %"class.WTF::HashTable.1718" }
%"class.WTF::HashTable.1718" = type <{ %"class.blink::Member.1720"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1720" = type opaque
%"class.blink::HeapTaskRunnerTimer.1721" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1722", { i64, i64 } }
%"class.blink::WeakMember.1722" = type { %"class.blink::MemberBase.1708" }
%"class.blink::WeakMember.1709" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1710" = type { %"class.blink::MemberBase.1711" }
%"class.blink::MemberBase.1711" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::DOMURLUtils" = type <{ %"class.blink::DOMURLUtilsReadOnly", i8, [7 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::KeyboardEvent" = type { %"class.blink::UIEventWithKeyState.base", %"class.std::__1::unique_ptr.3186", %"class.WTF::String", %"class.WTF::String", i32, i8, i32, i32 }
%"class.blink::UIEventWithKeyState.base" = type <{ %"class.blink::UIEvent", i32 }>
%"class.blink::UIEvent" = type { %"class.blink::Event", %"class.blink::Member.2027", i32, %"class.blink::Member.3184" }
%"class.blink::Member.3184" = type { %"class.blink::MemberBase.3185" }
%"class.blink::MemberBase.3185" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.std::__1::unique_ptr.3186" = type { %"class.std::__1::__compressed_pair.3187" }
%"class.std::__1::__compressed_pair.3187" = type { %"struct.std::__1::__compressed_pair_elem.3188" }
%"struct.std::__1::__compressed_pair_elem.3188" = type { %"class.blink::WebKeyboardEvent"* }
%"class.blink::WebKeyboardEvent" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.blink::MouseEvent" = type <{ %"class.blink::UIEventWithKeyState.base", [4 x i8], %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", i8, [7 x i8], %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", i32, i16, i16, %"class.blink::Member.786", i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::DoublePoint" = type { double, double }
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.3143, i32, i8, i8, [2 x i8] }>
%union.anon.3143 = type { %"class.WTF::Vector.3144" }
%"class.WTF::Vector.3144" = type { %"class.WTF::VectorBuffer.3145" }
%"class.WTF::VectorBuffer.3145" = type { %"class.WTF::VectorBufferBase.3146", [16 x i8] }
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.2875, %"class.mojo::PendingRemote.3154" }
%"class.mojo::PendingRemote.3154" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.blink::FrameLoadRequest" = type { %"class.blink::LocalDOMWindow"*, %"class.blink::ResourceRequest", %"class.WTF::AtomicString", i32, i32, i32, %"class.blink::HTMLFormElement"*, i32, %class.scoped_refptr.1480, %class.scoped_refptr.3155, %"class.base::TimeTicks", i32, %"struct.blink::WebWindowFeatures", %"class.absl::optional.3041", %"class.absl::optional.3166", %"class.mojo::PendingRemote.3171", %"class.std::__1::unique_ptr.3172" }
%"class.blink::HTMLFormElement" = type opaque
%class.scoped_refptr.3155 = type { %"class.base::RefCountedData.3156"* }
%"class.base::RefCountedData.3156" = type { %"class.base::RefCountedThreadSafe.3157", %"class.mojo::Remote.3158" }
%"class.base::RefCountedThreadSafe.3157" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::Remote.3158" = type { %"class.mojo::internal::InterfacePtrState.3159" }
%"class.mojo::internal::InterfacePtrState.3159" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3160" }
%"class.std::__1::unique_ptr.3160" = type { %"class.std::__1::__compressed_pair.3161" }
%"class.std::__1::__compressed_pair.3161" = type { %"struct.std::__1::__compressed_pair_elem.3162" }
%"struct.std::__1::__compressed_pair_elem.3162" = type { %"class.blink::mojom::blink::BlobURLTokenProxy"* }
%"class.blink::mojom::blink::BlobURLTokenProxy" = type { %"class.blink::mojom::blink::BlobURLToken", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BlobURLToken" = type { i32 (...)** }
%"class.absl::optional.3166" = type { %"class.absl::optional_internal::optional_data.3167" }
%"class.absl::optional_internal::optional_data.3167" = type { %"class.absl::optional_internal::optional_data_base.3168" }
%"class.absl::optional_internal::optional_data_base.3168" = type { %"class.absl::optional_internal::optional_data_dtor_base.3169" }
%"class.absl::optional_internal::optional_data_dtor_base.3169" = type { i8, %union.anon.3170 }
%union.anon.3170 = type { %"class.util::TokenType" }
%"class.mojo::PendingRemote.3171" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.std::__1::unique_ptr.3172" = type { %"class.std::__1::__compressed_pair.3173" }
%"class.std::__1::__compressed_pair.3173" = type { %"struct.std::__1::__compressed_pair_elem.3174" }
%"struct.std::__1::__compressed_pair_elem.3174" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.3175", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.3175" = type { %"class.std::__1::__compressed_pair.3176" }
%"class.std::__1::__compressed_pair.3176" = type { %"struct.std::__1::__compressed_pair_elem.3177" }
%"struct.std::__1::__compressed_pair_elem.3177" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::AnchorElementMetricsSender" = type { %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::Supplement", %"class.blink::HeapHashSet.3114", %"class.blink::HeapMojoRemote.3121", %"class.blink::Member.1669", %"class.WTF::Vector.3124", %"class.WTF::Vector.3131" }
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.25" }
%"class.blink::HeapHashSet.3114" = type { %"class.WTF::HashSet.3117" }
%"class.WTF::HashSet.3117" = type { %"class.WTF::HashTable.3118" }
%"class.WTF::HashTable.3118" = type <{ %"class.blink::WeakMember.3120"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3120" = type opaque
%"class.blink::HeapMojoRemote.3121" = type { %"class.blink::Member.3122" }
%"class.blink::Member.3122" = type { %"class.blink::MemberBase.3123" }
%"class.blink::MemberBase.3123" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::AnchorElementMetricsHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::AnchorElementMetricsHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.WTF::Vector.3124" = type { %"class.WTF::VectorBuffer.3125" }
%"class.WTF::VectorBuffer.3125" = type { %"class.WTF::VectorBufferBase.3126" }
%"class.WTF::VectorBufferBase.3126" = type { %"class.mojo::InlinedStructPtr.3127"*, i32, i32 }
%"class.mojo::InlinedStructPtr.3127" = type <{ %"class.blink::mojom::blink::AnchorElementEnteredViewport", i32, [4 x i8] }>
%"class.blink::mojom::blink::AnchorElementEnteredViewport" = type { i32, i64 }
%"class.WTF::Vector.3131" = type { %"class.WTF::VectorBuffer.3132" }
%"class.WTF::VectorBuffer.3132" = type { %"class.WTF::VectorBufferBase.3133" }
%"class.WTF::VectorBufferBase.3133" = type { %"class.mojo::StructPtr.3134"*, i32, i32 }
%"class.mojo::StructPtr.3134" = type { %"class.std::__1::unique_ptr.3135" }
%"class.std::__1::unique_ptr.3135" = type { %"class.std::__1::__compressed_pair.3136" }
%"class.std::__1::__compressed_pair.3136" = type { %"struct.std::__1::__compressed_pair_elem.3137" }
%"struct.std::__1::__compressed_pair_elem.3137" = type { %"class.blink::mojom::blink::AnchorElementClick"* }
%"class.blink::mojom::blink::AnchorElementClick" = type { i32, %"class.blink::KURL" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.3414" }
%"class.WTF::Vector.3414" = type { %"class.WTF::VectorBuffer.3415" }
%"class.WTF::VectorBuffer.3415" = type { %"class.WTF::VectorBufferBase.3416", [64 x i8] }
%"class.WTF::VectorBufferBase.3416" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::HTMLImageElement" = type { %"class.blink::HTMLElement", %"class.blink::ImageElementBase", %"class.blink::ActiveScriptWrappable.3420", %"class.blink::FormAssociated", %"class.blink::Member.3421", %"class.blink::Member.3455", %"class.blink::Member.3457", %"class.WTF::AtomicString", float, %"class.blink::Member.3459", i8, i8, i32, %"class.std::__1::unique_ptr.3461" }
%"class.blink::ImageElementBase" = type { %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", i32, i32 }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable.3420" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.3421" = type { %"class.blink::MemberBase.3422" }
%"class.blink::MemberBase.3422" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3425", %"class.blink::Member.21", %"class.blink::Member.3426", %"class.blink::Member.3426", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.3440", %"class.std::__1::unique_ptr.3441", %"class.std::__1::unique_ptr.3441", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.3447" }
%"class.blink::ThreadState::PrefinalizerRegistration.3425" = type { i8 }
%"class.blink::Member.3426" = type { %"class.blink::MemberBase.3427" }
%"class.blink::MemberBase.3427" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.3430", float, i8, %class.scoped_refptr.3432, %"class.WTF::HashCountedSet.3433", %"class.WTF::HashCountedSet.3433" }
%"class.blink::Member.3430" = type { %"class.blink::MemberBase.3431" }
%"class.blink::MemberBase.3431" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.3432 = type { %"class.blink::Image"* }
%"class.WTF::HashCountedSet.3433" = type { %"class.WTF::HashMap.3434" }
%"class.WTF::HashMap.3434" = type { %"class.WTF::HashTable.3435" }
%"class.WTF::HashTable.3435" = type <{ %"struct.WTF::KeyValuePair.3438"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3438" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr.3440" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.3441" = type { %"class.std::__1::__compressed_pair.3442" }
%"class.std::__1::__compressed_pair.3442" = type { %"struct.std::__1::__compressed_pair_elem.3443" }
%"struct.std::__1::__compressed_pair_elem.3443" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::HeapVector.3447" = type { %"class.WTF::Vector.3450" }
%"class.WTF::Vector.3450" = type { %"class.WTF::VectorBuffer.3451" }
%"class.WTF::VectorBuffer.3451" = type { %"class.WTF::VectorBufferBase.3452" }
%"class.WTF::VectorBufferBase.3452" = type { %"class.blink::Member.3453"*, i32, i32 }
%"class.blink::Member.3453" = type opaque
%"class.blink::Member.3455" = type { %"class.blink::MemberBase.3456" }
%"class.blink::MemberBase.3456" = type { %"class.blink::HTMLImageElement::ViewportChangeListener"* }
%"class.blink::HTMLImageElement::ViewportChangeListener" = type opaque
%"class.blink::Member.3457" = type { %"class.blink::MemberBase.3458" }
%"class.blink::MemberBase.3458" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::Member.3459" = type { %"class.blink::MemberBase.3460" }
%"class.blink::MemberBase.3460" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.std::__1::unique_ptr.3461" = type { %"class.std::__1::__compressed_pair.3462" }
%"class.std::__1::__compressed_pair.3462" = type { %"struct.std::__1::__compressed_pair_elem.3463" }
%"struct.std::__1::__compressed_pair_elem.3463" = type { %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* }
%"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics" = type { i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3467", %"class.blink::Member.3469", %"class.blink::Member.3471", %"class.blink::Member.3490", %"class.blink::Member.3492" }
%"class.blink::Member.3467" = type { %"class.blink::MemberBase.3468" }
%"class.blink::MemberBase.3468" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.821 }
%"class.blink::Member.3469" = type { %"class.blink::MemberBase.3470" }
%"class.blink::MemberBase.3470" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3471" = type { %"class.blink::MemberBase.3472" }
%"class.blink::MemberBase.3472" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3475", %"class.blink::HeapHashSet.3484" }
%"class.blink::HeapVector.3475" = type { %"class.WTF::Vector.3478" }
%"class.WTF::Vector.3478" = type { %"class.WTF::VectorBuffer.3479" }
%"class.WTF::VectorBuffer.3479" = type { %"class.WTF::VectorBufferBase.3480" }
%"class.WTF::VectorBufferBase.3480" = type { %"class.blink::Member.3481"*, i32, i32 }
%"class.blink::Member.3481" = type { %"class.blink::MemberBase.3482" }
%"class.blink::MemberBase.3482" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3484" = type { %"class.WTF::HashSet.3487" }
%"class.WTF::HashSet.3487" = type { %"class.WTF::HashTable.3488" }
%"class.WTF::HashTable.3488" = type <{ %"class.blink::Member.3481"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3490" = type { %"class.blink::MemberBase.3491" }
%"class.blink::MemberBase.3491" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3492" = type { %"class.blink::MemberBase.3493" }
%"class.blink::MemberBase.3493" = type { %"class.blink::HeapHashSet.3494"* }
%"class.blink::HeapHashSet.3494" = type opaque
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.3216, %"class.WTF::Vector.3217", %"class.std::__1::unique_ptr.3222", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.3243, %"class.blink::Persistent.3244" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.3216 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.3217" = type { %"class.WTF::VectorBuffer.3218" }
%"class.WTF::VectorBuffer.3218" = type { %"class.WTF::VectorBufferBase.3219", [8 x i8] }
%"class.WTF::VectorBufferBase.3219" = type { %class.scoped_refptr.3216*, i32, i32 }
%"class.std::__1::unique_ptr.3222" = type { %"class.std::__1::__compressed_pair.3223" }
%"class.std::__1::__compressed_pair.3223" = type { %"struct.std::__1::__compressed_pair_elem.3224" }
%"struct.std::__1::__compressed_pair_elem.3224" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.3225", %"class.absl::optional.3230", %"class.absl::optional.3235" }
%"class.absl::optional.3225" = type { %"class.absl::optional_internal::optional_data.3226" }
%"class.absl::optional_internal::optional_data.3226" = type { %"class.absl::optional_internal::optional_data_base.3227" }
%"class.absl::optional_internal::optional_data_base.3227" = type { %"class.absl::optional_internal::optional_data_dtor_base.3228" }
%"class.absl::optional_internal::optional_data_dtor_base.3228" = type { i8, %union.anon.3229 }
%union.anon.3229 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.3230" = type { %"class.absl::optional_internal::optional_data.3231" }
%"class.absl::optional_internal::optional_data.3231" = type { %"class.absl::optional_internal::optional_data_base.3232" }
%"class.absl::optional_internal::optional_data_base.3232" = type { %"class.absl::optional_internal::optional_data_dtor_base.3233" }
%"class.absl::optional_internal::optional_data_dtor_base.3233" = type { i8, [3 x i8], %union.anon.3234 }
%union.anon.3234 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.3235" = type { %"class.absl::optional_internal::optional_data.3236" }
%"class.absl::optional_internal::optional_data.3236" = type { %"class.absl::optional_internal::optional_data_base.3237" }
%"class.absl::optional_internal::optional_data_base.3237" = type { %"class.absl::optional_internal::optional_data_dtor_base.3238" }
%"class.absl::optional_internal::optional_data_dtor_base.3238" = type { i8, %union.anon.3239 }
%union.anon.3239 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.3243 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.3244" = type { %"class.blink::PersistentBase.3245" }
%"class.blink::PersistentBase.3245" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.918" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.3248", %"struct.blink::PhysicalRect", %"class.blink::Member.3258" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.3248" = type { %"class.std::__1::__compressed_pair.3249" }
%"class.std::__1::__compressed_pair.3249" = type { %"struct.std::__1::__compressed_pair_elem.3250" }
%"struct.std::__1::__compressed_pair_elem.3250" = type { %"class.WTF::HashSet.3251"* }
%"class.WTF::HashSet.3251" = type { %"class.WTF::HashTable.3252" }
%"class.WTF::HashTable.3252" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3258" = type { %"class.blink::MemberBase.3259" }
%"class.blink::MemberBase.3259" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.886", %"class.blink::DataRef.967", %"class.blink::DataRef.971", %"class.blink::DataRef.1167", %"class.blink::DataRef.1234", %"class.blink::DataRef.1238", %"class.blink::DataRef.1242", %"class.blink::DataRef.1246", [20 x i8], [4 x i8] }>
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.mojo::PendingAssociatedReceiver" = type { %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::AssociatedRemote.3085" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3086" }
%"class.mojo::internal::AssociatedInterfacePtrState.3086" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3087" }
%"class.std::__1::unique_ptr.3087" = type { %"class.std::__1::__compressed_pair.3088" }
%"class.std::__1::__compressed_pair.3088" = type { %"struct.std::__1::__compressed_pair_elem.3089" }
%"struct.std::__1::__compressed_pair_elem.3089" = type { %"class.blink::mojom::blink::ConversionHostProxy"* }
%"class.blink::mojom::blink::ConversionHostProxy" = type { %"class.blink::mojom::blink::ConversionHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ConversionHost" = type { i32 (...)** }
%"struct.blink::Impression" = type { %"class.url::Origin", %"class.absl::optional.3107", i64, %"class.absl::optional.264", i64 }
%"class.absl::optional.3107" = type { %"class.absl::optional_internal::optional_data.3108" }
%"class.absl::optional_internal::optional_data.3108" = type { %"class.absl::optional_internal::optional_data_base.3109" }
%"class.absl::optional_internal::optional_data_base.3109" = type { %"class.absl::optional_internal::optional_data_dtor_base.3110" }
%"class.absl::optional_internal::optional_data_dtor_base.3110" = type { i8, %union.anon.3111 }
%union.anon.3111 = type { %"class.url::Origin" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase" = type <{ %"class.std::__1::unique_ptr.259", i32, [4 x i8] }>
%"class.blink::AssociatedInterfaceProvider" = type { %"class.mojo::AssociatedRemote.3093", %"class.std::__1::unique_ptr.3101", %class.scoped_refptr.1498 }
%"class.mojo::AssociatedRemote.3093" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3094" }
%"class.mojo::internal::AssociatedInterfacePtrState.3094" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3095" }
%"class.std::__1::unique_ptr.3095" = type { %"class.std::__1::__compressed_pair.3096" }
%"class.std::__1::__compressed_pair.3096" = type { %"struct.std::__1::__compressed_pair_elem.3097" }
%"struct.std::__1::__compressed_pair_elem.3097" = type { %"class.blink::mojom::AssociatedInterfaceProviderProxy"* }
%"class.blink::mojom::AssociatedInterfaceProviderProxy" = type { %"class.blink::mojom::AssociatedInterfaceProvider", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::AssociatedInterfaceProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3101" = type { %"class.std::__1::__compressed_pair.3102" }
%"class.std::__1::__compressed_pair.3102" = type { %"struct.std::__1::__compressed_pair_elem.3103" }
%"struct.std::__1::__compressed_pair_elem.3103" = type { %"class.blink::AssociatedInterfaceProvider::LocalProvider"* }
%"class.blink::AssociatedInterfaceProvider::LocalProvider" = type opaque
%"class.blink::DOMTokenList" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.21", %"class.blink::QualifiedName", i8, [7 x i8] }>
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.141, %"class.std::__1::unique_ptr.259", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.143, i32, [4 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.3196, %"class.blink::Member.3197", %"class.blink::SelfKeepAlive", %"class.util::TokenType.3201" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.3196 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.3197" = type { %"class.blink::MemberBase.3198" }
%"class.blink::MemberBase.3198" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3199" }
%"class.blink::Persistent.3199" = type { %"class.blink::PersistentBase.3200" }
%"class.blink::PersistentBase.3200" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.918" }
%"class.util::TokenType.3201" = type { %"class.base::StrongAlias.3202" }
%"class.base::StrongAlias.3202" = type { %"class.base::UnguessableToken" }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.3203", i8, i8, %class.scoped_refptr.1498, %"class.blink::MessagePortDescriptor" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.std::__1::unique_ptr.3203" = type { %"class.std::__1::__compressed_pair.3204" }
%"class.std::__1::__compressed_pair.3204" = type { %"struct.std::__1::__compressed_pair_elem.3205" }
%"struct.std::__1::__compressed_pair_elem.3205" = type { %"class.mojo::Connector"* }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.3211", i8, [7 x i8] }>
%"class.blink::Member.3211" = type { %"class.blink::MemberBase.3212" }
%"class.blink::MemberBase.3212" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.3213" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.3213" = type { %"class.v8::TracedReference.3214" }
%"class.v8::TracedReference.3214" = type { %"class.v8::BasicTracedReference.3215" }
%"class.v8::BasicTracedReference.3215" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::EventDispatchHandlingState" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.3260", %"class.WTF::String"* }
%"class.blink::HeapVector.3260" = type { %"class.WTF::Vector.3263" }
%"class.WTF::Vector.3263" = type { %"class.WTF::VectorBuffer.3264" }
%"class.WTF::VectorBuffer.3264" = type { %"class.WTF::VectorBufferBase.3265" }
%"class.WTF::VectorBufferBase.3265" = type { %"class.blink::Member"*, i32, i32 }
%"class.WTF::HashMap.3267" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1528", %"class.blink::Member.3268", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.3268" = type { %"class.blink::MemberBase.3269" }
%"class.blink::MemberBase.3269" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.3499", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2882" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.3497", %"class.blink::Member.2539", %"class.blink::Member.2539", i8, [7 x i8] }>
%"class.blink::Member.3497" = type { %"class.blink::MemberBase.3498" }
%"class.blink::MemberBase.3498" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.2706", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.3499" = type { %"class.std::__1::__compressed_pair.3500" }
%"class.std::__1::__compressed_pair.3500" = type { %"struct.std::__1::__compressed_pair_elem.3501" }
%"struct.std::__1::__compressed_pair_elem.3501" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.3502", %"class.absl::optional.1318", i8, i8, %"class.WTF::Vector.2601" }
%"class.WTF::HashMap.3502" = type { %"class.WTF::HashTable.3503" }
%"class.WTF::HashTable.3503" = type <{ %"struct.WTF::KeyValuePair.3506"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3506" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3510" }
%"class.blink::Member.3510" = type { %"class.blink::MemberBase.3511" }
%"class.blink::MemberBase.3511" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3510" }
%"class.WTF::Vector.3149" = type { %"class.WTF::VectorBuffer.3150" }
%"class.WTF::VectorBuffer.3150" = type { %"class.WTF::VectorBufferBase.3151", [16 x i8] }
%"class.WTF::VectorBufferBase.3151" = type { i16*, i32, i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::PendingAssociatedRemote" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::AssociatedInterfacePtrInfo" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.144", [4 x i8] }>
%"class.mojo::PassThroughFilter" = type { %"class.mojo::MessageReceiver" }

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink16FrameLoadRequestD2Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink17HTMLAnchorElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK5blink9LayoutBox24PhysicalContentBoxOffsetEv = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN4absl17optional_internal13optional_dataIN3WTF6StringELb0EEaSERKS4_ = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN4absl17optional_internal13optional_dataIN5blink13WebImpressionELb0EEaSERKS4_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink27AssociatedInterfaceProvider12GetInterfaceINS_5mojom5blink14ConversionHostEEEvN4mojo25PendingAssociatedReceiverIT_EE = comdat any

$_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink14ConversionHostEE30BindNewEndpointAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink14ConversionHostEE4BindENS_23PendingAssociatedRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8internal27AssociatedInterfacePtrStateIN5blink5mojom5blink14ConversionHostEE4BindENS_26AssociatedInterfacePtrInfoIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN5blink10TraceTraitINS_7RelListEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names5kATagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink17HTMLAnchorElementE = hidden unnamed_addr constant { [175 x i8*], [3 x i8*], [8 x i8*] } { [175 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLAnchorElement"*)* @_ZN5blink17HTMLAnchorElementD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLAnchorElement"*)* @_ZN5blink17HTMLAnchorElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLAnchorElement"*, %"class.blink::Visitor"*)* @_ZNK5blink17HTMLAnchorElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLAnchorElement"*)* @_ZNK5blink17HTMLAnchorElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::HTMLAnchorElement"*)* @_ZNK5blink17HTMLAnchorElement25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLAnchorElement"*)* @_ZNK5blink17HTMLAnchorElement17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLAnchorElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink17HTMLAnchorElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLAnchorElement"*)* @_ZN5blink17HTMLAnchorElement29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLAnchorElement"*, %"class.blink::Event"*)* @_ZN5blink17HTMLAnchorElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::HTMLAnchorElement"*)* @_ZNK5blink17HTMLAnchorElement21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Document"*)* @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.3267"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLAnchorElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink17HTMLAnchorElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLAnchorElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink17HTMLAnchorElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::HTMLAnchorElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink17HTMLAnchorElement21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLAnchorElement"*, %"class.blink::Attribute"*)* @_ZNK5blink17HTMLAnchorElement14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLAnchorElement"*)* @_ZNK5blink17HTMLAnchorElement10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLAnchorElement"*)* @_ZNK5blink17HTMLAnchorElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLAnchorElement"*)* @_ZNK5blink17HTMLAnchorElement19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLAnchorElement"*)* @_ZNK5blink17HTMLAnchorElement16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::HTMLAnchorElement"*, i1)* @_ZN5blink17HTMLAnchorElement9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLAnchorElement"*)* @_ZNK5blink17HTMLAnchorElement15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLAnchorElement"*)* @_ZNK5blink17HTMLAnchorElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLAnchorElement"*)* @_ZNK5blink17HTMLAnchorElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::HTMLAnchorElement"*)* @_ZNK5blink17HTMLAnchorElement3UrlEv to i8*), i8* bitcast (void (%"class.blink::HTMLAnchorElement"*, %"class.blink::KURL"*)* @_ZN5blink17HTMLAnchorElement6SetURLERKNS_4KURLE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLAnchorElement"*)* @_ZNK5blink17HTMLAnchorElement5InputEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::HTMLAnchorElement"*)* @_ZThn104_NK5blink17HTMLAnchorElement3UrlEv to i8*), i8* bitcast (void (%"class.blink::HTMLAnchorElement"*)* @_ZThn104_N5blink17HTMLAnchorElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLAnchorElement"*)* @_ZThn104_N5blink17HTMLAnchorElementD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLAnchorElement"*)* @_ZThn104_NK5blink17HTMLAnchorElement5InputEv to i8*), i8* bitcast (void (%"class.blink::HTMLAnchorElement"*, %"class.blink::KURL"*)* @_ZThn104_N5blink17HTMLAnchorElement6SetURLERKNS_4KURLE to i8*), i8* bitcast (void (%"class.blink::DOMURLUtils"*, %"class.WTF::String"*)* @_ZN5blink11DOMURLUtils9setSearchERKN3WTF6StringE to i8*)] }, align 8
@_ZN5blink10html_names30kRegisterattributionsourceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kHrefAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"https\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"//\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kTitleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kRelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kDraggableAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.4 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"noreferrer\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"noopener\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"opener\00", align 1
@_ZN5blink10html_names11kTargetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names29kAttributionsourceeventidAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names27kAttributiondestinationAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kPingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names19kReferrerpolicyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kDownloadAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.9 = private unnamed_addr constant [7 x i8] c"_blank\00", align 1
@_ZN5blink10html_names18kHreftranslateAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kKeydownE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.10 = private unnamed_addr constant [6 x i8] c"Enter\00", align 1
@_ZN5blink16event_type_names6kClickE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names9kAuxclickE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink7ElementE = external unnamed_addr constant { [157 x i8*], [3 x i8*] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.13 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.16 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN5blink8features48kBlockingDownloadsInAdFrameWithoutUserActivationE = external global %"struct.base::Feature", align 8
@_ZN5blink26RuntimeEnabledFeaturesBase41is_blocking_downloads_in_sandbox_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase42is_target_blank_implies_no_opener_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink17HTMLAnchorElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.18 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink5mojom5blink14ConversionHost5Name_E = external constant [0 x i8], align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16

@_ZN5blink17HTMLAnchorElementC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::HTMLAnchorElement"*, %"class.blink::Document"*), void (%"class.blink::HTMLAnchorElement"*, %"class.blink::Document"*)* @_ZN5blink17HTMLAnchorElementC2ERNS_8DocumentE
@_ZN5blink17HTMLAnchorElementC1ERKNS_13QualifiedNameERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::HTMLAnchorElement"*, %"class.blink::QualifiedName"*, %"class.blink::Document"*), void (%"class.blink::HTMLAnchorElement"*, %"class.blink::QualifiedName"*, %"class.blink::Document"*)* @_ZN5blink17HTMLAnchorElementC2ERKNS_13QualifiedNameERNS_8DocumentE
@_ZN5blink17HTMLAnchorElementD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLAnchorElement"*), void (%"class.blink::HTMLAnchorElement"*)* @_ZN5blink17HTMLAnchorElementD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLAnchorElementC2ERNS_8DocumentE(%"class.blink::HTMLAnchorElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE to %"class.blink::QualifiedName"**), align 8
  %4 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %1, i32 1026) #16
  %5 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 1, i32 1
  store i8 0, i8* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [175 x i8*], [3 x i8*], [8 x i8*] }, { [175 x i8*], [3 x i8*], [8 x i8*] }* @_ZTVN5blink17HTMLAnchorElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [175 x i8*], [3 x i8*], [8 x i8*] }, { [175 x i8*], [3 x i8*], [8 x i8*] }* @_ZTVN5blink17HTMLAnchorElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [175 x i8*], [3 x i8*], [8 x i8*] }, { [175 x i8*], [3 x i8*], [8 x i8*] }* @_ZTVN5blink17HTMLAnchorElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, -2147483648
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 3
  store i64 0, i64* %12, align 8
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #16
  %14 = bitcast i8* %13 to %"class.blink::RelList"*
  tail call void @_ZN5blink7RelListC1EPNS_7ElementE(%"class.blink::RelList"* %14, %"class.blink::Element"* %4) #16
  %15 = getelementptr inbounds i8, i8* %13, i64 -4
  %16 = bitcast i8* %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = or i16 %17, 1
  store atomic i16 %18, i16* %16 release, align 2
  %19 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 4, i32 0, i32 0
  %20 = bitcast %"class.blink::RelList"** %19 to i8**
  store i8* %13, i8** %20, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLAnchorElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLAnchorElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::Document"* %2, i32 1026) #16
  %5 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 1, i32 1
  store i8 0, i8* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [175 x i8*], [3 x i8*], [8 x i8*] }, { [175 x i8*], [3 x i8*], [8 x i8*] }* @_ZTVN5blink17HTMLAnchorElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [175 x i8*], [3 x i8*], [8 x i8*] }, { [175 x i8*], [3 x i8*], [8 x i8*] }* @_ZTVN5blink17HTMLAnchorElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [175 x i8*], [3 x i8*], [8 x i8*] }, { [175 x i8*], [3 x i8*], [8 x i8*] }* @_ZTVN5blink17HTMLAnchorElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, -2147483648
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 3
  store i64 0, i64* %12, align 8
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #16
  %14 = bitcast i8* %13 to %"class.blink::RelList"*
  tail call void @_ZN5blink7RelListC1EPNS_7ElementE(%"class.blink::RelList"* %14, %"class.blink::Element"* %4) #16
  %15 = getelementptr inbounds i8, i8* %13, i64 -4
  %16 = bitcast i8* %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = or i16 %17, 1
  store atomic i16 %18, i16* %16 release, align 2
  %19 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 4, i32 0, i32 0
  %20 = bitcast %"class.blink::RelList"** %19 to i8**
  store i8* %13, i8** %20, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLAnchorElementD2Ev(%"class.blink::HTMLAnchorElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::DOMURLUtils.base"* %2 to %"class.blink::DOMURLUtils"*
  tail call void @_ZN5blink11DOMURLUtilsD2Ev(%"class.blink::DOMURLUtils"* %3) #16
  %4 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %6) #16
  %7 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %7) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink11DOMURLUtilsD2Ev(%"class.blink::DOMURLUtils"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink17HTMLAnchorElementD1Ev(%"class.blink::HTMLAnchorElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 13
  %4 = bitcast %"class.blink::Member.0"* %3 to %"class.blink::DOMURLUtils"*
  tail call void @_ZN5blink11DOMURLUtilsD2Ev(%"class.blink::DOMURLUtils"* %4) #16
  %5 = bitcast %"class.blink::Member.0"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 10
  %7 = bitcast %"class.blink::Member.0"* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 11
  %9 = bitcast %"class.blink::Member.0"* %8 to %"class.blink::QualifiedName"*
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %9) #16
  %10 = bitcast %"class.blink::Member.0"* %2 to %"class.blink::ContainerNode"*
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %10) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLAnchorElementD0Ev(%"class.blink::HTMLAnchorElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::DOMURLUtils.base"* %2 to %"class.blink::DOMURLUtils"*
  tail call void @_ZN5blink11DOMURLUtilsD2Ev(%"class.blink::DOMURLUtils"* %3) #16
  %4 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %6) #16
  %7 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink17HTMLAnchorElementD0Ev(%"class.blink::HTMLAnchorElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 13
  %4 = bitcast %"class.blink::Member.0"* %3 to %"class.blink::DOMURLUtils"*
  tail call void @_ZN5blink11DOMURLUtilsD2Ev(%"class.blink::DOMURLUtils"* %4) #16
  %5 = bitcast %"class.blink::Member.0"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 10
  %7 = bitcast %"class.blink::Member.0"* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 11
  %9 = bitcast %"class.blink::Member.0"* %8 to %"class.blink::QualifiedName"*
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %9) #16
  %10 = bitcast %"class.blink::Member.0"* %2 to %"class.blink::ContainerNode"*
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %10) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLAnchorElement13SupportsFocusEv(%"class.blink::HTMLAnchorElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %2) #16
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 64
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4, %1
  %10 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0
  %11 = tail call zeroext i1 @_ZNK5blink11HTMLElement13SupportsFocusEv(%"class.blink::HTMLElement"* %10) #16
  br label %12

12:                                               ; preds = %9, %4
  %13 = phi i1 [ true, %4 ], [ %11, %9 ]
  ret i1 %13
}

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink11HTMLElement13SupportsFocusEv(%"class.blink::HTMLElement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLAnchorElement25ShouldHaveFocusAppearanceEv(%"class.blink::HTMLAnchorElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 39
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0
  %11 = tail call zeroext i1 @_ZNK5blink11HTMLElement13SupportsFocusEv(%"class.blink::HTMLElement"* %10) #16
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i1 [ true, %1 ], [ %11, %9 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLAnchorElement16IsMouseFocusableEv(%"class.blink::HTMLAnchorElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink7Element27IsFocusableStyleAfterUpdateEv(%"class.blink::Element"* %2) #16
  br i1 %3, label %4, label %17

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 64
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::HTMLAnchorElement"* %0 to i1 (%"class.blink::HTMLAnchorElement"*)***
  %11 = load i1 (%"class.blink::HTMLAnchorElement"*)**, i1 (%"class.blink::HTMLAnchorElement"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::HTMLAnchorElement"*)*, i1 (%"class.blink::HTMLAnchorElement"*)** %11, i64 102
  %13 = load i1 (%"class.blink::HTMLAnchorElement"*)*, i1 (%"class.blink::HTMLAnchorElement"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::HTMLAnchorElement"* %0) #16
  br label %17

15:                                               ; preds = %4
  %16 = tail call zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"* %2) #16
  br label %17

17:                                               ; preds = %1, %15, %9
  %18 = phi i1 [ %14, %9 ], [ %16, %15 ], [ false, %1 ]
  ret i1 %18
}

declare zeroext i1 @_ZNK5blink7Element27IsFocusableStyleAfterUpdateEv(%"class.blink::Element"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLAnchorElement19IsKeyboardFocusableEv(%"class.blink::HTMLAnchorElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink7Element27IsFocusableStyleAfterUpdateEv(%"class.blink::Element"* %2) #16
  br i1 %3, label %4, label %30

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZNK5blink7Element22IsBaseElementFocusableEv(%"class.blink::Element"* %2) #16
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = tail call zeroext i1 @_ZNK5blink7Element13SupportsFocusEv(%"class.blink::Element"* %2) #16
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = tail call zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"* %2) #16
  br label %30

10:                                               ; preds = %6, %4
  %11 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 64
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %19) #16
  %21 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %20, i64 0, i32 7, i32 0, i32 0
  %22 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %21, align 8
  %23 = bitcast %"class.blink::ChromeClient"* %22 to i1 (%"class.blink::ChromeClient"*)***
  %24 = load i1 (%"class.blink::ChromeClient"*)**, i1 (%"class.blink::ChromeClient"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::ChromeClient"*)*, i1 (%"class.blink::ChromeClient"*)** %24, i64 28
  %26 = load i1 (%"class.blink::ChromeClient"*)*, i1 (%"class.blink::ChromeClient"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::ChromeClient"* %22) #16
  br i1 %27, label %28, label %30

28:                                               ; preds = %10, %15
  %29 = tail call zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"* %2) #16
  br label %30

30:                                               ; preds = %15, %1, %28, %8
  %31 = phi i1 [ %9, %8 ], [ %29, %28 ], [ false, %1 ], [ false, %15 ]
  ret i1 %31
}

declare zeroext i1 @_ZNK5blink7Element22IsBaseElementFocusableEv(%"class.blink::Element"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink7Element13SupportsFocusEv(%"class.blink::Element"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #3

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLAnchorElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLAnchorElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 64
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %109, label %10

10:                                               ; preds = %2
  %11 = trunc i32 %7 to i8
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %72

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"* %5) #16
  br i1 %14, label %15, label %72

15:                                               ; preds = %13
  %16 = bitcast %"class.blink::Event"* %1 to i1 (%"class.blink::Event"*)***
  %17 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %17, i64 14
  %19 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::Event"* %1) #16
  %21 = bitcast %"class.blink::Event"* %1 to %"class.blink::KeyboardEvent"*
  %22 = select i1 %20, %"class.blink::KeyboardEvent"* %21, %"class.blink::KeyboardEvent"* null
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kKeydownE, align 8
  %24 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  %29 = icmp ne %"class.blink::KeyboardEvent"* %22, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %72

31:                                               ; preds = %15
  %32 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #16
  %33 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %22, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %37, align 8
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %39 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %38, i64* %39, align 8
  br label %48

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  %47 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %48

48:                                               ; preds = %40, %36
  %49 = phi i64 [ %47, %40 ], [ %38, %36 ]
  %50 = phi i32 [ %43, %40 ], [ 0, %36 ]
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %50, i32* %51, align 8
  %52 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #16
  %53 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %49, i64* %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i8** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 5, i32* %55, align 8
  %56 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #16
  br i1 %56, label %57, label %72

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %22, i64 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, 32
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %72

62:                                               ; preds = %57
  %63 = load i32, i32* %6, align 8
  %64 = and i32 %63, 64
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %62
  %67 = call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %5) #16
  br i1 %67, label %72, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %70 = load i16, i16* %69, align 8
  %71 = or i16 %70, 64
  store i16 %71, i16* %69, align 8
  call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %5, %"class.blink::Event"* %1, i32 1) #16
  br label %111

72:                                               ; preds = %66, %62, %15, %48, %10, %57, %13
  %73 = bitcast %"class.blink::Event"* %1 to i1 (%"class.blink::Event"*)***
  %74 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %73, align 8
  %75 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %74, i64 12
  %76 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %75, align 8
  %77 = call zeroext i1 %76(%"class.blink::Event"* %1) #16
  %78 = bitcast %"class.blink::Event"* %1 to %"class.blink::MouseEvent"*
  %79 = select i1 %77, %"class.blink::MouseEvent"* %78, %"class.blink::MouseEvent"* null
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %81 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %80, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %82, %84
  br i1 %85, label %93, label %86

86:                                               ; preds = %72
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kAuxclickE, align 8
  %88 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp ne %"class.WTF::StringImpl"* %82, %89
  %91 = icmp eq %"class.blink::MouseEvent"* %79, null
  %92 = or i1 %91, %90
  br i1 %92, label %109, label %95

93:                                               ; preds = %72
  %94 = icmp eq %"class.blink::MouseEvent"* %79, null
  br i1 %94, label %109, label %95

95:                                               ; preds = %86, %93
  %96 = bitcast %"class.blink::MouseEvent"* %79 to i16 (%"class.blink::MouseEvent"*)***
  %97 = load i16 (%"class.blink::MouseEvent"*)**, i16 (%"class.blink::MouseEvent"*)*** %96, align 8
  %98 = getelementptr inbounds i16 (%"class.blink::MouseEvent"*)*, i16 (%"class.blink::MouseEvent"*)** %97, i64 33
  %99 = load i16 (%"class.blink::MouseEvent"*)*, i16 (%"class.blink::MouseEvent"*)** %98, align 8
  %100 = call signext i16 %99(%"class.blink::MouseEvent"* nonnull %79) #16
  %101 = icmp ult i16 %100, 2
  br i1 %101, label %102, label %109

102:                                              ; preds = %95
  %103 = load i32, i32* %6, align 8
  %104 = and i32 %103, 64
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %102
  %107 = call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %5) #16
  br i1 %107, label %109, label %108

108:                                              ; preds = %106
  call void @_ZN5blink17HTMLAnchorElement11HandleClickERNS_5EventE(%"class.blink::HTMLAnchorElement"* %0, %"class.blink::Event"* dereferenceable(104) %1)
  br label %111

109:                                              ; preds = %106, %2, %102, %86, %93, %95
  %110 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0
  call void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"* %110, %"class.blink::Event"* dereferenceable(104) %1) #16
  br label %111

111:                                              ; preds = %109, %108, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22IsEnterKeyKeydownEventERNS_5EventE(%"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.blink::Event"* %0 to i1 (%"class.blink::Event"*)***
  %5 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %5, i64 14
  %7 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::Event"* %0) #16
  %9 = bitcast %"class.blink::Event"* %0 to %"class.blink::KeyboardEvent"*
  %10 = select i1 %8, %"class.blink::KeyboardEvent"* %9, %"class.blink::KeyboardEvent"* null
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kKeydownE, align 8
  %12 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %13, %15
  %17 = icmp ne %"class.blink::KeyboardEvent"* %10, null
  %18 = and i1 %17, %16
  br i1 %18, label %19, label %50

19:                                               ; preds = %1
  %20 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #16
  %21 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %10, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %25, align 8
  %26 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %27 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %26, i64* %27, align 8
  br label %36

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 1
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %36

36:                                               ; preds = %28, %24
  %37 = phi i64 [ %35, %28 ], [ %26, %24 ]
  %38 = phi i32 [ %31, %28 ], [ 0, %24 ]
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %38, i32* %39, align 8
  %40 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #16
  %41 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %37, i64* %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i8** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 5, i32* %43, align 8
  %44 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #16
  br i1 %44, label %45, label %50

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %10, i64 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 32
  %49 = icmp eq i32 %48, 0
  br label %50

50:                                               ; preds = %45, %36, %1
  %51 = phi i1 [ false, %36 ], [ false, %1 ], [ %49, %45 ]
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLAnchorElement10IsLiveLinkEv(%"class.blink::HTMLAnchorElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 64
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %7) #16
  %9 = xor i1 %8, true
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i1 [ false, %1 ], [ %9, %6 ]
  ret i1 %11
}

declare void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"*, %"class.blink::Event"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11IsLinkClickERNS_5EventE(%"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #0 {
  %2 = bitcast %"class.blink::Event"* %0 to i1 (%"class.blink::Event"*)***
  %3 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %3, i64 12
  %5 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::Event"* %0) #16
  %7 = bitcast %"class.blink::Event"* %0 to %"class.blink::MouseEvent"*
  %8 = select i1 %6, %"class.blink::MouseEvent"* %7, %"class.blink::MouseEvent"* null
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %10 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, %13
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kAuxclickE, align 8
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp ne %"class.WTF::StringImpl"* %11, %18
  %20 = icmp eq %"class.blink::MouseEvent"* %8, null
  %21 = or i1 %20, %19
  br i1 %21, label %31, label %24

22:                                               ; preds = %1
  %23 = icmp eq %"class.blink::MouseEvent"* %8, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %15, %22
  %25 = bitcast %"class.blink::MouseEvent"* %8 to i16 (%"class.blink::MouseEvent"*)***
  %26 = load i16 (%"class.blink::MouseEvent"*)**, i16 (%"class.blink::MouseEvent"*)*** %25, align 8
  %27 = getelementptr inbounds i16 (%"class.blink::MouseEvent"*)*, i16 (%"class.blink::MouseEvent"*)** %26, i64 33
  %28 = load i16 (%"class.blink::MouseEvent"*)*, i16 (%"class.blink::MouseEvent"*)** %27, align 8
  %29 = tail call signext i16 %28(%"class.blink::MouseEvent"* nonnull %8) #16
  %30 = icmp ult i16 %29, 2
  br label %31

31:                                               ; preds = %15, %22, %24
  %32 = phi i1 [ %30, %24 ], [ false, %22 ], [ false, %15 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLAnchorElement11HandleClickERNS_5EventE(%"class.blink::HTMLAnchorElement"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = alloca <2 x float>, align 8
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::ResourceRequest", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.absl::optional.1870", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"struct.blink::FrameLoadRequest", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.absl::optional.3041", align 8
  %17 = alloca %"class.absl::optional.3041", align 8
  %18 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %19 = load i16, i16* %18, align 8
  %20 = or i16 %19, 64
  store i16 %20, i16* %18, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 12, i32 0, i32 0
  %27 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %26, align 8
  %28 = icmp eq %"class.blink::LocalDOMWindow"* %27, null
  br i1 %28, label %1246, label %29

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 256
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %43

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 2
  %36 = bitcast %"class.blink::UseCounter"* %35 to void (%"class.blink::UseCounter"*, i32)***
  %37 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %37, i64 3
  %39 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %38, align 8
  tail call void %39(%"class.blink::UseCounter"* %35, i32 1971) #16
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  br label %43

43:                                               ; preds = %29, %34
  %44 = phi %"class.blink::Document"* [ %25, %29 ], [ %42, %34 ]
  %45 = tail call dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink8Document11TopDocumentEv(%"class.blink::Document"* %44) #16
  %46 = tail call zeroext i1 @_ZN5blink26AnchorElementMetricsSender29HasAnchorElementMetricsSenderERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %45) #16
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = tail call %"class.blink::AnchorElementMetricsSender"* @_ZN5blink26AnchorElementMetricsSender4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %45) #16
  tail call void @_ZN5blink26AnchorElementMetricsSender32MaybeReportClickedMetricsOnClickERKNS_17HTMLAnchorElementE(%"class.blink::AnchorElementMetricsSender"* %48, %"class.blink::HTMLAnchorElement"* dereferenceable(136) %0) #16
  br label %49

49:                                               ; preds = %47, %43
  %50 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %50) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 48, i1 false)
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %53 = bitcast %union.anon.3143* %52 to i8*
  store i8 0, i8* %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %55, align 4
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %56, align 1
  %57 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #16
  %58 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %60 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %60, align 8
  %62 = icmp eq %"class.blink::ElementData"* %61, null
  br i1 %62, label %113, label %63

63:                                               ; preds = %49
  %64 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %61, i64 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %75, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.blink::ElementData"* %61 to %"class.blink::UniqueElementData"*
  %70 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %61, i64 1, i32 1
  %71 = bitcast %"class.blink::Member.14"* %70 to %"class.blink::Attribute"**
  %72 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %69, i64 0, i32 2, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  br label %80

75:                                               ; preds = %63
  %76 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %61, i64 1
  %77 = bitcast %"class.blink::ElementData"* %76 to %"class.blink::Attribute"*
  %78 = lshr i32 %65, 1
  %79 = and i32 %78, 268435455
  br label %80

80:                                               ; preds = %75, %68
  %81 = phi %"class.blink::Attribute"* [ %77, %75 ], [ %72, %68 ]
  %82 = phi i32 [ %79, %75 ], [ %74, %68 ]
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %81, i64 %83
  %85 = icmp eq i32 %82, 0
  br i1 %85, label %113, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %59, i64 0, i32 0, i32 0
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %91

91:                                               ; preds = %106, %86
  %92 = phi %"class.blink::Attribute"* [ %81, %86 ], [ %107, %106 ]
  %93 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %93, align 8
  %95 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %94, %88
  br i1 %95, label %109, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %94, i64 0, i32 3, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %98, %99
  br i1 %100, label %101, label %106

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %94, i64 0, i32 4, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %103, %104
  br i1 %105, label %109, label %106

106:                                              ; preds = %101, %96
  %107 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %92, i64 1
  %108 = icmp eq %"class.blink::Attribute"* %107, %84
  br i1 %108, label %113, label %91

109:                                              ; preds = %101, %91
  %110 = icmp eq %"class.blink::Attribute"* %92, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %92, i64 0, i32 1
  br label %115

113:                                              ; preds = %106, %109, %80, %49
  %114 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %115

115:                                              ; preds = %111, %113
  %116 = phi %"class.WTF::AtomicString"* [ %114, %113 ], [ %112, %111 ]
  %117 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %116, i64 0, i32 0
  %118 = tail call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %117) #16
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %120, label %125

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %121, align 8
  %122 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %123 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 0, i32* %124, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  br label %145

125:                                              ; preds = %115
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %118, %"class.WTF::StringImpl"** %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 1
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %131 = bitcast i8** %130 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"** %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %128, i32* %132, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %125
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %125
  %142 = phi i32 [ %140, %139 ], [ %138, %125 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #16
  br label %145

145:                                              ; preds = %120, %141, %144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #16
  %146 = bitcast <2 x float>* %5 to %"class.blink::FloatPoint"*
  %147 = icmp eq %"class.blink::Event"* %1, null
  br i1 %147, label %371, label %148

148:                                              ; preds = %145
  %149 = bitcast %"class.blink::Event"* %1 to i1 (%"class.blink::Event"*)***
  %150 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %149, align 8
  %151 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %150, i64 12
  %152 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %151, align 8
  %153 = call zeroext i1 %152(%"class.blink::Event"* nonnull %1) #16
  br i1 %153, label %154, label %371

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 7, i32 0, i32 0
  %156 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %155, align 8
  %157 = bitcast %"class.blink::EventTarget"* %156 to %"class.blink::Node"* (%"class.blink::EventTarget"*)***
  %158 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)**, %"class.blink::Node"* (%"class.blink::EventTarget"*)*** %157, align 8
  %159 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %158, i64 11
  %160 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %159, align 8
  %161 = call %"class.blink::Node"* %160(%"class.blink::EventTarget"* %156) #16
  %162 = icmp eq %"class.blink::Node"* %161, null
  br i1 %162, label %371, label %163

163:                                              ; preds = %154
  %164 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %161, i64 0, i32 1
  %165 = load i32, i32* %164, align 8
  %166 = and i32 %165, 48
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %371

168:                                              ; preds = %163
  %169 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %170 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %169, i64 0, i32 0, i32 0, i32 0
  %171 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %170, align 8
  %172 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %161, i64 1, i32 2
  %173 = bitcast %"class.blink::Member"* %172 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %174 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %174, i64 0, i32 3, i32 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %171, i64 0, i32 3, i32 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %176, %178
  br i1 %179, label %180, label %371

180:                                              ; preds = %168
  %181 = bitcast %"class.blink::Node"* %161 to %"class.blink::HTMLImageElement"*
  %182 = call zeroext i1 @_ZNK5blink16HTMLImageElement11IsServerMapEv(%"class.blink::HTMLImageElement"* nonnull %181) #16
  br i1 %182, label %183, label %371

183:                                              ; preds = %180
  %184 = load i32, i32* %164, align 8
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %161, i64 0, i32 6, i32 0, i32 0
  br i1 %186, label %192, label %188

188:                                              ; preds = %183
  %189 = bitcast %"class.blink::NodeData"** %187 to %"class.blink::NodeRareData"**
  %190 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %190, i64 0, i32 1, i32 0, i32 0
  br label %194

192:                                              ; preds = %183
  %193 = bitcast %"class.blink::NodeData"** %187 to %"class.blink::NodeRenderingData"**
  br label %194

194:                                              ; preds = %192, %188
  %195 = phi %"class.blink::NodeRenderingData"** [ %191, %188 ], [ %193, %192 ]
  %196 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %195, align 8
  %197 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %196, i64 0, i32 1
  %198 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %197, align 8
  %199 = icmp eq %"class.blink::LayoutObject"* %198, null
  br i1 %199, label %371, label %200

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %198, i64 0, i32 4
  %202 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %201 to i96*
  %203 = load i96, i96* %202, align 4
  %204 = and i96 %203, 67108864
  %205 = icmp eq i96 %204, 0
  br i1 %205, label %371, label %206

206:                                              ; preds = %200
  %207 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %207) #16
  %208 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 2, i32 4
  %209 = bitcast i8* %208 to %"class.blink::DoublePoint"*
  %210 = call <2 x float> @_ZNK5blink11DoublePointcvNS_10FloatPointEEv(%"class.blink::DoublePoint"* %209) #16
  store <2 x float> %210, <2 x float>* %5, align 8
  %211 = call <2 x float> @_ZNK5blink12LayoutObject25AncestorToLocalFloatPointEPKNS_20LayoutBoxModelObjectERKNS_10FloatPointEj(%"class.blink::LayoutObject"* nonnull %198, %"class.blink::LayoutBoxModelObject"* null, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %146, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %207) #16
  %212 = bitcast %"class.blink::LayoutObject"* %198 to %"class.blink::LayoutBox"*
  %213 = call i64 @_ZNK5blink9LayoutBox24PhysicalContentBoxOffsetEv(%"class.blink::LayoutBox"* nonnull %212) #16
  %214 = trunc i64 %213 to i32
  %215 = lshr i64 %213, 32
  %216 = trunc i64 %215 to i32
  %217 = sitofp i32 %214 to float
  %218 = fmul float %217, 1.562500e-02
  %219 = sitofp i32 %216 to float
  %220 = fmul float %219, 1.562500e-02
  %221 = extractelement <2 x float> %211, i32 0
  %222 = fsub float %221, %218
  %223 = extractelement <2 x float> %211, i32 1
  %224 = fsub float %223, %220
  %225 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %198, i64 0, i32 5, i32 0
  %226 = bitcast %"class.blink::ComputedStyle"** %225 to %"class.blink::ComputedStyleBase"**
  %227 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %226, align 8
  %228 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %227, i64 0, i32 1, i32 0, i32 0
  %229 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %228, align 8
  %230 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %229, i64 0, i32 2, i32 0, i32 0
  %231 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %230, align 8
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %231, i64 0, i32 6
  %233 = load float, float* %232, align 8
  %234 = fdiv float 1.000000e+00, %233
  %235 = fmul float %222, %234
  %236 = fmul float %224, %234
  %237 = call float @llvm.round.f32(float %235) #16
  %238 = fpext float %237 to double
  %239 = fcmp ult double %238, 0x41DFFFFFFFC00000
  br i1 %239, label %240, label %244

240:                                              ; preds = %206
  %241 = fcmp ugt float %237, 0xC1E0000000000000
  br i1 %241, label %242, label %244

242:                                              ; preds = %240
  %243 = fptosi float %237 to i32
  br label %244

244:                                              ; preds = %242, %240, %206
  %245 = phi i32 [ %243, %242 ], [ 2147483647, %206 ], [ -2147483648, %240 ]
  %246 = call float @llvm.round.f32(float %236) #16
  %247 = fpext float %246 to double
  %248 = fcmp ult double %247, 0x41DFFFFFFFC00000
  br i1 %248, label %251, label %249

249:                                              ; preds = %244
  %250 = icmp sgt i32 %245, 0
  br label %259

251:                                              ; preds = %244
  %252 = fcmp ugt float %246, 0xC1E0000000000000
  br i1 %252, label %255, label %253

253:                                              ; preds = %251
  %254 = icmp sgt i32 %245, 0
  br label %262

255:                                              ; preds = %251
  %256 = fptosi float %246 to i32
  %257 = icmp sgt i32 %245, 0
  %258 = icmp sgt i32 %256, 0
  br i1 %258, label %259, label %262

259:                                              ; preds = %255, %249
  %260 = phi i1 [ %250, %249 ], [ %257, %255 ]
  %261 = phi i32 [ 2147483647, %249 ], [ %256, %255 ]
  br label %262

262:                                              ; preds = %259, %255, %253
  %263 = phi i1 [ %260, %259 ], [ %257, %255 ], [ %254, %253 ]
  %264 = phi i32 [ %261, %259 ], [ %256, %255 ], [ -2147483648, %253 ]
  %265 = phi i32 [ %261, %259 ], [ 0, %255 ], [ 0, %253 ]
  %266 = select i1 %263, i32 %245, i32 0
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %6, i8 zeroext 63) #16
  %267 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %267) #16
  %268 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 12
  %269 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %270 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %271 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %267, i8 -86, i64 32, i1 false) #16
  store i8* %268, i8** %269, align 8
  %272 = urem i32 %266, 10
  %273 = udiv i32 %266, 10
  %274 = trunc i32 %272 to i8
  %275 = or i8 %274, 48
  store i8 %275, i8* %268, align 4
  %276 = icmp ugt i32 %266, 9
  %277 = ptrtoint i8* %268 to i64
  br i1 %276, label %278, label %313

278:                                              ; preds = %262
  %279 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 11
  store i8* %279, i8** %269, align 8
  %280 = urem i32 %273, 10
  %281 = trunc i32 %280 to i8
  %282 = or i8 %281, 48
  store i8 %282, i8* %279, align 1
  %283 = icmp ugt i32 %266, 99
  %284 = ptrtoint i8* %279 to i64
  br i1 %283, label %285, label %313

285:                                              ; preds = %278
  %286 = udiv i32 %266, 100
  %287 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 10
  store i8* %287, i8** %269, align 8
  %288 = urem i32 %286, 10
  %289 = trunc i32 %288 to i8
  %290 = or i8 %289, 48
  store i8 %290, i8* %287, align 2
  %291 = icmp ugt i32 %266, 999
  br i1 %291, label %292, label %299

292:                                              ; preds = %285
  %293 = udiv i32 %266, 1000
  %294 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 9
  store i8* %294, i8** %269, align 8
  %295 = urem i32 %293, 10
  %296 = trunc i32 %295 to i8
  %297 = or i8 %296, 48
  store i8 %297, i8* %294, align 1
  %298 = icmp ugt i32 %266, 9999
  br i1 %298, label %301, label %310

299:                                              ; preds = %285
  %300 = ptrtoint i8* %287 to i64
  br label %313

301:                                              ; preds = %292, %301
  %302 = phi i32 [ %304, %301 ], [ %293, %292 ]
  %303 = load i8*, i8** %269, align 8
  %304 = udiv i32 %302, 10
  %305 = getelementptr inbounds i8, i8* %303, i64 -1
  store i8* %305, i8** %269, align 8
  %306 = urem i32 %304, 10
  %307 = trunc i32 %306 to i8
  %308 = or i8 %307, 48
  store i8 %308, i8* %305, align 1
  %309 = icmp ugt i32 %302, 99
  br i1 %309, label %301, label %310

310:                                              ; preds = %301, %292
  %311 = bitcast i8** %269 to i64*
  %312 = load i64, i64* %311, align 8
  br label %313

313:                                              ; preds = %310, %299, %278, %262
  %314 = phi i64 [ %284, %278 ], [ %277, %262 ], [ %312, %310 ], [ %300, %299 ]
  %315 = ptrtoint i8* %271 to i64
  %316 = sub i64 %315, %314
  %317 = trunc i64 %316 to i32
  store i32 %317, i32* %270, align 8
  %318 = inttoptr i64 %314 to i8*
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %6, i8* %318, i32 %317) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #16
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %6, i8 zeroext 44) #16
  %319 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %319) #16
  %320 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  %321 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %322 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %323 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %319, i8 -86, i64 32, i1 false) #16
  store i8* %320, i8** %321, align 8
  %324 = urem i32 %265, 10
  %325 = trunc i32 %324 to i8
  %326 = or i8 %325, 48
  store i8 %326, i8* %320, align 4
  %327 = icmp ugt i32 %265, 9
  %328 = ptrtoint i8* %320 to i64
  br i1 %327, label %329, label %365

329:                                              ; preds = %313
  %330 = udiv i32 %264, 10
  %331 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  store i8* %331, i8** %321, align 8
  %332 = urem i32 %330, 10
  %333 = trunc i32 %332 to i8
  %334 = or i8 %333, 48
  store i8 %334, i8* %331, align 1
  %335 = icmp ugt i32 %264, 99
  %336 = ptrtoint i8* %331 to i64
  br i1 %335, label %337, label %365

337:                                              ; preds = %329
  %338 = udiv i32 %264, 100
  %339 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %339, i8** %321, align 8
  %340 = urem i32 %338, 10
  %341 = trunc i32 %340 to i8
  %342 = or i8 %341, 48
  store i8 %342, i8* %339, align 2
  %343 = icmp ugt i32 %264, 999
  br i1 %343, label %344, label %351

344:                                              ; preds = %337
  %345 = udiv i32 %264, 1000
  %346 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 9
  store i8* %346, i8** %321, align 8
  %347 = urem i32 %345, 10
  %348 = trunc i32 %347 to i8
  %349 = or i8 %348, 48
  store i8 %349, i8* %346, align 1
  %350 = icmp ugt i32 %264, 9999
  br i1 %350, label %353, label %362

351:                                              ; preds = %337
  %352 = ptrtoint i8* %339 to i64
  br label %365

353:                                              ; preds = %344, %353
  %354 = phi i32 [ %356, %353 ], [ %345, %344 ]
  %355 = load i8*, i8** %321, align 8
  %356 = udiv i32 %354, 10
  %357 = getelementptr inbounds i8, i8* %355, i64 -1
  store i8* %357, i8** %321, align 8
  %358 = urem i32 %356, 10
  %359 = trunc i32 %358 to i8
  %360 = or i8 %359, 48
  store i8 %360, i8* %357, align 1
  %361 = icmp ugt i32 %354, 99
  br i1 %361, label %353, label %362

362:                                              ; preds = %353, %344
  %363 = bitcast i8** %321 to i64*
  %364 = load i64, i64* %363, align 8
  br label %365

365:                                              ; preds = %362, %351, %329, %313
  %366 = phi i64 [ %336, %329 ], [ %328, %313 ], [ %364, %362 ], [ %352, %351 ]
  %367 = ptrtoint i8* %323 to i64
  %368 = sub i64 %367, %366
  %369 = trunc i64 %368 to i32
  store i32 %369, i32* %322, align 8
  %370 = inttoptr i64 %366 to i8*
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %6, i8* %370, i32 %369) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %319) #16
  br label %371

371:                                              ; preds = %145, %148, %154, %163, %168, %180, %194, %200, %365
  %372 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %372) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %372, i8 -86, i64 112, i1 false)
  %373 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %374 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %373, i64 0, i32 2, i32 0, i32 0
  %375 = load %"class.blink::Document"*, %"class.blink::Document"** %374, align 8
  %376 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %376) #16
  %377 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #16
  %378 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %377, %"class.WTF::StringImpl"** %378, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %8, %"class.blink::Document"* %375, %"class.WTF::String"* nonnull dereferenceable(8) %9) #16
  %379 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %378, align 8
  %380 = icmp eq %"class.WTF::StringImpl"* %379, null
  br i1 %380, label %394, label %381

381:                                              ; preds = %371
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = load atomic i32, i32* %382 monotonic, align 4
  %384 = and i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 0
  %387 = load i32, i32* %386, align 4
  br i1 %385, label %388, label %390

388:                                              ; preds = %381
  %389 = add i32 %387, -1
  store i32 %389, i32* %386, align 4
  br label %390

390:                                              ; preds = %388, %381
  %391 = phi i32 [ %389, %388 ], [ %387, %381 ]
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %394

393:                                              ; preds = %390
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %379) #16
  br label %394

394:                                              ; preds = %371, %390, %393
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %376) #16
  call void @_ZNK5blink17HTMLAnchorElement9SendPingsERKNS_4KURLE(%"class.blink::HTMLAnchorElement"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %8)
  %395 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %10, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %395) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %395, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %10, %"class.blink::KURL"* nonnull dereferenceable(112) %8) #16
  %396 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %396) #16
  store i32 -1431655766, i32* %11, align 4
  %397 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kReferrerpolicyAttrE, align 8
  %398 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %60, align 8
  %399 = icmp eq %"class.blink::ElementData"* %398, null
  br i1 %399, label %400, label %404

400:                                              ; preds = %394
  %401 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %27, i64 0, i32 0, i32 1, i32 0, i32 0
  %402 = bitcast %"class.blink::Frame"** %401 to %"class.blink::LocalFrame"**
  %403 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %402, align 8
  br label %833

404:                                              ; preds = %394
  %405 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %398, i64 0, i32 0, i32 0, i32 0
  %406 = load i32, i32* %405, align 4
  %407 = and i32 %406, 1
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %416, label %409

409:                                              ; preds = %404
  %410 = bitcast %"class.blink::ElementData"* %398 to %"class.blink::UniqueElementData"*
  %411 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %398, i64 1, i32 1
  %412 = bitcast %"class.blink::Member.14"* %411 to %"class.blink::Attribute"**
  %413 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %412, align 8
  %414 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %410, i64 0, i32 2, i32 0, i32 0, i32 2
  %415 = load i32, i32* %414, align 4
  br label %421

416:                                              ; preds = %404
  %417 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %398, i64 1
  %418 = bitcast %"class.blink::ElementData"* %417 to %"class.blink::Attribute"*
  %419 = lshr i32 %406, 1
  %420 = and i32 %419, 268435455
  br label %421

421:                                              ; preds = %416, %409
  %422 = phi %"class.blink::Attribute"* [ %418, %416 ], [ %413, %409 ]
  %423 = phi i32 [ %420, %416 ], [ %415, %409 ]
  %424 = zext i32 %423 to i64
  %425 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %422, i64 %424
  %426 = icmp eq i32 %423, 0
  br i1 %426, label %517, label %427

427:                                              ; preds = %421
  %428 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %397, i64 0, i32 0, i32 0
  %429 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %428, align 8
  %430 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %429, i64 0, i32 3, i32 0, i32 0, i32 0
  %431 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %429, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %432

432:                                              ; preds = %448, %427
  %433 = phi %"class.blink::Attribute"* [ %422, %427 ], [ %449, %448 ]
  %434 = phi i32 [ 0, %427 ], [ %450, %448 ]
  %435 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %433, i64 0, i32 0, i32 0, i32 0
  %436 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %435, align 8
  %437 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %436, %429
  br i1 %437, label %452, label %438

438:                                              ; preds = %432
  %439 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %436, i64 0, i32 3, i32 0, i32 0, i32 0
  %440 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %439, align 8
  %441 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %430, align 8
  %442 = icmp eq %"class.WTF::StringImpl"* %440, %441
  br i1 %442, label %443, label %448

443:                                              ; preds = %438
  %444 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %436, i64 0, i32 4, i32 0, i32 0, i32 0
  %445 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %444, align 8
  %446 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %431, align 8
  %447 = icmp eq %"class.WTF::StringImpl"* %445, %446
  br i1 %447, label %452, label %448

448:                                              ; preds = %443, %438
  %449 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %433, i64 1
  %450 = add i32 %434, 1
  %451 = icmp eq %"class.blink::Attribute"* %449, %425
  br i1 %451, label %517, label %432

452:                                              ; preds = %432, %443
  %453 = icmp eq i32 %434, -1
  br i1 %453, label %517, label %454

454:                                              ; preds = %452
  br i1 %408, label %462, label %455

455:                                              ; preds = %454
  %456 = bitcast %"class.blink::ElementData"* %398 to %"class.blink::UniqueElementData"*
  %457 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %398, i64 1, i32 1
  %458 = bitcast %"class.blink::Member.14"* %457 to %"class.blink::Attribute"**
  %459 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %458, align 8
  %460 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %456, i64 0, i32 2, i32 0, i32 0, i32 2
  %461 = load i32, i32* %460, align 4
  br label %467

462:                                              ; preds = %454
  %463 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %398, i64 1
  %464 = bitcast %"class.blink::ElementData"* %463 to %"class.blink::Attribute"*
  %465 = lshr i32 %406, 1
  %466 = and i32 %465, 268435455
  br label %467

467:                                              ; preds = %462, %455
  %468 = phi %"class.blink::Attribute"* [ %464, %462 ], [ %459, %455 ]
  %469 = phi i32 [ %466, %462 ], [ %461, %455 ]
  %470 = zext i32 %469 to i64
  %471 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %468, i64 %470
  %472 = icmp eq i32 %469, 0
  br i1 %472, label %495, label %473

473:                                              ; preds = %467, %488
  %474 = phi %"class.blink::Attribute"* [ %489, %488 ], [ %468, %467 ]
  %475 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %474, i64 0, i32 0, i32 0, i32 0
  %476 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %475, align 8
  %477 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %476, %429
  br i1 %477, label %491, label %478

478:                                              ; preds = %473
  %479 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %476, i64 0, i32 3, i32 0, i32 0, i32 0
  %480 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %479, align 8
  %481 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %430, align 8
  %482 = icmp eq %"class.WTF::StringImpl"* %480, %481
  br i1 %482, label %483, label %488

483:                                              ; preds = %478
  %484 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %476, i64 0, i32 4, i32 0, i32 0, i32 0
  %485 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %484, align 8
  %486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %431, align 8
  %487 = icmp eq %"class.WTF::StringImpl"* %485, %486
  br i1 %487, label %491, label %488

488:                                              ; preds = %483, %478
  %489 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %474, i64 1
  %490 = icmp eq %"class.blink::Attribute"* %489, %471
  br i1 %490, label %495, label %473

491:                                              ; preds = %483, %473
  %492 = icmp eq %"class.blink::Attribute"* %474, null
  br i1 %492, label %495, label %493

493:                                              ; preds = %491
  %494 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %474, i64 0, i32 1
  br label %497

495:                                              ; preds = %488, %491, %467
  %496 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %497

497:                                              ; preds = %493, %495
  %498 = phi %"class.WTF::AtomicString"* [ %496, %495 ], [ %494, %493 ]
  %499 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %498, i64 0, i32 0
  %500 = call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8) %499, i32 0, i32* nonnull %11) #16
  br i1 %500, label %501, label %517

501:                                              ; preds = %497
  %502 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 2
  %503 = load i32, i32* %502, align 4
  %504 = and i32 %503, 4096
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %517

506:                                              ; preds = %501
  %507 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %508 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %507, i64 0, i32 2, i32 0, i32 0
  %509 = load %"class.blink::Document"*, %"class.blink::Document"** %508, align 8
  %510 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %509, i64 0, i32 2
  %511 = bitcast %"class.blink::UseCounter"* %510 to void (%"class.blink::UseCounter"*, i32)***
  %512 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %511, align 8
  %513 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %512, i64 3
  %514 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %513, align 8
  call void %514(%"class.blink::UseCounter"* %510, i32 1754) #16
  %515 = load i32, i32* %11, align 4
  %516 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %10, i64 0, i32 0, i32 23
  store i32 %515, i32* %516, align 8
  br label %517

517:                                              ; preds = %448, %501, %452, %421, %506, %497
  %518 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %60, align 8
  %519 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %27, i64 0, i32 0, i32 1, i32 0, i32 0
  %520 = bitcast %"class.blink::Frame"** %519 to %"class.blink::LocalFrame"**
  %521 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %520, align 8
  %522 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kDownloadAttrE, align 8
  %523 = icmp eq %"class.blink::ElementData"* %518, null
  br i1 %523, label %833, label %524

524:                                              ; preds = %517
  %525 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %518, i64 0, i32 0, i32 0, i32 0
  %526 = load i32, i32* %525, align 4
  %527 = and i32 %526, 1
  %528 = icmp eq i32 %527, 0
  br i1 %528, label %536, label %529

529:                                              ; preds = %524
  %530 = bitcast %"class.blink::ElementData"* %518 to %"class.blink::UniqueElementData"*
  %531 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %518, i64 1, i32 1
  %532 = bitcast %"class.blink::Member.14"* %531 to %"class.blink::Attribute"**
  %533 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %532, align 8
  %534 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %530, i64 0, i32 2, i32 0, i32 0, i32 2
  %535 = load i32, i32* %534, align 4
  br label %541

536:                                              ; preds = %524
  %537 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %518, i64 1
  %538 = bitcast %"class.blink::ElementData"* %537 to %"class.blink::Attribute"*
  %539 = lshr i32 %526, 1
  %540 = and i32 %539, 268435455
  br label %541

541:                                              ; preds = %536, %529
  %542 = phi %"class.blink::Attribute"* [ %538, %536 ], [ %533, %529 ]
  %543 = phi i32 [ %540, %536 ], [ %535, %529 ]
  %544 = zext i32 %543 to i64
  %545 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %542, i64 %544
  %546 = icmp eq i32 %543, 0
  br i1 %546, label %833, label %547

547:                                              ; preds = %541
  %548 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %522, i64 0, i32 0, i32 0
  %549 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %548, align 8
  %550 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %549, i64 0, i32 3, i32 0, i32 0, i32 0
  %551 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %549, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %552

552:                                              ; preds = %568, %547
  %553 = phi %"class.blink::Attribute"* [ %542, %547 ], [ %569, %568 ]
  %554 = phi i32 [ 0, %547 ], [ %570, %568 ]
  %555 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %553, i64 0, i32 0, i32 0, i32 0
  %556 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %555, align 8
  %557 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %556, %549
  br i1 %557, label %572, label %558

558:                                              ; preds = %552
  %559 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %556, i64 0, i32 3, i32 0, i32 0, i32 0
  %560 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %559, align 8
  %561 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %550, align 8
  %562 = icmp eq %"class.WTF::StringImpl"* %560, %561
  br i1 %562, label %563, label %568

563:                                              ; preds = %558
  %564 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %556, i64 0, i32 4, i32 0, i32 0, i32 0
  %565 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %564, align 8
  %566 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %551, align 8
  %567 = icmp eq %"class.WTF::StringImpl"* %565, %566
  br i1 %567, label %572, label %568

568:                                              ; preds = %563, %558
  %569 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %553, i64 1
  %570 = add i32 %554, 1
  %571 = icmp eq %"class.blink::Attribute"* %569, %545
  br i1 %571, label %833, label %552

572:                                              ; preds = %552, %563
  %573 = icmp eq i32 %554, -1
  br i1 %573, label %833, label %574

574:                                              ; preds = %572
  %575 = call i32 @_ZN5blink25NavigationPolicyFromEventEPKNS_5EventE(%"class.blink::Event"* %1) #16
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %833, label %577

577:                                              ; preds = %574
  %578 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %27, i64 0, i32 1
  %579 = bitcast %"class.blink::ExecutionContext.base"* %578 to %"class.blink::ExecutionContext"*
  %580 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %579) #16
  %581 = call zeroext i1 @_ZNK5blink14SecurityOrigin14CanReadContentERKNS_4KURLE(%"class.blink::SecurityOrigin"* %580, %"class.blink::KURL"* nonnull dereferenceable(112) %8) #16
  br i1 %581, label %582, label %833

582:                                              ; preds = %577
  %583 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %521) #16
  %584 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %583, i64 0, i32 2
  %585 = bitcast %"class.blink::UseCounter"* %584 to void (%"class.blink::UseCounter"*, i32)***
  %586 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %585, align 8
  %587 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %586, i64 3
  %588 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %587, align 8
  call void %588(%"class.blink::UseCounter"* %584, i32 2838) #16
  %589 = call zeroext i1 @_ZN5blink10LocalFrame26HasTransientUserActivationEPS0_(%"class.blink::LocalFrame"* %521) #16
  br i1 %589, label %594, label %590

590:                                              ; preds = %582
  %591 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %585, align 8
  %592 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %591, i64 3
  %593 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %592, align 8
  call void %593(%"class.blink::UseCounter"* %584, i32 2976) #16
  br label %594

594:                                              ; preds = %590, %582
  %595 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %521, i64 0, i32 0
  %596 = call zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"* %595) #16
  br i1 %596, label %597, label %607

597:                                              ; preds = %594
  %598 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %585, align 8
  %599 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %598, i64 3
  %600 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %599, align 8
  call void %600(%"class.blink::UseCounter"* %584, i32 2974) #16
  br i1 %589, label %607, label %601

601:                                              ; preds = %597
  %602 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %585, align 8
  %603 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %602, i64 3
  %604 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %603, align 8
  call void %604(%"class.blink::UseCounter"* %584, i32 2653) #16
  %605 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features48kBlockingDownloadsInAdFrameWithoutUserActivationE) #16
  %606 = zext i1 %605 to i8
  br label %607

607:                                              ; preds = %601, %597, %594
  %608 = phi i8 [ 0, %597 ], [ 0, %594 ], [ %606, %601 ]
  %609 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %521) #16
  %610 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %609, i64 0, i32 1
  %611 = bitcast %"class.blink::ExecutionContext.base"* %610 to %"class.blink::ExecutionContext"*
  %612 = call zeroext i1 @_ZNK5blink16ExecutionContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::ExecutionContext"* %611, i32 32768) #16
  br i1 %612, label %613, label %620

613:                                              ; preds = %607
  %614 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %585, align 8
  %615 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %614, i64 3
  %616 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %615, align 8
  call void %616(%"class.blink::UseCounter"* %584, i32 2975) #16
  %617 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase41is_blocking_downloads_in_sandbox_enabled_E, align 1, !range !2
  %618 = icmp eq i8 %617, 0
  %619 = select i1 %618, i8 %608, i8 1
  br label %620

620:                                              ; preds = %613, %607
  %621 = phi i8 [ %608, %607 ], [ %619, %613 ]
  %622 = and i8 %621, 1
  %623 = icmp eq i8 %622, 0
  br i1 %623, label %624, label %1229

624:                                              ; preds = %620
  %625 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %585, align 8
  %626 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %625, i64 3
  %627 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %626, align 8
  call void %627(%"class.blink::UseCounter"* %584, i32 2839) #16
  %628 = getelementptr inbounds %"class.absl::optional.1870", %"class.absl::optional.1870"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %628) #16
  %629 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %60, align 8
  %630 = icmp eq %"class.blink::ElementData"* %629, null
  br i1 %630, label %680, label %631

631:                                              ; preds = %624
  %632 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %629, i64 0, i32 0, i32 0, i32 0
  %633 = load i32, i32* %632, align 4
  %634 = and i32 %633, 1
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %643, label %636

636:                                              ; preds = %631
  %637 = bitcast %"class.blink::ElementData"* %629 to %"class.blink::UniqueElementData"*
  %638 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %629, i64 1, i32 1
  %639 = bitcast %"class.blink::Member.14"* %638 to %"class.blink::Attribute"**
  %640 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %639, align 8
  %641 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %637, i64 0, i32 2, i32 0, i32 0, i32 2
  %642 = load i32, i32* %641, align 4
  br label %648

643:                                              ; preds = %631
  %644 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %629, i64 1
  %645 = bitcast %"class.blink::ElementData"* %644 to %"class.blink::Attribute"*
  %646 = lshr i32 %633, 1
  %647 = and i32 %646, 268435455
  br label %648

648:                                              ; preds = %643, %636
  %649 = phi %"class.blink::Attribute"* [ %645, %643 ], [ %640, %636 ]
  %650 = phi i32 [ %647, %643 ], [ %642, %636 ]
  %651 = zext i32 %650 to i64
  %652 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %649, i64 %651
  %653 = icmp eq i32 %650, 0
  br i1 %653, label %680, label %654

654:                                              ; preds = %648
  %655 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %548, align 8
  %656 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %655, i64 0, i32 3, i32 0, i32 0, i32 0
  %657 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %655, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %658

658:                                              ; preds = %673, %654
  %659 = phi %"class.blink::Attribute"* [ %649, %654 ], [ %674, %673 ]
  %660 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %659, i64 0, i32 0, i32 0, i32 0
  %661 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %660, align 8
  %662 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %661, %655
  br i1 %662, label %676, label %663

663:                                              ; preds = %658
  %664 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %661, i64 0, i32 3, i32 0, i32 0, i32 0
  %665 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %664, align 8
  %666 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %656, align 8
  %667 = icmp eq %"class.WTF::StringImpl"* %665, %666
  br i1 %667, label %668, label %673

668:                                              ; preds = %663
  %669 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %661, i64 0, i32 4, i32 0, i32 0, i32 0
  %670 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %669, align 8
  %671 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %657, align 8
  %672 = icmp eq %"class.WTF::StringImpl"* %670, %671
  br i1 %672, label %676, label %673

673:                                              ; preds = %668, %663
  %674 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %659, i64 1
  %675 = icmp eq %"class.blink::Attribute"* %674, %652
  br i1 %675, label %680, label %658

676:                                              ; preds = %668, %658
  %677 = icmp eq %"class.blink::Attribute"* %659, null
  br i1 %677, label %680, label %678

678:                                              ; preds = %676
  %679 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %659, i64 0, i32 1
  br label %682

680:                                              ; preds = %673, %676, %648, %624
  %681 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %682

682:                                              ; preds = %678, %680
  %683 = phi %"class.WTF::AtomicString"* [ %681, %680 ], [ %679, %678 ]
  %684 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %683, i64 0, i32 0, i32 0, i32 0
  %685 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %684, align 8
  %686 = ptrtoint %"class.WTF::StringImpl"* %685 to i64
  %687 = icmp eq %"class.WTF::StringImpl"* %685, null
  br i1 %687, label %705, label %688

688:                                              ; preds = %682
  %689 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %685, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %690 = load atomic i32, i32* %689 monotonic, align 4
  %691 = and i32 %690, 2
  %692 = icmp eq i32 %691, 0
  br i1 %692, label %693, label %705

693:                                              ; preds = %688
  %694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %685, i64 0, i32 0
  %695 = load i32, i32* %694, align 4
  %696 = zext i32 %695 to i33
  %697 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %696, i33 1) #16
  %698 = extractvalue { i33, i1 } %697, 1
  %699 = extractvalue { i33, i1 } %697, 0
  %700 = icmp slt i33 %699, 0
  %701 = or i1 %698, %700
  br i1 %701, label %702, label %703, !prof !3

702:                                              ; preds = %693
  call void @llvm.trap() #16
  unreachable

703:                                              ; preds = %693
  %704 = trunc i33 %699 to i32
  store i32 %704, i32* %694, align 4
  br label %705

705:                                              ; preds = %682, %688, %703
  store i8 1, i8* %628, align 8
  %706 = getelementptr inbounds %"class.absl::optional.1870", %"class.absl::optional.1870"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %707 = bitcast %"class.WTF::String"* %706 to i64*
  store i64 %686, i64* %707, align 8
  %708 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %10, i64 0, i32 0, i32 28, i32 0
  %709 = getelementptr inbounds %"class.absl::optional.1870", %"class.absl::optional.1870"* %12, i64 0, i32 0
  %710 = call dereferenceable(16) %"class.absl::optional_internal::optional_data.1871"* @_ZN4absl17optional_internal13optional_dataIN3WTF6StringELb0EEaSERKS4_(%"class.absl::optional_internal::optional_data.1871"* %708, %"class.absl::optional_internal::optional_data.1871"* nonnull dereferenceable(16) %709) #16
  %711 = load i8, i8* %628, align 8, !range !2
  %712 = icmp eq i8 %711, 0
  br i1 %712, label %731, label %713

713:                                              ; preds = %705
  %714 = getelementptr inbounds %"class.absl::optional.1870", %"class.absl::optional.1870"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %715 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %714, align 8
  %716 = icmp eq %"class.WTF::StringImpl"* %715, null
  br i1 %716, label %730, label %717

717:                                              ; preds = %713
  %718 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %715, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %719 = load atomic i32, i32* %718 monotonic, align 4
  %720 = and i32 %719, 2
  %721 = icmp eq i32 %720, 0
  %722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %715, i64 0, i32 0
  %723 = load i32, i32* %722, align 4
  br i1 %721, label %724, label %726

724:                                              ; preds = %717
  %725 = add i32 %723, -1
  store i32 %725, i32* %722, align 4
  br label %726

726:                                              ; preds = %724, %717
  %727 = phi i32 [ %725, %724 ], [ %723, %717 ]
  %728 = icmp eq i32 %727, 0
  br i1 %728, label %729, label %730

729:                                              ; preds = %726
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %715) #16
  br label %730

730:                                              ; preds = %729, %726, %713
  store i8 0, i8* %628, align 8
  br label %731

731:                                              ; preds = %730, %705
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %628) #16
  %732 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %10, i64 0, i32 0, i32 15
  store i32 4, i32* %732, align 8
  %733 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %579) #16
  %734 = icmp eq %"class.blink::SecurityOrigin"* %733, null
  br i1 %734, label %737, label %735

735:                                              ; preds = %731
  %736 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %733, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %736) #16
  br label %737

737:                                              ; preds = %731, %735
  %738 = ptrtoint %"class.blink::SecurityOrigin"* %733 to i64
  %739 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %10, i64 0, i32 0, i32 4
  %740 = bitcast %class.scoped_refptr.348* %739 to i64*
  %741 = getelementptr inbounds %class.scoped_refptr.348, %class.scoped_refptr.348* %739, i64 0, i32 0
  %742 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %741, align 8
  store i64 %738, i64* %740, align 8
  %743 = icmp eq %"class.blink::SecurityOrigin"* %742, null
  br i1 %743, label %751, label %744

744:                                              ; preds = %737
  %745 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %742, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %745) #16
  %746 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %742, i64 0, i32 0, i32 0, i32 0, i32 0
  %747 = load i32, i32* %746, align 4
  %748 = icmp eq i32 %747, 0
  br i1 %748, label %749, label %751

749:                                              ; preds = %744
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %742) #16
  %750 = bitcast %"class.blink::SecurityOrigin"* %742 to i8*
  call void @free(i8* %750) #16
  br label %751

751:                                              ; preds = %737, %744, %749
  %752 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %10, i64 0, i32 0, i32 23
  %753 = load i32, i32* %752, align 8
  %754 = icmp eq i32 %753, 1
  br i1 %754, label %755, label %757

755:                                              ; preds = %751
  %756 = call i32 @_ZNK5blink16ExecutionContext17GetReferrerPolicyEv(%"class.blink::ExecutionContext"* %579) #16
  br label %757

757:                                              ; preds = %755, %751
  %758 = phi i32 [ %756, %755 ], [ %753, %751 ]
  %759 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %759) #16
  %760 = call %"class.WTF::StringImpl"* @_ZNK5blink14LocalDOMWindow16OutgoingReferrerEv(%"class.blink::LocalDOMWindow"* nonnull %27) #16
  %761 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %760, %"class.WTF::StringImpl"** %761, align 8
  %762 = call { %"class.WTF::StringImpl"*, i32 } @_ZN5blink14SecurityPolicy16GenerateReferrerEN7network5mojom14ReferrerPolicyERKNS_4KURLERKN3WTF6StringE(i32 %758, %"class.blink::KURL"* nonnull dereferenceable(112) %8, %"class.WTF::String"* nonnull dereferenceable(8) %13) #16
  %763 = extractvalue { %"class.WTF::StringImpl"*, i32 } %762, 0
  %764 = extractvalue { %"class.WTF::StringImpl"*, i32 } %762, 1
  %765 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %761, align 8
  %766 = icmp eq %"class.WTF::StringImpl"* %765, null
  br i1 %766, label %780, label %767

767:                                              ; preds = %757
  %768 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %765, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %769 = load atomic i32, i32* %768 monotonic, align 4
  %770 = and i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %765, i64 0, i32 0
  %773 = load i32, i32* %772, align 4
  br i1 %771, label %774, label %776

774:                                              ; preds = %767
  %775 = add i32 %773, -1
  store i32 %775, i32* %772, align 4
  br label %776

776:                                              ; preds = %774, %767
  %777 = phi i32 [ %775, %774 ], [ %773, %767 ]
  %778 = icmp eq i32 %777, 0
  br i1 %778, label %779, label %780

779:                                              ; preds = %776
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %765) #16
  br label %780

780:                                              ; preds = %757, %776, %779
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %759) #16
  %781 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %10, i64 0, i32 0, i32 22
  %782 = icmp eq %"class.WTF::StringImpl"* %763, null
  br i1 %782, label %800, label %783

783:                                              ; preds = %780
  %784 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %763, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %785 = load atomic i32, i32* %784 monotonic, align 4
  %786 = and i32 %785, 2
  %787 = icmp eq i32 %786, 0
  br i1 %787, label %788, label %800

788:                                              ; preds = %783
  %789 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %763, i64 0, i32 0
  %790 = load i32, i32* %789, align 4
  %791 = zext i32 %790 to i33
  %792 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %791, i33 1) #16
  %793 = extractvalue { i33, i1 } %792, 1
  %794 = extractvalue { i33, i1 } %792, 0
  %795 = icmp slt i33 %794, 0
  %796 = or i1 %793, %795
  br i1 %796, label %797, label %798, !prof !3

797:                                              ; preds = %788
  call void @llvm.trap() #16
  unreachable

798:                                              ; preds = %788
  %799 = trunc i33 %794 to i32
  store i32 %799, i32* %789, align 4
  br label %800

800:                                              ; preds = %798, %783, %780
  %801 = ptrtoint %"class.WTF::StringImpl"* %763 to i64
  %802 = bitcast %"class.WTF::String"* %781 to i64*
  %803 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %781, i64 0, i32 0, i32 0
  %804 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %803, align 8
  store i64 %801, i64* %802, align 8
  %805 = icmp eq %"class.WTF::StringImpl"* %804, null
  br i1 %805, label %819, label %806

806:                                              ; preds = %800
  %807 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %804, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %808 = load atomic i32, i32* %807 monotonic, align 4
  %809 = and i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %804, i64 0, i32 0
  %812 = load i32, i32* %811, align 4
  br i1 %810, label %813, label %815

813:                                              ; preds = %806
  %814 = add i32 %812, -1
  store i32 %814, i32* %811, align 4
  br label %815

815:                                              ; preds = %813, %806
  %816 = phi i32 [ %814, %813 ], [ %812, %806 ]
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %818, label %819

818:                                              ; preds = %815
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %804) #16
  br label %819

819:                                              ; preds = %800, %815, %818
  store i32 %764, i32* %752, align 8
  call void @_ZN5blink10LocalFrame11DownloadURLERKNS_15ResourceRequestEN7network5mojom12RedirectModeE(%"class.blink::LocalFrame"* %521, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %10, i32 2) #16
  br i1 %782, label %1229, label %820

820:                                              ; preds = %819
  %821 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %763, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %822 = load atomic i32, i32* %821 monotonic, align 4
  %823 = and i32 %822, 2
  %824 = icmp eq i32 %823, 0
  %825 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %763, i64 0, i32 0
  %826 = load i32, i32* %825, align 4
  br i1 %824, label %827, label %829

827:                                              ; preds = %820
  %828 = add i32 %826, -1
  store i32 %828, i32* %825, align 4
  br label %829

829:                                              ; preds = %827, %820
  %830 = phi i32 [ %828, %827 ], [ %826, %820 ]
  %831 = icmp eq i32 %830, 0
  br i1 %831, label %832, label %1229

832:                                              ; preds = %829
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %763) #16
  br label %1229

833:                                              ; preds = %568, %572, %541, %400, %517, %574, %577
  %834 = phi %"class.blink::LocalFrame"* [ %521, %574 ], [ %521, %577 ], [ %521, %572 ], [ %403, %400 ], [ %521, %517 ], [ %521, %541 ], [ %521, %568 ]
  %835 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %10, i64 0, i32 0
  %836 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %10, i64 0, i32 0, i32 15
  store i32 12, i32* %836, align 8
  %837 = call zeroext i1 @_ZN5blink10LocalFrame26HasTransientUserActivationEPS0_(%"class.blink::LocalFrame"* %834) #16
  call void @_ZN5blink19ResourceRequestHead17SetHasUserGestureEb(%"class.blink::ResourceRequestHead"* nonnull %835, i1 zeroext %837) #16
  %838 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kTargetAttrE, align 8
  %839 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %60, align 8
  %840 = icmp eq %"class.blink::ElementData"* %839, null
  br i1 %840, label %891, label %841

841:                                              ; preds = %833
  %842 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %839, i64 0, i32 0, i32 0, i32 0
  %843 = load i32, i32* %842, align 4
  %844 = and i32 %843, 1
  %845 = icmp eq i32 %844, 0
  br i1 %845, label %853, label %846

846:                                              ; preds = %841
  %847 = bitcast %"class.blink::ElementData"* %839 to %"class.blink::UniqueElementData"*
  %848 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %839, i64 1, i32 1
  %849 = bitcast %"class.blink::Member.14"* %848 to %"class.blink::Attribute"**
  %850 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %849, align 8
  %851 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %847, i64 0, i32 2, i32 0, i32 0, i32 2
  %852 = load i32, i32* %851, align 4
  br label %858

853:                                              ; preds = %841
  %854 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %839, i64 1
  %855 = bitcast %"class.blink::ElementData"* %854 to %"class.blink::Attribute"*
  %856 = lshr i32 %843, 1
  %857 = and i32 %856, 268435455
  br label %858

858:                                              ; preds = %853, %846
  %859 = phi %"class.blink::Attribute"* [ %855, %853 ], [ %850, %846 ]
  %860 = phi i32 [ %857, %853 ], [ %852, %846 ]
  %861 = zext i32 %860 to i64
  %862 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %859, i64 %861
  %863 = icmp eq i32 %860, 0
  br i1 %863, label %891, label %864

864:                                              ; preds = %858
  %865 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %838, i64 0, i32 0, i32 0
  %866 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %865, align 8
  %867 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %866, i64 0, i32 3, i32 0, i32 0, i32 0
  %868 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %866, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %869

869:                                              ; preds = %884, %864
  %870 = phi %"class.blink::Attribute"* [ %859, %864 ], [ %885, %884 ]
  %871 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %870, i64 0, i32 0, i32 0, i32 0
  %872 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %871, align 8
  %873 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %872, %866
  br i1 %873, label %887, label %874

874:                                              ; preds = %869
  %875 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %872, i64 0, i32 3, i32 0, i32 0, i32 0
  %876 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %875, align 8
  %877 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %867, align 8
  %878 = icmp eq %"class.WTF::StringImpl"* %876, %877
  br i1 %878, label %879, label %884

879:                                              ; preds = %874
  %880 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %872, i64 0, i32 4, i32 0, i32 0, i32 0
  %881 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %880, align 8
  %882 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %868, align 8
  %883 = icmp eq %"class.WTF::StringImpl"* %881, %882
  br i1 %883, label %887, label %884

884:                                              ; preds = %879, %874
  %885 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %870, i64 1
  %886 = icmp eq %"class.blink::Attribute"* %885, %862
  br i1 %886, label %891, label %869

887:                                              ; preds = %879, %869
  %888 = icmp eq %"class.blink::Attribute"* %870, null
  br i1 %888, label %891, label %889

889:                                              ; preds = %887
  %890 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %870, i64 0, i32 1
  br label %893

891:                                              ; preds = %884, %887, %858, %833
  %892 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %893

893:                                              ; preds = %891, %889
  %894 = phi %"class.WTF::AtomicString"* [ %892, %891 ], [ %890, %889 ]
  %895 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %894, i64 0, i32 0, i32 0, i32 0
  %896 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %895, align 8
  %897 = icmp eq %"class.WTF::StringImpl"* %896, null
  br i1 %897, label %902, label %898

898:                                              ; preds = %893
  %899 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %896, i64 0, i32 1
  %900 = load i32, i32* %899, align 4
  %901 = icmp eq i32 %900, 0
  br i1 %901, label %902, label %907

902:                                              ; preds = %898, %893
  %903 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %904 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %903, i64 0, i32 2, i32 0, i32 0
  %905 = load %"class.blink::Document"*, %"class.blink::Document"** %904, align 8
  %906 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %905, i64 0, i32 26
  br label %907

907:                                              ; preds = %898, %902
  %908 = phi %"class.WTF::AtomicString"* [ %906, %902 ], [ %894, %898 ]
  %909 = bitcast %"struct.blink::FrameLoadRequest"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1320, i8* nonnull %909) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %909, i8 -86, i64 1320, i1 false)
  call void @_ZN5blink16FrameLoadRequestC1EPNS_14LocalDOMWindowERKNS_15ResourceRequestE(%"struct.blink::FrameLoadRequest"* nonnull %14, %"class.blink::LocalDOMWindow"* nonnull %27, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %10) #16
  %910 = call i32 @_ZN5blink25NavigationPolicyFromEventEPKNS_5EventE(%"class.blink::Event"* %1) #16
  %911 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %14, i64 0, i32 4
  store i32 %910, i32* %911, align 4
  %912 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %14, i64 0, i32 3
  store i32 2, i32* %912, align 8
  %913 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 2
  %914 = load i32, i32* %913, align 4
  %915 = and i32 %914, 4096
  %916 = icmp eq i32 %915, 0
  br i1 %916, label %942, label %917

917:                                              ; preds = %907
  %918 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %14, i64 0, i32 7
  store i32 1, i32* %918, align 8
  %919 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %14, i64 0, i32 1, i32 0
  %920 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %14, i64 0, i32 1, i32 0, i32 22
  %921 = bitcast %"class.WTF::String"* %920 to i64*
  %922 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %920, i64 0, i32 0, i32 0
  %923 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %922, align 8
  store i64 0, i64* %921, align 8
  %924 = icmp eq %"class.WTF::StringImpl"* %923, null
  br i1 %924, label %938, label %925

925:                                              ; preds = %917
  %926 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %923, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %927 = load atomic i32, i32* %926 monotonic, align 4
  %928 = and i32 %927, 2
  %929 = icmp eq i32 %928, 0
  %930 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %923, i64 0, i32 0
  %931 = load i32, i32* %930, align 4
  br i1 %929, label %932, label %934

932:                                              ; preds = %925
  %933 = add i32 %931, -1
  store i32 %933, i32* %930, align 4
  br label %934

934:                                              ; preds = %932, %925
  %935 = phi i32 [ %933, %932 ], [ %931, %925 ]
  %936 = icmp eq i32 %935, 0
  br i1 %936, label %937, label %938

937:                                              ; preds = %934
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %923) #16
  br label %938

938:                                              ; preds = %917, %934, %937
  %939 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %14, i64 0, i32 1, i32 0, i32 23
  store i32 3, i32* %939, align 8
  call void @_ZN5blink19ResourceRequestHead15ClearHTTPOriginEv(%"class.blink::ResourceRequestHead"* %919) #16
  %940 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %14, i64 0, i32 12, i32 13
  store i8 1, i8* %940, align 2
  %941 = load i32, i32* %913, align 4
  br label %942

942:                                              ; preds = %907, %938
  %943 = phi i32 [ %914, %907 ], [ %941, %938 ]
  %944 = and i32 %943, 262144
  %945 = icmp eq i32 %944, 0
  %946 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %946) #16
  br i1 %945, label %947, label %981

947:                                              ; preds = %942
  %948 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %908, i64 0, i32 0, i32 0, i32 0
  %949 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %948, align 8
  %950 = icmp eq %"class.WTF::StringImpl"* %949, null
  br i1 %950, label %951, label %955

951:                                              ; preds = %947
  %952 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %952, align 8
  %953 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %954 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %953, i64* %954, align 8
  br label %962

955:                                              ; preds = %947
  %956 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %949, %"class.WTF::StringImpl"** %956, align 8
  %957 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %949, i64 0, i32 1
  %958 = load i32, i32* %957, align 4
  %959 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %949, i64 1
  %960 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %961 = bitcast i8** %960 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %959, %"class.WTF::StringImpl"** %961, align 8
  br label %962

962:                                              ; preds = %951, %955
  %963 = phi i32 [ %958, %955 ], [ 0, %951 ]
  %964 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %963, i32* %964, align 8
  %965 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %15, [7 x i8]* nonnull dereferenceable(7) @.str.9)
  br i1 %965, label %966, label %986

966:                                              ; preds = %962
  %967 = load i32, i32* %913, align 4
  %968 = and i32 %967, 524288
  %969 = icmp eq i32 %968, 0
  br i1 %969, label %970, label %985

970:                                              ; preds = %966
  %971 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase42is_target_blank_implies_no_opener_enabled_E, align 1, !range !2
  %972 = icmp eq i8 %971, 0
  br i1 %972, label %984, label %973

973:                                              ; preds = %970
  %974 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %834, i64 0, i32 0
  %975 = call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %974) #16
  %976 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %975, i64 0, i32 71
  %977 = bitcast [14 x i8]* %976 to i112*
  %978 = load i112, i112* %977, align 8
  %979 = and i112 %978, 2475880078570760549798248448
  %980 = icmp eq i112 %979, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %946) #16
  br i1 %980, label %987, label %982

981:                                              ; preds = %942
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %946) #16
  br label %982

982:                                              ; preds = %973, %981
  %983 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %14, i64 0, i32 12, i32 13
  store i8 1, i8* %983, align 2
  br label %987

984:                                              ; preds = %970
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %946) #16
  br label %987

985:                                              ; preds = %966
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %946) #16
  br label %987

986:                                              ; preds = %962
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %946) #16
  br label %987

987:                                              ; preds = %973, %986, %985, %984, %982
  %988 = load i16, i16* %18, align 8
  %989 = and i16 %988, 256
  %990 = icmp eq i16 %989, 0
  %991 = select i1 %990, i32 3, i32 2
  %992 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %14, i64 0, i32 5
  store i32 %991, i32* %992, align 8
  %993 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 10, i32 0, i32 0
  %994 = load i64, i64* %993, align 8
  %995 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %14, i64 0, i32 10, i32 0, i32 0
  store i64 %994, i64* %995, align 8
  call void @_ZN5blink10LocalFrame25MaybeLogAdClickNavigationEv(%"class.blink::LocalFrame"* %834) #16
  %996 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %10, i64 0, i32 0, i32 8
  %997 = load i16, i16* %996, align 8
  %998 = and i16 %997, 8
  %999 = icmp eq i16 %998, 0
  br i1 %999, label %1053, label %1000

1000:                                             ; preds = %987
  %1001 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names29kAttributionsourceeventidAttrE, align 8
  %1002 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %58, %"class.blink::QualifiedName"* dereferenceable(8) %1001) #16
  br i1 %1002, label %1003, label %1053

1003:                                             ; preds = %1000
  %1004 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names27kAttributiondestinationAttrE, align 8
  %1005 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %58, %"class.blink::QualifiedName"* dereferenceable(8) %1004) #16
  br i1 %1005, label %1006, label %1053

1006:                                             ; preds = %1003
  %1007 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1007) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1007, i8 -86, i64 64, i1 false)
  call void @_ZN5blink22GetImpressionForAnchorEPNS_17HTMLAnchorElementE(%"class.absl::optional.3041"* nonnull sret %16, %"class.blink::HTMLAnchorElement"* %0) #16
  %1008 = load i8, i8* %1007, align 8, !range !2
  %1009 = icmp eq i8 %1008, 0
  br i1 %1009, label %1052, label %1010

1010:                                             ; preds = %1006
  %1011 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1011) #16
  store i8 1, i8* %1011, align 8
  %1012 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1013 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %1012, i64 0, i32 0
  %1014 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1015 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %1012, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %1015, align 8
  call void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"* %1013, %"class.blink::WebSecurityOrigin"* dereferenceable(8) %1014) #16
  %1016 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1017 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %1016, i8 0, i64 16, i1 false) #16
  %1018 = load i8, i8* %1017, align 8, !range !2
  %1019 = icmp eq i8 %1018, 0
  br i1 %1019, label %1024, label %1020

1020:                                             ; preds = %1010
  %1021 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %1022 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %1023 = getelementptr inbounds %"class.blink::WebSecurityOrigin", %"class.blink::WebSecurityOrigin"* %1022, i64 0, i32 0, i32 0
  store i8* null, i8** %1023, align 8
  call void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"* %1022, %"class.blink::WebSecurityOrigin"* dereferenceable(8) %1021) #16
  store i8 1, i8* %1016, align 8
  br label %1024

1024:                                             ; preds = %1010, %1020
  %1025 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %1026 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %1027 = bitcast i64* %1025 to i8*
  %1028 = bitcast i64* %1026 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1027, i8* align 8 %1028, i64 32, i1 false) #16
  %1029 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %14, i64 0, i32 13, i32 0
  %1030 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %17, i64 0, i32 0
  %1031 = call dereferenceable(64) %"class.absl::optional_internal::optional_data.3042"* @_ZN4absl17optional_internal13optional_dataIN5blink13WebImpressionELb0EEaSERKS4_(%"class.absl::optional_internal::optional_data.3042"* %1029, %"class.absl::optional_internal::optional_data.3042"* nonnull dereferenceable(64) %1030) #16
  %1032 = load i8, i8* %1011, align 8, !range !2
  %1033 = icmp eq i8 %1032, 0
  br i1 %1033, label %1041, label %1034

1034:                                             ; preds = %1024
  %1035 = load i8, i8* %1016, align 8, !range !2
  %1036 = icmp eq i8 %1035, 0
  br i1 %1036, label %1039, label %1037

1037:                                             ; preds = %1034
  %1038 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %1038) #16
  store i8 0, i8* %1016, align 8
  br label %1039

1039:                                             ; preds = %1037, %1034
  %1040 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %1040) #16
  store i8 0, i8* %1011, align 8
  br label %1041

1041:                                             ; preds = %1039, %1024
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1011) #16
  %1042 = load i8, i8* %1007, align 8, !range !2
  %1043 = icmp eq i8 %1042, 0
  br i1 %1043, label %1052, label %1044

1044:                                             ; preds = %1041
  %1045 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1046 = load i8, i8* %1045, align 8, !range !2
  %1047 = icmp eq i8 %1046, 0
  br i1 %1047, label %1050, label %1048

1048:                                             ; preds = %1044
  %1049 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %1049) #16
  store i8 0, i8* %1045, align 8
  br label %1050

1050:                                             ; preds = %1048, %1044
  %1051 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %1051) #16
  store i8 0, i8* %1007, align 8
  br label %1052

1052:                                             ; preds = %1006, %1041, %1050
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1007) #16
  br label %1053

1053:                                             ; preds = %987, %1000, %1052, %1003
  %1054 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %834, i64 0, i32 0
  %1055 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %834, i64 0, i32 0, i32 1
  %1056 = call { %"class.blink::Frame"*, i8 } @_ZNK5blink9FrameTree30FindOrCreateFrameForNavigationERNS_16FrameLoadRequestERKN3WTF12AtomicStringE(%"class.blink::FrameTree"* %1055, %"struct.blink::FrameLoadRequest"* nonnull dereferenceable(1320) %14, %"class.WTF::AtomicString"* dereferenceable(8) %908) #16
  %1057 = extractvalue { %"class.blink::Frame"*, i8 } %1056, 0
  %1058 = bitcast %"class.blink::HTMLAnchorElement"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %1059 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %1058, align 8
  %1060 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %1059, i64 10
  %1061 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %1060, align 8
  %1062 = call %"class.blink::ExecutionContext"* %1061(%"class.blink::Node"* %21) #16
  %1063 = icmp eq %"class.blink::ExecutionContext"* %1062, null
  %1064 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1062, i64 0, i32 4
  %1065 = select i1 %1063, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %1064
  %1066 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20HrefTranslateEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %1065) #16
  br i1 %1066, label %1067, label %1221

1067:                                             ; preds = %1053
  %1068 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names18kHreftranslateAttrE, align 8
  %1069 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %60, align 8
  %1070 = icmp eq %"class.blink::ElementData"* %1069, null
  br i1 %1070, label %1221, label %1071

1071:                                             ; preds = %1067
  %1072 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1069, i64 0, i32 0, i32 0, i32 0
  %1073 = load i32, i32* %1072, align 4
  %1074 = and i32 %1073, 1
  %1075 = icmp eq i32 %1074, 0
  br i1 %1075, label %1083, label %1076

1076:                                             ; preds = %1071
  %1077 = bitcast %"class.blink::ElementData"* %1069 to %"class.blink::UniqueElementData"*
  %1078 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1069, i64 1, i32 1
  %1079 = bitcast %"class.blink::Member.14"* %1078 to %"class.blink::Attribute"**
  %1080 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %1079, align 8
  %1081 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %1077, i64 0, i32 2, i32 0, i32 0, i32 2
  %1082 = load i32, i32* %1081, align 4
  br label %1088

1083:                                             ; preds = %1071
  %1084 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1069, i64 1
  %1085 = bitcast %"class.blink::ElementData"* %1084 to %"class.blink::Attribute"*
  %1086 = lshr i32 %1073, 1
  %1087 = and i32 %1086, 268435455
  br label %1088

1088:                                             ; preds = %1083, %1076
  %1089 = phi %"class.blink::Attribute"* [ %1085, %1083 ], [ %1080, %1076 ]
  %1090 = phi i32 [ %1087, %1083 ], [ %1082, %1076 ]
  %1091 = zext i32 %1090 to i64
  %1092 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1089, i64 %1091
  %1093 = icmp eq i32 %1090, 0
  br i1 %1093, label %1221, label %1094

1094:                                             ; preds = %1088
  %1095 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1068, i64 0, i32 0, i32 0
  %1096 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1095, align 8
  %1097 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1096, i64 0, i32 3, i32 0, i32 0, i32 0
  %1098 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1096, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %1099

1099:                                             ; preds = %1115, %1094
  %1100 = phi %"class.blink::Attribute"* [ %1089, %1094 ], [ %1116, %1115 ]
  %1101 = phi i32 [ 0, %1094 ], [ %1117, %1115 ]
  %1102 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1100, i64 0, i32 0, i32 0, i32 0
  %1103 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1102, align 8
  %1104 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %1103, %1096
  br i1 %1104, label %1119, label %1105

1105:                                             ; preds = %1099
  %1106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1103, i64 0, i32 3, i32 0, i32 0, i32 0
  %1107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1106, align 8
  %1108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1097, align 8
  %1109 = icmp eq %"class.WTF::StringImpl"* %1107, %1108
  br i1 %1109, label %1110, label %1115

1110:                                             ; preds = %1105
  %1111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1103, i64 0, i32 4, i32 0, i32 0, i32 0
  %1112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1111, align 8
  %1113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1098, align 8
  %1114 = icmp eq %"class.WTF::StringImpl"* %1112, %1113
  br i1 %1114, label %1119, label %1115

1115:                                             ; preds = %1110, %1105
  %1116 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1100, i64 1
  %1117 = add i32 %1101, 1
  %1118 = icmp eq %"class.blink::Attribute"* %1116, %1092
  br i1 %1118, label %1221, label %1099

1119:                                             ; preds = %1099, %1110
  %1120 = icmp eq i32 %1101, -1
  br i1 %1120, label %1221, label %1121

1121:                                             ; preds = %1119
  %1122 = icmp eq %"class.blink::Frame"* %1057, %1054
  br i1 %1122, label %1127, label %1123

1123:                                             ; preds = %1121
  %1124 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %14, i64 0, i32 12, i32 13
  %1125 = load i8, i8* %1124, align 2, !range !2
  %1126 = icmp eq i8 %1125, 0
  br i1 %1126, label %1221, label %1127

1127:                                             ; preds = %1121, %1123
  br i1 %1075, label %1135, label %1128

1128:                                             ; preds = %1127
  %1129 = bitcast %"class.blink::ElementData"* %1069 to %"class.blink::UniqueElementData"*
  %1130 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1069, i64 1, i32 1
  %1131 = bitcast %"class.blink::Member.14"* %1130 to %"class.blink::Attribute"**
  %1132 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %1131, align 8
  %1133 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %1129, i64 0, i32 2, i32 0, i32 0, i32 2
  %1134 = load i32, i32* %1133, align 4
  br label %1140

1135:                                             ; preds = %1127
  %1136 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1069, i64 1
  %1137 = bitcast %"class.blink::ElementData"* %1136 to %"class.blink::Attribute"*
  %1138 = lshr i32 %1073, 1
  %1139 = and i32 %1138, 268435455
  br label %1140

1140:                                             ; preds = %1135, %1128
  %1141 = phi %"class.blink::Attribute"* [ %1137, %1135 ], [ %1132, %1128 ]
  %1142 = phi i32 [ %1139, %1135 ], [ %1134, %1128 ]
  %1143 = zext i32 %1142 to i64
  %1144 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1141, i64 %1143
  %1145 = icmp eq i32 %1142, 0
  br i1 %1145, label %1168, label %1146

1146:                                             ; preds = %1140, %1161
  %1147 = phi %"class.blink::Attribute"* [ %1162, %1161 ], [ %1141, %1140 ]
  %1148 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1147, i64 0, i32 0, i32 0, i32 0
  %1149 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1148, align 8
  %1150 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %1149, %1096
  br i1 %1150, label %1164, label %1151

1151:                                             ; preds = %1146
  %1152 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1149, i64 0, i32 3, i32 0, i32 0, i32 0
  %1153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1152, align 8
  %1154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1097, align 8
  %1155 = icmp eq %"class.WTF::StringImpl"* %1153, %1154
  br i1 %1155, label %1156, label %1161

1156:                                             ; preds = %1151
  %1157 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1149, i64 0, i32 4, i32 0, i32 0, i32 0
  %1158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1157, align 8
  %1159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1098, align 8
  %1160 = icmp eq %"class.WTF::StringImpl"* %1158, %1159
  br i1 %1160, label %1164, label %1161

1161:                                             ; preds = %1156, %1151
  %1162 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1147, i64 1
  %1163 = icmp eq %"class.blink::Attribute"* %1162, %1144
  br i1 %1163, label %1168, label %1146

1164:                                             ; preds = %1156, %1146
  %1165 = icmp eq %"class.blink::Attribute"* %1147, null
  br i1 %1165, label %1168, label %1166

1166:                                             ; preds = %1164
  %1167 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1147, i64 0, i32 1
  br label %1170

1168:                                             ; preds = %1161, %1164, %1140
  %1169 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %1170

1170:                                             ; preds = %1166, %1168
  %1171 = phi %"class.WTF::AtomicString"* [ %1169, %1168 ], [ %1167, %1166 ]
  %1172 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %14, i64 0, i32 2
  %1173 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1171, i64 0, i32 0, i32 0, i32 0
  %1174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1173, align 8
  %1175 = icmp eq %"class.WTF::StringImpl"* %1174, null
  br i1 %1175, label %1193, label %1176

1176:                                             ; preds = %1170
  %1177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1178 = load atomic i32, i32* %1177 monotonic, align 4
  %1179 = and i32 %1178, 2
  %1180 = icmp eq i32 %1179, 0
  br i1 %1180, label %1181, label %1193

1181:                                             ; preds = %1176
  %1182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1174, i64 0, i32 0
  %1183 = load i32, i32* %1182, align 4
  %1184 = zext i32 %1183 to i33
  %1185 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1184, i33 1) #16
  %1186 = extractvalue { i33, i1 } %1185, 1
  %1187 = extractvalue { i33, i1 } %1185, 0
  %1188 = icmp slt i33 %1187, 0
  %1189 = or i1 %1186, %1188
  br i1 %1189, label %1190, label %1191, !prof !3

1190:                                             ; preds = %1181
  call void @llvm.trap() #16
  unreachable

1191:                                             ; preds = %1181
  %1192 = trunc i33 %1187 to i32
  store i32 %1192, i32* %1182, align 4
  br label %1193

1193:                                             ; preds = %1191, %1176, %1170
  %1194 = ptrtoint %"class.WTF::StringImpl"* %1174 to i64
  %1195 = bitcast %"class.WTF::AtomicString"* %1172 to i64*
  %1196 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1172, i64 0, i32 0, i32 0, i32 0
  %1197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1196, align 8
  store i64 %1194, i64* %1195, align 8
  %1198 = icmp eq %"class.WTF::StringImpl"* %1197, null
  br i1 %1198, label %1212, label %1199

1199:                                             ; preds = %1193
  %1200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1201 = load atomic i32, i32* %1200 monotonic, align 4
  %1202 = and i32 %1201, 2
  %1203 = icmp eq i32 %1202, 0
  %1204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1197, i64 0, i32 0
  %1205 = load i32, i32* %1204, align 4
  br i1 %1203, label %1206, label %1208

1206:                                             ; preds = %1199
  %1207 = add i32 %1205, -1
  store i32 %1207, i32* %1204, align 4
  br label %1208

1208:                                             ; preds = %1206, %1199
  %1209 = phi i32 [ %1207, %1206 ], [ %1205, %1199 ]
  %1210 = icmp eq i32 %1209, 0
  br i1 %1210, label %1211, label %1212

1211:                                             ; preds = %1208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1197) #16
  br label %1212

1212:                                             ; preds = %1193, %1208, %1211
  %1213 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %1214 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1213, i64 0, i32 2, i32 0, i32 0
  %1215 = load %"class.blink::Document"*, %"class.blink::Document"** %1214, align 8
  %1216 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1215, i64 0, i32 2
  %1217 = bitcast %"class.blink::UseCounter"* %1216 to void (%"class.blink::UseCounter"*, i32)***
  %1218 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %1217, align 8
  %1219 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %1218, i64 3
  %1220 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %1219, align 8
  call void %1220(%"class.blink::UseCounter"* %1216, i32 2629) #16
  br label %1221

1221:                                             ; preds = %1115, %1119, %1088, %1067, %1123, %1212, %1053
  %1222 = icmp eq %"class.blink::Frame"* %1057, null
  br i1 %1222, label %1228, label %1223

1223:                                             ; preds = %1221
  %1224 = bitcast %"class.blink::Frame"* %1057 to void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)***
  %1225 = load void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)**, void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)*** %1224, align 8
  %1226 = getelementptr inbounds void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)*, void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)** %1225, i64 5
  %1227 = load void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)*, void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)** %1226, align 8
  call void %1227(%"class.blink::Frame"* nonnull %1057, %"struct.blink::FrameLoadRequest"* nonnull dereferenceable(1320) %14, i32 0) #16
  br label %1228

1228:                                             ; preds = %1221, %1223
  call void @_ZN5blink16FrameLoadRequestD2Ev(%"struct.blink::FrameLoadRequest"* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 1320, i8* nonnull %909) #16
  br label %1229

1229:                                             ; preds = %620, %832, %829, %819, %1228
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %396) #16
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %395) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %372) #16
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #16
  %1230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %1231 = icmp eq %"class.WTF::StringImpl"* %1230, null
  br i1 %1231, label %1245, label %1232

1232:                                             ; preds = %1229
  %1233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1234 = load atomic i32, i32* %1233 monotonic, align 4
  %1235 = and i32 %1234, 2
  %1236 = icmp eq i32 %1235, 0
  %1237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1230, i64 0, i32 0
  %1238 = load i32, i32* %1237, align 4
  br i1 %1236, label %1239, label %1241

1239:                                             ; preds = %1232
  %1240 = add i32 %1238, -1
  store i32 %1240, i32* %1237, align 4
  br label %1241

1241:                                             ; preds = %1239, %1232
  %1242 = phi i32 [ %1240, %1239 ], [ %1238, %1232 ]
  %1243 = icmp eq i32 %1242, 0
  br i1 %1243, label %1244, label %1245

1244:                                             ; preds = %1241
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1230) #16
  br label %1245

1245:                                             ; preds = %1229, %1241, %1244
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %50) #16
  br label %1246

1246:                                             ; preds = %2, %1245
  ret void
}

declare void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLAnchorElement21HasActivationBehaviorEv(%"class.blink::HTMLAnchorElement"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLAnchorElement9SetActiveEb(%"class.blink::HTMLAnchorElement"*, i1 zeroext) unnamed_addr #0 align 2 {
  br i1 %1, label %3, label %6

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %4) #16
  br i1 %5, label %8, label %6

6:                                                ; preds = %3, %2
  %7 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"* %7, i1 zeroext %1) #16
  br label %8

8:                                                ; preds = %3, %6
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLAnchorElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLAnchorElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingAssociatedReceiver", align 8
  %4 = alloca %"class.absl::optional.3041", align 8
  %5 = alloca %"class.mojo::AssociatedRemote.3085", align 8
  %6 = alloca %"struct.blink::Impression", align 8
  %7 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"* %7, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #16
  %8 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %8, align 8
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names30kRegisterattributionsourceAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %9, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %14
  br i1 %15, label %16, label %81

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %18 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %81, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names29kAttributionsourceeventidAttrE, align 8
  %25 = tail call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %23, %"class.blink::QualifiedName"* dereferenceable(8) %24) #16
  br i1 %25, label %26, label %81

26:                                               ; preds = %22
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names27kAttributiondestinationAttrE, align 8
  %28 = tail call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %23, %"class.blink::QualifiedName"* dereferenceable(8) %27) #16
  br i1 %28, label %29, label %81

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %30) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 64, i1 false)
  call void @_ZN5blink22GetImpressionForAnchorEPNS_17HTMLAnchorElementE(%"class.absl::optional.3041"* nonnull sret %4, %"class.blink::HTMLAnchorElement"* %0) #16
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %80, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.mojo::AssociatedRemote.3085"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  %35 = bitcast %"class.mojo::AssociatedRemote.3085"* %5 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %35) #16
  %36 = getelementptr inbounds %"class.mojo::AssociatedRemote.3085", %"class.mojo::AssociatedRemote.3085"* %5, i64 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::unique_ptr.3087"* %36 to i64*
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %39, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %42 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %41) #16
  %43 = call %"class.blink::AssociatedInterfaceProvider"* @_ZN5blink10LocalFrame39GetRemoteNavigationAssociatedInterfacesEv(%"class.blink::LocalFrame"* %42) #16
  %44 = bitcast %"class.mojo::PendingAssociatedReceiver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = getelementptr inbounds %"class.blink::AssociatedInterfaceProvider", %"class.blink::AssociatedInterfaceProvider"* %43, i64 0, i32 2
  %46 = bitcast %class.scoped_refptr.1498* %45 to %"class.base::SequencedTaskRunner"**
  %47 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %46, align 8
  %48 = icmp eq %"class.base::SequencedTaskRunner"* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %47, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 1 monotonic
  br label %52

52:                                               ; preds = %33, %49
  call void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink14ConversionHostEE30BindNewEndpointAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingAssociatedReceiver"* nonnull sret %3, %"class.mojo::AssociatedRemote.3085"* nonnull %5, %"class.base::SequencedTaskRunner"* %47) #16
  call void @_ZN5blink27AssociatedInterfaceProvider12GetInterfaceINS_5mojom5blink14ConversionHostEEEvN4mojo25PendingAssociatedReceiverIT_EE(%"class.blink::AssociatedInterfaceProvider"* %43, %"class.mojo::PendingAssociatedReceiver"* nonnull %3) #16
  %53 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %3, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %53) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  %54 = getelementptr inbounds %"class.mojo::AssociatedRemote.3085", %"class.mojo::AssociatedRemote.3085"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %55 = load %"class.blink::mojom::blink::ConversionHostProxy"*, %"class.blink::mojom::blink::ConversionHostProxy"** %54, align 8
  %56 = bitcast %"struct.blink::Impression"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %56) #16
  %57 = load i8, i8* %30, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %60, !prof !3

59:                                               ; preds = %52
  call void @llvm.trap() #16
  unreachable

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink32ConvertWebImpressionToImpressionERKNS_13WebImpressionE(%"struct.blink::Impression"* nonnull sret %6, %"struct.blink::WebImpression"* dereferenceable(56) %61) #16
  call void @_ZN5blink5mojom5blink19ConversionHostProxy18RegisterImpressionERKNS_10ImpressionE(%"class.blink::mojom::blink::ConversionHostProxy"* %55, %"struct.blink::Impression"* nonnull dereferenceable(200) %6) #16
  call void @_ZN5blink10ImpressionD1Ev(%"struct.blink::Impression"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %56) #16
  %62 = load %"class.blink::mojom::blink::ConversionHostProxy"*, %"class.blink::mojom::blink::ConversionHostProxy"** %54, align 8
  store %"class.blink::mojom::blink::ConversionHostProxy"* null, %"class.blink::mojom::blink::ConversionHostProxy"** %54, align 8
  %63 = icmp eq %"class.blink::mojom::blink::ConversionHostProxy"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.blink::mojom::blink::ConversionHostProxy"* %62 to void (%"class.blink::mojom::blink::ConversionHostProxy"*)***
  %66 = load void (%"class.blink::mojom::blink::ConversionHostProxy"*)**, void (%"class.blink::mojom::blink::ConversionHostProxy"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::mojom::blink::ConversionHostProxy"*)*, void (%"class.blink::mojom::blink::ConversionHostProxy"*)** %66, i64 1
  %68 = load void (%"class.blink::mojom::blink::ConversionHostProxy"*)*, void (%"class.blink::mojom::blink::ConversionHostProxy"*)** %67, align 8
  call void %68(%"class.blink::mojom::blink::ConversionHostProxy"* nonnull %62) #16
  br label %69

69:                                               ; preds = %64, %60
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %35) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #16
  %70 = load i8, i8* %30, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %77) #16
  store i8 0, i8* %73, align 8
  br label %78

78:                                               ; preds = %76, %72
  %79 = getelementptr inbounds %"class.absl::optional.3041", %"class.absl::optional.3041"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %79) #16
  store i8 0, i8* %30, align 8
  br label %80

80:                                               ; preds = %29, %69, %78
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %30) #16
  br label %81

81:                                               ; preds = %22, %80, %26, %16, %2
  %82 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %107

85:                                               ; preds = %81
  %86 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %8, align 8
  %87 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %86, i64 0, i32 0, i32 0
  %89 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %87, i64 0, i32 0, i32 0
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %92 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %89, %91
  br i1 %92, label %93, label %107

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 64
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %107

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  %100 = call %"class.blink::Element"* @_ZNK5blink7Element33AdjustedFocusedElementInTreeScopeEv(%"class.blink::Element"* %99) #16
  %101 = icmp eq %"class.blink::Element"* %100, %99
  br i1 %101, label %102, label %107

102:                                              ; preds = %98
  %103 = bitcast %"class.blink::HTMLAnchorElement"* %0 to void (%"class.blink::Element"*)***
  %104 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %104, i64 101
  %106 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %105, align 8
  call void %106(%"class.blink::Element"* %99) #16
  br label %107

107:                                              ; preds = %93, %85, %81, %102, %98
  ret void
}

declare void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLAnchorElement13HasImpressionEv(%"class.blink::HTMLAnchorElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names29kAttributionsourceeventidAttrE, align 8
  %4 = tail call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %2, %"class.blink::QualifiedName"* dereferenceable(8) %3) #16
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names27kAttributiondestinationAttrE, align 8
  %7 = tail call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %2, %"class.blink::QualifiedName"* dereferenceable(8) %6) #16
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ false, %1 ], [ %7, %5 ]
  ret i1 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink22GetImpressionForAnchorEPNS_17HTMLAnchorElementE(%"class.absl::optional.3041"* sret, %"class.blink::HTMLAnchorElement"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #3

declare %"class.blink::AssociatedInterfaceProvider"* @_ZN5blink10LocalFrame39GetRemoteNavigationAssociatedInterfacesEv(%"class.blink::LocalFrame"*) local_unnamed_addr #3

declare void @_ZN5blink5mojom5blink19ConversionHostProxy18RegisterImpressionERKNS_10ImpressionE(%"class.blink::mojom::blink::ConversionHostProxy"*, %"struct.blink::Impression"* dereferenceable(200)) unnamed_addr #3

declare void @_ZN5blink32ConvertWebImpressionToImpressionERKNS_13WebImpressionE(%"struct.blink::Impression"* sret, %"struct.blink::WebImpression"* dereferenceable(56)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink10ImpressionD1Ev(%"struct.blink::Impression"*) unnamed_addr #2

declare %"class.blink::Element"* @_ZNK5blink7Element33AdjustedFocusedElementInTreeScopeEv(%"class.blink::Element"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLAnchorElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLAnchorElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::WebString", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %8, align 8
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %9, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %14
  br i1 %15, label %16, label %124

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 64
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp ne %"class.WTF::StringImpl"* %25, null
  tail call void @_ZN5blink4Node9SetIsLinkEb(%"class.blink::Node"* %17, i1 zeroext %26) #16
  br i1 %21, label %27, label %31

27:                                               ; preds = %16
  %28 = load i32, i32* %18, align 8
  %29 = and i32 %28, 64
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %121, label %31

31:                                               ; preds = %16, %27
  %32 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %32, i32 16) #16
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %32, i32 17) #16
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %32, i32 22) #16
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %32, i32 21) #16
  %33 = load i32, i32* %18, align 8
  %34 = and i32 %33, 64
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %121, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #16
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %22, align 8
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0
  %41 = tail call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %40) #16
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %38, align 8
  %42 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::Document"*, %"class.blink::Document"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %45, i64 0, i32 69
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %104, label %49

49:                                               ; preds = %36
  %50 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %45) #16
  %51 = icmp eq %"class.blink::LocalFrame"* %50, null
  br i1 %51, label %104, label %52

52:                                               ; preds = %49
  %53 = call zeroext i1 @_ZN5blink10ProtocolIsERKN3WTF6StringEPKc(%"class.WTF::String"* nonnull dereferenceable(8) %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #16
  %54 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #16
  br i1 %53, label %67, label %55

55:                                               ; preds = %52
  %56 = call zeroext i1 @_ZN5blink10ProtocolIsERKN3WTF6StringEPKc(%"class.WTF::String"* nonnull dereferenceable(8) %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #16
  br i1 %56, label %67, label %57

57:                                               ; preds = %55
  %58 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %59 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8** %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 2, i32* %61, align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %64, label %65

64:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #16
  br label %120

65:                                               ; preds = %57
  %66 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %62, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #16
  br i1 %66, label %68, label %104

67:                                               ; preds = %52, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #16
  br label %68

68:                                               ; preds = %67, %65
  %69 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %42, align 8
  %70 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %69, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::Document"*, %"class.blink::Document"** %70, align 8
  %72 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %71) #16
  %73 = call %"class.blink::WebPrescientNetworking"* @_ZN5blink10LocalFrame19PrescientNetworkingEv(%"class.blink::LocalFrame"* %72) #16
  %74 = icmp eq %"class.blink::WebPrescientNetworking"* %73, null
  br i1 %74, label %104, label %75

75:                                               ; preds = %68
  %76 = bitcast %"class.blink::WebString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #16
  %77 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #16
  %78 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %78) #16
  %79 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %42, align 8
  %80 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::Document"*, %"class.blink::Document"** %80, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %7, %"class.blink::Document"* %81, %"class.WTF::String"* nonnull dereferenceable(8) %3) #16
  %82 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* nonnull %7) #16
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %83, align 8
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #16
  %84 = bitcast %"class.blink::WebPrescientNetworking"* %73 to void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)***
  %85 = load void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)**, void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)*, void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)** %85, i64 2
  %87 = load void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)*, void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)** %86, align 8
  call void %87(%"class.blink::WebPrescientNetworking"* nonnull %73, %"class.blink::WebString"* nonnull dereferenceable(8) %5) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #16
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %75
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #16
  br label %103

103:                                              ; preds = %75, %99, %102
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %78) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #16
  br label %104

104:                                              ; preds = %36, %103, %68, %49, %65
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #16
  br label %120

120:                                              ; preds = %64, %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #16
  br label %121

121:                                              ; preds = %27, %31, %120
  %122 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 3
  store i64 0, i64* %122, align 8
  %123 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink7Element46LogUpdateAttributeIfIsolatedWorldAndInDocumentEPKcRKNS0_27AttributeModificationParamsE(%"class.blink::Element"* %123, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #16
  br label %150

124:                                              ; preds = %2
  %125 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %126 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %125, i64 0, i32 0, i32 0
  %127 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %126, align 8
  %128 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %127
  br i1 %128, label %150, label %129

129:                                              ; preds = %124
  %130 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  %131 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %130, i64 0, i32 0, i32 0
  %132 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %133 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %132
  br i1 %133, label %150, label %134

134:                                              ; preds = %129
  %135 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kRelAttrE, align 8
  %136 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %135, i64 0, i32 0, i32 0
  %137 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %136, align 8
  %138 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %137
  br i1 %138, label %139, label %148

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %141 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %140, align 8
  tail call void @_ZN5blink17HTMLAnchorElement6SetRelERKN3WTF12AtomicStringE(%"class.blink::HTMLAnchorElement"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %141)
  %142 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 4, i32 0, i32 0
  %143 = bitcast %"class.blink::RelList"** %142 to %"class.blink::DOMTokenList"**
  %144 = load %"class.blink::DOMTokenList"*, %"class.blink::DOMTokenList"** %143, align 8
  %145 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 1
  %146 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %145, align 8
  %147 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %140, align 8
  tail call void @_ZN5blink12DOMTokenList23DidUpdateAttributeValueERKN3WTF12AtomicStringES4_(%"class.blink::DOMTokenList"* %144, %"class.WTF::AtomicString"* dereferenceable(8) %146, %"class.WTF::AtomicString"* dereferenceable(8) %147) #16
  br label %150

148:                                              ; preds = %134
  %149 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"* %149, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #16
  br label %150

150:                                              ; preds = %129, %124, %148, %139, %121
  ret void
}

declare void @_ZN5blink4Node9SetIsLinkEb(%"class.blink::Node"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"*, i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink10ProtocolIsERKN3WTF6StringEPKc(%"class.WTF::String"* dereferenceable(8), i8*) local_unnamed_addr #3

declare %"class.blink::WebPrescientNetworking"* @_ZN5blink10LocalFrame19PrescientNetworkingEv(%"class.blink::LocalFrame"*) local_unnamed_addr #3

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"*) local_unnamed_addr #3

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #2

declare void @_ZN5blink7Element46LogUpdateAttributeIfIsolatedWorldAndInDocumentEPKcRKNS0_27AttributeModificationParamsE(%"class.blink::Element"*, i8*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLAnchorElement6SetRelERKN3WTF12AtomicStringE(%"class.blink::HTMLAnchorElement"* nocapture, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SpaceSplitString", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, -2147483648
  store i32 %10, i32* %8, align 4
  %11 = bitcast %"class.blink::SpaceSplitString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.blink::SpaceSplitString", %"class.blink::SpaceSplitString"* %3, i64 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %1) #16
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  store %"class.blink::SpaceSplitString::Data"* null, %"class.blink::SpaceSplitString::Data"** %12, align 8
  call void @_ZN5blink16SpaceSplitString3SetERKN3WTF12AtomicStringE(%"class.blink::SpaceSplitString"* nonnull %3, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #16
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #16
  br label %31

31:                                               ; preds = %2, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  %32 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i64 10) #16
  %33 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %12, align 8
  %34 = icmp eq %"class.blink::SpaceSplitString::Data"* %33, null
  br i1 %34, label %61, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %33, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %33, i64 0, i32 2, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %37, i64 %40
  %42 = icmp eq i32 %39, 0
  br i1 %42, label %61, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  br label %46

46:                                               ; preds = %51, %43
  %47 = phi %"class.WTF::AtomicString"* [ %37, %43 ], [ %52, %51 ]
  %48 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, %45
  br i1 %50, label %54, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 1
  %53 = icmp ult %"class.WTF::AtomicString"* %52, %41
  br i1 %53, label %46, label %61

54:                                               ; preds = %46
  %55 = ptrtoint %"class.WTF::AtomicString"* %47 to i64
  %56 = ptrtoint %"class.WTF::AtomicString"* %37 to i64
  %57 = sub i64 %55, %56
  %58 = lshr exact i64 %57, 3
  %59 = trunc i64 %58 to i32
  %60 = icmp ne i32 %59, -1
  br label %61

61:                                               ; preds = %51, %31, %35, %54
  %62 = phi i1 [ false, %31 ], [ %60, %54 ], [ false, %35 ], [ false, %51 ]
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #16
  br label %79

79:                                               ; preds = %61, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  br i1 %62, label %80, label %83

80:                                               ; preds = %79
  %81 = load i32, i32* %8, align 4
  %82 = or i32 %81, 4096
  store i32 %82, i32* %8, align 4
  br label %83

83:                                               ; preds = %80, %79
  %84 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #16
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i64 8) #16
  %85 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %12, align 8
  %86 = icmp eq %"class.blink::SpaceSplitString::Data"* %85, null
  br i1 %86, label %113, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %85, i64 0, i32 2, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %85, i64 0, i32 2, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %89, i64 %92
  %94 = icmp eq i32 %91, 0
  br i1 %94, label %113, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  br label %98

98:                                               ; preds = %103, %95
  %99 = phi %"class.WTF::AtomicString"* [ %89, %95 ], [ %104, %103 ]
  %100 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, %97
  br i1 %102, label %106, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %99, i64 1
  %105 = icmp ult %"class.WTF::AtomicString"* %104, %93
  br i1 %105, label %98, label %113

106:                                              ; preds = %98
  %107 = ptrtoint %"class.WTF::AtomicString"* %99 to i64
  %108 = ptrtoint %"class.WTF::AtomicString"* %89 to i64
  %109 = sub i64 %107, %108
  %110 = lshr exact i64 %109, 3
  %111 = trunc i64 %110 to i32
  %112 = icmp ne i32 %111, -1
  br label %113

113:                                              ; preds = %103, %83, %87, %106
  %114 = phi i1 [ false, %83 ], [ %112, %106 ], [ false, %87 ], [ false, %103 ]
  %115 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #16
  br label %131

131:                                              ; preds = %113, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #16
  br i1 %114, label %132, label %135

132:                                              ; preds = %131
  %133 = load i32, i32* %8, align 4
  %134 = or i32 %133, 262144
  store i32 %134, i32* %8, align 4
  br label %135

135:                                              ; preds = %132, %131
  %136 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #16
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #16
  %137 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %12, align 8
  %138 = icmp eq %"class.blink::SpaceSplitString::Data"* %137, null
  br i1 %138, label %165, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %137, i64 0, i32 2, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %137, i64 0, i32 2, i32 0, i32 0, i32 2
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %141, i64 %144
  %146 = icmp eq i32 %143, 0
  br i1 %146, label %165, label %147

147:                                              ; preds = %139
  %148 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  br label %150

150:                                              ; preds = %155, %147
  %151 = phi %"class.WTF::AtomicString"* [ %141, %147 ], [ %156, %155 ]
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, %149
  br i1 %154, label %158, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 1
  %157 = icmp ult %"class.WTF::AtomicString"* %156, %145
  br i1 %157, label %150, label %165

158:                                              ; preds = %150
  %159 = ptrtoint %"class.WTF::AtomicString"* %151 to i64
  %160 = ptrtoint %"class.WTF::AtomicString"* %141 to i64
  %161 = sub i64 %159, %160
  %162 = lshr exact i64 %161, 3
  %163 = trunc i64 %162 to i32
  %164 = icmp ne i32 %163, -1
  br label %165

165:                                              ; preds = %155, %135, %139, %158
  %166 = phi i1 [ false, %135 ], [ %164, %158 ], [ false, %139 ], [ false, %155 ]
  %167 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #16
  br label %183

183:                                              ; preds = %165, %179, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #16
  br i1 %166, label %184, label %187

184:                                              ; preds = %183
  %185 = load i32, i32* %8, align 4
  %186 = or i32 %185, 524288
  store i32 %186, i32* %8, align 4
  br label %187

187:                                              ; preds = %184, %183
  %188 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %12, align 8
  %189 = icmp eq %"class.blink::SpaceSplitString::Data"* %188, null
  br i1 %189, label %197, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %188, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %191) #16
  %192 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %188, i64 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %190
  call void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"* nonnull %188) #16
  %196 = bitcast %"class.blink::SpaceSplitString::Data"* %188 to i8*
  call void @free(i8* %196) #16
  br label %197

197:                                              ; preds = %187, %190, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  ret void
}

declare void @_ZN5blink12DOMTokenList23DidUpdateAttributeValueERKN3WTF12AtomicStringES4_(%"class.blink::DOMTokenList"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLAnchorElement14IsURLAttributeERKNS_9AttributeE(%"class.blink::HTMLAnchorElement"* nocapture readnone, %"class.blink::Attribute"* nocapture readonly dereferenceable(16)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3, align 8
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %9, %11
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLAnchorElement21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLAnchorElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %10, %"class.blink::QualifiedName"* dereferenceable(8) %1) #16
  br label %12

12:                                               ; preds = %9, %2
  %13 = phi i1 [ true, %2 ], [ %11, %9 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLAnchorElement17CanStartSelectionEv(%"class.blink::HTMLAnchorElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 64
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = tail call zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"* %2) #16
  br label %11

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %2) #16
  br label %11

11:                                               ; preds = %9, %7
  %12 = phi i1 [ %10, %9 ], [ %8, %7 ]
  ret i1 %12
}

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLAnchorElement9draggableEv(%"class.blink::HTMLAnchorElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kDraggableAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.14"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #16
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %66, label %70

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %67, align 8
  %68 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %69 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %68, i64* %69, align 8
  br label %77

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %76, align 8
  br label %77

77:                                               ; preds = %66, %70
  %78 = phi i32 [ %73, %70 ], [ 0, %66 ]
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %78, i32* %79, align 8
  %80 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #16
  br i1 %80, label %155, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #16
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %86, align 8
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %88 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %87, i64* %88, align 8
  br label %96

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 1
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %95 = bitcast i8** %94 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %95, align 8
  br label %96

96:                                               ; preds = %85, %89
  %97 = phi i32 [ %92, %89 ], [ 0, %85 ]
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %97, i32* %98, align 8
  %99 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [6 x i8]* nonnull dereferenceable(6) @.str.5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #16
  br i1 %99, label %155, label %100

100:                                              ; preds = %96
  %101 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %102 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %103 = icmp eq %"class.blink::ElementData"* %102, null
  br i1 %103, label %155, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %102, i64 0, i32 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %116, label %109

109:                                              ; preds = %104
  %110 = bitcast %"class.blink::ElementData"* %102 to %"class.blink::UniqueElementData"*
  %111 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %102, i64 1, i32 1
  %112 = bitcast %"class.blink::Member.14"* %111 to %"class.blink::Attribute"**
  %113 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %110, i64 0, i32 2, i32 0, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  br label %121

116:                                              ; preds = %104
  %117 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %102, i64 1
  %118 = bitcast %"class.blink::ElementData"* %117 to %"class.blink::Attribute"*
  %119 = lshr i32 %106, 1
  %120 = and i32 %119, 268435455
  br label %121

121:                                              ; preds = %116, %109
  %122 = phi %"class.blink::Attribute"* [ %118, %116 ], [ %113, %109 ]
  %123 = phi i32 [ %120, %116 ], [ %115, %109 ]
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %122, i64 %124
  %126 = icmp eq i32 %123, 0
  br i1 %126, label %152, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %101, i64 0, i32 0, i32 0
  %129 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %129, i64 0, i32 3, i32 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %129, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %132

132:                                              ; preds = %148, %127
  %133 = phi %"class.blink::Attribute"* [ %122, %127 ], [ %149, %148 ]
  %134 = phi i32 [ 0, %127 ], [ %150, %148 ]
  %135 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %133, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %135, align 8
  %137 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %136, %129
  br i1 %137, label %152, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %136, i64 0, i32 3, i32 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %140, %141
  br i1 %142, label %143, label %148

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %136, i64 0, i32 4, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %145, %146
  br i1 %147, label %152, label %148

148:                                              ; preds = %143, %138
  %149 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %133, i64 1
  %150 = add i32 %134, 1
  %151 = icmp eq %"class.blink::Attribute"* %149, %125
  br i1 %151, label %152, label %132

152:                                              ; preds = %148, %143, %132, %121
  %153 = phi i32 [ -1, %121 ], [ %134, %132 ], [ %134, %143 ], [ -1, %148 ]
  %154 = icmp ne i32 %153, -1
  br label %155

155:                                              ; preds = %152, %100, %96, %77
  %156 = phi i1 [ true, %77 ], [ false, %96 ], [ false, %100 ], [ %154, %152 ]
  ret i1 %156
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #7 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [6 x i8]* dereferenceable(6)) local_unnamed_addr #7 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 5
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %125, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %153, %14, %28, %125, %139, %42, %59, %77, %93, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %14 ], [ false, %28 ], [ false, %125 ], [ false, %139 ], [ %166, %153 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  ret i1 %124

125:                                              ; preds = %28
  %126 = getelementptr inbounds i8, i8* %15, i64 2
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i64
  %129 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = sext i8 %136 to i32
  %138 = icmp eq i32 %131, %137
  br i1 %138, label %139, label %75

139:                                              ; preds = %125
  %140 = getelementptr inbounds i8, i8* %15, i64 3
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i64
  %143 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i64
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %145, %151
  br i1 %152, label %153, label %75

153:                                              ; preds = %139
  %154 = getelementptr inbounds i8, i8* %15, i64 4
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i64
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %166 = icmp eq i32 %159, %165
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17HTMLAnchorElement4HrefEv(%"class.blink::KURL"* noalias sret, %"class.blink::HTMLAnchorElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %10, align 8
  %12 = icmp eq %"class.blink::ElementData"* %11, null
  br i1 %12, label %63, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.blink::ElementData"* %11 to %"class.blink::UniqueElementData"*
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 1, i32 1
  %21 = bitcast %"class.blink::Member.14"* %20 to %"class.blink::Attribute"**
  %22 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %19, i64 0, i32 2, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  br label %30

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 1
  %27 = bitcast %"class.blink::ElementData"* %26 to %"class.blink::Attribute"*
  %28 = lshr i32 %15, 1
  %29 = and i32 %28, 268435455
  br label %30

30:                                               ; preds = %25, %18
  %31 = phi %"class.blink::Attribute"* [ %27, %25 ], [ %22, %18 ]
  %32 = phi i32 [ %29, %25 ], [ %24, %18 ]
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %31, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %63, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %9, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %56, %36
  %42 = phi %"class.blink::Attribute"* [ %31, %36 ], [ %57, %56 ]
  %43 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %44, %38
  br i1 %45, label %59, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %53, %54
  br i1 %55, label %59, label %56

56:                                               ; preds = %51, %46
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %42, i64 1
  %58 = icmp eq %"class.blink::Attribute"* %57, %34
  br i1 %58, label %63, label %41

59:                                               ; preds = %51, %41
  %60 = icmp eq %"class.blink::Attribute"* %42, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %42, i64 0, i32 1
  br label %65

63:                                               ; preds = %56, %59, %30, %2
  %64 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %65

65:                                               ; preds = %61, %63
  %66 = phi %"class.WTF::AtomicString"* [ %64, %63 ], [ %62, %61 ]
  %67 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %66, i64 0, i32 0
  %68 = tail call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %67) #16
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %69, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret %0, %"class.blink::Document"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %3) #16
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #16
  br label %85

85:                                               ; preds = %65, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLAnchorElement7SetHrefERKN3WTF12AtomicStringE(%"class.blink::HTMLAnchorElement"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  tail call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %1) #16
  ret void
}

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17HTMLAnchorElement3UrlEv(%"class.blink::KURL"* noalias sret, %"class.blink::HTMLAnchorElement"* nocapture readonly) unnamed_addr #0 align 2 {
  tail call void @_ZNK5blink17HTMLAnchorElement4HrefEv(%"class.blink::KURL"* sret %0, %"class.blink::HTMLAnchorElement"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink17HTMLAnchorElement3UrlEv(%"class.blink::KURL"* noalias sret, %"class.blink::HTMLAnchorElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %4 = bitcast %"class.blink::Member.0"* %3 to %"class.blink::HTMLAnchorElement"*
  tail call void @_ZNK5blink17HTMLAnchorElement4HrefEv(%"class.blink::KURL"* sret %0, %"class.blink::HTMLAnchorElement"* %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLAnchorElement6SetURLERKNS_4KURLE(%"class.blink::HTMLAnchorElement"*, %"class.blink::KURL"* nocapture readonly dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %8
  %14 = load atomic i32, i32* %9 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #16
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #16
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %31

29:                                               ; preds = %8
  %30 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %6) #16
  br label %31

31:                                               ; preds = %2, %13, %27, %29
  %32 = phi %"class.WTF::StringImpl"* [ %30, %29 ], [ %6, %13 ], [ %6, %27 ], [ null, %2 ]
  %33 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %34 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %35, %"class.blink::QualifiedName"* dereferenceable(8) %36, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #16
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #16
  br label %53

53:                                               ; preds = %31, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink17HTMLAnchorElement6SetURLERKNS_4KURLE(%"class.blink::HTMLAnchorElement"*, %"class.blink::KURL"* nocapture readonly dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %4 = bitcast %"class.blink::Member.0"* %3 to %"class.blink::HTMLAnchorElement"*
  tail call void @_ZN5blink17HTMLAnchorElement6SetURLERKNS_4KURLE(%"class.blink::HTMLAnchorElement"* %4, %"class.blink::KURL"* dereferenceable(112) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17HTMLAnchorElement5InputEv(%"class.blink::HTMLAnchorElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #16
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %68
  tail call void @llvm.trap() #16
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %80

80:                                               ; preds = %58, %63, %78
  ret %"class.WTF::StringImpl"* %61
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn104_NK5blink17HTMLAnchorElement5InputEv(%"class.blink::HTMLAnchorElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 12
  %5 = bitcast %"class.blink::Member.0"* %4 to %"class.blink::ElementData"**
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.14"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %58, %56
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #16
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %70
  tail call void @llvm.trap() #16
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %60, %65, %80
  ret %"class.WTF::StringImpl"* %63
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLAnchorElement7setHrefERKN3WTF6StringE(%"class.blink::HTMLAnchorElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %8
  %14 = load atomic i32, i32* %9 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #16
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #16
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %31

29:                                               ; preds = %8
  %30 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %6) #16
  br label %31

31:                                               ; preds = %2, %13, %27, %29
  %32 = phi %"class.WTF::StringImpl"* [ %30, %29 ], [ %6, %13 ], [ %6, %27 ], [ null, %2 ]
  %33 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %34 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %35, %"class.blink::QualifiedName"* dereferenceable(8) %36, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #16
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #16
  br label %53

53:                                               ; preds = %31, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLAnchorElement6HasRelEj(%"class.blink::HTMLAnchorElement"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %1, 2147483647
  %6 = and i32 %5, %4
  %7 = icmp ne i32 %6, 0
  ret i1 %7
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink17HTMLAnchorElement7GetNameEv(%"class.blink::HTMLAnchorElement"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1048576
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %1
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %8, align 8
  %10 = icmp eq %"class.blink::ElementData"* %9, null
  br i1 %10, label %61, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::ElementData"* %9 to %"class.blink::UniqueElementData"*
  %18 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1, i32 1
  %19 = bitcast %"class.blink::Member.14"* %18 to %"class.blink::Attribute"**
  %20 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %17, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  br label %28

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1
  %25 = bitcast %"class.blink::ElementData"* %24 to %"class.blink::Attribute"*
  %26 = lshr i32 %13, 1
  %27 = and i32 %26, 268435455
  br label %28

28:                                               ; preds = %23, %16
  %29 = phi %"class.blink::Attribute"* [ %25, %23 ], [ %20, %16 ]
  %30 = phi i32 [ %27, %23 ], [ %22, %16 ]
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %54, %34
  %40 = phi %"class.blink::Attribute"* [ %29, %34 ], [ %55, %54 ]
  %41 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %36
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %51, %52
  br i1 %53, label %57, label %54

54:                                               ; preds = %49, %44
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 1
  %56 = icmp eq %"class.blink::Attribute"* %55, %32
  br i1 %56, label %61, label %39

57:                                               ; preds = %49, %39
  %58 = icmp eq %"class.blink::Attribute"* %40, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 1
  br label %65

61:                                               ; preds = %54, %57, %28, %6
  %62 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %65

63:                                               ; preds = %1
  %64 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi %"class.WTF::AtomicString"* [ %64, %63 ], [ %62, %61 ], [ %60, %59 ]
  ret %"class.WTF::AtomicString"* %66
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink17HTMLAnchorElement18GetEffectiveTargetEv(%"class.blink::HTMLAnchorElement"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kTargetAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %58, %63
  %68 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %69 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %69, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::Document"*, %"class.blink::Document"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %71, i64 0, i32 26
  br label %73

73:                                               ; preds = %63, %67
  %74 = phi %"class.WTF::AtomicString"* [ %72, %67 ], [ %59, %63 ]
  ret %"class.WTF::AtomicString"* %74
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink17HTMLAnchorElement15DefaultTabIndexEv(%"class.blink::HTMLAnchorElement"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17HTMLAnchorElement9SendPingsERKNS_4KURLE(%"class.blink::HTMLAnchorElement"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SpaceSplitString", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kPingAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %6, align 8
  %8 = icmp eq %"class.blink::ElementData"* %7, null
  br i1 %8, label %59, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::ElementData"* %7 to %"class.blink::UniqueElementData"*
  %16 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %7, i64 1, i32 1
  %17 = bitcast %"class.blink::Member.14"* %16 to %"class.blink::Attribute"**
  %18 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  br label %26

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %7, i64 1
  %23 = bitcast %"class.blink::ElementData"* %22 to %"class.blink::Attribute"*
  %24 = lshr i32 %11, 1
  %25 = and i32 %24, 268435455
  br label %26

26:                                               ; preds = %21, %14
  %27 = phi %"class.blink::Attribute"* [ %23, %21 ], [ %18, %14 ]
  %28 = phi i32 [ %25, %21 ], [ %20, %14 ]
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %27, i64 %29
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %59, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %37

37:                                               ; preds = %52, %32
  %38 = phi %"class.blink::Attribute"* [ %27, %32 ], [ %53, %52 ]
  %39 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %40, %34
  br i1 %41, label %55, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, %50
  br i1 %51, label %55, label %52

52:                                               ; preds = %47, %42
  %53 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 1
  %54 = icmp eq %"class.blink::Attribute"* %53, %30
  br i1 %54, label %59, label %37

55:                                               ; preds = %47, %37
  %56 = icmp eq %"class.blink::Attribute"* %38, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 0, i32 1
  br label %61

59:                                               ; preds = %52, %55, %26, %2
  %60 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %61

61:                                               ; preds = %57, %59
  %62 = phi %"class.WTF::AtomicString"* [ %60, %59 ], [ %58, %57 ]
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %276, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %69 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %69, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::Document"*, %"class.blink::Document"** %70, align 8
  %72 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %71) #16
  %73 = icmp eq %"class.blink::Settings"* %72, null
  br i1 %73, label %276, label %74

74:                                               ; preds = %66
  %75 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %68, align 8
  %76 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %75, i64 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::Document"*, %"class.blink::Document"** %76, align 8
  %78 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %77) #16
  %79 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %78, i64 0, i32 71
  %80 = bitcast [14 x i8]* %79 to i112*
  %81 = load i112, i112* %80, align 8
  %82 = and i112 %81, 2199023255552
  %83 = icmp eq i112 %82, 0
  br i1 %83, label %276, label %84

84:                                               ; preds = %74
  %85 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %68, align 8
  %86 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %85, i64 0, i32 2, i32 0, i32 0
  %87 = load %"class.blink::Document"*, %"class.blink::Document"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %87, i64 0, i32 14, i32 0, i32 0
  %89 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %89, i64 0, i32 17, i32 0, i32 0
  %91 = load %"class.blink::MHTMLArchive"*, %"class.blink::MHTMLArchive"** %90, align 8
  %92 = icmp eq %"class.blink::MHTMLArchive"* %91, null
  br i1 %92, label %93, label %276

93:                                               ; preds = %84
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %235, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 1
  br i1 %100, label %114, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %134, label %106

106:                                              ; preds = %102
  %107 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  %108 = zext i32 %104 to i64
  %109 = tail call i8* @memchr(i8* %107, i32 10, i64 %108) #17
  %110 = icmp eq i8* %109, null
  %111 = ptrtoint i8* %109 to i64
  %112 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %113 = sub i64 %111, %112
  br i1 %110, label %134, label %129

114:                                              ; preds = %96
  %115 = bitcast %"class.WTF::StringImpl"* %101 to i16*
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %134, label %119

119:                                              ; preds = %114
  %120 = zext i32 %117 to i64
  br label %121

121:                                              ; preds = %126, %119
  %122 = phi i64 [ %127, %126 ], [ 0, %119 ]
  %123 = getelementptr inbounds i16, i16* %115, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = icmp eq i16 %124, 10
  br i1 %125, label %129, label %126

126:                                              ; preds = %121
  %127 = add nuw nsw i64 %122, 1
  %128 = icmp eq i64 %127, %120
  br i1 %128, label %134, label %121

129:                                              ; preds = %121, %106
  %130 = phi i32 [ %104, %106 ], [ %117, %121 ]
  %131 = phi i64 [ %113, %106 ], [ %122, %121 ]
  %132 = trunc i64 %131 to i32
  %133 = icmp eq i32 %132, -1
  br i1 %133, label %134, label %197

134:                                              ; preds = %126, %129, %102, %114, %106
  %135 = phi i32 [ 0, %102 ], [ 0, %114 ], [ %104, %106 ], [ %130, %129 ], [ %117, %126 ]
  %136 = load atomic i32, i32* %97 monotonic, align 4
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %149, label %139

139:                                              ; preds = %134
  %140 = icmp eq i32 %135, 0
  br i1 %140, label %166, label %141

141:                                              ; preds = %139
  %142 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  %143 = zext i32 %135 to i64
  %144 = tail call i8* @memchr(i8* %142, i32 13, i64 %143) #17
  %145 = icmp eq i8* %144, null
  %146 = ptrtoint i8* %144 to i64
  %147 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %148 = sub i64 %146, %147
  br i1 %145, label %166, label %162

149:                                              ; preds = %134
  %150 = bitcast %"class.WTF::StringImpl"* %101 to i16*
  %151 = icmp eq i32 %135, 0
  br i1 %151, label %166, label %152

152:                                              ; preds = %149
  %153 = zext i32 %135 to i64
  br label %154

154:                                              ; preds = %159, %152
  %155 = phi i64 [ %160, %159 ], [ 0, %152 ]
  %156 = getelementptr inbounds i16, i16* %150, i64 %155
  %157 = load i16, i16* %156, align 2
  %158 = icmp eq i16 %157, 13
  br i1 %158, label %162, label %159

159:                                              ; preds = %154
  %160 = add nuw nsw i64 %155, 1
  %161 = icmp eq i64 %160, %153
  br i1 %161, label %166, label %154

162:                                              ; preds = %154, %141
  %163 = phi i64 [ %148, %141 ], [ %155, %154 ]
  %164 = trunc i64 %163 to i32
  %165 = icmp eq i32 %164, -1
  br i1 %165, label %166, label %197

166:                                              ; preds = %159, %162, %139, %149, %141
  %167 = load atomic i32, i32* %97 monotonic, align 4
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %180, label %170

170:                                              ; preds = %166
  %171 = icmp eq i32 %135, 0
  br i1 %171, label %235, label %172

172:                                              ; preds = %170
  %173 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  %174 = zext i32 %135 to i64
  %175 = tail call i8* @memchr(i8* %173, i32 9, i64 %174) #17
  %176 = icmp eq i8* %175, null
  %177 = ptrtoint i8* %175 to i64
  %178 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %179 = sub i64 %177, %178
  br i1 %176, label %235, label %193

180:                                              ; preds = %166
  %181 = bitcast %"class.WTF::StringImpl"* %101 to i16*
  %182 = icmp eq i32 %135, 0
  br i1 %182, label %235, label %183

183:                                              ; preds = %180
  %184 = zext i32 %135 to i64
  br label %185

185:                                              ; preds = %190, %183
  %186 = phi i64 [ %191, %190 ], [ 0, %183 ]
  %187 = getelementptr inbounds i16, i16* %181, i64 %186
  %188 = load i16, i16* %187, align 2
  %189 = icmp eq i16 %188, 9
  br i1 %189, label %193, label %190

190:                                              ; preds = %185
  %191 = add nuw nsw i64 %186, 1
  %192 = icmp eq i64 %191, %184
  br i1 %192, label %235, label %185

193:                                              ; preds = %185, %172
  %194 = phi i64 [ %179, %172 ], [ %186, %185 ]
  %195 = trunc i64 %194 to i32
  %196 = icmp eq i32 %195, -1
  br i1 %196, label %235, label %197

197:                                              ; preds = %129, %162, %193
  %198 = phi i32 [ %135, %193 ], [ %135, %162 ], [ %130, %129 ]
  %199 = load atomic i32, i32* %97 monotonic, align 4
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %212, label %202

202:                                              ; preds = %197
  %203 = icmp eq i32 %198, 0
  br i1 %203, label %235, label %204

204:                                              ; preds = %202
  %205 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  %206 = zext i32 %198 to i64
  %207 = tail call i8* @memchr(i8* %205, i32 60, i64 %206) #17
  %208 = icmp eq i8* %207, null
  %209 = ptrtoint i8* %207 to i64
  %210 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %211 = sub i64 %209, %210
  br i1 %208, label %235, label %225

212:                                              ; preds = %197
  %213 = bitcast %"class.WTF::StringImpl"* %101 to i16*
  %214 = icmp eq i32 %198, 0
  br i1 %214, label %235, label %215

215:                                              ; preds = %212
  %216 = zext i32 %198 to i64
  br label %217

217:                                              ; preds = %222, %215
  %218 = phi i64 [ %223, %222 ], [ 0, %215 ]
  %219 = getelementptr inbounds i16, i16* %213, i64 %218
  %220 = load i16, i16* %219, align 2
  %221 = icmp eq i16 %220, 60
  br i1 %221, label %225, label %222

222:                                              ; preds = %217
  %223 = add nuw nsw i64 %218, 1
  %224 = icmp eq i64 %223, %216
  br i1 %224, label %235, label %217

225:                                              ; preds = %217, %204
  %226 = phi i64 [ %211, %204 ], [ %218, %217 ]
  %227 = trunc i64 %226 to i32
  %228 = icmp eq i32 %227, -1
  br i1 %228, label %235, label %229

229:                                              ; preds = %225
  %230 = bitcast %"class.blink::HTMLAnchorElement"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %231 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %230, align 8
  %232 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %231, i64 10
  %233 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %232, align 8
  %234 = tail call %"class.blink::ExecutionContext"* %233(%"class.blink::Node"* %67) #16
  tail call void @_ZN5blink11Deprecation16CountDeprecationEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %234, i32 1914) #16
  br label %276

235:                                              ; preds = %190, %222, %225, %193, %93, %204, %212, %202, %172, %180, %170
  %236 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %87, i64 0, i32 2
  %237 = bitcast %"class.blink::UseCounter"* %236 to void (%"class.blink::UseCounter"*, i32)***
  %238 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %237, align 8
  %239 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %238, i64 3
  %240 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %239, align 8
  tail call void %240(%"class.blink::UseCounter"* %236, i32 276) #16
  %241 = bitcast %"class.blink::SpaceSplitString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241) #16
  %242 = getelementptr inbounds %"class.blink::SpaceSplitString", %"class.blink::SpaceSplitString"* %3, i64 0, i32 0, i32 0
  store %"class.blink::SpaceSplitString::Data"* null, %"class.blink::SpaceSplitString::Data"** %242, align 8
  call void @_ZN5blink16SpaceSplitString3SetERKN3WTF12AtomicStringE(%"class.blink::SpaceSplitString"* nonnull %3, %"class.WTF::AtomicString"* dereferenceable(8) %62) #16
  %243 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  br label %244

244:                                              ; preds = %263, %235
  %245 = phi i32 [ 0, %235 ], [ %275, %263 ]
  %246 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %242, align 8
  %247 = icmp eq %"class.blink::SpaceSplitString::Data"* %246, null
  br i1 %247, label %251, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %246, i64 0, i32 2, i32 0, i32 0, i32 2
  %250 = load i32, i32* %249, align 4
  br label %251

251:                                              ; preds = %244, %248
  %252 = phi i32 [ %250, %248 ], [ 0, %244 ]
  %253 = icmp ult i32 %245, %252
  br i1 %253, label %263, label %254

254:                                              ; preds = %251
  br i1 %247, label %262, label %255

255:                                              ; preds = %254
  %256 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %246, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %256) #16
  %257 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %246, i64 0, i32 0, i32 0, i32 0, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %262

260:                                              ; preds = %255
  call void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"* nonnull %246) #16
  %261 = bitcast %"class.blink::SpaceSplitString::Data"* %246 to i8*
  call void @free(i8* %261) #16
  br label %262

262:                                              ; preds = %254, %255, %260
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241) #16
  br label %276

263:                                              ; preds = %251
  %264 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %68, align 8
  %265 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %264, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::Document"*, %"class.blink::Document"** %265, align 8
  %267 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %266) #16
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %243) #16
  %268 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %68, align 8
  %269 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %268, i64 0, i32 2, i32 0, i32 0
  %270 = load %"class.blink::Document"*, %"class.blink::Document"** %269, align 8
  %271 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %242, align 8
  %272 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %271, i64 0, i32 2
  %273 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %272, i32 %245) #16
  %274 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %273, i64 0, i32 0
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %4, %"class.blink::Document"* %270, %"class.WTF::String"* dereferenceable(8) %274) #16
  call void @_ZN5blink10PingLoader17SendLinkAuditPingEPNS_10LocalFrameERKNS_4KURLES5_(%"class.blink::LocalFrame"* %267, %"class.blink::KURL"* nonnull dereferenceable(112) %4, %"class.blink::KURL"* dereferenceable(112) %1) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %243) #16
  %275 = add nuw i32 %245, 1
  br label %244

276:                                              ; preds = %74, %84, %61, %66, %262, %229
  ret void
}

declare %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"*) local_unnamed_addr #3

declare void @_ZN5blink11Deprecation16CountDeprecationEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #3

declare void @_ZN5blink10PingLoader17SendLinkAuditPingEPNS_10LocalFrameERKNS_4KURLES5_(%"class.blink::LocalFrame"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #3

declare dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink8Document11TopDocumentEv(%"class.blink::Document"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink26AnchorElementMetricsSender29HasAnchorElementMetricsSenderERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #3

declare %"class.blink::AnchorElementMetricsSender"* @_ZN5blink26AnchorElementMetricsSender4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #3

declare void @_ZN5blink26AnchorElementMetricsSender32MaybeReportClickedMetricsOnClickERKNS_17HTMLAnchorElementE(%"class.blink::AnchorElementMetricsSender"*, %"class.blink::HTMLAnchorElement"* dereferenceable(136)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #16
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #16
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #16
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #16
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #16
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #3

declare zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8), i32, i32*) local_unnamed_addr #3

declare i32 @_ZN5blink25NavigationPolicyFromEventEPKNS_5EventE(%"class.blink::Event"*) local_unnamed_addr #3

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink14SecurityOrigin14CanReadContentERKNS_4KURLE(%"class.blink::SecurityOrigin"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #3

declare i32 @_ZNK5blink16ExecutionContext17GetReferrerPolicyEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare { %"class.WTF::StringImpl"*, i32 } @_ZN5blink14SecurityPolicy16GenerateReferrerEN7network5mojom14ReferrerPolicyERKNS_4KURLERKN3WTF6StringE(i32, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink14LocalDOMWindow16OutgoingReferrerEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #3

declare void @_ZN5blink10LocalFrame11DownloadURLERKNS_15ResourceRequestEN7network5mojom12RedirectModeE(%"class.blink::LocalFrame"*, %"class.blink::ResourceRequest"* dereferenceable(1032), i32) local_unnamed_addr #3

declare void @_ZN5blink19ResourceRequestHead17SetHasUserGestureEb(%"class.blink::ResourceRequestHead"*, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink10LocalFrame26HasTransientUserActivationEPS0_(%"class.blink::LocalFrame"*) local_unnamed_addr #3

declare void @_ZN5blink16FrameLoadRequestC1EPNS_14LocalDOMWindowERKNS_15ResourceRequestE(%"struct.blink::FrameLoadRequest"*, %"class.blink::LocalDOMWindow"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [7 x i8]* dereferenceable(7)) local_unnamed_addr #7 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %141, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %183, %14, %28, %141, %155, %169, %42, %59, %77, %93, %109, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %14 ], [ false, %28 ], [ false, %141 ], [ false, %155 ], [ false, %169 ], [ %196, %183 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  ret i1 %140

141:                                              ; preds = %28
  %142 = getelementptr inbounds i8, i8* %15, i64 2
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i64
  %151 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp eq i32 %147, %153
  br i1 %154, label %155, label %75

155:                                              ; preds = %141
  %156 = getelementptr inbounds i8, i8* %15, i64 3
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i64
  %159 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i64
  %165 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = icmp eq i32 %161, %167
  br i1 %168, label %169, label %75

169:                                              ; preds = %155
  %170 = getelementptr inbounds i8, i8* %15, i64 4
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i64
  %173 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i64
  %179 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = icmp eq i32 %175, %181
  br i1 %182, label %183, label %75

183:                                              ; preds = %169
  %184 = getelementptr inbounds i8, i8* %15, i64 5
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i64
  %187 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = sext i8 %194 to i32
  %196 = icmp eq i32 %189, %195
  br label %75
}

declare %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"*) local_unnamed_addr #3

declare void @_ZN5blink10LocalFrame25MaybeLogAdClickNavigationEv(%"class.blink::LocalFrame"*) local_unnamed_addr #3

declare { %"class.blink::Frame"*, i8 } @_ZNK5blink9FrameTree30FindOrCreateFrameForNavigationERNS_16FrameLoadRequestERKN3WTF12AtomicStringE(%"class.blink::FrameTree"*, %"struct.blink::FrameLoadRequest"* dereferenceable(1320), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20HrefTranslateEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16FrameLoadRequestD2Ev(%"struct.blink::FrameLoadRequest"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %3 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %2, align 8
  store %"class.blink::SourceLocation"* null, %"class.blink::SourceLocation"** %2, align 8
  %4 = icmp eq %"class.blink::SourceLocation"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %3) #16
  %6 = bitcast %"class.blink::SourceLocation"* %3 to i8*
  tail call void @free(i8* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 15, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %8) #16
  %9 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %17) #16
  store i8 0, i8* %13, align 8
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %19) #16
  store i8 0, i8* %9, align 8
  br label %20

20:                                               ; preds = %7, %18
  %21 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 12, i32 17, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 12, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 12, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %29) #16
  store i8 0, i8* %25, align 8
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 12, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %31) #16
  store i8 0, i8* %21, align 8
  br label %32

32:                                               ; preds = %20, %30
  %33 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 9, i32 0
  %34 = load %"class.base::RefCountedData.3156"*, %"class.base::RefCountedData.3156"** %33, align 8
  %35 = icmp eq %"class.base::RefCountedData.3156"* %34, null
  br i1 %35, label %55, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.base::RefCountedData.3156", %"class.base::RefCountedData.3156"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"class.base::RefCountedData.3156", %"class.base::RefCountedData.3156"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw sub i32* %38, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %55

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe.3157", %"class.base::RefCountedThreadSafe.3157"* %37, i64 2
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe.3157", %"class.base::RefCountedThreadSafe.3157"* %37, i64 12
  %44 = bitcast %"class.base::RefCountedThreadSafe.3157"* %43 to %"class.blink::mojom::blink::BlobURLTokenProxy"**
  %45 = load %"class.blink::mojom::blink::BlobURLTokenProxy"*, %"class.blink::mojom::blink::BlobURLTokenProxy"** %44, align 8
  store %"class.blink::mojom::blink::BlobURLTokenProxy"* null, %"class.blink::mojom::blink::BlobURLTokenProxy"** %44, align 8
  %46 = icmp eq %"class.blink::mojom::blink::BlobURLTokenProxy"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %41
  %48 = bitcast %"class.blink::mojom::blink::BlobURLTokenProxy"* %45 to void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)***
  %49 = load void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)**, void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)*, void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)** %49, i64 1
  %51 = load void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)*, void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)** %50, align 8
  tail call void %51(%"class.blink::mojom::blink::BlobURLTokenProxy"* nonnull %45) #16
  br label %52

52:                                               ; preds = %47, %41
  %53 = bitcast %"class.base::RefCountedThreadSafe.3157"* %42 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %53) #16
  %54 = bitcast %"class.base::RefCountedData.3156"* %34 to i8*
  tail call void @_ZdlPv(i8* %54) #18
  br label %55

55:                                               ; preds = %32, %36, %52
  %56 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 8, i32 0
  %57 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %56, align 8
  %58 = icmp eq %"class.blink::DOMWrapperWorld"* %57, null
  br i1 %58, label %66, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %57, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %60) #16
  %61 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %57) #16
  %65 = bitcast %"class.blink::DOMWrapperWorld"* %57 to i8*
  tail call void @free(i8* %65) #16
  br label %66

66:                                               ; preds = %55, %59, %64
  %67 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #16
  br label %83

83:                                               ; preds = %66, %79, %82
  %84 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 1
  tail call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* %84) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17HTMLAnchorElement29WillRespondToMouseClickEventsEv(%"class.blink::HTMLAnchorElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 64
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"* %7) #16
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i1 [ true, %1 ], [ %8, %6 ]
  ret i1 %10
}

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLAnchorElement20IsInteractiveContentEv(%"class.blink::HTMLAnchorElement"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 64
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17HTMLAnchorElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLAnchorElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #16
  %5 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  tail call void @_ZN5blink7Element41LogAddElementIfIsolatedWorldAndInDocumentEPKcRKNS_13QualifiedNameE(%"class.blink::Element"* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), %"class.blink::QualifiedName"* dereferenceable(8) %6) #16
  %7 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = tail call dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink8Document11TopDocumentEv(%"class.blink::Document"* %10) #16
  %12 = tail call zeroext i1 @_ZN5blink26AnchorElementMetricsSender29HasAnchorElementMetricsSenderERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %11) #16
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = tail call %"class.blink::AnchorElementMetricsSender"* @_ZN5blink26AnchorElementMetricsSender4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %11) #16
  tail call void @_ZN5blink26AnchorElementMetricsSender16AddAnchorElementERNS_17HTMLAnchorElementE(%"class.blink::AnchorElementMetricsSender"* %14, %"class.blink::HTMLAnchorElement"* dereferenceable(136) %0) #16
  br label %15

15:                                               ; preds = %13, %2
  ret i32 %4
}

declare i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #3

declare void @_ZN5blink7Element41LogAddElementIfIsolatedWorldAndInDocumentEPKcRKNS_13QualifiedNameE(%"class.blink::Element"*, i8*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink26AnchorElementMetricsSender16AddAnchorElementERNS_17HTMLAnchorElementE(%"class.blink::AnchorElementMetricsSender"*, %"class.blink::HTMLAnchorElement"* dereferenceable(136)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17HTMLAnchorElement5TraceEPNS_7VisitorE(%"class.blink::HTMLAnchorElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::Member.19"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7RelListEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"* %14, %"class.blink::Visitor"* %1) #16
  ret void
}

declare void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"*, %"class.blink::Visitor"*) unnamed_addr #3

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #16
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink17HTMLAnchorElement18GetWrapperTypeInfoEv(%"class.blink::HTMLAnchorElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17HTMLAnchorElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #3

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #3

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #3

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #3

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #3

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #3

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #3

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #3

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #3

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #3

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #3

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #3

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #3

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #3

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #3

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #3

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #3

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #3

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #3

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #3

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #3

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #3

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #3

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #3

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #3

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #3

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #3

declare void @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #16
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #3

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #3

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #3

declare %"class.WTF::HashMap.3267"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #3

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #3

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #3

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #3

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #3

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #3

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #3

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #3

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #3

declare void @_ZN5blink11HTMLElement21FinishParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #3

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLElement"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement12willValidateEv(%"class.blink::HTMLElement"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink11HTMLElement14IsValidElementEv(%"class.blink::HTMLElement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #3

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #3

declare void @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #3

declare zeroext i1 @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv(%"class.blink::HTMLElement"*) unnamed_addr #3

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HTMLElement14autocapitalizeEv(%"class.blink::HTMLElement"*) unnamed_addr #3

declare %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement9formOwnerEv(%"class.blink::HTMLElement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FormAssociated"* null
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

declare void @_ZN5blink11DOMURLUtils9setSearchERKN3WTF6StringE(%"class.blink::DOMURLUtils"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*, i32) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"*) local_unnamed_addr #3

declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"*) unnamed_addr #2

declare void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

declare void @_ZN5blink16SpaceSplitString3SetERKN3WTF12AtomicStringE(%"class.blink::SpaceSplitString"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink16HTMLImageElement11IsServerMapEv(%"class.blink::HTMLImageElement"*) local_unnamed_addr #3

declare <2 x float> @_ZNK5blink11DoublePointcvNS_10FloatPointEEv(%"class.blink::DoublePoint"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink9LayoutBox24PhysicalContentBoxOffsetEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #16
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #16
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #16
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %35, %29, %9, %1
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = phi i1 [ false, %35 ], [ false, %25 ], [ false, %15 ], [ %45, %39 ]
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %49 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %50 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, i64 124
  %52 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, align 8
  %53 = tail call i32 %52(%"class.blink::LayoutBoxModelObject"* %48) #16
  br i1 %47, label %65, label %54

54:                                               ; preds = %46
  %55 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #16
  %56 = extractvalue { i64, i64 } %55, 1
  %57 = lshr i64 %56, 32
  %58 = trunc i64 %57 to i32
  %59 = icmp slt i32 %58, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %58) #16
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !3
  br label %65

65:                                               ; preds = %46, %54
  %66 = phi i32 [ %64, %54 ], [ %53, %46 ]
  %67 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %68 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %67, i64 120
  %69 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %68, align 8
  %70 = tail call i32 %69(%"class.blink::LayoutBoxModelObject"* %48) #16
  %71 = icmp slt i32 %70, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %66, i32 %70) #16
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !3
  %77 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %77, i64 0, i32 0, i32 9
  %79 = bitcast [20 x i8]* %78 to i160*
  %80 = load i160, i160* %79, align 8
  %81 = and i160 %80, 1190036353683150593851392
  %82 = icmp eq i160 %81, 340010386766614455386112
  br i1 %82, label %112, label %83

83:                                               ; preds = %65
  %84 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %85 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %84 to i96*
  %86 = load i96, i96* %85, align 4
  %87 = and i96 %86, 8589934592
  %88 = icmp eq i96 %87, 0
  br i1 %88, label %112, label %89

89:                                               ; preds = %83
  %90 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %48) #16
  %91 = icmp eq %"class.blink::PaintLayerScrollableArea"* %90, null
  br i1 %91, label %119, label %92

92:                                               ; preds = %89
  %93 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %48) #16
  %94 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %93, i64 0, i32 6, i32 3
  %95 = load i8, i8* %94, align 8
  %96 = and i8 %95, 1
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %93, i64 0, i32 6, i32 1, i32 0, i32 0
  %100 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %99, align 8
  %101 = icmp eq %"class.blink::Scrollbar"* %100, null
  br i1 %101, label %102, label %119

102:                                              ; preds = %98, %92
  %103 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %48) #16
  %104 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %103, i64 0, i32 6, i32 3
  %105 = load i8, i8* %104, align 8
  %106 = and i8 %105, 2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %103, i64 0, i32 6, i32 2, i32 0, i32 0
  %110 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %109, align 8
  %111 = icmp eq %"class.blink::Scrollbar"* %110, null
  br i1 %111, label %112, label %119

112:                                              ; preds = %108, %102, %83, %65
  %113 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %114 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %113, i64 0, i32 0, i32 9
  %115 = bitcast [20 x i8]* %114 to i160*
  %116 = load i160, i160* %115, align 8
  %117 = and i160 %116, 270215977642229760
  %118 = icmp eq i160 %117, 0
  br label %119

119:                                              ; preds = %89, %98, %108, %112
  %120 = phi i1 [ false, %108 ], [ false, %98 ], [ false, %89 ], [ %118, %112 ]
  %121 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %122 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %121, i64 122
  %123 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %122, align 8
  %124 = tail call i32 %123(%"class.blink::LayoutBoxModelObject"* %48) #16
  br i1 %120, label %135, label %125

125:                                              ; preds = %119
  %126 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #16
  %127 = extractvalue { i64, i64 } %126, 0
  %128 = trunc i64 %127 to i32
  %129 = icmp slt i32 %128, 0
  %130 = select i1 %129, i32 -2147483648, i32 2147483647
  %131 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %124, i32 %128) #16
  %132 = extractvalue { i32, i1 } %131, 1
  %133 = extractvalue { i32, i1 } %131, 0
  %134 = select i1 %132, i32 %130, i32 %133, !prof !3
  br label %135

135:                                              ; preds = %119, %125
  %136 = phi i32 [ %134, %125 ], [ %124, %119 ]
  %137 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %138 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %137, i64 118
  %139 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %138, align 8
  %140 = tail call i32 %139(%"class.blink::LayoutBoxModelObject"* %48) #16
  %141 = icmp slt i32 %140, 0
  %142 = select i1 %141, i32 -2147483648, i32 2147483647
  %143 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %136, i32 %140) #16
  %144 = extractvalue { i32, i1 } %143, 1
  %145 = extractvalue { i32, i1 } %143, 0
  %146 = select i1 %144, i32 %142, i32 %145, !prof !3
  %147 = zext i32 %146 to i64
  %148 = shl nuw i64 %147, 32
  %149 = zext i32 %76 to i64
  %150 = or i64 %148, %149
  ret i64 %150
}

declare <2 x float> @_ZNK5blink12LayoutObject25AncestorToLocalFloatPointEPKNS_20LayoutBoxModelObjectERKNS_10FloatPointEj(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::FloatPoint"* dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #10

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #3

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #16
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon.3143* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.3143* %16 to %"class.WTF::Vector.3149"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.3149"* %30, i16* nonnull dereferenceable(2) %3) #16
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #16
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.3144"* %41, i8* nonnull dereferenceable(1) %4) #16
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.3149"*, i16* dereferenceable(2)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3149"* %0, i32 %5) #16
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3149"* %0, i32 %5) #16
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3149"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #16
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #16
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3149"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.3149"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3149"* %0, i32 %27) #16
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3149"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.3149"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.3149"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #16
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3150"* %19, i16* nonnull %6) #16
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #16
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #16
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #16
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3150"* %53, i16* %48) #16
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.3149"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.3149", %"class.WTF::Vector.3149"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3150"*, i16*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.3144"*, i8* dereferenceable(1)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3144"* %0, i32 %5) #16
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3144"* %0, i32 %5) #16
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3144"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #16
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3144"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.3144"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3144"* %0, i32 %27) #16
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3144"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.3144"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.3144"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #16
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3145"* %18, i8* nonnull %6) #16
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #16
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #16
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3145"* %46, i8* %42) #16
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.3144"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.3144", %"class.WTF::Vector.3144"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #16
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3145"*, i8*) local_unnamed_addr #12 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #16
  ret void
}

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #3

declare %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink16ExecutionContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.absl::optional_internal::optional_data.1871"* @_ZN4absl17optional_internal13optional_dataIN3WTF6StringELb0EEaSERKS4_(%"class.absl::optional_internal::optional_data.1871"*, %"class.absl::optional_internal::optional_data.1871"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data.1871", %"class.absl::optional_internal::optional_data.1871"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %75, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data.1871", %"class.absl::optional_internal::optional_data.1871"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data.1871", %"class.absl::optional_internal::optional_data.1871"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %52, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.absl::optional_internal::optional_data.1871", %"class.absl::optional_internal::optional_data.1871"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #16
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %21
  tail call void @llvm.trap() #16
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %31, %16, %11
  %34 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %35 = bitcast %"class.WTF::String"* %12 to i64*
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  store i64 %34, i64* %35, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %97, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %97

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #16
  br label %97

52:                                               ; preds = %6
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.absl::optional_internal::optional_data.1871", %"class.absl::optional_internal::optional_data.1871"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #16
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !3

71:                                               ; preds = %62
  tail call void @llvm.trap() #16
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %72, %57, %52
  store i8 1, i8* %8, align 8
  br label %97

75:                                               ; preds = %2
  %76 = getelementptr inbounds %"class.absl::optional_internal::optional_data.1871", %"class.absl::optional_internal::optional_data.1871"* %0, i64 0, i32 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %97, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.absl::optional_internal::optional_data.1871", %"class.absl::optional_internal::optional_data.1871"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #16
  br label %96

96:                                               ; preds = %95, %92, %79
  store i8 0, i8* %76, align 8
  br label %97

97:                                               ; preds = %96, %75, %74, %33, %48, %51
  ret %"class.absl::optional_internal::optional_data.1871"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #16
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #16
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #16
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #16
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #16
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #16
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

declare void @_ZN5blink19ResourceRequestHead15ClearHTTPOriginEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.absl::optional_internal::optional_data.3042"* @_ZN4absl17optional_internal13optional_dataIN5blink13WebImpressionELb0EEaSERKS4_(%"class.absl::optional_internal::optional_data.3042"*, %"class.absl::optional_internal::optional_data.3042"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %5, label %53, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br i1 %8, label %38, label %13

13:                                               ; preds = %9
  tail call void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"* %11, %"class.blink::WebSecurityOrigin"* dereferenceable(8) %12) #16
  %14 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %15 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.absl::optional.3046", %"class.absl::optional.3046"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %22, label %25, label %24

24:                                               ; preds = %18
  tail call void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"* %23, %"class.blink::WebSecurityOrigin"* dereferenceable(8) %19) #16
  br label %33

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::WebSecurityOrigin", %"class.blink::WebSecurityOrigin"* %23, i64 0, i32 0, i32 0
  store i8* null, i8** %26, align 8
  tail call void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"* %23, %"class.blink::WebSecurityOrigin"* dereferenceable(8) %19) #16
  store i8 1, i8* %20, align 8
  br label %33

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.absl::optional.3046", %"class.absl::optional.3046"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %32) #16
  store i8 0, i8* %28, align 8
  br label %33

33:                                               ; preds = %24, %25, %27, %31
  %34 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %35 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %36 = bitcast i64* %34 to i8*
  %37 = bitcast i64* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 32, i1 false) #16
  br label %62

38:                                               ; preds = %9
  %39 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %10, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %39, align 8
  tail call void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"* %11, %"class.blink::WebSecurityOrigin"* dereferenceable(8) %12) #16
  %40 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #16
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.blink::WebSecurityOrigin", %"class.blink::WebSecurityOrigin"* %46, i64 0, i32 0, i32 0
  store i8* null, i8** %47, align 8
  tail call void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"* %46, %"class.blink::WebSecurityOrigin"* dereferenceable(8) %45) #16
  store i8 1, i8* %40, align 8
  br label %48

48:                                               ; preds = %44, %38
  %49 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %50 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %51 = bitcast i64* %49 to i8*
  %52 = bitcast i64* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 32, i1 false) #16
  store i8 1, i8* %6, align 8
  br label %62

53:                                               ; preds = %2
  br i1 %8, label %62, label %54

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %59) #16
  store i8 0, i8* %55, align 8
  br label %60

60:                                               ; preds = %58, %54
  %61 = getelementptr inbounds %"class.absl::optional_internal::optional_data.3042", %"class.absl::optional_internal::optional_data.3042"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %61) #16
  store i8 0, i8* %6, align 8
  br label %62

62:                                               ; preds = %60, %53, %48, %33
  ret %"class.absl::optional_internal::optional_data.3042"* %0
}

declare void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"*, %"class.blink::WebSecurityOrigin"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink7RelListC1EPNS_7ElementE(%"class.blink::RelList"*, %"class.blink::Element"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #16
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #16
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #16
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* %40, i8* %41) #16
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #16
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #16
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #16
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #16
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27AssociatedInterfaceProvider12GetInterfaceINS_5mojom5blink14ConversionHostEEEvN4mojo25PendingAssociatedReceiverIT_EE(%"class.blink::AssociatedInterfaceProvider"*, %"class.mojo::PendingAssociatedReceiver"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink14ConversionHost5Name_E, i64 0, i64 0)) #16
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #19
  unreachable

10:                                               ; preds = %2
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #18
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

21:                                               ; preds = %10
  %22 = trunc i64 %6 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %12
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %20, %12 ]
  %28 = phi i8* [ %5, %21 ], [ %15, %12 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink14ConversionHost5Name_E, i64 0, i64 0), i64 %6, i1 false) #16
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %27, %26 ]
  %31 = phi i8* [ %5, %21 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %6
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %33) #16
  call void @_ZN5blink27AssociatedInterfaceProvider12GetInterfaceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4mojo29ScopedInterfaceEndpointHandleE(%"class.blink::AssociatedInterfaceProvider"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4) #16
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #18
  br label %40

40:                                               ; preds = %29, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink14ConversionHostEE30BindNewEndpointAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingAssociatedReceiver"* noalias sret, %"class.mojo::AssociatedRemote.3085"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %5 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %6 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %7 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %8 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %9 = bitcast %"class.mojo::ScopedInterfaceEndpointHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.mojo::ScopedInterfaceEndpointHandle", %"class.mojo::ScopedInterfaceEndpointHandle"* %4, i64 0, i32 0, i32 0
  store %"class.mojo::ScopedInterfaceEndpointHandle::State"* inttoptr (i64 -6148914691236517206 to %"class.mojo::ScopedInterfaceEndpointHandle::State"*), %"class.mojo::ScopedInterfaceEndpointHandle::State"** %10, align 8
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4) #16
  %11 = bitcast %"class.mojo::ScopedInterfaceEndpointHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.mojo::ScopedInterfaceEndpointHandle", %"class.mojo::ScopedInterfaceEndpointHandle"* %5, i64 0, i32 0, i32 0
  store %"class.mojo::ScopedInterfaceEndpointHandle::State"* inttoptr (i64 -6148914691236517206 to %"class.mojo::ScopedInterfaceEndpointHandle::State"*), %"class.mojo::ScopedInterfaceEndpointHandle::State"** %12, align 8
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %5) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandle28CreatePairPendingAssociationEPS0_S1_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %5) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %7, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %4) #16
  %13 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %6, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %13, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %7) #16
  %14 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %6, i64 0, i32 1
  store i32 0, i32* %14, align 8
  call void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink14ConversionHostEE4BindENS_23PendingAssociatedRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::AssociatedRemote.3085"* %1, %"class.mojo::PendingAssociatedRemote"* nonnull %6, %"class.base::SequencedTaskRunner"* %2)
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %13) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %7) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %8, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %5) #16
  %15 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %0, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* %15, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %8) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %8) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  ret void
}

declare void @_ZN5blink27AssociatedInterfaceProvider12GetInterfaceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4mojo29ScopedInterfaceEndpointHandleE(%"class.blink::AssociatedInterfaceProvider"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.mojo::ScopedInterfaceEndpointHandle"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #14

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #15

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #3

declare void @_ZN4mojo29ScopedInterfaceEndpointHandle28CreatePairPendingAssociationEPS0_S1_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink14ConversionHostEE4BindENS_23PendingAssociatedRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::AssociatedRemote.3085"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::AssociatedInterfacePtrState.3086", align 8
  %5 = alloca %"class.mojo::AssociatedInterfacePtrInfo", align 8
  %6 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %7 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZNK4mojo29ScopedInterfaceEndpointHandle8is_validEv(%"class.mojo::ScopedInterfaceEndpointHandle"* %7) #16
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.mojo::internal::AssociatedInterfacePtrState.3086"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #16
  %11 = bitcast %"class.mojo::internal::AssociatedInterfacePtrState.3086"* %4 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %11) #16
  %12 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState.3086", %"class.mojo::internal::AssociatedInterfacePtrState.3086"* %4, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.3087"* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = bitcast %"class.mojo::AssociatedRemote.3085"* %0 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %14, %"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %11) #16
  %15 = getelementptr inbounds %"class.mojo::AssociatedRemote.3085", %"class.mojo::AssociatedRemote.3085"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %13, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.3087"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %16, i64* %17, align 8
  %19 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState.3086", %"class.mojo::internal::AssociatedInterfacePtrState.3086"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ConversionHostProxy"* null, %"class.blink::mojom::blink::ConversionHostProxy"** %19, align 8
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %9
  %22 = inttoptr i64 %18 to %"class.blink::mojom::blink::ConversionHostProxy"*
  %23 = inttoptr i64 %18 to void (%"class.blink::mojom::blink::ConversionHostProxy"*)***
  %24 = load void (%"class.blink::mojom::blink::ConversionHostProxy"*)**, void (%"class.blink::mojom::blink::ConversionHostProxy"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::ConversionHostProxy"*)*, void (%"class.blink::mojom::blink::ConversionHostProxy"*)** %24, i64 1
  %26 = load void (%"class.blink::mojom::blink::ConversionHostProxy"*)*, void (%"class.blink::mojom::blink::ConversionHostProxy"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::ConversionHostProxy"* nonnull %22) #16
  br label %33

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.mojo::AssociatedRemote.3085", %"class.mojo::AssociatedRemote.3085"* %0, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %6, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %7) #16
  %29 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %5, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %31, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %6) #16
  %32 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %5, i64 0, i32 1
  store i32 %30, i32* %32, align 8
  call void @_ZN4mojo8internal27AssociatedInterfacePtrStateIN5blink5mojom5blink14ConversionHostEE4BindENS_26AssociatedInterfacePtrInfoIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::AssociatedInterfacePtrState.3086"* %28, %"class.mojo::AssociatedInterfacePtrInfo"* nonnull %5, %"class.base::SequencedTaskRunner"* %2)
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %31) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %6) #16
  br label %43

33:                                               ; preds = %21, %9
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  %34 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe.144"* %41 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %42) #16
  br label %43

43:                                               ; preds = %27, %33, %35, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal27AssociatedInterfacePtrStateIN5blink5mojom5blink14ConversionHostEE4BindENS_26AssociatedInterfacePtrInfoIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::AssociatedInterfacePtrState.3086"*, %"class.mojo::AssociatedInterfacePtrInfo"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %5 = bitcast %"class.mojo::internal::AssociatedInterfacePtrState.3086"* %0 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  %6 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %1, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %6) #16
  %7 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = call i8* @_Znwm(i64 8) #18
  %10 = bitcast i8* %9 to %"class.mojo::PassThroughFilter"*
  call void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"* nonnull %10) #16
  %11 = bitcast i8* %9 to %"class.mojo::MessageReceiver"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4BindENS_29ScopedInterfaceEndpointHandleEjNSt3__110unique_ptrINS_15MessageReceiverENS3_14default_deleteIS5_EEEE13scoped_refptrIN4base19SequencedTaskRunnerEEPKc(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %5, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4, i32 %8, %"class.mojo::MessageReceiver"* nonnull %11, %"class.base::SequencedTaskRunner"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink14ConversionHost5Name_E, i64 0, i64 0)) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4) #16
  %12 = call i8* @_Znwm(i64 16) #18
  %13 = bitcast i8* %12 to %"class.blink::mojom::blink::ConversionHostProxy"*
  %14 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState.3086", %"class.mojo::internal::AssociatedInterfacePtrState.3086"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %14, align 8
  %16 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %15, i64 0, i32 0
  call void @_ZN5blink5mojom5blink19ConversionHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::ConversionHostProxy"* nonnull %13, %"class.mojo::MessageReceiverWithResponder"* %16) #16
  %17 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState.3086", %"class.mojo::internal::AssociatedInterfacePtrState.3086"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::mojom::blink::ConversionHostProxy"*, %"class.blink::mojom::blink::ConversionHostProxy"** %17, align 8
  %19 = bitcast %"class.blink::mojom::blink::ConversionHostProxy"** %17 to i8**
  store i8* %12, i8** %19, align 8
  %20 = icmp eq %"class.blink::mojom::blink::ConversionHostProxy"* %18, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %3
  %22 = bitcast %"class.blink::mojom::blink::ConversionHostProxy"* %18 to void (%"class.blink::mojom::blink::ConversionHostProxy"*)***
  %23 = load void (%"class.blink::mojom::blink::ConversionHostProxy"*)**, void (%"class.blink::mojom::blink::ConversionHostProxy"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::mojom::blink::ConversionHostProxy"*)*, void (%"class.blink::mojom::blink::ConversionHostProxy"*)** %23, i64 1
  %25 = load void (%"class.blink::mojom::blink::ConversionHostProxy"*)*, void (%"class.blink::mojom::blink::ConversionHostProxy"*)** %24, align 8
  call void %25(%"class.blink::mojom::blink::ConversionHostProxy"* nonnull %18) #16
  br label %26

26:                                               ; preds = %21, %3
  ret void
}

declare zeroext i1 @_ZNK4mojo29ScopedInterfaceEndpointHandle8is_validEv(%"class.mojo::ScopedInterfaceEndpointHandle"*) local_unnamed_addr #3

declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::AssociatedInterfacePtrStateBase"*, %"class.mojo::internal::AssociatedInterfacePtrStateBase"*) local_unnamed_addr #3

declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4BindENS_29ScopedInterfaceEndpointHandleEjNSt3__110unique_ptrINS_15MessageReceiverENS3_14default_deleteIS5_EEEE13scoped_refptrIN4base19SequencedTaskRunnerEEPKc(%"class.mojo::internal::AssociatedInterfacePtrStateBase"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, i32, %"class.mojo::MessageReceiver"*, %"class.base::SequencedTaskRunner"*, i8*) local_unnamed_addr #3

declare void @_ZN5blink5mojom5blink19ConversionHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::ConversionHostProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #3

declare void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"*) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7RelListEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMTokenList"*
  tail call void @_ZNK5blink12DOMTokenList5TraceEPNS_7VisitorE(%"class.blink::DOMTokenList"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink12DOMTokenList5TraceEPNS_7VisitorE(%"class.blink::DOMTokenList"*, %"class.blink::Visitor"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
