; ModuleID = '../../components/translate/core/common/language_detection_details.cc'
source_filename = "../../components/translate/core/common/language_detection_details.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.translate::LanguageDetectionDetails" = type { %"class.base::Time", %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.4", float, %"class.std::__1::basic_string" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.8 }
%struct.anon.8 = type { %"struct.std::__1::__padding.9", i8 }
%"struct.std::__1::__padding.9" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZN9translate24LanguageDetectionDetailsC1Ev = hidden unnamed_addr alias void (%"struct.translate::LanguageDetectionDetails"*), void (%"struct.translate::LanguageDetectionDetails"*)* @_ZN9translate24LanguageDetectionDetailsC2Ev
@_ZN9translate24LanguageDetectionDetailsC1ERKS0_ = hidden unnamed_addr alias void (%"struct.translate::LanguageDetectionDetails"*, %"struct.translate::LanguageDetectionDetails"*), void (%"struct.translate::LanguageDetectionDetails"*, %"struct.translate::LanguageDetectionDetails"*)* @_ZN9translate24LanguageDetectionDetailsC2ERKS0_
@_ZN9translate24LanguageDetectionDetailsD1Ev = hidden unnamed_addr alias void (%"struct.translate::LanguageDetectionDetails"*), void (%"struct.translate::LanguageDetectionDetails"*)* @_ZN9translate24LanguageDetectionDetailsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9translate24LanguageDetectionDetailsC2Ev(%"struct.translate::LanguageDetectionDetails"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %3) #8
  %4 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 10
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 50, i1 false)
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 76, i1 false)
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9translate24LanguageDetectionDetailsC2ERKS0_(%"struct.translate::LanguageDetectionDetails"*, %"struct.translate::LanguageDetectionDetails"* dereferenceable(288)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %7) #8
  %8 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #8
  br label %22

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %8, i8* %19, i64 %21) #8
  br label %22

22:                                               ; preds = %14, %17
  %23 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 3
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %31 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #8
  br label %37

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %34, i64 %36) #8
  br label %37

37:                                               ; preds = %29, %32
  %38 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 4
  %39 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 4
  %40 = bitcast i8* %39 to i16*
  %41 = bitcast i8* %38 to i16*
  %42 = load i16, i16* %40, align 8
  store i16 %42, i16* %41, align 8
  %43 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 6
  %44 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 6
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %37
  %50 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 24, i1 false) #8
  br label %57

52:                                               ; preds = %37
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %43, i8* %54, i64 %56) #8
  br label %57

57:                                               ; preds = %49, %52
  %58 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 7
  %59 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 7
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %57
  %65 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %66 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false) #8
  br label %72

67:                                               ; preds = %57
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %58, i8* %69, i64 %71) #8
  br label %72

72:                                               ; preds = %64, %67
  %73 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 8
  %74 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 8
  %75 = bitcast %"class.std::__1::basic_string.4"* %74 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %72
  %80 = bitcast %"class.std::__1::basic_string.4"* %73 to i8*
  %81 = bitcast %"class.std::__1::basic_string.4"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 24, i1 false) #8
  br label %257

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i16*, i16** %83, align 8
  %85 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = icmp ult i64 %86, 11
  br i1 %87, label %88, label %93

88:                                               ; preds = %82
  %89 = bitcast %"class.std::__1::basic_string.4"* %73 to i16*
  %90 = trunc i64 %86 to i8
  %91 = bitcast %"class.std::__1::basic_string.4"* %73 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %91, i64 0, i32 1, i32 1
  store i8 %90, i8* %92, align 1
  br label %110

93:                                               ; preds = %82
  %94 = icmp ugt i64 %86, 9223372036854775791
  br i1 %94, label %95, label %97

95:                                               ; preds = %93
  %96 = bitcast %"class.std::__1::basic_string.4"* %73 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %96) #9
  unreachable

97:                                               ; preds = %93
  %98 = add nuw nsw i64 %86, 8
  %99 = and i64 %98, -8
  %100 = icmp slt i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %97
  tail call void @abort() #9
  unreachable

102:                                              ; preds = %97
  %103 = shl i64 %99, 1
  %104 = tail call i8* @_Znwm(i64 %103) #10
  %105 = bitcast i8* %104 to i16*
  %106 = bitcast %"class.std::__1::basic_string.4"* %73 to i8**
  store i8* %104, i8** %106, align 8
  %107 = or i64 %99, -9223372036854775808
  %108 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %86, i64* %109, align 8
  br label %110

110:                                              ; preds = %102, %88
  %111 = phi i16* [ %89, %88 ], [ %105, %102 ]
  %112 = add nuw nsw i64 %86, 1
  %113 = add i64 %86, 1
  %114 = icmp ult i64 %113, 16
  br i1 %114, label %204, label %115

115:                                              ; preds = %110
  %116 = add i64 %86, 1
  %117 = getelementptr i16, i16* %111, i64 %116
  %118 = getelementptr i16, i16* %84, i64 %116
  %119 = icmp ult i16* %111, %118
  %120 = icmp ult i16* %84, %117
  %121 = and i1 %119, %120
  br i1 %121, label %204, label %122

122:                                              ; preds = %115
  %123 = and i64 %113, -16
  %124 = sub i64 %112, %123
  %125 = getelementptr i16, i16* %84, i64 %123
  %126 = getelementptr i16, i16* %111, i64 %123
  %127 = add i64 %123, -16
  %128 = lshr exact i64 %127, 4
  %129 = add nuw nsw i64 %128, 1
  %130 = and i64 %129, 3
  %131 = icmp ult i64 %127, 48
  br i1 %131, label %183, label %132

132:                                              ; preds = %122
  %133 = sub nsw i64 %129, %130
  br label %134

134:                                              ; preds = %134, %132
  %135 = phi i64 [ 0, %132 ], [ %180, %134 ]
  %136 = phi i64 [ %133, %132 ], [ %181, %134 ]
  %137 = getelementptr i16, i16* %84, i64 %135
  %138 = getelementptr i16, i16* %111, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !2
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !2
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !5, !noalias !2
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !5, !noalias !2
  %147 = or i64 %135, 16
  %148 = getelementptr i16, i16* %84, i64 %147
  %149 = getelementptr i16, i16* %111, i64 %147
  %150 = bitcast i16* %148 to <8 x i16>*
  %151 = load <8 x i16>, <8 x i16>* %150, align 2, !alias.scope !2
  %152 = getelementptr i16, i16* %148, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !2
  %155 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %155, align 2, !alias.scope !5, !noalias !2
  %156 = getelementptr i16, i16* %149, i64 8
  %157 = bitcast i16* %156 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %157, align 2, !alias.scope !5, !noalias !2
  %158 = or i64 %135, 32
  %159 = getelementptr i16, i16* %84, i64 %158
  %160 = getelementptr i16, i16* %111, i64 %158
  %161 = bitcast i16* %159 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !2
  %163 = getelementptr i16, i16* %159, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !2
  %166 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %166, align 2, !alias.scope !5, !noalias !2
  %167 = getelementptr i16, i16* %160, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %168, align 2, !alias.scope !5, !noalias !2
  %169 = or i64 %135, 48
  %170 = getelementptr i16, i16* %84, i64 %169
  %171 = getelementptr i16, i16* %111, i64 %169
  %172 = bitcast i16* %170 to <8 x i16>*
  %173 = load <8 x i16>, <8 x i16>* %172, align 2, !alias.scope !2
  %174 = getelementptr i16, i16* %170, i64 8
  %175 = bitcast i16* %174 to <8 x i16>*
  %176 = load <8 x i16>, <8 x i16>* %175, align 2, !alias.scope !2
  %177 = bitcast i16* %171 to <8 x i16>*
  store <8 x i16> %173, <8 x i16>* %177, align 2, !alias.scope !5, !noalias !2
  %178 = getelementptr i16, i16* %171, i64 8
  %179 = bitcast i16* %178 to <8 x i16>*
  store <8 x i16> %176, <8 x i16>* %179, align 2, !alias.scope !5, !noalias !2
  %180 = add i64 %135, 64
  %181 = add i64 %136, -4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %134, !llvm.loop !7

183:                                              ; preds = %134, %122
  %184 = phi i64 [ 0, %122 ], [ %180, %134 ]
  %185 = icmp eq i64 %130, 0
  br i1 %185, label %202, label %186

186:                                              ; preds = %183, %186
  %187 = phi i64 [ %199, %186 ], [ %184, %183 ]
  %188 = phi i64 [ %200, %186 ], [ %130, %183 ]
  %189 = getelementptr i16, i16* %84, i64 %187
  %190 = getelementptr i16, i16* %111, i64 %187
  %191 = bitcast i16* %189 to <8 x i16>*
  %192 = load <8 x i16>, <8 x i16>* %191, align 2, !alias.scope !2
  %193 = getelementptr i16, i16* %189, i64 8
  %194 = bitcast i16* %193 to <8 x i16>*
  %195 = load <8 x i16>, <8 x i16>* %194, align 2, !alias.scope !2
  %196 = bitcast i16* %190 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %196, align 2, !alias.scope !5, !noalias !2
  %197 = getelementptr i16, i16* %190, i64 8
  %198 = bitcast i16* %197 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %198, align 2, !alias.scope !5, !noalias !2
  %199 = add i64 %187, 16
  %200 = add i64 %188, -1
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %202, label %186, !llvm.loop !9

202:                                              ; preds = %186, %183
  %203 = icmp eq i64 %113, %123
  br i1 %203, label %257, label %204

204:                                              ; preds = %202, %115, %110
  %205 = phi i64 [ %112, %115 ], [ %112, %110 ], [ %124, %202 ]
  %206 = phi i16* [ %84, %115 ], [ %84, %110 ], [ %125, %202 ]
  %207 = phi i16* [ %111, %115 ], [ %111, %110 ], [ %126, %202 ]
  %208 = add i64 %205, -1
  %209 = and i64 %205, 7
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %222, label %211

211:                                              ; preds = %204, %211
  %212 = phi i64 [ %217, %211 ], [ %205, %204 ]
  %213 = phi i16* [ %219, %211 ], [ %206, %204 ]
  %214 = phi i16* [ %218, %211 ], [ %207, %204 ]
  %215 = phi i64 [ %220, %211 ], [ %209, %204 ]
  %216 = load i16, i16* %213, align 2
  store i16 %216, i16* %214, align 2
  %217 = add i64 %212, -1
  %218 = getelementptr inbounds i16, i16* %214, i64 1
  %219 = getelementptr inbounds i16, i16* %213, i64 1
  %220 = add i64 %215, -1
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %222, label %211, !llvm.loop !11

222:                                              ; preds = %211, %204
  %223 = phi i64 [ %205, %204 ], [ %217, %211 ]
  %224 = phi i16* [ %206, %204 ], [ %219, %211 ]
  %225 = phi i16* [ %207, %204 ], [ %218, %211 ]
  %226 = icmp ult i64 %208, 7
  br i1 %226, label %257, label %227

227:                                              ; preds = %222, %227
  %228 = phi i64 [ %253, %227 ], [ %223, %222 ]
  %229 = phi i16* [ %255, %227 ], [ %224, %222 ]
  %230 = phi i16* [ %254, %227 ], [ %225, %222 ]
  %231 = load i16, i16* %229, align 2
  store i16 %231, i16* %230, align 2
  %232 = getelementptr inbounds i16, i16* %230, i64 1
  %233 = getelementptr inbounds i16, i16* %229, i64 1
  %234 = load i16, i16* %233, align 2
  store i16 %234, i16* %232, align 2
  %235 = getelementptr inbounds i16, i16* %230, i64 2
  %236 = getelementptr inbounds i16, i16* %229, i64 2
  %237 = load i16, i16* %236, align 2
  store i16 %237, i16* %235, align 2
  %238 = getelementptr inbounds i16, i16* %230, i64 3
  %239 = getelementptr inbounds i16, i16* %229, i64 3
  %240 = load i16, i16* %239, align 2
  store i16 %240, i16* %238, align 2
  %241 = getelementptr inbounds i16, i16* %230, i64 4
  %242 = getelementptr inbounds i16, i16* %229, i64 4
  %243 = load i16, i16* %242, align 2
  store i16 %243, i16* %241, align 2
  %244 = getelementptr inbounds i16, i16* %230, i64 5
  %245 = getelementptr inbounds i16, i16* %229, i64 5
  %246 = load i16, i16* %245, align 2
  store i16 %246, i16* %244, align 2
  %247 = getelementptr inbounds i16, i16* %230, i64 6
  %248 = getelementptr inbounds i16, i16* %229, i64 6
  %249 = load i16, i16* %248, align 2
  store i16 %249, i16* %247, align 2
  %250 = getelementptr inbounds i16, i16* %230, i64 7
  %251 = getelementptr inbounds i16, i16* %229, i64 7
  %252 = load i16, i16* %251, align 2
  store i16 %252, i16* %250, align 2
  %253 = add i64 %228, -8
  %254 = getelementptr inbounds i16, i16* %230, i64 8
  %255 = getelementptr inbounds i16, i16* %229, i64 8
  %256 = icmp eq i64 %253, 0
  br i1 %256, label %257, label %227, !llvm.loop !12

257:                                              ; preds = %222, %227, %202, %79
  %258 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 9
  %259 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 9
  %260 = bitcast float* %259 to i32*
  %261 = load i32, i32* %260, align 8
  %262 = bitcast float* %258 to i32*
  store i32 %261, i32* %262, align 8
  %263 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 10
  %264 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 10
  %265 = bitcast %"class.std::__1::basic_string"* %264 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %266 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %265, i64 0, i32 1, i32 0
  %267 = load i8, i8* %266, align 1
  %268 = icmp slt i8 %267, 0
  br i1 %268, label %272, label %269

269:                                              ; preds = %257
  %270 = bitcast %"class.std::__1::basic_string"* %263 to i8*
  %271 = bitcast %"class.std::__1::basic_string"* %264 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %270, i8* align 8 %271, i64 24, i1 false) #8
  br label %277

272:                                              ; preds = %257
  %273 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %264, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load i8*, i8** %273, align 8
  %275 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %276 = load i64, i64* %275, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %263, i8* %274, i64 %276) #8
  br label %277

277:                                              ; preds = %269, %272
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9translate24LanguageDetectionDetailsD2Ev(%"struct.translate::LanguageDetectionDetails"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 10
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 8
  %12 = bitcast %"class.std::__1::basic_string.4"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string.4"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 7
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 6
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 3
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 2
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %46, %52
  %56 = getelementptr inbounds %"struct.translate::LanguageDetectionDetails", %"struct.translate::LanguageDetectionDetails"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %56) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
