; ModuleID = '../../third_party/pdfium/core/fxcrt/fx_bidi.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/fx_bidi.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_BidiChar = type { %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment" }
%"struct.CFX_BidiChar::Segment" = type { i32, i32, i32 }
%class.CFX_BidiString = type <{ %"class.fxcrt::WideString"*, %"class.std::__1::vector", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.CFX_BidiChar::Segment"* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

@switch.table._ZN14CFX_BidiStringC2ERKN5fxcrt10WideStringE = private unnamed_addr constant [5 x i32] [i32 1, i32 2, i32 1, i32 1, i32 2], align 4

@_ZN12CFX_BidiCharC1Ev = hidden unnamed_addr alias void (%class.CFX_BidiChar*), void (%class.CFX_BidiChar*)* @_ZN12CFX_BidiCharC2Ev
@_ZN14CFX_BidiStringC1ERKN5fxcrt10WideStringE = hidden unnamed_addr alias void (%class.CFX_BidiString*, %"class.fxcrt::WideString"*), void (%class.CFX_BidiString*, %"class.fxcrt::WideString"*)* @_ZN14CFX_BidiStringC2ERKN5fxcrt10WideStringE
@_ZN14CFX_BidiStringD1Ev = hidden unnamed_addr alias void (%class.CFX_BidiString*), void (%class.CFX_BidiString*)* @_ZN14CFX_BidiStringD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12CFX_BidiCharC2Ev(%class.CFX_BidiChar* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CFX_BidiChar* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CFX_BidiChar10AppendCharEw(%class.CFX_BidiChar* nocapture, i32 signext) local_unnamed_addr #1 align 2 {
  %3 = tail call zeroext i8 @_Z15FX_GetBidiClassw(i32 signext %1) #8
  %4 = add i8 %3, -1
  %5 = icmp ult i8 %4, 5
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = sext i8 %4 to i64
  %8 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN14CFX_BidiStringC2ERKN5fxcrt10WideStringE, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ 0, %2 ]
  %12 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp ne i32 %11, %13
  br i1 %14, label %19, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, 1
  br label %28

19:                                               ; preds = %10
  %20 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 1
  %21 = bitcast %"struct.CFX_BidiChar::Segment"* %20 to i8*
  %22 = bitcast %class.CFX_BidiChar* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 12, i1 false) #8
  %23 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %26, %24
  store i32 %27, i32* %25, align 4
  store i32 0, i32* %23, align 4
  store i32 %11, i32* %12, align 4
  br label %28

28:                                               ; preds = %15, %19
  %29 = phi i32 [ %18, %15 ], [ 1, %19 ]
  %30 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 0, i32 1
  store i32 %29, i32* %30, align 4
  ret i1 %14
}

declare zeroext i8 @_Z15FX_GetBidiClassw(i32 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFX_BidiChar15StartNewSegmentENS_9DirectionE(%class.CFX_BidiChar* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 1
  %4 = bitcast %"struct.CFX_BidiChar::Segment"* %3 to i8*
  %5 = bitcast %class.CFX_BidiChar* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 12, i1 false)
  %6 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, %7
  store i32 %10, i32* %8, align 4
  store i32 0, i32* %6, align 4
  %11 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 0, i32 2
  store i32 %1, i32* %11, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CFX_BidiChar7EndCharEv(%class.CFX_BidiChar* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 1
  %3 = bitcast %"struct.CFX_BidiChar::Segment"* %2 to i8*
  %4 = bitcast %class.CFX_BidiChar* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 12, i1 false) #8
  %5 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, %6
  store i32 %9, i32* %7, align 4
  store i32 0, i32* %5, align 4
  %10 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.CFX_BidiChar, %class.CFX_BidiChar* %0, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  ret i1 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_BidiStringC2ERKN5fxcrt10WideStringE(%class.CFX_BidiString*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 0
  store %"class.fxcrt::WideString"* %1, %"class.fxcrt::WideString"** %3, align 8
  %4 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #8
  %6 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 2
  store i32 1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %7, align 8
  %9 = icmp eq %"class.fxcrt::StringDataTemplate"* %8, null
  %10 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %8, i64 0, i32 3, i64 0
  %11 = select i1 %9, i32* null, i32* %10
  br i1 %9, label %16, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %8, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %8, i64 0, i32 3, i64 %14
  br label %16

16:                                               ; preds = %2, %12
  %17 = phi i32* [ %15, %12 ], [ null, %2 ]
  %18 = icmp eq i32* %11, %17
  br i1 %18, label %184, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"struct.CFX_BidiChar::Segment"** %20 to i64*
  %23 = bitcast %"class.std::__1::vector"* %4 to i64*
  %24 = bitcast %"struct.CFX_BidiChar::Segment"** %21 to i64*
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  br label %28

26:                                               ; preds = %109
  %27 = icmp sgt i32 %110, 0
  br i1 %27, label %115, label %184

28:                                               ; preds = %19, %109
  %29 = phi i32* [ %11, %19 ], [ %113, %109 ]
  %30 = phi i32 [ 0, %19 ], [ %111, %109 ]
  %31 = phi i32 [ 0, %19 ], [ %110, %109 ]
  %32 = phi i32 [ 0, %19 ], [ %112, %109 ]
  %33 = load i32, i32* %29, align 4
  %34 = tail call zeroext i8 @_Z15FX_GetBidiClassw(i32 signext %33) #8
  %35 = add i8 %34, -1
  %36 = icmp ult i8 %35, 5
  br i1 %36, label %37, label %41

37:                                               ; preds = %28
  %38 = sext i8 %35 to i64
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN14CFX_BidiStringC2ERKN5fxcrt10WideStringE, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  br label %41

41:                                               ; preds = %28, %37
  %42 = phi i32 [ %40, %37 ], [ 0, %28 ]
  %43 = icmp eq i32 %42, %30
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = add i32 %31, 1
  br label %109

46:                                               ; preds = %41
  %47 = add nsw i32 %31, %32
  %48 = load %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"** %20, align 8
  %49 = load %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"** %21, align 8
  %50 = icmp eq %"struct.CFX_BidiChar::Segment"* %48, %49
  %51 = ptrtoint %"struct.CFX_BidiChar::Segment"* %49 to i64
  br i1 %50, label %58, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %48, i64 0, i32 0
  store i32 %32, i32* %53, align 4
  %54 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %48, i64 0, i32 1
  store i32 %31, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %48, i64 0, i32 2
  store i32 %30, i32* %55, align 4
  %56 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %48, i64 1
  %57 = ptrtoint %"struct.CFX_BidiChar::Segment"* %56 to i64
  store i64 %57, i64* %22, align 8
  br label %109

58:                                               ; preds = %46
  %59 = ptrtoint %"struct.CFX_BidiChar::Segment"* %48 to i64
  %60 = load i64, i64* %23, align 8
  %61 = sub i64 %59, %60
  %62 = sdiv exact i64 %61, 12
  %63 = add nsw i64 %62, 1
  %64 = icmp ugt i64 %63, 1537228672809129301
  br i1 %64, label %65, label %67

65:                                               ; preds = %58
  %66 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %66) #9
  unreachable

67:                                               ; preds = %58
  %68 = sub i64 %51, %60
  %69 = sdiv exact i64 %68, 12
  %70 = icmp ult i64 %69, 768614336404564650
  br i1 %70, label %71, label %76

71:                                               ; preds = %67
  %72 = shl nsw i64 %69, 1
  %73 = icmp ult i64 %72, %63
  %74 = select i1 %73, i64 %63, i64 %72
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %81, label %76

76:                                               ; preds = %71, %67
  %77 = phi i64 [ %74, %71 ], [ 1537228672809129301, %67 ]
  %78 = mul i64 %77, 12
  %79 = tail call i8* @_Znwm(i64 %78) #10
  %80 = bitcast i8* %79 to %"struct.CFX_BidiChar::Segment"*
  br label %81

81:                                               ; preds = %76, %71
  %82 = phi i64 [ %77, %76 ], [ 0, %71 ]
  %83 = phi %"struct.CFX_BidiChar::Segment"* [ %80, %76 ], [ null, %71 ]
  %84 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %83, i64 %62
  %85 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %83, i64 %82
  %86 = ptrtoint %"struct.CFX_BidiChar::Segment"* %85 to i64
  %87 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %84, i64 0, i32 0
  store i32 %32, i32* %87, align 4
  %88 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %83, i64 %62, i32 1
  store i32 %31, i32* %88, align 4
  %89 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %83, i64 %62, i32 2
  store i32 %30, i32* %89, align 4
  %90 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %84, i64 1
  %91 = ptrtoint %"struct.CFX_BidiChar::Segment"* %90 to i64
  %92 = load %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"** %25, align 8
  %93 = load i64, i64* %22, align 8
  %94 = ptrtoint %"struct.CFX_BidiChar::Segment"* %92 to i64
  %95 = sub i64 %93, %94
  %96 = sdiv exact i64 %95, -12
  %97 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %84, i64 %96
  %98 = ptrtoint %"struct.CFX_BidiChar::Segment"* %97 to i64
  %99 = icmp sgt i64 %95, 0
  br i1 %99, label %100, label %104

100:                                              ; preds = %81
  %101 = bitcast %"struct.CFX_BidiChar::Segment"* %97 to i8*
  %102 = bitcast %"struct.CFX_BidiChar::Segment"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 %95, i1 false) #8
  %103 = load %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"** %25, align 8
  br label %104

104:                                              ; preds = %100, %81
  %105 = phi %"struct.CFX_BidiChar::Segment"* [ %92, %81 ], [ %103, %100 ]
  store i64 %98, i64* %23, align 8
  store i64 %91, i64* %22, align 8
  store i64 %86, i64* %24, align 8
  %106 = icmp eq %"struct.CFX_BidiChar::Segment"* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %104
  %108 = bitcast %"struct.CFX_BidiChar::Segment"* %105 to i8*
  tail call void @_ZdlPv(i8* %108) #10
  br label %109

109:                                              ; preds = %107, %104, %52, %44
  %110 = phi i32 [ %45, %44 ], [ 1, %52 ], [ 1, %104 ], [ 1, %107 ]
  %111 = phi i32 [ %30, %44 ], [ %42, %52 ], [ %42, %104 ], [ %42, %107 ]
  %112 = phi i32 [ %32, %44 ], [ %47, %52 ], [ %47, %104 ], [ %47, %107 ]
  %113 = getelementptr inbounds i32, i32* %29, i64 1
  %114 = icmp eq i32* %113, %17
  br i1 %114, label %26, label %28

115:                                              ; preds = %26
  %116 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 1, i32 0, i32 1
  %117 = load %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"** %116, align 8
  %118 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %119 = load %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"** %118, align 8
  %120 = icmp eq %"struct.CFX_BidiChar::Segment"* %117, %119
  %121 = ptrtoint %"struct.CFX_BidiChar::Segment"* %119 to i64
  br i1 %120, label %129, label %122

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %117, i64 0, i32 0
  store i32 %112, i32* %123, align 4
  %124 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %117, i64 0, i32 1
  store i32 %110, i32* %124, align 4
  %125 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %117, i64 0, i32 2
  store i32 %111, i32* %125, align 4
  %126 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %117, i64 1
  %127 = ptrtoint %"struct.CFX_BidiChar::Segment"* %126 to i64
  %128 = bitcast %"struct.CFX_BidiChar::Segment"** %116 to i64*
  store i64 %127, i64* %128, align 8
  br label %184

129:                                              ; preds = %115
  %130 = ptrtoint %"struct.CFX_BidiChar::Segment"* %117 to i64
  %131 = bitcast %"struct.CFX_BidiChar::Segment"** %116 to i64*
  %132 = bitcast %"class.std::__1::vector"* %4 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %130, %133
  %135 = sdiv exact i64 %134, 12
  %136 = add nsw i64 %135, 1
  %137 = icmp ugt i64 %136, 1537228672809129301
  br i1 %137, label %138, label %140

138:                                              ; preds = %129
  %139 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #9
  unreachable

140:                                              ; preds = %129
  %141 = bitcast %"struct.CFX_BidiChar::Segment"** %118 to i64*
  %142 = sub i64 %121, %133
  %143 = sdiv exact i64 %142, 12
  %144 = icmp ult i64 %143, 768614336404564650
  br i1 %144, label %145, label %150

145:                                              ; preds = %140
  %146 = shl nsw i64 %143, 1
  %147 = icmp ult i64 %146, %136
  %148 = select i1 %147, i64 %136, i64 %146
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %155, label %150

150:                                              ; preds = %145, %140
  %151 = phi i64 [ %148, %145 ], [ 1537228672809129301, %140 ]
  %152 = mul i64 %151, 12
  %153 = tail call i8* @_Znwm(i64 %152) #10
  %154 = bitcast i8* %153 to %"struct.CFX_BidiChar::Segment"*
  br label %155

155:                                              ; preds = %150, %145
  %156 = phi i64 [ %151, %150 ], [ 0, %145 ]
  %157 = phi %"struct.CFX_BidiChar::Segment"* [ %154, %150 ], [ null, %145 ]
  %158 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %157, i64 %135
  %159 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %157, i64 %156
  %160 = ptrtoint %"struct.CFX_BidiChar::Segment"* %159 to i64
  %161 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %158, i64 0, i32 0
  store i32 %112, i32* %161, align 4
  %162 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %157, i64 %135, i32 1
  store i32 %110, i32* %162, align 4
  %163 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %157, i64 %135, i32 2
  store i32 %111, i32* %163, align 4
  %164 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %158, i64 1
  %165 = ptrtoint %"struct.CFX_BidiChar::Segment"* %164 to i64
  %166 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %167 = load %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"** %166, align 8
  %168 = load i64, i64* %131, align 8
  %169 = ptrtoint %"struct.CFX_BidiChar::Segment"* %167 to i64
  %170 = sub i64 %168, %169
  %171 = sdiv exact i64 %170, -12
  %172 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %158, i64 %171
  %173 = ptrtoint %"struct.CFX_BidiChar::Segment"* %172 to i64
  %174 = icmp sgt i64 %170, 0
  br i1 %174, label %175, label %179

175:                                              ; preds = %155
  %176 = bitcast %"struct.CFX_BidiChar::Segment"* %172 to i8*
  %177 = bitcast %"struct.CFX_BidiChar::Segment"* %167 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %176, i8* align 4 %177, i64 %170, i1 false) #8
  %178 = load %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"** %166, align 8
  br label %179

179:                                              ; preds = %175, %155
  %180 = phi %"struct.CFX_BidiChar::Segment"* [ %167, %155 ], [ %178, %175 ]
  store i64 %173, i64* %132, align 8
  store i64 %165, i64* %131, align 8
  store i64 %160, i64* %141, align 8
  %181 = icmp eq %"struct.CFX_BidiChar::Segment"* %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %179
  %183 = bitcast %"struct.CFX_BidiChar::Segment"* %180 to i8*
  tail call void @_ZdlPv(i8* %183) #10
  br label %184

184:                                              ; preds = %16, %182, %179, %122, %26
  %185 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %186 = load %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"** %185, align 8
  %187 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 1, i32 0, i32 1
  %188 = load %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"** %187, align 8
  %189 = icmp eq %"struct.CFX_BidiChar::Segment"* %186, %188
  br i1 %189, label %239, label %190

190:                                              ; preds = %184, %190
  %191 = phi i64 [ %197, %190 ], [ 0, %184 ]
  %192 = phi %"struct.CFX_BidiChar::Segment"* [ %198, %190 ], [ %186, %184 ]
  %193 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %192, i64 0, i32 2
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %194, 2
  %196 = zext i1 %195 to i64
  %197 = add nuw nsw i64 %191, %196
  %198 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %192, i64 1
  %199 = icmp eq %"struct.CFX_BidiChar::Segment"* %198, %188
  br i1 %199, label %200, label %190

200:                                              ; preds = %190, %200
  %201 = phi i64 [ %207, %200 ], [ 0, %190 ]
  %202 = phi %"struct.CFX_BidiChar::Segment"* [ %208, %200 ], [ %186, %190 ]
  %203 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %202, i64 0, i32 2
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, 1
  %206 = zext i1 %205 to i64
  %207 = add nuw nsw i64 %201, %206
  %208 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %202, i64 1
  %209 = icmp eq %"struct.CFX_BidiChar::Segment"* %208, %188
  br i1 %209, label %210, label %200

210:                                              ; preds = %200
  %211 = icmp eq i64 %197, 0
  %212 = icmp ult i64 %197, %207
  %213 = or i1 %211, %212
  br i1 %213, label %239, label %214

214:                                              ; preds = %210
  %215 = load i32, i32* %6, align 8
  %216 = icmp eq i32 %215, 2
  br i1 %216, label %239, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %188, i64 -1
  %219 = icmp ugt %"struct.CFX_BidiChar::Segment"* %218, %186
  br i1 %219, label %220, label %238

220:                                              ; preds = %217, %220
  %221 = phi %"struct.CFX_BidiChar::Segment"* [ %236, %220 ], [ %218, %217 ]
  %222 = phi %"struct.CFX_BidiChar::Segment"* [ %221, %220 ], [ %188, %217 ]
  %223 = phi %"struct.CFX_BidiChar::Segment"* [ %235, %220 ], [ %186, %217 ]
  %224 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %223, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %223, i64 0, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %223, i64 0, i32 2
  %229 = load i32, i32* %228, align 4
  %230 = bitcast %"struct.CFX_BidiChar::Segment"* %223 to i8*
  %231 = bitcast %"struct.CFX_BidiChar::Segment"* %221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %230, i8* align 4 %231, i64 12, i1 false) #8
  %232 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %221, i64 0, i32 0
  store i32 %225, i32* %232, align 4
  %233 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %222, i64 -1, i32 1
  store i32 %227, i32* %233, align 4
  %234 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %222, i64 -1, i32 2
  store i32 %229, i32* %234, align 4
  %235 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %223, i64 1
  %236 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %221, i64 -1
  %237 = icmp ult %"struct.CFX_BidiChar::Segment"* %235, %236
  br i1 %237, label %220, label %238

238:                                              ; preds = %220, %217
  store i32 2, i32* %6, align 8
  br label %239

239:                                              ; preds = %184, %238, %214, %210
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_BidiString24SetOverallDirectionRightEv(%class.CFX_BidiString* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"** %6, align 8
  %8 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"** %8, align 8
  %10 = icmp eq %"struct.CFX_BidiChar::Segment"* %7, %9
  br i1 %10, label %32, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %9, i64 -1
  %13 = icmp ugt %"struct.CFX_BidiChar::Segment"* %12, %7
  br i1 %13, label %14, label %32

14:                                               ; preds = %11, %14
  %15 = phi %"struct.CFX_BidiChar::Segment"* [ %30, %14 ], [ %12, %11 ]
  %16 = phi %"struct.CFX_BidiChar::Segment"* [ %15, %14 ], [ %9, %11 ]
  %17 = phi %"struct.CFX_BidiChar::Segment"* [ %29, %14 ], [ %7, %11 ]
  %18 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %17, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = bitcast %"struct.CFX_BidiChar::Segment"* %17 to i8*
  %25 = bitcast %"struct.CFX_BidiChar::Segment"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 12, i1 false) #8
  %26 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %15, i64 0, i32 0
  store i32 %19, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %16, i64 -1, i32 1
  store i32 %21, i32* %27, align 4
  %28 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %16, i64 -1, i32 2
  store i32 %23, i32* %28, align 4
  %29 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %17, i64 1
  %30 = getelementptr inbounds %"struct.CFX_BidiChar::Segment", %"struct.CFX_BidiChar::Segment"* %15, i64 -1
  %31 = icmp ult %"struct.CFX_BidiChar::Segment"* %29, %30
  br i1 %31, label %14, label %32

32:                                               ; preds = %14, %5, %11
  store i32 2, i32* %2, align 8
  br label %33

33:                                               ; preds = %1, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_BidiStringD2Ev(%class.CFX_BidiString* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"struct.CFX_BidiChar::Segment"*, %"struct.CFX_BidiChar::Segment"** %2, align 8
  %4 = icmp eq %"struct.CFX_BidiChar::Segment"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.CFX_BidiChar::Segment"* %3 to i64
  %7 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.CFX_BidiChar::Segment"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.CFX_BidiChar::Segment"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK14CFX_BidiString16OverallDirectionEv(%class.CFX_BidiString* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CFX_BidiString, %class.CFX_BidiString* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
