; ModuleID = '../../third_party/blink/renderer/core/animation/css_color_interpolation_type.cc'
source_filename = "../../third_party/blink/renderer/core/animation/css_color_interpolation_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.113", i32, [4 x i8], %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.251", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.267", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.285", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.292", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.231", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.149" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i64 }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::Worklist.160"* }
%"class.blink::Worklist.160" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.149" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::Worklist.167"* }
%"class.blink::Worklist.167" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.149" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::Worklist.174"* }
%"class.blink::Worklist.174" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.149" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::Worklist.181"* }
%"class.blink::Worklist.181" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.149" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::Worklist.188"* }
%"class.blink::Worklist.188" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.149" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::Worklist.195"* }
%"class.blink::Worklist.195" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.149" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::Worklist.202"* }
%"class.blink::Worklist.202" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.149" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.209", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.225", [4 x i8] }>
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211", %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { i64 }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { float }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.234", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.243" }
%"class.WTF::Vector.243" = type { %"class.WTF::VectorBuffer.244" }
%"class.WTF::VectorBuffer.244" = type { %"class.WTF::VectorBufferBase.245" }
%"class.WTF::VectorBufferBase.245" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260" }
%"class.WTF::VectorBufferBase.260" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.273" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.160"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.167"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.174"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.181"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.188"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1384" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1384" = type { %"struct.std::__1::__compressed_pair_elem.1385" }
%"struct.std::__1::__compressed_pair_elem.1385" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.291 }
%class.scoped_refptr.291 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.292" = type { %"struct.std::__1::__atomic_base.293" }
%"struct.std::__1::__atomic_base.293" = type { %"struct.std::__1::__cxx_atomic_impl.294" }
%"struct.std::__1::__cxx_atomic_impl.294" = type { %"struct.std::__1::__cxx_atomic_base_impl.295" }
%"struct.std::__1::__cxx_atomic_base_impl.295" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%"class.blink::Color" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::InterpolableValue"* }
%"class.blink::LayoutTheme" = type <{ i32 (...)**, %"class.WTF::RefCounted", %"class.blink::Color", i8, [7 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::InterpolableNumber" = type { %"class.blink::InterpolableValue", double }
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.769, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.43, %class.scoped_refptr.43, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.43, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.25" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.15", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.17" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.371", %"class.blink::Member.373", %"class.blink::Member.15", %"class.blink::Member.375", %"class.blink::Member.375", %"class.blink::Member.399", %"class.blink::Member.401", %"class.blink::Member.403", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.408", %"class.blink::HeapVector.410" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::Document"* }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.379" }
%"class.blink::HeapHashMap.379" = type { %"class.WTF::HashMap.382" }
%"class.WTF::HashMap.382" = type { %"class.WTF::HashTable.383" }
%"class.WTF::HashTable.383" = type <{ %"struct.WTF::KeyValuePair.385"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.385" = type { %"class.WTF::AtomicString", %"class.blink::Member.386" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.390", i32, %"class.blink::HeapVector.392" }
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.392" = type { %"class.WTF::Vector.395" }
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"class.blink::Member.390"*, i32, i32 }
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.405" }
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::HeapHashMap.407"* }
%"class.blink::HeapHashMap.407" = type opaque
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.410" = type { %"class.WTF::Vector.413" }
%"class.WTF::Vector.413" = type { %"class.WTF::VectorBuffer.414" }
%"class.WTF::VectorBuffer.414" = type { %"class.WTF::VectorBufferBase.415" }
%"class.WTF::VectorBufferBase.415" = type { %"class.blink::Member.416"*, i32, i32 }
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.418", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.420, %"class.WTF::Vector.439", %"class.WTF::Vector.439", %"class.blink::Member", %"class.blink::Member.444", %"class.blink::HeapHashSet", %"class.blink::Member.373", %"class.WTF::HashSet.452", %"class.WTF::TextPosition", %"class.blink::Member.456", %"class.blink::HeapVector.458", %"class.blink::Member.465" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.420 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.421", %"class.WTF::Vector.423" }
%"class.WTF::RefCounted.421" = type { %"class.base::RefCounted.422" }
%"class.base::RefCounted.422" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.423" = type { %"class.WTF::VectorBuffer.424" }
%"class.WTF::VectorBuffer.424" = type { %"class.WTF::VectorBufferBase.425" }
%"class.WTF::VectorBufferBase.425" = type { %"class.std::__1::unique_ptr.426"*, i32, i32 }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.429", %"class.WTF::String" }
%"class.WTF::Vector.429" = type { %"class.WTF::VectorBuffer.430" }
%"class.WTF::VectorBuffer.430" = type { %"class.WTF::VectorBufferBase.431" }
%"class.WTF::VectorBufferBase.431" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.439" = type { %"class.WTF::VectorBuffer.440" }
%"class.WTF::VectorBuffer.440" = type { %"class.WTF::VectorBufferBase.441" }
%"class.WTF::VectorBufferBase.441" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.446" }
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.450" }
%"class.WTF::HashTable.450" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.16" }
%"class.WTF::HashSet.452" = type { %"class.WTF::HashTable.453" }
%"class.WTF::HashTable.453" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.420, %"class.blink::Member.416", %"class.blink::Member.444" }
%"class.blink::HeapVector.458" = type { %"class.WTF::Vector.461" }
%"class.WTF::Vector.461" = type { %"class.WTF::VectorBuffer.462" }
%"class.WTF::VectorBuffer.462" = type { %"class.WTF::VectorBufferBase.463" }
%"class.WTF::VectorBufferBase.463" = type { %"class.blink::Member.444"*, i32, i32 }
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.21", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.29", %"class.blink::Member.31", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.29" = type { %"class.WTF::SingleThreadedBitField.30" }
%"class.WTF::SingleThreadedBitField.30" = type { i32 }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.35 }
%class.scoped_refptr.35 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.36", %"class.WTF::AtomicString", %"class.WTF::Vector.38" }
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40", [32 x i8] }
%"class.WTF::VectorBufferBase.40" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1036", %"class.WTF::Vector.1036", i8, i32, %"class.blink::Member.1043", %"class.blink::Member.1045", %"class.blink::Member.1047", %"class.blink::Member.1049", %"class.blink::Member.1051", %"class.blink::Member.1053", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1061", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1067", %"class.blink::Member.1069", %"class.blink::Member.416", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1072", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.392", %"class.blink::Member.390", %"class.blink::Member.1097", %"class.blink::Member.390", %"class.blink::Member.390", %"class.blink::Member.390", %"class.blink::UserActionElementSet", %"class.blink::Member.1106", double, double, i64, i64, %"class.blink::HeapHashSet.1108", %"class.blink::HeapHashSet.1115", i16, i8, %"class.blink::Member.1122", %"class.blink::Member.1124", %"class.blink::Member.1126", %"class.blink::Member.1128", %"class.blink::TextLinkColors", %"class.blink::Member.1130", i8, [7 x i8], %"class.blink::HeapHashMap.1132", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.390", %"class.WTF::Vector.1139", %"class.blink::Member.1144", %"class.blink::Member.1146", i8, %"class.blink::Member.390", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1148", %"class.blink::HeapVector.1150", %"class.std::__1::unique_ptr.1158", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1164", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1177", %"class.WTF::Vector.1179", i8, i8, %"class.std::__1::unique_ptr.1184", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.392", %"class.blink::HeapVector.1190", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1198", i8, i32, %"class.blink::Member.1200", %"class.blink::Member.1202", %"class.blink::Member.1204", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1206", %"class.WTF::HashMap.1208", %"class.blink::Member.1213", %"class.blink::Member.1215", %"class.blink::Member.1217", %"class.blink::Member.1219", %"class.blink::Member.373", %"class.blink::Member.373", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1221", i8, i32, %"class.blink::Member.1228", %"class.blink::Member.1230", i32, %"class.blink::Member.1232", %"class.blink::Member.1234", %"class.blink::Member.1236", %"class.std::__1::unique_ptr.1238", i64, %"class.std::__1::unique_ptr.1244", i32, i32, %"class.blink::Member.1255", %"class.blink::Member.1257", %"class.blink::Member.1259", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1261", %"class.WTF::Vector.1263", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1268", %"class.blink::Member.1275", %"class.std::__1::unique_ptr.1277", %"class.blink::Member.1283", i8, i8, %"class.WTF::String", %"class.blink::Member.1285", i8, [7 x i8], %"class.blink::HeapHashMap.1287", %"class.blink::HeapObserverSet.1294", %"class.blink::Member.1302", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1304", i32, i8, i8, %"class.blink::WeakMember.1306", %"class.blink::Member.1307" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1029" }
%"class.blink::HeapHashMap.1029" = type { %"class.WTF::HashMap.1032" }
%"class.WTF::HashMap.1032" = type { %"class.WTF::HashTable.1033" }
%"class.WTF::HashTable.1033" = type <{ %"struct.WTF::KeyValuePair.1035"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1035" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1036" = type { %"class.WTF::VectorBuffer.1037" }
%"class.WTF::VectorBuffer.1037" = type { %"class.WTF::VectorBufferBase.1038" }
%"class.WTF::VectorBufferBase.1038" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1039 }
%class.scoped_refptr.1039 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1040", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1040" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.92" }
%"struct.std::__1::atomic.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__cxx_atomic_impl.95" }
%"struct.std::__1::__cxx_atomic_impl.95" = type { %"struct.std::__1::__cxx_atomic_base_impl.96" }
%"struct.std::__1::__cxx_atomic_base_impl.96" = type { i32 }
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1320", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1353", i32, i8, [3 x i8], %"class.blink::HeapVector.1355", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1363", %"class.blink::Member.1365", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1374", %"class.blink::Member.1380", %"class.blink::Member.1382", i8, [7 x i8] }>
%"class.blink::Supplementable.1320" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1321" }
%"class.blink::HeapHashMap.1321" = type { %"class.WTF::HashMap.1324" }
%"class.WTF::HashMap.1324" = type { %"class.WTF::HashTable.1325" }
%"class.WTF::HashTable.1325" = type <{ %"struct.WTF::KeyValuePair.1327"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1327" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1328" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.997" }
%"class.blink::HeapHashSet.997" = type { %"class.WTF::HashSet.1000" }
%"class.WTF::HashSet.1000" = type { %"class.WTF::HashTable.1001" }
%"class.WTF::HashTable.1001" = type <{ %"class.blink::WeakMember.1003"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1003" = type opaque
%"class.blink::Supplementable.1328" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1329" }
%"class.blink::HeapHashMap.1329" = type { %"class.WTF::HashMap.1332" }
%"class.WTF::HashMap.1332" = type { %"class.WTF::HashTable.1333" }
%"class.WTF::HashTable.1333" = type <{ %"struct.WTF::KeyValuePair.1335"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1335" = type { i8*, %"class.blink::Member.1461" }
%"class.blink::Member.1461" = type { %"class.blink::MemberBase.1462" }
%"class.blink::MemberBase.1462" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1463" }
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1336, %"class.std::__1::unique_ptr.1337", %"class.std::__1::unique_ptr.1337", %"class.std::__1::unique_ptr.1343", %"class.std::__1::unique_ptr.1343", %"class.blink::Member.1045", i32, [4 x i8], %"class.WTF::HashSet.1349", i32, i32 }
%class.scoped_refptr.1336 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1337" = type { %"class.std::__1::__compressed_pair.1338" }
%"class.std::__1::__compressed_pair.1338" = type { %"struct.std::__1::__compressed_pair_elem.1339" }
%"struct.std::__1::__compressed_pair_elem.1339" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1343" = type { %"class.std::__1::__compressed_pair.1344" }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1349" = type { %"class.WTF::HashTable.1350" }
%"class.WTF::HashTable.1350" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1353" = type { %"class.blink::MemberBase.1354" }
%"class.blink::MemberBase.1354" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1355" = type { %"class.WTF::Vector.1358" }
%"class.WTF::Vector.1358" = type { %"class.WTF::VectorBuffer.1359" }
%"class.WTF::VectorBuffer.1359" = type { %"class.WTF::VectorBufferBase.1360" }
%"class.WTF::VectorBufferBase.1360" = type { %"class.blink::Member.1361"*, i32, i32 }
%"class.blink::Member.1361" = type opaque
%"class.blink::Member.1363" = type { %"class.blink::MemberBase.1364" }
%"class.blink::MemberBase.1364" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1367", i32, i32 }
%"class.blink::HeapHashMap.1367" = type { %"class.WTF::HashMap.1370" }
%"class.WTF::HashMap.1370" = type { %"class.WTF::HashTable.1371" }
%"class.WTF::HashTable.1371" = type <{ %"struct.WTF::KeyValuePair.1373"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1373" = type opaque
%"class.std::__1::unique_ptr.1374" = type { %"class.std::__1::__compressed_pair.1375" }
%"class.std::__1::__compressed_pair.1375" = type { %"struct.std::__1::__compressed_pair_elem.1376" }
%"struct.std::__1::__compressed_pair_elem.1376" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1380" = type { %"class.blink::MemberBase.1381" }
%"class.blink::MemberBase.1381" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1382" = type { %"class.blink::MemberBase.1383" }
%"class.blink::MemberBase.1383" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1053" = type { %"class.blink::MemberBase.1054" }
%"class.blink::MemberBase.1054" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1055" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.blink::KURL"* }
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1071 }
%class.scoped_refptr.1071 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1072" = type { %"class.WTF::VectorBuffer.1073" }
%"class.WTF::VectorBuffer.1073" = type { %"class.WTF::VectorBufferBase.1074" }
%"class.WTF::VectorBufferBase.1074" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1075 }
%class.scoped_refptr.1075 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1076", i32, i32, %"class.blink::Persistent.1078" }
%"class.WTF::RefCounted.1076" = type { %"class.base::RefCounted.1077" }
%"class.base::RefCounted.1077" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1078" = type { %"class.blink::PersistentBase.1079" }
%"class.blink::PersistentBase.1079" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.325" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1082" }
%"class.blink::HeapHashMap.1082" = type { %"class.WTF::HashMap.1085" }
%"class.WTF::HashMap.1085" = type { %"class.WTF::HashTable.1086" }
%"class.WTF::HashTable.1086" = type <{ %"struct.WTF::KeyValuePair.1088"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1088" = type { %"class.blink::WeakMember.1089", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.325" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1099" }
%"class.blink::HeapHashMap.1099" = type { %"class.WTF::HashMap.1102" }
%"class.WTF::HashMap.1102" = type { %"class.WTF::HashTable.1103" }
%"class.WTF::HashTable.1103" = type <{ %"struct.WTF::KeyValuePair.1105"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1105" = type opaque
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1108" = type { %"class.WTF::HashSet.1111" }
%"class.WTF::HashSet.1111" = type { %"class.WTF::HashTable.1112" }
%"class.WTF::HashTable.1112" = type <{ %"class.blink::WeakMember.1114"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1114" = type opaque
%"class.blink::HeapHashSet.1115" = type { %"class.WTF::HashSet.1118" }
%"class.WTF::HashSet.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"class.blink::WeakMember.1121"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1121" = type opaque
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1130" = type { %"class.blink::MemberBase.1131" }
%"class.blink::MemberBase.1131" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1132" = type { %"class.WTF::HashMap.1135" }
%"class.WTF::HashMap.1135" = type { %"class.WTF::HashTable.1136" }
%"class.WTF::HashTable.1136" = type <{ %"struct.WTF::KeyValuePair.1138"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1138" = type opaque
%"class.WTF::Vector.1139" = type { %"class.WTF::VectorBuffer.1140" }
%"class.WTF::VectorBuffer.1140" = type { %"class.WTF::VectorBufferBase.1141" }
%"class.WTF::VectorBufferBase.1141" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1144" = type { %"class.blink::MemberBase.1145" }
%"class.blink::MemberBase.1145" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1148" = type { %"class.blink::MemberBase.1149" }
%"class.blink::MemberBase.1149" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1150" = type { %"class.WTF::Vector.1153" }
%"class.WTF::Vector.1153" = type { %"class.WTF::VectorBuffer.1154" }
%"class.WTF::VectorBuffer.1154" = type { %"class.WTF::VectorBufferBase.1155" }
%"class.WTF::VectorBufferBase.1155" = type { %"class.blink::Member.1156"*, i32, i32 }
%"class.blink::Member.1156" = type opaque
%"class.std::__1::unique_ptr.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1164" = type { %"class.WTF::HashSet.1167" }
%"class.WTF::HashSet.1167" = type { %"class.WTF::HashTable.1168" }
%"class.WTF::HashTable.1168" = type <{ %"class.blink::WeakMember.1170"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1170" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1171", i32, [4 x i8] }>
%"class.WTF::Vector.1171" = type { %"class.WTF::VectorBuffer.1172" }
%"class.WTF::VectorBuffer.1172" = type { %"class.WTF::VectorBufferBase.1173" }
%"class.WTF::VectorBufferBase.1173" = type { %"struct.std::__1::pair.1174"*, i32, i32 }
%"struct.std::__1::pair.1174" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1179" = type { %"class.WTF::VectorBuffer.1180" }
%"class.WTF::VectorBuffer.1180" = type { %"class.WTF::VectorBufferBase.1181" }
%"class.WTF::VectorBufferBase.1181" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1184" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1190" = type { %"class.WTF::Vector.1193" }
%"class.WTF::Vector.1193" = type { %"class.WTF::VectorBuffer.1194" }
%"class.WTF::VectorBuffer.1194" = type { %"class.WTF::VectorBufferBase.1195" }
%"class.WTF::VectorBufferBase.1195" = type { %"class.blink::Member.1196"*, i32, i32 }
%"class.blink::Member.1196" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.373" }
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1206" = type { %"class.blink::MemberBase.1207" }
%"class.blink::MemberBase.1207" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1208" = type { %"class.WTF::HashTable.1209" }
%"class.WTF::HashTable.1209" = type <{ %"struct.WTF::KeyValuePair.1212"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1212" = type opaque
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1096", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1093, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1093 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1094" }>
%"class.base::RefCountedThreadSafe.1094" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1095 }
%class.scoped_refptr.1095 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.97" }
%"struct.std::__1::atomic.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__atomic_base.99" }
%"struct.std::__1::__atomic_base.99" = type { %"struct.std::__1::__cxx_atomic_impl.100" }
%"struct.std::__1::__cxx_atomic_impl.100" = type { %"struct.std::__1::__cxx_atomic_base_impl.101" }
%"struct.std::__1::__cxx_atomic_base_impl.101" = type { i8 }
%"class.blink::WeakMember.1096" = type { %"class.blink::MemberBase.374" }
%"class.blink::HeapHashSet.1221" = type { %"class.WTF::HashSet.1224" }
%"class.WTF::HashSet.1224" = type { %"class.WTF::HashTable.1225" }
%"class.WTF::HashTable.1225" = type <{ %"class.blink::Member.1227"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1227" = type opaque
%"class.blink::Member.1228" = type { %"class.blink::MemberBase.1229" }
%"class.blink::MemberBase.1229" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1230" = type { %"class.blink::MemberBase.1231" }
%"class.blink::MemberBase.1231" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1236" = type { %"class.blink::MemberBase.1237" }
%"class.blink::MemberBase.1237" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.1240" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1244" = type { %"class.std::__1::__compressed_pair.1245" }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.1246" }
%"struct.std::__1::__compressed_pair_elem.1246" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.452", %"class.WTF::HashSet.452", %"class.WTF::HashSet.452", %"class.WTF::HashSet.452", %"class.WTF::HashSet.452", %"class.WTF::HashSet.452", i32, [4 x i8], %"class.WTF::HashMap.1247", %"class.WTF::HashMap.1247", %"class.WTF::HashMap.1247", %"class.WTF::HashMap.1247", %"class.WTF::HashMap.1247", %"class.WTF::HashMap.1247", %"class.WTF::HashMap.1247", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1251"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1251" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.1262" }
%"class.blink::MemberBase.1262" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1263" = type { %"class.WTF::VectorBuffer.1264" }
%"class.WTF::VectorBuffer.1264" = type { %"class.WTF::VectorBufferBase.1265" }
%"class.WTF::VectorBufferBase.1265" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1268" = type { %"class.WTF::HashMap.1271" }
%"class.WTF::HashMap.1271" = type { %"class.WTF::HashTable.1272" }
%"class.WTF::HashTable.1272" = type <{ %"struct.WTF::KeyValuePair.1274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1274" = type opaque
%"class.blink::Member.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1277" = type { %"class.std::__1::__compressed_pair.1278" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1284" }
%"class.blink::MemberBase.1284" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1285" = type { %"class.blink::MemberBase.1286" }
%"class.blink::MemberBase.1286" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1287" = type { %"class.WTF::HashMap.1290" }
%"class.WTF::HashMap.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"struct.WTF::KeyValuePair.1293"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1293" = type opaque
%"class.blink::HeapObserverSet.1294" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1295" }
%"class.blink::HeapHashSet.1295" = type { %"class.WTF::HashSet.1298" }
%"class.WTF::HashSet.1298" = type { %"class.WTF::HashTable.1299" }
%"class.WTF::HashTable.1299" = type <{ %"class.blink::WeakMember.1301"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1301" = type opaque
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.373", %"class.blink::HeapHashSet.1311", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1318", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::HeapTaskRunnerTimer.1318" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1319", { i64, i64 } }
%"class.blink::WeakMember.1319" = type { %"class.blink::MemberBase.1305" }
%"class.blink::WeakMember.1306" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1307" = type { %"class.blink::MemberBase.1308" }
%"class.blink::MemberBase.1308" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.769 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.754", %"class.std::__1::unique_ptr.756" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.298", %"class.blink::DataRef.470", %"class.blink::DataRef.474", %"class.blink::DataRef.674", %"class.blink::DataRef.737", %"class.blink::DataRef.741", %"class.blink::DataRef.745", %"class.blink::DataRef.749", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.44 }
%class.scoped_refptr.44 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.45", %"class.blink::DataRef.47", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.45" = type { %"class.base::RefCounted.46" }
%"class.base::RefCounted.46" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.47" = type { %class.scoped_refptr.48 }
%class.scoped_refptr.48 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.49", %"class.blink::Font" }
%"class.WTF::RefCounted.49" = type { %"class.base::RefCounted.50" }
%"class.base::RefCounted.50" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.80 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.52, %class.scoped_refptr.60, %class.scoped_refptr.70, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.79 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.51 }
%class.scoped_refptr.51 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1389", [4 x i8] }>
%"class.WTF::RefCounted.1389" = type { %"class.base::RefCounted.1390" }
%"class.base::RefCounted.1390" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.52 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.58", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.53" }
%"class.WTF::Vector.53" = type { %"class.WTF::VectorBuffer.54" }
%"class.WTF::VectorBuffer.54" = type { %"class.WTF::VectorBufferBase.55" }
%"class.WTF::VectorBufferBase.55" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.58" = type { %"class.base::RefCounted.59" }
%"class.base::RefCounted.59" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.60 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.61", %"class.WTF::RefCounted.68", [4 x i8] }>
%"class.blink::FontSettings.61" = type { %"class.WTF::Vector.62" }
%"class.WTF::Vector.62" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase.64" }
%"class.WTF::VectorBufferBase.64" = type { %"class.blink::FontTagValuePair.65"*, i32, i32 }
%"class.blink::FontTagValuePair.65" = type { i32, float }
%"class.WTF::RefCounted.68" = type { %"class.base::RefCounted.69" }
%"class.base::RefCounted.69" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.70 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.71", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.76, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.71" = type { %"class.base::RefCounted.72" }
%"class.base::RefCounted.72" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.76 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.77", [4 x i8] }>
%"class.WTF::RefCounted.77" = type { %"class.base::RefCounted.78" }
%"class.base::RefCounted.78" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.79 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.80 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.81", %"class.WTF::Vector.83", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.81" = type { %"class.base::RefCounted.82" }
%"class.base::RefCounted.82" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.83" = type { %"class.WTF::VectorBuffer.84" }
%"class.WTF::VectorBuffer.84" = type { %"class.WTF::VectorBufferBase.85", [8 x i8] }
%"class.WTF::VectorBufferBase.85" = type { %class.scoped_refptr.86*, i32, i32 }
%class.scoped_refptr.86 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.87", [4 x i8] }>
%"class.WTF::RefCounted.87" = type { %"class.base::RefCounted.88" }
%"class.base::RefCounted.88" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.103", %class.scoped_refptr.110, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.87" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.91 }
%union.anon.91 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.102, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.92" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.92" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.97" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.102 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.106, %class.scoped_refptr.106 }
%class.scoped_refptr.106 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.110 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.111", [4 x i8] }>
%"class.WTF::RefCounted.111" = type { %"class.base::RefCounted.112" }
%"class.base::RefCounted.112" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.296 }
%class.scoped_refptr.296 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.297, i8, i8, i8, i8 }>
%union.anon.297 = type { i32 }
%"class.blink::DataRef.298" = type { %class.scoped_refptr.299 }
%class.scoped_refptr.299 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.300", [4 x i8], %"class.blink::DataRef.302", %"class.blink::DataRef.338", %"class.WTF::Vector.342", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.346, %class.scoped_refptr.355, %"class.blink::Persistent.363", %"class.blink::Persistent.365", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.300" = type { %"class.base::RefCounted.301" }
%"class.base::RefCounted.301" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.302" = type { %class.scoped_refptr.303 }
%class.scoped_refptr.303 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.304", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.306, %class.scoped_refptr.313, %"class.blink::Persistent.326", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.304" = type { %"class.base::RefCounted.305" }
%"class.base::RefCounted.305" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.306 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.307", %"class.WTF::Vector.308" }
%"class.base::RefCountedThreadSafe.307" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.308" = type { %"class.WTF::VectorBuffer.309" }
%"class.WTF::VectorBuffer.309" = type { %"class.WTF::VectorBufferBase.310" }
%"class.WTF::VectorBufferBase.310" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.313 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.314", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.314" = type { %"class.base::RefCounted.315" }
%"class.base::RefCounted.315" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1402 }
%class.scoped_refptr.1402 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1403", %"class.WTF::Vector.657", %"class.WTF::Vector.1405", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1403" = type { %"class.base::RefCounted.1404" }
%"class.base::RefCounted.1404" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.657" = type { %"class.WTF::VectorBuffer.658" }
%"class.WTF::VectorBuffer.658" = type { %"class.WTF::VectorBufferBase.659" }
%"class.WTF::VectorBufferBase.659" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1405" = type { %"class.WTF::VectorBuffer.1406" }
%"class.WTF::VectorBuffer.1406" = type { %"class.WTF::VectorBufferBase.1407" }
%"class.WTF::VectorBufferBase.1407" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1408 }
%union.anon.1408 = type { double }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.318" }
%"class.blink::PersistentBase.318" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.325" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.321" }
%"class.WTF::HashMap.321" = type { %"class.WTF::HashTable.322" }
%"class.WTF::HashTable.322" = type <{ %"struct.WTF::KeyValuePair.324"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.324" = type opaque
%"class.blink::Persistent.326" = type { %"class.blink::PersistentBase.327" }
%"class.blink::PersistentBase.327" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.325" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.330" }
%"class.WTF::Vector.330" = type { %"class.WTF::VectorBuffer.331" }
%"class.WTF::VectorBuffer.331" = type { %"class.WTF::VectorBufferBase.332" }
%"class.WTF::VectorBufferBase.332" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.333", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.338" = type { %class.scoped_refptr.339 }
%class.scoped_refptr.339 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.340", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.340" = type { %"class.base::RefCounted.341" }
%"class.base::RefCounted.341" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.342" = type { %"class.WTF::VectorBuffer.343" }
%"class.WTF::VectorBuffer.343" = type { %"class.WTF::VectorBufferBase.40" }
%class.scoped_refptr.346 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.347", %"class.WTF::Vector.349" }
%"class.WTF::RefCounted.347" = type { %"class.base::RefCounted.348" }
%"class.base::RefCounted.348" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.349" = type { %"class.WTF::VectorBuffer.350" }
%"class.WTF::VectorBuffer.350" = type { %"class.WTF::VectorBufferBase.351" }
%"class.WTF::VectorBufferBase.351" = type { %"struct.std::__1::pair.352"*, i32, i32 }
%"struct.std::__1::pair.352" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.355 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.356", [4 x i8], %"class.WTF::Vector.358" }
%"class.WTF::RefCounted.356" = type { %"class.base::RefCounted.357" }
%"class.base::RefCounted.357" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.358" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.360", [28 x i8] }>
%"class.WTF::VectorBufferBase.360" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.363" = type { %"class.blink::PersistentBase.364" }
%"class.blink::PersistentBase.364" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.325" }
%"class.blink::Persistent.365" = type { %"class.blink::PersistentBase.366" }
%"class.blink::PersistentBase.366" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.325" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.369", %"class.blink::Member.468" }
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.470" = type { %class.scoped_refptr.471 }
%class.scoped_refptr.471 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.472", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.472" = type { %"class.base::RefCounted.473" }
%"class.base::RefCounted.473" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.474" = type { %class.scoped_refptr.475 }
%class.scoped_refptr.475 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.476", [4 x i8], %"class.blink::DataRef.478", %"class.blink::DataRef.544", %"class.blink::TransformOperations", %class.scoped_refptr.355, %"class.blink::Persistent.668", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.478" = type { %class.scoped_refptr.479 }
%class.scoped_refptr.479 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.480", [4 x i8], %"class.blink::DataRef.482", %"class.blink::Persistent.520", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.480" = type { %"class.base::RefCounted.481" }
%"class.base::RefCounted.481" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.482" = type { %class.scoped_refptr.483 }
%class.scoped_refptr.483 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.484", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.502, %class.scoped_refptr.505, %class.scoped_refptr.508, %class.scoped_refptr.511, %class.scoped_refptr.512, %class.scoped_refptr.513, %"class.blink::Persistent.520", %"class.blink::Persistent.535", %"class.absl::optional.539", %"class.absl::optional.539", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.484" = type { %"class.base::RefCounted.485" }
%"class.base::RefCounted.485" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.486", %"class.std::__1::unique_ptr.491" }
%"class.WTF::Vector.486" = type { %"class.WTF::VectorBuffer.487" }
%"class.WTF::VectorBuffer.487" = type { %"class.WTF::VectorBufferBase.488" }
%"class.WTF::VectorBufferBase.488" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.494", %"class.WTF::Vector.486", i32, i32 }
%"class.WTF::Vector.494" = type { %"class.WTF::VectorBuffer.495" }
%"class.WTF::VectorBuffer.495" = type { %"class.WTF::VectorBufferBase.496" }
%"class.WTF::VectorBufferBase.496" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.502 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.503", [4 x i8] }>
%"class.WTF::RefCounted.503" = type { %"class.base::RefCounted.504" }
%"class.base::RefCounted.504" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.505 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.506", [4 x i8] }>
%"class.WTF::RefCounted.506" = type { %"class.base::RefCounted.507" }
%"class.base::RefCounted.507" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.508 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.509" }>
%"class.WTF::RefCounted.509" = type { %"class.base::RefCounted.510" }
%"class.base::RefCounted.510" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.511 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.512 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.513 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.514", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.514" = type { %"class.base::RefCounted.515" }
%"class.base::RefCounted.515" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.516" }
%"class.blink::DataRef.516" = type { %class.scoped_refptr.517 }
%class.scoped_refptr.517 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.363", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.518" }
%"class.WTF::RefCounted.518" = type { %"class.base::RefCounted.519" }
%"class.base::RefCounted.519" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.535" = type { %"class.blink::PersistentBase.536" }
%"class.blink::PersistentBase.536" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.325" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.505, %"class.blink::Member.333", i32, [4 x i8] }>
%"class.absl::optional.539" = type { %"class.absl::optional_internal::optional_data.540" }
%"class.absl::optional_internal::optional_data.540" = type { %"class.absl::optional_internal::optional_data_base.541" }
%"class.absl::optional_internal::optional_data_base.541" = type { %"class.absl::optional_internal::optional_data_dtor_base.542" }
%"class.absl::optional_internal::optional_data_dtor_base.542" = type { i8, [3 x i8], %union.anon.543 }
%union.anon.543 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.520" = type { %"class.blink::PersistentBase.521" }
%"class.blink::PersistentBase.521" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.325" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.524" }
%"class.blink::HeapVector.524" = type { %"class.WTF::Vector.527" }
%"class.WTF::Vector.527" = type { %"class.WTF::VectorBuffer.528" }
%"class.WTF::VectorBuffer.528" = type { %"class.WTF::VectorBufferBase.529" }
%"class.WTF::VectorBufferBase.529" = type { %"class.blink::Member.530"*, i32, i32 }
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.544" = type { %class.scoped_refptr.545 }
%class.scoped_refptr.545 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.546", %"class.blink::DataRef.548", %"class.blink::DataRef.552", %"class.blink::DataRef.561", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.580", %"class.std::__1::unique_ptr.591", %"class.std::__1::unique_ptr.629", %"class.std::__1::unique_ptr.640", %"class.std::__1::unique_ptr.651", %"class.WTF::Vector.657", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.546" = type { %"class.base::RefCounted.547" }
%"class.base::RefCounted.547" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.548" = type { %class.scoped_refptr.549 }
%class.scoped_refptr.549 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.550", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.550" = type { %"class.base::RefCounted.551" }
%"class.base::RefCounted.551" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.552" = type { %class.scoped_refptr.553 }
%class.scoped_refptr.553 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.554", [4 x i8], %"class.WTF::Vector.556", i8, [7 x i8] }>
%"class.WTF::RefCounted.554" = type { %"class.base::RefCounted.555" }
%"class.base::RefCounted.555" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.556" = type { %"class.WTF::VectorBuffer.557" }
%"class.WTF::VectorBuffer.557" = type { %"class.WTF::VectorBufferBase.558" }
%"class.WTF::VectorBufferBase.558" = type { i32*, i32, i32 }
%"class.blink::DataRef.561" = type { %class.scoped_refptr.562 }
%class.scoped_refptr.562 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.563", [4 x i8], %"class.WTF::HashMap.565", %"class.WTF::HashMap.565", %"class.WTF::HashMap.565", %"class.WTF::HashMap.565", %"class.WTF::HashMap.565", %"class.WTF::HashMap.565", %"class.WTF::HashMap.570", %"class.WTF::HashMap.570", %"class.WTF::HashMap.570", %"class.WTF::HashMap.570", %"class.WTF::HashMap.575", %"class.WTF::Vector.486", %"class.WTF::Vector.486", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.563" = type { %"class.base::RefCounted.564" }
%"class.base::RefCounted.564" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"struct.WTF::KeyValuePair.569"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.569" = type { %"class.WTF::String", %"class.WTF::Vector.1495" }
%"class.WTF::Vector.1495" = type { %"class.WTF::VectorBuffer.1496" }
%"class.WTF::VectorBuffer.1496" = type { %"class.WTF::VectorBufferBase.1497" }
%"class.WTF::VectorBufferBase.1497" = type { i64*, i32, i32 }
%"class.WTF::HashMap.570" = type { %"class.WTF::HashTable.571" }
%"class.WTF::HashTable.571" = type <{ %"struct.WTF::KeyValuePair.574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.574" = type { i64, %"class.WTF::Vector.657" }
%"class.WTF::HashMap.575" = type { %"class.WTF::HashTable.576" }
%"class.WTF::HashTable.576" = type <{ %"struct.WTF::KeyValuePair.579"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.579" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.580" = type { %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.583" }
%"class.WTF::HashMap.583" = type { %"class.WTF::HashTable.584" }
%"class.WTF::HashTable.584" = type <{ %"struct.WTF::KeyValuePair.587"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.587" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1500", %"class.absl::optional.1500", %"class.absl::optional.1500" }
%"class.absl::optional.1500" = type { %"class.absl::optional_internal::optional_data.1501" }
%"class.absl::optional_internal::optional_data.1501" = type { %"class.absl::optional_internal::optional_data_base.1502" }
%"class.absl::optional_internal::optional_data_base.1502" = type { %"class.absl::optional_internal::optional_data_dtor_base.1503" }
%"class.absl::optional_internal::optional_data_dtor_base.1503" = type { i8, %union.anon.1504 }
%union.anon.1504 = type { i32 }
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.342", %"class.WTF::Vector.606", %"class.WTF::Vector.594", %"class.WTF::Vector.611", %"class.WTF::Vector.616", %"class.WTF::Vector.621" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.594", %"class.WTF::Vector.594", %"class.WTF::Vector.599" }
%"class.WTF::Vector.599" = type { %"class.WTF::VectorBuffer.600" }
%"class.WTF::VectorBuffer.600" = type { %"class.WTF::VectorBufferBase.601" }
%"class.WTF::VectorBufferBase.601" = type { %class.scoped_refptr.602*, i32, i32 }
%class.scoped_refptr.602 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.603" }
%"class.base::RefCountedThreadSafe.603" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.606" = type { %"class.WTF::VectorBuffer.607" }
%"class.WTF::VectorBuffer.607" = type { %"class.WTF::VectorBufferBase.608" }
%"class.WTF::VectorBufferBase.608" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { double*, i32, i32 }
%"class.WTF::Vector.611" = type { %"class.WTF::VectorBuffer.612" }
%"class.WTF::VectorBuffer.612" = type { %"class.WTF::VectorBufferBase.613" }
%"class.WTF::VectorBufferBase.613" = type { i32*, i32, i32 }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { i32*, i32, i32 }
%"class.WTF::Vector.621" = type { %"class.WTF::VectorBuffer.622" }
%"class.WTF::VectorBuffer.622" = type { %"class.WTF::VectorBufferBase.623" }
%"class.WTF::VectorBufferBase.623" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.629" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.632" }
%"class.WTF::Vector.632" = type { %"class.WTF::VectorBuffer.633" }
%"class.WTF::VectorBuffer.633" = type { %"class.WTF::VectorBufferBase.634" }
%"class.WTF::VectorBufferBase.634" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.643" }
%"class.WTF::Vector.643" = type { %"class.WTF::VectorBuffer.644" }
%"class.WTF::VectorBuffer.644" = type { %"class.WTF::VectorBufferBase.645" }
%"class.WTF::VectorBufferBase.645" = type { %"class.blink::Persistent.363"*, i32, i32 }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.363", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.662" }
%"class.WTF::Vector.662" = type { %"class.WTF::VectorBuffer.663" }
%"class.WTF::VectorBuffer.663" = type { %"class.WTF::VectorBufferBase.664" }
%"class.WTF::VectorBufferBase.664" = type { %class.scoped_refptr.665*, i32, i32 }
%class.scoped_refptr.665 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.509", [4 x i8] }>
%"class.blink::Persistent.668" = type { %"class.blink::PersistentBase.669" }
%"class.blink::PersistentBase.669" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.325" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.672" }
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.674" = type { %class.scoped_refptr.675 }
%class.scoped_refptr.675 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.676", [4 x i8], %"class.blink::DataRef.678", %"class.blink::DataRef.682", %"class.blink::DataRef.699", %"class.blink::DataRef.717", %"class.blink::DataRef.729", %"class.blink::DataRef.733", %class.scoped_refptr.703, i32, [4 x i8] }>
%"class.WTF::RefCounted.676" = type { %"class.base::RefCounted.677" }
%"class.base::RefCounted.677" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.678" = type { %class.scoped_refptr.679 }
%class.scoped_refptr.679 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.680", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.680" = type { %"class.base::RefCounted.681" }
%"class.base::RefCounted.681" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.682" = type { %class.scoped_refptr.683 }
%class.scoped_refptr.683 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.684", %class.scoped_refptr.686, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.684" = type { %"class.base::RefCounted.685" }
%"class.base::RefCounted.685" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.686 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.687", %"class.std::__1::unique_ptr.693", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.506" }>
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.699" = type { %class.scoped_refptr.700 }
%class.scoped_refptr.700 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.701", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.701" = type { %"class.base::RefCounted.702" }
%"class.base::RefCounted.702" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.703, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.717" = type { %class.scoped_refptr.718 }
%class.scoped_refptr.718 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.719", [4 x i8], %class.scoped_refptr.721, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.719" = type { %"class.base::RefCounted.720" }
%"class.base::RefCounted.720" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.721 = type { %"class.base::RefCountedData.722"* }
%"class.base::RefCountedData.722" = type { %"class.base::RefCountedThreadSafe.723", %"class.WTF::Vector.724" }
%"class.base::RefCountedThreadSafe.723" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.724" = type { %"class.WTF::VectorBuffer.725" }
%"class.WTF::VectorBuffer.725" = type { %"class.WTF::VectorBufferBase.726" }
%"class.WTF::VectorBufferBase.726" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.729" = type { %class.scoped_refptr.730 }
%class.scoped_refptr.730 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.731", %class.scoped_refptr.703, %class.scoped_refptr.703, %class.scoped_refptr.703 }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.733" = type { %class.scoped_refptr.734 }
%class.scoped_refptr.734 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.735", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.735" = type { %"class.base::RefCounted.736" }
%"class.base::RefCounted.736" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.703 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.704", %"class.blink::Persistent.706", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.704" = type { %"class.base::RefCounted.705" }
%"class.base::RefCounted.705" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.706" = type { %"class.blink::PersistentBase.707" }
%"class.blink::PersistentBase.707" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.325" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.390", %"class.blink::HeapHashMap.710" }
%"class.blink::HeapHashMap.710" = type { %"class.WTF::HashMap.713" }
%"class.WTF::HashMap.713" = type { %"class.WTF::HashTable.714" }
%"class.WTF::HashTable.714" = type <{ %"struct.WTF::KeyValuePair.716"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.716" = type opaque
%"class.blink::DataRef.737" = type { %class.scoped_refptr.738 }
%class.scoped_refptr.738 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.739", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.739" = type { %"class.base::RefCounted.740" }
%"class.base::RefCounted.740" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.741" = type { %class.scoped_refptr.742 }
%class.scoped_refptr.742 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.743", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.743" = type { %"class.base::RefCounted.744" }
%"class.base::RefCounted.744" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.745" = type { %class.scoped_refptr.746 }
%class.scoped_refptr.746 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.747", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.747" = type { %"class.base::RefCounted.748" }
%"class.base::RefCounted.748" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.749" = type { %class.scoped_refptr.750 }
%class.scoped_refptr.750 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.751", %class.scoped_refptr.753 }
%"class.WTF::RefCounted.751" = type { %"class.base::RefCounted.752" }
%"class.base::RefCounted.752" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.753 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1027", %"class.blink::StyleVariables", %class.scoped_refptr.753 }
%"class.WTF::RefCounted.1027" = type { %"class.base::RefCounted.1028" }
%"class.base::RefCounted.1028" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.754" = type { %"class.base::RefCounted.755" }
%"class.base::RefCounted.755" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.759" }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.WTF::Vector.762"* }
%"class.WTF::Vector.762" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.43 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.770", %"class.WTF::Vector.926", %"class.blink::HeapHashSet.931", %"class.WTF::Vector.926", %"class.blink::HeapVector.938", %"class.blink::HeapVector.945", %"class.blink::HeapHashMap.952", %"class.WTF::HashSet.959", %"class.WTF::HashSet.959", %"class.blink::HeapHashMap.963", %"class.blink::HeapHashMap.963", %"class.blink::HeapHashMap.963", %"class.blink::HeapHashMap.963" }
%"class.blink::HeapVector.770" = type { %"class.WTF::Vector.773" }
%"class.WTF::Vector.773" = type { %"class.WTF::VectorBuffer.774" }
%"class.WTF::VectorBuffer.774" = type { %"class.WTF::VectorBufferBase.775" }
%"class.WTF::VectorBufferBase.775" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.776", %"struct.blink::Timing", %"class.blink::Member.853", i32, %"class.blink::Member.865", %"class.WTF::Vector.621" }
%"class.blink::Member.776" = type { %"class.blink::MemberBase.777" }
%"class.blink::MemberBase.777" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.799", i8, %"class.absl::optional.780", %"class.absl::optional.848" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.778", %"struct.blink::Timing", %"class.blink::Member.785", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.780", %"class.absl::optional.794", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.778" = type { %"class.blink::MemberBase.779" }
%"class.blink::MemberBase.779" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.789", %"class.absl::optional.789", i8, i8, i8, %"class.absl::optional.780", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.789" = type { %"class.absl::optional_internal::optional_data.790" }
%"class.absl::optional_internal::optional_data.790" = type { %"class.absl::optional_internal::optional_data_base.791" }
%"class.absl::optional_internal::optional_data_base.791" = type { %"class.absl::optional_internal::optional_data_dtor_base.792" }
%"class.absl::optional_internal::optional_data_dtor_base.792" = type { i8, %union.anon.793 }
%union.anon.793 = type { double }
%"class.absl::optional.794" = type { %"class.absl::optional_internal::optional_data.795" }
%"class.absl::optional_internal::optional_data.795" = type { %"class.absl::optional_internal::optional_data_base.796" }
%"class.absl::optional_internal::optional_data_base.796" = type { %"class.absl::optional_internal::optional_data_dtor_base.797" }
%"class.absl::optional_internal::optional_data_dtor_base.797" = type { i8, %union.anon.798 }
%union.anon.798 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.803", %"class.blink::Member.811", %"class.blink::Member.836", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.602, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.803" = type { %"class.WTF::Vector.806" }
%"class.WTF::Vector.806" = type { %"class.WTF::VectorBuffer.807" }
%"class.WTF::VectorBuffer.807" = type { %"class.WTF::VectorBufferBase.808" }
%"class.WTF::VectorBufferBase.808" = type { %"class.blink::Member.809"*, i32, i32 }
%"class.blink::Member.809" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.789", %"class.absl::optional.1475", %class.scoped_refptr.602 }
%"class.absl::optional.1475" = type { %"class.absl::optional_internal::optional_data.1476" }
%"class.absl::optional_internal::optional_data.1476" = type { %"class.absl::optional_internal::optional_data_base.1477" }
%"class.absl::optional_internal::optional_data_base.1477" = type { %"class.absl::optional_internal::optional_data_dtor_base.1478" }
%"class.absl::optional_internal::optional_data_dtor_base.1478" = type { i8, %union.anon.1479 }
%union.anon.1479 = type { i32 }
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::HeapHashMap.813"* }
%"class.blink::HeapHashMap.813" = type { %"class.WTF::HashMap.816" }
%"class.WTF::HashMap.816" = type { %"class.WTF::HashTable.817" }
%"class.WTF::HashTable.817" = type <{ %"struct.WTF::KeyValuePair.819"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.819" = type { %"class.blink::PropertyHandle", %"class.blink::Member.821" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.820, %"class.WTF::AtomicString" }
%union.anon.820 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.825" }
%"class.blink::HeapVector.825" = type { %"class.WTF::Vector.828" }
%"class.WTF::Vector.828" = type { %"class.WTF::VectorBuffer.829" }
%"class.WTF::VectorBuffer.829" = type { %"class.WTF::VectorBufferBase.830" }
%"class.WTF::VectorBufferBase.830" = type { %"class.blink::Member.831"*, i32, i32 }
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.602, i32, [4 x i8] }>
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.840" }
%"class.blink::HeapVector.840" = type { %"class.WTF::Vector.843" }
%"class.WTF::Vector.843" = type { %"class.WTF::VectorBuffer.844" }
%"class.WTF::VectorBuffer.844" = type { %"class.WTF::VectorBufferBase.845" }
%"class.WTF::VectorBufferBase.845" = type { %"class.blink::Member.846"*, i32, i32 }
%"class.blink::Member.846" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1468", %class.scoped_refptr.602, double, double, double, double }
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.absl::optional.780" = type { %"class.absl::optional_internal::optional_data.781" }
%"class.absl::optional_internal::optional_data.781" = type { %"class.absl::optional_internal::optional_data_base.782" }
%"class.absl::optional_internal::optional_data_base.782" = type { %"class.absl::optional_internal::optional_data_dtor_base.783" }
%"class.absl::optional_internal::optional_data_dtor_base.783" = type { i8, %union.anon.784 }
%union.anon.784 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.848" = type { %"class.absl::optional_internal::optional_data.849" }
%"class.absl::optional_internal::optional_data.849" = type { %"class.absl::optional_internal::optional_data_base.850" }
%"class.absl::optional_internal::optional_data_base.850" = type { %"class.absl::optional_internal::optional_data_dtor_base.851" }
%"class.absl::optional_internal::optional_data_dtor_base.851" = type { i8, %union.anon.852 }
%union.anon.852 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.780", i32, [4 x i8], %class.scoped_refptr.602, i16, [6 x i8] }>
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.857", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.857" = type { %"class.WTF::Vector.860" }
%"class.WTF::Vector.860" = type { %"class.WTF::VectorBuffer.861" }
%"class.WTF::VectorBuffer.861" = type { %"class.WTF::VectorBufferBase.862" }
%"class.WTF::VectorBufferBase.862" = type { %"class.blink::Member.863"*, i32, i32 }
%"class.blink::Member.863" = type opaque
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.373", i32, [4 x i8], %"class.blink::HeapHashSet.867", %"class.blink::HeapHashSet.875", %"class.std::__1::unique_ptr.882", %"class.absl::optional.915" }
%"class.blink::HeapHashSet.867" = type { %"class.WTF::HashSet.870" }
%"class.WTF::HashSet.870" = type { %"class.WTF::HashTable.871" }
%"class.WTF::HashTable.871" = type <{ %"class.blink::Member.873"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.789", %"class.absl::optional.780", %"class.absl::optional.780", %"class.absl::optional.848", %"class.absl::optional.780", i8, [3 x i8], i32, %"class.blink::Member.1004", %"class.blink::Member.1004", %"class.blink::Member.1006", %"class.blink::Member.373", %"class.blink::Member.865", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.std::__1::unique_ptr.1010", i8, [3 x i8], i32, %"class.blink::Member.1016", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.988" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.976" }
%"class.blink::HeapVector.976" = type { %"class.WTF::Vector.979" }
%"class.WTF::Vector.979" = type { %"class.WTF::VectorBuffer.980" }
%"class.WTF::VectorBuffer.980" = type { %"class.WTF::VectorBufferBase.981", [32 x i8] }
%"class.WTF::VectorBufferBase.981" = type { %"struct.std::__1::pair.982"*, i32, i32 }
%"struct.std::__1::pair.982" = type { %"class.WTF::AtomicString", %"class.blink::Member.983" }
%"class.blink::Member.983" = type { %"class.blink::MemberBase.984" }
%"class.blink::MemberBase.984" = type { %"class.blink::HeapVector.985"* }
%"class.blink::HeapVector.985" = type opaque
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.WTF::Vector.991"* }
%"class.WTF::Vector.991" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.995" }
%"class.blink::WeakMember.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.1010" = type { %"class.std::__1::__compressed_pair.1011" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.789", %"class.absl::optional.789", double, i8, i32 }
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1020", %"class.std::__1::unique_ptr.1021", %"class.blink::Member.873" }
%"class.blink::ThreadState::PrefinalizerRegistration.1020" = type { i8 }
%"class.std::__1::unique_ptr.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.875" = type { %"class.WTF::HashSet.878" }
%"class.WTF::HashSet.878" = type { %"class.WTF::HashTable.879" }
%"class.WTF::HashTable.879" = type <{ %"class.blink::WeakMember.881"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.881" = type opaque
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.885 }
%class.scoped_refptr.885 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.886", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.886" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.887" }
%"class.std::__1::__hash_table.887" = type <{ %"class.std::__1::unique_ptr.888", %"class.std::__1::__compressed_pair.898", %"class.std::__1::__compressed_pair.903", %"class.std::__1::__compressed_pair.907", [4 x i8] }>
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890", %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"struct.std::__1::__hash_node_base.891"** }
%"struct.std::__1::__hash_node_base.891" = type { %"struct.std::__1::__hash_node_base.891"* }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.std::__1::__bucket_list_deallocator.893" }
%"class.std::__1::__bucket_list_deallocator.893" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"struct.std::__1::__hash_node_base.891" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.915" = type { %"class.absl::optional_internal::optional_data.916" }
%"class.absl::optional_internal::optional_data.916" = type { %"class.absl::optional_internal::optional_data_base.917" }
%"class.absl::optional_internal::optional_data_base.917" = type { %"class.absl::optional_internal::optional_data_dtor_base.918" }
%"class.absl::optional_internal::optional_data_dtor_base.918" = type { i8, %union.anon.919 }
%union.anon.919 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.920" }
%"class.absl::optional.920" = type { %"class.absl::optional_internal::optional_data.921" }
%"class.absl::optional_internal::optional_data.921" = type { %"class.absl::optional_internal::optional_data_base.922" }
%"class.absl::optional_internal::optional_data_base.922" = type { %"class.absl::optional_internal::optional_data_dtor_base.923" }
%"class.absl::optional_internal::optional_data_dtor_base.923" = type { i8, %union.anon.924 }
%union.anon.924 = type { %"class.base::TimeDelta" }
%"class.blink::HeapHashSet.931" = type { %"class.WTF::HashSet.934" }
%"class.WTF::HashSet.934" = type { %"class.WTF::HashTable.935" }
%"class.WTF::HashTable.935" = type <{ %"class.blink::Member.937"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.937" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.926" = type { %"class.WTF::VectorBuffer.927" }
%"class.WTF::VectorBuffer.927" = type { %"class.WTF::VectorBufferBase.928" }
%"class.WTF::VectorBufferBase.928" = type { i32*, i32, i32 }
%"class.blink::HeapVector.938" = type { %"class.WTF::Vector.941" }
%"class.WTF::Vector.941" = type { %"class.WTF::VectorBuffer.942" }
%"class.WTF::VectorBuffer.942" = type { %"class.WTF::VectorBufferBase.943" }
%"class.WTF::VectorBufferBase.943" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.873", %"class.blink::Member.776", %"struct.blink::Timing", %"class.blink::Member.853", i32, %"class.blink::Member.865", %"class.WTF::Vector.621" }
%"class.blink::HeapVector.945" = type { %"class.WTF::Vector.948" }
%"class.WTF::Vector.948" = type { %"class.WTF::VectorBuffer.949" }
%"class.WTF::VectorBuffer.949" = type { %"class.WTF::VectorBufferBase.950" }
%"class.WTF::VectorBufferBase.950" = type { %"class.blink::Member.873"*, i32, i32 }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1491" }
%"class.blink::Member.1491" = type { %"class.blink::MemberBase.1492" }
%"class.blink::MemberBase.1492" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.43, %class.scoped_refptr.43, %class.scoped_refptr.43, double, %"class.blink::Member.776" }
%"class.WTF::HashSet.959" = type { %"class.WTF::HashTable.960" }
%"class.WTF::HashTable.960" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.963" = type { %"class.WTF::HashMap.966" }
%"class.WTF::HashMap.966" = type { %"class.WTF::HashTable.967" }
%"class.WTF::HashTable.967" = type <{ %"struct.WTF::KeyValuePair.969"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.969" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1481" }
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::HeapVector.1483"* }
%"class.blink::HeapVector.1483" = type { %"class.WTF::Vector.1486" }
%"class.WTF::Vector.1486" = type { %"class.WTF::VectorBuffer.1487" }
%"class.WTF::VectorBuffer.1487" = type { %"class.WTF::VectorBufferBase.1488", [8 x i8] }
%"class.WTF::VectorBufferBase.1488" = type { %"class.blink::Member.1468"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.970", %"class.WTF::HashSet.970", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.970" = type { %"class.WTF::HashTable.971" }
%"class.WTF::HashTable.971" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"struct.blink::OptionalStyleColor" = type { i8, %"class.blink::StyleColor" }
%"class.blink::CSSColorInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.blink::CSSInterpolationType" = type { %"class.blink::InterpolationType", %"class.blink::WeakPersistent.1391" }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::WeakPersistent.1391" = type { %"class.blink::PersistentBase.1392" }
%"class.blink::PersistentBase.1392" = type { %"class.blink::PropertyRegistration"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member.1400", %class.scoped_refptr.1402, %"class.WTF::Vector.1412", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector.1395" }
%"class.WTF::Vector.1395" = type { %"class.WTF::VectorBuffer.1396" }
%"class.WTF::VectorBuffer.1396" = type { %"class.WTF::VectorBufferBase.1397" }
%"class.WTF::VectorBufferBase.1397" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::CSSValue"* }
%"class.WTF::Vector.1412" = type { %"class.WTF::VectorBuffer.1413" }
%"class.WTF::VectorBuffer.1413" = type { %"class.WTF::VectorBufferBase.1414" }
%"class.WTF::VectorBufferBase.1414" = type { %"class.std::__1::unique_ptr.1415"*, i32, i32 }
%"class.std::__1::unique_ptr.1415" = type opaque
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr", %class.scoped_refptr.1418 }
%class.scoped_refptr.1418 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.1419", [4 x i8] }>
%"class.WTF::RefCounted.1419" = type { %"class.base::RefCounted.1420" }
%"class.base::RefCounted.1420" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1421" = type { %"class.WTF::VectorBuffer.1422" }
%"class.WTF::VectorBuffer.1422" = type { %"class.WTF::VectorBufferBase.1423" }
%"class.WTF::VectorBufferBase.1423" = type { %"class.std::__1::unique_ptr.1424"*, i32, i32 }
%"class.std::__1::unique_ptr.1424" = type { %"class.std::__1::__compressed_pair.1505" }
%"class.std::__1::__compressed_pair.1505" = type { %"struct.std::__1::__compressed_pair_elem.1506" }
%"struct.std::__1::__compressed_pair_elem.1506" = type { %"class.blink::InterpolationType::ConversionChecker"* }
%"class.blink::InterpolationType::ConversionChecker" = type { i32 (...)**, %"class.blink::InterpolationType"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.373", %class.scoped_refptr.43, %"class.blink::SelectorFilter", %"class.blink::Member.1453", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1429" }
%"class.blink::HeapHashMap.1429" = type { %"class.WTF::HashMap.1432" }
%"class.WTF::HashMap.1432" = type { %"class.WTF::HashTable.1433" }
%"class.WTF::HashTable.1433" = type <{ %"struct.WTF::KeyValuePair.1435"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1435" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1436", %"class.std::__1::unique_ptr.1447" }
%"class.blink::HeapVector.1436" = type { %"class.WTF::Vector.1439" }
%"class.WTF::Vector.1439" = type { %"class.WTF::VectorBuffer.1440" }
%"class.WTF::VectorBuffer.1440" = type { %"class.WTF::VectorBufferBase.1441" }
%"class.WTF::VectorBufferBase.1441" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.390", %"class.WTF::Vector.1442" }
%"class.WTF::Vector.1442" = type { %"class.WTF::VectorBuffer.1443" }
%"class.WTF::VectorBuffer.1443" = type { %"class.WTF::VectorBufferBase.928", [16 x i8] }
%"class.std::__1::unique_ptr.1447" = type { %"class.std::__1::__compressed_pair.1448" }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.1449" }
%"struct.std::__1::__compressed_pair_elem.1449" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.std::__1::unique_ptr.1455" = type { %"class.std::__1::__compressed_pair.1456" }
%"class.std::__1::__compressed_pair.1456" = type { %"struct.std::__1::__compressed_pair_elem.1457" }
%"struct.std::__1::__compressed_pair_elem.1457" = type { %"class.blink::InheritedColorChecker"* }
%"class.blink::InheritedColorChecker" = type <{ %"class.blink::CSSInterpolationType::CSSConversionChecker", %"class.blink::CSSProperty"*, %"struct.blink::OptionalStyleColor", [4 x i8] }>
%"class.blink::CSSInterpolationType::CSSConversionChecker" = type { %"class.blink::InterpolationType::ConversionChecker" }
%"class.blink::cssvalue::CSSColor" = type { %"class.blink::CSSValue", %"class.blink::Color" }
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"class.blink::InterpolableList" = type { %"class.blink::InterpolableValue", %"class.WTF::Vector" }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %class.scoped_refptr.1418 }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink20CSSInterpolationTypeD2Ev = comdat any

$_ZN5blink25CSSColorInterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE = comdat any

$_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ = comdat any

$_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink17InterpolationTypeD2Ev = comdat any

$_ZN5blink17InterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN5blink21InheritedColorCheckerD0Ev = comdat any

$_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZNK5blink21InheritedColorChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE = comdat any

$_ZN5blink17InterpolationType17ConversionCheckerD2Ev = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_21InheritedColorCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZTVN5blink17InterpolationTypeE = comdat any

$_ZTVN5blink21InheritedColorCheckerE = comdat any

@_ZTVN5blink25CSSColorInterpolationTypeE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSInterpolationType"*)* @_ZN5blink20CSSInterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSColorInterpolationType"*)* @_ZN5blink25CSSColorInterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)* @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"class.blink::CSSColorInterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink25CSSColorInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSColorInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)* @_ZNK5blink25CSSColorInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSColorInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1421"*)* @_ZNK5blink25CSSColorInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSColorInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1421"*)* @_ZNK5blink25CSSColorInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSColorInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1421"*)* @_ZNK5blink25CSSColorInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSColorInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink25CSSColorInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.1421"*)* @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSColorInterpolationType"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink25CSSColorInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::CSSColorInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink25CSSColorInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZTVN5blink18InterpolableNumberE = external unnamed_addr constant { [20 x i8*] }, align 8
@_ZTVN5blink20CSSInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink17InterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink16InterpolableListE = external unnamed_addr constant { [20 x i8*] }, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [147 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolableValue, std::__1::default_delete<blink::InterpolableValue> >]\00", align 1
@_ZTVN5blink21InheritedColorCheckerE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType::ConversionChecker"*)* @_ZN5blink17InterpolationType17ConversionCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::InheritedColorChecker"*)* @_ZN5blink21InheritedColorCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*), i8* bitcast (i1 (%"class.blink::InheritedColorChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink21InheritedColorChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolationType::ConversionChecker, std::__1::default_delete<blink::InterpolationType::ConversionChecker> >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorERKNS_5ColorE(%"class.blink::Color"* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 24) #9
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds i8, i8* %2, i64 16
  %6 = bitcast i8* %5 to i32*
  %7 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 8) #9
  %8 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %7, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #9
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast i8* %4 to i64*
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = lshr i64 %7, 3
  %12 = trunc i64 %11 to i32
  store i32 %12, i32* %6, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 20
  %14 = bitcast i8* %13 to i32*
  store i32 8, i32* %14, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 64, i1 false) #9
  %15 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %0, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = lshr i32 %16, 16
  %18 = and i32 %17, 255
  %19 = lshr i32 %16, 24
  %20 = mul nuw nsw i32 %18, %19
  %21 = tail call noalias i8* @malloc(i64 16) #9
  %22 = sitofp i32 %20 to double
  %23 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %21, i64 8
  %25 = bitcast i8* %24 to double*
  store double %22, double* %25, align 8
  %26 = ptrtoint i8* %21 to i64
  %27 = bitcast i8* %4 to %"class.WTF::Vector"*
  %28 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 0) #9
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  store i64 %26, i64* %31, align 8
  %32 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %1
  %34 = bitcast %"class.blink::InterpolableValue"* %30 to void (%"class.blink::InterpolableValue"*)***
  %35 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %35, i64 1
  %37 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %36, align 8
  tail call void %37(%"class.blink::InterpolableValue"* nonnull %30) #9
  br label %38

38:                                               ; preds = %33, %1
  %39 = load i32, i32* %15, align 4
  %40 = lshr i32 %39, 8
  %41 = and i32 %40, 255
  %42 = lshr i32 %39, 24
  %43 = mul nuw nsw i32 %41, %42
  %44 = tail call noalias i8* @malloc(i64 16) #9
  %45 = sitofp i32 %43 to double
  %46 = bitcast i8* %44 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds i8, i8* %44, i64 8
  %48 = bitcast i8* %47 to double*
  store double %45, double* %48, align 8
  %49 = ptrtoint i8* %44 to i64
  %50 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 1) #9
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.blink::InterpolableValue"* %52, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %38
  %56 = bitcast %"class.blink::InterpolableValue"* %52 to void (%"class.blink::InterpolableValue"*)***
  %57 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %57, i64 1
  %59 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %58, align 8
  tail call void %59(%"class.blink::InterpolableValue"* nonnull %52) #9
  br label %60

60:                                               ; preds = %55, %38
  %61 = load i32, i32* %15, align 4
  %62 = and i32 %61, 255
  %63 = lshr i32 %61, 24
  %64 = mul nuw nsw i32 %62, %63
  %65 = tail call noalias i8* @malloc(i64 16) #9
  %66 = sitofp i32 %64 to double
  %67 = bitcast i8* %65 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds i8, i8* %65, i64 8
  %69 = bitcast i8* %68 to double*
  store double %66, double* %69, align 8
  %70 = ptrtoint i8* %65 to i64
  %71 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 2) #9
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %72, align 8
  %74 = bitcast %"class.std::__1::unique_ptr"* %71 to i64*
  store i64 %70, i64* %74, align 8
  %75 = icmp eq %"class.blink::InterpolableValue"* %73, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %60
  %77 = bitcast %"class.blink::InterpolableValue"* %73 to void (%"class.blink::InterpolableValue"*)***
  %78 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %78, i64 1
  %80 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %79, align 8
  tail call void %80(%"class.blink::InterpolableValue"* nonnull %73) #9
  br label %81

81:                                               ; preds = %76, %60
  %82 = load i32, i32* %15, align 4
  %83 = lshr i32 %82, 24
  %84 = tail call noalias i8* @malloc(i64 16) #9
  %85 = sitofp i32 %83 to double
  %86 = bitcast i8* %84 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %87 = getelementptr inbounds i8, i8* %84, i64 8
  %88 = bitcast i8* %87 to double*
  store double %85, double* %88, align 8
  %89 = ptrtoint i8* %84 to i64
  %90 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 3) #9
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %91, align 8
  %93 = bitcast %"class.std::__1::unique_ptr"* %90 to i64*
  store i64 %89, i64* %93, align 8
  %94 = icmp eq %"class.blink::InterpolableValue"* %92, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %81
  %96 = bitcast %"class.blink::InterpolableValue"* %92 to void (%"class.blink::InterpolableValue"*)***
  %97 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %97, i64 1
  %99 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %98, align 8
  tail call void %99(%"class.blink::InterpolableValue"* nonnull %92) #9
  br label %100

100:                                              ; preds = %95, %81
  %101 = tail call noalias i8* @malloc(i64 16) #9
  %102 = bitcast i8* %101 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds i8, i8* %101, i64 8
  %104 = bitcast i8* %103 to double*
  store double 0.000000e+00, double* %104, align 8
  %105 = ptrtoint i8* %101 to i64
  %106 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 4) #9
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %106, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %107, align 8
  %109 = bitcast %"class.std::__1::unique_ptr"* %106 to i64*
  store i64 %105, i64* %109, align 8
  %110 = icmp eq %"class.blink::InterpolableValue"* %108, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %100
  %112 = bitcast %"class.blink::InterpolableValue"* %108 to void (%"class.blink::InterpolableValue"*)***
  %113 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %113, i64 1
  %115 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %114, align 8
  tail call void %115(%"class.blink::InterpolableValue"* nonnull %108) #9
  br label %116

116:                                              ; preds = %111, %100
  %117 = tail call noalias i8* @malloc(i64 16) #9
  %118 = bitcast i8* %117 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %118, align 8
  %119 = getelementptr inbounds i8, i8* %117, i64 8
  %120 = bitcast i8* %119 to double*
  store double 0.000000e+00, double* %120, align 8
  %121 = ptrtoint i8* %117 to i64
  %122 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 5) #9
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  store i64 %121, i64* %125, align 8
  %126 = icmp eq %"class.blink::InterpolableValue"* %124, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %116
  %128 = bitcast %"class.blink::InterpolableValue"* %124 to void (%"class.blink::InterpolableValue"*)***
  %129 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %129, i64 1
  %131 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %130, align 8
  tail call void %131(%"class.blink::InterpolableValue"* nonnull %124) #9
  br label %132

132:                                              ; preds = %127, %116
  %133 = tail call noalias i8* @malloc(i64 16) #9
  %134 = bitcast i8* %133 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %134, align 8
  %135 = getelementptr inbounds i8, i8* %133, i64 8
  %136 = bitcast i8* %135 to double*
  store double 0.000000e+00, double* %136, align 8
  %137 = ptrtoint i8* %133 to i64
  %138 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 6) #9
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %139, align 8
  %141 = bitcast %"class.std::__1::unique_ptr"* %138 to i64*
  store i64 %137, i64* %141, align 8
  %142 = icmp eq %"class.blink::InterpolableValue"* %140, null
  br i1 %142, label %148, label %143

143:                                              ; preds = %132
  %144 = bitcast %"class.blink::InterpolableValue"* %140 to void (%"class.blink::InterpolableValue"*)***
  %145 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %145, i64 1
  %147 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %146, align 8
  tail call void %147(%"class.blink::InterpolableValue"* nonnull %140) #9
  br label %148

148:                                              ; preds = %143, %132
  %149 = tail call noalias i8* @malloc(i64 16) #9
  %150 = bitcast i8* %149 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8
  %151 = getelementptr inbounds i8, i8* %149, i64 8
  %152 = bitcast i8* %151 to double*
  store double 0.000000e+00, double* %152, align 8
  %153 = ptrtoint i8* %149 to i64
  %154 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 7) #9
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %154, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %155, align 8
  %157 = bitcast %"class.std::__1::unique_ptr"* %154 to i64*
  store i64 %153, i64* %157, align 8
  %158 = icmp eq %"class.blink::InterpolableValue"* %156, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %148
  %160 = bitcast %"class.blink::InterpolableValue"* %156 to void (%"class.blink::InterpolableValue"*)***
  %161 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %161, i64 1
  %163 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %162, align 8
  tail call void %163(%"class.blink::InterpolableValue"* nonnull %156) #9
  br label %164

164:                                              ; preds = %148, %159
  %165 = bitcast i8* %2 to %"class.blink::InterpolableValue"*
  ret %"class.blink::InterpolableValue"* %165
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorENS_10CSSValueIDE(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Color", align 4
  %3 = alloca %"class.blink::Color", align 4
  switch i32 %0, label %22 [
    i32 147, label %4
    i32 107, label %6
    i32 106, label %8
    i32 149, label %10
    i32 146, label %12
  ]

4:                                                ; preds = %1
  %5 = tail call fastcc %"class.blink::InterpolableValue"* @_ZN5blinkL31CreateInterpolableColorForIndexENS_22InterpolableColorIndexE(i32 4)
  br label %27

6:                                                ; preds = %1
  %7 = tail call fastcc %"class.blink::InterpolableValue"* @_ZN5blinkL31CreateInterpolableColorForIndexENS_22InterpolableColorIndexE(i32 5)
  br label %27

8:                                                ; preds = %1
  %9 = tail call fastcc %"class.blink::InterpolableValue"* @_ZN5blinkL31CreateInterpolableColorForIndexENS_22InterpolableColorIndexE(i32 6)
  br label %27

10:                                               ; preds = %1
  %11 = tail call fastcc %"class.blink::InterpolableValue"* @_ZN5blinkL31CreateInterpolableColorForIndexENS_22InterpolableColorIndexE(i32 7)
  br label %27

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::Color"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #9
  %14 = tail call dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() #9
  %15 = bitcast %"class.blink::LayoutTheme"* %14 to i32 (%"class.blink::LayoutTheme"*, i32)***
  %16 = load i32 (%"class.blink::LayoutTheme"*, i32)**, i32 (%"class.blink::LayoutTheme"*, i32)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.blink::LayoutTheme"*, i32)*, i32 (%"class.blink::LayoutTheme"*, i32)** %16, i64 11
  %18 = load i32 (%"class.blink::LayoutTheme"*, i32)*, i32 (%"class.blink::LayoutTheme"*, i32)** %17, align 8
  %19 = tail call i32 %18(%"class.blink::LayoutTheme"* %14, i32 0) #9
  %20 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %2, i64 0, i32 0
  store i32 %19, i32* %20, align 4
  %21 = call %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorERKNS_5ColorE(%"class.blink::Color"* nonnull dereferenceable(4) %2)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #9
  br label %27

22:                                               ; preds = %1
  %23 = bitcast %"class.blink::Color"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #9
  %24 = tail call i32 @_ZN5blink10StyleColor16ColorFromKeywordENS_10CSSValueIDENS_5mojom11ColorSchemeE(i32 %0, i32 0) #9
  %25 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %3, i64 0, i32 0
  store i32 %24, i32* %25, align 4
  %26 = call %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorERKNS_5ColorE(%"class.blink::Color"* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #9
  br label %27

27:                                               ; preds = %22, %12, %10, %8, %6, %4
  %28 = phi %"class.blink::InterpolableValue"* [ %26, %22 ], [ %21, %12 ], [ %11, %10 ], [ %9, %8 ], [ %7, %6 ], [ %5, %4 ]
  ret %"class.blink::InterpolableValue"* %28
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::InterpolableValue"* @_ZN5blinkL31CreateInterpolableColorForIndexENS_22InterpolableColorIndexE(i32) unnamed_addr #0 {
  %2 = tail call noalias i8* @malloc(i64 24) #9
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds i8, i8* %2, i64 16
  %6 = bitcast i8* %5 to i32*
  %7 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 8) #9
  %8 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %7, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #9
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast i8* %4 to i64*
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = lshr i64 %7, 3
  %12 = trunc i64 %11 to i32
  store i32 %12, i32* %6, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 20
  %14 = bitcast i8* %13 to i32*
  store i32 8, i32* %14, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 64, i1 false) #9
  %15 = bitcast i8* %4 to %"class.WTF::Vector"*
  br label %18

16:                                               ; preds = %37
  %17 = bitcast i8* %2 to %"class.blink::InterpolableValue"*
  ret %"class.blink::InterpolableValue"* %17

18:                                               ; preds = %37, %1
  %19 = phi i32 [ 0, %1 ], [ %38, %37 ]
  %20 = icmp eq i32 %19, %0
  %21 = tail call noalias i8* @malloc(i64 16) #9
  %22 = uitofp i1 %20 to double
  %23 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %21, i64 8
  %25 = bitcast i8* %24 to double*
  store double %22, double* %25, align 8
  %26 = ptrtoint i8* %21 to i64
  %27 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 %19) #9
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %28, align 8
  %30 = bitcast %"class.std::__1::unique_ptr"* %27 to i64*
  store i64 %26, i64* %30, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %29, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %18
  %33 = bitcast %"class.blink::InterpolableValue"* %29 to void (%"class.blink::InterpolableValue"*)***
  %34 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %34, i64 1
  %36 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %35, align 8
  tail call void %36(%"class.blink::InterpolableValue"* nonnull %29) #9
  br label %37

37:                                               ; preds = %32, %18
  %38 = add nuw nsw i32 %19, 1
  %39 = icmp eq i32 %38, 8
  br i1 %39, label %16, label %18
}

declare dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() local_unnamed_addr #2

declare i32 @_ZN5blink10StyleColor16ColorFromKeywordENS_10CSSValueIDENS_5mojom11ColorSchemeE(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorERKNS_10StyleColorE(%"class.blink::StyleColor"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Color", align 4
  %3 = tail call i32 @_ZNK5blink10StyleColor21EffectiveColorKeywordEv(%"class.blink::StyleColor"* %0) #9
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleColor", %"class.blink::StyleColor"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = tail call %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorENS_10CSSValueIDE(i32 %7)
  br label %15

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::Color"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.blink::StyleColor", %"class.blink::StyleColor"* %0, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %2, i64 0, i32 0
  store i32 %12, i32* %13, align 4
  %14 = call %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorERKNS_5ColorE(%"class.blink::Color"* nonnull dereferenceable(4) %2)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #9
  br label %15

15:                                               ; preds = %9, %5
  %16 = phi %"class.blink::InterpolableValue"* [ %14, %9 ], [ %8, %5 ]
  ret %"class.blink::InterpolableValue"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType28MaybeCreateInterpolableColorERKNS_8CSSValueE(%"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Color", align 4
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 3
  %6 = icmp eq %"class.blink::CSSValue"* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::Color"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 1, i32 1
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %2, i64 0, i32 0
  store i32 %12, i32* %13, align 4
  %14 = call %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorERKNS_5ColorE(%"class.blink::Color"* nonnull dereferenceable(4) %2)
  %15 = ptrtoint %"class.blink::InterpolableValue"* %14 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9
  br label %28

16:                                               ; preds = %1
  %17 = icmp ne i8 %4, 2
  %18 = or i1 %6, %17
  br i1 %18, label %28, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 1, i32 1
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = tail call zeroext i1 @_ZN5blink10StyleColor14IsColorKeywordENS_10CSSValueIDE(i32 %22) #9
  br i1 %23, label %24, label %28

24:                                               ; preds = %19
  %25 = load i32, i32* %21, align 4
  %26 = tail call %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorENS_10CSSValueIDE(i32 %25)
  %27 = ptrtoint %"class.blink::InterpolableValue"* %26 to i64
  br label %28

28:                                               ; preds = %19, %16, %24, %8
  %29 = phi i64 [ %27, %24 ], [ %15, %8 ], [ 0, %16 ], [ 0, %19 ]
  %30 = inttoptr i64 %29 to %"class.blink::InterpolableValue"*
  ret %"class.blink::InterpolableValue"* %30
}

declare zeroext i1 @_ZN5blink10StyleColor14IsColorKeywordENS_10CSSValueIDE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink25CSSColorInterpolationType7GetRGBAERKNS_17InterpolableValueE(%"class.blink::InterpolableValue"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %0, i64 1
  %3 = bitcast %"class.blink::InterpolableValue"* %2 to %"class.WTF::Vector"*
  %4 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 0) #9
  %5 = bitcast %"class.std::__1::unique_ptr"* %4 to %"class.blink::InterpolableNumber"**
  %6 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %6, i64 0, i32 1
  %8 = load double, double* %7, align 8
  %9 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 1) #9
  %10 = bitcast %"class.std::__1::unique_ptr"* %9 to %"class.blink::InterpolableNumber"**
  %11 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %11, i64 0, i32 1
  %13 = load double, double* %12, align 8
  %14 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 2) #9
  %15 = bitcast %"class.std::__1::unique_ptr"* %14 to %"class.blink::InterpolableNumber"**
  %16 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %16, i64 0, i32 1
  %18 = load double, double* %17, align 8
  %19 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 3) #9
  %20 = bitcast %"class.std::__1::unique_ptr"* %19 to %"class.blink::InterpolableNumber"**
  %21 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %21, i64 0, i32 1
  %23 = load double, double* %22, align 8
  %24 = fdiv double %8, %23
  %25 = tail call double @llvm.round.f64(double %24)
  %26 = fptosi double %25 to i32
  %27 = fdiv double %13, %23
  %28 = tail call double @llvm.round.f64(double %27)
  %29 = fptosi double %28 to i32
  %30 = fdiv double %18, %23
  %31 = tail call double @llvm.round.f64(double %30)
  %32 = fptosi double %31 to i32
  %33 = fptosi double %23 to i32
  %34 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 %26, i32 %29, i32 %32, i32 %33) #9
  ret i32 %34
}

declare i32 @_ZN5blink8MakeRGBAEiiii(i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink25CSSColorInterpolationType24ResolveInterpolableColorERKNS_17InterpolableValueERKNS_18StyleResolverStateEbb(%"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::StyleColor"*
  %7 = alloca %"struct.blink::OptionalStyleColor", align 8
  %8 = alloca %"struct.blink::OptionalStyleColor", align 8
  %9 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %0, i64 1
  %10 = bitcast %"class.blink::InterpolableValue"* %9 to %"class.WTF::Vector"*
  %11 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 0) #9
  %12 = bitcast %"class.std::__1::unique_ptr"* %11 to %"class.blink::InterpolableNumber"**
  %13 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %13, i64 0, i32 1
  %15 = load double, double* %14, align 8
  %16 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 1) #9
  %17 = bitcast %"class.std::__1::unique_ptr"* %16 to %"class.blink::InterpolableNumber"**
  %18 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %18, i64 0, i32 1
  %20 = load double, double* %19, align 8
  %21 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 2) #9
  %22 = bitcast %"class.std::__1::unique_ptr"* %21 to %"class.blink::InterpolableNumber"**
  %23 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %23, i64 0, i32 1
  %25 = load double, double* %24, align 8
  %26 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 3) #9
  %27 = bitcast %"class.std::__1::unique_ptr"* %26 to %"class.blink::InterpolableNumber"**
  %28 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %28, i64 0, i32 1
  %30 = load double, double* %29, align 8
  %31 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 4) #9
  %32 = bitcast %"class.std::__1::unique_ptr"* %31 to %"class.blink::InterpolableNumber"**
  %33 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %33, i64 0, i32 1
  %35 = load double, double* %34, align 8
  %36 = fcmp une double %35, 0.000000e+00
  %37 = insertelement <4 x double> undef, double %25, i32 0
  %38 = insertelement <4 x double> %37, double %30, i32 1
  %39 = insertelement <4 x double> %38, double %20, i32 2
  %40 = insertelement <4 x double> %39, double %15, i32 3
  br i1 %36, label %41, label %103

41:                                               ; preds = %4
  %42 = select i1 %2, { i64, i32 } (%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*)* @_ZN5blink22ColorPropertyFunctions15GetVisitedColorERKNS_11CSSPropertyERKNS_13ComputedStyleE, { i64, i32 } (%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*)* @_ZN5blink22ColorPropertyFunctions17GetUnvisitedColorERKNS_11CSSPropertyERKNS_13ComputedStyleE
  %43 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #9
  store i64 631360192512, i64* %5, align 8
  br i1 %3, label %44, label %59

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %45)
  %46 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 427) #9
  %47 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %48 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %47, align 8
  %49 = tail call { i64, i32 } %42(%"class.blink::CSSProperty"* dereferenceable(24) %46, %"class.blink::ComputedStyle"* dereferenceable(104) %48) #9, !callees !2
  %50 = extractvalue { i64, i32 } %49, 0
  %51 = extractvalue { i64, i32 } %49, 1
  %52 = bitcast %"struct.blink::OptionalStyleColor"* %7 to i64*
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %7, i64 0, i32 1, i32 1
  store i32 %51, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %7, i64 0, i32 1
  %55 = bitcast %"class.blink::StyleColor"* %54 to i64*
  %56 = load i64, i64* %55, align 4
  store i64 %56, i64* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %45)
  %57 = and i64 %56, -4294967296
  %58 = icmp eq i64 %57, 631360192512
  br i1 %58, label %59, label %72

59:                                               ; preds = %41, %44
  %60 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %60)
  %61 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 2) #9
  %62 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %63 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %62, align 8
  %64 = tail call { i64, i32 } %42(%"class.blink::CSSProperty"* dereferenceable(24) %61, %"class.blink::ComputedStyle"* dereferenceable(104) %63) #9, !callees !2
  %65 = extractvalue { i64, i32 } %64, 0
  %66 = extractvalue { i64, i32 } %64, 1
  %67 = bitcast %"struct.blink::OptionalStyleColor"* %8 to i64*
  store i64 %65, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %8, i64 0, i32 1, i32 1
  store i32 %66, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %8, i64 0, i32 1
  %70 = bitcast %"class.blink::StyleColor"* %69 to i64*
  %71 = load i64, i64* %70, align 4
  store i64 %71, i64* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %60)
  br label %72

72:                                               ; preds = %59, %44
  %73 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %74 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %74, i64 0, i32 0, i32 9
  %76 = bitcast [20 x i8]* %75 to i160*
  %77 = load i160, i160* %76, align 8
  %78 = lshr i160 %77, 114
  %79 = trunc i160 %78 to i32
  %80 = and i32 %79, 1
  %81 = call i32 @_ZNK5blink10StyleColor7ResolveENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::StyleColor"* nonnull %6, i32 0, i32 %80, i1 zeroext false) #9
  %82 = lshr i32 %81, 24
  %83 = sitofp i32 %82 to double
  %84 = lshr i32 %81, 16
  %85 = and i32 %84, 255
  %86 = sitofp i32 %85 to double
  %87 = fmul double %35, %86
  %88 = lshr i32 %81, 8
  %89 = and i32 %88, 255
  %90 = sitofp i32 %89 to double
  %91 = fmul double %35, %90
  %92 = and i32 %81, 255
  %93 = sitofp i32 %92 to double
  %94 = fmul double %35, %93
  %95 = insertelement <4 x double> undef, double %94, i32 0
  %96 = insertelement <4 x double> %95, double %35, i32 1
  %97 = insertelement <4 x double> %96, double %91, i32 2
  %98 = insertelement <4 x double> %97, double %87, i32 3
  %99 = insertelement <4 x double> undef, double %83, i32 0
  %100 = shufflevector <4 x double> %99, <4 x double> undef, <4 x i32> zeroinitializer
  %101 = fmul <4 x double> %98, %100
  %102 = fadd <4 x double> %40, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  br label %103

103:                                              ; preds = %72, %4
  %104 = phi <4 x double> [ %102, %72 ], [ %40, %4 ]
  %105 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 1
  %106 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %106, i64 0, i32 62
  %108 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 5) #9
  %109 = bitcast %"class.std::__1::unique_ptr"* %108 to %"class.blink::InterpolableNumber"**
  %110 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %110, i64 0, i32 1
  %112 = load double, double* %111, align 8
  %113 = fcmp une double %112, 0.000000e+00
  br i1 %113, label %114, label %139

114:                                              ; preds = %103
  %115 = call dereferenceable(4) %"class.blink::Color"* @_ZNK5blink14TextLinkColors15ActiveLinkColorEv(%"class.blink::TextLinkColors"* %107) #9
  %116 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = lshr i32 %117, 24
  %119 = sitofp i32 %118 to double
  %120 = lshr i32 %117, 16
  %121 = and i32 %120, 255
  %122 = sitofp i32 %121 to double
  %123 = fmul double %112, %122
  %124 = lshr i32 %117, 8
  %125 = and i32 %124, 255
  %126 = sitofp i32 %125 to double
  %127 = fmul double %112, %126
  %128 = and i32 %117, 255
  %129 = sitofp i32 %128 to double
  %130 = fmul double %112, %129
  %131 = insertelement <4 x double> undef, double %130, i32 0
  %132 = insertelement <4 x double> %131, double %112, i32 1
  %133 = insertelement <4 x double> %132, double %127, i32 2
  %134 = insertelement <4 x double> %133, double %123, i32 3
  %135 = insertelement <4 x double> undef, double %119, i32 0
  %136 = shufflevector <4 x double> %135, <4 x double> undef, <4 x i32> zeroinitializer
  %137 = fmul <4 x double> %134, %136
  %138 = fadd <4 x double> %104, %137
  br label %139

139:                                              ; preds = %114, %103
  %140 = phi <4 x double> [ %138, %114 ], [ %104, %103 ]
  %141 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 6) #9
  %142 = bitcast %"class.std::__1::unique_ptr"* %141 to %"class.blink::InterpolableNumber"**
  %143 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %143, i64 0, i32 1
  %145 = load double, double* %144, align 8
  %146 = fcmp une double %145, 0.000000e+00
  br i1 %146, label %147, label %177

147:                                              ; preds = %139
  br i1 %2, label %148, label %150

148:                                              ; preds = %147
  %149 = call dereferenceable(4) %"class.blink::Color"* @_ZNK5blink14TextLinkColors16VisitedLinkColorEv(%"class.blink::TextLinkColors"* %107) #9
  br label %152

150:                                              ; preds = %147
  %151 = call dereferenceable(4) %"class.blink::Color"* @_ZNK5blink14TextLinkColors9LinkColorEv(%"class.blink::TextLinkColors"* %107) #9
  br label %152

152:                                              ; preds = %150, %148
  %153 = phi %"class.blink::Color"* [ %149, %148 ], [ %151, %150 ]
  %154 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %153, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = lshr i32 %155, 24
  %157 = sitofp i32 %156 to double
  %158 = lshr i32 %155, 16
  %159 = and i32 %158, 255
  %160 = sitofp i32 %159 to double
  %161 = fmul double %145, %160
  %162 = lshr i32 %155, 8
  %163 = and i32 %162, 255
  %164 = sitofp i32 %163 to double
  %165 = fmul double %145, %164
  %166 = and i32 %155, 255
  %167 = sitofp i32 %166 to double
  %168 = fmul double %145, %167
  %169 = insertelement <4 x double> undef, double %168, i32 0
  %170 = insertelement <4 x double> %169, double %145, i32 1
  %171 = insertelement <4 x double> %170, double %165, i32 2
  %172 = insertelement <4 x double> %171, double %161, i32 3
  %173 = insertelement <4 x double> undef, double %157, i32 0
  %174 = shufflevector <4 x double> %173, <4 x double> undef, <4 x i32> zeroinitializer
  %175 = fmul <4 x double> %172, %174
  %176 = fadd <4 x double> %140, %175
  br label %177

177:                                              ; preds = %152, %139
  %178 = phi <4 x double> [ %176, %152 ], [ %140, %139 ]
  %179 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 7) #9
  %180 = bitcast %"class.std::__1::unique_ptr"* %179 to %"class.blink::InterpolableNumber"**
  %181 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %181, i64 0, i32 1
  %183 = load double, double* %182, align 8
  %184 = fcmp une double %183, 0.000000e+00
  br i1 %184, label %185, label %208

185:                                              ; preds = %177
  %186 = call i32 @_ZNK5blink14TextLinkColors9TextColorEv(%"class.blink::TextLinkColors"* %107) #9
  %187 = lshr i32 %186, 24
  %188 = sitofp i32 %187 to double
  %189 = lshr i32 %186, 16
  %190 = and i32 %189, 255
  %191 = sitofp i32 %190 to double
  %192 = fmul double %183, %191
  %193 = lshr i32 %186, 8
  %194 = and i32 %193, 255
  %195 = sitofp i32 %194 to double
  %196 = fmul double %183, %195
  %197 = and i32 %186, 255
  %198 = sitofp i32 %197 to double
  %199 = fmul double %183, %198
  %200 = insertelement <4 x double> undef, double %199, i32 0
  %201 = insertelement <4 x double> %200, double %183, i32 1
  %202 = insertelement <4 x double> %201, double %196, i32 2
  %203 = insertelement <4 x double> %202, double %192, i32 3
  %204 = insertelement <4 x double> undef, double %188, i32 0
  %205 = shufflevector <4 x double> %204, <4 x double> undef, <4 x i32> zeroinitializer
  %206 = fmul <4 x double> %203, %205
  %207 = fadd <4 x double> %178, %206
  br label %208

208:                                              ; preds = %185, %177
  %209 = phi <4 x double> [ %207, %185 ], [ %178, %177 ]
  %210 = extractelement <4 x double> %209, i32 1
  %211 = fcmp ult double %210, 2.550000e+02
  %212 = fcmp ole double %210, 0.000000e+00
  %213 = select i1 %212, double 0.000000e+00, double %210
  %214 = select i1 %211, double %213, double 2.550000e+02
  %215 = fcmp oeq double %214, 0.000000e+00
  br i1 %215, label %256, label %216

216:                                              ; preds = %208
  %217 = extractelement <4 x double> %209, i32 3
  %218 = fdiv double %217, %214
  %219 = call double @llvm.round.f64(double %218)
  %220 = fcmp ult double %219, 0x41DFFFFFFFC00000
  br i1 %220, label %221, label %225

221:                                              ; preds = %216
  %222 = fcmp ugt double %219, 0xC1E0000000000000
  br i1 %222, label %223, label %225

223:                                              ; preds = %221
  %224 = fptosi double %219 to i32
  br label %225

225:                                              ; preds = %216, %221, %223
  %226 = phi i32 [ %224, %223 ], [ 2147483647, %216 ], [ -2147483648, %221 ]
  %227 = extractelement <4 x double> %209, i32 2
  %228 = fdiv double %227, %214
  %229 = call double @llvm.round.f64(double %228)
  %230 = fcmp ult double %229, 0x41DFFFFFFFC00000
  br i1 %230, label %231, label %235

231:                                              ; preds = %225
  %232 = fcmp ugt double %229, 0xC1E0000000000000
  br i1 %232, label %233, label %235

233:                                              ; preds = %231
  %234 = fptosi double %229 to i32
  br label %235

235:                                              ; preds = %225, %231, %233
  %236 = phi i32 [ %234, %233 ], [ 2147483647, %225 ], [ -2147483648, %231 ]
  %237 = extractelement <4 x double> %209, i32 0
  %238 = fdiv double %237, %214
  %239 = call double @llvm.round.f64(double %238)
  %240 = fcmp ult double %239, 0x41DFFFFFFFC00000
  br i1 %240, label %241, label %245

241:                                              ; preds = %235
  %242 = fcmp ugt double %239, 0xC1E0000000000000
  br i1 %242, label %243, label %245

243:                                              ; preds = %241
  %244 = fptosi double %239 to i32
  br label %245

245:                                              ; preds = %235, %241, %243
  %246 = phi i32 [ %244, %243 ], [ 2147483647, %235 ], [ -2147483648, %241 ]
  %247 = call double @llvm.round.f64(double %214)
  %248 = fcmp ult double %247, 0x41DFFFFFFFC00000
  br i1 %248, label %249, label %253

249:                                              ; preds = %245
  %250 = fcmp ugt double %247, 0xC1E0000000000000
  br i1 %250, label %251, label %253

251:                                              ; preds = %249
  %252 = fptosi double %247 to i32
  br label %253

253:                                              ; preds = %245, %249, %251
  %254 = phi i32 [ %252, %251 ], [ 2147483647, %245 ], [ -2147483648, %249 ]
  %255 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 %226, i32 %236, i32 %246, i32 %254) #9
  br label %256

256:                                              ; preds = %208, %253
  %257 = phi i32 [ %255, %253 ], [ 0, %208 ]
  ret i32 %257
}

declare { i64, i32 } @_ZN5blink22ColorPropertyFunctions15GetVisitedColorERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare { i64, i32 } @_ZN5blink22ColorPropertyFunctions17GetUnvisitedColorERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZNK5blink10StyleColor7ResolveENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::StyleColor"*, i32, i32, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(4) %"class.blink::Color"* @_ZNK5blink14TextLinkColors15ActiveLinkColorEv(%"class.blink::TextLinkColors"*) local_unnamed_addr #2

declare dereferenceable(4) %"class.blink::Color"* @_ZNK5blink14TextLinkColors16VisitedLinkColorEv(%"class.blink::TextLinkColors"*) local_unnamed_addr #2

declare dereferenceable(4) %"class.blink::Color"* @_ZNK5blink14TextLinkColors9LinkColorEv(%"class.blink::TextLinkColors"*) local_unnamed_addr #2

declare i32 @_ZNK5blink14TextLinkColors9TextColorEv(%"class.blink::TextLinkColors"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25CSSColorInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSColorInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* nocapture readnone dereferenceable(16), %"class.WTF::Vector.1421"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::OptionalStyleColor", align 4
  %6 = alloca %"struct.blink::OptionalStyleColor", align 4
  %7 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #9
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %5, i64 0, i32 1
  %9 = bitcast %"class.blink::StyleColor"* %8 to i64*
  store i64 0, i64* %9, align 4
  %10 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #9
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %6, i64 0, i32 1
  %12 = bitcast %"class.blink::StyleColor"* %11 to i64*
  store i64 0, i64* %12, align 4
  call void @_ZNK5blink25CSSColorInterpolationType21ConvertStyleColorPairERKNS_18OptionalStyleColorES3_(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSColorInterpolationType"* undef, %"struct.blink::OptionalStyleColor"* nonnull dereferenceable(12) %5, %"struct.blink::OptionalStyleColor"* nonnull dereferenceable(12) %6)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25CSSColorInterpolationType21ConvertStyleColorPairERKNS_18OptionalStyleColorES3_(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSColorInterpolationType"* nocapture readnone, %"struct.blink::OptionalStyleColor"* dereferenceable(12), %"struct.blink::OptionalStyleColor"* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Color", align 4
  %6 = alloca %"class.blink::Color", align 4
  %7 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %2, i64 0, i32 0
  %8 = load i8, i8* %7, align 4, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %3, i64 0, i32 0
  %12 = load i8, i8* %11, align 4, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10, %4
  %15 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #9
  br label %89

16:                                               ; preds = %10
  %17 = tail call noalias i8* @malloc(i64 24) #9
  %18 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = getelementptr inbounds i8, i8* %17, i64 16
  %21 = bitcast i8* %20 to i32*
  %22 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 2) #9
  %23 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %22, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #9
  %24 = ptrtoint i8* %23 to i64
  %25 = bitcast i8* %19 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = lshr i64 %22, 3
  %27 = trunc i64 %26 to i32
  store i32 %27, i32* %21, align 8
  %28 = getelementptr inbounds i8, i8* %17, i64 20
  %29 = bitcast i8* %28 to i32*
  store i32 2, i32* %29, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #9
  %30 = ptrtoint i8* %17 to i64
  %31 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %2, i64 0, i32 1
  %32 = tail call i32 @_ZNK5blink10StyleColor21EffectiveColorKeywordEv(%"class.blink::StyleColor"* %31) #9
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %16
  %35 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %2, i64 0, i32 1, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = tail call %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorENS_10CSSValueIDE(i32 %36) #9
  br label %44

38:                                               ; preds = %16
  %39 = bitcast %"class.blink::Color"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.blink::StyleColor", %"class.blink::StyleColor"* %31, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %6, i64 0, i32 0
  store i32 %41, i32* %42, align 4
  %43 = call %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorERKNS_5ColorE(%"class.blink::Color"* nonnull dereferenceable(4) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #9
  br label %44

44:                                               ; preds = %34, %38
  %45 = phi %"class.blink::InterpolableValue"* [ %43, %38 ], [ %37, %34 ]
  %46 = ptrtoint %"class.blink::InterpolableValue"* %45 to i64
  %47 = bitcast i8* %19 to %"class.WTF::Vector"*
  %48 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %47, i32 0) #9
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %49, align 8
  %51 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  store i64 %46, i64* %51, align 8
  %52 = icmp eq %"class.blink::InterpolableValue"* %50, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %44
  %54 = bitcast %"class.blink::InterpolableValue"* %50 to void (%"class.blink::InterpolableValue"*)***
  %55 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %55, i64 1
  %57 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %56, align 8
  tail call void %57(%"class.blink::InterpolableValue"* nonnull %50) #9
  br label %58

58:                                               ; preds = %44, %53
  %59 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %3, i64 0, i32 1
  %60 = tail call i32 @_ZNK5blink10StyleColor21EffectiveColorKeywordEv(%"class.blink::StyleColor"* %59) #9
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %3, i64 0, i32 1, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = tail call %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorENS_10CSSValueIDE(i32 %64) #9
  br label %72

66:                                               ; preds = %58
  %67 = bitcast %"class.blink::Color"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #9
  %68 = getelementptr inbounds %"class.blink::StyleColor", %"class.blink::StyleColor"* %59, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %5, i64 0, i32 0
  store i32 %69, i32* %70, align 4
  %71 = call %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorERKNS_5ColorE(%"class.blink::Color"* nonnull dereferenceable(4) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #9
  br label %72

72:                                               ; preds = %62, %66
  %73 = phi %"class.blink::InterpolableValue"* [ %71, %66 ], [ %65, %62 ]
  %74 = ptrtoint %"class.blink::InterpolableValue"* %73 to i64
  %75 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %47, i32 1) #9
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %76, align 8
  %78 = bitcast %"class.std::__1::unique_ptr"* %75 to i64*
  store i64 %74, i64* %78, align 8
  %79 = icmp eq %"class.blink::InterpolableValue"* %77, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %72
  %81 = bitcast %"class.blink::InterpolableValue"* %77 to void (%"class.blink::InterpolableValue"*)***
  %82 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %82, i64 1
  %84 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %83, align 8
  tail call void %84(%"class.blink::InterpolableValue"* nonnull %77) #9
  br label %85

85:                                               ; preds = %80, %72
  %86 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %30, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %88 = bitcast %class.scoped_refptr.1418* %87 to i64*
  store i64 0, i64* %88, align 8
  br label %89

89:                                               ; preds = %85, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25CSSColorInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSColorInterpolationType"* nocapture readonly, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"class.WTF::Vector.1421"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::OptionalStyleColor", align 8
  %6 = alloca %"struct.blink::OptionalStyleColor", align 4
  %7 = alloca %"struct.blink::OptionalStyleColor", align 4
  %8 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 12, i1 false)
  %9 = getelementptr inbounds %"class.blink::CSSColorInterpolationType", %"class.blink::CSSColorInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %10 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSColorInterpolationType", %"class.blink::CSSColorInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8, !noalias !4
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %42, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4, !noalias !4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %31

21:                                               ; preds = %14
  %22 = zext i32 %20 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #9
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !7

28:                                               ; preds = %21
  tail call void @llvm.trap() #9, !noalias !4
  unreachable

29:                                               ; preds = %21
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %19, align 4, !noalias !4
  br label %31

31:                                               ; preds = %29, %14
  %32 = phi i32 [ %30, %29 ], [ %20, %14 ]
  %33 = load atomic i32, i32* %15 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  %37 = add i32 %32, -1
  store i32 %37, i32* %19, align 4
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i32 [ %37, %36 ], [ %32, %31 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #9
  br label %42

42:                                               ; preds = %4, %38, %41
  %43 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %2, i64 0, i32 1
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  %45 = tail call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %44) #9
  %46 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink13StyleResolver12InitialStyleEv(%"class.blink::StyleResolver"* %45) #9
  %47 = tail call { i64, i32 } @_ZN5blink22ColorPropertyFunctions15GetInitialColorERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.blink::CSSProperty"* dereferenceable(24) %10, %"class.blink::ComputedStyle"* dereferenceable(104) %46) #9
  %48 = extractvalue { i64, i32 } %47, 0
  %49 = extractvalue { i64, i32 } %47, 1
  %50 = bitcast %"struct.blink::OptionalStyleColor"* %5 to i64*
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %5, i64 0, i32 1, i32 1
  store i32 %49, i32* %51, align 8
  %52 = trunc i64 %48 to i8
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %42
  %55 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #9
  br label %66

56:                                               ; preds = %42
  %57 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %57) #9
  store i8 0, i8* %57, align 4
  %58 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %6, i64 0, i32 1
  %59 = bitcast %"class.blink::StyleColor"* %58 to i64*
  %60 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %5, i64 0, i32 1
  %61 = bitcast %"class.blink::StyleColor"* %60 to i64*
  %62 = load i64, i64* %61, align 4
  store i64 %62, i64* %59, align 4
  %63 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %63) #9
  store i8 0, i8* %63, align 4
  %64 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %7, i64 0, i32 1
  %65 = bitcast %"class.blink::StyleColor"* %64 to i64*
  store i64 %62, i64* %65, align 4
  call void @_ZNK5blink25CSSColorInterpolationType21ConvertStyleColorPairERKNS_18OptionalStyleColorES3_(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSColorInterpolationType"* undef, %"struct.blink::OptionalStyleColor"* nonnull dereferenceable(12) %6, %"struct.blink::OptionalStyleColor"* nonnull dereferenceable(12) %7)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %63) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %57) #9
  br label %66

66:                                               ; preds = %56, %54
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8)
  ret void
}

declare { i64, i32 } @_ZN5blink22ColorPropertyFunctions15GetInitialColorERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #2

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink13StyleResolver12InitialStyleEv(%"class.blink::StyleResolver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25CSSColorInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSColorInterpolationType"* nocapture readonly, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"class.WTF::Vector.1421"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::OptionalStyleColor", align 8
  %6 = alloca %"class.std::__1::unique_ptr.1455", align 8
  %7 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %2, i64 0, i32 4, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = icmp eq %"class.blink::ComputedStyle"* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #9
  br label %121

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 12, i1 false)
  %14 = getelementptr inbounds %"class.blink::CSSColorInterpolationType", %"class.blink::CSSColorInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %15 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSColorInterpolationType", %"class.blink::CSSColorInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8, !noalias !8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %47, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !8
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %36

26:                                               ; preds = %19
  %27 = zext i32 %25 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #9
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !7

33:                                               ; preds = %26
  tail call void @llvm.trap() #9, !noalias !8
  unreachable

34:                                               ; preds = %26
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %24, align 4, !noalias !8
  br label %36

36:                                               ; preds = %34, %19
  %37 = phi i32 [ %35, %34 ], [ %25, %19 ]
  %38 = load atomic i32, i32* %20 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  %42 = add i32 %37, -1
  store i32 %42, i32* %24, align 4
  br label %43

43:                                               ; preds = %41, %36
  %44 = phi i32 [ %42, %41 ], [ %37, %36 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %47

47:                                               ; preds = %12, %43, %46
  %48 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %49 = tail call { i64, i32 } @_ZN5blink22ColorPropertyFunctions17GetUnvisitedColorERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.blink::CSSProperty"* dereferenceable(24) %15, %"class.blink::ComputedStyle"* dereferenceable(104) %48) #9
  %50 = extractvalue { i64, i32 } %49, 0
  %51 = extractvalue { i64, i32 } %49, 1
  %52 = bitcast %"struct.blink::OptionalStyleColor"* %5 to i64*
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %5, i64 0, i32 1, i32 1
  store i32 %51, i32* %53, align 4
  %54 = bitcast %"class.std::__1::unique_ptr.1455"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #9
  %55 = bitcast %"class.blink::CSSProperty"** %14 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8, !noalias !11
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %87, label %59

59:                                               ; preds = %47
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4, !noalias !11
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %76

66:                                               ; preds = %59
  %67 = zext i32 %65 to i33
  %68 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %67, i33 1) #9
  %69 = extractvalue { i33, i1 } %68, 1
  %70 = extractvalue { i33, i1 } %68, 0
  %71 = icmp slt i33 %70, 0
  %72 = or i1 %69, %71
  br i1 %72, label %73, label %74, !prof !7

73:                                               ; preds = %66
  tail call void @llvm.trap() #9, !noalias !11
  unreachable

74:                                               ; preds = %66
  %75 = trunc i33 %70 to i32
  store i32 %75, i32* %64, align 4, !noalias !11
  br label %76

76:                                               ; preds = %74, %59
  %77 = phi i32 [ %75, %74 ], [ %65, %59 ]
  %78 = load atomic i32, i32* %60 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = add i32 %77, -1
  store i32 %82, i32* %64, align 4
  br label %83

83:                                               ; preds = %81, %76
  %84 = phi i32 [ %82, %81 ], [ %77, %76 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #9
  br label %87

87:                                               ; preds = %47, %83, %86
  %88 = tail call noalias i8* @malloc(i64 40) #9
  %89 = getelementptr inbounds i8, i8* %88, i64 8
  %90 = bitcast i8* %89 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %90, align 8
  %91 = bitcast i8* %88 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink21InheritedColorCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds i8, i8* %88, i64 16
  %93 = bitcast i8* %92 to i64*
  store i64 %56, i64* %93, align 8
  %94 = getelementptr inbounds i8, i8* %88, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* nonnull align 8 %13, i64 12, i1 false) #9
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.1455", %"class.std::__1::unique_ptr.1455"* %6, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.std::__1::unique_ptr.1455"* %6 to i8**
  store i8* %88, i8** %96, align 8
  %97 = getelementptr inbounds %"class.WTF::Vector.1421", %"class.WTF::Vector.1421"* %3, i64 0, i32 0, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.WTF::Vector.1421", %"class.WTF::Vector.1421"* %3, i64 0, i32 0, i32 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %98, %100
  br i1 %101, label %111, label %102, !prof !7

102:                                              ; preds = %87
  %103 = ptrtoint i8* %88 to i64
  %104 = getelementptr inbounds %"class.WTF::Vector.1421", %"class.WTF::Vector.1421"* %3, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.std::__1::unique_ptr.1424"*, %"class.std::__1::unique_ptr.1424"** %104, align 8
  %106 = zext i32 %98 to i64
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.1424", %"class.std::__1::unique_ptr.1424"* %105, i64 %106
  store %"class.blink::InheritedColorChecker"* null, %"class.blink::InheritedColorChecker"** %95, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.1424"* %107 to i64*
  store i64 %103, i64* %108, align 8
  %109 = load i32, i32* %97, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %97, align 4
  br label %112

111:                                              ; preds = %87
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_21InheritedColorCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.1421"* %3, %"class.std::__1::unique_ptr.1455"* nonnull dereferenceable(8) %6) #9
  br label %112

112:                                              ; preds = %102, %111
  %113 = load %"class.blink::InheritedColorChecker"*, %"class.blink::InheritedColorChecker"** %95, align 8
  store %"class.blink::InheritedColorChecker"* null, %"class.blink::InheritedColorChecker"** %95, align 8
  %114 = icmp eq %"class.blink::InheritedColorChecker"* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %112
  %116 = bitcast %"class.blink::InheritedColorChecker"* %113 to void (%"class.blink::InheritedColorChecker"*)***
  %117 = load void (%"class.blink::InheritedColorChecker"*)**, void (%"class.blink::InheritedColorChecker"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.blink::InheritedColorChecker"*)*, void (%"class.blink::InheritedColorChecker"*)** %117, i64 1
  %119 = load void (%"class.blink::InheritedColorChecker"*)*, void (%"class.blink::InheritedColorChecker"*)** %118, align 8
  call void %119(%"class.blink::InheritedColorChecker"* nonnull %113) #9
  br label %120

120:                                              ; preds = %112, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #9
  call void @_ZNK5blink25CSSColorInterpolationType21ConvertStyleColorPairERKNS_18OptionalStyleColorES3_(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSColorInterpolationType"* undef, %"struct.blink::OptionalStyleColor"* nonnull dereferenceable(12) %5, %"struct.blink::OptionalStyleColor"* nonnull dereferenceable(12) %5)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %13) #9
  br label %121

121:                                              ; preds = %120, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25CSSColorInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSColorInterpolationType"* nocapture readonly, %"class.blink::CSSValue"* readonly dereferenceable(3), %"class.blink::StyleResolverState"* nocapture readonly, %"class.WTF::Vector.1421"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::Color", align 4
  %7 = getelementptr inbounds %"class.blink::CSSColorInterpolationType", %"class.blink::CSSColorInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %8 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSColorInterpolationType", %"class.blink::CSSColorInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8, !noalias !14
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %40, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4, !noalias !14
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %29

19:                                               ; preds = %12
  %20 = zext i32 %18 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #9
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !7

26:                                               ; preds = %19
  tail call void @llvm.trap() #9, !noalias !14
  unreachable

27:                                               ; preds = %19
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %17, align 4, !noalias !14
  br label %29

29:                                               ; preds = %27, %12
  %30 = phi i32 [ %28, %27 ], [ %18, %12 ]
  %31 = load atomic i32, i32* %13 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  %35 = add i32 %30, -1
  store i32 %35, i32* %17, align 4
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i32 [ %35, %34 ], [ %30, %29 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #9
  br label %40

40:                                               ; preds = %5, %36, %39
  %41 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %8, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 2
  %44 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %45 = load i8, i8* %44, align 1
  br i1 %43, label %46, label %56

46:                                               ; preds = %40
  %47 = icmp ne i8 %45, 2
  %48 = icmp eq %"class.blink::CSSValue"* %2, null
  %49 = or i1 %48, %47
  br i1 %49, label %56, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 147
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  tail call void @_ZNK5blink25CSSColorInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSColorInterpolationType"* %1, %"class.blink::StyleResolverState"* dereferenceable(600) %3, %"class.WTF::Vector.1421"* dereferenceable(16) %4)
  br label %135

56:                                               ; preds = %40, %46
  %57 = icmp ne i8 %45, 3
  %58 = icmp eq %"class.blink::CSSValue"* %2, null
  %59 = or i1 %58, %57
  br i1 %59, label %67, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.blink::Color"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #9
  %62 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %6, i64 0, i32 0
  store i32 %64, i32* %65, align 4
  %66 = call %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorERKNS_5ColorE(%"class.blink::Color"* nonnull dereferenceable(4) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #9
  br label %82

67:                                               ; preds = %50, %56
  %68 = phi i1 [ %58, %56 ], [ false, %50 ]
  %69 = phi i8 [ %45, %56 ], [ 2, %50 ]
  %70 = icmp ne i8 %69, 2
  %71 = or i1 %68, %70
  br i1 %71, label %80, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = tail call zeroext i1 @_ZN5blink10StyleColor14IsColorKeywordENS_10CSSValueIDE(i32 %75) #9
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = load i32, i32* %74, align 4
  %79 = tail call %"class.blink::InterpolableValue"* @_ZN5blink25CSSColorInterpolationType23CreateInterpolableColorENS_10CSSValueIDE(i32 %78) #9
  br label %82

80:                                               ; preds = %72, %67
  %81 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #9
  br label %135

82:                                               ; preds = %60, %77
  %83 = phi %"class.blink::InterpolableValue"* [ %79, %77 ], [ %66, %60 ]
  %84 = ptrtoint %"class.blink::InterpolableValue"* %83 to i64
  %85 = icmp eq %"class.blink::InterpolableValue"* %83, null
  br i1 %85, label %133, label %86

86:                                               ; preds = %82
  %87 = tail call noalias i8* @malloc(i64 24) #9
  %88 = bitcast i8* %87 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8
  %89 = getelementptr inbounds i8, i8* %87, i64 8
  %90 = getelementptr inbounds i8, i8* %87, i64 16
  %91 = bitcast i8* %90 to i32*
  %92 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 2) #9
  %93 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %92, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #9
  %94 = ptrtoint i8* %93 to i64
  %95 = bitcast i8* %89 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = lshr i64 %92, 3
  %97 = trunc i64 %96 to i32
  store i32 %97, i32* %91, align 8
  %98 = getelementptr inbounds i8, i8* %87, i64 20
  %99 = bitcast i8* %98 to i32*
  store i32 2, i32* %99, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 16, i1 false) #9
  %100 = ptrtoint i8* %87 to i64
  %101 = bitcast %"class.blink::InterpolableValue"* %83 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %102 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %101, align 8
  %103 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %102, i64 16
  %104 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %103, align 8
  %105 = tail call %"class.blink::InterpolableValue"* %104(%"class.blink::InterpolableValue"* nonnull %83) #9
  %106 = ptrtoint %"class.blink::InterpolableValue"* %105 to i64
  %107 = bitcast i8* %89 to %"class.WTF::Vector"*
  %108 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %107, i32 0) #9
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %109, align 8
  %111 = bitcast %"class.std::__1::unique_ptr"* %108 to i64*
  store i64 %106, i64* %111, align 8
  %112 = icmp eq %"class.blink::InterpolableValue"* %110, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %86
  %114 = bitcast %"class.blink::InterpolableValue"* %110 to void (%"class.blink::InterpolableValue"*)***
  %115 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %115, i64 1
  %117 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %116, align 8
  tail call void %117(%"class.blink::InterpolableValue"* nonnull %110) #9
  br label %118

118:                                              ; preds = %86, %113
  %119 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %107, i32 1) #9
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %120, align 8
  %122 = bitcast %"class.std::__1::unique_ptr"* %119 to i64*
  store i64 %84, i64* %122, align 8
  %123 = icmp eq %"class.blink::InterpolableValue"* %121, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %118
  %125 = bitcast %"class.blink::InterpolableValue"* %121 to void (%"class.blink::InterpolableValue"*)***
  %126 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %126, i64 1
  %128 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %127, align 8
  tail call void %128(%"class.blink::InterpolableValue"* nonnull %121) #9
  br label %129

129:                                              ; preds = %118, %124
  %130 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %100, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %132 = bitcast %class.scoped_refptr.1418* %131 to i64*
  store i64 0, i64* %132, align 8
  br label %135

133:                                              ; preds = %82
  %134 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 16, i1 false) #9
  br label %135

135:                                              ; preds = %133, %129, %80, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25CSSColorInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSColorInterpolationType"* nocapture readonly, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::OptionalStyleColor", align 8
  %5 = alloca %"struct.blink::OptionalStyleColor", align 8
  %6 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::CSSColorInterpolationType", %"class.blink::CSSColorInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %8 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSColorInterpolationType", %"class.blink::CSSColorInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8, !noalias !17
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %40, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4, !noalias !17
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %29

19:                                               ; preds = %12
  %20 = zext i32 %18 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #9
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !7

26:                                               ; preds = %19
  tail call void @llvm.trap() #9, !noalias !17
  unreachable

27:                                               ; preds = %19
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %17, align 4, !noalias !17
  br label %29

29:                                               ; preds = %27, %12
  %30 = phi i32 [ %28, %27 ], [ %18, %12 ]
  %31 = load atomic i32, i32* %13 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  %35 = add i32 %30, -1
  store i32 %35, i32* %17, align 4
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i32 [ %35, %34 ], [ %30, %29 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #9
  br label %40

40:                                               ; preds = %3, %36, %39
  %41 = tail call { i64, i32 } @_ZN5blink22ColorPropertyFunctions17GetUnvisitedColorERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.blink::CSSProperty"* dereferenceable(24) %8, %"class.blink::ComputedStyle"* dereferenceable(104) %2) #9
  %42 = extractvalue { i64, i32 } %41, 0
  %43 = extractvalue { i64, i32 } %41, 1
  %44 = bitcast %"struct.blink::OptionalStyleColor"* %4 to i64*
  store i64 %42, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %4, i64 0, i32 1, i32 1
  store i32 %43, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %46) #9
  %47 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %7, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8, !noalias !20
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %78, label %50

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4, !noalias !20
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %67

57:                                               ; preds = %50
  %58 = zext i32 %56 to i33
  %59 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #9
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !7

64:                                               ; preds = %57
  tail call void @llvm.trap() #9, !noalias !20
  unreachable

65:                                               ; preds = %57
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %55, align 4, !noalias !20
  br label %67

67:                                               ; preds = %65, %50
  %68 = phi i32 [ %66, %65 ], [ %56, %50 ]
  %69 = load atomic i32, i32* %51 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %67
  %73 = add i32 %68, -1
  store i32 %73, i32* %55, align 4
  br label %74

74:                                               ; preds = %72, %67
  %75 = phi i32 [ %73, %72 ], [ %68, %67 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #9
  br label %78

78:                                               ; preds = %40, %74, %77
  %79 = tail call { i64, i32 } @_ZN5blink22ColorPropertyFunctions15GetVisitedColorERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.blink::CSSProperty"* dereferenceable(24) %47, %"class.blink::ComputedStyle"* dereferenceable(104) %2) #9
  %80 = extractvalue { i64, i32 } %79, 0
  %81 = extractvalue { i64, i32 } %79, 1
  %82 = bitcast %"struct.blink::OptionalStyleColor"* %5 to i64*
  store i64 %80, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.blink::OptionalStyleColor", %"struct.blink::OptionalStyleColor"* %5, i64 0, i32 1, i32 1
  store i32 %81, i32* %83, align 4
  call void @_ZNK5blink25CSSColorInterpolationType21ConvertStyleColorPairERKNS_18OptionalStyleColorES3_(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSColorInterpolationType"* undef, %"struct.blink::OptionalStyleColor"* nonnull dereferenceable(12) %4, %"struct.blink::OptionalStyleColor"* nonnull dereferenceable(12) %5)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25CSSColorInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE(%"class.blink::CSSColorInterpolationType"* nocapture readonly, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"* nocapture readnone, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Color", align 4
  %6 = alloca %"class.blink::Color", align 4
  %7 = getelementptr inbounds %"class.blink::CSSColorInterpolationType", %"class.blink::CSSColorInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %8 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSColorInterpolationType", %"class.blink::CSSColorInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8, !noalias !23
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %40, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4, !noalias !23
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %29

19:                                               ; preds = %12
  %20 = zext i32 %18 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #9
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !7

26:                                               ; preds = %19
  tail call void @llvm.trap() #9, !noalias !23
  unreachable

27:                                               ; preds = %19
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %17, align 4, !noalias !23
  br label %29

29:                                               ; preds = %27, %12
  %30 = phi i32 [ %28, %27 ], [ %18, %12 ]
  %31 = load atomic i32, i32* %13 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  %35 = add i32 %30, -1
  store i32 %35, i32* %17, align 4
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i32 [ %35, %34 ], [ %30, %29 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #9
  br label %40

40:                                               ; preds = %4, %36, %39
  %41 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 2, i32 0
  %42 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %41, align 8
  %43 = bitcast %"class.blink::Color"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %45 = bitcast %"class.blink::InterpolableValue"* %44 to %"class.WTF::Vector"*
  %46 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %45, i32 0) #9
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %47, align 8
  %49 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %7, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8, !noalias !26
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %80, label %52

52:                                               ; preds = %40
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4, !noalias !26
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #9
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !7

66:                                               ; preds = %59
  tail call void @llvm.trap() #9, !noalias !26
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4, !noalias !26
  br label %69

69:                                               ; preds = %67, %52
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = load atomic i32, i32* %53 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %69
  %75 = add i32 %70, -1
  store i32 %75, i32* %57, align 4
  br label %76

76:                                               ; preds = %74, %69
  %77 = phi i32 [ %75, %74 ], [ %70, %69 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #9
  br label %80

80:                                               ; preds = %40, %76, %79
  %81 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %49, i64 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, 353
  %84 = tail call i32 @_ZN5blink25CSSColorInterpolationType24ResolveInterpolableColorERKNS_17InterpolableValueERKNS_18StyleResolverStateEbb(%"class.blink::InterpolableValue"* dereferenceable(8) %48, %"class.blink::StyleResolverState"* dereferenceable(600) %3, i1 zeroext false, i1 zeroext %83)
  %85 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %5, i64 0, i32 0
  store i32 %84, i32* %85, align 4
  call void @_ZN5blink22ColorPropertyFunctions17SetUnvisitedColorERKNS_11CSSPropertyERNS_13ComputedStyleERKNS_5ColorE(%"class.blink::CSSProperty"* dereferenceable(24) %8, %"class.blink::ComputedStyle"* dereferenceable(104) %42, %"class.blink::Color"* nonnull dereferenceable(4) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #9
  %86 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %7, align 8
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8, !noalias !29
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %117, label %89

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4, !noalias !29
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %106

96:                                               ; preds = %89
  %97 = zext i32 %95 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #9
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !7

103:                                              ; preds = %96
  call void @llvm.trap() #9, !noalias !29
  unreachable

104:                                              ; preds = %96
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %94, align 4, !noalias !29
  br label %106

106:                                              ; preds = %104, %89
  %107 = phi i32 [ %105, %104 ], [ %95, %89 ]
  %108 = load atomic i32, i32* %90 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %106
  %112 = add i32 %107, -1
  store i32 %112, i32* %94, align 4
  br label %113

113:                                              ; preds = %111, %106
  %114 = phi i32 [ %112, %111 ], [ %107, %106 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #9
  br label %117

117:                                              ; preds = %80, %113, %116
  %118 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %41, align 8
  %119 = bitcast %"class.blink::Color"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #9
  %120 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %45, i32 1) #9
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %121, align 8
  %123 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %7, align 8
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8, !noalias !32
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %154, label %126

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4, !noalias !32
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %143

133:                                              ; preds = %126
  %134 = zext i32 %132 to i33
  %135 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #9
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !7

140:                                              ; preds = %133
  call void @llvm.trap() #9, !noalias !32
  unreachable

141:                                              ; preds = %133
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %131, align 4, !noalias !32
  br label %143

143:                                              ; preds = %141, %126
  %144 = phi i32 [ %142, %141 ], [ %132, %126 ]
  %145 = load atomic i32, i32* %127 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %143
  %149 = add i32 %144, -1
  store i32 %149, i32* %131, align 4
  br label %150

150:                                              ; preds = %148, %143
  %151 = phi i32 [ %149, %148 ], [ %144, %143 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #9
  br label %154

154:                                              ; preds = %117, %150, %153
  %155 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %123, i64 0, i32 1
  %156 = load i32, i32* %155, align 8
  %157 = icmp eq i32 %156, 353
  %158 = call i32 @_ZN5blink25CSSColorInterpolationType24ResolveInterpolableColorERKNS_17InterpolableValueERKNS_18StyleResolverStateEbb(%"class.blink::InterpolableValue"* dereferenceable(8) %122, %"class.blink::StyleResolverState"* dereferenceable(600) %3, i1 zeroext true, i1 zeroext %157)
  %159 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %6, i64 0, i32 0
  store i32 %158, i32* %159, align 4
  call void @_ZN5blink22ColorPropertyFunctions15SetVisitedColorERKNS_11CSSPropertyERNS_13ComputedStyleERKNS_5ColorE(%"class.blink::CSSProperty"* dereferenceable(24) %86, %"class.blink::ComputedStyle"* dereferenceable(104) %118, %"class.blink::Color"* nonnull dereferenceable(4) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #9
  ret void
}

declare void @_ZN5blink22ColorPropertyFunctions17SetUnvisitedColorERKNS_11CSSPropertyERNS_13ComputedStyleERKNS_5ColorE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN5blink22ColorPropertyFunctions15SetVisitedColorERKNS_11CSSPropertyERNS_13ComputedStyleERKNS_5ColorE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink25CSSColorInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE(%"class.blink::CSSColorInterpolationType"* nocapture readnone, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"* nocapture readnone, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %6 = bitcast %"class.blink::InterpolableValue"* %5 to %"class.WTF::Vector"*
  %7 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 0) #9
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %8, align 8
  %10 = tail call i32 @_ZN5blink25CSSColorInterpolationType24ResolveInterpolableColorERKNS_17InterpolableValueERKNS_18StyleResolverStateEbb(%"class.blink::InterpolableValue"* dereferenceable(8) %9, %"class.blink::StyleResolverState"* dereferenceable(600) %3, i1 zeroext false, i1 zeroext false)
  %11 = tail call %"class.blink::cssvalue::CSSColor"* @_ZN5blink8cssvalue8CSSColor6CreateEj(i32 %10) #9
  %12 = getelementptr inbounds %"class.blink::cssvalue::CSSColor", %"class.blink::cssvalue::CSSColor"* %11, i64 0, i32 0
  ret %"class.blink::CSSValue"* %12
}

declare %"class.blink::cssvalue::CSSColor"* @_ZN5blink8cssvalue8CSSColor6CreateEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25CSSColorInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::CSSColorInterpolationType"* nocapture readnone, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* nocapture readonly dereferenceable(16), double) unnamed_addr #0 align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #9
  %7 = bitcast %"struct.blink::InterpolationValue"* %6 to %"class.blink::InterpolableList"**
  %8 = load %"class.blink::InterpolableList"*, %"class.blink::InterpolableList"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %8, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = bitcast %"struct.blink::InterpolationValue"* %3 to %"class.blink::InterpolableList"**
  %14 = load %"class.blink::InterpolableList"*, %"class.blink::InterpolableList"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %8, i64 0, i32 1
  %16 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %14, i64 0, i32 1
  br label %18

17:                                               ; preds = %32, %5
  ret void

18:                                               ; preds = %12, %32
  %19 = phi i32 [ 0, %12 ], [ %33, %32 ]
  %20 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 %19) #9
  %21 = bitcast %"class.std::__1::unique_ptr"* %20 to %"class.blink::InterpolableList"**
  %22 = load %"class.blink::InterpolableList"*, %"class.blink::InterpolableList"** %21, align 8
  %23 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %16, i32 %19) #9
  %24 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %22, i64 0, i32 1, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::unique_ptr"* %23 to %"class.blink::InterpolableList"**
  %29 = load %"class.blink::InterpolableList"*, %"class.blink::InterpolableList"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %22, i64 0, i32 1
  %31 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %29, i64 0, i32 1
  br label %36

32:                                               ; preds = %62, %18
  %33 = add nuw i32 %19, 1
  %34 = load i32, i32* %9, align 4
  %35 = icmp ult i32 %33, %34
  br i1 %35, label %18, label %17

36:                                               ; preds = %27, %62
  %37 = phi i32 [ 0, %27 ], [ %63, %62 ]
  %38 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %30, i32 %37) #9
  %39 = bitcast %"class.std::__1::unique_ptr"* %38 to %"class.blink::InterpolableNumber"**
  %40 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %39, align 8
  %41 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %31, i32 %37) #9
  %42 = bitcast %"class.std::__1::unique_ptr"* %41 to %"class.blink::InterpolableNumber"**
  %43 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %42, align 8
  %44 = icmp eq i32 %37, 3
  br i1 %44, label %45, label %51

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %40, i64 0, i32 1
  %47 = load double, double* %46, align 8
  %48 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %43, i64 0, i32 1
  %49 = load double, double* %48, align 8
  %50 = fcmp une double %47, %49
  br i1 %50, label %51, label %62

51:                                               ; preds = %36, %45
  %52 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %40, i64 0, i32 0
  %53 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %43, i64 0, i32 0
  %54 = bitcast %"class.blink::InterpolableNumber"* %40 to void (%"class.blink::InterpolableValue"*, double)***
  %55 = load void (%"class.blink::InterpolableValue"*, double)**, void (%"class.blink::InterpolableValue"*, double)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double)*, void (%"class.blink::InterpolableValue"*, double)** %55, i64 12
  %57 = load void (%"class.blink::InterpolableValue"*, double)*, void (%"class.blink::InterpolableValue"*, double)** %56, align 8
  tail call void %57(%"class.blink::InterpolableValue"* %52, double %2) #9
  %58 = bitcast %"class.blink::InterpolableNumber"* %40 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)***
  %59 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %59, i64 13
  %61 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %60, align 8
  tail call void %61(%"class.blink::InterpolableValue"* %52, %"class.blink::InterpolableValue"* dereferenceable(8) %53) #9
  br label %62

62:                                               ; preds = %51, %45
  %63 = add nuw i32 %37, 1
  %64 = load i32, i32* %24, align 4
  %65 = icmp ult i32 %63, %64
  br i1 %65, label %36, label %32
}

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20CSSInterpolationTypeD2Ev(%"class.blink::CSSInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !7

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %25, %38, %41
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25CSSColorInterpolationTypeD0Ev(%"class.blink::CSSColorInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSColorInterpolationType", %"class.blink::CSSColorInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSColorInterpolationType", %"class.blink::CSSColorInterpolationType"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !7

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %13, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSColorInterpolationType", %"class.blink::CSSColorInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %25, %38, %41
  %43 = bitcast %"class.blink::CSSColorInterpolationType"* %0 to i8*
  tail call void @free(i8* %43) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.1421"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = alloca %"struct.blink::InterpolationValue", align 8
  %10 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %13 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)***
  %14 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)*** %13, align 8
  %16 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)** %15, i64 3
  %17 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)** %16, align 8
  call void %17(%"struct.blink::InterpolationValue"* nonnull sret %8, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %2, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.1421"* dereferenceable(16) %6) #9
  %18 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  %19 = icmp eq %"class.blink::InterpolableValue"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #9
  br label %64

22:                                               ; preds = %7
  %23 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)*** %13, align 8
  %28 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)** %27, i64 3
  %29 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1421"*)** %28, align 8
  call void %29(%"struct.blink::InterpolationValue"* nonnull sret %9, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %3, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.1421"* dereferenceable(16) %6) #9
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #9
  br label %39

34:                                               ; preds = %22
  %35 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)***
  %36 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %36, i64 4
  %38 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %37, align 8
  call void %38(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolationType"* %1, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %9) #9
  br label %39

39:                                               ; preds = %34, %32
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted.1420", %"class.base::RefCounted.1420"* %43, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #9
  %45 = getelementptr inbounds %"class.base::RefCounted.1420", %"class.base::RefCounted.1420"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.1420", %"class.base::RefCounted.1420"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted.1420"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted.1420"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #9
  br label %55

55:                                               ; preds = %48, %42, %39
  %56 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %57 = icmp eq %"class.blink::InterpolableValue"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::InterpolableValue"* %56 to void (%"class.blink::InterpolableValue"*)***
  %60 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, align 8
  call void %62(%"class.blink::InterpolableValue"* nonnull %56) #9
  br label %63

63:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  br label %64

64:                                               ; preds = %63, %20
  %65 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %12, align 8
  %66 = icmp eq %"class.blink::NonInterpolableValue"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %65, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.base::RefCounted.1420", %"class.base::RefCounted.1420"* %68, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %69) #9
  %70 = getelementptr inbounds %"class.base::RefCounted.1420", %"class.base::RefCounted.1420"* %68, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.base::RefCounted.1420", %"class.base::RefCounted.1420"* %68, i64 -2
  %75 = bitcast %"class.base::RefCounted.1420"* %74 to %"class.blink::NonInterpolableValue"*
  %76 = bitcast %"class.base::RefCounted.1420"* %74 to void (%"class.blink::NonInterpolableValue"*)***
  %77 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %77, i64 1
  %79 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, align 8
  call void %79(%"class.blink::NonInterpolableValue"* nonnull %75) #9
  br label %80

80:                                               ; preds = %73, %67, %64
  %81 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %11, align 8
  %82 = icmp eq %"class.blink::InterpolableValue"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::InterpolableValue"* %81 to void (%"class.blink::InterpolableValue"*)***
  %85 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %85, i64 1
  %87 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %86, align 8
  call void %87(%"class.blink::InterpolableValue"* nonnull %81) #9
  br label %88

88:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret void
}

declare void @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.1421"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %8, align 8
  %11 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %15 = bitcast %class.scoped_refptr.1418* %14 to i64*
  store i64 0, i64* %15, align 8
  ret void
}

declare void @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.WTF::Vector.1421"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.blink::InterpolationValue"* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %7, align 8
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i32 @_ZNK5blink10StyleColor21EffectiveColorKeywordEv(%"class.blink::StyleColor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD2Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD0Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 comdat align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #9
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8
  %11 = bitcast %"class.blink::InterpolableValue"* %8 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %12 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %12, i64 14
  %14 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %13, align 8
  tail call void %14(%"class.blink::InterpolableValue"* %8, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %10) #9
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21InheritedColorCheckerD0Ev(%"class.blink::InheritedColorChecker"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::InheritedColorChecker"* %0 to i8*
  tail call void @free(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %1, i64 1
  %5 = bitcast %"class.blink::InterpolationEnvironment"* %4 to %"class.blink::StyleResolverState"**
  %6 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %5, align 8
  %7 = bitcast %"class.blink::CSSInterpolationType::CSSConversionChecker"* %0 to i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)***
  %8 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)**, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %8, i64 3
  %10 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::CSSInterpolationType::CSSConversionChecker"* %0, %"class.blink::StyleResolverState"* dereferenceable(600) %6, %"struct.blink::InterpolationValue"* dereferenceable(16) %2) #9
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21InheritedColorChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE(%"class.blink::InheritedColorChecker"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::InheritedColorChecker", %"class.blink::InheritedColorChecker"* %0, i64 0, i32 1
  %5 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 4, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = tail call { i64, i32 } @_ZN5blink22ColorPropertyFunctions17GetUnvisitedColorERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.blink::CSSProperty"* dereferenceable(24) %5, %"class.blink::ComputedStyle"* dereferenceable(104) %7) #9
  %9 = extractvalue { i64, i32 } %8, 0
  %10 = extractvalue { i64, i32 } %8, 1
  %11 = trunc i64 %9 to i8
  %12 = getelementptr inbounds %"class.blink::InheritedColorChecker", %"class.blink::InheritedColorChecker"* %0, i64 0, i32 2, i32 0
  %13 = load i8, i8* %12, align 4, !range !3
  %14 = icmp eq i8 %13, %11
  br i1 %14, label %15, label %25

15:                                               ; preds = %3
  %16 = lshr i64 %9, 32
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %"class.blink::InheritedColorChecker", %"class.blink::InheritedColorChecker"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, %17
  br i1 %20, label %21, label %25

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::InheritedColorChecker", %"class.blink::InheritedColorChecker"* %0, i64 0, i32 2, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %10
  br label %25

25:                                               ; preds = %3, %15, %21
  %26 = phi i1 [ false, %3 ], [ false, %15 ], [ %24, %21 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationType17ConversionCheckerD2Ev(%"class.blink::InterpolationType::ConversionChecker"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_21InheritedColorCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.1421"*, %"class.std::__1::unique_ptr.1455"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1421", %"class.WTF::Vector.1421"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1421", %"class.WTF::Vector.1421"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.1421", %"class.WTF::Vector.1421"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.1424"*, %"class.std::__1::unique_ptr.1424"** %16, align 8
  br i1 %15, label %18, label %45, !prof !35

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.1424"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #9
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.1421"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.1424"*, %"class.std::__1::unique_ptr.1424"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.1424"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.1424"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !35

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #9
  %36 = bitcast %"class.WTF::Vector.1421"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  %40 = bitcast %"class.WTF::Vector.1421"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.1424"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.1424"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.1424", %"class.std::__1::unique_ptr.1424"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1455", %"class.std::__1::unique_ptr.1455"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1455"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::InheritedColorChecker"* null, %"class.blink::InheritedColorChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.1424"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{{ i64, i32 } (%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*)* @_ZN5blink22ColorPropertyFunctions15GetVisitedColorERKNS_11CSSPropertyERKNS_13ComputedStyleE, { i64, i32 } (%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*)* @_ZN5blink22ColorPropertyFunctions17GetUnvisitedColorERKNS_11CSSPropertyERKNS_13ComputedStyleE}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!6 = distinct !{!6, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!31 = distinct !{!31, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!34 = distinct !{!34, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!35 = !{!"branch_weights", i32 2000, i32 1}
