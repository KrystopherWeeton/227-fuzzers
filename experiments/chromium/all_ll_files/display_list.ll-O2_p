; ModuleID = '../../ui/display/display_list.cc'
source_filename = "../../ui/display/display_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%union.anon = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%union.anon.4 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.display::DisplayList" = type { %"class.std::__1::vector", i64, i64, %"class.base::ObserverList" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.display::Display"*, %"class.display::Display"*, %"class.std::__1::__compressed_pair" }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.0" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.display::Display"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.6", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.14" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.display::DisplayObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.21" }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { i64*, i64*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64* }
%"struct.std::__1::__split_buffer.44" = type { i64*, i64*, i64*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::allocator.26"* }
%"class.std::__1::allocator.26" = type { i8 }

$_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS2_ = comdat any

$_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS2_ = comdat any

$_ZNSt3__16vectorIN7display7DisplayENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv = comdat any

$_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7display15DisplayObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_ = comdat any

$_ZNSt3__16vectorIN7display7DisplayENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIlNS_9allocatorIlEEE7emplaceIJlEEENS_11__wrap_iterIPlEENS5_IPKlEEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIlRNS_9allocatorIlEEE12emplace_backIJlEEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [33 x i8] c"../../ui/display/display_list.cc\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"primary_iter != displays_.end()\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"current_iter != displays_.end()\00", align 1
@__const._ZN7display11DisplayList13RemoveDisplayEl.display = private unnamed_addr constant { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } }, i32, i32, i8, [3 x i8], i32 } { i64 -6148914691236517206, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, float 0xFFFFFFFFE0000000, i32 -1431655766, { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { i32 -1431655766 } } } } }, i32 -1431655766, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } } { [6 x %"class.gfx::ColorSpace"] [%"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }], [6 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"struct.gfx::HDRStaticMetadata" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF } } } } } } }, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, align 8
@.str.4 = private unnamed_addr constant [36 x i8] c"../../base/observer_list_internal.h\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"!weak_ptr_.WasInvalidated()\00", align 1

@_ZN7display11DisplayListC1Ev = hidden unnamed_addr alias void (%"class.display::DisplayList"*), void (%"class.display::DisplayList"*)* @_ZN7display11DisplayListC2Ev
@_ZN7display11DisplayListD1Ev = hidden unnamed_addr alias void (%"class.display::DisplayList"*), void (%"class.display::DisplayList"*)* @_ZN7display11DisplayListD2Ev
@_ZN7display11DisplayListC1ERKNSt3__16vectorINS_7DisplayENS1_9allocatorIS3_EEEEll = hidden unnamed_addr alias void (%"class.display::DisplayList"*, %"class.std::__1::vector"*, i64, i64), void (%"class.display::DisplayList"*, %"class.std::__1::vector"*, i64, i64)* @_ZN7display11DisplayListC2ERKNSt3__16vectorINS_7DisplayENS1_9allocatorIS3_EEEEll
@_ZN7display11DisplayListC1ERKS0_ = hidden unnamed_addr alias void (%"class.display::DisplayList"*, %"class.display::DisplayList"*), void (%"class.display::DisplayList"*, %"class.display::DisplayList"*)* @_ZN7display11DisplayListC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display11DisplayListC2Ev(%"class.display::DisplayList"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.display::DisplayList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #10
  %3 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3
  %5 = bitcast %"class.base::ObserverList"* %4 to i8*
  %6 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -1, i64 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %7 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %7, %"class.base::internal::LinkNodeBase"* %7, %"class.base::internal::LinkNodeBase"* %7) #10
  %8 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 2
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display11DisplayListD2Ev(%"class.display::DisplayList"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.base::LinkNode"**
  %5 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 1, i32 0
  %6 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  %7 = icmp eq %"class.base::LinkNode"* %6, %5
  br i1 %7, label %20, label %8

8:                                                ; preds = %1, %17
  %9 = phi %"class.base::LinkNode"* [ %18, %17 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 1
  %11 = bitcast %"class.base::LinkNode"* %10 to %"class.base::ObserverList"**
  %12 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %13 = icmp eq %"class.base::ObserverList"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %11, align 8
  %15 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %15) #10
  %16 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi %"class.base::LinkNode"* [ %9, %8 ], [ %16, %14 ]
  %19 = icmp eq %"class.base::LinkNode"* %18, %5
  br i1 %19, label %20, label %8

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %21, align 8
  %23 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %22, null
  br i1 %23, label %38, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.base::internal::CheckedObserverAdapter"* %22 to i8*
  %26 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %27 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %26, align 8
  %28 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %27, %22
  br i1 %28, label %36, label %29

29:                                               ; preds = %24, %29
  %30 = phi %"class.base::internal::CheckedObserverAdapter"* [ %31, %29 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %30, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %31) #10
  %32 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %31, %22
  br i1 %32, label %33, label %29

33:                                               ; preds = %29
  %34 = bitcast %"class.base::ObserverList"* %2 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %24
  %37 = phi i8* [ %35, %33 ], [ %25, %24 ]
  store %"class.base::internal::CheckedObserverAdapter"* %22, %"class.base::internal::CheckedObserverAdapter"** %26, align 8
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %20, %36
  %39 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.display::Display"*, %"class.display::Display"** %39, align 8
  %41 = icmp eq %"class.display::Display"* %40, null
  br i1 %41, label %56, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.display::Display"* %40 to i8*
  %44 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %45 = load %"class.display::Display"*, %"class.display::Display"** %44, align 8
  %46 = icmp eq %"class.display::Display"* %45, %40
  br i1 %46, label %54, label %47

47:                                               ; preds = %42, %47
  %48 = phi %"class.display::Display"* [ %49, %47 ], [ %45, %42 ]
  %49 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %48, i64 -1
  tail call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* %49) #10
  %50 = icmp eq %"class.display::Display"* %49, %40
  br i1 %50, label %51, label %47

51:                                               ; preds = %47
  %52 = bitcast %"class.display::DisplayList"* %0 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %42
  %55 = phi i8* [ %53, %51 ], [ %43, %42 ]
  store %"class.display::Display"* %40, %"class.display::Display"** %44, align 8
  tail call void @_ZdlPv(i8* %55) #11
  br label %56

56:                                               ; preds = %38, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display11DisplayListC2ERKNSt3__16vectorINS_7DisplayENS1_9allocatorIS3_EEEEll(%"class.display::DisplayList"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i64, i64) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.display::DisplayList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %7 = bitcast %"class.display::Display"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 568
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %42, label %14

14:                                               ; preds = %4
  %15 = icmp ugt i64 %12, 32476662101601323
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = bitcast %"class.display::DisplayList"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %17) #12
  unreachable

18:                                               ; preds = %14
  %19 = tail call i8* @_Znwm(i64 %11) #11
  %20 = bitcast i8* %19 to %"class.display::Display"*
  %21 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.display::Display"** %21 to i8**
  store i8* %19, i8** %22, align 8
  %23 = bitcast %"class.display::DisplayList"* %0 to i8**
  store i8* %19, i8** %23, align 8
  %24 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %20, i64 %12
  %25 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.display::Display"* %24, %"class.display::Display"** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.display::Display"*, %"class.display::Display"** %26, align 8
  %28 = load %"class.display::Display"*, %"class.display::Display"** %6, align 8
  %29 = bitcast %"class.display::Display"** %21 to i64*
  %30 = ptrtoint i8* %19 to i64
  %31 = icmp eq %"class.display::Display"* %27, %28
  br i1 %31, label %40, label %32

32:                                               ; preds = %18, %32
  %33 = phi %"class.display::Display"* [ %36, %32 ], [ %20, %18 ]
  %34 = phi %"class.display::Display"* [ %35, %32 ], [ %27, %18 ]
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %33, %"class.display::Display"* dereferenceable(568) %34) #10
  %35 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %34, i64 1
  %36 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %33, i64 1
  %37 = icmp eq %"class.display::Display"* %35, %28
  br i1 %37, label %38, label %32

38:                                               ; preds = %32
  %39 = ptrtoint %"class.display::Display"* %36 to i64
  br label %40

40:                                               ; preds = %38, %18
  %41 = phi i64 [ %30, %18 ], [ %39, %38 ]
  store i64 %41, i64* %29, align 8
  br label %42

42:                                               ; preds = %4, %40
  %43 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  store i64 %2, i64* %43, align 8
  %44 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 2
  store i64 %3, i64* %44, align 8
  %45 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3
  %46 = bitcast %"class.base::ObserverList"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #10
  %47 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %47, %"class.base::internal::LinkNodeBase"* %47, %"class.base::internal::LinkNodeBase"* %47) #10
  %48 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 2
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %49, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display11DisplayListC2ERKS0_(%"class.display::DisplayList"*, %"class.display::DisplayList"* nocapture readonly dereferenceable(96)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.display::DisplayList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.display::Display"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.display::DisplayList"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 568
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 32476662101601323
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.display::DisplayList"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #12
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #11
  %18 = bitcast i8* %17 to %"class.display::Display"*
  %19 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.display::Display"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.display::DisplayList"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %18, i64 %10
  %23 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.display::Display"* %22, %"class.display::Display"** %23, align 8
  %24 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.display::Display"*, %"class.display::Display"** %24, align 8
  %26 = load %"class.display::Display"*, %"class.display::Display"** %4, align 8
  %27 = bitcast %"class.display::Display"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.display::Display"* %25, %26
  br i1 %29, label %38, label %30

30:                                               ; preds = %16, %30
  %31 = phi %"class.display::Display"* [ %34, %30 ], [ %18, %16 ]
  %32 = phi %"class.display::Display"* [ %33, %30 ], [ %25, %16 ]
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %31, %"class.display::Display"* dereferenceable(568) %32) #10
  %33 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %32, i64 1
  %34 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %31, i64 1
  %35 = icmp eq %"class.display::Display"* %33, %26
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.display::Display"* %34 to i64
  br label %38

38:                                               ; preds = %36, %16
  %39 = phi i64 [ %28, %16 ], [ %37, %36 ]
  store i64 %39, i64* %27, align 8
  br label %40

40:                                               ; preds = %2, %38
  %41 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %1, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %41, align 8
  %44 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 2
  %45 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %1, i64 0, i32 2
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %44, align 8
  %47 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3
  %48 = bitcast %"class.base::ObserverList"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #10
  %49 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %49, %"class.base::internal::LinkNodeBase"* %49, %"class.base::internal::LinkNodeBase"* %49) #10
  %50 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 2
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %51, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(96) %"class.display::DisplayList"* @_ZN7display11DisplayListaSERKS0_(%"class.display::DisplayList"* returned, %"class.display::DisplayList"* readonly dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.display::DisplayList"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.display::Display"*, %"class.display::Display"** %6, align 8
  %8 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.display::Display"*, %"class.display::Display"** %8, align 8
  tail call void @_ZNSt3__16vectorIN7display7DisplayENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %5, %"class.display::Display"* %7, %"class.display::Display"* %9) #10
  br label %10

10:                                               ; preds = %2, %4
  %11 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %1, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 2
  store i64 %15, i64* %16, align 8
  ret %"class.display::DisplayList"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7display11DisplayListeqERKS0_(%"class.display::DisplayList"* nocapture readonly, %"class.display::DisplayList"* nocapture readonly dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.display::Display"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.display::DisplayList"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.display::Display"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.display::DisplayList"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %8, %14
  %16 = inttoptr i64 %7 to %"class.display::Display"*
  %17 = inttoptr i64 %5 to %"class.display::Display"*
  br i1 %15, label %18, label %42

18:                                               ; preds = %2
  %19 = icmp eq %"class.display::Display"* %16, %17
  br i1 %19, label %30, label %20

20:                                               ; preds = %18
  %21 = inttoptr i64 %13 to %"class.display::Display"*
  br label %22

22:                                               ; preds = %20, %26
  %23 = phi %"class.display::Display"* [ %28, %26 ], [ %21, %20 ]
  %24 = phi %"class.display::Display"* [ %27, %26 ], [ %16, %20 ]
  %25 = tail call zeroext i1 @_ZNK7display7DisplayeqERKS0_(%"class.display::Display"* %24, %"class.display::Display"* dereferenceable(568) %23) #10
  br i1 %25, label %26, label %42

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %24, i64 1
  %28 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %23, i64 1
  %29 = icmp eq %"class.display::Display"* %27, %17
  br i1 %29, label %30, label %22

30:                                               ; preds = %26, %18
  %31 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %1, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %32, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %1, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %38, %40
  br label %42

42:                                               ; preds = %22, %2, %36, %30
  %43 = phi i1 [ false, %30 ], [ %41, %36 ], [ false, %2 ], [ false, %22 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display11DisplayList11AddObserverEPNS_15DisplayObserverE(%"class.display::DisplayList"*, %"class.display::DisplayObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3
  tail call void @_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS2_(%"class.base::ObserverList"* %3, %"class.display::DisplayObserver"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS2_(%"class.base::ObserverList"*, %"class.display::DisplayObserver"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::CheckedObserverAdapter", align 8
  %4 = icmp eq %"class.display::DisplayObserver"* %1, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %6, align 8
  %8 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %10 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %7, %9
  %11 = getelementptr inbounds %"class.display::DisplayObserver", %"class.display::DisplayObserver"* %1, i64 0, i32 0
  br i1 %10, label %28, label %12

12:                                               ; preds = %5, %21
  %13 = phi %"class.base::internal::CheckedObserverAdapter"* [ %22, %21 ], [ %7, %5 ]
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #10
  %16 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to %"class.base::CheckedObserver"**
  %18 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %17, align 8
  %19 = select i1 %15, %"class.base::CheckedObserver"* %18, %"class.base::CheckedObserver"* null
  %20 = icmp eq %"class.base::CheckedObserver"* %19, %11
  br i1 %20, label %24, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 1
  %23 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %22, %9
  br i1 %23, label %24, label %12

24:                                               ; preds = %12, %21
  %25 = phi %"class.base::internal::CheckedObserverAdapter"* [ %9, %21 ], [ %13, %12 ]
  %26 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %27 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %25, %26
  br i1 %27, label %28, label %46

28:                                               ; preds = %24, %5, %2
  %29 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = bitcast %"class.base::internal::CheckedObserverAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #10
  %33 = getelementptr inbounds %"class.display::DisplayObserver", %"class.display::DisplayObserver"* %1, i64 0, i32 0
  call void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"* nonnull %3, %"class.base::CheckedObserver"* %33) #10
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %34, align 8
  %36 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %37 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %36, align 8
  %38 = icmp ult %"class.base::internal::CheckedObserverAdapter"* %35, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %28
  call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %35, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #10
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %35, i64 1
  %41 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %40 to i64
  %42 = bitcast %"class.base::internal::CheckedObserverAdapter"** %34 to i64*
  store i64 %41, i64* %42, align 8
  br label %45

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.6"* %44, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #10
  br label %45

45:                                               ; preds = %39, %43
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #10
  br label %46

46:                                               ; preds = %24, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display11DisplayList14RemoveObserverEPNS_15DisplayObserverE(%"class.display::DisplayList"*, %"class.display::DisplayObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3
  tail call void @_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS2_(%"class.base::ObserverList"* %3, %"class.display::DisplayObserver"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS2_(%"class.base::ObserverList"*, %"class.display::DisplayObserver"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %5, align 8
  %7 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %9 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %6, %8
  %10 = getelementptr inbounds %"class.display::DisplayObserver", %"class.display::DisplayObserver"* %1, i64 0, i32 0
  br i1 %9, label %97, label %11

11:                                               ; preds = %2, %20
  %12 = phi %"class.base::internal::CheckedObserverAdapter"* [ %21, %20 ], [ %6, %2 ]
  %13 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #10
  %15 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to %"class.base::CheckedObserver"**
  %17 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %16, align 8
  %18 = select i1 %14, %"class.base::CheckedObserver"* %17, %"class.base::CheckedObserver"* null
  %19 = icmp eq %"class.base::CheckedObserver"* %18, %10
  br i1 %19, label %23, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 1
  %22 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %21, %8
  br i1 %22, label %23, label %11

23:                                               ; preds = %11, %20
  %24 = phi %"class.base::internal::CheckedObserverAdapter"* [ %8, %20 ], [ %12, %11 ]
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %26 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %24, %25
  br i1 %26, label %97, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0
  %33 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %32) #10
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0)) #10
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  br label %37

37:                                               ; preds = %27, %31, %34
  %38 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0
  %39 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %38) #10
  %40 = bitcast i64* %28 to %"class.base::CheckedObserver"**
  %41 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %40, align 8
  %42 = icmp eq %"class.base::CheckedObserver"* %41, null
  %43 = xor i1 %39, true
  %44 = or i1 %42, %43
  br i1 %44, label %49, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %45, %37
  %50 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %51 = bitcast %"class.base::internal::LinkNodeBase"** %50 to %"class.base::LinkNode"**
  %52 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %51, align 8
  %53 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0
  %54 = icmp eq %"class.base::LinkNode"* %52, %53
  br i1 %54, label %55, label %78

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 1
  %57 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %58 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %56, %57
  br i1 %58, label %69, label %59

59:                                               ; preds = %55, %59
  %60 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %59 ], [ %24, %55 ]
  %61 = phi %"class.base::internal::CheckedObserverAdapter"* [ %63, %59 ], [ %56, %55 ]
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %60, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %61) #10
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %60, i64 1
  %65 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %63, %57
  br i1 %65, label %66, label %59

66:                                               ; preds = %59
  %67 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %64
  br i1 %68, label %76, label %69

69:                                               ; preds = %66, %55
  %70 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %66 ], [ %24, %55 ]
  %71 = phi %"class.base::internal::CheckedObserverAdapter"* [ %67, %66 ], [ %56, %55 ]
  br label %72

72:                                               ; preds = %72, %69
  %73 = phi %"class.base::internal::CheckedObserverAdapter"* [ %74, %72 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %73, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %74) #10
  %75 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %74, %70
  br i1 %75, label %76, label %72

76:                                               ; preds = %72, %66
  %77 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %66 ], [ %70, %72 ]
  store %"class.base::internal::CheckedObserverAdapter"* %77, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  br label %97

78:                                               ; preds = %49
  %79 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #10
  %80 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %80) #10
  %81 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::WeakPtr"* %4 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %81, align 8
  %84 = bitcast %"class.base::internal::CheckedObserverAdapter"* %24 to i64*
  %85 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.base::internal::WeakReference::Flag"* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw sub i32* %89, i32 1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %86) #10
  %93 = bitcast %"class.base::internal::WeakReference::Flag"* %86 to i8*
  call void @_ZdlPv(i8* %93) #11
  br label %94

94:                                               ; preds = %78, %88, %92
  %95 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %28, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %80) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #10
  br label %97

97:                                               ; preds = %2, %76, %94, %23
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.display::Display"* @_ZNK7display11DisplayList15FindDisplayByIdEl(%"class.display::DisplayList"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.display::Display"*, %"class.display::Display"** %3, align 8
  %5 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.display::Display"*, %"class.display::Display"** %5, align 8
  %7 = icmp eq %"class.display::Display"* %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2, %13
  %9 = phi %"class.display::Display"* [ %14, %13 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %9, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %9, i64 1
  %15 = icmp eq %"class.display::Display"* %14, %6
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %13, %2
  %17 = phi %"class.display::Display"* [ %4, %2 ], [ %6, %13 ], [ %9, %8 ]
  ret %"class.display::Display"* %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.display::Display"* @_ZNK7display11DisplayList25GetPrimaryDisplayIteratorEv(%"class.display::DisplayList"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.display::Display"*, %"class.display::Display"** %4, align 8
  %6 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"class.display::Display"*, %"class.display::Display"** %6, align 8
  %8 = icmp eq %"class.display::Display"* %5, %7
  br i1 %8, label %17, label %9

9:                                                ; preds = %1, %14
  %10 = phi %"class.display::Display"* [ %15, %14 ], [ %5, %1 ]
  %11 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %10, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, %3
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %10, i64 1
  %16 = icmp eq %"class.display::Display"* %15, %7
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %14, %1
  %18 = phi %"class.display::Display"* [ %5, %1 ], [ %10, %9 ], [ %7, %14 ]
  ret %"class.display::Display"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(568) %"class.display::Display"* @_ZNK7display11DisplayList17GetPrimaryDisplayEv(%"class.display::DisplayList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.display::Display"*, %"class.display::Display"** %5, align 8
  %7 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.display::Display"*, %"class.display::Display"** %7, align 8
  %9 = icmp eq %"class.display::Display"* %6, %8
  br i1 %9, label %18, label %10

10:                                               ; preds = %1, %15
  %11 = phi %"class.display::Display"* [ %16, %15 ], [ %6, %1 ]
  %12 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %11, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, %4
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %11, i64 1
  %17 = icmp eq %"class.display::Display"* %16, %8
  br i1 %17, label %21, label %10

18:                                               ; preds = %10, %1
  %19 = phi %"class.display::Display"* [ %6, %1 ], [ %11, %10 ]
  %20 = icmp eq %"class.display::Display"* %19, %8
  br i1 %20, label %21, label %25

21:                                               ; preds = %15, %18
  %22 = phi %"class.display::Display"* [ %19, %18 ], [ %8, %15 ]
  %23 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 75, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %18, %21
  %26 = phi %"class.display::Display"* [ %19, %18 ], [ %22, %21 ]
  ret %"class.display::Display"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(568) %"class.display::Display"* @_ZNK7display11DisplayList17GetCurrentDisplayEv(%"class.display::DisplayList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.display::Display"*, %"class.display::Display"** %5, align 8
  %7 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.display::Display"*, %"class.display::Display"** %7, align 8
  %9 = icmp eq %"class.display::Display"* %6, %8
  br i1 %9, label %18, label %10

10:                                               ; preds = %1, %15
  %11 = phi %"class.display::Display"* [ %16, %15 ], [ %6, %1 ]
  %12 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %11, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, %4
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %11, i64 1
  %17 = icmp eq %"class.display::Display"* %16, %8
  br i1 %17, label %21, label %10

18:                                               ; preds = %10, %1
  %19 = phi %"class.display::Display"* [ %6, %1 ], [ %11, %10 ]
  %20 = icmp eq %"class.display::Display"* %19, %8
  br i1 %20, label %21, label %25

21:                                               ; preds = %15, %18
  %22 = phi %"class.display::Display"* [ %19, %18 ], [ %8, %15 ]
  %23 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0)) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %18, %21
  %26 = phi %"class.display::Display"* [ %19, %18 ], [ %22, %21 ]
  ret %"class.display::Display"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display11DisplayList18AddOrUpdateDisplayERKNS_7DisplayENS0_4TypeE(%"class.display::DisplayList"*, %"class.display::Display"* dereferenceable(568), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.display::Display"*, %"class.display::Display"** %6, align 8
  %8 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.display::Display"*, %"class.display::Display"** %8, align 8
  %10 = icmp eq %"class.display::Display"* %7, %9
  br i1 %10, label %19, label %11

11:                                               ; preds = %3, %16
  %12 = phi %"class.display::Display"* [ %17, %16 ], [ %7, %3 ]
  %13 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, %5
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %12, i64 1
  %18 = icmp eq %"class.display::Display"* %17, %9
  br i1 %18, label %22, label %11

19:                                               ; preds = %11, %3
  %20 = phi %"class.display::Display"* [ %7, %3 ], [ %12, %11 ]
  %21 = icmp eq %"class.display::Display"* %20, %9
  br i1 %21, label %22, label %23

22:                                               ; preds = %16, %19
  tail call void @_ZN7display11DisplayList10AddDisplayERKNS_7DisplayENS0_4TypeE(%"class.display::DisplayList"* %0, %"class.display::Display"* dereferenceable(568) %1, i32 %2)
  br label %25

23:                                               ; preds = %19
  %24 = tail call i32 @_ZN7display11DisplayList13UpdateDisplayERKNS_7DisplayENS0_4TypeE(%"class.display::DisplayList"* %0, %"class.display::Display"* dereferenceable(568) %1, i32 %2)
  br label %25

25:                                               ; preds = %23, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display11DisplayList10AddDisplayERKNS_7DisplayENS0_4TypeE(%"class.display::DisplayList"*, %"class.display::Display"* dereferenceable(568), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"class.display::Display"*, %"class.display::Display"** %6, align 8
  %8 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.display::Display"*, %"class.display::Display"** %8, align 8
  %10 = icmp eq %"class.display::Display"* %7, %9
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %7, %"class.display::Display"* dereferenceable(568) %1) #10
  %12 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %7, i64 1
  %13 = ptrtoint %"class.display::Display"* %12 to i64
  %14 = bitcast %"class.display::Display"** %6 to i64*
  store i64 %13, i64* %14, align 8
  br label %17

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN7display7DisplayENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %16, %"class.display::Display"* dereferenceable(568) %1) #10
  br label %17

17:                                               ; preds = %11, %15
  %18 = icmp eq i32 %2, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %17
  %20 = bitcast %"class.display::Display"** %6 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.display::DisplayList"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = icmp eq i64 %24, 568
  br i1 %25, label %26, label %30

26:                                               ; preds = %19, %17
  %27 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  store i64 %28, i64* %29, align 8
  br label %30

30:                                               ; preds = %26, %19
  %31 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3
  %32 = bitcast %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #10
  %33 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %35 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %36 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %31, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 40, i1 false)
  %38 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %36, align 8, !noalias !2
  %39 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %40 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %39, align 8, !noalias !2
  %41 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %38, %40
  %42 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %42) #10
  br i1 %41, label %43, label %45

43:                                               ; preds = %30
  %44 = bitcast %"class.base::ObserverList"** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #10, !alias.scope !2
  br label %59

45:                                               ; preds = %30
  store %"class.base::ObserverList"* %31, %"class.base::ObserverList"** %33, align 8, !alias.scope !2
  %46 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %42, %"class.base::internal::LinkNodeBase"* %46) #10
  store i64 0, i64* %34, align 8, !alias.scope !2
  %47 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 3
  %48 = load i32, i32* %47, align 8, !noalias !2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %57, label %50

50:                                               ; preds = %45
  %51 = bitcast %"class.base::internal::CheckedObserverAdapter"** %39 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !2
  %53 = bitcast %"class.base::ObserverList"* %31 to i64*
  %54 = load i64, i64* %53, align 8, !noalias !2
  %55 = sub i64 %52, %54
  %56 = ashr exact i64 %55, 4
  br label %57

57:                                               ; preds = %50, %45
  %58 = phi i64 [ %56, %50 ], [ -1, %45 ]
  store i64 %58, i64* %35, align 8, !alias.scope !2
  call void @_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #10
  br label %59

59:                                               ; preds = %43, %57
  %60 = bitcast %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #10
  %61 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #10
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #10, !alias.scope !5
  br label %67

67:                                               ; preds = %180, %59
  %68 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %33, align 8
  %69 = icmp eq %"class.base::ObserverList"* %68, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %67
  %71 = load i64, i64* %34, align 8
  %72 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %68, i64 0, i32 0, i32 0, i32 1
  %73 = bitcast %"class.base::internal::CheckedObserverAdapter"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.base::ObserverList"* %68 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = ashr exact i64 %77, 4
  %79 = load i64, i64* %35, align 8
  %80 = icmp ult i64 %78, %79
  %81 = select i1 %80, i64 %78, i64 %79
  %82 = icmp eq i64 %71, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %101

85:                                               ; preds = %70, %67
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %87 = icmp eq %"class.base::ObserverList"* %86, null
  br i1 %87, label %136, label %88

88:                                               ; preds = %85
  %89 = load i64, i64* %62, align 8
  %90 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %86, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"class.base::internal::CheckedObserverAdapter"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.base::ObserverList"* %86 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 4
  %97 = load i64, i64* %63, align 8
  %98 = icmp ult i64 %96, %97
  %99 = select i1 %98, i64 %96, i64 %97
  %100 = icmp eq i64 %89, %99
  br i1 %100, label %110, label %101

101:                                              ; preds = %88, %83
  %102 = phi %"class.base::ObserverList"* [ %84, %83 ], [ %86, %88 ]
  %103 = icmp eq %"class.base::ObserverList"* %68, %102
  %104 = load i64, i64* %34, align 8
  %105 = load i64, i64* %62, align 8
  %106 = icmp eq i64 %104, %105
  %107 = and i1 %103, %106
  br i1 %107, label %108, label %165

108:                                              ; preds = %101
  %109 = icmp eq %"class.base::ObserverList"* %68, null
  br i1 %109, label %136, label %110

110:                                              ; preds = %88, %108
  %111 = phi %"class.base::ObserverList"* [ %68, %108 ], [ %86, %88 ]
  %112 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1, i32 0, i32 0, i32 1
  %114 = bitcast %"class.base::internal::LinkNodeBase"** %113 to %"class.base::LinkNode"**
  %115 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %114, align 8
  %116 = bitcast %"class.base::LinkedList"* %112 to %"class.base::LinkNode"**
  %117 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %116, align 8
  %118 = icmp eq %"class.base::LinkNode"* %115, %117
  br i1 %118, label %119, label %132

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %120, align 8
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 1
  %123 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %122, align 8
  %124 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7display15DisplayObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %121, %"class.base::internal::CheckedObserverAdapter"* %123) #10
  %125 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %122, align 8
  %126 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %124, %125
  br i1 %126, label %132, label %127

127:                                              ; preds = %119, %127
  %128 = phi %"class.base::internal::CheckedObserverAdapter"* [ %129, %127 ], [ %125, %119 ]
  %129 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %128, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %129) #10
  %130 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %129, %124
  br i1 %130, label %131, label %127

131:                                              ; preds = %127
  store %"class.base::internal::CheckedObserverAdapter"* %124, %"class.base::internal::CheckedObserverAdapter"** %122, align 8
  br label %132

132:                                              ; preds = %131, %119, %110
  %133 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %134 = icmp eq %"class.base::ObserverList"* %133, null
  br i1 %134, label %136, label %135

135:                                              ; preds = %132
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #10
  br label %136

136:                                              ; preds = %85, %108, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #10
  %137 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %33, align 8
  %138 = icmp eq %"class.base::ObserverList"* %137, null
  br i1 %138, label %164, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %137, i64 0, i32 1
  %141 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %137, i64 0, i32 1, i32 0, i32 0, i32 1
  %142 = bitcast %"class.base::internal::LinkNodeBase"** %141 to %"class.base::LinkNode"**
  %143 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %142, align 8
  %144 = bitcast %"class.base::LinkedList"* %140 to %"class.base::LinkNode"**
  %145 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %144, align 8
  %146 = icmp eq %"class.base::LinkNode"* %143, %145
  br i1 %146, label %147, label %160

147:                                              ; preds = %139
  %148 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %137, i64 0, i32 0, i32 0, i32 0
  %149 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %148, align 8
  %150 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %137, i64 0, i32 0, i32 0, i32 1
  %151 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %150, align 8
  %152 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7display15DisplayObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %149, %"class.base::internal::CheckedObserverAdapter"* %151) #10
  %153 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %150, align 8
  %154 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %152, %153
  br i1 %154, label %160, label %155

155:                                              ; preds = %147, %155
  %156 = phi %"class.base::internal::CheckedObserverAdapter"* [ %157, %155 ], [ %153, %147 ]
  %157 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %156, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %157) #10
  %158 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %157, %152
  br i1 %158, label %159, label %155

159:                                              ; preds = %155
  store %"class.base::internal::CheckedObserverAdapter"* %152, %"class.base::internal::CheckedObserverAdapter"** %150, align 8
  br label %160

160:                                              ; preds = %159, %147, %139
  %161 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %33, align 8
  %162 = icmp eq %"class.base::ObserverList"* %161, null
  br i1 %162, label %164, label %163

163:                                              ; preds = %160
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %33, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %42) #10
  br label %164

164:                                              ; preds = %136, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #10
  ret void

165:                                              ; preds = %101
  %166 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %68, i64 0, i32 0, i32 0, i32 0
  %167 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %166, align 8
  %168 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %167, i64 %104, i32 0, i32 0, i32 0
  %169 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %168) #10
  %170 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %167, i64 %104, i32 0, i32 0, i32 1
  %171 = bitcast i64* %170 to %"class.display::DisplayObserver"**
  %172 = load %"class.display::DisplayObserver"*, %"class.display::DisplayObserver"** %171, align 8
  %173 = select i1 %169, %"class.display::DisplayObserver"* %172, %"class.display::DisplayObserver"* null
  %174 = bitcast %"class.display::DisplayObserver"* %173 to void (%"class.display::DisplayObserver"*, %"class.display::Display"*)***
  %175 = load void (%"class.display::DisplayObserver"*, %"class.display::Display"*)**, void (%"class.display::DisplayObserver"*, %"class.display::Display"*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.display::DisplayObserver"*, %"class.display::Display"*)*, void (%"class.display::DisplayObserver"*, %"class.display::Display"*)** %175, i64 4
  %177 = load void (%"class.display::DisplayObserver"*, %"class.display::Display"*)*, void (%"class.display::DisplayObserver"*, %"class.display::Display"*)** %176, align 8
  call void %177(%"class.display::DisplayObserver"* %173, %"class.display::Display"* dereferenceable(568) %1) #10
  %178 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %33, align 8
  %179 = icmp eq %"class.base::ObserverList"* %178, null
  br i1 %179, label %180, label %181

180:                                              ; preds = %165, %181
  br label %67

181:                                              ; preds = %165
  %182 = load i64, i64* %34, align 8
  %183 = add i64 %182, 1
  store i64 %183, i64* %34, align 8
  call void @_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #10
  br label %180
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7display11DisplayList13UpdateDisplayERKNS_7DisplayENS0_4TypeE(%"class.display::DisplayList"*, %"class.display::Display"* dereferenceable(568), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.display::Display"*, %"class.display::Display"** %8, align 8
  %10 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.display::Display"*, %"class.display::Display"** %10, align 8
  %12 = icmp eq %"class.display::Display"* %9, %11
  br i1 %12, label %21, label %13

13:                                               ; preds = %3, %18
  %14 = phi %"class.display::Display"* [ %19, %18 ], [ %9, %3 ]
  %15 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %14, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, %7
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %14, i64 1
  %20 = icmp eq %"class.display::Display"* %19, %11
  br i1 %20, label %21, label %13

21:                                               ; preds = %13, %18, %3
  %22 = phi %"class.display::Display"* [ %9, %3 ], [ %14, %13 ], [ %11, %18 ]
  %23 = icmp eq i32 %2, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %31, label %30

30:                                               ; preds = %24
  store i64 %26, i64* %27, align 8
  br label %31

31:                                               ; preds = %24, %30, %21
  %32 = phi i32 [ 16, %30 ], [ 0, %24 ], [ 0, %21 ]
  %33 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 1
  %34 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 1
  %35 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %33, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %34, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %58

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 1, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 1, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %58

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 1, i32 1, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 1, i32 1, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 1, i32 1, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 1, i32 1, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %54, %56
  br i1 %57, label %62, label %58

58:                                               ; preds = %52, %31, %46, %40
  %59 = bitcast %"class.gfx::Rect"* %33 to i8*
  %60 = bitcast %"class.gfx::Rect"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 4 %60, i64 16, i1 false) #10
  %61 = or i32 %32, 1
  br label %62

62:                                               ; preds = %52, %58
  %63 = phi i32 [ %61, %58 ], [ %32, %52 ]
  %64 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 3
  %65 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 3
  %66 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %64, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %65, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %71, label %89

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 3, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 3, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %73, %75
  br i1 %76, label %77, label %89

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 3, i32 1, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 3, i32 1, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %79, %81
  br i1 %82, label %83, label %89

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 3, i32 1, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 3, i32 1, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %85, %87
  br i1 %88, label %93, label %89

89:                                               ; preds = %83, %62, %77, %71
  %90 = bitcast %"class.gfx::Rect"* %64 to i8*
  %91 = bitcast %"class.gfx::Rect"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 4 %91, i64 16, i1 false) #10
  %92 = or i32 %63, 2
  br label %93

93:                                               ; preds = %83, %89
  %94 = phi i32 [ %92, %89 ], [ %63, %83 ]
  %95 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 5
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 5
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %103, label %100

100:                                              ; preds = %93
  store i32 %98, i32* %95, align 4
  %101 = or i32 %94, 8
  %102 = load i32, i32* %97, align 4
  br label %103

103:                                              ; preds = %93, %100
  %104 = phi i32 [ %102, %100 ], [ %96, %93 ]
  %105 = phi i32 [ %101, %100 ], [ %94, %93 ]
  %106 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %107 = load i8, i8* %106, align 4, !range !8
  %108 = icmp eq i8 %107, 0
  %109 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %110 = select i1 %108, i32* %95, i32* %109
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %113 = load i8, i8* %112, align 4, !range !8
  %114 = icmp eq i8 %113, 0
  %115 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = select i1 %114, i32 %104, i32 %116
  %118 = icmp eq i32 %111, %117
  br i1 %118, label %125, label %119

119:                                              ; preds = %103
  %120 = bitcast i8* %106 to i64*
  %121 = zext i32 %117 to i64
  %122 = shl nuw i64 %121, 32
  %123 = or i64 %122, 1
  store i64 %123, i64* %120, align 8
  %124 = or i32 %105, 8
  br label %125

125:                                              ; preds = %103, %119
  %126 = phi i32 [ %124, %119 ], [ %105, %103 ]
  %127 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 4
  %128 = load float, float* %127, align 8
  %129 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 4
  %130 = load float, float* %129, align 8
  %131 = fcmp une float %128, %130
  br i1 %131, label %132, label %134

132:                                              ; preds = %125
  store float %130, float* %127, align 8
  %133 = or i32 %126, 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %126, %125 ]
  %136 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 10
  %137 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 10
  %138 = tail call zeroext i1 @_ZNK3gfx18DisplayColorSpacesneERKS0_(%"class.gfx::DisplayColorSpaces"* %136, %"class.gfx::DisplayColorSpaces"* dereferenceable(472) %137) #10
  br i1 %138, label %151, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 12
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 12
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %141, %143
  br i1 %144, label %145, label %151

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 11
  %147 = load i32, i32* %146, align 8
  %148 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 11
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %147, %149
  br i1 %150, label %178, label %151

151:                                              ; preds = %145, %139, %134
  %152 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 10, i32 0, i64 0, i32 0
  %153 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %137, i64 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 436, i1 false) #10
  %154 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 10, i32 3
  %155 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 0
  %156 = load i8, i8* %155, align 8, !range !8
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %168, label %158

158:                                              ; preds = %151
  %159 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %160 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %154, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i8, i8* %160, align 8, !range !8
  %162 = icmp eq i8 %161, 0
  %163 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %162, label %167, label %164

164:                                              ; preds = %158
  %165 = bitcast %"struct.gfx::HDRStaticMetadata"* %163 to i8*
  %166 = bitcast %"struct.gfx::HDRStaticMetadata"* %159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 24, i1 false) #10
  br label %170

167:                                              ; preds = %158
  tail call void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"* %163, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24) %159) #10
  store i8 1, i8* %160, align 8
  br label %170

168:                                              ; preds = %151
  %169 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %154, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %169, align 8
  br label %170

170:                                              ; preds = %164, %167, %168
  %171 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 12
  %172 = load i32, i32* %171, align 4
  %173 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 12
  store i32 %172, i32* %173, align 4
  %174 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 11
  %175 = load i32, i32* %174, align 8
  %176 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 11
  store i32 %175, i32* %176, align 8
  %177 = or i32 %135, 64
  br label %178

178:                                              ; preds = %145, %170
  %179 = phi i32 [ %177, %170 ], [ %135, %145 ]
  %180 = tail call i64 @_ZNK7display7Display14GetSizeInPixelEv(%"class.display::Display"* %22) #10
  %181 = trunc i64 %180 to i32
  %182 = lshr i64 %180, 32
  %183 = trunc i64 %182 to i32
  %184 = tail call i64 @_ZNK7display7Display14GetSizeInPixelEv(%"class.display::Display"* %1) #10
  %185 = trunc i64 %184 to i32
  %186 = lshr i64 %184, 32
  %187 = trunc i64 %186 to i32
  %188 = icmp ne i32 %181, %185
  %189 = icmp ne i32 %183, %187
  %190 = or i1 %188, %189
  br i1 %190, label %191, label %195

191:                                              ; preds = %178
  %192 = tail call i64 @_ZNK7display7Display14GetSizeInPixelEv(%"class.display::Display"* %1) #10
  %193 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 0, i32 2
  %194 = bitcast %"class.gfx::Size"* %193 to i64*
  store i64 %192, i64* %194, align 8
  br label %195

195:                                              ; preds = %178, %191
  %196 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3
  %197 = bitcast %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %197) #10
  %198 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %199 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %200 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %201 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %196, i64 0, i32 0, i32 0, i32 0
  %202 = bitcast %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 -86, i64 40, i1 false)
  %203 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %201, align 8, !noalias !9
  %204 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %205 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %204, align 8, !noalias !9
  %206 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %203, %205
  %207 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %207) #10
  br i1 %206, label %208, label %210

208:                                              ; preds = %195
  %209 = bitcast %"class.base::ObserverList"** %198 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 24, i1 false) #10, !alias.scope !9
  br label %224

210:                                              ; preds = %195
  store %"class.base::ObserverList"* %196, %"class.base::ObserverList"** %198, align 8, !alias.scope !9
  %211 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %207, %"class.base::internal::LinkNodeBase"* %211) #10
  store i64 0, i64* %199, align 8, !alias.scope !9
  %212 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 3
  %213 = load i32, i32* %212, align 8, !noalias !9
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %222, label %215

215:                                              ; preds = %210
  %216 = bitcast %"class.base::internal::CheckedObserverAdapter"** %204 to i64*
  %217 = load i64, i64* %216, align 8, !noalias !9
  %218 = bitcast %"class.base::ObserverList"* %196 to i64*
  %219 = load i64, i64* %218, align 8, !noalias !9
  %220 = sub i64 %217, %219
  %221 = ashr exact i64 %220, 4
  br label %222

222:                                              ; preds = %215, %210
  %223 = phi i64 [ %221, %215 ], [ -1, %210 ]
  store i64 %223, i64* %200, align 8, !alias.scope !9
  call void @_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #10
  br label %224

224:                                              ; preds = %208, %222
  %225 = bitcast %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %225) #10
  %226 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %227 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %228 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %229 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %230 = bitcast %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %230, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %229) #10
  %231 = bitcast %"class.base::ObserverList"** %226 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %231, i8 0, i64 24, i1 false) #10, !alias.scope !12
  br label %232

232:                                              ; preds = %345, %224
  %233 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %198, align 8
  %234 = icmp eq %"class.base::ObserverList"* %233, null
  br i1 %234, label %250, label %235

235:                                              ; preds = %232
  %236 = load i64, i64* %199, align 8
  %237 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %233, i64 0, i32 0, i32 0, i32 1
  %238 = bitcast %"class.base::internal::CheckedObserverAdapter"** %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %"class.base::ObserverList"* %233 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = sub i64 %239, %241
  %243 = ashr exact i64 %242, 4
  %244 = load i64, i64* %200, align 8
  %245 = icmp ult i64 %243, %244
  %246 = select i1 %245, i64 %243, i64 %244
  %247 = icmp eq i64 %236, %246
  br i1 %247, label %250, label %248

248:                                              ; preds = %235
  %249 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %226, align 8
  br label %266

250:                                              ; preds = %235, %232
  %251 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %226, align 8
  %252 = icmp eq %"class.base::ObserverList"* %251, null
  br i1 %252, label %301, label %253

253:                                              ; preds = %250
  %254 = load i64, i64* %227, align 8
  %255 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 0, i32 0, i32 1
  %256 = bitcast %"class.base::internal::CheckedObserverAdapter"** %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"class.base::ObserverList"* %251 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = sub i64 %257, %259
  %261 = ashr exact i64 %260, 4
  %262 = load i64, i64* %228, align 8
  %263 = icmp ult i64 %261, %262
  %264 = select i1 %263, i64 %261, i64 %262
  %265 = icmp eq i64 %254, %264
  br i1 %265, label %275, label %266

266:                                              ; preds = %253, %248
  %267 = phi %"class.base::ObserverList"* [ %249, %248 ], [ %251, %253 ]
  %268 = icmp eq %"class.base::ObserverList"* %233, %267
  %269 = load i64, i64* %199, align 8
  %270 = load i64, i64* %227, align 8
  %271 = icmp eq i64 %269, %270
  %272 = and i1 %268, %271
  br i1 %272, label %273, label %330

273:                                              ; preds = %266
  %274 = icmp eq %"class.base::ObserverList"* %233, null
  br i1 %274, label %301, label %275

275:                                              ; preds = %253, %273
  %276 = phi %"class.base::ObserverList"* [ %233, %273 ], [ %251, %253 ]
  %277 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %276, i64 0, i32 1
  %278 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %276, i64 0, i32 1, i32 0, i32 0, i32 1
  %279 = bitcast %"class.base::internal::LinkNodeBase"** %278 to %"class.base::LinkNode"**
  %280 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %279, align 8
  %281 = bitcast %"class.base::LinkedList"* %277 to %"class.base::LinkNode"**
  %282 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %281, align 8
  %283 = icmp eq %"class.base::LinkNode"* %280, %282
  br i1 %283, label %284, label %297

284:                                              ; preds = %275
  %285 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %276, i64 0, i32 0, i32 0, i32 0
  %286 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %285, align 8
  %287 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %276, i64 0, i32 0, i32 0, i32 1
  %288 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %287, align 8
  %289 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7display15DisplayObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %286, %"class.base::internal::CheckedObserverAdapter"* %288) #10
  %290 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %287, align 8
  %291 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %289, %290
  br i1 %291, label %297, label %292

292:                                              ; preds = %284, %292
  %293 = phi %"class.base::internal::CheckedObserverAdapter"* [ %294, %292 ], [ %290, %284 ]
  %294 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %293, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %294) #10
  %295 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %294, %289
  br i1 %295, label %296, label %292

296:                                              ; preds = %292
  store %"class.base::internal::CheckedObserverAdapter"* %289, %"class.base::internal::CheckedObserverAdapter"** %287, align 8
  br label %297

297:                                              ; preds = %296, %284, %275
  %298 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %226, align 8
  %299 = icmp eq %"class.base::ObserverList"* %298, null
  br i1 %299, label %301, label %300

300:                                              ; preds = %297
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %226, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %229) #10
  br label %301

301:                                              ; preds = %250, %273, %297, %300
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %225) #10
  %302 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %198, align 8
  %303 = icmp eq %"class.base::ObserverList"* %302, null
  br i1 %303, label %329, label %304

304:                                              ; preds = %301
  %305 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %302, i64 0, i32 1
  %306 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %302, i64 0, i32 1, i32 0, i32 0, i32 1
  %307 = bitcast %"class.base::internal::LinkNodeBase"** %306 to %"class.base::LinkNode"**
  %308 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %307, align 8
  %309 = bitcast %"class.base::LinkedList"* %305 to %"class.base::LinkNode"**
  %310 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %309, align 8
  %311 = icmp eq %"class.base::LinkNode"* %308, %310
  br i1 %311, label %312, label %325

312:                                              ; preds = %304
  %313 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %302, i64 0, i32 0, i32 0, i32 0
  %314 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %313, align 8
  %315 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %302, i64 0, i32 0, i32 0, i32 1
  %316 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %315, align 8
  %317 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7display15DisplayObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %314, %"class.base::internal::CheckedObserverAdapter"* %316) #10
  %318 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %315, align 8
  %319 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %317, %318
  br i1 %319, label %325, label %320

320:                                              ; preds = %312, %320
  %321 = phi %"class.base::internal::CheckedObserverAdapter"* [ %322, %320 ], [ %318, %312 ]
  %322 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %321, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %322) #10
  %323 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %322, %317
  br i1 %323, label %324, label %320

324:                                              ; preds = %320
  store %"class.base::internal::CheckedObserverAdapter"* %317, %"class.base::internal::CheckedObserverAdapter"** %315, align 8
  br label %325

325:                                              ; preds = %324, %312, %304
  %326 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %198, align 8
  %327 = icmp eq %"class.base::ObserverList"* %326, null
  br i1 %327, label %329, label %328

328:                                              ; preds = %325
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %198, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %207) #10
  br label %329

329:                                              ; preds = %301, %325, %328
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %197) #10
  ret i32 %179

330:                                              ; preds = %266
  %331 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %233, i64 0, i32 0, i32 0, i32 0
  %332 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %331, align 8
  %333 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %332, i64 %269, i32 0, i32 0, i32 0
  %334 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %333) #10
  %335 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %332, i64 %269, i32 0, i32 0, i32 1
  %336 = bitcast i64* %335 to %"class.display::DisplayObserver"**
  %337 = load %"class.display::DisplayObserver"*, %"class.display::DisplayObserver"** %336, align 8
  %338 = select i1 %334, %"class.display::DisplayObserver"* %337, %"class.display::DisplayObserver"* null
  %339 = bitcast %"class.display::DisplayObserver"* %338 to void (%"class.display::DisplayObserver"*, %"class.display::Display"*, i32)***
  %340 = load void (%"class.display::DisplayObserver"*, %"class.display::Display"*, i32)**, void (%"class.display::DisplayObserver"*, %"class.display::Display"*, i32)*** %339, align 8
  %341 = getelementptr inbounds void (%"class.display::DisplayObserver"*, %"class.display::Display"*, i32)*, void (%"class.display::DisplayObserver"*, %"class.display::Display"*, i32)** %340, i64 6
  %342 = load void (%"class.display::DisplayObserver"*, %"class.display::Display"*, i32)*, void (%"class.display::DisplayObserver"*, %"class.display::Display"*, i32)** %341, align 8
  call void %342(%"class.display::DisplayObserver"* %338, %"class.display::Display"* dereferenceable(568) %22, i32 %179) #10
  %343 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %198, align 8
  %344 = icmp eq %"class.base::ObserverList"* %343, null
  br i1 %344, label %345, label %346

345:                                              ; preds = %330, %346
  br label %232

346:                                              ; preds = %330
  %347 = load i64, i64* %199, align 8
  %348 = add i64 %347, 1
  store i64 %348, i64* %199, align 8
  call void @_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #10
  br label %345
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7display11DisplayList13UpdateDisplayERKNS_7DisplayE(%"class.display::DisplayList"*, %"class.display::Display"* dereferenceable(568)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ne i64 %6, %4
  %8 = zext i1 %7 to i32
  %9 = tail call i32 @_ZN7display11DisplayList13UpdateDisplayERKNS_7DisplayENS0_4TypeE(%"class.display::DisplayList"* %0, %"class.display::Display"* dereferenceable(568) %1, i32 %8)
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7display11DisplayList18GetTypeByDisplayIdEl(%"class.display::DisplayList"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ne i64 %4, %1
  %6 = zext i1 %5 to i32
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.display::Display"* @_ZN7display11DisplayList23FindDisplayByIdInternalEl(%"class.display::DisplayList"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.display::Display"*, %"class.display::Display"** %3, align 8
  %5 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.display::Display"*, %"class.display::Display"** %5, align 8
  %7 = icmp eq %"class.display::Display"* %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2, %13
  %9 = phi %"class.display::Display"* [ %14, %13 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %9, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %9, i64 1
  %15 = icmp eq %"class.display::Display"* %14, %6
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %13, %2
  %17 = phi %"class.display::Display"* [ %4, %2 ], [ %6, %13 ], [ %9, %8 ]
  ret %"class.display::Display"* %17
}

declare zeroext i1 @_ZNK3gfx18DisplayColorSpacesneERKS0_(%"class.gfx::DisplayColorSpaces"*, %"class.gfx::DisplayColorSpaces"* dereferenceable(472)) local_unnamed_addr #3

declare i64 @_ZNK7display7Display14GetSizeInPixelEv(%"class.display::Display"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display11DisplayList13RemoveDisplayEl(%"class.display::DisplayList"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.display::Display", align 8
  %4 = alloca %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.display::Display"*, %"class.display::Display"** %6, align 8
  %8 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.display::Display"*, %"class.display::Display"** %8, align 8
  %10 = icmp eq %"class.display::Display"* %7, %9
  br i1 %10, label %19, label %11

11:                                               ; preds = %2, %16
  %12 = phi %"class.display::Display"* [ %17, %16 ], [ %7, %2 ]
  %13 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, %1
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %12, i64 1
  %18 = icmp eq %"class.display::Display"* %17, %9
  br i1 %18, label %19, label %11

19:                                               ; preds = %11, %16, %2
  %20 = phi %"class.display::Display"* [ %7, %2 ], [ %12, %11 ], [ %9, %16 ]
  %21 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, %1
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  store i64 -1, i64* %21, align 8
  br label %25

25:                                               ; preds = %24, %19
  %26 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, %1
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  store i64 -1, i64* %26, align 8
  br label %30

30:                                               ; preds = %29, %25
  %31 = bitcast %"class.display::Display"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %31) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN7display11DisplayList13RemoveDisplayEl.display to i8*), i64 568, i1 false)
  call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* nonnull %3, %"class.display::Display"* dereferenceable(568) %20) #10
  %32 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %20, i64 1
  %33 = load %"class.display::Display"*, %"class.display::Display"** %8, align 8
  %34 = icmp eq %"class.display::Display"* %32, %33
  br i1 %34, label %69, label %35

35:                                               ; preds = %30, %58
  %36 = phi %"class.display::Display"* [ %64, %58 ], [ %20, %30 ]
  %37 = phi %"class.display::Display"* [ %63, %58 ], [ %32, %30 ]
  %38 = bitcast %"class.display::Display"* %36 to i8*
  %39 = bitcast %"class.display::Display"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 80, i1 false) #10
  %40 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %36, i64 0, i32 10, i32 0, i64 0, i32 0
  %41 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %37, i64 0, i32 10, i32 0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 436, i1 false) #10
  %42 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %36, i64 0, i32 10, i32 3
  %43 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %37, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 0
  %44 = load i8, i8* %43, align 8, !range !8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %37, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !8
  %50 = icmp eq i8 %49, 0
  %51 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %36, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %50, label %55, label %52

52:                                               ; preds = %46
  %53 = bitcast %"struct.gfx::HDRStaticMetadata"* %51 to i8*
  %54 = bitcast %"struct.gfx::HDRStaticMetadata"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false) #10
  br label %58

55:                                               ; preds = %46
  call void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"* %51, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24) %47) #10
  store i8 1, i8* %48, align 8
  br label %58

56:                                               ; preds = %35
  %57 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %57, align 8
  br label %58

58:                                               ; preds = %56, %55, %52
  %59 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %36, i64 0, i32 11
  %60 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %37, i64 0, i32 11
  %61 = bitcast i32* %59 to i8*
  %62 = bitcast i32* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 16, i1 false) #10
  %63 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %37, i64 1
  %64 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %36, i64 1
  %65 = icmp eq %"class.display::Display"* %63, %33
  br i1 %65, label %66, label %35

66:                                               ; preds = %58
  %67 = load %"class.display::Display"*, %"class.display::Display"** %8, align 8
  %68 = icmp eq %"class.display::Display"* %67, %64
  br i1 %68, label %76, label %69

69:                                               ; preds = %66, %30
  %70 = phi %"class.display::Display"* [ %64, %66 ], [ %20, %30 ]
  %71 = phi %"class.display::Display"* [ %67, %66 ], [ %32, %30 ]
  br label %72

72:                                               ; preds = %72, %69
  %73 = phi %"class.display::Display"* [ %74, %72 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %73, i64 -1
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* %74) #10
  %75 = icmp eq %"class.display::Display"* %74, %70
  br i1 %75, label %76, label %72

76:                                               ; preds = %72, %66
  %77 = phi %"class.display::Display"* [ %64, %66 ], [ %70, %72 ]
  store %"class.display::Display"* %77, %"class.display::Display"** %8, align 8
  %78 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3
  %79 = bitcast %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %79) #10
  %80 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %82 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %83 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %78, i64 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 40, i1 false)
  %85 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %83, align 8, !noalias !15
  %86 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %87 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %86, align 8, !noalias !15
  %88 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %85, %87
  %89 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %89) #10
  br i1 %88, label %90, label %92

90:                                               ; preds = %76
  %91 = bitcast %"class.base::ObserverList"** %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #10, !alias.scope !15
  br label %106

92:                                               ; preds = %76
  store %"class.base::ObserverList"* %78, %"class.base::ObserverList"** %80, align 8, !alias.scope !15
  %93 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %89, %"class.base::internal::LinkNodeBase"* %93) #10
  store i64 0, i64* %81, align 8, !alias.scope !15
  %94 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 3, i32 3
  %95 = load i32, i32* %94, align 8, !noalias !15
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %104, label %97

97:                                               ; preds = %92
  %98 = bitcast %"class.base::internal::CheckedObserverAdapter"** %86 to i64*
  %99 = load i64, i64* %98, align 8, !noalias !15
  %100 = bitcast %"class.base::ObserverList"* %78 to i64*
  %101 = load i64, i64* %100, align 8, !noalias !15
  %102 = sub i64 %99, %101
  %103 = ashr exact i64 %102, 4
  br label %104

104:                                              ; preds = %97, %92
  %105 = phi i64 [ %103, %97 ], [ -1, %92 ]
  store i64 %105, i64* %82, align 8, !alias.scope !15
  call void @_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #10
  br label %106

106:                                              ; preds = %90, %104
  %107 = bitcast %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %107) #10
  %108 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %109 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %111 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %111) #10
  %113 = bitcast %"class.base::ObserverList"** %108 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 24, i1 false) #10, !alias.scope !18
  br label %114

114:                                              ; preds = %227, %106
  %115 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %80, align 8
  %116 = icmp eq %"class.base::ObserverList"* %115, null
  br i1 %116, label %132, label %117

117:                                              ; preds = %114
  %118 = load i64, i64* %81, align 8
  %119 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 1
  %120 = bitcast %"class.base::internal::CheckedObserverAdapter"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.base::ObserverList"* %115 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 %121, %123
  %125 = ashr exact i64 %124, 4
  %126 = load i64, i64* %82, align 8
  %127 = icmp ult i64 %125, %126
  %128 = select i1 %127, i64 %125, i64 %126
  %129 = icmp eq i64 %118, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %117
  %131 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %108, align 8
  br label %148

132:                                              ; preds = %117, %114
  %133 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %108, align 8
  %134 = icmp eq %"class.base::ObserverList"* %133, null
  br i1 %134, label %183, label %135

135:                                              ; preds = %132
  %136 = load i64, i64* %109, align 8
  %137 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %133, i64 0, i32 0, i32 0, i32 1
  %138 = bitcast %"class.base::internal::CheckedObserverAdapter"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.base::ObserverList"* %133 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %139, %141
  %143 = ashr exact i64 %142, 4
  %144 = load i64, i64* %110, align 8
  %145 = icmp ult i64 %143, %144
  %146 = select i1 %145, i64 %143, i64 %144
  %147 = icmp eq i64 %136, %146
  br i1 %147, label %157, label %148

148:                                              ; preds = %135, %130
  %149 = phi %"class.base::ObserverList"* [ %131, %130 ], [ %133, %135 ]
  %150 = icmp eq %"class.base::ObserverList"* %115, %149
  %151 = load i64, i64* %81, align 8
  %152 = load i64, i64* %109, align 8
  %153 = icmp eq i64 %151, %152
  %154 = and i1 %150, %153
  br i1 %154, label %155, label %212

155:                                              ; preds = %148
  %156 = icmp eq %"class.base::ObserverList"* %115, null
  br i1 %156, label %183, label %157

157:                                              ; preds = %135, %155
  %158 = phi %"class.base::ObserverList"* [ %115, %155 ], [ %133, %135 ]
  %159 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %158, i64 0, i32 1
  %160 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %158, i64 0, i32 1, i32 0, i32 0, i32 1
  %161 = bitcast %"class.base::internal::LinkNodeBase"** %160 to %"class.base::LinkNode"**
  %162 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %161, align 8
  %163 = bitcast %"class.base::LinkedList"* %159 to %"class.base::LinkNode"**
  %164 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %163, align 8
  %165 = icmp eq %"class.base::LinkNode"* %162, %164
  br i1 %165, label %166, label %179

166:                                              ; preds = %157
  %167 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %158, i64 0, i32 0, i32 0, i32 0
  %168 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %167, align 8
  %169 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %158, i64 0, i32 0, i32 0, i32 1
  %170 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %169, align 8
  %171 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7display15DisplayObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %168, %"class.base::internal::CheckedObserverAdapter"* %170) #10
  %172 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %169, align 8
  %173 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %171, %172
  br i1 %173, label %179, label %174

174:                                              ; preds = %166, %174
  %175 = phi %"class.base::internal::CheckedObserverAdapter"* [ %176, %174 ], [ %172, %166 ]
  %176 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %175, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %176) #10
  %177 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %176, %171
  br i1 %177, label %178, label %174

178:                                              ; preds = %174
  store %"class.base::internal::CheckedObserverAdapter"* %171, %"class.base::internal::CheckedObserverAdapter"** %169, align 8
  br label %179

179:                                              ; preds = %178, %166, %157
  %180 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %108, align 8
  %181 = icmp eq %"class.base::ObserverList"* %180, null
  br i1 %181, label %183, label %182

182:                                              ; preds = %179
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %108, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %111) #10
  br label %183

183:                                              ; preds = %132, %155, %179, %182
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %107) #10
  %184 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %80, align 8
  %185 = icmp eq %"class.base::ObserverList"* %184, null
  br i1 %185, label %211, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %184, i64 0, i32 1
  %188 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %184, i64 0, i32 1, i32 0, i32 0, i32 1
  %189 = bitcast %"class.base::internal::LinkNodeBase"** %188 to %"class.base::LinkNode"**
  %190 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %189, align 8
  %191 = bitcast %"class.base::LinkedList"* %187 to %"class.base::LinkNode"**
  %192 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %191, align 8
  %193 = icmp eq %"class.base::LinkNode"* %190, %192
  br i1 %193, label %194, label %207

194:                                              ; preds = %186
  %195 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %184, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %195, align 8
  %197 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %184, i64 0, i32 0, i32 0, i32 1
  %198 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %197, align 8
  %199 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7display15DisplayObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %196, %"class.base::internal::CheckedObserverAdapter"* %198) #10
  %200 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %197, align 8
  %201 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %199, %200
  br i1 %201, label %207, label %202

202:                                              ; preds = %194, %202
  %203 = phi %"class.base::internal::CheckedObserverAdapter"* [ %204, %202 ], [ %200, %194 ]
  %204 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %203, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %204) #10
  %205 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %204, %199
  br i1 %205, label %206, label %202

206:                                              ; preds = %202
  store %"class.base::internal::CheckedObserverAdapter"* %199, %"class.base::internal::CheckedObserverAdapter"** %197, align 8
  br label %207

207:                                              ; preds = %206, %194, %186
  %208 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %80, align 8
  %209 = icmp eq %"class.base::ObserverList"* %208, null
  br i1 %209, label %211, label %210

210:                                              ; preds = %207
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %80, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %89) #10
  br label %211

211:                                              ; preds = %183, %207, %210
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %79) #10
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %31) #10
  ret void

212:                                              ; preds = %148
  %213 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %213, align 8
  %215 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %214, i64 %151, i32 0, i32 0, i32 0
  %216 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %215) #10
  %217 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %214, i64 %151, i32 0, i32 0, i32 1
  %218 = bitcast i64* %217 to %"class.display::DisplayObserver"**
  %219 = load %"class.display::DisplayObserver"*, %"class.display::DisplayObserver"** %218, align 8
  %220 = select i1 %216, %"class.display::DisplayObserver"* %219, %"class.display::DisplayObserver"* null
  %221 = bitcast %"class.display::DisplayObserver"* %220 to void (%"class.display::DisplayObserver"*, %"class.display::Display"*)***
  %222 = load void (%"class.display::DisplayObserver"*, %"class.display::Display"*)**, void (%"class.display::DisplayObserver"*, %"class.display::Display"*)*** %221, align 8
  %223 = getelementptr inbounds void (%"class.display::DisplayObserver"*, %"class.display::Display"*)*, void (%"class.display::DisplayObserver"*, %"class.display::Display"*)** %222, i64 5
  %224 = load void (%"class.display::DisplayObserver"*, %"class.display::Display"*)*, void (%"class.display::DisplayObserver"*, %"class.display::Display"*)** %223, align 8
  call void %224(%"class.display::DisplayObserver"* %220, %"class.display::Display"* nonnull dereferenceable(568) %3) #10
  %225 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %80, align 8
  %226 = icmp eq %"class.base::ObserverList"* %225, null
  br i1 %226, label %227, label %228

227:                                              ; preds = %212, %228
  br label %114

228:                                              ; preds = %212
  %229 = load i64, i64* %81, align 8
  %230 = add i64 %229, 1
  store i64 %230, i64* %81, align 8
  call void @_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #10
  br label %227
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"*, %"class.display::Display"* dereferenceable(568)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7display7DisplayD1Ev(%"class.display::Display"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7display11DisplayList7IsValidEv(%"class.display::DisplayList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::flat_tree", align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.display::Display"*, %"class.display::Display"** %4, align 8
  %6 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"class.display::Display"*, %"class.display::Display"** %6, align 8
  %8 = icmp eq %"class.display::Display"* %5, %7
  br i1 %8, label %9, label %17

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -1
  br i1 %12, label %13, label %128

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, -1
  br label %128

17:                                               ; preds = %1
  %18 = ptrtoint %"class.display::Display"* %5 to i64
  %19 = ptrtoint %"class.display::Display"* %7 to i64
  %20 = bitcast %"class.base::internal::flat_tree"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %2, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #10
  %24 = sub i64 %19, %18
  %25 = sdiv exact i64 %24, 568
  %26 = bitcast i64** %23 to i64*
  %27 = bitcast %"class.base::internal::flat_tree"* %2 to i64*
  %28 = icmp eq i64 %24, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %17
  %30 = icmp ugt i64 %25, 2305843009213693951
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  tail call void @abort() #12
  unreachable

32:                                               ; preds = %29
  %33 = bitcast i64** %22 to i64*
  %34 = shl nsw i64 %25, 3
  %35 = tail call i8* @_Znwm(i64 %34) #11
  %36 = bitcast i8* %35 to i64*
  %37 = ptrtoint i8* %35 to i64
  %38 = getelementptr inbounds i64, i64* %36, i64 %25
  %39 = ptrtoint i64* %38 to i64
  %40 = ptrtoint i8* %35 to i64
  store i64 %40, i64* %27, align 8
  store i64 %37, i64* %33, align 8
  store i64 %39, i64* %26, align 8
  %41 = bitcast i8* %35 to i64*
  br label %42

42:                                               ; preds = %17, %32
  %43 = phi i64 [ 0, %17 ], [ %37, %32 ]
  %44 = phi i64* [ null, %17 ], [ %41, %32 ]
  %45 = bitcast i64* %3 to i8*
  %46 = bitcast i64** %22 to i64*
  %47 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %2, i64 0, i32 0
  br label %48

48:                                               ; preds = %83, %42
  %49 = phi i64 [ %43, %42 ], [ %85, %83 ]
  %50 = phi i64* [ %44, %42 ], [ %84, %83 ]
  %51 = phi %"class.display::Display"* [ %5, %42 ], [ %81, %83 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  %52 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %51, i64 0, i32 0
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %3, align 8
  %54 = ptrtoint i64* %50 to i64
  %55 = sub i64 %49, %54
  %56 = icmp eq i64 %55, 0
  %57 = inttoptr i64 %49 to i64*
  br i1 %56, label %73, label %58

58:                                               ; preds = %48
  %59 = ashr exact i64 %55, 3
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64* [ %50, %58 ], [ %71, %60 ]
  %62 = phi i64 [ %59, %58 ], [ %70, %60 ]
  %63 = lshr i64 %62, 1
  %64 = getelementptr inbounds i64, i64* %61, i64 %63
  %65 = load i64, i64* %64, align 8
  %66 = icmp slt i64 %65, %53
  %67 = getelementptr inbounds i64, i64* %64, i64 1
  %68 = xor i64 %63, -1
  %69 = add i64 %62, %68
  %70 = select i1 %66, i64 %69, i64 %63
  %71 = select i1 %66, i64* %67, i64* %61
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %73, label %60

73:                                               ; preds = %60, %48
  %74 = phi i64* [ %50, %48 ], [ %71, %60 ]
  %75 = icmp eq i64* %74, %57
  br i1 %75, label %79, label %76

76:                                               ; preds = %73
  %77 = load i64, i64* %74, align 8
  %78 = icmp slt i64 %53, %77
  br i1 %78, label %79, label %86

79:                                               ; preds = %76, %73
  %80 = call i64* @_ZNSt3__16vectorIlNS_9allocatorIlEEE7emplaceIJlEEENS_11__wrap_iterIPlEENS5_IPKlEEDpOT_(%"class.std::__1::vector.21"* nonnull %47, i64* %74, i64* nonnull dereferenceable(8) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  %81 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %51, i64 1
  %82 = icmp eq %"class.display::Display"* %81, %7
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = load i64*, i64** %21, align 8
  %85 = load i64, i64* %46, align 8
  br label %48

86:                                               ; preds = %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  br label %119

87:                                               ; preds = %79
  %88 = load %"class.display::Display"*, %"class.display::Display"** %4, align 8
  %89 = load %"class.display::Display"*, %"class.display::Display"** %6, align 8
  %90 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq %"class.display::Display"* %88, %89
  br i1 %92, label %119, label %93

93:                                               ; preds = %87, %98
  %94 = phi %"class.display::Display"* [ %99, %98 ], [ %88, %87 ]
  %95 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %94, i64 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = icmp eq i64 %96, %91
  br i1 %97, label %101, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %94, i64 1
  %100 = icmp eq %"class.display::Display"* %99, %89
  br i1 %100, label %119, label %93

101:                                              ; preds = %93
  %102 = icmp eq %"class.display::Display"* %94, %89
  br i1 %102, label %119, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 2
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %105, -1
  br i1 %106, label %118, label %107

107:                                              ; preds = %103
  br i1 %92, label %119, label %108

108:                                              ; preds = %107, %113
  %109 = phi %"class.display::Display"* [ %114, %113 ], [ %88, %107 ]
  %110 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %109, i64 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, %105
  br i1 %112, label %116, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %109, i64 1
  %115 = icmp eq %"class.display::Display"* %114, %89
  br i1 %115, label %119, label %108

116:                                              ; preds = %108
  %117 = icmp eq %"class.display::Display"* %109, %89
  br i1 %117, label %119, label %118

118:                                              ; preds = %103, %116
  br label %119

119:                                              ; preds = %98, %113, %107, %87, %86, %116, %101, %118
  %120 = phi i1 [ true, %118 ], [ false, %101 ], [ false, %116 ], [ false, %86 ], [ false, %87 ], [ false, %107 ], [ false, %113 ], [ false, %98 ]
  %121 = load i64*, i64** %21, align 8
  %122 = icmp eq i64* %121, null
  br i1 %122, label %127, label %123

123:                                              ; preds = %119
  %124 = ptrtoint i64* %121 to i64
  %125 = bitcast i64** %22 to i64*
  store i64 %124, i64* %125, align 8
  %126 = bitcast i64* %121 to i8*
  call void @_ZdlPv(i8* %126) #11
  br label %127

127:                                              ; preds = %119, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  br label %128

128:                                              ; preds = %9, %13, %127
  %129 = phi i1 [ %120, %127 ], [ false, %9 ], [ %16, %13 ]
  ret i1 %129
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7display11DisplayList38IsValidAndHasPrimaryAndCurrentDisplaysEv(%"class.display::DisplayList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZNK7display11DisplayList7IsValidEv(%"class.display::DisplayList"* %0)
  br i1 %2, label %3, label %36

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.display::Display"*, %"class.display::Display"** %6, align 8
  %8 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.display::Display"*, %"class.display::Display"** %8, align 8
  %10 = icmp eq %"class.display::Display"* %7, %9
  br i1 %10, label %19, label %11

11:                                               ; preds = %3, %16
  %12 = phi %"class.display::Display"* [ %17, %16 ], [ %7, %3 ]
  %13 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, %5
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %12, i64 1
  %18 = icmp eq %"class.display::Display"* %17, %9
  br i1 %18, label %36, label %11

19:                                               ; preds = %11, %3
  %20 = phi %"class.display::Display"* [ %7, %3 ], [ %12, %11 ]
  %21 = icmp eq %"class.display::Display"* %20, %9
  br i1 %21, label %36, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.display::DisplayList", %"class.display::DisplayList"* %0, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  br i1 %10, label %33, label %25

25:                                               ; preds = %22, %30
  %26 = phi %"class.display::Display"* [ %31, %30 ], [ %7, %22 ]
  %27 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %26, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, %24
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %26, i64 1
  %32 = icmp eq %"class.display::Display"* %31, %9
  br i1 %32, label %33, label %25

33:                                               ; preds = %25, %30, %22
  %34 = phi %"class.display::Display"* [ %7, %22 ], [ %26, %25 ], [ %9, %30 ]
  %35 = icmp ne %"class.display::Display"* %34, %9
  br label %36

36:                                               ; preds = %16, %19, %33, %1
  %37 = phi i1 [ false, %19 ], [ false, %1 ], [ %35, %33 ], [ false, %16 ]
  ret i1 %37
}

declare void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"*, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #3

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7display7DisplayENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"class.display::Display"*, %"class.display::Display"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.display::Display"* %2 to i64
  %5 = ptrtoint %"class.display::Display"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 568
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.display::Display"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 568
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.display::Display"*
  br i1 %15, label %83, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.display::Display"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 568
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 %22
  %25 = select i1 %23, %"class.display::Display"* %24, %"class.display::Display"* %2
  %26 = icmp eq %"class.display::Display"* %25, %1
  br i1 %26, label %58, label %27

27:                                               ; preds = %17, %50
  %28 = phi %"class.display::Display"* [ %56, %50 ], [ %16, %17 ]
  %29 = phi %"class.display::Display"* [ %55, %50 ], [ %1, %17 ]
  %30 = bitcast %"class.display::Display"* %28 to i8*
  %31 = bitcast %"class.display::Display"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 80, i1 false) #10
  %32 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %28, i64 0, i32 10, i32 0, i64 0, i32 0
  %33 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %29, i64 0, i32 10, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 436, i1 false) #10
  %34 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %28, i64 0, i32 10, i32 3
  %35 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %29, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %29, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8, i8* %40, align 8, !range !8
  %42 = icmp eq i8 %41, 0
  %43 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %28, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %42, label %47, label %44

44:                                               ; preds = %38
  %45 = bitcast %"struct.gfx::HDRStaticMetadata"* %43 to i8*
  %46 = bitcast %"struct.gfx::HDRStaticMetadata"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #10
  br label %50

47:                                               ; preds = %38
  tail call void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"* %43, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24) %39) #10
  store i8 1, i8* %40, align 8
  br label %50

48:                                               ; preds = %27
  %49 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %49, align 8
  br label %50

50:                                               ; preds = %48, %47, %44
  %51 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %28, i64 0, i32 11
  %52 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %29, i64 0, i32 11
  %53 = bitcast i32* %51 to i8*
  %54 = bitcast i32* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false) #10
  %55 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %29, i64 1
  %56 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %28, i64 1
  %57 = icmp eq %"class.display::Display"* %55, %25
  br i1 %57, label %58, label %27

58:                                               ; preds = %50, %17
  %59 = phi %"class.display::Display"* [ %16, %17 ], [ %56, %50 ]
  br i1 %23, label %60, label %75

60:                                               ; preds = %58
  %61 = load i64, i64* %19, align 8
  %62 = icmp eq %"class.display::Display"* %25, %2
  br i1 %62, label %73, label %63

63:                                               ; preds = %60
  %64 = inttoptr i64 %61 to %"class.display::Display"*
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi %"class.display::Display"* [ %69, %65 ], [ %64, %63 ]
  %67 = phi %"class.display::Display"* [ %68, %65 ], [ %24, %63 ]
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %66, %"class.display::Display"* dereferenceable(568) %67) #10
  %68 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %67, i64 1
  %69 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %66, i64 1
  %70 = icmp eq %"class.display::Display"* %68, %2
  br i1 %70, label %71, label %65

71:                                               ; preds = %65
  %72 = ptrtoint %"class.display::Display"* %69 to i64
  br label %73

73:                                               ; preds = %60, %71
  %74 = phi i64 [ %61, %60 ], [ %72, %71 ]
  store i64 %74, i64* %19, align 8
  br label %134

75:                                               ; preds = %58
  %76 = load %"class.display::Display"*, %"class.display::Display"** %18, align 8
  %77 = icmp eq %"class.display::Display"* %76, %59
  br i1 %77, label %82, label %78

78:                                               ; preds = %75, %78
  %79 = phi %"class.display::Display"* [ %80, %78 ], [ %76, %75 ]
  %80 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %79, i64 -1
  tail call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* %80) #10
  %81 = icmp eq %"class.display::Display"* %80, %59
  br i1 %81, label %82, label %78

82:                                               ; preds = %78, %75
  store %"class.display::Display"* %59, %"class.display::Display"** %18, align 8
  br label %134

83:                                               ; preds = %3
  %84 = icmp eq i64 %12, 0
  br i1 %84, label %100, label %85

85:                                               ; preds = %83
  %86 = inttoptr i64 %12 to i8*
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %88 = load %"class.display::Display"*, %"class.display::Display"** %87, align 8
  %89 = icmp eq %"class.display::Display"* %88, %16
  br i1 %89, label %97, label %90

90:                                               ; preds = %85, %90
  %91 = phi %"class.display::Display"* [ %92, %90 ], [ %88, %85 ]
  %92 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %91, i64 -1
  tail call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* %92) #10
  %93 = icmp eq %"class.display::Display"* %92, %16
  br i1 %93, label %94, label %90

94:                                               ; preds = %90
  %95 = bitcast %"class.std::__1::vector"* %0 to i8**
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %94, %85
  %98 = phi i8* [ %96, %94 ], [ %86, %85 ]
  store %"class.display::Display"* %16, %"class.display::Display"** %87, align 8
  tail call void @_ZdlPv(i8* %98) #11
  %99 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #10
  br label %100

100:                                              ; preds = %83, %97
  %101 = phi i64 [ %10, %83 ], [ 0, %97 ]
  %102 = icmp ugt i64 %7, 32476662101601323
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %104) #12
  unreachable

105:                                              ; preds = %100
  %106 = sdiv exact i64 %101, 568
  %107 = icmp ult i64 %106, 16238331050800661
  br i1 %107, label %108, label %112

108:                                              ; preds = %105
  %109 = shl nsw i64 %106, 1
  %110 = icmp ult i64 %109, %7
  %111 = select i1 %110, i64 %7, i64 %109
  br label %112

112:                                              ; preds = %108, %105
  %113 = phi i64 [ %111, %108 ], [ 32476662101601323, %105 ]
  %114 = mul i64 %113, 568
  %115 = tail call i8* @_Znwm(i64 %114) #11
  %116 = bitcast i8* %115 to %"class.display::Display"*
  %117 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %118 = bitcast %"class.display::Display"** %117 to i8**
  store i8* %115, i8** %118, align 8
  %119 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %115, i8** %119, align 8
  %120 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %116, i64 %113
  store %"class.display::Display"* %120, %"class.display::Display"** %8, align 8
  %121 = bitcast %"class.display::Display"** %117 to i64*
  %122 = ptrtoint i8* %115 to i64
  %123 = icmp eq %"class.display::Display"* %1, %2
  br i1 %123, label %132, label %124

124:                                              ; preds = %112, %124
  %125 = phi %"class.display::Display"* [ %128, %124 ], [ %116, %112 ]
  %126 = phi %"class.display::Display"* [ %127, %124 ], [ %1, %112 ]
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %125, %"class.display::Display"* dereferenceable(568) %126) #10
  %127 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %126, i64 1
  %128 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %125, i64 1
  %129 = icmp eq %"class.display::Display"* %127, %2
  br i1 %129, label %130, label %124

130:                                              ; preds = %124
  %131 = ptrtoint %"class.display::Display"* %128 to i64
  br label %132

132:                                              ; preds = %112, %130
  %133 = phi i64 [ %122, %112 ], [ %131, %130 ]
  store i64 %133, i64* %121, align 8
  br label %134

134:                                              ; preds = %73, %82, %132
  ret void
}

declare zeroext i1 @_ZNK7display7DisplayeqERKS0_(%"class.display::Display"*, %"class.display::Display"* dereferenceable(568)) local_unnamed_addr #3

declare void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::CheckedObserver"*) unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.6"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::CheckedObserverAdapter"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::internal::CheckedObserverAdapter"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.base::internal::CheckedObserverAdapter"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::internal::CheckedObserverAdapter"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %35
  %39 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %38 to i64
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %37, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %1) #10
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %37, i64 1
  %41 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %42, align 8
  %44 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  %45 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::internal::CheckedObserverAdapter"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::internal::CheckedObserverAdapter"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %50, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %51, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %52) #10
  %53 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::internal::CheckedObserverAdapter"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::internal::CheckedObserverAdapter"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::internal::CheckedObserverAdapter"*
  %63 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::internal::CheckedObserverAdapter"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %65, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %66) #10
  %67 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) unnamed_addr #3

declare dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  %6 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.base::internal::CheckedObserverAdapter"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::ObserverList"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 4
  %13 = load i64, i64* %3, align 8
  %14 = icmp ult i64 %12, %13
  %15 = select i1 %14, i64 %12, i64 %13
  %16 = getelementptr inbounds %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<display::DisplayObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, %15
  br i1 %18, label %19, label %49

19:                                               ; preds = %1
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %21

21:                                               ; preds = %47, %19
  %22 = phi %"class.base::ObserverList"* [ %5, %19 ], [ %48, %47 ]
  %23 = phi i64 [ %17, %19 ], [ %45, %47 ]
  %24 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %24, align 8
  %26 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %31) #10
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0)) #10
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %35

35:                                               ; preds = %21, %30, %33
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %37 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %36) #10
  %38 = bitcast i64* %27 to %"class.base::CheckedObserver"**
  %39 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %38, align 8
  %40 = icmp eq %"class.base::CheckedObserver"* %39, null
  %41 = xor i1 %37, true
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %35
  %44 = load i64, i64* %16, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %16, align 8
  %46 = icmp ult i64 %45, %15
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  br label %21

49:                                               ; preds = %35, %43, %1
  ret void
}

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7display15DisplayObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %0, %1
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %8

8:                                                ; preds = %26, %6
  %9 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %6 ], [ %27, %26 ]
  %10 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #10
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0)) #10
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  br label %18

18:                                               ; preds = %16, %13, %8
  %19 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %19) #10
  %21 = bitcast i64* %10 to %"class.base::CheckedObserver"**
  %22 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %21, align 8
  %23 = icmp eq %"class.base::CheckedObserver"* %22, null
  %24 = xor i1 %20, true
  %25 = or i1 %23, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 1
  %28 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %27, %1
  br i1 %28, label %29, label %8

29:                                               ; preds = %26
  %30 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %1 to i64
  br label %69

31:                                               ; preds = %18, %2
  %32 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %2 ], [ %9, %18 ]
  %33 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %32 to i64
  %34 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %32, %1
  br i1 %34, label %69, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %32, i64 1
  %37 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %36, %1
  br i1 %37, label %69, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %40

40:                                               ; preds = %38, %65
  %41 = phi %"class.base::internal::CheckedObserverAdapter"* [ %36, %38 ], [ %67, %65 ]
  %42 = phi %"class.base::internal::CheckedObserverAdapter"* [ %32, %38 ], [ %41, %65 ]
  %43 = phi i64 [ %33, %38 ], [ %66, %65 ]
  %44 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %42, i64 1, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %48) #10
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0)) #10
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  br label %52

52:                                               ; preds = %40, %47, %50
  %53 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %54 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %53) #10
  %55 = bitcast i64* %44 to %"class.base::CheckedObserver"**
  %56 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %55, align 8
  %57 = icmp eq %"class.base::CheckedObserver"* %56, null
  %58 = xor i1 %54, true
  %59 = or i1 %57, %58
  br i1 %59, label %65, label %60

60:                                               ; preds = %52
  %61 = inttoptr i64 %43 to %"class.base::internal::CheckedObserverAdapter"*
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %61, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %41) #10
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %63 to i64
  br label %65

65:                                               ; preds = %60, %52
  %66 = phi i64 [ %43, %52 ], [ %64, %60 ]
  %67 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 1
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %1
  br i1 %68, label %69, label %40

69:                                               ; preds = %65, %35, %31, %29
  %70 = phi i64 [ %33, %31 ], [ %30, %29 ], [ %33, %35 ], [ %66, %65 ]
  %71 = inttoptr i64 %70 to %"class.base::internal::CheckedObserverAdapter"*
  ret %"class.base::internal::CheckedObserverAdapter"* %71
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7display7DisplayENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"class.display::Display"* dereferenceable(568)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.display::Display"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 568
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 32476662101601323
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.display::Display"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 568
  %20 = icmp ult i64 %19, 16238331050800661
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 32476662101601323, %14 ]
  %28 = mul i64 %27, 568
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.display::Display"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.display::Display"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %33, i64 %9
  %35 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %33, i64 %32
  %36 = ptrtoint %"class.display::Display"* %35 to i64
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %34, %"class.display::Display"* dereferenceable(568) %1) #10
  %37 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %34, i64 1
  %38 = ptrtoint %"class.display::Display"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.display::Display"*, %"class.display::Display"** %39, align 8
  %41 = load %"class.display::Display"*, %"class.display::Display"** %3, align 8
  %42 = icmp eq %"class.display::Display"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.display::Display"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.display::Display"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.display::Display"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %46, i64 -1
  %49 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %47, i64 -1
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %48, %"class.display::Display"* dereferenceable(568) %49) #10
  %50 = icmp eq %"class.display::Display"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.display::Display"*, %"class.display::Display"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.display::Display"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.display::Display"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.display::Display"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.display::Display"*
  %60 = icmp eq %"class.display::Display"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.display::Display"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %62, i64 -1
  tail call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* %63) #10
  %64 = icmp eq %"class.display::Display"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZNSt3__16vectorIlNS_9allocatorIlEEE7emplaceIJlEEENS_11__wrap_iterIPlEENS5_IPKlEEDpOT_(%"class.std::__1::vector.21"*, i64*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i64* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.44", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 1
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp ult i64* %8, %10
  %12 = ptrtoint i64* %8 to i64
  %13 = ptrtoint i64* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i64* %8, %1
  %16 = load i64, i64* %2, align 8
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i64 %16, i64* %1, align 8
  %18 = getelementptr inbounds i64, i64* %1, i64 1
  %19 = ptrtoint i64* %18 to i64
  %20 = bitcast i64** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i64, i64* %1, i64 1
  %23 = ptrtoint i64* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 3
  %26 = getelementptr inbounds i64, i64* %1, i64 %25
  %27 = bitcast i64** %7 to i64*
  %28 = icmp ult i64* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i64, i64* %8, i64 %30
  %32 = bitcast i64* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i64* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i64* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i64, i64* %8, i64 %43
  %45 = bitcast i64* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i64, i64* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add nsw i64 %52, 1
  %54 = getelementptr i64, i64* %1, i64 %53
  %55 = icmp ult i64* %8, %54
  %56 = icmp ult i64* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 4611686018427387900
  %60 = getelementptr i64, i64* %8, i64 %59
  %61 = getelementptr i64, i64* %26, i64 %59
  %62 = add nsw i64 %59, -4
  %63 = lshr exact i64 %62, 2
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 12
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i64, i64* %8, i64 %70
  %73 = getelementptr i64, i64* %26, i64 %70
  %74 = bitcast i64* %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8, !alias.scope !21
  %76 = getelementptr i64, i64* %73, i64 2
  %77 = bitcast i64* %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8, !alias.scope !21
  %79 = bitcast i64* %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %79, align 8, !alias.scope !24, !noalias !21
  %80 = getelementptr i64, i64* %72, i64 2
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %81, align 8, !alias.scope !24, !noalias !21
  %82 = or i64 %70, 4
  %83 = getelementptr i64, i64* %8, i64 %82
  %84 = getelementptr i64, i64* %26, i64 %82
  %85 = bitcast i64* %84 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8, !alias.scope !21
  %87 = getelementptr i64, i64* %84, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8, !alias.scope !21
  %90 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> %86, <2 x i64>* %90, align 8, !alias.scope !24, !noalias !21
  %91 = getelementptr i64, i64* %83, i64 2
  %92 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %92, align 8, !alias.scope !24, !noalias !21
  %93 = or i64 %70, 8
  %94 = getelementptr i64, i64* %8, i64 %93
  %95 = getelementptr i64, i64* %26, i64 %93
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !21
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !21
  %101 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !24, !noalias !21
  %102 = getelementptr i64, i64* %94, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !24, !noalias !21
  %104 = or i64 %70, 12
  %105 = getelementptr i64, i64* %8, i64 %104
  %106 = getelementptr i64, i64* %26, i64 %104
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !21
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !21
  %112 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !24, !noalias !21
  %113 = getelementptr i64, i64* %105, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !24, !noalias !21
  %115 = add i64 %70, 16
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !26

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i64, i64* %8, i64 %122
  %125 = getelementptr i64, i64* %26, i64 %122
  %126 = bitcast i64* %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !21
  %128 = getelementptr i64, i64* %125, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !21
  %131 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %131, align 8, !alias.scope !24, !noalias !21
  %132 = getelementptr i64, i64* %124, i64 2
  %133 = bitcast i64* %132 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %133, align 8, !alias.scope !24, !noalias !21
  %134 = add i64 %122, 4
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !28

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i64* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i64* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i64, i64* %8, i64 %146
  %148 = bitcast i64* %147 to i8*
  %149 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 %24, i1 false) #10
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i64* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i64* [ %154, %150 ], [ %41, %39 ]
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %151, align 8
  %154 = getelementptr inbounds i64, i64* %152, i64 1
  %155 = getelementptr inbounds i64, i64* %151, i64 1
  %156 = icmp ult i64* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !30

157:                                              ; preds = %142, %145
  store i64 %16, i64* %1, align 8
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer.44"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #10
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer.44", %"struct.std::__1::__split_buffer.44"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer.44", %"struct.std::__1::__split_buffer.44"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer.44", %"struct.std::__1::__split_buffer.44"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer.44", %"struct.std::__1::__split_buffer.44"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer.44", %"struct.std::__1::__split_buffer.44"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i64** %7 to i64*
  %167 = bitcast %"class.std::__1::vector.21"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer.44"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 3
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 2305843009213693951
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector.21"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #12
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i64** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 3
  %180 = icmp ult i64 %179, 1152921504606846975
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 3
  store i64* null, i64** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.26"** %165 to %"class.std::__1::__compressed_pair.23"**
  store %"class.std::__1::__compressed_pair.23"* %159, %"class.std::__1::__compressed_pair.23"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 2
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 3
  store i64* null, i64** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.26"** %165 to %"class.std::__1::__compressed_pair.23"**
  store %"class.std::__1::__compressed_pair.23"* %159, %"class.std::__1::__compressed_pair.23"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 2305843009213693951
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #12
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 2305843009213693951, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 3
  %200 = tail call i8* @_Znwm(i64 %199) #11
  %201 = bitcast i8* %200 to i64*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i64* [ %201, %196 ], [ null, %185 ]
  store i64* %205, i64** %161, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 %203
  store i64* %206, i64** %163, align 8
  store i64* %206, i64** %162, align 8
  %207 = getelementptr inbounds i64, i64* %205, i64 %204
  store i64* %207, i64** %164, align 8
  call void @_ZNSt3__114__split_bufferIlRNS_9allocatorIlEEE12emplace_backIJlEEEvDpOT_(%"struct.std::__1::__split_buffer.44"* nonnull %5, i64* dereferenceable(8) %2)
  %208 = load i64*, i64** %162, align 8
  %209 = load i64*, i64** %6, align 8
  %210 = ptrtoint i64* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 3
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i64, i64* %208, i64 %213
  store i64* %214, i64** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i64* %214 to i8*
  %218 = bitcast i64* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %211, i1 false) #10
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i64*, i64** %7, align 8
  %221 = icmp eq i64* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i64* %220 to i64
  %224 = bitcast i64** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i64*, i64** %163, align 8
  %228 = getelementptr i64, i64* %220, i64 -1
  %229 = ptrtoint i64* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i64* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i64* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i64, i64* %237, align 8
  store i64 %239, i64* %236, align 8
  %240 = getelementptr inbounds i64, i64* %237, i64 1
  %241 = load i64*, i64** %163, align 8
  %242 = getelementptr inbounds i64, i64* %241, i64 1
  store i64* %242, i64** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !31

245:                                              ; preds = %235, %226
  %246 = phi i64* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i64* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i64* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 24
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i64* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i64* [ %266, %250 ], [ %248, %245 ]
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %251, align 8
  %254 = getelementptr inbounds i64, i64* %252, i64 1
  %255 = load i64*, i64** %163, align 8
  %256 = getelementptr inbounds i64, i64* %255, i64 1
  store i64* %256, i64** %163, align 8
  %257 = load i64, i64* %254, align 8
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds i64, i64* %252, i64 2
  %259 = load i64*, i64** %163, align 8
  %260 = getelementptr inbounds i64, i64* %259, i64 1
  store i64* %260, i64** %163, align 8
  %261 = load i64, i64* %258, align 8
  store i64 %261, i64* %260, align 8
  %262 = getelementptr inbounds i64, i64* %252, i64 3
  %263 = load i64*, i64** %163, align 8
  %264 = getelementptr inbounds i64, i64* %263, i64 1
  store i64* %264, i64** %163, align 8
  %265 = load i64, i64* %262, align 8
  store i64 %265, i64* %264, align 8
  %266 = getelementptr inbounds i64, i64* %252, i64 4
  %267 = load i64*, i64** %163, align 8
  %268 = getelementptr inbounds i64, i64* %267, i64 1
  store i64* %268, i64** %163, align 8
  %269 = icmp eq i64* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i64* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i64* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i64** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i64** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i64** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer.44"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i64*
  %287 = inttoptr i64 %278 to i64*
  %288 = icmp eq i64* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i64, i64* %287, i64 -1
  %291 = ptrtoint i64* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 3
  %294 = xor i64 %293, -1
  %295 = getelementptr i64, i64* %287, i64 %294
  store i64* %295, i64** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #11
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #10
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i64* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i64* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIlRNS_9allocatorIlEEE12emplace_backIJlEEEvDpOT_(%"struct.std::__1::__split_buffer.44"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.44", %"struct.std::__1::__split_buffer.44"* %0, i64 0, i32 2
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.44", %"struct.std::__1::__split_buffer.44"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %4, %6
  %8 = ptrtoint i64* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.44", %"struct.std::__1::__split_buffer.44"* %0, i64 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = bitcast i64* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.44", %"struct.std::__1::__split_buffer.44"* %0, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp ugt i64* %11, %14
  %16 = ptrtoint i64* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i64* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i64, i64* %11, i64 %22
  %24 = ptrtoint i64* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i64* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %12, i64 %25, i1 false) #10
  %30 = load i64*, i64** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i64* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i64, i64* %23, i64 %26
  store i64* %33, i64** %3, align 8
  %34 = getelementptr inbounds i64, i64* %32, i64 %22
  store i64* %34, i64** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i64** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.44"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 2
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #12
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 3
  %47 = tail call i8* @_Znwm(i64 %46) #11
  %48 = bitcast i8* %47 to i64*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i64, i64* %48, i64 %45
  %51 = ptrtoint i64* %50 to i64
  %52 = getelementptr inbounds i64, i64* %48, i64 %41
  %53 = ptrtoint i64* %52 to i64
  %54 = ptrtoint i64* %11 to i64
  %55 = ptrtoint i64* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds i64, i64* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -8
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 4
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = shl nuw nsw i64 %45, 3
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -8
  %69 = lshr i64 %68, 3
  %70 = and i64 %68, -8
  %71 = add i64 %66, %70
  %72 = add i64 %71, 8
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i64, i64* %11, i64 %74
  %76 = bitcast i64* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 4611686018427387900
  %82 = getelementptr i64, i64* %50, i64 %81
  %83 = getelementptr i64, i64* %11, i64 %81
  %84 = add nsw i64 %81, -4
  %85 = lshr exact i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 12
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i64, i64* %50, i64 %92
  %95 = getelementptr i64, i64* %11, i64 %92
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !32
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !32
  %101 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !35, !noalias !32
  %102 = getelementptr i64, i64* %94, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !35, !noalias !32
  %104 = or i64 %92, 4
  %105 = getelementptr i64, i64* %50, i64 %104
  %106 = getelementptr i64, i64* %11, i64 %104
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !32
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !32
  %112 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !35, !noalias !32
  %113 = getelementptr i64, i64* %105, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !35, !noalias !32
  %115 = or i64 %92, 8
  %116 = getelementptr i64, i64* %50, i64 %115
  %117 = getelementptr i64, i64* %11, i64 %115
  %118 = bitcast i64* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !32
  %120 = getelementptr i64, i64* %117, i64 2
  %121 = bitcast i64* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !32
  %123 = bitcast i64* %116 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %123, align 8, !alias.scope !35, !noalias !32
  %124 = getelementptr i64, i64* %116, i64 2
  %125 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %125, align 8, !alias.scope !35, !noalias !32
  %126 = or i64 %92, 12
  %127 = getelementptr i64, i64* %50, i64 %126
  %128 = getelementptr i64, i64* %11, i64 %126
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !32
  %131 = getelementptr i64, i64* %128, i64 2
  %132 = bitcast i64* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !32
  %134 = bitcast i64* %127 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 8, !alias.scope !35, !noalias !32
  %135 = getelementptr i64, i64* %127, i64 2
  %136 = bitcast i64* %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 8, !alias.scope !35, !noalias !32
  %137 = add i64 %92, 16
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !37

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i64, i64* %50, i64 %144
  %147 = getelementptr i64, i64* %11, i64 %144
  %148 = bitcast i64* %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !32
  %150 = getelementptr i64, i64* %147, i64 2
  %151 = bitcast i64* %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !32
  %153 = bitcast i64* %146 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %153, align 8, !alias.scope !35, !noalias !32
  %154 = getelementptr i64, i64* %146, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %155, align 8, !alias.scope !35, !noalias !32
  %156 = add i64 %144, 4
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !38

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i64* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i64* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i64* %162 to i64
  %165 = shl nuw nsw i64 %45, 3
  %166 = add i64 %56, %165
  %167 = add i64 %166, -8
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i64* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i64* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i64, i64* %177, align 8
  store i64 %179, i64* %176, align 8
  %180 = getelementptr inbounds i64, i64* %176, i64 1
  %181 = getelementptr inbounds i64, i64* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !39

184:                                              ; preds = %175, %161
  %185 = phi i64* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i64* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 56 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i64* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i64* [ %214, %188 ], [ %186, %184 ]
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  %192 = getelementptr inbounds i64, i64* %189, i64 1
  %193 = getelementptr inbounds i64, i64* %190, i64 1
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %192, align 8
  %195 = getelementptr inbounds i64, i64* %189, i64 2
  %196 = getelementptr inbounds i64, i64* %190, i64 2
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds i64, i64* %189, i64 3
  %199 = getelementptr inbounds i64, i64* %190, i64 3
  %200 = load i64, i64* %199, align 8
  store i64 %200, i64* %198, align 8
  %201 = getelementptr inbounds i64, i64* %189, i64 4
  %202 = getelementptr inbounds i64, i64* %190, i64 4
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %201, align 8
  %204 = getelementptr inbounds i64, i64* %189, i64 5
  %205 = getelementptr inbounds i64, i64* %190, i64 5
  %206 = load i64, i64* %205, align 8
  store i64 %206, i64* %204, align 8
  %207 = getelementptr inbounds i64, i64* %189, i64 6
  %208 = getelementptr inbounds i64, i64* %190, i64 6
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %207, align 8
  %210 = getelementptr inbounds i64, i64* %189, i64 7
  %211 = getelementptr inbounds i64, i64* %190, i64 7
  %212 = load i64, i64* %211, align 8
  store i64 %212, i64* %210, align 8
  %213 = getelementptr inbounds i64, i64* %189, i64 8
  %214 = getelementptr inbounds i64, i64* %190, i64 8
  %215 = icmp eq i64* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !40

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i64* %58 to i64
  %218 = load i64*, i64** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i64* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i64** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i64** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i64* %220, null
  %225 = inttoptr i64 %221 to i64*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i64* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #11
  %228 = load i64*, i64** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i64* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i64, i64* %1, align 8
  store i64 %231, i64* %230, align 8
  %232 = load i64*, i64** %3, align 8
  %233 = getelementptr inbounds i64, i64* %232, i64 1
  store i64* %233, i64** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!14 = distinct !{!14, !"_ZNK4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!20 = distinct !{!20, !"_ZNK4base12ObserverListIN7display15DisplayObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.isvectorized", i32 1}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.unroll.disable"}
!30 = distinct !{!30, !27}
!31 = distinct !{!31, !29}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !27}
!38 = distinct !{!38, !29}
!39 = distinct !{!39, !29}
!40 = distinct !{!40, !27}
