; ModuleID = '../../third_party/ffmpeg/libavformat/flac_picture.c'
source_filename = "../../third_party/ffmpeg/libavformat/flac_picture.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.CodecMime = type { [32 x i8], i32 }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, i32 (%struct.AVFormatContext*)*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext*, i32, %struct.AVCodecContext*, i32, i32, %struct.anon, i32, i32, %struct.FFFrac*, %struct.anon.0*, %struct.AVIndexEntry*, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], [17 x i64], i64, i8, i8, i32, %struct.AVRational, %struct.AVProbeData, %struct.AVPacketList* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.anon = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.anon.0 = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque

@ff_id3v2_mime_tags = external constant [0 x %struct.CodecMime], align 4
@.str = private unnamed_addr constant [43 x i8] c"Attached picture metadata block too short\0A\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"Invalid picture type: %d.\0A\00", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"Could not read mimetype from an attached picture.\0A\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"Unknown attached picture mimetype: %s.\0A\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"Attached picture metadata block too big %u\0A\00", align 1
@.str.5 = private unnamed_addr constant [58 x i8] c"Correcting truncated metadata picture size from %u to %u\0A\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@ff_id3v2_picture_types = external local_unnamed_addr constant [21 x i8*], align 16
@.str.7 = private unnamed_addr constant [6 x i8] c"title\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_flac_parse_picture(%struct.AVFormatContext*, i8*, i32, i32) local_unnamed_addr #0 {
  %5 = alloca %struct.AVBufferRef*, align 8
  %6 = alloca [64 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = bitcast %struct.AVBufferRef** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #4
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %5, align 8
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 64, i1 false)
  %10 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4
  store i8* null, i8** %7, align 8
  %11 = icmp slt i32 %2, 34
  br i1 %11, label %12, label %19

12:                                               ; preds = %4
  %13 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0)) #4
  %14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 32
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 8
  %17 = icmp eq i32 %16, 0
  %18 = select i1 %17, i32 0, i32 -1094995529
  br label %238

19:                                               ; preds = %4
  %20 = sext i32 %2 to i64
  %21 = getelementptr inbounds i8, i8* %1, i64 %20
  %22 = ptrtoint i8* %21 to i64
  %23 = getelementptr inbounds i8, i8* %1, i64 4
  %24 = bitcast i8* %1 to i32*
  %25 = load i32, i32* %24, align 1
  %26 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %25) #5, !srcloc !2
  %27 = icmp ugt i32 %26, 20
  br i1 %27, label %28, label %34

28:                                               ; preds = %19
  %29 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i32 %26) #4
  %30 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 32
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %238

34:                                               ; preds = %28, %19
  %35 = phi i32 [ %26, %19 ], [ 0, %28 ]
  %36 = getelementptr inbounds i8, i8* %1, i64 8
  %37 = bitcast i8* %23 to i32*
  %38 = load i32, i32* %37, align 1
  %39 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %38) #5, !srcloc !2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = zext i32 %39 to i64
  %43 = icmp ugt i32 %39, 63
  br i1 %43, label %44, label %51

44:                                               ; preds = %41, %34
  %45 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %45, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0)) #4
  %46 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 32
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 8
  %49 = icmp eq i32 %48, 0
  %50 = select i1 %49, i32 0, i32 -1094995529
  br label %238

51:                                               ; preds = %41
  %52 = add nuw nsw i32 %39, 24
  %53 = add nsw i32 %2, -8
  %54 = icmp ugt i32 %52, %53
  br i1 %54, label %55, label %62

55:                                               ; preds = %51
  %56 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %56, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0)) #4
  %57 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 32
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 8
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, i32 0, i32 -1094995529
  br label %238

62:                                               ; preds = %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %9, i8* align 1 %36, i64 %42, i1 false) #4
  %63 = getelementptr inbounds i8, i8* %36, i64 %42
  %64 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 %42
  store i8 0, i8* %64, align 1
  %65 = load i32, i32* getelementptr inbounds ([0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 0, i32 1), align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %80, label %67

67:                                               ; preds = %62
  %68 = call i32 @strncmp(i8* getelementptr inbounds ([0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 0, i32 0, i64 0), i8* nonnull %9, i64 64) #6
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %87, label %70

70:                                               ; preds = %67, %76
  %71 = phi %struct.CodecMime* [ %72, %76 ], [ getelementptr inbounds ([0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 0), %67 ]
  %72 = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %71, i64 1
  %73 = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %71, i64 1, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %72, i64 0, i32 0, i64 0
  %78 = call i32 @strncmp(i8* %77, i8* nonnull %9, i64 64) #6
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %87, label %70

80:                                               ; preds = %70, %62
  %81 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %81, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %9) #4
  %82 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 32
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 8
  %85 = icmp eq i32 %84, 0
  %86 = select i1 %85, i32 0, i32 -1094995529
  br label %238

87:                                               ; preds = %76, %67
  %88 = phi i32 [ %65, %67 ], [ %74, %76 ]
  %89 = getelementptr inbounds i8, i8* %63, i64 4
  %90 = ptrtoint i8* %89 to i64
  %91 = bitcast i8* %63 to i32*
  %92 = load i32, i32* %91, align 1
  %93 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %92) #5, !srcloc !2
  %94 = sub i64 %22, %90
  %95 = trunc i64 %94 to i32
  %96 = add nsw i32 %95, -20
  %97 = icmp ugt i32 %93, %96
  br i1 %97, label %98, label %105

98:                                               ; preds = %87
  %99 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %99, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0)) #4
  %100 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 32
  %101 = load i32, i32* %100, align 4
  %102 = and i32 %101, 8
  %103 = icmp eq i32 %102, 0
  %104 = select i1 %103, i32 0, i32 -1094995529
  br label %238

105:                                              ; preds = %87
  %106 = icmp eq i32 %93, 0
  br i1 %106, label %116, label %107

107:                                              ; preds = %105
  %108 = add i32 %93, 1
  %109 = zext i32 %108 to i64
  %110 = tail call noalias i8* @av_malloc(i64 %109) #4
  store i8* %110, i8** %7, align 8
  %111 = icmp eq i8* %110, null
  br i1 %111, label %238, label %112

112:                                              ; preds = %107
  %113 = zext i32 %93 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %110, i8* align 1 %89, i64 %113, i1 false) #4
  %114 = getelementptr inbounds i8, i8* %89, i64 %113
  %115 = getelementptr inbounds i8, i8* %110, i64 %113
  store i8 0, i8* %115, align 1
  br label %116

116:                                              ; preds = %105, %112
  %117 = phi i8* [ %89, %105 ], [ %114, %112 ]
  %118 = getelementptr inbounds i8, i8* %117, i64 4
  %119 = bitcast i8* %117 to i32*
  %120 = load i32, i32* %119, align 1
  %121 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %120) #5, !srcloc !2
  %122 = bitcast i8* %118 to i32*
  %123 = load i32, i32* %122, align 1
  %124 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %123) #5, !srcloc !2
  %125 = getelementptr inbounds i8, i8* %117, i64 16
  %126 = getelementptr inbounds i8, i8* %117, i64 20
  %127 = ptrtoint i8* %126 to i64
  %128 = bitcast i8* %125 to i32*
  %129 = load i32, i32* %128, align 1
  %130 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %129) #5, !srcloc !2
  %131 = sub i64 %22, %127
  %132 = trunc i64 %131 to i32
  %133 = icmp ugt i32 %130, %132
  %134 = add i32 %130, -1
  %135 = icmp ult i32 %134, %132
  br i1 %135, label %165, label %136

136:                                              ; preds = %116
  %137 = icmp ugt i32 %130, 524288000
  br i1 %137, label %138, label %145

138:                                              ; preds = %136
  %139 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %139, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i32 %130) #4
  %140 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 32
  %141 = load i32, i32* %140, align 4
  %142 = and i32 %141, 8
  %143 = icmp eq i32 %142, 0
  %144 = select i1 %143, i32 0, i32 -1094995529
  br label %236

145:                                              ; preds = %136
  %146 = icmp eq i32 %3, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %145
  %148 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 36
  %149 = load i32, i32* %148, align 8
  %150 = icmp slt i32 %149, 1
  %151 = and i1 %133, %150
  %152 = and i32 %130, 16777215
  %153 = icmp eq i32 %152, %132
  %154 = and i1 %153, %151
  br i1 %154, label %155, label %158

155:                                              ; preds = %147
  %156 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %156, i32 32, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5, i64 0, i64 0), i32 %132, i32 %130) #4
  %157 = sub i32 %130, %132
  br label %165

158:                                              ; preds = %145, %147
  %159 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %159, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0)) #4
  %160 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 32
  %161 = load i32, i32* %160, align 4
  %162 = and i32 %161, 8
  %163 = icmp eq i32 %162, 0
  %164 = select i1 %163, i32 0, i32 -1094995529
  br label %236

165:                                              ; preds = %116, %155
  %166 = phi i32 [ %157, %155 ], [ 0, %116 ]
  %167 = add i32 %130, 64
  %168 = tail call %struct.AVBufferRef* @av_buffer_alloc(i32 %167) #4
  store %struct.AVBufferRef* %168, %struct.AVBufferRef** %5, align 8
  %169 = icmp eq %struct.AVBufferRef* %168, null
  %170 = ptrtoint %struct.AVBufferRef* %168 to i64
  br i1 %169, label %236, label %171

171:                                              ; preds = %165
  %172 = icmp eq i32 %166, 0
  %173 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %168, i64 0, i32 1
  %174 = load i8*, i8** %173, align 8
  br i1 %172, label %175, label %177

175:                                              ; preds = %171
  %176 = zext i32 %130 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %174, i8* align 1 %126, i64 %176, i1 false) #4
  br label %189

177:                                              ; preds = %171
  %178 = and i64 %131, 4294967295
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %174, i8* align 1 %126, i64 %178, i1 false) #4
  %179 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %180 = load %struct.AVIOContext*, %struct.AVIOContext** %179, align 8
  %181 = load i8*, i8** %173, align 8
  %182 = zext i32 %130 to i64
  %183 = getelementptr inbounds i8, i8* %181, i64 %182
  %184 = zext i32 %166 to i64
  %185 = sub nsw i64 0, %184
  %186 = getelementptr inbounds i8, i8* %183, i64 %185
  %187 = tail call i32 @avio_read(%struct.AVIOContext* %180, i8* %186, i32 %166) #4
  %188 = icmp ult i32 %187, %166
  br i1 %188, label %236, label %189

189:                                              ; preds = %177, %175
  %190 = phi i64 [ %182, %177 ], [ %176, %175 ]
  %191 = load i8*, i8** %173, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 %190
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %192, i8 0, i64 64, i1 false)
  %193 = bitcast i8** %173 to i64**
  %194 = load i64*, i64** %193, align 8
  %195 = load i64, i64* %194, align 1
  %196 = tail call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %0, %struct.AVCodec* null) #4
  %197 = icmp eq %struct.AVStream* %196, null
  br i1 %197, label %236, label %198

198:                                              ; preds = %189
  %199 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %195) #5, !srcloc !3
  %200 = icmp eq i64 %199, -8552249625308161526
  %201 = select i1 %200, i32 61, i32 %88
  %202 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %196, i64 0, i32 13
  tail call void @av_init_packet(%struct.AVPacket* %202) #4
  %203 = bitcast %struct.AVPacket* %202 to i64*
  store i64 %170, i64* %203, align 8
  %204 = bitcast i8** %173 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %196, i64 0, i32 13, i32 3
  %207 = bitcast i8** %206 to i64*
  store i64 %205, i64* %207, align 8
  %208 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %196, i64 0, i32 13, i32 4
  store i32 %130, i32* %208, align 8
  %209 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %196, i64 0, i32 0
  %210 = load i32, i32* %209, align 8
  %211 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %196, i64 0, i32 13, i32 5
  store i32 %210, i32* %211, align 4
  %212 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %196, i64 0, i32 13, i32 6
  %213 = load i32, i32* %212, align 8
  %214 = or i32 %213, 1
  store i32 %214, i32* %212, align 8
  %215 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %196, i64 0, i32 8
  %216 = load i32, i32* %215, align 8
  %217 = or i32 %216, 1024
  store i32 %217, i32* %215, align 8
  %218 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %196, i64 0, i32 19
  %219 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %218, align 8
  %220 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %219, i64 0, i32 0
  store i32 0, i32* %220, align 8
  %221 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %218, align 8
  %222 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %221, i64 0, i32 1
  store i32 %201, i32* %222, align 4
  %223 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %218, align 8
  %224 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %223, i64 0, i32 11
  store i32 %121, i32* %224, align 8
  %225 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %218, align 8
  %226 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %225, i64 0, i32 12
  store i32 %124, i32* %226, align 4
  %227 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %196, i64 0, i32 11
  %228 = zext i32 %35 to i64
  %229 = getelementptr inbounds [21 x i8*], [21 x i8*]* @ff_id3v2_picture_types, i64 0, i64 %228
  %230 = load i8*, i8** %229, align 8
  %231 = tail call i32 @av_dict_set(%struct.AVDictionary** %227, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* %230, i32 0) #4
  %232 = load i8*, i8** %7, align 8
  %233 = icmp eq i8* %232, null
  br i1 %233, label %238, label %234

234:                                              ; preds = %198
  %235 = tail call i32 @av_dict_set(%struct.AVDictionary** %227, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i8* nonnull %232, i32 8) #4
  br label %238

236:                                              ; preds = %158, %138, %189, %177, %165
  %237 = phi i32 [ %144, %138 ], [ %164, %158 ], [ -12, %165 ], [ -1094995529, %177 ], [ -12, %189 ]
  call void @av_buffer_unref(%struct.AVBufferRef** nonnull %5) #4
  call void @av_freep(i8* nonnull %10) #4
  br label %238

238:                                              ; preds = %234, %198, %107, %98, %80, %55, %44, %28, %12, %236
  %239 = phi i32 [ %237, %236 ], [ %18, %12 ], [ -1094995529, %28 ], [ %50, %44 ], [ %61, %55 ], [ %86, %80 ], [ %104, %98 ], [ -12, %107 ], [ 0, %198 ], [ 0, %234 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #4
  ret i32 %239
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

declare noalias i8* @av_malloc(i64) local_unnamed_addr #2

declare %struct.AVBufferRef* @av_buffer_alloc(i32) local_unnamed_addr #2

declare i32 @avio_read(%struct.AVIOContext*, i8*, i32) local_unnamed_addr #2

declare %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext*, %struct.AVCodec*) local_unnamed_addr #2

declare void @av_init_packet(%struct.AVPacket*) local_unnamed_addr #2

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) local_unnamed_addr #2

declare void @av_buffer_unref(%struct.AVBufferRef**) local_unnamed_addr #2

declare void @av_freep(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 236393}
!3 = !{i32 236551}
