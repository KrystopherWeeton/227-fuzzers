; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/vector_dce.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/vector_dce.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.spvtools::opt::VectorDCE" = type { %"class.spvtools::opt::MemPass", %"class.spvtools::utils::BitVector" }
%"class.spvtools::opt::MemPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_map.249" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.929", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_map.932" = type { %"class.std::__1::__hash_table.933" }
%"class.std::__1::__hash_table.933" = type <{ %"class.std::__1::unique_ptr.934", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.949", %"class.std::__1::__compressed_pair.952", [4 x i8] }>
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936", %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"struct.std::__1::__hash_node_base.937"** }
%"struct.std::__1::__hash_node_base.937" = type { %"struct.std::__1::__hash_node_base.937"* }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"class.std::__1::__bucket_list_deallocator.939" }
%"class.std::__1::__bucket_list_deallocator.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"struct.std::__1::__hash_node_base.937" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.956" = type { %"class.std::__1::__vector_base.957" }
%"class.std::__1::__vector_base.957" = type { %"struct.spvtools::opt::VectorDCE::WorkListItem"*, %"struct.spvtools::opt::VectorDCE::WorkListItem"*, %"class.std::__1::__compressed_pair.958" }
%"struct.spvtools::opt::VectorDCE::WorkListItem" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::utils::BitVector" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.spvtools::opt::VectorDCE::WorkListItem"* }
%"class.std::__1::function.963" = type { %"class.std::__1::__function::__policy_func.967" }
%"class.std::__1::__function::__policy_func.967" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.968", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.968" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.976" = type { %"class.std::__1::__vector_base.977" }
%"class.std::__1::__vector_base.977" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"class.spvtools::opt::Instruction"** }
%class.anon.983 = type { i8*, %"class.spvtools::opt::VectorDCE"*, %"class.std::__1::unordered_map.932", %"class.std::__1::vector.976"* }
%"struct.std::__1::__hash_node.1020" = type { %"struct.std::__1::__hash_node_base.937", i64, %"struct.std::__1::__hash_value_type.1021" }
%"struct.std::__1::__hash_value_type.1021" = type { %"struct.std::__1::pair.987" }
%"struct.std::__1::pair.987" = type { i32, %"class.spvtools::utils::BitVector" }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.spvtools::opt::analysis::Vector" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.std::__1::function.1006" = type { %"class.std::__1::__function::__policy_func.1010" }
%"class.std::__1::__function::__policy_func.1010" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1011", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1011" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.969" = type { %"class.std::__1::__function::__policy_func.973" }
%"class.std::__1::__function::__policy_func.973" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.974", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.974" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"struct.std::__1::pair.986" = type { i32, %"class.spvtools::utils::BitVector" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.989" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::pair.989" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::__function::__default_alloc_func.1026" = type { %class.anon }
%class.anon = type { %"class.std::__1::vector.956"*, %"class.spvtools::opt::VectorDCE"*, %"class.std::__1::unordered_map.932"* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::tuple.1030" = type { i8 }
%"class.std::__1::tuple.1040" = type { %"struct.std::__1::__tuple_impl.1041" }
%"struct.std::__1::__tuple_impl.1041" = type { %"class.std::__1::__tuple_leaf.1042" }
%"class.std::__1::__tuple_leaf.1042" = type { i32* }
%"class.std::__1::__function::__default_alloc_func.1045" = type { %class.anon.975 }
%class.anon.975 = type { %"class.std::__1::vector.956"**, %"class.spvtools::utils::BitVector"*, %"class.spvtools::opt::VectorDCE"*, %"class.std::__1::unordered_map.932"*, %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.std::__1::__function::__default_alloc_func.1056" = type { %class.anon.983 }

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt9VectorDCED2Ev = comdat any

$_ZN8spvtools3opt9VectorDCED0Ev = comdat any

$_ZNK8spvtools3opt9VectorDCE4nameEv = comdat any

$_ZN8spvtools3opt9VectorDCE20GetPreservedAnalysesEv = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools3opt7MemPassD2Ev = comdat any

$_ZN8spvtools3opt7MemPassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIjJRKNS_4pairIKjS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIjJNS_4pairIjS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt9VectorDCE12WorkListItemENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJRS4_EEEvDpOT_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt7MemPassE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

@_ZTVN8spvtools3opt9VectorDCEE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::VectorDCE"*)* @_ZN8spvtools3opt9VectorDCED2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::VectorDCE"*)* @_ZN8spvtools3opt9VectorDCED0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::VectorDCE"*)* @_ZNK8spvtools3opt9VectorDCE4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::VectorDCE"*)* @_ZN8spvtools3opt9VectorDCE20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::VectorDCE"*)* @_ZN8spvtools3opt9VectorDCE7ProcessEv to i8*)] }, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools3opt7MemPassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [11 x i8] c"vector-dce\00", align 1
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE18FindLiveComponentsEPNS5_8FunctionEPNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE18FindLiveComponentsEPNS5_8FunctionEPNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_0FvPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE18FindLiveComponentsEPNS5_8FunctionEPNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_0FvPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS5_11InstructionERKNS4_5utils9BitVectorEPNS_13unordered_mapIjSA_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSA_EEEEEEPNS_6vectorINS6_12WorkListItemENSI_ISQ_EEEEE3$_1FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS5_11InstructionERKNS4_5utils9BitVectorEPNS_13unordered_mapIjSA_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSA_EEEEEEPNS_6vectorINS6_12WorkListItemENSI_ISQ_EEEEE3$_1FvPjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS5_11InstructionERKNS4_5utils9BitVectorEPNS_13unordered_mapIjSA_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSA_EEEEEEPNS_6vectorINS6_12WorkListItemENSI_ISQ_EEEEE3$_1FvPjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE19RewriteInstructionsEPNS5_8FunctionERKNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE19RewriteInstructionsEPNS5_8FunctionERKNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_2FvPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE19RewriteInstructionsEPNS5_8FunctionERKNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_2FvPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE24MarkDebugValueUsesAsDeadEPNS5_11InstructionEPNS_6vectorIS8_NS_9allocatorIS8_EEEEE3$_3FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt9VectorDCE7ProcessEv(%"class.spvtools::opt::VectorDCE"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 2
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.28"* %7, %9
  br i1 %10, label %13, label %15

11:                                               ; preds = %15
  %12 = select i1 %21, i32 16, i32 17
  br label %13

13:                                               ; preds = %11, %1
  %14 = phi i32 [ 17, %1 ], [ %12, %11 ]
  ret i32 %14

15:                                               ; preds = %1, %15
  %16 = phi i1 [ %21, %15 ], [ false, %1 ]
  %17 = phi %"class.std::__1::unique_ptr.28"* [ %22, %15 ], [ %7, %1 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %18, align 8
  %20 = tail call zeroext i1 @_ZN8spvtools3opt9VectorDCE17VectorDCEFunctionEPNS0_8FunctionE(%"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::Function"* %19)
  %21 = or i1 %16, %20
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %17, i64 1
  %23 = icmp eq %"class.std::__1::unique_ptr.28"* %22, %9
  br i1 %23, label %11, label %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt9VectorDCE17VectorDCEFunctionEPNS0_8FunctionE(%"class.spvtools::opt::VectorDCE"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unordered_map.932", align 8
  %4 = bitcast %"class.std::__1::unordered_map.932"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.std::__1::unordered_map.932", %"class.std::__1::unordered_map.932"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::unordered_map.932", %"class.std::__1::unordered_map.932"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::unordered_map.932", %"class.std::__1::unordered_map.932"* %3, i64 0, i32 0, i32 4, i64 0
  %8 = getelementptr inbounds %"class.std::__1::unordered_map.932", %"class.std::__1::unordered_map.932"* %3, i64 0, i32 0, i32 3
  %9 = bitcast %"class.std::__1::__compressed_pair.952"* %8 to i32*
  %10 = bitcast i8* %7 to i32*
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %9, align 8
  call void @_ZN8spvtools3opt9VectorDCE18FindLiveComponentsEPNS0_8FunctionEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS4_4hashIjEENS4_8equal_toIjEENS4_9allocatorINS4_4pairIKjS7_EEEEEE(%"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::Function"* %1, %"class.std::__1::unordered_map.932"* nonnull %3)
  %11 = call zeroext i1 @_ZN8spvtools3opt9VectorDCE19RewriteInstructionsEPNS0_8FunctionERKNSt3__113unordered_mapIjNS_5utils9BitVectorENS4_4hashIjEENS4_8equal_toIjEENS4_9allocatorINS4_4pairIKjS7_EEEEEE(%"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::Function"* %1, %"class.std::__1::unordered_map.932"* nonnull dereferenceable(40) %3)
  %12 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %6, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.937"* %12, null
  br i1 %13, label %30, label %14

14:                                               ; preds = %2, %27
  %15 = phi %"struct.std::__1::__hash_node_base.937"* [ %17, %27 ], [ %12, %2 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %15, i64 3
  %19 = bitcast %"struct.std::__1::__hash_node_base.937"* %18 to i64**
  %20 = load i64*, i64** %19, align 8
  %21 = icmp eq i64* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %14
  %23 = ptrtoint i64* %20 to i64
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %15, i64 4
  %25 = bitcast %"struct.std::__1::__hash_node_base.937"* %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast i64* %20 to i8*
  call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %22, %14
  %28 = bitcast %"struct.std::__1::__hash_node_base.937"* %15 to i8*
  call void @_ZdlPv(i8* %28) #11
  %29 = icmp eq %"struct.std::__1::__hash_node_base.937"* %17, null
  br i1 %29, label %30, label %14

30:                                               ; preds = %27, %2
  %31 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %5, align 8
  store %"struct.std::__1::__hash_node_base.937"** null, %"struct.std::__1::__hash_node_base.937"*** %5, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.937"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = bitcast %"struct.std::__1::__hash_node_base.937"** %31 to i8*
  call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #10
  ret i1 %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt9VectorDCE18FindLiveComponentsEPNS0_8FunctionEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS4_4hashIjEENS4_8equal_toIjEENS4_9allocatorINS4_4pairIKjS7_EEEEEE(%"class.spvtools::opt::VectorDCE"*, %"class.spvtools::opt::Function"*, %"class.std::__1::unordered_map.932"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.956", align 8
  %5 = alloca %"class.std::__1::function.963", align 8
  %6 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %7 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %8 = bitcast %"class.std::__1::vector.956"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #10
  %10 = bitcast %"class.std::__1::function.963"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.std::__1::function.963", %"class.std::__1::function.963"* %5, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::function.963", %"class.std::__1::function.963"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9VectorDCE18FindLiveComponentsEPNS3_8FunctionEPNS_13unordered_mapIjNS2_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSF_EEEEEEE3$_0S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %11, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE18FindLiveComponentsEPNS5_8FunctionEPNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %12, align 8
  %13 = tail call i8* @_Znwm(i64 24) #11, !noalias !2
  %14 = bitcast i8* %13 to %"class.std::__1::vector.956"**
  store %"class.std::__1::vector.956"* %4, %"class.std::__1::vector.956"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to %"class.spvtools::opt::VectorDCE"**
  store %"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::VectorDCE"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 16
  %18 = bitcast i8* %17 to %"class.std::__1::unordered_map.932"**
  store %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::unordered_map.932"** %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::function.963", %"class.std::__1::function.963"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %19, align 8
  call void @_ZN8spvtools3opt8Function11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"* %1, %"class.std::__1::function.963"* nonnull dereferenceable(32) %5, i1 zeroext false, i1 zeroext false) #10
  %20 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %12, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %20, i64 0, i32 1
  %22 = load void (i8*)*, void (i8*)** %21, align 8
  %23 = icmp eq void (i8*)* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %3
  %25 = load i8*, i8** %19, align 8
  call void %22(i8* %25) #10
  br label %26

26:                                               ; preds = %3, %24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #10
  %27 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"** %9 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.956"* %4 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %28, %30
  %32 = inttoptr i64 %30 to %"struct.spvtools::opt::VectorDCE::WorkListItem"*
  br i1 %31, label %57, label %33

33:                                               ; preds = %26
  %34 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6 to i8*
  %35 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6 to i64*
  %39 = bitcast %"class.spvtools::utils::BitVector"* %35 to i8*
  %40 = bitcast i64** %36 to i8**
  %41 = bitcast %"class.spvtools::utils::BitVector"* %35 to i8**
  %42 = bitcast i64** %36 to i64*
  %43 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7 to i64*
  %44 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1
  %45 = bitcast %"class.spvtools::utils::BitVector"* %44 to i8*
  %46 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 1
  %47 = bitcast i64** %46 to i8**
  %48 = bitcast %"class.spvtools::utils::BitVector"* %44 to i8**
  %49 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast i64** %46 to i64*
  %51 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %54 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6 to i8*
  br label %84

55:                                               ; preds = %171
  %56 = inttoptr i64 %175 to %"struct.spvtools::opt::VectorDCE::WorkListItem"*
  br label %57

57:                                               ; preds = %55, %26
  %58 = phi i64 [ %28, %26 ], [ %174, %55 ]
  %59 = phi %"struct.spvtools::opt::VectorDCE::WorkListItem"* [ %32, %26 ], [ %56, %55 ]
  %60 = inttoptr i64 %58 to %"struct.spvtools::opt::VectorDCE::WorkListItem"*
  %61 = icmp eq %"struct.spvtools::opt::VectorDCE::WorkListItem"* %59, null
  br i1 %61, label %83, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %59 to i8*
  %64 = icmp eq %"struct.spvtools::opt::VectorDCE::WorkListItem"* %59, %60
  br i1 %64, label %81, label %65

65:                                               ; preds = %62, %76
  %66 = phi %"struct.spvtools::opt::VectorDCE::WorkListItem"* [ %67, %76 ], [ %60, %62 ]
  %67 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %66, i64 -1
  %68 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %66, i64 -1, i32 1, i32 0, i32 0, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = icmp eq i64* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %65
  %72 = ptrtoint i64* %69 to i64
  %73 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %66, i64 -1, i32 1, i32 0, i32 0, i32 1
  %74 = bitcast i64** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = bitcast i64* %69 to i8*
  call void @_ZdlPv(i8* %75) #11
  br label %76

76:                                               ; preds = %71, %65
  %77 = icmp eq %"struct.spvtools::opt::VectorDCE::WorkListItem"* %67, %59
  br i1 %77, label %78, label %65

78:                                               ; preds = %76
  %79 = bitcast %"class.std::__1::vector.956"* %4 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %62
  %82 = phi i8* [ %80, %78 ], [ %63, %62 ]
  store %"struct.spvtools::opt::VectorDCE::WorkListItem"* %59, %"struct.spvtools::opt::VectorDCE::WorkListItem"** %9, align 8
  call void @_ZdlPv(i8* %82) #11
  br label %83

83:                                               ; preds = %57, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  ret void

84:                                               ; preds = %33, %171
  %85 = phi %"struct.spvtools::opt::VectorDCE::WorkListItem"* [ %32, %33 ], [ %179, %171 ]
  %86 = phi i64 [ 0, %33 ], [ %173, %171 ]
  %87 = phi i32 [ 0, %33 ], [ %172, %171 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #10
  %88 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %85, i64 %86
  %89 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %88 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 32, i1 false)
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %38, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %85, i64 %86, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #10
  %92 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %85, i64 %86, i32 1, i32 0, i32 0, i32 1
  %93 = bitcast i64** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.spvtools::utils::BitVector"* %91 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = icmp eq i64 %97, 0
  %100 = inttoptr i64 %90 to %"class.spvtools::opt::Instruction"*
  br i1 %99, label %123, label %101

101:                                              ; preds = %84
  %102 = icmp ugt i64 %98, 2305843009213693951
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = bitcast %"class.spvtools::utils::BitVector"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %104) #12
  unreachable

105:                                              ; preds = %101
  %106 = call i8* @_Znwm(i64 %97) #11
  %107 = bitcast i8* %106 to i64*
  store i8* %106, i8** %40, align 8
  store i8* %106, i8** %41, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 %98
  store i64* %108, i64** %37, align 8
  %109 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %91, i64 0, i32 0, i32 0, i32 0
  %110 = load i64*, i64** %109, align 8
  %111 = load i64, i64* %93, align 8
  %112 = ptrtoint i8* %106 to i64
  %113 = ptrtoint i64* %110 to i64
  %114 = sub i64 %111, %113
  %115 = icmp sgt i64 %114, 0
  br i1 %115, label %116, label %121

116:                                              ; preds = %105
  %117 = lshr exact i64 %114, 3
  %118 = bitcast i64* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* align 8 %118, i64 %114, i1 false) #10
  %119 = getelementptr inbounds i64, i64* %107, i64 %117
  %120 = ptrtoint i64* %119 to i64
  br label %121

121:                                              ; preds = %116, %105
  %122 = phi i64 [ %120, %116 ], [ %112, %105 ]
  store i64 %122, i64* %42, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = phi i8* [ null, %84 ], [ %106, %121 ]
  %125 = phi i64* [ null, %84 ], [ %107, %121 ]
  %126 = phi i64 [ 0, %84 ], [ %112, %121 ]
  %127 = phi i64 [ 0, %84 ], [ %122, %121 ]
  %128 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %100, i64 0, i32 2
  %129 = load i32, i32* %128, align 8
  switch i32 %129, label %161 [
    i32 81, label %130
    i32 82, label %131
    i32 79, label %132
    i32 80, label %133
  ]

130:                                              ; preds = %123
  call void @_ZN8spvtools3opt9VectorDCE20MarkExtractUseAsLiveEPKNS0_11InstructionERKNS_5utils9BitVectorEPNSt3__113unordered_mapIjS6_NS9_4hashIjEENS9_8equal_toIjEENS9_9allocatorINS9_4pairIKjS6_EEEEEEPNS9_6vectorINS1_12WorkListItemENSF_ISN_EEEE(%"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::Instruction"* %100, %"class.spvtools::utils::BitVector"* dereferenceable(24) %35, %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::vector.956"* nonnull %4)
  br label %165

131:                                              ; preds = %123
  call void @_ZN8spvtools3opt9VectorDCE20MarkInsertUsesAsLiveERKNS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS5_4hashIjEENS5_8equal_toIjEENS5_9allocatorINS5_4pairIKjS8_EEEEEEPNS5_6vectorIS2_NSD_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* %0, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nonnull dereferenceable(32) %6, %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::vector.956"* nonnull %4)
  br label %165

132:                                              ; preds = %123
  call void @_ZN8spvtools3opt9VectorDCE27MarkVectorShuffleUsesAsLiveERKNS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS5_4hashIjEENS5_8equal_toIjEENS5_9allocatorINS5_4pairIKjS8_EEEEEEPNS5_6vectorIS2_NSD_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* %0, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nonnull dereferenceable(32) %6, %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::vector.956"* nonnull %4)
  br label %165

133:                                              ; preds = %123
  store i64 %90, i64* %43, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #10
  %134 = sub i64 %127, %126
  %135 = ashr exact i64 %134, 3
  %136 = icmp eq i64 %134, 0
  br i1 %136, label %155, label %137

137:                                              ; preds = %133
  %138 = icmp ugt i64 %135, 2305843009213693951
  br i1 %138, label %139, label %141

139:                                              ; preds = %137
  %140 = bitcast %"class.spvtools::utils::BitVector"* %44 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %140) #12
  unreachable

141:                                              ; preds = %137
  %142 = call i8* @_Znwm(i64 %134) #11
  %143 = bitcast i8* %142 to i64*
  store i8* %142, i8** %47, align 8
  store i8* %142, i8** %48, align 8
  %144 = getelementptr inbounds i64, i64* %143, i64 %135
  store i64* %144, i64** %49, align 8
  %145 = ptrtoint i8* %142 to i64
  %146 = ptrtoint i64* %125 to i64
  %147 = sub i64 %127, %146
  %148 = icmp sgt i64 %147, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %141
  %150 = lshr exact i64 %147, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %142, i8* align 8 %124, i64 %147, i1 false) #10
  %151 = getelementptr inbounds i64, i64* %143, i64 %150
  %152 = ptrtoint i64* %151 to i64
  br label %153

153:                                              ; preds = %149, %141
  %154 = phi i64 [ %152, %149 ], [ %145, %141 ]
  store i64 %154, i64* %50, align 8
  br label %155

155:                                              ; preds = %133, %153
  call void @_ZN8spvtools3opt9VectorDCE31MarkCompositeContructUsesAsLiveENS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS3_4hashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS6_EEEEEEPNS3_6vectorIS2_NSB_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* %0, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nonnull %7, %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::vector.956"* nonnull %4)
  %156 = load i64*, i64** %51, align 8
  %157 = icmp eq i64* %156, null
  br i1 %157, label %165, label %158

158:                                              ; preds = %155
  %159 = ptrtoint i64* %156 to i64
  store i64 %159, i64* %50, align 8
  %160 = bitcast i64* %156 to i8*
  call void @_ZdlPv(i8* %160) #11
  br label %165

161:                                              ; preds = %123
  %162 = call zeroext i1 @_ZNK8spvtools3opt11Instruction14IsScalarizableEv(%"class.spvtools::opt::Instruction"* %100) #10
  br i1 %162, label %163, label %164

163:                                              ; preds = %161
  call void @_ZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS0_11InstructionERKNS_5utils9BitVectorEPNSt3__113unordered_mapIjS5_NS8_4hashIjEENS8_8equal_toIjEENS8_9allocatorINS8_4pairIKjS5_EEEEEEPNS8_6vectorINS1_12WorkListItemENSE_ISM_EEEE(%"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::Instruction"* %100, %"class.spvtools::utils::BitVector"* dereferenceable(24) %35, %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::vector.956"* nonnull %4)
  br label %165

164:                                              ; preds = %161
  call void @_ZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS0_11InstructionERKNS_5utils9BitVectorEPNSt3__113unordered_mapIjS5_NS8_4hashIjEENS8_8equal_toIjEENS8_9allocatorINS8_4pairIKjS5_EEEEEEPNS8_6vectorINS1_12WorkListItemENSE_ISM_EEEE(%"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::Instruction"* %100, %"class.spvtools::utils::BitVector"* dereferenceable(24) %52, %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::vector.956"* nonnull %4)
  br label %165

165:                                              ; preds = %158, %155, %163, %164, %132, %131, %130
  %166 = load i64*, i64** %53, align 8
  %167 = icmp eq i64* %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %165
  %169 = ptrtoint i64* %166 to i64
  store i64 %169, i64* %42, align 8
  %170 = bitcast i64* %166 to i8*
  call void @_ZdlPv(i8* %170) #11
  br label %171

171:                                              ; preds = %165, %168
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #10
  %172 = add i32 %87, 1
  %173 = zext i32 %172 to i64
  %174 = load i64, i64* %27, align 8
  %175 = load i64, i64* %29, align 8
  %176 = sub i64 %174, %175
  %177 = ashr exact i64 %176, 5
  %178 = icmp ugt i64 %177, %173
  %179 = inttoptr i64 %175 to %"struct.spvtools::opt::VectorDCE::WorkListItem"*
  br i1 %178, label %84, label %55
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt9VectorDCE19RewriteInstructionsEPNS0_8FunctionERKNSt3__113unordered_mapIjNS_5utils9BitVectorENS4_4hashIjEENS4_8equal_toIjEENS4_9allocatorINS4_4pairIKjS7_EEEEEE(%"class.spvtools::opt::VectorDCE"*, %"class.spvtools::opt::Function"*, %"class.std::__1::unordered_map.932"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::vector.976", align 8
  %6 = alloca %"class.std::__1::function.963", align 8
  %7 = alloca %class.anon.983, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 0, i8* %4, align 1
  %8 = bitcast %"class.std::__1::vector.976"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %5, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #10
  %11 = bitcast %"class.std::__1::function.963"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #10
  %12 = getelementptr inbounds %class.anon.983, %class.anon.983* %7, i64 0, i32 0
  store i8* %4, i8** %12, align 8
  %13 = getelementptr inbounds %class.anon.983, %class.anon.983* %7, i64 0, i32 1
  store %"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::VectorDCE"** %13, align 8
  %14 = getelementptr inbounds %class.anon.983, %class.anon.983* %7, i64 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::unordered_map.932", %"class.std::__1::unordered_map.932"* %14, i64 0, i32 0
  %16 = getelementptr inbounds %class.anon.983, %class.anon.983* %7, i64 0, i32 2, i32 0, i32 3
  %17 = getelementptr inbounds %"class.std::__1::unordered_map.932", %"class.std::__1::unordered_map.932"* %2, i64 0, i32 0, i32 3
  %18 = bitcast %"class.std::__1::__compressed_pair.952"* %17 to i32*
  %19 = bitcast %"class.std::__1::__compressed_pair.952"* %16 to i32*
  %20 = bitcast %"class.std::__1::unordered_map.932"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #10
  %21 = load i32, i32* %18, align 8
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %"class.std::__1::unordered_map.932", %"class.std::__1::unordered_map.932"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.933"* %15, i64 %23) #10
  %24 = getelementptr inbounds %"class.std::__1::unordered_map.932", %"class.std::__1::unordered_map.932"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.937"* %25, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %3
  %28 = ptrtoint %"struct.std::__1::__hash_node_base.937"* %25 to i64
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ %28, %27 ], [ %36, %29 ]
  %31 = inttoptr i64 %30 to %"struct.std::__1::__hash_node.1020"*
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node.1020", %"struct.std::__1::__hash_node.1020"* %31, i64 0, i32 2, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.987", %"struct.std::__1::pair.987"* %32, i64 0, i32 0
  %34 = call { %"struct.std::__1::__hash_node_base.937"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIjJRKNS_4pairIKjS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.933"* %15, i32* dereferenceable(4) %33, %"struct.std::__1::pair.987"* dereferenceable(32) %32) #10
  %35 = inttoptr i64 %30 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %29

38:                                               ; preds = %29, %3
  %39 = getelementptr inbounds %class.anon.983, %class.anon.983* %7, i64 0, i32 3
  store %"class.std::__1::vector.976"* %5, %"class.std::__1::vector.976"** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::function.963", %"class.std::__1::function.963"* %6, i64 0, i32 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.std::__1::function.963", %"class.std::__1::function.963"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9VectorDCE19RewriteInstructionsEPNS3_8FunctionERKNS_13unordered_mapIjNS2_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSF_EEEEEEE3$_2S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %40, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE19RewriteInstructionsEPNS5_8FunctionERKNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %41, align 8
  %42 = call i8* @_Znwm(i64 64) #11, !noalias !7
  %43 = bitcast %class.anon.983* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %43, i64 16, i1 false) #10
  %44 = getelementptr inbounds i8, i8* %42, i64 16
  %45 = bitcast i8* %44 to %"class.std::__1::__hash_table.933"*
  %46 = getelementptr inbounds i8, i8* %42, i64 48
  %47 = bitcast i8* %46 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 32, i1 false) #10
  %48 = load i32, i32* %19, align 8
  store i32 %48, i32* %47, align 8
  %49 = getelementptr inbounds %class.anon.983, %class.anon.983* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.933"* %45, i64 %50) #10
  %51 = getelementptr inbounds %class.anon.983, %class.anon.983* %7, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.937"* %52, null
  br i1 %53, label %65, label %54

54:                                               ; preds = %38
  %55 = ptrtoint %"struct.std::__1::__hash_node_base.937"* %52 to i64
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi i64 [ %55, %54 ], [ %63, %56 ]
  %58 = inttoptr i64 %57 to %"struct.std::__1::__hash_node.1020"*
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node.1020", %"struct.std::__1::__hash_node.1020"* %58, i64 0, i32 2, i32 0
  %60 = getelementptr inbounds %"struct.std::__1::pair.987", %"struct.std::__1::pair.987"* %59, i64 0, i32 0
  %61 = call { %"struct.std::__1::__hash_node_base.937"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIjJRKNS_4pairIKjS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.933"* %45, i32* dereferenceable(4) %60, %"struct.std::__1::pair.987"* dereferenceable(32) %59) #10
  %62 = inttoptr i64 %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56

65:                                               ; preds = %56, %38
  %66 = getelementptr inbounds i8, i8* %42, i64 56
  %67 = bitcast %"class.std::__1::vector.976"** %39 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast i8* %66 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::function.963", %"class.std::__1::function.963"* %6, i64 0, i32 0, i32 0, i32 0
  store i8* %42, i8** %70, align 8
  call void @_ZN8spvtools3opt8Function11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"* %1, %"class.std::__1::function.963"* nonnull dereferenceable(32) %6, i1 zeroext false, i1 zeroext false) #10
  %71 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %41, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %71, i64 0, i32 1
  %73 = load void (i8*)*, void (i8*)** %72, align 8
  %74 = icmp eq void (i8*)* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %65
  %76 = load i8*, i8** %70, align 8
  call void %73(i8* %76) #10
  br label %77

77:                                               ; preds = %65, %75
  %78 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %51, align 8
  %79 = icmp eq %"struct.std::__1::__hash_node_base.937"* %78, null
  br i1 %79, label %96, label %80

80:                                               ; preds = %77, %93
  %81 = phi %"struct.std::__1::__hash_node_base.937"* [ %83, %93 ], [ %78, %77 ]
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %81, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %81, i64 3
  %85 = bitcast %"struct.std::__1::__hash_node_base.937"* %84 to i64**
  %86 = load i64*, i64** %85, align 8
  %87 = icmp eq i64* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %80
  %89 = ptrtoint i64* %86 to i64
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %81, i64 4
  %91 = bitcast %"struct.std::__1::__hash_node_base.937"* %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast i64* %86 to i8*
  call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %88, %80
  %94 = bitcast %"struct.std::__1::__hash_node_base.937"* %81 to i8*
  call void @_ZdlPv(i8* %94) #11
  %95 = icmp eq %"struct.std::__1::__hash_node_base.937"* %83, null
  br i1 %95, label %96, label %80

96:                                               ; preds = %93, %77
  %97 = getelementptr inbounds %class.anon.983, %class.anon.983* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %97, align 8
  store %"struct.std::__1::__hash_node_base.937"** null, %"struct.std::__1::__hash_node_base.937"*** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.937"** %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %96
  %101 = bitcast %"struct.std::__1::__hash_node_base.937"** %98 to i8*
  call void @_ZdlPv(i8* %101) #11
  br label %102

102:                                              ; preds = %96, %100
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #10
  %103 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %104 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %10, align 8
  %105 = icmp eq %"class.spvtools::opt::Instruction"** %103, %104
  br i1 %105, label %110, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 2
  br label %120

108:                                              ; preds = %120
  %109 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  br label %110

110:                                              ; preds = %108, %102
  %111 = phi %"class.spvtools::opt::Instruction"** [ %109, %108 ], [ %103, %102 ]
  %112 = load i8, i8* %4, align 1, !range !12
  %113 = icmp ne i8 %112, 0
  %114 = icmp eq %"class.spvtools::opt::Instruction"** %111, null
  br i1 %114, label %119, label %115

115:                                              ; preds = %110
  %116 = ptrtoint %"class.spvtools::opt::Instruction"** %111 to i64
  %117 = bitcast %"class.spvtools::opt::Instruction"*** %10 to i64*
  store i64 %116, i64* %117, align 8
  %118 = bitcast %"class.spvtools::opt::Instruction"** %111 to i8*
  call void @_ZdlPv(i8* %118) #11
  br label %119

119:                                              ; preds = %110, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  ret i1 %113

120:                                              ; preds = %106, %120
  %121 = phi %"class.spvtools::opt::Instruction"** [ %103, %106 ], [ %125, %120 ]
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %107, align 8
  %124 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %123, %"class.spvtools::opt::Instruction"* %122) #10
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, i64 1
  %126 = icmp eq %"class.spvtools::opt::Instruction"** %125, %104
  br i1 %126, label %108, label %120
}

declare void @_ZN8spvtools3opt8Function11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"*, %"class.std::__1::function.963"* dereferenceable(32), i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt9VectorDCE20MarkExtractUseAsLiveEPKNS0_11InstructionERKNS_5utils9BitVectorEPNSt3__113unordered_mapIjS6_NS9_4hashIjEENS9_8equal_toIjEENS9_9allocatorINS9_4pairIKjS6_EEEEEEPNS9_6vectorINS1_12WorkListItemENSF_ISN_EEEE(%"class.spvtools::opt::VectorDCE"* nocapture readonly, %"class.spvtools::opt::Instruction"*, %"class.spvtools::utils::BitVector"* readonly dereferenceable(24), %"class.std::__1::unordered_map.932"*, %"class.std::__1::vector.956"*) local_unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %8 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %39

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 104) #11
  %19 = bitcast i8* %18 to %"class.spvtools::opt::analysis::DefUseManager"*
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = getelementptr inbounds i8, i8* %18, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 64
  %26 = getelementptr inbounds i8, i8* %18, i64 96
  %27 = bitcast i8* %26 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %27, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %19, %"class.spvtools::opt::Module"* %17) #10
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6
  %29 = ptrtoint i8* %18 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %28 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %15
  %35 = bitcast %"class.std::__1::unique_ptr.62"* %28 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %35, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %31) #10
  br label %36

36:                                               ; preds = %34, %15
  %37 = load i32, i32* %11, align 8
  %38 = or i32 %37, 1
  store i32 %38, i32* %11, align 8
  br label %39

39:                                               ; preds = %5, %36
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %40, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %43 = load i8, i8* %42, align 4, !range !12
  %44 = icmp eq i8 %43, 0
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %46 = load i8, i8* %45, align 1, !range !12
  %47 = icmp eq i8 %46, 0
  %48 = select i1 %47, i32 1, i32 2
  %49 = xor i1 %47, true
  %50 = zext i1 %49 to i32
  %51 = select i1 %44, i32 %50, i32 %48
  %52 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %51) #10
  %53 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %41, i32 %52) #10
  %54 = tail call zeroext i1 @_ZNK8spvtools3opt9VectorDCE15HasScalarResultEPKNS0_11InstructionE(%"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::Instruction"* %53) #10
  br i1 %54, label %57, label %55

55:                                               ; preds = %39
  %56 = tail call zeroext i1 @_ZNK8spvtools3opt9VectorDCE15HasVectorResultEPKNS0_11InstructionE(%"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::Instruction"* %53) #10
  br i1 %56, label %57, label %172

57:                                               ; preds = %39, %55
  %58 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #10
  %59 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 0
  %60 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1
  %61 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 1
  %63 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %64 = tail call i8* @_Znwm(i64 8) #11
  %65 = bitcast %"class.spvtools::utils::BitVector"* %60 to i8**
  store i8* %64, i8** %65, align 8
  %66 = getelementptr inbounds i8, i8* %64, i64 8
  %67 = bitcast i64** %63 to i8**
  store i8* %66, i8** %67, align 8
  %68 = bitcast i8* %64 to i64*
  store i64 0, i64* %68, align 8
  %69 = bitcast i64** %62 to i64*
  %70 = ptrtoint i8* %66 to i64
  store i64 %70, i64* %69, align 8
  store %"class.spvtools::opt::Instruction"* %53, %"class.spvtools::opt::Instruction"** %59, align 8
  %71 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %73 = bitcast %"struct.spvtools::opt::Operand"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::vector"* %71 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = sdiv exact i64 %77, 48
  %79 = load i8, i8* %42, align 4, !range !12
  %80 = icmp eq i8 %79, 0
  %81 = load i8, i8* %45, align 1, !range !12
  %82 = icmp eq i8 %81, 0
  %83 = select i1 %82, i32 1, i32 2
  %84 = xor i1 %82, true
  %85 = zext i1 %84 to i32
  %86 = select i1 %80, i32 %85, i32 %83
  %87 = trunc i64 %78 to i32
  %88 = sub i32 %87, %86
  %89 = icmp ult i32 %88, 2
  br i1 %89, label %90, label %98

90:                                               ; preds = %57
  %91 = icmp eq %"class.spvtools::utils::BitVector"* %60, %2
  br i1 %91, label %121, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %60, i64 0, i32 0
  %94 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %2, i64 0, i32 0, i32 0, i32 0
  %95 = load i64*, i64** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %2, i64 0, i32 0, i32 0, i32 1
  %97 = load i64*, i64** %96, align 8
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.900"* %93, i64* %95, i64* %97) #10
  br label %121

98:                                               ; preds = %57
  %99 = add nuw nsw i32 %86, 1
  %100 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %99) #10
  %101 = lshr i32 %100, 6
  %102 = and i32 %100, 63
  %103 = zext i32 %101 to i64
  %104 = icmp eq i32 %101, 0
  %105 = bitcast i8* %64 to i64*
  br i1 %104, label %111, label %106

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %60, i64 0, i32 0
  %108 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #10
  store i64 0, i64* %6, align 8
  %109 = zext i32 %101 to i64
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.900"* %107, i64 %109, i64* nonnull dereferenceable(8) %6) #10
  %110 = load i64*, i64** %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #10
  br label %111

111:                                              ; preds = %106, %98
  %112 = phi i64* [ %105, %98 ], [ %110, %106 ]
  %113 = getelementptr inbounds i64, i64* %112, i64 %103
  %114 = load i64, i64* %113, align 8
  %115 = zext i32 %102 to i64
  %116 = shl i64 1, %115
  %117 = and i64 %114, %116
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %111
  %120 = or i64 %114, %116
  store i64 %120, i64* %113, align 8
  br label %121

121:                                              ; preds = %119, %111, %92, %90
  %122 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1
  %126 = bitcast %"class.spvtools::utils::BitVector"* %125 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #10
  %127 = load i64, i64* %69, align 8
  %128 = bitcast %"class.spvtools::utils::BitVector"* %60 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %127, %129
  %131 = ashr exact i64 %130, 3
  %132 = icmp eq i64 %130, 0
  br i1 %132, label %155, label %133

133:                                              ; preds = %121
  %134 = icmp ugt i64 %131, 2305843009213693951
  br i1 %134, label %135, label %137

135:                                              ; preds = %133
  %136 = bitcast %"class.spvtools::utils::BitVector"* %125 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %136) #12
  unreachable

137:                                              ; preds = %133
  %138 = call i8* @_Znwm(i64 %130) #11
  %139 = bitcast i8* %138 to i64*
  %140 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 1
  %141 = bitcast i64** %140 to i8**
  store i8* %138, i8** %141, align 8
  %142 = bitcast %"class.spvtools::utils::BitVector"* %125 to i8**
  store i8* %138, i8** %142, align 8
  %143 = getelementptr inbounds i64, i64* %139, i64 %131
  %144 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %143, i64** %144, align 8
  %145 = bitcast i64** %140 to i64*
  %146 = ptrtoint i8* %138 to i64
  %147 = icmp sgt i64 %130, 0
  br i1 %147, label %148, label %153

148:                                              ; preds = %137
  %149 = lshr exact i64 %130, 3
  %150 = inttoptr i64 %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %138, i8* align 8 %150, i64 %130, i1 false) #10
  %151 = getelementptr inbounds i64, i64* %139, i64 %149
  %152 = ptrtoint i64* %151 to i64
  br label %153

153:                                              ; preds = %148, %137
  %154 = phi i64 [ %152, %148 ], [ %146, %137 ]
  store i64 %154, i64* %145, align 8
  br label %155

155:                                              ; preds = %121, %153
  call void @_ZN8spvtools3opt9VectorDCE25AddItemToWorkListIfNeededENS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS3_4hashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS6_EEEEEEPNS3_6vectorIS2_NSB_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* undef, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nonnull %8, %"class.std::__1::unordered_map.932"* %3, %"class.std::__1::vector.956"* %4)
  %156 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %157 = load i64*, i64** %156, align 8
  %158 = icmp eq i64* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i64* %157 to i64
  %161 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 1
  %162 = bitcast i64** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast i64* %157 to i8*
  call void @_ZdlPv(i8* %163) #11
  br label %164

164:                                              ; preds = %155, %159
  %165 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %166 = load i64*, i64** %165, align 8
  %167 = icmp eq i64* %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %164
  %169 = ptrtoint i64* %166 to i64
  store i64 %169, i64* %69, align 8
  %170 = bitcast i64* %166 to i8*
  call void @_ZdlPv(i8* %170) #11
  br label %171

171:                                              ; preds = %164, %168
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #10
  br label %172

172:                                              ; preds = %171, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt9VectorDCE20MarkInsertUsesAsLiveERKNS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS5_4hashIjEENS5_8equal_toIjEENS5_9allocatorINS5_4pairIKjS8_EEEEEEPNS5_6vectorIS2_NSD_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* nocapture readonly, %"struct.spvtools::opt::VectorDCE::WorkListItem"* readonly dereferenceable(32), %"class.std::__1::unordered_map.932"*, %"class.std::__1::vector.956"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %6 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %7 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %8 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %9 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %10 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 2
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %41

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %18, align 8
  %20 = tail call i8* @_Znwm(i64 104) #11
  %21 = bitcast i8* %20 to %"class.spvtools::opt::analysis::DefUseManager"*
  %22 = getelementptr inbounds i8, i8* %20, i64 32
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = getelementptr inbounds i8, i8* %20, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #10
  %26 = bitcast i8* %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %20, i64 64
  %28 = getelementptr inbounds i8, i8* %20, i64 96
  %29 = bitcast i8* %28 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %29, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %21, %"class.spvtools::opt::Module"* %19) #10
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 6
  %31 = ptrtoint i8* %20 to i64
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %30, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %32, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.62"* %30 to i64*
  store i64 %31, i64* %34, align 8
  %35 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %33, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %17
  %37 = bitcast %"class.std::__1::unique_ptr.62"* %30 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %37, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %33) #10
  br label %38

38:                                               ; preds = %36, %17
  %39 = load i32, i32* %13, align 8
  %40 = or i32 %39, 1
  store i32 %40, i32* %13, align 8
  br label %41

41:                                               ; preds = %4, %38
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 6, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %42, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 0
  %45 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %44, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 6
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 6, i32 0, i32 1
  %48 = bitcast %"struct.spvtools::opt::Operand"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.std::__1::vector"* %46 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = sdiv exact i64 %52, 48
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 3
  %55 = load i8, i8* %54, align 4, !range !12
  %56 = icmp eq i8 %55, 0
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 4
  %58 = load i8, i8* %57, align 1, !range !12
  %59 = icmp eq i8 %58, 0
  %60 = select i1 %59, i32 1, i32 2
  %61 = xor i1 %59, true
  %62 = zext i1 %61 to i32
  %63 = select i1 %56, i32 %62, i32 %60
  %64 = trunc i64 %53 to i32
  %65 = sub i32 %64, %63
  %66 = icmp ugt i32 %65, 2
  br i1 %66, label %67, label %291

67:                                               ; preds = %41
  %68 = add nuw nsw i32 %63, 2
  %69 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %45, i32 %68) #10
  %70 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %44, align 8
  %71 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %70, i64 0, i32 3
  %72 = load i8, i8* %71, align 4, !range !12
  %73 = icmp eq i8 %72, 0
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %70, i64 0, i32 4
  %75 = load i8, i8* %74, align 1, !range !12
  %76 = icmp eq i8 %75, 0
  %77 = select i1 %76, i32 1, i32 2
  %78 = xor i1 %76, true
  %79 = zext i1 %78 to i32
  %80 = select i1 %73, i32 %79, i32 %77
  %81 = add nuw nsw i32 %80, 1
  %82 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %70, i32 %81) #10
  %83 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %43, i32 %82) #10
  %84 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #10
  %85 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5, i64 0, i32 1
  %87 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %89 = tail call i8* @_Znwm(i64 8) #11
  %90 = bitcast %"class.spvtools::utils::BitVector"* %86 to i8**
  store i8* %89, i8** %90, align 8
  %91 = getelementptr inbounds i8, i8* %89, i64 8
  %92 = bitcast i64** %88 to i8**
  store i8* %91, i8** %92, align 8
  %93 = bitcast i8* %89 to i64*
  store i64 0, i64* %93, align 8
  %94 = bitcast i64** %87 to i64*
  %95 = ptrtoint i8* %91 to i64
  store i64 %95, i64* %94, align 8
  store %"class.spvtools::opt::Instruction"* %83, %"class.spvtools::opt::Instruction"** %85, align 8
  %96 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1
  %97 = icmp eq %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5, %1
  br i1 %97, label %98, label %101

98:                                               ; preds = %67
  %99 = ptrtoint i8* %89 to i64
  %100 = bitcast %"class.spvtools::utils::BitVector"* %86 to i64*
  br label %110

101:                                              ; preds = %67
  %102 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %86, i64 0, i32 0
  %103 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %96, i64 0, i32 0, i32 0, i32 0
  %104 = load i64*, i64** %103, align 8
  %105 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %106 = load i64*, i64** %105, align 8
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.900"* %102, i64* %104, i64* %106) #10
  %107 = load i64, i64* %94, align 8
  %108 = bitcast %"class.spvtools::utils::BitVector"* %86 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %98, %101
  %111 = phi i64* [ %100, %98 ], [ %108, %101 ]
  %112 = phi i64 [ %99, %98 ], [ %109, %101 ]
  %113 = phi i64 [ %95, %98 ], [ %107, %101 ]
  %114 = lshr i32 %69, 6
  %115 = zext i32 %114 to i64
  %116 = sub i64 %113, %112
  %117 = ashr exact i64 %116, 3
  %118 = icmp ugt i64 %117, %115
  br i1 %118, label %119, label %132

119:                                              ; preds = %110
  %120 = inttoptr i64 %112 to i64*
  %121 = and i32 %69, 63
  %122 = getelementptr inbounds i64, i64* %120, i64 %115
  %123 = load i64, i64* %122, align 8
  %124 = zext i32 %121 to i64
  %125 = shl i64 1, %124
  %126 = and i64 %123, %125
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %119
  %129 = xor i64 %125, -1
  %130 = and i64 %123, %129
  store i64 %130, i64* %122, align 8
  %131 = load i64, i64* %94, align 8
  br label %132

132:                                              ; preds = %110, %119, %128
  %133 = phi i64 [ %113, %110 ], [ %113, %119 ], [ %131, %128 ]
  %134 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 1
  %138 = bitcast %"class.spvtools::utils::BitVector"* %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 24, i1 false) #10
  %139 = load i64, i64* %111, align 8
  %140 = sub i64 %133, %139
  %141 = ashr exact i64 %140, 3
  %142 = icmp eq i64 %140, 0
  br i1 %142, label %165, label %143

143:                                              ; preds = %132
  %144 = icmp ugt i64 %141, 2305843009213693951
  br i1 %144, label %145, label %147

145:                                              ; preds = %143
  %146 = bitcast %"class.spvtools::utils::BitVector"* %137 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %146) #12
  unreachable

147:                                              ; preds = %143
  %148 = call i8* @_Znwm(i64 %140) #11
  %149 = bitcast i8* %148 to i64*
  %150 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %151 = bitcast i64** %150 to i8**
  store i8* %148, i8** %151, align 8
  %152 = bitcast %"class.spvtools::utils::BitVector"* %137 to i8**
  store i8* %148, i8** %152, align 8
  %153 = getelementptr inbounds i64, i64* %149, i64 %141
  %154 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %153, i64** %154, align 8
  %155 = bitcast i64** %150 to i64*
  %156 = ptrtoint i8* %148 to i64
  %157 = icmp sgt i64 %140, 0
  br i1 %157, label %158, label %163

158:                                              ; preds = %147
  %159 = lshr exact i64 %140, 3
  %160 = inttoptr i64 %139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %148, i8* align 8 %160, i64 %140, i1 false) #10
  %161 = getelementptr inbounds i64, i64* %149, i64 %159
  %162 = ptrtoint i64* %161 to i64
  br label %163

163:                                              ; preds = %158, %147
  %164 = phi i64 [ %162, %158 ], [ %156, %147 ]
  store i64 %164, i64* %155, align 8
  br label %165

165:                                              ; preds = %132, %163
  call void @_ZN8spvtools3opt9VectorDCE25AddItemToWorkListIfNeededENS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS3_4hashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS6_EEEEEEPNS3_6vectorIS2_NSB_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* undef, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nonnull %6, %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::vector.956"* %3)
  %166 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %167 = load i64*, i64** %166, align 8
  %168 = icmp eq i64* %167, null
  br i1 %168, label %174, label %169

169:                                              ; preds = %165
  %170 = ptrtoint i64* %167 to i64
  %171 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %172 = bitcast i64** %171 to i64*
  store i64 %170, i64* %172, align 8
  %173 = bitcast i64* %167 to i8*
  call void @_ZdlPv(i8* %173) #11
  br label %174

174:                                              ; preds = %165, %169
  %175 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %176 = bitcast i64** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = bitcast %"class.spvtools::utils::BitVector"* %96 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = sub i64 %177, %179
  %181 = ashr exact i64 %180, 3
  %182 = icmp ugt i64 %181, %115
  br i1 %182, label %183, label %284

183:                                              ; preds = %174
  %184 = inttoptr i64 %179 to i64*
  %185 = and i32 %69, 63
  %186 = getelementptr inbounds i64, i64* %184, i64 %115
  %187 = load i64, i64* %186, align 8
  %188 = zext i32 %185 to i64
  %189 = shl i64 1, %188
  %190 = and i64 %187, %189
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %284, label %192

192:                                              ; preds = %183
  %193 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %44, align 8
  %194 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %193, i64 0, i32 3
  %195 = load i8, i8* %194, align 4, !range !12
  %196 = icmp eq i8 %195, 0
  %197 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %193, i64 0, i32 4
  %198 = load i8, i8* %197, align 1, !range !12
  %199 = icmp eq i8 %198, 0
  %200 = select i1 %199, i32 1, i32 2
  %201 = xor i1 %199, true
  %202 = zext i1 %201 to i32
  %203 = select i1 %196, i32 %202, i32 %200
  %204 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %193, i32 %203) #10
  %205 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %43, i32 %204) #10
  %206 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %206) #10
  %207 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 0
  %208 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1
  %209 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 1
  %210 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %211 = call i8* @_Znwm(i64 8) #11
  %212 = bitcast %"class.spvtools::utils::BitVector"* %208 to i8**
  store i8* %211, i8** %212, align 8
  %213 = getelementptr inbounds i8, i8* %211, i64 8
  %214 = bitcast i64** %210 to i8**
  store i8* %213, i8** %214, align 8
  %215 = bitcast i8* %211 to i64*
  store i64 0, i64* %215, align 8
  %216 = bitcast i64** %209 to i64*
  %217 = ptrtoint i8* %213 to i64
  store i64 %217, i64* %216, align 8
  store %"class.spvtools::opt::Instruction"* %205, %"class.spvtools::opt::Instruction"** %207, align 8
  %218 = ptrtoint i8* %211 to i64
  %219 = bitcast i8* %211 to i64*
  %220 = ptrtoint %"class.spvtools::opt::Instruction"* %205 to i64
  %221 = load i64, i64* %219, align 8
  %222 = and i64 %221, 1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %232

224:                                              ; preds = %192
  %225 = bitcast %"class.spvtools::utils::BitVector"* %208 to i64*
  %226 = or i64 %221, 1
  store i64 %226, i64* %219, align 8
  %227 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = load i64, i64* %216, align 8
  %230 = load i64, i64* %225, align 8
  %231 = inttoptr i64 %230 to i64*
  br label %232

232:                                              ; preds = %192, %224
  %233 = phi i64* [ %231, %224 ], [ %215, %192 ]
  %234 = phi i64 [ %230, %224 ], [ %218, %192 ]
  %235 = phi i64 [ %229, %224 ], [ %217, %192 ]
  %236 = phi i64 [ %228, %224 ], [ %220, %192 ]
  %237 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1
  %239 = bitcast %"class.spvtools::utils::BitVector"* %238 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %239, i8 0, i64 24, i1 false) #10
  %240 = sub i64 %235, %234
  %241 = ashr exact i64 %240, 3
  %242 = icmp eq i64 %240, 0
  br i1 %242, label %267, label %243

243:                                              ; preds = %232
  %244 = icmp ugt i64 %241, 2305843009213693951
  br i1 %244, label %245, label %247

245:                                              ; preds = %243
  %246 = bitcast %"class.spvtools::utils::BitVector"* %238 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %246) #12
  unreachable

247:                                              ; preds = %243
  %248 = call i8* @_Znwm(i64 %240) #11
  %249 = bitcast i8* %248 to i64*
  %250 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 1
  %251 = bitcast i64** %250 to i8**
  store i8* %248, i8** %251, align 8
  %252 = bitcast %"class.spvtools::utils::BitVector"* %238 to i8**
  store i8* %248, i8** %252, align 8
  %253 = getelementptr inbounds i64, i64* %249, i64 %241
  %254 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %253, i64** %254, align 8
  %255 = bitcast i64** %250 to i64*
  %256 = ptrtoint i8* %248 to i64
  %257 = ptrtoint i64* %233 to i64
  %258 = sub i64 %235, %257
  %259 = icmp sgt i64 %258, 0
  br i1 %259, label %260, label %265

260:                                              ; preds = %247
  %261 = lshr exact i64 %258, 3
  %262 = bitcast i64* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %248, i8* align 8 %262, i64 %258, i1 false) #10
  %263 = getelementptr inbounds i64, i64* %249, i64 %261
  %264 = ptrtoint i64* %263 to i64
  br label %265

265:                                              ; preds = %260, %247
  %266 = phi i64 [ %264, %260 ], [ %256, %247 ]
  store i64 %266, i64* %255, align 8
  br label %267

267:                                              ; preds = %232, %265
  call void @_ZN8spvtools3opt9VectorDCE25AddItemToWorkListIfNeededENS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS3_4hashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS6_EEEEEEPNS3_6vectorIS2_NSB_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* undef, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nonnull %8, %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::vector.956"* %3)
  %268 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %269 = load i64*, i64** %268, align 8
  %270 = icmp eq i64* %269, null
  br i1 %270, label %276, label %271

271:                                              ; preds = %267
  %272 = ptrtoint i64* %269 to i64
  %273 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 1
  %274 = bitcast i64** %273 to i64*
  store i64 %272, i64* %274, align 8
  %275 = bitcast i64* %269 to i8*
  call void @_ZdlPv(i8* %275) #11
  br label %276

276:                                              ; preds = %267, %271
  %277 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %278 = load i64*, i64** %277, align 8
  %279 = icmp eq i64* %278, null
  br i1 %279, label %283, label %280

280:                                              ; preds = %276
  %281 = ptrtoint i64* %278 to i64
  store i64 %281, i64* %216, align 8
  %282 = bitcast i64* %278 to i8*
  call void @_ZdlPv(i8* %282) #11
  br label %283

283:                                              ; preds = %276, %280
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %206) #10
  br label %284

284:                                              ; preds = %183, %174, %283
  %285 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %286 = load i64*, i64** %285, align 8
  %287 = icmp eq i64* %286, null
  br i1 %287, label %373, label %288

288:                                              ; preds = %284
  %289 = ptrtoint i64* %286 to i64
  store i64 %289, i64* %94, align 8
  %290 = bitcast i64* %286 to i8*
  call void @_ZdlPv(i8* %290) #11
  br label %373

291:                                              ; preds = %41
  %292 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %45, i32 %63) #10
  %293 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %43, i32 %292) #10
  %294 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %294) #10
  %295 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 0
  %296 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 1
  %297 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 1, i32 0, i32 0, i32 1
  %298 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %299 = tail call i8* @_Znwm(i64 8) #11
  %300 = bitcast %"class.spvtools::utils::BitVector"* %296 to i8**
  store i8* %299, i8** %300, align 8
  %301 = getelementptr inbounds i8, i8* %299, i64 8
  %302 = bitcast i64** %298 to i8**
  store i8* %301, i8** %302, align 8
  %303 = bitcast i8* %299 to i64*
  store i64 0, i64* %303, align 8
  %304 = bitcast i64** %297 to i64*
  %305 = ptrtoint i8* %301 to i64
  store i64 %305, i64* %304, align 8
  store %"class.spvtools::opt::Instruction"* %293, %"class.spvtools::opt::Instruction"** %295, align 8
  %306 = icmp eq %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, %1
  br i1 %306, label %307, label %310

307:                                              ; preds = %291
  %308 = ptrtoint i8* %299 to i64
  %309 = ptrtoint %"class.spvtools::opt::Instruction"* %293 to i64
  br label %322

310:                                              ; preds = %291
  %311 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %296, i64 0, i32 0
  %312 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %313 = load i64*, i64** %312, align 8
  %314 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %315 = load i64*, i64** %314, align 8
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.900"* %311, i64* %313, i64* %315) #10
  %316 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = load i64, i64* %304, align 8
  %319 = bitcast %"class.spvtools::utils::BitVector"* %296 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = inttoptr i64 %320 to i64*
  br label %322

322:                                              ; preds = %307, %310
  %323 = phi i64* [ %303, %307 ], [ %321, %310 ]
  %324 = phi i64 [ %308, %307 ], [ %320, %310 ]
  %325 = phi i64 [ %305, %307 ], [ %318, %310 ]
  %326 = phi i64 [ %309, %307 ], [ %317, %310 ]
  %327 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %10 to i64*
  store i64 %326, i64* %327, align 8
  %328 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %10, i64 0, i32 1
  %329 = bitcast %"class.spvtools::utils::BitVector"* %328 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %329, i8 0, i64 24, i1 false) #10
  %330 = sub i64 %325, %324
  %331 = ashr exact i64 %330, 3
  %332 = icmp eq i64 %330, 0
  br i1 %332, label %357, label %333

333:                                              ; preds = %322
  %334 = icmp ugt i64 %331, 2305843009213693951
  br i1 %334, label %335, label %337

335:                                              ; preds = %333
  %336 = bitcast %"class.spvtools::utils::BitVector"* %328 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %336) #12
  unreachable

337:                                              ; preds = %333
  %338 = call i8* @_Znwm(i64 %330) #11
  %339 = bitcast i8* %338 to i64*
  %340 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %10, i64 0, i32 1, i32 0, i32 0, i32 1
  %341 = bitcast i64** %340 to i8**
  store i8* %338, i8** %341, align 8
  %342 = bitcast %"class.spvtools::utils::BitVector"* %328 to i8**
  store i8* %338, i8** %342, align 8
  %343 = getelementptr inbounds i64, i64* %339, i64 %331
  %344 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %10, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %343, i64** %344, align 8
  %345 = bitcast i64** %340 to i64*
  %346 = ptrtoint i8* %338 to i64
  %347 = ptrtoint i64* %323 to i64
  %348 = sub i64 %325, %347
  %349 = icmp sgt i64 %348, 0
  br i1 %349, label %350, label %355

350:                                              ; preds = %337
  %351 = lshr exact i64 %348, 3
  %352 = bitcast i64* %323 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %338, i8* align 8 %352, i64 %348, i1 false) #10
  %353 = getelementptr inbounds i64, i64* %339, i64 %351
  %354 = ptrtoint i64* %353 to i64
  br label %355

355:                                              ; preds = %350, %337
  %356 = phi i64 [ %354, %350 ], [ %346, %337 ]
  store i64 %356, i64* %345, align 8
  br label %357

357:                                              ; preds = %322, %355
  call void @_ZN8spvtools3opt9VectorDCE25AddItemToWorkListIfNeededENS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS3_4hashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS6_EEEEEEPNS3_6vectorIS2_NSB_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* undef, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nonnull %10, %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::vector.956"* %3)
  %358 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %359 = load i64*, i64** %358, align 8
  %360 = icmp eq i64* %359, null
  br i1 %360, label %366, label %361

361:                                              ; preds = %357
  %362 = ptrtoint i64* %359 to i64
  %363 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %10, i64 0, i32 1, i32 0, i32 0, i32 1
  %364 = bitcast i64** %363 to i64*
  store i64 %362, i64* %364, align 8
  %365 = bitcast i64* %359 to i8*
  call void @_ZdlPv(i8* %365) #11
  br label %366

366:                                              ; preds = %357, %361
  %367 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  br i1 %369, label %373, label %370

370:                                              ; preds = %366
  %371 = ptrtoint i64* %368 to i64
  store i64 %371, i64* %304, align 8
  %372 = bitcast i64* %368 to i8*
  call void @_ZdlPv(i8* %372) #11
  br label %373

373:                                              ; preds = %370, %366, %288, %284
  %374 = phi i8* [ %84, %284 ], [ %84, %288 ], [ %294, %366 ], [ %294, %370 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %374) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt9VectorDCE27MarkVectorShuffleUsesAsLiveERKNS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS5_4hashIjEENS5_8equal_toIjEENS5_9allocatorINS5_4pairIKjS8_EEEEEEPNS5_6vectorIS2_NSD_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* nocapture readonly, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nocapture readonly dereferenceable(32), %"class.std::__1::unordered_map.932"*, %"class.std::__1::vector.956"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %8 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %9 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %10 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 2
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %41

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %18, align 8
  %20 = tail call i8* @_Znwm(i64 104) #11
  %21 = bitcast i8* %20 to %"class.spvtools::opt::analysis::DefUseManager"*
  %22 = getelementptr inbounds i8, i8* %20, i64 32
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = getelementptr inbounds i8, i8* %20, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #10
  %26 = bitcast i8* %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %20, i64 64
  %28 = getelementptr inbounds i8, i8* %20, i64 96
  %29 = bitcast i8* %28 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %29, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %21, %"class.spvtools::opt::Module"* %19) #10
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 6
  %31 = ptrtoint i8* %20 to i64
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %30, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %32, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.62"* %30 to i64*
  store i64 %31, i64* %34, align 8
  %35 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %33, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %17
  %37 = bitcast %"class.std::__1::unique_ptr.62"* %30 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %37, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %33) #10
  br label %38

38:                                               ; preds = %36, %17
  %39 = load i32, i32* %13, align 8
  %40 = or i32 %39, 1
  store i32 %40, i32* %13, align 8
  br label %41

41:                                               ; preds = %4, %38
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 6, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %42, align 8
  %44 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #10
  %45 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1
  %47 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = tail call i8* @_Znwm(i64 8) #11
  %51 = bitcast %"class.spvtools::utils::BitVector"* %46 to i8**
  store i8* %50, i8** %51, align 8
  %52 = getelementptr inbounds i8, i8* %50, i64 8
  %53 = bitcast i64** %49 to i8**
  store i8* %52, i8** %53, align 8
  %54 = bitcast i8* %50 to i64*
  store i64 0, i64* %54, align 8
  %55 = bitcast i64** %48 to i64*
  %56 = ptrtoint i8* %52 to i64
  store i64 %56, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 0
  %58 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %57, align 8
  %59 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %58, i64 0, i32 3
  %60 = load i8, i8* %59, align 4, !range !12
  %61 = icmp eq i8 %60, 0
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %58, i64 0, i32 4
  %63 = load i8, i8* %62, align 1, !range !12
  %64 = icmp eq i8 %63, 0
  %65 = select i1 %64, i32 1, i32 2
  %66 = xor i1 %64, true
  %67 = zext i1 %66 to i32
  %68 = select i1 %61, i32 %67, i32 %65
  %69 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %58, i32 %68) #10
  %70 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %43, i32 %69) #10
  store %"class.spvtools::opt::Instruction"* %70, %"class.spvtools::opt::Instruction"** %45, align 8
  %71 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %71) #10
  %72 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 0
  %73 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1
  %74 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %77 = tail call i8* @_Znwm(i64 8) #11
  %78 = bitcast %"class.spvtools::utils::BitVector"* %73 to i8**
  store i8* %77, i8** %78, align 8
  %79 = getelementptr inbounds i8, i8* %77, i64 8
  %80 = bitcast i64** %76 to i8**
  store i8* %79, i8** %80, align 8
  %81 = bitcast i8* %77 to i64*
  store i64 0, i64* %81, align 8
  %82 = bitcast i64** %75 to i64*
  %83 = ptrtoint i8* %79 to i64
  store i64 %83, i64* %82, align 8
  %84 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %57, align 8
  %85 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %84, i64 0, i32 3
  %86 = load i8, i8* %85, align 4, !range !12
  %87 = icmp eq i8 %86, 0
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %84, i64 0, i32 4
  %89 = load i8, i8* %88, align 1, !range !12
  %90 = icmp eq i8 %89, 0
  %91 = select i1 %90, i32 1, i32 2
  %92 = xor i1 %90, true
  %93 = zext i1 %92 to i32
  %94 = select i1 %87, i32 %93, i32 %91
  %95 = add nuw nsw i32 %94, 1
  %96 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %84, i32 %95) #10
  %97 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %43, i32 %96) #10
  store %"class.spvtools::opt::Instruction"* %97, %"class.spvtools::opt::Instruction"** %72, align 8
  %98 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %99 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %98, i64 0, i32 11
  %100 = load i32, i32* %99, align 8
  %101 = trunc i32 %100 to i16
  %102 = icmp slt i16 %101, 0
  br i1 %102, label %118, label %103

103:                                              ; preds = %41
  %104 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %98, i64 0, i32 5
  %105 = tail call i8* @_Znwm(i64 240) #11
  %106 = bitcast i8* %105 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %106, %"class.std::__1::function"* dereferenceable(32) %104, %"class.spvtools::opt::IRContext"* %98) #10
  %107 = ptrtoint i8* %105 to i64
  %108 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %98, i64 0, i32 20
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %109, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.480"* %108 to i64*
  store i64 %107, i64* %111, align 8
  %112 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %110, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %110) #10
  %114 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %110 to i8*
  tail call void @_ZdlPv(i8* %114) #11
  br label %115

115:                                              ; preds = %113, %103
  %116 = load i32, i32* %99, align 8
  %117 = or i32 %116, 32768
  store i32 %117, i32* %99, align 8
  br label %118

118:                                              ; preds = %41, %115
  %119 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %98, i64 0, i32 20, i32 0, i32 0, i32 0
  %120 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %119, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %70, i64 0, i32 3
  %122 = load i8, i8* %121, align 4, !range !12
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %118
  %125 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %70, i32 0) #10
  br label %126

126:                                              ; preds = %118, %124
  %127 = phi i32 [ %125, %124 ], [ 0, %118 ]
  %128 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %120, i32 %127) #10
  %129 = bitcast %"class.spvtools::opt::analysis::Type"* %128 to %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)***
  %130 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %130, i64 14
  %132 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %131, align 8
  %133 = tail call %"class.spvtools::opt::analysis::Vector"* %132(%"class.spvtools::opt::analysis::Type"* %128) #10
  %134 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %133, i64 0, i32 3
  %135 = load i32, i32* %134, align 8
  %136 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1
  %137 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %138 = bitcast i64** %137 to i64*
  %139 = bitcast %"class.spvtools::utils::BitVector"* %136 to i64*
  %140 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %73, i64 0, i32 0
  %141 = bitcast %"class.spvtools::utils::BitVector"* %73 to i64*
  %142 = bitcast i64* %6 to i8*
  %143 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %46, i64 0, i32 0
  %144 = bitcast %"class.spvtools::utils::BitVector"* %46 to i64*
  %145 = bitcast i64* %5 to i8*
  br label %146

146:                                              ; preds = %358, %126
  %147 = phi i32 [ 2, %126 ], [ %359, %358 ]
  %148 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %57, align 8
  %149 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %148, i64 0, i32 6
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %148, i64 0, i32 6, i32 0, i32 1
  %151 = bitcast %"struct.spvtools::opt::Operand"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.std::__1::vector"* %149 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = sub i64 %152, %154
  %156 = sdiv exact i64 %155, 48
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %148, i64 0, i32 3
  %158 = load i8, i8* %157, align 4, !range !12
  %159 = icmp eq i8 %158, 0
  %160 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %148, i64 0, i32 4
  %161 = load i8, i8* %160, align 1, !range !12
  %162 = icmp eq i8 %161, 0
  %163 = select i1 %162, i32 1, i32 2
  %164 = xor i1 %162, true
  %165 = zext i1 %164 to i32
  %166 = select i1 %159, i32 %165, i32 %163
  %167 = trunc i64 %156 to i32
  %168 = sub i32 %167, %166
  %169 = icmp ult i32 %147, %168
  br i1 %169, label %269, label %170

170:                                              ; preds = %146
  %171 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9 to i64*
  store i64 %172, i64* %173, align 8
  %174 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 1
  %175 = bitcast %"class.spvtools::utils::BitVector"* %174 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 24, i1 false) #10
  %176 = load i64, i64* %55, align 8
  %177 = load i64, i64* %144, align 8
  %178 = sub i64 %176, %177
  %179 = ashr exact i64 %178, 3
  %180 = icmp eq i64 %178, 0
  br i1 %180, label %203, label %181

181:                                              ; preds = %170
  %182 = icmp ugt i64 %179, 2305843009213693951
  br i1 %182, label %183, label %185

183:                                              ; preds = %181
  %184 = bitcast %"class.spvtools::utils::BitVector"* %174 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %184) #12
  unreachable

185:                                              ; preds = %181
  %186 = call i8* @_Znwm(i64 %178) #11
  %187 = bitcast i8* %186 to i64*
  %188 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 1, i32 0, i32 0, i32 1
  %189 = bitcast i64** %188 to i8**
  store i8* %186, i8** %189, align 8
  %190 = bitcast %"class.spvtools::utils::BitVector"* %174 to i8**
  store i8* %186, i8** %190, align 8
  %191 = getelementptr inbounds i64, i64* %187, i64 %179
  %192 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %191, i64** %192, align 8
  %193 = bitcast i64** %188 to i64*
  %194 = ptrtoint i8* %186 to i64
  %195 = icmp sgt i64 %178, 0
  br i1 %195, label %196, label %201

196:                                              ; preds = %185
  %197 = lshr exact i64 %178, 3
  %198 = inttoptr i64 %177 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %186, i8* align 8 %198, i64 %178, i1 false) #10
  %199 = getelementptr inbounds i64, i64* %187, i64 %197
  %200 = ptrtoint i64* %199 to i64
  br label %201

201:                                              ; preds = %196, %185
  %202 = phi i64 [ %200, %196 ], [ %194, %185 ]
  store i64 %202, i64* %193, align 8
  br label %203

203:                                              ; preds = %170, %201
  call void @_ZN8spvtools3opt9VectorDCE25AddItemToWorkListIfNeededENS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS3_4hashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS6_EEEEEEPNS3_6vectorIS2_NSB_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* undef, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nonnull %9, %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::vector.956"* %3)
  %204 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %205 = load i64*, i64** %204, align 8
  %206 = icmp eq i64* %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %203
  %208 = ptrtoint i64* %205 to i64
  %209 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 1, i32 0, i32 0, i32 1
  %210 = bitcast i64** %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast i64* %205 to i8*
  call void @_ZdlPv(i8* %211) #11
  br label %212

212:                                              ; preds = %203, %207
  %213 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %10 to i64*
  store i64 %214, i64* %215, align 8
  %216 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %10, i64 0, i32 1
  %217 = bitcast %"class.spvtools::utils::BitVector"* %216 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 24, i1 false) #10
  %218 = load i64, i64* %82, align 8
  %219 = load i64, i64* %141, align 8
  %220 = sub i64 %218, %219
  %221 = ashr exact i64 %220, 3
  %222 = icmp eq i64 %220, 0
  br i1 %222, label %245, label %223

223:                                              ; preds = %212
  %224 = icmp ugt i64 %221, 2305843009213693951
  br i1 %224, label %225, label %227

225:                                              ; preds = %223
  %226 = bitcast %"class.spvtools::utils::BitVector"* %216 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %226) #12
  unreachable

227:                                              ; preds = %223
  %228 = call i8* @_Znwm(i64 %220) #11
  %229 = bitcast i8* %228 to i64*
  %230 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %10, i64 0, i32 1, i32 0, i32 0, i32 1
  %231 = bitcast i64** %230 to i8**
  store i8* %228, i8** %231, align 8
  %232 = bitcast %"class.spvtools::utils::BitVector"* %216 to i8**
  store i8* %228, i8** %232, align 8
  %233 = getelementptr inbounds i64, i64* %229, i64 %221
  %234 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %10, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %233, i64** %234, align 8
  %235 = bitcast i64** %230 to i64*
  %236 = ptrtoint i8* %228 to i64
  %237 = icmp sgt i64 %220, 0
  br i1 %237, label %238, label %243

238:                                              ; preds = %227
  %239 = lshr exact i64 %220, 3
  %240 = inttoptr i64 %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %228, i8* align 8 %240, i64 %220, i1 false) #10
  %241 = getelementptr inbounds i64, i64* %229, i64 %239
  %242 = ptrtoint i64* %241 to i64
  br label %243

243:                                              ; preds = %238, %227
  %244 = phi i64 [ %242, %238 ], [ %236, %227 ]
  store i64 %244, i64* %235, align 8
  br label %245

245:                                              ; preds = %212, %243
  call void @_ZN8spvtools3opt9VectorDCE25AddItemToWorkListIfNeededENS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS3_4hashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS6_EEEEEEPNS3_6vectorIS2_NSB_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* undef, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nonnull %10, %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::vector.956"* %3)
  %246 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %247 = load i64*, i64** %246, align 8
  %248 = icmp eq i64* %247, null
  br i1 %248, label %254, label %249

249:                                              ; preds = %245
  %250 = ptrtoint i64* %247 to i64
  %251 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %10, i64 0, i32 1, i32 0, i32 0, i32 1
  %252 = bitcast i64** %251 to i64*
  store i64 %250, i64* %252, align 8
  %253 = bitcast i64* %247 to i8*
  call void @_ZdlPv(i8* %253) #11
  br label %254

254:                                              ; preds = %245, %249
  %255 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %256 = load i64*, i64** %255, align 8
  %257 = icmp eq i64* %256, null
  br i1 %257, label %261, label %258

258:                                              ; preds = %254
  %259 = ptrtoint i64* %256 to i64
  store i64 %259, i64* %82, align 8
  %260 = bitcast i64* %256 to i8*
  call void @_ZdlPv(i8* %260) #11
  br label %261

261:                                              ; preds = %254, %258
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %71) #10
  %262 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %263 = load i64*, i64** %262, align 8
  %264 = icmp eq i64* %263, null
  br i1 %264, label %268, label %265

265:                                              ; preds = %261
  %266 = ptrtoint i64* %263 to i64
  store i64 %266, i64* %55, align 8
  %267 = bitcast i64* %263 to i8*
  call void @_ZdlPv(i8* %267) #11
  br label %268

268:                                              ; preds = %261, %265
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #10
  ret void

269:                                              ; preds = %146
  %270 = add i32 %166, %147
  %271 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %148, i32 %270) #10
  %272 = add i32 %147, -2
  %273 = lshr i32 %272, 6
  %274 = zext i32 %273 to i64
  %275 = load i64, i64* %138, align 8
  %276 = load i64, i64* %139, align 8
  %277 = sub i64 %275, %276
  %278 = ashr exact i64 %277, 3
  %279 = icmp ugt i64 %278, %274
  br i1 %279, label %280, label %358

280:                                              ; preds = %269
  %281 = inttoptr i64 %276 to i64*
  %282 = and i32 %272, 63
  %283 = getelementptr inbounds i64, i64* %281, i64 %274
  %284 = load i64, i64* %283, align 8
  %285 = zext i32 %282 to i64
  %286 = shl i64 1, %285
  %287 = and i64 %284, %286
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %358, label %289

289:                                              ; preds = %280
  %290 = icmp ult i32 %271, %135
  br i1 %290, label %291, label %324

291:                                              ; preds = %289
  %292 = lshr i32 %271, 6
  %293 = and i32 %271, 63
  %294 = zext i32 %292 to i64
  %295 = load i64, i64* %55, align 8
  %296 = load i64, i64* %144, align 8
  %297 = sub i64 %295, %296
  %298 = ashr exact i64 %297, 3
  %299 = icmp ugt i64 %298, %294
  %300 = inttoptr i64 %296 to i64*
  br i1 %299, label %314, label %301

301:                                              ; preds = %291
  %302 = add nuw nsw i32 %292, 1
  %303 = zext i32 %302 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #10
  store i64 0, i64* %5, align 8
  %304 = icmp ult i64 %298, %303
  br i1 %304, label %305, label %308

305:                                              ; preds = %301
  %306 = sub nsw i64 %303, %298
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.900"* %143, i64 %306, i64* nonnull dereferenceable(8) %5) #10
  %307 = load i64*, i64** %47, align 8
  br label %312

308:                                              ; preds = %301
  %309 = icmp ugt i64 %298, %303
  br i1 %309, label %310, label %312

310:                                              ; preds = %308
  %311 = getelementptr inbounds i64, i64* %300, i64 %303
  store i64* %311, i64** %48, align 8
  br label %312

312:                                              ; preds = %310, %308, %305
  %313 = phi i64* [ %307, %305 ], [ %300, %308 ], [ %300, %310 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #10
  br label %314

314:                                              ; preds = %312, %291
  %315 = phi i64* [ %300, %291 ], [ %313, %312 ]
  %316 = getelementptr inbounds i64, i64* %315, i64 %294
  %317 = load i64, i64* %316, align 8
  %318 = zext i32 %293 to i64
  %319 = shl i64 1, %318
  %320 = and i64 %317, %319
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %358

322:                                              ; preds = %314
  %323 = or i64 %317, %319
  store i64 %323, i64* %316, align 8
  br label %358

324:                                              ; preds = %289
  %325 = sub i32 %271, %135
  %326 = lshr i32 %325, 6
  %327 = and i32 %325, 63
  %328 = zext i32 %326 to i64
  %329 = load i64, i64* %82, align 8
  %330 = load i64, i64* %141, align 8
  %331 = sub i64 %329, %330
  %332 = ashr exact i64 %331, 3
  %333 = icmp ugt i64 %332, %328
  %334 = inttoptr i64 %330 to i64*
  br i1 %333, label %348, label %335

335:                                              ; preds = %324
  %336 = add nuw nsw i32 %326, 1
  %337 = zext i32 %336 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #10
  store i64 0, i64* %6, align 8
  %338 = icmp ult i64 %332, %337
  br i1 %338, label %339, label %342

339:                                              ; preds = %335
  %340 = sub nsw i64 %337, %332
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.900"* %140, i64 %340, i64* nonnull dereferenceable(8) %6) #10
  %341 = load i64*, i64** %74, align 8
  br label %346

342:                                              ; preds = %335
  %343 = icmp ugt i64 %332, %337
  br i1 %343, label %344, label %346

344:                                              ; preds = %342
  %345 = getelementptr inbounds i64, i64* %334, i64 %337
  store i64* %345, i64** %75, align 8
  br label %346

346:                                              ; preds = %344, %342, %339
  %347 = phi i64* [ %341, %339 ], [ %334, %342 ], [ %334, %344 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #10
  br label %348

348:                                              ; preds = %346, %324
  %349 = phi i64* [ %334, %324 ], [ %347, %346 ]
  %350 = getelementptr inbounds i64, i64* %349, i64 %328
  %351 = load i64, i64* %350, align 8
  %352 = zext i32 %327 to i64
  %353 = shl i64 1, %352
  %354 = and i64 %351, %353
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %358

356:                                              ; preds = %348
  %357 = or i64 %351, %353
  store i64 %357, i64* %350, align 8
  br label %358

358:                                              ; preds = %280, %269, %356, %348, %322, %314
  %359 = add nuw i32 %147, 1
  br label %146
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt9VectorDCE31MarkCompositeContructUsesAsLiveENS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS3_4hashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS6_EEEEEEPNS3_6vectorIS2_NSB_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* nocapture readonly, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nocapture readonly, %"class.std::__1::unordered_map.932"*, %"class.std::__1::vector.956"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %7 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %8 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %9 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %43

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %17, align 8
  %19 = tail call i8* @_Znwm(i64 104) #11
  %20 = bitcast i8* %19 to %"class.spvtools::opt::analysis::DefUseManager"*
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 48
  %24 = getelementptr inbounds i8, i8* %19, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10
  %25 = bitcast i8* %24 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 64
  %27 = getelementptr inbounds i8, i8* %19, i64 96
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %28, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %20, %"class.spvtools::opt::Module"* %18) #10
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 6
  %30 = ptrtoint i8* %19 to i64
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %29, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.62"* %29 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %32, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %16
  %36 = bitcast %"class.std::__1::unique_ptr.62"* %29 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %36, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %32) #10
  br label %37

37:                                               ; preds = %35, %16
  %38 = load i32, i32* %12, align 8
  %39 = or i32 %38, 1
  store i32 %39, i32* %12, align 8
  %40 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 11
  %42 = load i32, i32* %41, align 8
  br label %43

43:                                               ; preds = %4, %37
  %44 = phi i32 [ %13, %4 ], [ %42, %37 ]
  %45 = phi %"class.spvtools::opt::IRContext"* [ %11, %4 ], [ %40, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 6, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %46, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 11
  %49 = trunc i32 %44 to i16
  %50 = icmp slt i16 %49, 0
  br i1 %50, label %66, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 5
  %53 = tail call i8* @_Znwm(i64 240) #11
  %54 = bitcast i8* %53 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %54, %"class.std::__1::function"* dereferenceable(32) %52, %"class.spvtools::opt::IRContext"* %45) #10
  %55 = ptrtoint i8* %53 to i64
  %56 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 20
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %57, align 8
  %59 = bitcast %"class.std::__1::unique_ptr.480"* %56 to i64*
  store i64 %55, i64* %59, align 8
  %60 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %58, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %51
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %58) #10
  %62 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %58 to i8*
  tail call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %61, %51
  %64 = load i32, i32* %48, align 8
  %65 = or i32 %64, 32768
  store i32 %65, i32* %48, align 8
  br label %66

66:                                               ; preds = %43, %63
  %67 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 20, i32 0, i32 0, i32 0
  %68 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %67, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 0
  %70 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %69, align 8
  %71 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %70, i64 0, i32 6
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %70, i64 0, i32 6, i32 0, i32 1
  %73 = bitcast %"struct.spvtools::opt::Operand"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::vector"* %71 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = sdiv exact i64 %77, 48
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %70, i64 0, i32 3
  %80 = load i8, i8* %79, align 4, !range !12
  %81 = icmp eq i8 %80, 0
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %70, i64 0, i32 4
  %83 = load i8, i8* %82, align 1, !range !12
  %84 = icmp eq i8 %83, 0
  %85 = select i1 %84, i32 1, i32 2
  %86 = xor i1 %84, true
  %87 = zext i1 %86 to i32
  %88 = select i1 %81, i32 %87, i32 %85
  %89 = trunc i64 %78 to i32
  %90 = sub i32 %89, %88
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %140, label %92

92:                                               ; preds = %66
  %93 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8 to i8*
  %94 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 0
  %95 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1
  %96 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 1
  %98 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %99 = bitcast %"class.spvtools::utils::BitVector"* %95 to i8**
  %100 = bitcast i64** %98 to i8**
  %101 = bitcast i64** %97 to i64*
  %102 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1
  %103 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %104 = bitcast i64** %103 to i64*
  %105 = bitcast %"class.spvtools::utils::BitVector"* %102 to i64*
  %106 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %95, i64 0, i32 0
  %107 = bitcast %"class.spvtools::utils::BitVector"* %95 to i64*
  %108 = bitcast i64* %5 to i8*
  %109 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8 to i64*
  %110 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9 to i64*
  %111 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 1
  %112 = bitcast %"class.spvtools::utils::BitVector"* %111 to i8*
  %113 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 1, i32 0, i32 0, i32 1
  %114 = bitcast i64** %113 to i8**
  %115 = bitcast %"class.spvtools::utils::BitVector"* %111 to i8**
  %116 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %117 = bitcast i64** %113 to i64*
  %118 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %120 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6 to i8*
  %121 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 0
  %122 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 1
  %123 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %124 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %125 = bitcast %"class.spvtools::utils::BitVector"* %122 to i8**
  %126 = bitcast i64** %124 to i8**
  %127 = bitcast i64** %123 to i64*
  %128 = bitcast %"class.spvtools::utils::BitVector"* %122 to i64*
  %129 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6 to i64*
  %130 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7 to i64*
  %131 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1
  %132 = bitcast %"class.spvtools::utils::BitVector"* %131 to i8*
  %133 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 1
  %134 = bitcast i64** %133 to i8**
  %135 = bitcast %"class.spvtools::utils::BitVector"* %131 to i8**
  %136 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %137 = bitcast i64** %133 to i64*
  %138 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %141

140:                                              ; preds = %346, %66
  ret void

141:                                              ; preds = %351, %92
  %142 = phi i8 [ %83, %92 ], [ %353, %351 ]
  %143 = phi i8 [ %80, %92 ], [ %352, %351 ]
  %144 = phi i32 [ 0, %92 ], [ %349, %351 ]
  %145 = phi i32 [ 0, %92 ], [ %348, %351 ]
  %146 = icmp eq i8 %143, 0
  %147 = icmp eq i8 %142, 0
  %148 = select i1 %147, i32 1, i32 2
  %149 = xor i1 %147, true
  %150 = zext i1 %149 to i32
  %151 = select i1 %146, i32 %150, i32 %148
  %152 = add i32 %151, %144
  %153 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %70, i32 %152) #10
  %154 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %47, i32 %153) #10
  %155 = call zeroext i1 @_ZNK8spvtools3opt9VectorDCE15HasScalarResultEPKNS0_11InstructionE(%"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::Instruction"* %154)
  br i1 %155, label %156, label %230

156:                                              ; preds = %141
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %120) #10
  %157 = call i8* @_Znwm(i64 8) #11
  store i8* %157, i8** %125, align 8
  %158 = getelementptr inbounds i8, i8* %157, i64 8
  store i8* %158, i8** %126, align 8
  %159 = bitcast i8* %157 to i64*
  store i64 0, i64* %159, align 8
  %160 = ptrtoint i8* %158 to i64
  store i64 %160, i64* %127, align 8
  store %"class.spvtools::opt::Instruction"* %154, %"class.spvtools::opt::Instruction"** %121, align 8
  %161 = lshr i32 %145, 6
  %162 = zext i32 %161 to i64
  %163 = load i64, i64* %104, align 8
  %164 = load i64, i64* %105, align 8
  %165 = sub i64 %163, %164
  %166 = ashr exact i64 %165, 3
  %167 = icmp ugt i64 %166, %162
  %168 = ptrtoint i8* %157 to i64
  %169 = ptrtoint %"class.spvtools::opt::Instruction"* %154 to i64
  br i1 %167, label %170, label %190

170:                                              ; preds = %156
  %171 = inttoptr i64 %164 to i64*
  %172 = and i32 %145, 63
  %173 = getelementptr inbounds i64, i64* %171, i64 %162
  %174 = load i64, i64* %173, align 8
  %175 = zext i32 %172 to i64
  %176 = shl i64 1, %175
  %177 = and i64 %174, %176
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %190, label %179

179:                                              ; preds = %170
  %180 = bitcast i8* %157 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = and i64 %181, 1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %190

184:                                              ; preds = %179
  %185 = or i64 %181, 1
  store i64 %185, i64* %180, align 8
  %186 = load i64, i64* %129, align 8
  %187 = load i64, i64* %127, align 8
  %188 = load i64, i64* %128, align 8
  %189 = inttoptr i64 %188 to i64*
  br label %190

190:                                              ; preds = %170, %156, %184, %179
  %191 = phi i64* [ %159, %170 ], [ %159, %156 ], [ %189, %184 ], [ %159, %179 ]
  %192 = phi i64 [ %168, %170 ], [ %168, %156 ], [ %188, %184 ], [ %168, %179 ]
  %193 = phi i64 [ %160, %170 ], [ %160, %156 ], [ %187, %184 ], [ %160, %179 ]
  %194 = phi i64 [ %169, %170 ], [ %169, %156 ], [ %186, %184 ], [ %169, %179 ]
  store i64 %194, i64* %130, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 24, i1 false) #10
  %195 = sub i64 %193, %192
  %196 = ashr exact i64 %195, 3
  %197 = icmp eq i64 %195, 0
  br i1 %197, label %217, label %198

198:                                              ; preds = %190
  %199 = icmp ugt i64 %196, 2305843009213693951
  br i1 %199, label %200, label %202

200:                                              ; preds = %198
  %201 = bitcast %"class.spvtools::utils::BitVector"* %131 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %201) #12
  unreachable

202:                                              ; preds = %198
  %203 = call i8* @_Znwm(i64 %195) #11
  %204 = bitcast i8* %203 to i64*
  store i8* %203, i8** %134, align 8
  store i8* %203, i8** %135, align 8
  %205 = getelementptr inbounds i64, i64* %204, i64 %196
  store i64* %205, i64** %136, align 8
  %206 = ptrtoint i8* %203 to i64
  %207 = ptrtoint i64* %191 to i64
  %208 = sub i64 %193, %207
  %209 = icmp sgt i64 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %202
  %211 = lshr exact i64 %208, 3
  %212 = bitcast i64* %191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %203, i8* align 8 %212, i64 %208, i1 false) #10
  %213 = getelementptr inbounds i64, i64* %204, i64 %211
  %214 = ptrtoint i64* %213 to i64
  br label %215

215:                                              ; preds = %210, %202
  %216 = phi i64 [ %214, %210 ], [ %206, %202 ]
  store i64 %216, i64* %137, align 8
  br label %217

217:                                              ; preds = %190, %215
  call void @_ZN8spvtools3opt9VectorDCE25AddItemToWorkListIfNeededENS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS3_4hashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS6_EEEEEEPNS3_6vectorIS2_NSB_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* undef, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nonnull %7, %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::vector.956"* %3)
  %218 = load i64*, i64** %138, align 8
  %219 = icmp eq i64* %218, null
  br i1 %219, label %223, label %220

220:                                              ; preds = %217
  %221 = ptrtoint i64* %218 to i64
  store i64 %221, i64* %137, align 8
  %222 = bitcast i64* %218 to i8*
  call void @_ZdlPv(i8* %222) #11
  br label %223

223:                                              ; preds = %217, %220
  %224 = add i32 %145, 1
  %225 = load i64*, i64** %139, align 8
  %226 = icmp eq i64* %225, null
  br i1 %226, label %346, label %227

227:                                              ; preds = %223
  %228 = ptrtoint i64* %225 to i64
  store i64 %228, i64* %127, align 8
  %229 = bitcast i64* %225 to i8*
  call void @_ZdlPv(i8* %229) #11
  br label %346

230:                                              ; preds = %141
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93) #10
  %231 = call i8* @_Znwm(i64 8) #11
  store i8* %231, i8** %99, align 8
  %232 = getelementptr inbounds i8, i8* %231, i64 8
  store i8* %232, i8** %100, align 8
  %233 = bitcast i8* %231 to i64*
  store i64 0, i64* %233, align 8
  %234 = ptrtoint i8* %232 to i64
  store i64 %234, i64* %101, align 8
  store %"class.spvtools::opt::Instruction"* %154, %"class.spvtools::opt::Instruction"** %94, align 8
  %235 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %154, i64 0, i32 3
  %236 = load i8, i8* %235, align 4, !range !12
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %240, label %238

238:                                              ; preds = %230
  %239 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %154, i32 0) #10
  br label %240

240:                                              ; preds = %230, %238
  %241 = phi i32 [ %239, %238 ], [ 0, %230 ]
  %242 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %68, i32 %241) #10
  %243 = bitcast %"class.spvtools::opt::analysis::Type"* %242 to %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)***
  %244 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %243, align 8
  %245 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %244, i64 14
  %246 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %245, align 8
  %247 = call %"class.spvtools::opt::analysis::Vector"* %246(%"class.spvtools::opt::analysis::Type"* %242) #10
  %248 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %247, i64 0, i32 3
  %249 = load i32, i32* %248, align 8
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %253, label %290

251:                                              ; preds = %342
  %252 = add i32 %145, %249
  br label %253

253:                                              ; preds = %251, %240
  %254 = phi i32 [ %145, %240 ], [ %252, %251 ]
  %255 = load i64, i64* %109, align 8
  store i64 %255, i64* %110, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 24, i1 false) #10
  %256 = load i64, i64* %101, align 8
  %257 = load i64, i64* %107, align 8
  %258 = sub i64 %256, %257
  %259 = ashr exact i64 %258, 3
  %260 = icmp eq i64 %258, 0
  br i1 %260, label %278, label %261

261:                                              ; preds = %253
  %262 = icmp ugt i64 %259, 2305843009213693951
  br i1 %262, label %263, label %265

263:                                              ; preds = %261
  %264 = bitcast %"class.spvtools::utils::BitVector"* %111 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %264) #12
  unreachable

265:                                              ; preds = %261
  %266 = call i8* @_Znwm(i64 %258) #11
  %267 = bitcast i8* %266 to i64*
  store i8* %266, i8** %114, align 8
  store i8* %266, i8** %115, align 8
  %268 = getelementptr inbounds i64, i64* %267, i64 %259
  store i64* %268, i64** %116, align 8
  %269 = ptrtoint i8* %266 to i64
  %270 = icmp sgt i64 %258, 0
  br i1 %270, label %271, label %276

271:                                              ; preds = %265
  %272 = lshr exact i64 %258, 3
  %273 = inttoptr i64 %257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %266, i8* align 8 %273, i64 %258, i1 false) #10
  %274 = getelementptr inbounds i64, i64* %267, i64 %272
  %275 = ptrtoint i64* %274 to i64
  br label %276

276:                                              ; preds = %271, %265
  %277 = phi i64 [ %275, %271 ], [ %269, %265 ]
  store i64 %277, i64* %117, align 8
  br label %278

278:                                              ; preds = %253, %276
  call void @_ZN8spvtools3opt9VectorDCE25AddItemToWorkListIfNeededENS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS3_4hashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS6_EEEEEEPNS3_6vectorIS2_NSB_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* undef, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nonnull %9, %"class.std::__1::unordered_map.932"* %2, %"class.std::__1::vector.956"* %3)
  %279 = load i64*, i64** %118, align 8
  %280 = icmp eq i64* %279, null
  br i1 %280, label %284, label %281

281:                                              ; preds = %278
  %282 = ptrtoint i64* %279 to i64
  store i64 %282, i64* %117, align 8
  %283 = bitcast i64* %279 to i8*
  call void @_ZdlPv(i8* %283) #11
  br label %284

284:                                              ; preds = %278, %281
  %285 = load i64*, i64** %119, align 8
  %286 = icmp eq i64* %285, null
  br i1 %286, label %346, label %287

287:                                              ; preds = %284
  %288 = ptrtoint i64* %285 to i64
  store i64 %288, i64* %101, align 8
  %289 = bitcast i64* %285 to i8*
  call void @_ZdlPv(i8* %289) #11
  br label %346

290:                                              ; preds = %240, %342
  %291 = phi i32 [ %343, %342 ], [ 0, %240 ]
  %292 = phi i32 [ %344, %342 ], [ %145, %240 ]
  %293 = lshr i32 %292, 6
  %294 = zext i32 %293 to i64
  %295 = load i64, i64* %104, align 8
  %296 = load i64, i64* %105, align 8
  %297 = sub i64 %295, %296
  %298 = ashr exact i64 %297, 3
  %299 = icmp ugt i64 %298, %294
  br i1 %299, label %300, label %342

300:                                              ; preds = %290
  %301 = inttoptr i64 %296 to i64*
  %302 = and i32 %292, 63
  %303 = getelementptr inbounds i64, i64* %301, i64 %294
  %304 = load i64, i64* %303, align 8
  %305 = zext i32 %302 to i64
  %306 = shl i64 1, %305
  %307 = and i64 %304, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %342, label %309

309:                                              ; preds = %300
  %310 = lshr i32 %291, 6
  %311 = and i32 %291, 63
  %312 = zext i32 %310 to i64
  %313 = load i64, i64* %101, align 8
  %314 = load i64, i64* %107, align 8
  %315 = sub i64 %313, %314
  %316 = ashr exact i64 %315, 3
  %317 = icmp ugt i64 %316, %312
  %318 = inttoptr i64 %314 to i64*
  br i1 %317, label %332, label %319

319:                                              ; preds = %309
  %320 = add nuw nsw i32 %310, 1
  %321 = zext i32 %320 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #10
  store i64 0, i64* %5, align 8
  %322 = icmp ult i64 %316, %321
  br i1 %322, label %323, label %326

323:                                              ; preds = %319
  %324 = sub nsw i64 %321, %316
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.900"* %106, i64 %324, i64* nonnull dereferenceable(8) %5) #10
  %325 = load i64*, i64** %96, align 8
  br label %330

326:                                              ; preds = %319
  %327 = icmp ugt i64 %316, %321
  br i1 %327, label %328, label %330

328:                                              ; preds = %326
  %329 = getelementptr inbounds i64, i64* %318, i64 %321
  store i64* %329, i64** %97, align 8
  br label %330

330:                                              ; preds = %328, %326, %323
  %331 = phi i64* [ %325, %323 ], [ %318, %326 ], [ %318, %328 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #10
  br label %332

332:                                              ; preds = %330, %309
  %333 = phi i64* [ %318, %309 ], [ %331, %330 ]
  %334 = getelementptr inbounds i64, i64* %333, i64 %312
  %335 = load i64, i64* %334, align 8
  %336 = zext i32 %311 to i64
  %337 = shl i64 1, %336
  %338 = and i64 %335, %337
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %342

340:                                              ; preds = %332
  %341 = or i64 %335, %337
  store i64 %341, i64* %334, align 8
  br label %342

342:                                              ; preds = %300, %290, %340, %332
  %343 = add nuw i32 %291, 1
  %344 = add i32 %292, 1
  %345 = icmp eq i32 %343, %249
  br i1 %345, label %251, label %290

346:                                              ; preds = %287, %284, %227, %223
  %347 = phi i8* [ %120, %223 ], [ %120, %227 ], [ %93, %284 ], [ %93, %287 ]
  %348 = phi i32 [ %224, %223 ], [ %224, %227 ], [ %254, %284 ], [ %254, %287 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %347) #10
  %349 = add nuw i32 %144, 1
  %350 = icmp eq i32 %349, %90
  br i1 %350, label %140, label %351

351:                                              ; preds = %346
  %352 = load i8, i8* %79, align 4, !range !12
  %353 = load i8, i8* %82, align 1, !range !12
  br label %141
}

declare zeroext i1 @_ZNK8spvtools3opt11Instruction14IsScalarizableEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS0_11InstructionERKNS_5utils9BitVectorEPNSt3__113unordered_mapIjS5_NS8_4hashIjEENS8_8equal_toIjEENS8_9allocatorINS8_4pairIKjS5_EEEEEEPNS8_6vectorINS1_12WorkListItemENSE_ISM_EEEE(%"class.spvtools::opt::VectorDCE"*, %"class.spvtools::opt::Instruction"* nocapture readonly, %"class.spvtools::utils::BitVector"* dereferenceable(24), %"class.std::__1::unordered_map.932"*, %"class.std::__1::vector.956"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::function.1006", align 8
  %7 = alloca %"class.std::__1::vector.956"*, align 8
  %8 = alloca %"class.std::__1::function.969", align 8
  store %"class.std::__1::vector.956"* %4, %"class.std::__1::vector.956"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %39

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 104) #11
  %19 = bitcast i8* %18 to %"class.spvtools::opt::analysis::DefUseManager"*
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = getelementptr inbounds i8, i8* %18, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 64
  %26 = getelementptr inbounds i8, i8* %18, i64 96
  %27 = bitcast i8* %26 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %27, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %19, %"class.spvtools::opt::Module"* %17) #10
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6
  %29 = ptrtoint i8* %18 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %28 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %15
  %35 = bitcast %"class.std::__1::unique_ptr.62"* %28 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %35, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %31) #10
  br label %36

36:                                               ; preds = %34, %15
  %37 = load i32, i32* %11, align 8
  %38 = or i32 %37, 1
  store i32 %38, i32* %11, align 8
  br label %39

39:                                               ; preds = %5, %36
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6, i32 0, i32 0, i32 0
  %41 = bitcast %"class.spvtools::opt::analysis::DefUseManager"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::function.969"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #10
  %44 = getelementptr inbounds %"class.std::__1::function.969", %"class.std::__1::function.969"* %8, i64 0, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.std::__1::function.969", %"class.std::__1::function.969"* %8, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS8_11InstructionERKNS7_5utils9BitVectorEPNS_13unordered_mapIjSD_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSD_EEEEEEPNS_6vectorINS9_12WorkListItemENSL_IST_EEEEE3$_1S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %44, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS5_11InstructionERKNS4_5utils9BitVectorEPNS_13unordered_mapIjSA_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSA_EEEEEEPNS_6vectorINS6_12WorkListItemENSI_ISQ_EEEEE3$_1FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %45, align 8
  %46 = tail call i8* @_Znwm(i64 40) #11, !noalias !13
  %47 = bitcast i8* %46 to %"class.std::__1::vector.956"***
  store %"class.std::__1::vector.956"** %7, %"class.std::__1::vector.956"*** %47, align 8
  %48 = getelementptr inbounds i8, i8* %46, i64 8
  %49 = bitcast i8* %48 to %"class.spvtools::utils::BitVector"**
  store %"class.spvtools::utils::BitVector"* %2, %"class.spvtools::utils::BitVector"** %49, align 8
  %50 = getelementptr inbounds i8, i8* %46, i64 16
  %51 = bitcast i8* %50 to %"class.spvtools::opt::VectorDCE"**
  store %"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::VectorDCE"** %51, align 8
  %52 = getelementptr inbounds i8, i8* %46, i64 24
  %53 = bitcast i8* %52 to %"class.std::__1::unordered_map.932"**
  store %"class.std::__1::unordered_map.932"* %3, %"class.std::__1::unordered_map.932"** %53, align 8
  %54 = getelementptr inbounds i8, i8* %46, i64 32
  %55 = bitcast i8* %54 to i64*
  store i64 %42, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::function.969", %"class.std::__1::function.969"* %8, i64 0, i32 0, i32 0, i32 0
  store i8* %46, i8** %56, align 8
  %57 = bitcast %"class.std::__1::function.1006"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #10
  %58 = ptrtoint %"class.std::__1::function.969"* %8 to i64
  %59 = getelementptr inbounds %"class.std::__1::function.1006", %"class.std::__1::function.1006"* %6, i64 0, i32 0, i32 1, i32 0
  %60 = getelementptr inbounds %"class.std::__1::function.1006", %"class.std::__1::function.1006"* %6, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %59, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %60, align 8
  %61 = bitcast %"class.std::__1::function.1006"* %6 to i64*
  store i64 %58, i64* %61, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %63 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %62, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %65 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %64, align 8
  %66 = icmp eq %"struct.spvtools::opt::Operand"* %63, %65
  br i1 %66, label %89, label %67

67:                                               ; preds = %39
  %68 = getelementptr inbounds %"class.std::__1::function.1006", %"class.std::__1::function.1006"* %6, i64 0, i32 0, i32 0
  br label %69

69:                                               ; preds = %84, %67
  %70 = phi %"struct.spvtools::opt::Operand"* [ %63, %67 ], [ %85, %84 ]
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %72) #10
  br i1 %73, label %74, label %84

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %70, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %75, align 8
  %77 = icmp eq %"class.std::__1::vector.3"* %76, null
  %78 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %76, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %70, i64 0, i32 1, i32 2
  %80 = select i1 %77, i32** %79, i32** %78
  %81 = load i32*, i32** %80, align 8
  %82 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %59, align 8
  %83 = call zeroext i1 %82(%"union.std::__1::__function::__policy_storage"* nonnull %68, i32* %81) #10
  br i1 %83, label %84, label %87

84:                                               ; preds = %74, %69
  %85 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %70, i64 1
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %85, %65
  br i1 %86, label %87, label %69

87:                                               ; preds = %84, %74
  %88 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %60, align 8
  br label %89

89:                                               ; preds = %87, %39
  %90 = phi %"struct.std::__1::__function::__policy"* [ %88, %87 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %39 ]
  %91 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %90, i64 0, i32 1
  %92 = load void (i8*)*, void (i8*)** %91, align 8
  %93 = icmp eq void (i8*)* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.std::__1::function.1006", %"class.std::__1::function.1006"* %6, i64 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void %92(i8* %96) #10
  br label %97

97:                                               ; preds = %89, %94
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #10
  %98 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %45, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %98, i64 0, i32 1
  %100 = load void (i8*)*, void (i8*)** %99, align 8
  %101 = icmp eq void (i8*)* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  %103 = load i8*, i8** %56, align 8
  call void %100(i8* %103) #10
  br label %104

104:                                              ; preds = %97, %102
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #10
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt9VectorDCE23HasVectorOrScalarResultEPKNS0_11InstructionE(%"class.spvtools::opt::VectorDCE"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK8spvtools3opt9VectorDCE15HasScalarResultEPKNS0_11InstructionE(%"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::Instruction"* %1)
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZNK8spvtools3opt9VectorDCE15HasVectorResultEPKNS0_11InstructionE(%"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::Instruction"* %1)
  br label %6

6:                                                ; preds = %4, %2
  %7 = phi i1 [ true, %2 ], [ %5, %4 ]
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt9VectorDCE25AddItemToWorkListIfNeededENS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS3_4hashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS6_EEEEEEPNS3_6vectorIS2_NSB_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* nocapture readnone, %"struct.spvtools::opt::VectorDCE::WorkListItem"*, %"class.std::__1::unordered_map.932"*, %"class.std::__1::vector.956"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::pair.986", align 8
  %6 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 0
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !12
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !12
  %14 = zext i8 %13 to i32
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %7, i32 %14) #10
  br label %16

16:                                               ; preds = %4, %11
  %17 = phi i32 [ %15, %11 ], [ 0, %4 ]
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.std::__1::unordered_map.932", %"class.std::__1::unordered_map.932"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %70, label %22

22:                                               ; preds = %16
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #10, !range !18
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, 4294967295
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ugt i64 %20, %18
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %30, %28, %25
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::unordered_map.932", %"class.std::__1::unordered_map.932"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.937"* %37, null
  br i1 %38, label %70, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.937"* %41, null
  br i1 %42, label %70, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  br label %45

45:                                               ; preds = %66, %43
  %46 = phi %"struct.std::__1::__hash_node_base.937"* [ %41, %43 ], [ %68, %66 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.937"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %45
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %44
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %56, %54, %52
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %66, label %70

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %46, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.937"* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, %17
  br i1 %65, label %175, label %66

66:                                               ; preds = %61, %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %46, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.937"* %68, null
  br i1 %69, label %70, label %45

70:                                               ; preds = %58, %66, %32, %16, %39
  %71 = bitcast %"struct.std::__1::pair.986"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %71) #10
  %72 = load i8, i8* %8, align 1, !range !12
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 3
  %76 = load i8, i8* %75, align 4, !range !12
  %77 = zext i8 %76 to i32
  %78 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %7, i32 %77) #10
  br label %79

79:                                               ; preds = %70, %74
  %80 = phi i32 [ %78, %74 ], [ 0, %70 ]
  %81 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1
  %82 = getelementptr inbounds %"struct.std::__1::pair.986", %"struct.std::__1::pair.986"* %5, i64 0, i32 0
  store i32 %80, i32* %82, align 8, !alias.scope !19
  %83 = getelementptr inbounds %"struct.std::__1::pair.986", %"struct.std::__1::pair.986"* %5, i64 0, i32 1
  %84 = bitcast %"class.spvtools::utils::BitVector"* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #10, !alias.scope !19
  %85 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %86 = bitcast i64** %85 to i64*
  %87 = load i64, i64* %86, align 8, !noalias !19
  %88 = bitcast %"class.spvtools::utils::BitVector"* %81 to i64*
  %89 = load i64, i64* %88, align 8, !noalias !19
  %90 = sub i64 %87, %89
  %91 = ashr exact i64 %90, 3
  %92 = icmp eq i64 %90, 0
  br i1 %92, label %115, label %93

93:                                               ; preds = %79
  %94 = icmp ugt i64 %91, 2305843009213693951
  br i1 %94, label %95, label %97

95:                                               ; preds = %93
  %96 = bitcast %"class.spvtools::utils::BitVector"* %83 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %96) #12
  unreachable

97:                                               ; preds = %93
  %98 = tail call i8* @_Znwm(i64 %90) #11
  %99 = bitcast i8* %98 to i64*
  %100 = getelementptr inbounds %"struct.std::__1::pair.986", %"struct.std::__1::pair.986"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %101 = bitcast i64** %100 to i8**
  store i8* %98, i8** %101, align 8, !alias.scope !19
  %102 = bitcast %"class.spvtools::utils::BitVector"* %83 to i8**
  store i8* %98, i8** %102, align 8, !alias.scope !19
  %103 = getelementptr inbounds i64, i64* %99, i64 %91
  %104 = getelementptr inbounds %"struct.std::__1::pair.986", %"struct.std::__1::pair.986"* %5, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %103, i64** %104, align 8, !alias.scope !19
  %105 = bitcast i64** %100 to i64*
  %106 = ptrtoint i8* %98 to i64
  %107 = icmp sgt i64 %90, 0
  br i1 %107, label %108, label %113

108:                                              ; preds = %97
  %109 = lshr exact i64 %90, 3
  %110 = inttoptr i64 %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %98, i8* align 8 %110, i64 %90, i1 false) #10
  %111 = getelementptr inbounds i64, i64* %99, i64 %109
  %112 = ptrtoint i64* %111 to i64
  br label %113

113:                                              ; preds = %108, %97
  %114 = phi i64 [ %112, %108 ], [ %106, %97 ]
  store i64 %114, i64* %105, align 8, !alias.scope !19
  br label %115

115:                                              ; preds = %79, %113
  %116 = getelementptr inbounds %"class.std::__1::unordered_map.932", %"class.std::__1::unordered_map.932"* %2, i64 0, i32 0
  %117 = call { %"struct.std::__1::__hash_node_base.937"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIjJNS_4pairIjS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.933"* %116, i32* nonnull dereferenceable(4) %82, %"struct.std::__1::pair.986"* nonnull dereferenceable(32) %5) #10
  %118 = getelementptr inbounds %"struct.std::__1::pair.986", %"struct.std::__1::pair.986"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %119 = load i64*, i64** %118, align 8
  %120 = icmp eq i64* %119, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %115
  %122 = ptrtoint i64* %119 to i64
  %123 = getelementptr inbounds %"struct.std::__1::pair.986", %"struct.std::__1::pair.986"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %124 = bitcast i64** %123 to i64*
  store i64 %122, i64* %124, align 8
  %125 = bitcast i64* %119 to i8*
  call void @_ZdlPv(i8* %125) #11
  br label %126

126:                                              ; preds = %115, %121
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %71) #10
  %127 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %3, i64 0, i32 0, i32 1
  %128 = load %"struct.spvtools::opt::VectorDCE::WorkListItem"*, %"struct.spvtools::opt::VectorDCE::WorkListItem"** %127, align 8
  %129 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %130 = load %"struct.spvtools::opt::VectorDCE::WorkListItem"*, %"struct.spvtools::opt::VectorDCE::WorkListItem"** %129, align 8
  %131 = icmp ult %"struct.spvtools::opt::VectorDCE::WorkListItem"* %128, %130
  br i1 %131, label %132, label %174

132:                                              ; preds = %126
  %133 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %128 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %128, i64 0, i32 1
  %137 = bitcast %"class.spvtools::utils::BitVector"* %136 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 24, i1 false) #10
  %138 = load i64, i64* %86, align 8
  %139 = load i64, i64* %88, align 8
  %140 = sub i64 %138, %139
  %141 = ashr exact i64 %140, 3
  %142 = icmp eq i64 %140, 0
  br i1 %142, label %170, label %143

143:                                              ; preds = %132
  %144 = icmp ugt i64 %141, 2305843009213693951
  br i1 %144, label %145, label %147

145:                                              ; preds = %143
  %146 = bitcast %"class.spvtools::utils::BitVector"* %136 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %146) #12
  unreachable

147:                                              ; preds = %143
  %148 = call i8* @_Znwm(i64 %140) #11
  %149 = bitcast i8* %148 to i64*
  %150 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %128, i64 0, i32 1, i32 0, i32 0, i32 1
  %151 = bitcast i64** %150 to i8**
  store i8* %148, i8** %151, align 8
  %152 = bitcast %"class.spvtools::utils::BitVector"* %136 to i8**
  store i8* %148, i8** %152, align 8
  %153 = getelementptr inbounds i64, i64* %149, i64 %141
  %154 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %128, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %153, i64** %154, align 8
  %155 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %81, i64 0, i32 0, i32 0, i32 0
  %156 = load i64*, i64** %155, align 8
  %157 = load i64, i64* %86, align 8
  %158 = bitcast i64** %150 to i64*
  %159 = ptrtoint i8* %148 to i64
  %160 = ptrtoint i64* %156 to i64
  %161 = sub i64 %157, %160
  %162 = icmp sgt i64 %161, 0
  br i1 %162, label %163, label %168

163:                                              ; preds = %147
  %164 = lshr exact i64 %161, 3
  %165 = bitcast i64* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %148, i8* align 8 %165, i64 %161, i1 false) #10
  %166 = getelementptr inbounds i64, i64* %149, i64 %164
  %167 = ptrtoint i64* %166 to i64
  br label %168

168:                                              ; preds = %163, %147
  %169 = phi i64 [ %167, %163 ], [ %159, %147 ]
  store i64 %169, i64* %158, align 8
  br label %170

170:                                              ; preds = %168, %132
  %171 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %128, i64 1
  %172 = ptrtoint %"struct.spvtools::opt::VectorDCE::WorkListItem"* %171 to i64
  %173 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"** %127 to i64*
  store i64 %172, i64* %173, align 8
  br label %232

174:                                              ; preds = %126
  call void @_ZNSt3__16vectorIN8spvtools3opt9VectorDCE12WorkListItemENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJRS4_EEEvDpOT_(%"class.std::__1::vector.956"* %3, %"struct.spvtools::opt::VectorDCE::WorkListItem"* dereferenceable(32) %1) #10
  br label %232

175:                                              ; preds = %61
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %46, i64 3
  %177 = bitcast %"struct.std::__1::__hash_node_base.937"* %176 to %"class.spvtools::utils::BitVector"*
  %178 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1
  %179 = tail call zeroext i1 @_ZN8spvtools5utils9BitVector2OrERKS1_(%"class.spvtools::utils::BitVector"* %177, %"class.spvtools::utils::BitVector"* dereferenceable(24) %178) #10
  br i1 %179, label %180, label %232

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %3, i64 0, i32 0, i32 1
  %182 = load %"struct.spvtools::opt::VectorDCE::WorkListItem"*, %"struct.spvtools::opt::VectorDCE::WorkListItem"** %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %184 = load %"struct.spvtools::opt::VectorDCE::WorkListItem"*, %"struct.spvtools::opt::VectorDCE::WorkListItem"** %183, align 8
  %185 = icmp ult %"struct.spvtools::opt::VectorDCE::WorkListItem"* %182, %184
  br i1 %185, label %186, label %231

186:                                              ; preds = %180
  %187 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %182 to i64*
  store i64 %188, i64* %189, align 8
  %190 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %182, i64 0, i32 1
  %191 = bitcast %"class.spvtools::utils::BitVector"* %190 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #10
  %192 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %193 = bitcast i64** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %"class.spvtools::utils::BitVector"* %178 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = sub i64 %194, %196
  %198 = ashr exact i64 %197, 3
  %199 = icmp eq i64 %197, 0
  br i1 %199, label %227, label %200

200:                                              ; preds = %186
  %201 = icmp ugt i64 %198, 2305843009213693951
  br i1 %201, label %202, label %204

202:                                              ; preds = %200
  %203 = bitcast %"class.spvtools::utils::BitVector"* %190 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %203) #12
  unreachable

204:                                              ; preds = %200
  %205 = tail call i8* @_Znwm(i64 %197) #11
  %206 = bitcast i8* %205 to i64*
  %207 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %182, i64 0, i32 1, i32 0, i32 0, i32 1
  %208 = bitcast i64** %207 to i8**
  store i8* %205, i8** %208, align 8
  %209 = bitcast %"class.spvtools::utils::BitVector"* %190 to i8**
  store i8* %205, i8** %209, align 8
  %210 = getelementptr inbounds i64, i64* %206, i64 %198
  %211 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %182, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %210, i64** %211, align 8
  %212 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %178, i64 0, i32 0, i32 0, i32 0
  %213 = load i64*, i64** %212, align 8
  %214 = load i64, i64* %193, align 8
  %215 = bitcast i64** %207 to i64*
  %216 = ptrtoint i8* %205 to i64
  %217 = ptrtoint i64* %213 to i64
  %218 = sub i64 %214, %217
  %219 = icmp sgt i64 %218, 0
  br i1 %219, label %220, label %225

220:                                              ; preds = %204
  %221 = lshr exact i64 %218, 3
  %222 = bitcast i64* %213 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %205, i8* align 8 %222, i64 %218, i1 false) #10
  %223 = getelementptr inbounds i64, i64* %206, i64 %221
  %224 = ptrtoint i64* %223 to i64
  br label %225

225:                                              ; preds = %220, %204
  %226 = phi i64 [ %224, %220 ], [ %216, %204 ]
  store i64 %226, i64* %215, align 8
  br label %227

227:                                              ; preds = %225, %186
  %228 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %182, i64 1
  %229 = ptrtoint %"struct.spvtools::opt::VectorDCE::WorkListItem"* %228 to i64
  %230 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"** %181 to i64*
  store i64 %229, i64* %230, align 8
  br label %232

231:                                              ; preds = %180
  tail call void @_ZNSt3__16vectorIN8spvtools3opt9VectorDCE12WorkListItemENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJRS4_EEEvDpOT_(%"class.std::__1::vector.956"* %3, %"struct.spvtools::opt::VectorDCE::WorkListItem"* dereferenceable(32) %1) #10
  br label %232

232:                                              ; preds = %231, %227, %174, %170, %175
  ret void
}

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt9VectorDCE15HasScalarResultEPKNS0_11InstructionE(%"class.spvtools::opt::VectorDCE"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = trunc i32 %6 to i16
  %8 = icmp slt i16 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 5
  %11 = tail call i8* @_Znwm(i64 240) #11
  %12 = bitcast i8* %11 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %12, %"class.std::__1::function"* dereferenceable(32) %10, %"class.spvtools::opt::IRContext"* %4) #10
  %13 = ptrtoint i8* %11 to i64
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 20
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.480"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %9
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %16) #10
  %20 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %16 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %19, %9
  %22 = load i32, i32* %5, align 8
  %23 = or i32 %22, 32768
  store i32 %23, i32* %5, align 8
  br label %24

24:                                               ; preds = %2, %21
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 20, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %28 = load i8, i8* %27, align 4, !range !12
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %45, label %30

30:                                               ; preds = %24
  %31 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %30
  %34 = load i8, i8* %27, align 4, !range !12
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #10
  br label %38

38:                                               ; preds = %33, %36
  %39 = phi i32 [ %37, %36 ], [ 0, %33 ]
  %40 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %26, i32 %39) #10
  %41 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %40, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = add i32 %42, -1
  %44 = icmp ult i32 %43, 3
  br label %45

45:                                               ; preds = %24, %30, %38
  %46 = phi i1 [ %44, %38 ], [ false, %30 ], [ false, %24 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt9VectorDCE15HasVectorResultEPKNS0_11InstructionE(%"class.spvtools::opt::VectorDCE"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = trunc i32 %6 to i16
  %8 = icmp slt i16 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 5
  %11 = tail call i8* @_Znwm(i64 240) #11
  %12 = bitcast i8* %11 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %12, %"class.std::__1::function"* dereferenceable(32) %10, %"class.spvtools::opt::IRContext"* %4) #10
  %13 = ptrtoint i8* %11 to i64
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 20
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.480"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %9
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %16) #10
  %20 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %16 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %19, %9
  %22 = load i32, i32* %5, align 8
  %23 = or i32 %22, 32768
  store i32 %23, i32* %5, align 8
  br label %24

24:                                               ; preds = %2, %21
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 20, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %28 = load i8, i8* %27, align 4, !range !12
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %44, label %30

30:                                               ; preds = %24
  %31 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %30
  %34 = load i8, i8* %27, align 4, !range !12
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #10
  br label %38

38:                                               ; preds = %33, %36
  %39 = phi i32 [ %37, %36 ], [ 0, %33 ]
  %40 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %26, i32 %39) #10
  %41 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %40, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 4
  br label %44

44:                                               ; preds = %24, %30, %38
  %45 = phi i1 [ %43, %38 ], [ false, %30 ], [ false, %24 ]
  ret i1 %45
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt9VectorDCE24RewriteInsertInstructionEPNS0_11InstructionERKNS_5utils9BitVectorEPNSt3__16vectorIS3_NS8_9allocatorIS3_EEEE(%"class.spvtools::opt::VectorDCE"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::utils::BitVector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.976"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.spvtools::utils::BitVector", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %9 = bitcast %"struct.spvtools::opt::Operand"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %16 = load i8, i8* %15, align 4, !range !12
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %19 = load i8, i8* %18, align 1, !range !12
  %20 = icmp eq i8 %19, 0
  %21 = select i1 %20, i32 1, i32 2
  %22 = xor i1 %20, true
  %23 = zext i1 %22 to i32
  %24 = select i1 %17, i32 %23, i32 %21
  %25 = trunc i64 %14 to i32
  %26 = sub i32 %25, %24
  %27 = icmp eq i32 %26, 2
  br i1 %27, label %28, label %55

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 2
  %30 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %29, align 8
  br i1 %20, label %34, label %31

31:                                               ; preds = %28
  %32 = zext i8 %16 to i32
  %33 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %32) #10
  br label %34

34:                                               ; preds = %28, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %28 ]
  tail call void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEj(%"class.spvtools::opt::IRContext"* %30, i32 %35) #10
  %36 = load i8, i8* %15, align 4, !range !12
  %37 = icmp eq i8 %36, 0
  %38 = load i8, i8* %18, align 1, !range !12
  %39 = icmp eq i8 %38, 0
  %40 = select i1 %39, i32 1, i32 2
  %41 = xor i1 %39, true
  %42 = zext i1 %41 to i32
  %43 = select i1 %37, i32 %42, i32 %40
  %44 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %43) #10
  %45 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %29, align 8
  %46 = load i8, i8* %18, align 1, !range !12
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %34
  %49 = load i8, i8* %15, align 4, !range !12
  %50 = zext i8 %49 to i32
  %51 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %50) #10
  br label %52

52:                                               ; preds = %34, %48
  %53 = phi i32 [ %51, %48 ], [ 0, %34 ]
  %54 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %45, i32 %53, i32 %44) #10
  br label %230

55:                                               ; preds = %4
  %56 = add nuw nsw i32 %24, 2
  %57 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %56) #10
  %58 = lshr i32 %57, 6
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %2, i64 0, i32 0, i32 0, i32 1
  %61 = bitcast i64** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.spvtools::utils::BitVector"* %2 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = ashr exact i64 %65, 3
  %67 = icmp ugt i64 %66, %59
  br i1 %67, label %68, label %77

68:                                               ; preds = %55
  %69 = inttoptr i64 %64 to i64*
  %70 = and i32 %57, 63
  %71 = getelementptr inbounds i64, i64* %69, i64 %59
  %72 = load i64, i64* %71, align 8
  %73 = zext i32 %70 to i64
  %74 = shl i64 1, %73
  %75 = and i64 %72, %74
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %108

77:                                               ; preds = %68, %55
  tail call void @_ZN8spvtools3opt9VectorDCE24MarkDebugValueUsesAsDeadEPNS0_11InstructionEPNSt3__16vectorIS3_NS4_9allocatorIS3_EEEE(%"class.spvtools::opt::VectorDCE"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::vector.976"* %3)
  %78 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 2
  %79 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %78, align 8
  %80 = load i8, i8* %18, align 1, !range !12
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %77
  %83 = load i8, i8* %15, align 4, !range !12
  %84 = zext i8 %83 to i32
  %85 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %84) #10
  br label %86

86:                                               ; preds = %77, %82
  %87 = phi i32 [ %85, %82 ], [ 0, %77 ]
  tail call void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEj(%"class.spvtools::opt::IRContext"* %79, i32 %87) #10
  %88 = load i8, i8* %15, align 4, !range !12
  %89 = icmp eq i8 %88, 0
  %90 = load i8, i8* %18, align 1, !range !12
  %91 = icmp eq i8 %90, 0
  %92 = select i1 %91, i32 1, i32 2
  %93 = xor i1 %91, true
  %94 = zext i1 %93 to i32
  %95 = select i1 %89, i32 %94, i32 %92
  %96 = add nuw nsw i32 %95, 1
  %97 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %96) #10
  %98 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %78, align 8
  %99 = load i8, i8* %18, align 1, !range !12
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %86
  %102 = load i8, i8* %15, align 4, !range !12
  %103 = zext i8 %102 to i32
  %104 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %103) #10
  br label %105

105:                                              ; preds = %86, %101
  %106 = phi i32 [ %104, %101 ], [ 0, %86 ]
  %107 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %98, i32 %106, i32 %97) #10
  br label %230

108:                                              ; preds = %68
  %109 = bitcast %"class.spvtools::utils::BitVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #10
  %110 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %5, i64 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %5, i64 0, i32 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 24, i1 false) #10
  %113 = icmp eq i64 %65, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %108
  %115 = bitcast i64** %111 to i64*
  br label %137

116:                                              ; preds = %108
  %117 = icmp ugt i64 %66, 2305843009213693951
  br i1 %117, label %118, label %120

118:                                              ; preds = %116
  %119 = bitcast %"class.spvtools::utils::BitVector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %119) #12
  unreachable

120:                                              ; preds = %116
  %121 = tail call i8* @_Znwm(i64 %65) #11
  %122 = bitcast i8* %121 to i64*
  %123 = bitcast i64** %111 to i8**
  store i8* %121, i8** %123, align 8
  %124 = bitcast %"class.spvtools::utils::BitVector"* %5 to i8**
  store i8* %121, i8** %124, align 8
  %125 = getelementptr inbounds i64, i64* %122, i64 %66
  store i64* %125, i64** %112, align 8
  %126 = bitcast i64** %111 to i64*
  %127 = ptrtoint i8* %121 to i64
  %128 = icmp sgt i64 %65, 0
  br i1 %128, label %129, label %134

129:                                              ; preds = %120
  %130 = lshr exact i64 %65, 3
  %131 = inttoptr i64 %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %121, i8* align 8 %131, i64 %65, i1 false) #10
  %132 = getelementptr inbounds i64, i64* %122, i64 %130
  %133 = ptrtoint i64* %132 to i64
  br label %134

134:                                              ; preds = %129, %120
  %135 = phi i64 [ %133, %129 ], [ %127, %120 ]
  store i64 %135, i64* %126, align 8
  %136 = inttoptr i64 %135 to i64*
  br label %137

137:                                              ; preds = %114, %134
  %138 = phi i64* [ %115, %114 ], [ %126, %134 ]
  %139 = phi i8* [ null, %114 ], [ %121, %134 ]
  %140 = phi i64* [ null, %114 ], [ %122, %134 ]
  %141 = phi i64* [ null, %114 ], [ %136, %134 ]
  %142 = phi i64 [ 0, %114 ], [ %127, %134 ]
  %143 = phi i64 [ 0, %114 ], [ %135, %134 ]
  %144 = sub i64 %143, %142
  %145 = ashr exact i64 %144, 3
  %146 = icmp ugt i64 %145, %59
  br i1 %146, label %147, label %159

147:                                              ; preds = %137
  %148 = inttoptr i64 %142 to i64*
  %149 = getelementptr inbounds i64, i64* %148, i64 %59
  %150 = load i64, i64* %149, align 8
  %151 = and i64 %150, %74
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %159, label %153

153:                                              ; preds = %147
  %154 = xor i64 %74, -1
  %155 = and i64 %150, %154
  store i64 %155, i64* %149, align 8
  %156 = load i64*, i64** %110, align 8
  %157 = bitcast i64* %156 to i8*
  %158 = load i64*, i64** %111, align 8
  br label %159

159:                                              ; preds = %137, %147, %153
  %160 = phi i8* [ %139, %137 ], [ %139, %147 ], [ %157, %153 ]
  %161 = phi i64* [ %140, %137 ], [ %140, %147 ], [ %156, %153 ]
  %162 = phi i64* [ %141, %137 ], [ %141, %147 ], [ %158, %153 ]
  %163 = icmp eq i64* %161, %162
  br i1 %163, label %171, label %166

164:                                              ; preds = %166
  %165 = icmp eq i64* %170, %162
  br i1 %165, label %171, label %166

166:                                              ; preds = %159, %164
  %167 = phi i64* [ %170, %164 ], [ %161, %159 ]
  %168 = load i64, i64* %167, align 8
  %169 = icmp eq i64 %168, 0
  %170 = getelementptr inbounds i64, i64* %167, i64 1
  br i1 %169, label %164, label %222

171:                                              ; preds = %164, %159
  %172 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 2
  %173 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %172, align 8
  tail call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %173, %"class.spvtools::opt::Instruction"* %1) #10
  %174 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0
  %175 = load i8, i8* %15, align 4, !range !12
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %179, label %177

177:                                              ; preds = %171
  %178 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #10
  br label %179

179:                                              ; preds = %171, %177
  %180 = phi i32 [ %178, %177 ], [ 0, %171 ]
  %181 = tail call i32 @_ZN8spvtools3opt7MemPass10Type2UndefEj(%"class.spvtools::opt::MemPass"* %174, i32 %180) #10
  %182 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %182) #10
  %183 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %183, align 8
  %184 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %185 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %186 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %187 = bitcast i32** %185 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %186, %"struct.std::__1::aligned_storage<4, 4>::type"** %187, align 8
  %188 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %189 = bitcast %"class.std::__1::unique_ptr.0"* %188 to i64*
  store i64 0, i64* %189, align 8
  %190 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %186 to i32*
  store i64 1, i64* %184, align 8
  store i32 %181, i32* %190, align 8
  %191 = load i8, i8* %15, align 4, !range !12
  %192 = icmp eq i8 %191, 0
  %193 = load i8, i8* %18, align 1, !range !12
  %194 = icmp eq i8 %193, 0
  %195 = select i1 %194, i64 1, i64 2
  %196 = xor i1 %194, true
  %197 = zext i1 %196 to i64
  %198 = select i1 %192, i64 %197, i64 %195
  %199 = add nuw nsw i64 %198, 1
  %200 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %201 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %200, align 8
  %202 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %201, i64 %199, i32 1
  %203 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %202, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %183, align 8
  %204 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %205 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %204, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %204, align 8
  %206 = icmp eq %"class.std::__1::vector.3"* %205, null
  br i1 %206, label %218, label %207

207:                                              ; preds = %179
  %208 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %205, i64 0, i32 0, i32 0
  %209 = load i32*, i32** %208, align 8
  %210 = icmp eq i32* %209, null
  br i1 %210, label %216, label %211

211:                                              ; preds = %207
  %212 = ptrtoint i32* %209 to i64
  %213 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %205, i64 0, i32 0, i32 1
  %214 = bitcast i32** %213 to i64*
  store i64 %212, i64* %214, align 8
  %215 = bitcast i32* %209 to i8*
  call void @_ZdlPv(i8* %215) #11
  br label %216

216:                                              ; preds = %211, %207
  %217 = bitcast %"class.std::__1::vector.3"* %205 to i8*
  call void @_ZdlPv(i8* %217) #11
  br label %218

218:                                              ; preds = %179, %216
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %182) #10
  %219 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %172, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %219, %"class.spvtools::opt::Instruction"* %1) #10
  %220 = load i64*, i64** %110, align 8
  %221 = bitcast i64* %220 to i8*
  br label %222

222:                                              ; preds = %166, %218
  %223 = phi i8* [ %221, %218 ], [ %160, %166 ]
  %224 = phi i64* [ %220, %218 ], [ %161, %166 ]
  %225 = phi i1 [ true, %218 ], [ false, %166 ]
  %226 = icmp eq i64* %224, null
  br i1 %226, label %229, label %227

227:                                              ; preds = %222
  %228 = ptrtoint i64* %224 to i64
  store i64 %228, i64* %138, align 8
  call void @_ZdlPv(i8* %223) #11
  br label %229

229:                                              ; preds = %222, %227
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #10
  br label %230

230:                                              ; preds = %105, %229, %52
  %231 = phi i1 [ true, %52 ], [ %225, %229 ], [ true, %105 ]
  ret i1 %231
}

declare void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt9VectorDCE24MarkDebugValueUsesAsDeadEPNS0_11InstructionEPNSt3__16vectorIS3_NS4_9allocatorIS3_EEEE(%"class.spvtools::opt::VectorDCE"* nocapture readonly, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.976"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.976"*, align 8
  %5 = alloca %"class.std::__1::function.963", align 8
  store %"class.std::__1::vector.976"* %2, %"class.std::__1::vector.976"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %36

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i8* @_Znwm(i64 104) #11
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::DefUseManager"*
  %17 = getelementptr inbounds i8, i8* %15, i64 32
  %18 = bitcast i8* %17 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %15, i64 48
  %20 = getelementptr inbounds i8, i8* %15, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #10
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 64
  %23 = getelementptr inbounds i8, i8* %15, i64 96
  %24 = bitcast i8* %23 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %24, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %16, %"class.spvtools::opt::Module"* %14) #10
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6
  %26 = ptrtoint i8* %15 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %25, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.62"* %25 to i64*
  store i64 %26, i64* %29, align 8
  %30 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %12
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %25 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %32, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %28) #10
  br label %33

33:                                               ; preds = %31, %12
  %34 = load i32, i32* %8, align 8
  %35 = or i32 %34, 1
  store i32 %35, i32* %8, align 8
  br label %36

36:                                               ; preds = %3, %33
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %37, align 8
  %39 = bitcast %"class.std::__1::function.963"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #10
  %40 = ptrtoint %"class.std::__1::vector.976"** %4 to i64
  %41 = getelementptr inbounds %"class.std::__1::function.963", %"class.std::__1::function.963"* %5, i64 0, i32 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.std::__1::function.963", %"class.std::__1::function.963"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9VectorDCE24MarkDebugValueUsesAsDeadES5_PNS_6vectorIS5_NS_9allocatorIS5_EEEEE3$_3S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %41, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE24MarkDebugValueUsesAsDeadEPNS5_11InstructionEPNS_6vectorIS8_NS_9allocatorIS8_EEEEE3$_3FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %42, align 8
  %43 = bitcast %"class.std::__1::function.963"* %5 to i64*
  store i64 %40, i64* %43, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEPKNS0_11InstructionERKNSt3__18functionIFvPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %38, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.963"* nonnull dereferenceable(32) %5) #10
  %44 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %42, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %44, i64 0, i32 1
  %46 = load void (i8*)*, void (i8*)** %45, align 8
  %47 = icmp eq void (i8*)* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.std::__1::function.963", %"class.std::__1::function.963"* %5, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void %46(i8* %50) #10
  br label %51

51:                                               ; preds = %36, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #10
  ret void
}

declare void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare i32 @_ZN8spvtools3opt7MemPass10Type2UndefEj(%"class.spvtools::opt::MemPass"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

declare void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEPKNS0_11InstructionERKNSt3__18functionIFvPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.963"* dereferenceable(32)) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools5utils9BitVector2OrERKS1_(%"class.spvtools::utils::BitVector"*, %"class.spvtools::utils::BitVector"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9VectorDCED2Ev(%"class.spvtools::opt::VectorDCE"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt9VectorDCEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i64* %4 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast i64** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i64* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"* %12) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9VectorDCED0Ev(%"class.spvtools::opt::VectorDCE"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt9VectorDCEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i64* %4 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast i64** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i64* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"* %12) #10
  %13 = bitcast %"class.spvtools::opt::VectorDCE"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt9VectorDCE4nameEv(%"class.spvtools::opt::VectorDCE"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt9VectorDCE20GetPreservedAnalysesEv(%"class.spvtools::opt::VectorDCE"*) unnamed_addr #0 comdat align 2 {
  ret i32 49399
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #10
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.900"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i64* %2 to i64
  %5 = ptrtoint i64* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.900", %"class.std::__1::vector.900"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i64** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.900"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i64*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.900", %"class.std::__1::vector.900"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i64** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i64, i64* %1, i64 %22
  %25 = select i1 %23, i64* %24, i64* %2
  %26 = ptrtoint i64* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i64* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #10
  %42 = inttoptr i64 %35 to i64*
  %43 = getelementptr inbounds i64, i64* %42, i64 %39
  %44 = ptrtoint i64* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i64, i64* %16, i64 %28
  store i64* %48, i64** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.900", %"class.std::__1::vector.900"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i64** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #11
  %55 = bitcast %"class.std::__1::vector.900"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.900"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #12
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.900"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #12
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #11
  %75 = bitcast i8* %74 to i64*
  %76 = getelementptr inbounds %"class.std::__1::vector.900", %"class.std::__1::vector.900"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i64** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.900"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i64, i64* %75, i64 %72
  store i64* %79, i64** %8, align 8
  %80 = bitcast i64** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast i64* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #10
  %86 = getelementptr inbounds i64, i64* %75, i64 %84
  %87 = ptrtoint i64* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.900"*, i64, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i64* %2 to i8*
  %5 = bitcast i64* %2 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.900", %"class.std::__1::vector.900"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast i64** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.900", %"class.std::__1::vector.900"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i64** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %130, label %15

15:                                               ; preds = %3
  %16 = inttoptr i64 %11 to i64*
  %17 = inttoptr i64 %11 to i8*
  %18 = getelementptr inbounds i64, i64* %16, i64 %1
  %19 = icmp eq i64 %1, 0
  br i1 %19, label %128, label %20

20:                                               ; preds = %15
  %21 = shl nsw i64 %1, 3
  %22 = add i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 4
  br i1 %25, label %26, label %47

26:                                               ; preds = %105, %47, %20
  %27 = phi i64* [ %16, %47 ], [ %16, %20 ], [ %59, %105 ]
  %28 = ptrtoint i64* %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr i64, i64* %16, i64 %29
  %31 = ptrtoint i64* %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %26, %37
  %38 = phi i64* [ %41, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %42, %37 ], [ %35, %26 ]
  %40 = load i64, i64* %2, align 8
  store i64 %40, i64* %38, align 8
  %41 = getelementptr inbounds i64, i64* %38, i64 1
  %42 = add i64 %39, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %37, !llvm.loop !22

44:                                               ; preds = %37, %26
  %45 = phi i64* [ %27, %26 ], [ %41, %37 ]
  %46 = icmp ult i64 %32, 56
  br i1 %46, label %107, label %109

47:                                               ; preds = %20
  %48 = shl nsw i64 %1, 3
  %49 = add i64 %48, -8
  %50 = lshr exact i64 %49, 3
  %51 = add nuw nsw i64 %50, 1
  %52 = getelementptr i64, i64* %16, i64 %51
  %53 = getelementptr i8, i8* %5, i64 1
  %54 = icmp ugt i8* %53, %17
  %55 = icmp ugt i64* %52, %2
  %56 = and i1 %54, %55
  br i1 %56, label %26, label %57

57:                                               ; preds = %47
  %58 = and i64 %24, 4611686018427387900
  %59 = getelementptr i64, i64* %16, i64 %58
  %60 = add nsw i64 %58, -4
  %61 = lshr exact i64 %60, 2
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %92, label %65

65:                                               ; preds = %57
  %66 = sub nuw nsw i64 %62, %63
  %67 = load i64, i64* %2, align 8, !alias.scope !24
  %68 = insertelement <2 x i64> undef, i64 %67, i32 0
  %69 = shufflevector <2 x i64> %68, <2 x i64> undef, <2 x i32> zeroinitializer
  %70 = insertelement <2 x i64> undef, i64 %67, i32 0
  %71 = shufflevector <2 x i64> %70, <2 x i64> undef, <2 x i32> zeroinitializer
  %72 = load i64, i64* %2, align 8, !alias.scope !24
  %73 = insertelement <2 x i64> undef, i64 %72, i32 0
  %74 = shufflevector <2 x i64> %73, <2 x i64> undef, <2 x i32> zeroinitializer
  %75 = insertelement <2 x i64> undef, i64 %72, i32 0
  %76 = shufflevector <2 x i64> %75, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %77

77:                                               ; preds = %77, %65
  %78 = phi i64 [ 0, %65 ], [ %89, %77 ]
  %79 = phi i64 [ %66, %65 ], [ %90, %77 ]
  %80 = getelementptr i64, i64* %16, i64 %78
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %81, align 8, !alias.scope !27, !noalias !24
  %82 = getelementptr i64, i64* %80, i64 2
  %83 = bitcast i64* %82 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %83, align 8, !alias.scope !27, !noalias !24
  %84 = or i64 %78, 4
  %85 = getelementptr i64, i64* %16, i64 %84
  %86 = bitcast i64* %85 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %86, align 8, !alias.scope !27, !noalias !24
  %87 = getelementptr i64, i64* %85, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %88, align 8, !alias.scope !27, !noalias !24
  %89 = add i64 %78, 8
  %90 = add i64 %79, -2
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %77, !llvm.loop !29

92:                                               ; preds = %77, %57
  %93 = phi i64 [ 0, %57 ], [ %89, %77 ]
  %94 = icmp eq i64 %63, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = getelementptr i64, i64* %16, i64 %93
  %97 = load i64, i64* %2, align 8, !alias.scope !24
  %98 = insertelement <2 x i64> undef, i64 %97, i32 0
  %99 = shufflevector <2 x i64> %98, <2 x i64> undef, <2 x i32> zeroinitializer
  %100 = insertelement <2 x i64> undef, i64 %97, i32 0
  %101 = shufflevector <2 x i64> %100, <2 x i64> undef, <2 x i32> zeroinitializer
  %102 = bitcast i64* %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %102, align 8, !alias.scope !27, !noalias !24
  %103 = getelementptr i64, i64* %96, i64 2
  %104 = bitcast i64* %103 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %104, align 8, !alias.scope !27, !noalias !24
  br label %105

105:                                              ; preds = %92, %95
  %106 = icmp eq i64 %24, %58
  br i1 %106, label %107, label %26

107:                                              ; preds = %44, %109, %105
  %108 = ptrtoint i64* %18 to i64
  br label %128

109:                                              ; preds = %44, %109
  %110 = phi i64* [ %126, %109 ], [ %45, %44 ]
  %111 = load i64, i64* %2, align 8
  store i64 %111, i64* %110, align 8
  %112 = getelementptr inbounds i64, i64* %110, i64 1
  %113 = load i64, i64* %2, align 8
  store i64 %113, i64* %112, align 8
  %114 = getelementptr inbounds i64, i64* %110, i64 2
  %115 = load i64, i64* %2, align 8
  store i64 %115, i64* %114, align 8
  %116 = getelementptr inbounds i64, i64* %110, i64 3
  %117 = load i64, i64* %2, align 8
  store i64 %117, i64* %116, align 8
  %118 = getelementptr inbounds i64, i64* %110, i64 4
  %119 = load i64, i64* %2, align 8
  store i64 %119, i64* %118, align 8
  %120 = getelementptr inbounds i64, i64* %110, i64 5
  %121 = load i64, i64* %2, align 8
  store i64 %121, i64* %120, align 8
  %122 = getelementptr inbounds i64, i64* %110, i64 6
  %123 = load i64, i64* %2, align 8
  store i64 %123, i64* %122, align 8
  %124 = getelementptr inbounds i64, i64* %110, i64 7
  %125 = load i64, i64* %2, align 8
  store i64 %125, i64* %124, align 8
  %126 = getelementptr inbounds i64, i64* %110, i64 8
  %127 = icmp eq i64* %126, %18
  br i1 %127, label %107, label %109, !llvm.loop !31

128:                                              ; preds = %15, %107
  %129 = phi i64 [ %108, %107 ], [ %11, %15 ]
  store i64 %129, i64* %10, align 8
  br label %292

130:                                              ; preds = %3
  %131 = bitcast %"class.std::__1::vector.900"* %0 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %11, %132
  %134 = ashr exact i64 %133, 3
  %135 = add i64 %134, %1
  %136 = icmp ugt i64 %135, 2305843009213693951
  br i1 %136, label %137, label %139

137:                                              ; preds = %130
  %138 = bitcast %"class.std::__1::vector.900"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %138) #12
  unreachable

139:                                              ; preds = %130
  %140 = sub i64 %8, %132
  %141 = ashr exact i64 %140, 3
  %142 = icmp ult i64 %141, 1152921504606846975
  br i1 %142, label %143, label %151

143:                                              ; preds = %139
  %144 = ashr exact i64 %140, 2
  %145 = icmp ult i64 %144, %135
  %146 = select i1 %145, i64 %135, i64 %144
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %143
  %149 = icmp ugt i64 %146, 2305843009213693951
  br i1 %149, label %150, label %151

150:                                              ; preds = %148
  tail call void @abort() #12
  unreachable

151:                                              ; preds = %139, %148
  %152 = phi i64 [ %146, %148 ], [ 2305843009213693951, %139 ]
  %153 = shl i64 %152, 3
  %154 = tail call i8* @_Znwm(i64 %153) #11
  %155 = bitcast i8* %154 to i64*
  br label %156

156:                                              ; preds = %143, %151
  %157 = phi i64 [ %152, %151 ], [ 0, %143 ]
  %158 = phi i64* [ %155, %151 ], [ null, %143 ]
  %159 = getelementptr inbounds i64, i64* %158, i64 %134
  %160 = getelementptr inbounds i64, i64* %158, i64 %157
  %161 = getelementptr inbounds i64, i64* %159, i64 %1
  %162 = shl nsw i64 %1, 3
  %163 = add i64 %162, -8
  %164 = lshr exact i64 %163, 3
  %165 = add nuw nsw i64 %164, 1
  %166 = icmp ult i64 %165, 4
  br i1 %166, label %229, label %167

167:                                              ; preds = %156
  %168 = bitcast i64* %159 to i8*
  %169 = shl nsw i64 %1, 3
  %170 = add i64 %169, -8
  %171 = lshr exact i64 %170, 3
  %172 = add nsw i64 %134, %171
  %173 = add nsw i64 %172, 1
  %174 = getelementptr i64, i64* %158, i64 %173
  %175 = getelementptr i8, i8* %4, i64 1
  %176 = icmp ugt i8* %175, %168
  %177 = icmp ugt i64* %174, %2
  %178 = and i1 %176, %177
  br i1 %178, label %229, label %179

179:                                              ; preds = %167
  %180 = and i64 %165, 4611686018427387900
  %181 = getelementptr i64, i64* %159, i64 %180
  %182 = add nsw i64 %180, -4
  %183 = lshr exact i64 %182, 2
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %182, 0
  br i1 %186, label %214, label %187

187:                                              ; preds = %179
  %188 = sub nuw nsw i64 %184, %185
  %189 = load i64, i64* %2, align 8, !alias.scope !32
  %190 = insertelement <2 x i64> undef, i64 %189, i32 0
  %191 = shufflevector <2 x i64> %190, <2 x i64> undef, <2 x i32> zeroinitializer
  %192 = insertelement <2 x i64> undef, i64 %189, i32 0
  %193 = shufflevector <2 x i64> %192, <2 x i64> undef, <2 x i32> zeroinitializer
  %194 = load i64, i64* %2, align 8, !alias.scope !32
  %195 = insertelement <2 x i64> undef, i64 %194, i32 0
  %196 = shufflevector <2 x i64> %195, <2 x i64> undef, <2 x i32> zeroinitializer
  %197 = insertelement <2 x i64> undef, i64 %194, i32 0
  %198 = shufflevector <2 x i64> %197, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %199

199:                                              ; preds = %199, %187
  %200 = phi i64 [ 0, %187 ], [ %211, %199 ]
  %201 = phi i64 [ %188, %187 ], [ %212, %199 ]
  %202 = getelementptr i64, i64* %159, i64 %200
  %203 = bitcast i64* %202 to <2 x i64>*
  store <2 x i64> %191, <2 x i64>* %203, align 8, !alias.scope !35, !noalias !32
  %204 = getelementptr i64, i64* %202, i64 2
  %205 = bitcast i64* %204 to <2 x i64>*
  store <2 x i64> %193, <2 x i64>* %205, align 8, !alias.scope !35, !noalias !32
  %206 = or i64 %200, 4
  %207 = getelementptr i64, i64* %159, i64 %206
  %208 = bitcast i64* %207 to <2 x i64>*
  store <2 x i64> %196, <2 x i64>* %208, align 8, !alias.scope !35, !noalias !32
  %209 = getelementptr i64, i64* %207, i64 2
  %210 = bitcast i64* %209 to <2 x i64>*
  store <2 x i64> %198, <2 x i64>* %210, align 8, !alias.scope !35, !noalias !32
  %211 = add i64 %200, 8
  %212 = add i64 %201, -2
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %199, !llvm.loop !37

214:                                              ; preds = %199, %179
  %215 = phi i64 [ 0, %179 ], [ %211, %199 ]
  %216 = icmp eq i64 %185, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %214
  %218 = getelementptr i64, i64* %159, i64 %215
  %219 = load i64, i64* %2, align 8, !alias.scope !32
  %220 = insertelement <2 x i64> undef, i64 %219, i32 0
  %221 = shufflevector <2 x i64> %220, <2 x i64> undef, <2 x i32> zeroinitializer
  %222 = insertelement <2 x i64> undef, i64 %219, i32 0
  %223 = shufflevector <2 x i64> %222, <2 x i64> undef, <2 x i32> zeroinitializer
  %224 = bitcast i64* %218 to <2 x i64>*
  store <2 x i64> %221, <2 x i64>* %224, align 8, !alias.scope !35, !noalias !32
  %225 = getelementptr i64, i64* %218, i64 2
  %226 = bitcast i64* %225 to <2 x i64>*
  store <2 x i64> %223, <2 x i64>* %226, align 8, !alias.scope !35, !noalias !32
  br label %227

227:                                              ; preds = %214, %217
  %228 = icmp eq i64 %165, %180
  br i1 %228, label %270, label %229

229:                                              ; preds = %227, %167, %156
  %230 = phi i64* [ %159, %167 ], [ %159, %156 ], [ %181, %227 ]
  %231 = ptrtoint i64* %230 to i64
  %232 = add i64 %134, %1
  %233 = add i64 %232, -1
  %234 = getelementptr i64, i64* %158, i64 %233
  %235 = ptrtoint i64* %234 to i64
  %236 = sub i64 %235, %231
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 7
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %248, label %241

241:                                              ; preds = %229, %241
  %242 = phi i64* [ %245, %241 ], [ %230, %229 ]
  %243 = phi i64 [ %246, %241 ], [ %239, %229 ]
  %244 = load i64, i64* %2, align 8
  store i64 %244, i64* %242, align 8
  %245 = getelementptr inbounds i64, i64* %242, i64 1
  %246 = add i64 %243, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %241, !llvm.loop !38

248:                                              ; preds = %241, %229
  %249 = phi i64* [ %230, %229 ], [ %245, %241 ]
  %250 = icmp ult i64 %236, 56
  br i1 %250, label %270, label %251

251:                                              ; preds = %248, %251
  %252 = phi i64* [ %268, %251 ], [ %249, %248 ]
  %253 = load i64, i64* %2, align 8
  store i64 %253, i64* %252, align 8
  %254 = getelementptr inbounds i64, i64* %252, i64 1
  %255 = load i64, i64* %2, align 8
  store i64 %255, i64* %254, align 8
  %256 = getelementptr inbounds i64, i64* %252, i64 2
  %257 = load i64, i64* %2, align 8
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds i64, i64* %252, i64 3
  %259 = load i64, i64* %2, align 8
  store i64 %259, i64* %258, align 8
  %260 = getelementptr inbounds i64, i64* %252, i64 4
  %261 = load i64, i64* %2, align 8
  store i64 %261, i64* %260, align 8
  %262 = getelementptr inbounds i64, i64* %252, i64 5
  %263 = load i64, i64* %2, align 8
  store i64 %263, i64* %262, align 8
  %264 = getelementptr inbounds i64, i64* %252, i64 6
  %265 = load i64, i64* %2, align 8
  store i64 %265, i64* %264, align 8
  %266 = getelementptr inbounds i64, i64* %252, i64 7
  %267 = load i64, i64* %2, align 8
  store i64 %267, i64* %266, align 8
  %268 = getelementptr inbounds i64, i64* %252, i64 8
  %269 = icmp eq i64* %161, %268
  br i1 %269, label %270, label %251, !llvm.loop !39

270:                                              ; preds = %248, %251, %227
  %271 = ptrtoint i64* %160 to i64
  %272 = ptrtoint i64* %161 to i64
  %273 = getelementptr inbounds %"class.std::__1::vector.900", %"class.std::__1::vector.900"* %0, i64 0, i32 0, i32 0
  %274 = load i64*, i64** %273, align 8
  %275 = load i64, i64* %10, align 8
  %276 = ptrtoint i64* %274 to i64
  %277 = sub i64 %275, %276
  %278 = ashr exact i64 %277, 3
  %279 = sub nsw i64 0, %278
  %280 = getelementptr inbounds i64, i64* %159, i64 %279
  %281 = ptrtoint i64* %280 to i64
  %282 = icmp sgt i64 %277, 0
  br i1 %282, label %283, label %287

283:                                              ; preds = %270
  %284 = bitcast i64* %280 to i8*
  %285 = bitcast i64* %274 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %284, i8* align 8 %285, i64 %277, i1 false) #10
  %286 = load i64*, i64** %273, align 8
  br label %287

287:                                              ; preds = %270, %283
  %288 = phi i64* [ %274, %270 ], [ %286, %283 ]
  store i64 %281, i64* %131, align 8
  store i64 %272, i64* %10, align 8
  store i64 %271, i64* %7, align 8
  %289 = icmp eq i64* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %287
  %291 = bitcast i64* %288 to i8*
  tail call void @_ZdlPv(i8* %291) #11
  br label %292

292:                                              ; preds = %290, %287, %128
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #11
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #10
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #11
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #10
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #11
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #11
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #11
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #11
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #11
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #11
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.969"**
  %4 = load %"class.std::__1::function.969"*, %"class.std::__1::function.969"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.969", %"class.std::__1::function.969"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.969", %"class.std::__1::function.969"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #10
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt7MemPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.254"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.254"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.254"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  %11 = icmp eq %"struct.std::__1::__hash_node_base.254"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.254"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.254"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.915"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.915"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.915"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"struct.std::__1::__hash_node_base.915"* [ %41, %38 ], [ %36, %34 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base.915"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  %43 = icmp eq %"struct.std::__1::__hash_node_base.915"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %34
  %45 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.915"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.915"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %44, %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void %54(i8* %58) #10
  br label %59

59:                                               ; preds = %50, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD0Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9VectorDCE18FindLiveComponentsEPNS3_8FunctionEPNS_13unordered_mapIjNS2_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSF_EEEEEEE3$_0S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1026"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1026"*, %"class.std::__1::__function::__default_alloc_func.1026"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1026", %"class.std::__1::__function::__default_alloc_func.1026"* %4, i64 0, i32 0, i32 1
  %6 = load %"class.spvtools::opt::VectorDCE"*, %"class.spvtools::opt::VectorDCE"** %5, align 8
  %7 = tail call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %1) #10
  %8 = icmp eq i32 %7, 134217727
  br i1 %8, label %9, label %23

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZNK8spvtools3opt9VectorDCE15HasScalarResultEPKNS0_11InstructionE(%"class.spvtools::opt::VectorDCE"* %6, %"class.spvtools::opt::Instruction"* %1) #10
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  %12 = tail call zeroext i1 @_ZNK8spvtools3opt9VectorDCE15HasVectorResultEPKNS0_11InstructionE(%"class.spvtools::opt::VectorDCE"* %6, %"class.spvtools::opt::Instruction"* %1) #10
  br i1 %12, label %13, label %17

13:                                               ; preds = %11, %9
  %14 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %6, i64 0, i32 0, i32 0, i32 2
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %15, %"class.spvtools::opt::Instruction"* %1) #10
  br i1 %16, label %23, label %17

17:                                               ; preds = %13, %11
  %18 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %6, i64 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1026", %"class.std::__1::__function::__default_alloc_func.1026"* %4, i64 0, i32 0, i32 2
  %20 = load %"class.std::__1::unordered_map.932"*, %"class.std::__1::unordered_map.932"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1026", %"class.std::__1::__function::__default_alloc_func.1026"* %4, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::vector.956"*, %"class.std::__1::vector.956"** %21, align 8
  tail call void @_ZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS0_11InstructionERKNS_5utils9BitVectorEPNSt3__113unordered_mapIjS5_NS8_4hashIjEENS8_8equal_toIjEENS8_9allocatorINS8_4pairIKjS5_EEEEEEPNS8_6vectorINS1_12WorkListItemENSE_ISM_EEEE(%"class.spvtools::opt::VectorDCE"* %6, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::utils::BitVector"* dereferenceable(24) %18, %"class.std::__1::unordered_map.932"* %20, %"class.std::__1::vector.956"* %22) #10
  br label %23

23:                                               ; preds = %2, %13, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1030", align 1
  %5 = alloca %"class.std::__1::tuple.1040", align 8
  %6 = alloca %"class.std::__1::tuple.1030", align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext21InitializeCombinatorsEv(%"class.spvtools::opt::IRContext"* %0) #10
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 12
  br i1 %17, label %81, label %18

18:                                               ; preds = %14
  %19 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #10
  store i32 0, i32* %7, align 4
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0
  %21 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  %22 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::tuple.1030", %"class.std::__1::tuple.1030"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #10
  %24 = call { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"* %20, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1030"* nonnull dereferenceable(1) %4) #10
  %25 = extractvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %24, 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %25, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  %27 = load i32, i32* %15, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %25, i64 4
  %30 = bitcast %"struct.std::__1::__hash_node_base.230"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %164, label %33

33:                                               ; preds = %18
  %34 = call i64 @llvm.ctpop.i64(i64 %31) #10, !range !18
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = add i64 %31, 4294967295
  %38 = and i64 %37, %28
  br label %43

39:                                               ; preds = %33
  %40 = icmp ugt i64 %31, %28
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %28, %31
  br label %43

43:                                               ; preds = %41, %39, %36
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %28, %39 ]
  %45 = bitcast %"struct.std::__1::__hash_node_base.230"* %26 to %"struct.std::__1::__hash_node_base.915"***
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %44
  %48 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.915"* %48, null
  br i1 %49, label %164, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %48, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.915"* %52, null
  br i1 %53, label %164, label %54

54:                                               ; preds = %50
  %55 = add i64 %31, -1
  br label %56

56:                                               ; preds = %77, %54
  %57 = phi %"struct.std::__1::__hash_node_base.915"* [ %52, %54 ], [ %79, %77 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %28
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  br i1 %35, label %65, label %63

63:                                               ; preds = %62
  %64 = and i64 %60, %55
  br label %69

65:                                               ; preds = %62
  %66 = icmp ult i64 %60, %31
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %60, %31
  br label %69

69:                                               ; preds = %67, %65, %63
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %60, %65 ]
  %71 = icmp eq i64 %70, %44
  br i1 %71, label %77, label %164

72:                                               ; preds = %56
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %57, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base.915"* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %27
  br i1 %76, label %164, label %77

77:                                               ; preds = %72, %69
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %57, i64 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.915"* %79, null
  br i1 %80, label %164, label %56

81:                                               ; preds = %14
  %82 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #10
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %84 = load i8, i8* %83, align 4, !range !12
  %85 = icmp eq i8 %84, 0
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %87 = load i8, i8* %86, align 1, !range !12
  %88 = icmp eq i8 %87, 0
  %89 = select i1 %88, i32 1, i32 2
  %90 = xor i1 %88, true
  %91 = zext i1 %90 to i32
  %92 = select i1 %85, i32 %91, i32 %89
  %93 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %92) #10
  store i32 %93, i32* %8, align 4
  %94 = load i8, i8* %83, align 4, !range !12
  %95 = icmp eq i8 %94, 0
  %96 = load i8, i8* %86, align 1, !range !12
  %97 = icmp eq i8 %96, 0
  %98 = select i1 %97, i32 1, i32 2
  %99 = xor i1 %97, true
  %100 = zext i1 %99 to i32
  %101 = select i1 %95, i32 %100, i32 %98
  %102 = add nuw nsw i32 %101, 1
  %103 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %102) #10
  %104 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0
  %105 = bitcast %"class.std::__1::tuple.1040"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #10
  %106 = getelementptr inbounds %"class.std::__1::tuple.1040", %"class.std::__1::tuple.1040"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::tuple.1030", %"class.std::__1::tuple.1030"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %107) #10
  %108 = call { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"* %104, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1040"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1030"* nonnull dereferenceable(1) %6) #10
  %109 = extractvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %109, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %107) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #10
  %111 = zext i32 %103 to i64
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %109, i64 4
  %113 = bitcast %"struct.std::__1::__hash_node_base.230"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %164, label %116

116:                                              ; preds = %81
  %117 = call i64 @llvm.ctpop.i64(i64 %114) #10, !range !18
  %118 = icmp ugt i64 %117, 1
  br i1 %118, label %122, label %119

119:                                              ; preds = %116
  %120 = add i64 %114, 4294967295
  %121 = and i64 %120, %111
  br label %126

122:                                              ; preds = %116
  %123 = icmp ugt i64 %114, %111
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %111, %114
  br label %126

126:                                              ; preds = %124, %122, %119
  %127 = phi i64 [ %121, %119 ], [ %125, %124 ], [ %111, %122 ]
  %128 = bitcast %"struct.std::__1::__hash_node_base.230"* %110 to %"struct.std::__1::__hash_node_base.915"***
  %129 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %128, align 8
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %129, i64 %127
  %131 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.915"* %131, null
  br i1 %132, label %164, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %131, i64 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.915"* %135, null
  br i1 %136, label %164, label %137

137:                                              ; preds = %133
  %138 = add i64 %114, -1
  br label %139

139:                                              ; preds = %160, %137
  %140 = phi %"struct.std::__1::__hash_node_base.915"* [ %135, %137 ], [ %162, %160 ]
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %140, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base.915"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = icmp eq i64 %143, %111
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  br i1 %118, label %148, label %146

146:                                              ; preds = %145
  %147 = and i64 %143, %138
  br label %152

148:                                              ; preds = %145
  %149 = icmp ult i64 %143, %114
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = urem i64 %143, %114
  br label %152

152:                                              ; preds = %150, %148, %146
  %153 = phi i64 [ %147, %146 ], [ %151, %150 ], [ %143, %148 ]
  %154 = icmp eq i64 %153, %127
  br i1 %154, label %160, label %164

155:                                              ; preds = %139
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %140, i64 2
  %157 = bitcast %"struct.std::__1::__hash_node_base.915"* %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, %103
  br i1 %159, label %164, label %160

160:                                              ; preds = %155, %152
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %140, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %161, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node_base.915"* %162, null
  br i1 %163, label %164, label %139

164:                                              ; preds = %77, %72, %69, %160, %155, %152, %133, %126, %81, %50, %43, %18
  %165 = phi i8* [ %19, %18 ], [ %19, %43 ], [ %19, %50 ], [ %82, %81 ], [ %82, %126 ], [ %82, %133 ], [ %82, %152 ], [ %82, %155 ], [ %82, %160 ], [ %19, %69 ], [ %19, %72 ], [ %19, %77 ]
  %166 = phi %"struct.std::__1::__hash_node_base.915"* [ null, %18 ], [ null, %43 ], [ null, %50 ], [ null, %81 ], [ null, %126 ], [ null, %133 ], [ null, %160 ], [ %140, %155 ], [ null, %152 ], [ null, %77 ], [ %57, %72 ], [ null, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #10
  %167 = icmp ne %"struct.std::__1::__hash_node_base.915"* %166, null
  ret i1 %167
}

declare i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext21InitializeCombinatorsEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1030"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #10, !range !18
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.230"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.230"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.230"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.230"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.230"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 64) #11, !noalias !40
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !40
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !40
  store i32 %62, i32* %61, align 8, !noalias !40
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = getelementptr inbounds i8, i8* %57, i64 56
  %65 = bitcast i8* %64 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #10, !noalias !40
  store i32 1065353216, i32* %65, align 4, !noalias !40
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8, !noalias !40
  %68 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"**
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %68, align 8, !noalias !40
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %9 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %10, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = shl i64 %9, 1
  %81 = icmp ult i64 %9, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %9) #10, !range !18
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #10
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %91)
  %92 = load i64, i64* %8, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #10, !range !18
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %7
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %7
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %7, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %55
  %103 = phi i64 [ %9, %55 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %56, %55 ], [ %97, %95 ], [ %7, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.230"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %57 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i8**
  store i8* %57, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base.230"* %111, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.230"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base.230"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #10, !range !18
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base.230"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %57 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %57, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base.230"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } undef, %"struct.std::__1::__hash_node_base.230"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base.230"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.226"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !18
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !18
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !18
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.226"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.226"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.230"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.230"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.232", %"class.std::__1::__bucket_list_deallocator.232"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !43

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.230"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.230"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !18
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.230"* %36, %"struct.std::__1::__hash_node_base.230"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.230"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.230"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.230"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.230"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.230"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.230"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.230"* %82, %"struct.std::__1::__hash_node_base.230"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.230"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.230"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.230"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.230"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.230"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.230"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.230"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.230"* %80, %"struct.std::__1::__hash_node_base.230"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.230"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.230"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.230"** null, %"struct.std::__1::__hash_node_base.230"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.230"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.230"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.232", %"class.std::__1::__bucket_list_deallocator.232"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1040"* dereferenceable(8), %"class.std::__1::tuple.1030"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #10, !range !18
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.230"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.230"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.230"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.230"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.230"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 64) #11, !noalias !44
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1040", %"class.std::__1::tuple.1040"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !44
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !44
  store i32 %62, i32* %61, align 8, !noalias !44
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = getelementptr inbounds i8, i8* %57, i64 56
  %65 = bitcast i8* %64 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #10, !noalias !44
  store i32 1065353216, i32* %65, align 4, !noalias !44
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8, !noalias !44
  %68 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"**
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %68, align 8, !noalias !44
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %9 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %10, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = shl i64 %9, 1
  %81 = icmp ult i64 %9, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %9) #10, !range !18
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #10
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %91)
  %92 = load i64, i64* %8, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #10, !range !18
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %7
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %7
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %7, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %55
  %103 = phi i64 [ %9, %55 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %56, %55 ], [ %97, %95 ], [ %7, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.230"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %57 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i8**
  store i8* %57, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base.230"* %111, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.230"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base.230"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #10, !range !18
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base.230"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %57 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %57, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base.230"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } undef, %"struct.std::__1::__hash_node_base.230"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base.230"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE18FindLiveComponentsEPNS5_8FunctionEPNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_0FvPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #11, !noalias !47
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #10
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE18FindLiveComponentsEPNS5_8FunctionEPNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_0FvPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS8_11InstructionERKNS7_5utils9BitVectorEPNS_13unordered_mapIjSD_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSD_EEEEEEPNS_6vectorINS9_12WorkListItemENSL_IST_EEEEE3$_1S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %4 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %5 = alloca %"struct.spvtools::opt::VectorDCE::WorkListItem", align 8
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1045"**
  %7 = load %"class.std::__1::__function::__default_alloc_func.1045"*, %"class.std::__1::__function::__default_alloc_func.1045"** %6, align 8
  %8 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #10
  %9 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1045", %"class.std::__1::__function::__default_alloc_func.1045"* %7, i64 0, i32 0, i32 2
  %11 = load %"class.spvtools::opt::VectorDCE"*, %"class.spvtools::opt::VectorDCE"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1045", %"class.std::__1::__function::__default_alloc_func.1045"* %7, i64 0, i32 0, i32 4
  %13 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %12, align 8
  %14 = load i32, i32* %1, align 4
  %15 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %13, i32 %14) #10
  %16 = tail call zeroext i1 @_ZNK8spvtools3opt9VectorDCE15HasVectorResultEPKNS0_11InstructionE(%"class.spvtools::opt::VectorDCE"* %11, %"class.spvtools::opt::Instruction"* %15) #10
  br i1 %16, label %17, label %105

17:                                               ; preds = %2
  %18 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %3, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %3, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = tail call i8* @_Znwm(i64 8) #11
  %24 = bitcast %"class.spvtools::utils::BitVector"* %20 to i8**
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = bitcast i64** %22 to i8**
  store i8* %25, i8** %26, align 8
  %27 = bitcast i8* %23 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast i64** %21 to i64*
  %29 = ptrtoint i8* %25 to i64
  store i64 %29, i64* %28, align 8
  store %"class.spvtools::opt::Instruction"* %15, %"class.spvtools::opt::Instruction"** %19, align 8
  %30 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1045", %"class.std::__1::__function::__default_alloc_func.1045"* %7, i64 0, i32 0, i32 1
  %31 = load %"class.spvtools::utils::BitVector"*, %"class.spvtools::utils::BitVector"** %30, align 8
  %32 = icmp eq %"class.spvtools::utils::BitVector"* %20, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %17
  %34 = ptrtoint i8* %23 to i64
  %35 = ptrtoint %"class.spvtools::opt::Instruction"* %15 to i64
  br label %48

36:                                               ; preds = %17
  %37 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %20, i64 0, i32 0
  %38 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %31, i64 0, i32 0, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %31, i64 0, i32 0, i32 0, i32 1
  %41 = load i64*, i64** %40, align 8
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.900"* %37, i64* %39, i64* %41) #10
  %42 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %3 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = load i64, i64* %28, align 8
  %45 = bitcast %"class.spvtools::utils::BitVector"* %20 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = inttoptr i64 %46 to i64*
  br label %48

48:                                               ; preds = %36, %33
  %49 = phi i64* [ %27, %33 ], [ %47, %36 ]
  %50 = phi i64 [ %34, %33 ], [ %46, %36 ]
  %51 = phi i64 [ %29, %33 ], [ %44, %36 ]
  %52 = phi i64 [ %35, %33 ], [ %43, %36 ]
  %53 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %4 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %4, i64 0, i32 1
  %55 = bitcast %"class.spvtools::utils::BitVector"* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  %56 = sub i64 %51, %50
  %57 = ashr exact i64 %56, 3
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %83, label %59

59:                                               ; preds = %48
  %60 = icmp ugt i64 %57, 2305843009213693951
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = bitcast %"class.spvtools::utils::BitVector"* %54 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #12
  unreachable

63:                                               ; preds = %59
  %64 = call i8* @_Znwm(i64 %56) #11
  %65 = bitcast i8* %64 to i64*
  %66 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %67 = bitcast i64** %66 to i8**
  store i8* %64, i8** %67, align 8
  %68 = bitcast %"class.spvtools::utils::BitVector"* %54 to i8**
  store i8* %64, i8** %68, align 8
  %69 = getelementptr inbounds i64, i64* %65, i64 %57
  %70 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %4, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %69, i64** %70, align 8
  %71 = bitcast i64** %66 to i64*
  %72 = ptrtoint i8* %64 to i64
  %73 = ptrtoint i64* %49 to i64
  %74 = sub i64 %51, %73
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %81

76:                                               ; preds = %63
  %77 = lshr exact i64 %74, 3
  %78 = bitcast i64* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %78, i64 %74, i1 false) #10
  %79 = getelementptr inbounds i64, i64* %65, i64 %77
  %80 = ptrtoint i64* %79 to i64
  br label %81

81:                                               ; preds = %76, %63
  %82 = phi i64 [ %80, %76 ], [ %72, %63 ]
  store i64 %82, i64* %71, align 8
  br label %83

83:                                               ; preds = %81, %48
  %84 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1045", %"class.std::__1::__function::__default_alloc_func.1045"* %7, i64 0, i32 0, i32 3
  %85 = load %"class.std::__1::unordered_map.932"*, %"class.std::__1::unordered_map.932"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1045", %"class.std::__1::__function::__default_alloc_func.1045"* %7, i64 0, i32 0, i32 0
  %87 = load %"class.std::__1::vector.956"**, %"class.std::__1::vector.956"*** %86, align 8
  %88 = load %"class.std::__1::vector.956"*, %"class.std::__1::vector.956"** %87, align 8
  call void @_ZN8spvtools3opt9VectorDCE25AddItemToWorkListIfNeededENS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS3_4hashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS6_EEEEEEPNS3_6vectorIS2_NSB_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* undef, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nonnull %4, %"class.std::__1::unordered_map.932"* %85, %"class.std::__1::vector.956"* %88) #10
  %89 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = icmp eq i64* %90, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %83
  %93 = ptrtoint i64* %90 to i64
  %94 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %95 = bitcast i64** %94 to i64*
  store i64 %93, i64* %95, align 8
  %96 = bitcast i64* %90 to i8*
  call void @_ZdlPv(i8* %96) #11
  br label %97

97:                                               ; preds = %92, %83
  %98 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %99 = load i64*, i64** %98, align 8
  %100 = icmp eq i64* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %97
  %102 = ptrtoint i64* %99 to i64
  store i64 %102, i64* %28, align 8
  %103 = bitcast i64* %99 to i8*
  call void @_ZdlPv(i8* %103) #11
  br label %104

104:                                              ; preds = %101, %97
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #10
  br label %131

105:                                              ; preds = %2
  %106 = tail call zeroext i1 @_ZNK8spvtools3opt9VectorDCE15HasScalarResultEPKNS0_11InstructionE(%"class.spvtools::opt::VectorDCE"* %11, %"class.spvtools::opt::Instruction"* %15) #10
  br i1 %106, label %107, label %131

107:                                              ; preds = %105
  %108 = ptrtoint %"class.spvtools::opt::Instruction"* %15 to i64
  %109 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5, i64 0, i32 1
  %111 = tail call i8* @_Znwm(i64 8) #11
  %112 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %113 = bitcast %"class.spvtools::utils::BitVector"* %110 to i8**
  store i8* %111, i8** %113, align 8
  %114 = getelementptr inbounds i8, i8* %111, i64 8
  %115 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %116 = bitcast i64** %115 to i8**
  store i8* %114, i8** %116, align 8
  %117 = bitcast i64** %112 to i64*
  %118 = bitcast i8* %111 to i64*
  store i64 1, i64* %118, align 8
  %119 = ptrtoint i8* %114 to i64
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1045", %"class.std::__1::__function::__default_alloc_func.1045"* %7, i64 0, i32 0, i32 3
  %121 = load %"class.std::__1::unordered_map.932"*, %"class.std::__1::unordered_map.932"** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1045", %"class.std::__1::__function::__default_alloc_func.1045"* %7, i64 0, i32 0, i32 0
  %123 = load %"class.std::__1::vector.956"**, %"class.std::__1::vector.956"*** %122, align 8
  %124 = load %"class.std::__1::vector.956"*, %"class.std::__1::vector.956"** %123, align 8
  call void @_ZN8spvtools3opt9VectorDCE25AddItemToWorkListIfNeededENS1_12WorkListItemEPNSt3__113unordered_mapIjNS_5utils9BitVectorENS3_4hashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS6_EEEEEEPNS3_6vectorIS2_NSB_IS2_EEEE(%"class.spvtools::opt::VectorDCE"* undef, %"struct.spvtools::opt::VectorDCE::WorkListItem"* nonnull %5, %"class.std::__1::unordered_map.932"* %121, %"class.std::__1::vector.956"* %124) #10
  %125 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %126 = load i64*, i64** %125, align 8
  %127 = icmp eq i64* %126, null
  br i1 %127, label %131, label %128

128:                                              ; preds = %107
  %129 = ptrtoint i64* %126 to i64
  store i64 %129, i64* %117, align 8
  %130 = bitcast i64* %126 to i8*
  call void @_ZdlPv(i8* %130) #11
  br label %131

131:                                              ; preds = %104, %105, %107, %128
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS5_11InstructionERKNS4_5utils9BitVectorEPNS_13unordered_mapIjSA_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSA_EEEEEEPNS_6vectorINS6_12WorkListItemENSI_ISQ_EEEEE3$_1FvPjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #11, !noalias !52
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 40, i1 false) #10
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS5_11InstructionERKNS4_5utils9BitVectorEPNS_13unordered_mapIjSA_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSA_EEEEEEPNS_6vectorINS6_12WorkListItemENSI_ISQ_EEEEE3$_1FvPjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.933"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !18
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.933"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !18
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !18
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.933"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.933"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.933"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.937"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.937"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.939", %"class.std::__1::__bucket_list_deallocator.939"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !57

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.937"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.937"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !18
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.937"* %36, %"struct.std::__1::__hash_node_base.937"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.937"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.937"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.937"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.937"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.937"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.937"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.937"* %82, %"struct.std::__1::__hash_node_base.937"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.937"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.937"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.937"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.937"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.937"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.937"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.937"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.937"* %80, %"struct.std::__1::__hash_node_base.937"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.937"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.937"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.937"** null, %"struct.std::__1::__hash_node_base.937"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.937"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.937"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.939", %"class.std::__1::__bucket_list_deallocator.939"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.937"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIjJRKNS_4pairIKjS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.933"*, i32* dereferenceable(4), %"struct.std::__1::pair.987"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !18
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.937"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.937"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.937"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.937"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.937"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %175, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 48) #11, !noalias !58
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds %"struct.std::__1::pair.987", %"struct.std::__1::pair.987"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 8, !noalias !58
  store i32 %59, i32* %57, align 8, !noalias !58
  %60 = getelementptr inbounds i8, i8* %55, i64 24
  %61 = getelementptr inbounds %"struct.std::__1::pair.987", %"struct.std::__1::pair.987"* %2, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #10, !noalias !58
  %62 = getelementptr inbounds %"struct.std::__1::pair.987", %"struct.std::__1::pair.987"* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %63 = bitcast i64** %62 to i64*
  %64 = load i64, i64* %63, align 8, !noalias !58
  %65 = bitcast %"class.spvtools::utils::BitVector"* %61 to i64*
  %66 = load i64, i64* %65, align 8, !noalias !58
  %67 = sub i64 %64, %66
  %68 = ashr exact i64 %67, 3
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %93, label %70

70:                                               ; preds = %53
  %71 = icmp ugt i64 %68, 2305843009213693951
  br i1 %71, label %72, label %74

72:                                               ; preds = %70
  %73 = bitcast i8* %60 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %73) #12, !noalias !58
  unreachable

74:                                               ; preds = %70
  %75 = tail call i8* @_Znwm(i64 %67) #11, !noalias !58
  %76 = bitcast i8* %75 to i64*
  %77 = getelementptr inbounds i8, i8* %55, i64 32
  %78 = bitcast i8* %77 to i8**
  store i8* %75, i8** %78, align 8, !noalias !58
  %79 = bitcast i8* %60 to i8**
  store i8* %75, i8** %79, align 8, !noalias !58
  %80 = getelementptr inbounds i64, i64* %76, i64 %68
  %81 = getelementptr inbounds i8, i8* %55, i64 40
  %82 = bitcast i8* %81 to i64**
  store i64* %80, i64** %82, align 8, !noalias !58
  %83 = bitcast i8* %77 to i64*
  %84 = ptrtoint i8* %75 to i64
  %85 = icmp sgt i64 %67, 0
  br i1 %85, label %86, label %91

86:                                               ; preds = %74
  %87 = lshr exact i64 %67, 3
  %88 = inttoptr i64 %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* align 8 %88, i64 %67, i1 false) #10, !noalias !58
  %89 = getelementptr inbounds i64, i64* %76, i64 %87
  %90 = ptrtoint i64* %89 to i64
  br label %91

91:                                               ; preds = %86, %74
  %92 = phi i64 [ %90, %86 ], [ %84, %74 ]
  store i64 %92, i64* %83, align 8, !noalias !58
  br label %93

93:                                               ; preds = %53, %91
  %94 = getelementptr inbounds i8, i8* %55, i64 8
  %95 = bitcast i8* %94 to i64*
  store i64 %5, i64* %95, align 8, !noalias !58
  %96 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.937"**
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %96, align 8, !noalias !58
  %97 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 2, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  %100 = uitofp i64 %99 to float
  %101 = uitofp i64 %7 to float
  %102 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load float, float* %102, align 4
  %104 = fmul float %103, %101
  %105 = fcmp olt float %104, %100
  %106 = or i1 %8, %105
  br i1 %106, label %107, label %130

107:                                              ; preds = %93
  %108 = shl i64 %7, 1
  %109 = icmp ult i64 %7, 3
  %110 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !18
  %111 = icmp ugt i64 %110, 1
  %112 = or i1 %109, %111
  %113 = zext i1 %112 to i64
  %114 = or i64 %108, %113
  %115 = fdiv float %100, %103
  %116 = tail call float @llvm.ceil.f32(float %115) #10
  %117 = fptoui float %116 to i64
  %118 = icmp ult i64 %114, %117
  %119 = select i1 %118, i64 %117, i64 %114
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.933"* %0, i64 %119)
  %120 = load i64, i64* %6, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %120) #10, !range !18
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %107
  %124 = add i64 %120, 4294967295
  %125 = and i64 %124, %5
  br label %130

126:                                              ; preds = %107
  %127 = icmp ugt i64 %120, %5
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %5, %120
  br label %130

130:                                              ; preds = %128, %126, %123, %93
  %131 = phi i64 [ %7, %93 ], [ %120, %123 ], [ %120, %126 ], [ %120, %128 ]
  %132 = phi i64 [ %54, %93 ], [ %125, %123 ], [ %5, %126 ], [ %129, %128 ]
  %133 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %133, align 8
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %134, i64 %132
  %136 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.937"* %136, null
  br i1 %137, label %138, label %164

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 1, i32 0, i32 0
  %140 = bitcast %"struct.std::__1::__hash_node_base.937"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast i8* %55 to i64*
  store i64 %141, i64* %142, align 8
  %143 = bitcast %"struct.std::__1::__hash_node_base.937"* %139 to i8**
  store i8* %55, i8** %143, align 8
  store %"struct.std::__1::__hash_node_base.937"* %139, %"struct.std::__1::__hash_node_base.937"** %135, align 8
  %144 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %96, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base.937"* %144, null
  br i1 %145, label %171, label %146

146:                                              ; preds = %138
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %144, i64 1
  %148 = bitcast %"struct.std::__1::__hash_node_base.937"* %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = tail call i64 @llvm.ctpop.i64(i64 %131) #10, !range !18
  %151 = icmp ugt i64 %150, 1
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = add i64 %131, -1
  %154 = and i64 %149, %153
  br label %159

155:                                              ; preds = %146
  %156 = icmp ult i64 %149, %131
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = urem i64 %149, %131
  br label %159

159:                                              ; preds = %152, %155, %157
  %160 = phi i64 [ %154, %152 ], [ %158, %157 ], [ %149, %155 ]
  %161 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %133, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %161, i64 %160
  %163 = bitcast %"struct.std::__1::__hash_node_base.937"** %162 to i8**
  br label %169

164:                                              ; preds = %130
  %165 = bitcast %"struct.std::__1::__hash_node_base.937"* %136 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast i8* %55 to i64*
  store i64 %166, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::__hash_node_base.937"* %136 to i8**
  br label %169

169:                                              ; preds = %159, %164
  %170 = phi i8** [ %168, %164 ], [ %163, %159 ]
  store i8* %55, i8** %170, align 8
  br label %171

171:                                              ; preds = %169, %138
  %172 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.937"*
  %173 = load i64, i64* %97, align 8
  %174 = add i64 %173, 1
  store i64 %174, i64* %97, align 8
  br label %175

175:                                              ; preds = %48, %171
  %176 = phi i8 [ 1, %171 ], [ 0, %48 ]
  %177 = phi %"struct.std::__1::__hash_node_base.937"* [ %172, %171 ], [ %31, %48 ]
  %178 = insertvalue { %"struct.std::__1::__hash_node_base.937"*, i8 } undef, %"struct.std::__1::__hash_node_base.937"* %177, 0
  %179 = insertvalue { %"struct.std::__1::__hash_node_base.937"*, i8 } %178, i8 %176, 1
  ret { %"struct.std::__1::__hash_node_base.937"*, i8 } %179
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9VectorDCE19RewriteInstructionsEPNS3_8FunctionERKNS_13unordered_mapIjNS2_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSF_EEEEEEE3$_2S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1056"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1056"*, %"class.std::__1::__function::__default_alloc_func.1056"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1056", %"class.std::__1::__function::__default_alloc_func.1056"* %4, i64 0, i32 0, i32 1
  %6 = load %"class.spvtools::opt::VectorDCE"*, %"class.spvtools::opt::VectorDCE"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %6, i64 0, i32 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %8, %"class.spvtools::opt::Instruction"* %1) #10
  br i1 %9, label %10, label %129

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !12
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %16 = load i8, i8* %15, align 4, !range !12
  %17 = zext i8 %16 to i32
  %18 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %17) #10
  br label %19

19:                                               ; preds = %14, %10
  %20 = phi i32 [ %18, %14 ], [ 0, %10 ]
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1056", %"class.std::__1::__function::__default_alloc_func.1056"* %4, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %129, label %25

25:                                               ; preds = %19
  %26 = tail call i64 @llvm.ctpop.i64(i64 %23) #10, !range !18
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %23, 4294967295
  %30 = and i64 %29, %21
  br label %35

31:                                               ; preds = %25
  %32 = icmp ugt i64 %23, %21
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %21, %23
  br label %35

35:                                               ; preds = %33, %31, %28
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %21, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1056", %"class.std::__1::__function::__default_alloc_func.1056"* %4, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.937"* %40, null
  br i1 %41, label %129, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %40, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.937"* %44, null
  br i1 %45, label %129, label %46

46:                                               ; preds = %42
  %47 = add i64 %23, -1
  br label %48

48:                                               ; preds = %69, %46
  %49 = phi %"struct.std::__1::__hash_node_base.937"* [ %44, %46 ], [ %71, %69 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %49, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.937"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %21
  br i1 %53, label %64, label %54

54:                                               ; preds = %48
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %47
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %23
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %23
  br label %61

61:                                               ; preds = %59, %57, %55
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %69, label %129

64:                                               ; preds = %48
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %49, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.937"* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %20
  br i1 %68, label %73, label %69

69:                                               ; preds = %64, %61
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %49, i64 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.937"* %71, null
  br i1 %72, label %129, label %48

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %49, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.937"* %74 to %"class.spvtools::utils::BitVector"*
  %76 = bitcast %"struct.std::__1::__hash_node_base.937"* %74 to i64**
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %49, i64 4
  %79 = bitcast %"struct.std::__1::__hash_node_base.937"* %78 to i64**
  %80 = load i64*, i64** %79, align 8
  %81 = icmp eq i64* %77, %80
  br i1 %81, label %89, label %84

82:                                               ; preds = %84
  %83 = icmp eq i64* %88, %80
  br i1 %83, label %89, label %84

84:                                               ; preds = %73, %82
  %85 = phi i64* [ %88, %82 ], [ %77, %73 ]
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, 0
  %88 = getelementptr inbounds i64, i64* %85, i64 1
  br i1 %87, label %82, label %116

89:                                               ; preds = %82, %73
  %90 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1056", %"class.std::__1::__function::__default_alloc_func.1056"* %4, i64 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  store i8 1, i8* %91, align 1
  %92 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1056", %"class.std::__1::__function::__default_alloc_func.1056"* %4, i64 0, i32 0, i32 3
  %93 = load %"class.std::__1::vector.976"*, %"class.std::__1::vector.976"** %92, align 8
  tail call void @_ZN8spvtools3opt9VectorDCE24MarkDebugValueUsesAsDeadEPNS0_11InstructionEPNSt3__16vectorIS3_NS4_9allocatorIS3_EEEE(%"class.spvtools::opt::VectorDCE"* %6, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::vector.976"* %93) #10
  %94 = getelementptr inbounds %"class.spvtools::opt::VectorDCE", %"class.spvtools::opt::VectorDCE"* %6, i64 0, i32 0
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %96 = load i8, i8* %95, align 4, !range !12
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %89
  %99 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #10
  br label %100

100:                                              ; preds = %98, %89
  %101 = phi i32 [ %99, %98 ], [ 0, %89 ]
  %102 = tail call i32 @_ZN8spvtools3opt7MemPass10Type2UndefEj(%"class.spvtools::opt::MemPass"* %94, i32 %101) #10
  %103 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  tail call void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %103, %"class.spvtools::opt::Instruction"* %1) #10
  %104 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %105 = load i8, i8* %11, align 1, !range !12
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %100
  %108 = load i8, i8* %95, align 4, !range !12
  %109 = zext i8 %108 to i32
  %110 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %109) #10
  br label %111

111:                                              ; preds = %107, %100
  %112 = phi i32 [ %110, %107 ], [ 0, %100 ]
  %113 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %104, i32 %112, i32 %102) #10
  %114 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %115 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %114, %"class.spvtools::opt::Instruction"* %1) #10
  br label %129

116:                                              ; preds = %84
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %118 = load i32, i32* %117, align 8
  %119 = icmp eq i32 %118, 82
  br i1 %119, label %120, label %129

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1056", %"class.std::__1::__function::__default_alloc_func.1056"* %4, i64 0, i32 0, i32 3
  %122 = load %"class.std::__1::vector.976"*, %"class.std::__1::vector.976"** %121, align 8
  %123 = tail call zeroext i1 @_ZN8spvtools3opt9VectorDCE24RewriteInsertInstructionEPNS0_11InstructionERKNS_5utils9BitVectorEPNSt3__16vectorIS3_NS8_9allocatorIS3_EEEE(%"class.spvtools::opt::VectorDCE"* %6, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::utils::BitVector"* dereferenceable(24) %75, %"class.std::__1::vector.976"* %122) #10
  %124 = zext i1 %123 to i8
  %125 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1056", %"class.std::__1::__function::__default_alloc_func.1056"* %4, i64 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = load i8, i8* %126, align 1, !range !12
  %128 = or i8 %127, %124
  store i8 %128, i8* %126, align 1
  br label %129

129:                                              ; preds = %61, %69, %2, %19, %35, %42, %111, %116, %120
  ret void
}

declare void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE19RewriteInstructionsEPNS5_8FunctionERKNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_2FvPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 64) #11, !noalias !61
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 16, i1 false) #10
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to %"class.std::__1::__hash_table.933"*
  %5 = getelementptr inbounds i8, i8* %2, i64 48
  %6 = getelementptr inbounds i8, i8* %0, i64 48
  %7 = bitcast i8* %6 to i32*
  %8 = bitcast i8* %5 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false) #10
  %9 = load i32, i32* %7, align 8
  store i32 %9, i32* %8, align 8
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.933"* %4, i64 %12) #10
  %13 = getelementptr inbounds i8, i8* %0, i64 32
  %14 = bitcast i8* %13 to %"struct.std::__1::__hash_node_base.937"**
  %15 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %14, align 8
  %16 = icmp eq %"struct.std::__1::__hash_node_base.937"* %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %1
  %18 = ptrtoint %"struct.std::__1::__hash_node_base.937"* %15 to i64
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i64 [ %18, %17 ], [ %26, %19 ]
  %21 = inttoptr i64 %20 to %"struct.std::__1::__hash_node.1020"*
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node.1020", %"struct.std::__1::__hash_node.1020"* %21, i64 0, i32 2, i32 0
  %23 = getelementptr inbounds %"struct.std::__1::pair.987", %"struct.std::__1::pair.987"* %22, i64 0, i32 0
  %24 = tail call { %"struct.std::__1::__hash_node_base.937"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIjJRKNS_4pairIKjS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.933"* %4, i32* dereferenceable(4) %23, %"struct.std::__1::pair.987"* dereferenceable(32) %22) #10
  %25 = inttoptr i64 %20 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %19

28:                                               ; preds = %19, %1
  %29 = getelementptr inbounds i8, i8* %2, i64 56
  %30 = getelementptr inbounds i8, i8* %0, i64 56
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8* %29 to i64*
  store i64 %32, i64* %33, align 8
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt9VectorDCE19RewriteInstructionsEPNS5_8FunctionERKNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_2FvPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 32
  %3 = bitcast i8* %2 to %"struct.std::__1::__hash_node_base.937"**
  %4 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.937"* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %1, %19
  %7 = phi %"struct.std::__1::__hash_node_base.937"* [ %9, %19 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %7, i64 3
  %11 = bitcast %"struct.std::__1::__hash_node_base.937"* %10 to i64**
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = ptrtoint i64* %12 to i64
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %7, i64 4
  %17 = bitcast %"struct.std::__1::__hash_node_base.937"* %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i64* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %14, %6
  %20 = bitcast %"struct.std::__1::__hash_node_base.937"* %7 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  %21 = icmp eq %"struct.std::__1::__hash_node_base.937"* %9, null
  br i1 %21, label %22, label %6

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds i8, i8* %0, i64 16
  %24 = bitcast i8* %23 to %"struct.std::__1::__hash_node_base.937"***
  %25 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %24, align 8
  store %"struct.std::__1::__hash_node_base.937"** null, %"struct.std::__1::__hash_node_base.937"*** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.937"** %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = bitcast %"struct.std::__1::__hash_node_base.937"** %25 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %22, %27
  tail call void @_ZdlPv(i8* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9VectorDCE24MarkDebugValueUsesAsDeadES5_PNS_6vectorIS5_NS_9allocatorIS5_EEEEE3$_3S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = tail call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %1) #10
  %5 = icmp eq i32 %4, 29
  br i1 %5, label %6, label %78

6:                                                ; preds = %2
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::vector.976"***
  %8 = load %"class.std::__1::vector.976"**, %"class.std::__1::vector.976"*** %7, align 8
  %9 = load %"class.std::__1::vector.976"*, %"class.std::__1::vector.976"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %9, i64 0, i32 0, i32 1
  %11 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %12, align 8
  %14 = icmp eq %"class.spvtools::opt::Instruction"** %11, %13
  %15 = ptrtoint %"class.spvtools::opt::Instruction"** %13 to i64
  br i1 %14, label %21, label %16

16:                                               ; preds = %6
  %17 = bitcast %"class.spvtools::opt::Instruction"** %11 to i64*
  store i64 %3, i64* %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %11, i64 1
  %19 = ptrtoint %"class.spvtools::opt::Instruction"** %18 to i64
  %20 = bitcast %"class.spvtools::opt::Instruction"*** %10 to i64*
  store i64 %19, i64* %20, align 8
  br label %78

21:                                               ; preds = %6
  %22 = ptrtoint %"class.spvtools::opt::Instruction"** %11 to i64
  %23 = bitcast %"class.spvtools::opt::Instruction"*** %10 to i64*
  %24 = bitcast %"class.std::__1::vector.976"* %9 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = ashr exact i64 %26, 3
  %28 = add nsw i64 %27, 1
  %29 = icmp ugt i64 %28, 2305843009213693951
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::vector.976"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #12
  unreachable

32:                                               ; preds = %21
  %33 = bitcast %"class.spvtools::opt::Instruction"*** %12 to i64*
  %34 = sub i64 %15, %25
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, 1152921504606846975
  br i1 %36, label %37, label %45

37:                                               ; preds = %32
  %38 = ashr exact i64 %34, 2
  %39 = icmp ult i64 %38, %28
  %40 = select i1 %39, i64 %28, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = icmp ugt i64 %40, 2305843009213693951
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  tail call void @abort() #12
  unreachable

45:                                               ; preds = %42, %32
  %46 = phi i64 [ %40, %42 ], [ 2305843009213693951, %32 ]
  %47 = shl i64 %46, 3
  %48 = tail call i8* @_Znwm(i64 %47) #11
  %49 = bitcast i8* %48 to %"class.spvtools::opt::Instruction"**
  br label %50

50:                                               ; preds = %45, %37
  %51 = phi i64 [ %46, %45 ], [ 0, %37 ]
  %52 = phi %"class.spvtools::opt::Instruction"** [ %49, %45 ], [ null, %37 ]
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %52, i64 %27
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %52, i64 %51
  %55 = ptrtoint %"class.spvtools::opt::Instruction"** %54 to i64
  %56 = bitcast %"class.spvtools::opt::Instruction"** %53 to i64*
  store i64 %3, i64* %56, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %53, i64 1
  %58 = ptrtoint %"class.spvtools::opt::Instruction"** %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %9, i64 0, i32 0, i32 0
  %60 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %59, align 8
  %61 = load i64, i64* %23, align 8
  %62 = ptrtoint %"class.spvtools::opt::Instruction"** %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %53, i64 %65
  %67 = ptrtoint %"class.spvtools::opt::Instruction"** %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %50
  %70 = bitcast %"class.spvtools::opt::Instruction"** %66 to i8*
  %71 = bitcast %"class.spvtools::opt::Instruction"** %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #10
  %72 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %59, align 8
  br label %73

73:                                               ; preds = %69, %50
  %74 = phi %"class.spvtools::opt::Instruction"** [ %60, %50 ], [ %72, %69 ]
  store i64 %67, i64* %24, align 8
  store i64 %58, i64* %23, align 8
  store i64 %55, i64* %33, align 8
  %75 = icmp eq %"class.spvtools::opt::Instruction"** %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.spvtools::opt::Instruction"** %74 to i8*
  tail call void @_ZdlPv(i8* %77) #11
  br label %78

78:                                               ; preds = %2, %16, %73, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.937"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIjJNS_4pairIjS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.933"*, i32* dereferenceable(4), %"struct.std::__1::pair.986"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !18
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.937"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.937"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.937"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.937"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.937"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %152, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 48) #11, !noalias !66
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds %"struct.std::__1::pair.986", %"struct.std::__1::pair.986"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4, !noalias !66
  store i32 %59, i32* %57, align 8, !noalias !66
  %60 = getelementptr inbounds i8, i8* %55, i64 24
  %61 = getelementptr inbounds %"struct.std::__1::pair.986", %"struct.std::__1::pair.986"* %2, i64 0, i32 1
  %62 = bitcast %"class.spvtools::utils::BitVector"* %61 to <2 x i64>*
  %63 = load <2 x i64>, <2 x i64>* %62, align 8, !noalias !66
  %64 = bitcast i8* %60 to <2 x i64>*
  store <2 x i64> %63, <2 x i64>* %64, align 8, !noalias !66
  %65 = getelementptr inbounds %"struct.std::__1::pair.986", %"struct.std::__1::pair.986"* %2, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast i64** %65 to i64*
  %67 = load i64, i64* %66, align 8, !noalias !66
  %68 = getelementptr inbounds i8, i8* %55, i64 40
  %69 = bitcast i8* %68 to i64*
  store i64 %67, i64* %69, align 8, !noalias !66
  %70 = bitcast %"class.spvtools::utils::BitVector"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #10, !noalias !66
  %71 = getelementptr inbounds i8, i8* %55, i64 8
  %72 = bitcast i8* %71 to i64*
  store i64 %5, i64* %72, align 8, !noalias !66
  %73 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.937"**
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %73, align 8, !noalias !66
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 1
  %77 = uitofp i64 %76 to float
  %78 = uitofp i64 %7 to float
  %79 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 3, i32 0, i32 0
  %80 = load float, float* %79, align 4
  %81 = fmul float %80, %78
  %82 = fcmp olt float %81, %77
  %83 = or i1 %8, %82
  br i1 %83, label %84, label %107

84:                                               ; preds = %53
  %85 = shl i64 %7, 1
  %86 = icmp ult i64 %7, 3
  %87 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !18
  %88 = icmp ugt i64 %87, 1
  %89 = or i1 %86, %88
  %90 = zext i1 %89 to i64
  %91 = or i64 %85, %90
  %92 = fdiv float %77, %80
  %93 = tail call float @llvm.ceil.f32(float %92) #10
  %94 = fptoui float %93 to i64
  %95 = icmp ult i64 %91, %94
  %96 = select i1 %95, i64 %94, i64 %91
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.933"* %0, i64 %96)
  %97 = load i64, i64* %6, align 8
  %98 = tail call i64 @llvm.ctpop.i64(i64 %97) #10, !range !18
  %99 = icmp ugt i64 %98, 1
  br i1 %99, label %103, label %100

100:                                              ; preds = %84
  %101 = add i64 %97, 4294967295
  %102 = and i64 %101, %5
  br label %107

103:                                              ; preds = %84
  %104 = icmp ugt i64 %97, %5
  br i1 %104, label %107, label %105

105:                                              ; preds = %103
  %106 = urem i64 %5, %97
  br label %107

107:                                              ; preds = %105, %103, %100, %53
  %108 = phi i64 [ %7, %53 ], [ %97, %100 ], [ %97, %103 ], [ %97, %105 ]
  %109 = phi i64 [ %54, %53 ], [ %102, %100 ], [ %5, %103 ], [ %106, %105 ]
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %110, align 8
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %111, i64 %109
  %113 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %112, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base.937"* %113, null
  br i1 %114, label %115, label %141

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 1, i32 0, i32 0
  %117 = bitcast %"struct.std::__1::__hash_node_base.937"* %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i8* %55 to i64*
  store i64 %118, i64* %119, align 8
  %120 = bitcast %"struct.std::__1::__hash_node_base.937"* %116 to i8**
  store i8* %55, i8** %120, align 8
  store %"struct.std::__1::__hash_node_base.937"* %116, %"struct.std::__1::__hash_node_base.937"** %112, align 8
  %121 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %73, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.937"* %121, null
  br i1 %122, label %148, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %121, i64 1
  %125 = bitcast %"struct.std::__1::__hash_node_base.937"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = tail call i64 @llvm.ctpop.i64(i64 %108) #10, !range !18
  %128 = icmp ugt i64 %127, 1
  br i1 %128, label %132, label %129

129:                                              ; preds = %123
  %130 = add i64 %108, -1
  %131 = and i64 %126, %130
  br label %136

132:                                              ; preds = %123
  %133 = icmp ult i64 %126, %108
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = urem i64 %126, %108
  br label %136

136:                                              ; preds = %129, %132, %134
  %137 = phi i64 [ %131, %129 ], [ %135, %134 ], [ %126, %132 ]
  %138 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %110, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %138, i64 %137
  %140 = bitcast %"struct.std::__1::__hash_node_base.937"** %139 to i8**
  br label %146

141:                                              ; preds = %107
  %142 = bitcast %"struct.std::__1::__hash_node_base.937"* %113 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast i8* %55 to i64*
  store i64 %143, i64* %144, align 8
  %145 = bitcast %"struct.std::__1::__hash_node_base.937"* %113 to i8**
  br label %146

146:                                              ; preds = %136, %141
  %147 = phi i8** [ %145, %141 ], [ %140, %136 ]
  store i8* %55, i8** %147, align 8
  br label %148

148:                                              ; preds = %146, %115
  %149 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.937"*
  %150 = load i64, i64* %74, align 8
  %151 = add i64 %150, 1
  store i64 %151, i64* %74, align 8
  br label %152

152:                                              ; preds = %48, %148
  %153 = phi i8 [ 1, %148 ], [ 0, %48 ]
  %154 = phi %"struct.std::__1::__hash_node_base.937"* [ %149, %148 ], [ %31, %48 ]
  %155 = insertvalue { %"struct.std::__1::__hash_node_base.937"*, i8 } undef, %"struct.std::__1::__hash_node_base.937"* %154, 0
  %156 = insertvalue { %"struct.std::__1::__hash_node_base.937"*, i8 } %155, i8 %153, 1
  ret { %"struct.std::__1::__hash_node_base.937"*, i8 } %156
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt9VectorDCE12WorkListItemENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJRS4_EEEvDpOT_(%"class.std::__1::vector.956"*, %"struct.spvtools::opt::VectorDCE::WorkListItem"* dereferenceable(32)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.956"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.956"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"struct.spvtools::opt::VectorDCE::WorkListItem"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.spvtools::opt::VectorDCE::WorkListItem"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %36, i64 %35
  %39 = ptrtoint %"struct.spvtools::opt::VectorDCE::WorkListItem"* %38 to i64
  %40 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %36, i64 %9, i32 1
  %44 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1
  %45 = bitcast %"class.spvtools::utils::BitVector"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #10
  %46 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %47 = bitcast i64** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.spvtools::utils::BitVector"* %44 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %81, label %54

54:                                               ; preds = %34
  %55 = icmp ugt i64 %52, 2305843009213693951
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = bitcast %"class.spvtools::utils::BitVector"* %43 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %57) #12
  unreachable

58:                                               ; preds = %54
  %59 = tail call i8* @_Znwm(i64 %51) #11
  %60 = bitcast i8* %59 to i64*
  %61 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %36, i64 %9, i32 1, i32 0, i32 0, i32 1
  %62 = bitcast i64** %61 to i8**
  store i8* %59, i8** %62, align 8
  %63 = bitcast %"class.spvtools::utils::BitVector"* %43 to i8**
  store i8* %59, i8** %63, align 8
  %64 = getelementptr inbounds i64, i64* %60, i64 %52
  %65 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %36, i64 %9, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %64, i64** %65, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %44, i64 0, i32 0, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = load i64, i64* %47, align 8
  %69 = bitcast i64** %61 to i64*
  %70 = ptrtoint i8* %59 to i64
  %71 = ptrtoint i64* %67 to i64
  %72 = sub i64 %68, %71
  %73 = icmp sgt i64 %72, 0
  br i1 %73, label %74, label %79

74:                                               ; preds = %58
  %75 = lshr exact i64 %72, 3
  %76 = bitcast i64* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %76, i64 %72, i1 false) #10
  %77 = getelementptr inbounds i64, i64* %60, i64 %75
  %78 = ptrtoint i64* %77 to i64
  br label %79

79:                                               ; preds = %74, %58
  %80 = phi i64 [ %78, %74 ], [ %70, %58 ]
  store i64 %80, i64* %69, align 8
  br label %81

81:                                               ; preds = %34, %79
  %82 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %37, i64 1
  %83 = ptrtoint %"struct.spvtools::opt::VectorDCE::WorkListItem"* %82 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %0, i64 0, i32 0, i32 0
  %85 = load %"struct.spvtools::opt::VectorDCE::WorkListItem"*, %"struct.spvtools::opt::VectorDCE::WorkListItem"** %84, align 8
  %86 = ptrtoint %"struct.spvtools::opt::VectorDCE::WorkListItem"* %85 to i64
  %87 = load %"struct.spvtools::opt::VectorDCE::WorkListItem"*, %"struct.spvtools::opt::VectorDCE::WorkListItem"** %3, align 8
  %88 = icmp eq %"struct.spvtools::opt::VectorDCE::WorkListItem"* %87, %85
  br i1 %88, label %175, label %89

89:                                               ; preds = %81
  %90 = getelementptr %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %87, i64 -1, i32 0
  %91 = ptrtoint %"class.spvtools::opt::Instruction"** %90 to i64
  %92 = sub i64 %91, %86
  %93 = and i64 %92, 32
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %118

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %37, i64 -1
  %97 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %87, i64 -1
  %98 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %37, i64 -1, i32 1
  %102 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %87, i64 -1, i32 1
  %103 = bitcast %"class.spvtools::utils::BitVector"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 24, i1 false) #10
  %104 = bitcast %"class.spvtools::utils::BitVector"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.spvtools::utils::BitVector"* %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %87, i64 -1, i32 1, i32 0, i32 0, i32 1
  %108 = bitcast i64** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %37, i64 -1, i32 1, i32 0, i32 0, i32 1
  %111 = bitcast i64** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %87, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast i64** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %37, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %116 = bitcast i64** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = bitcast %"class.spvtools::utils::BitVector"* %102 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 24, i1 false) #10
  br label %118

118:                                              ; preds = %95, %89
  %119 = phi %"struct.spvtools::opt::VectorDCE::WorkListItem"* [ undef, %89 ], [ %96, %95 ]
  %120 = phi %"struct.spvtools::opt::VectorDCE::WorkListItem"* [ %37, %89 ], [ %96, %95 ]
  %121 = phi %"struct.spvtools::opt::VectorDCE::WorkListItem"* [ %87, %89 ], [ %97, %95 ]
  %122 = icmp ult i64 %92, 32
  br i1 %122, label %171, label %123

123:                                              ; preds = %118, %123
  %124 = phi %"struct.spvtools::opt::VectorDCE::WorkListItem"* [ %148, %123 ], [ %120, %118 ]
  %125 = phi %"struct.spvtools::opt::VectorDCE::WorkListItem"* [ %149, %123 ], [ %121, %118 ]
  %126 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %124, i64 -1
  %127 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %125, i64 -1
  %128 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %124, i64 -1, i32 1
  %132 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %125, i64 -1, i32 1
  %133 = bitcast %"class.spvtools::utils::BitVector"* %131 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #10
  %134 = bitcast %"class.spvtools::utils::BitVector"* %132 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.spvtools::utils::BitVector"* %131 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %125, i64 -1, i32 1, i32 0, i32 0, i32 1
  %138 = bitcast i64** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %124, i64 -1, i32 1, i32 0, i32 0, i32 1
  %141 = bitcast i64** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %125, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %143 = bitcast i64** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %124, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %146 = bitcast i64** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = bitcast %"class.spvtools::utils::BitVector"* %132 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 24, i1 false) #10
  %148 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %124, i64 -2
  %149 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %125, i64 -2
  %150 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.spvtools::opt::VectorDCE::WorkListItem"* %148 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %124, i64 -2, i32 1
  %154 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %125, i64 -2, i32 1
  %155 = bitcast %"class.spvtools::utils::BitVector"* %153 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 24, i1 false) #10
  %156 = bitcast %"class.spvtools::utils::BitVector"* %154 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.spvtools::utils::BitVector"* %153 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %125, i64 -2, i32 1, i32 0, i32 0, i32 1
  %160 = bitcast i64** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %124, i64 -2, i32 1, i32 0, i32 0, i32 1
  %163 = bitcast i64** %162 to i64*
  store i64 %161, i64* %163, align 8
  %164 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %125, i64 -2, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %165 = bitcast i64** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %124, i64 -2, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %168 = bitcast i64** %167 to i64*
  store i64 %166, i64* %168, align 8
  %169 = bitcast %"class.spvtools::utils::BitVector"* %154 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %169, i8 0, i64 24, i1 false) #10
  %170 = icmp eq %"struct.spvtools::opt::VectorDCE::WorkListItem"* %149, %85
  br i1 %170, label %171, label %123

171:                                              ; preds = %123, %118
  %172 = phi %"struct.spvtools::opt::VectorDCE::WorkListItem"* [ %119, %118 ], [ %148, %123 ]
  %173 = load i64, i64* %6, align 8
  %174 = load %"struct.spvtools::opt::VectorDCE::WorkListItem"*, %"struct.spvtools::opt::VectorDCE::WorkListItem"** %3, align 8
  br label %175

175:                                              ; preds = %81, %171
  %176 = phi %"struct.spvtools::opt::VectorDCE::WorkListItem"* [ %174, %171 ], [ %85, %81 ]
  %177 = phi %"struct.spvtools::opt::VectorDCE::WorkListItem"* [ %172, %171 ], [ %37, %81 ]
  %178 = phi i64 [ %173, %171 ], [ %86, %81 ]
  %179 = ptrtoint %"struct.spvtools::opt::VectorDCE::WorkListItem"* %177 to i64
  store i64 %179, i64* %6, align 8
  store i64 %83, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %180 = inttoptr i64 %178 to %"struct.spvtools::opt::VectorDCE::WorkListItem"*
  %181 = icmp eq %"struct.spvtools::opt::VectorDCE::WorkListItem"* %176, %180
  br i1 %181, label %195, label %182

182:                                              ; preds = %175, %193
  %183 = phi %"struct.spvtools::opt::VectorDCE::WorkListItem"* [ %184, %193 ], [ %176, %175 ]
  %184 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %183, i64 -1
  %185 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %183, i64 -1, i32 1, i32 0, i32 0, i32 0
  %186 = load i64*, i64** %185, align 8
  %187 = icmp eq i64* %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %182
  %189 = ptrtoint i64* %186 to i64
  %190 = getelementptr inbounds %"struct.spvtools::opt::VectorDCE::WorkListItem", %"struct.spvtools::opt::VectorDCE::WorkListItem"* %183, i64 -1, i32 1, i32 0, i32 0, i32 1
  %191 = bitcast i64** %190 to i64*
  store i64 %189, i64* %191, align 8
  %192 = bitcast i64* %186 to i8*
  tail call void @_ZdlPv(i8* %192) #11
  br label %193

193:                                              ; preds = %188, %182
  %194 = icmp eq %"struct.spvtools::opt::VectorDCE::WorkListItem"* %184, %180
  br i1 %194, label %195, label %182

195:                                              ; preds = %193, %175
  %196 = icmp eq i64 %178, 0
  br i1 %196, label %199, label %197

197:                                              ; preds = %195
  %198 = inttoptr i64 %178 to i8*
  tail call void @_ZdlPv(i8* %198) #11
  br label %199

199:                                              ; preds = %195, %197
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!5 = distinct !{!5, !6, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9VectorDCE18FindLiveComponentsEPNS5_8FunctionEPNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9VectorDCE18FindLiveComponentsEPNS5_8FunctionEPNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!10 = distinct !{!10, !11, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9VectorDCE19RewriteInstructionsEPNS5_8FunctionERKNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_2FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9VectorDCE19RewriteInstructionsEPNS5_8FunctionERKNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_2FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!12 = !{i8 0, i8 2}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!16 = distinct !{!16, !17, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS5_11InstructionERKNS4_5utils9BitVectorEPNS_13unordered_mapIjSA_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSA_EEEEEEPNS_6vectorINS6_12WorkListItemENSI_ISQ_EEEEE3$_1FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS5_11InstructionERKNS4_5utils9BitVectorEPNS_13unordered_mapIjSA_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSA_EEEEEEPNS_6vectorINS6_12WorkListItemENSI_ISQ_EEEEE3$_1FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!18 = !{i64 0, i64 65}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__19make_pairIjRN8spvtools5utils9BitVectorEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__19make_pairIjRN8spvtools5utils9BitVectorEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_"}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.unroll.disable"}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !30}
!30 = !{!"llvm.loop.isvectorized", i32 1}
!31 = distinct !{!31, !30}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !30}
!38 = distinct !{!38, !23}
!39 = distinct !{!39, !30}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISS_EEEEEEmOT_DpOT0_"}
!43 = distinct !{!43, !23}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_IST_EEEEEEmOT_DpOT0_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_IST_EEEEEEmOT_DpOT0_"}
!47 = !{!48, !50}
!48 = distinct !{!48, !49, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!50 = distinct !{!50, !51, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9VectorDCE18FindLiveComponentsEPNS5_8FunctionEPNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9VectorDCE18FindLiveComponentsEPNS5_8FunctionEPNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!52 = !{!53, !55}
!53 = distinct !{!53, !54, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!54 = distinct !{!54, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!55 = distinct !{!55, !56, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS5_11InstructionERKNS4_5utils9BitVectorEPNS_13unordered_mapIjSA_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSA_EEEEEEPNS_6vectorINS6_12WorkListItemENSI_ISQ_EEEEE3$_1FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9VectorDCE14MarkUsesAsLiveEPNS5_11InstructionERKNS4_5utils9BitVectorEPNS_13unordered_mapIjSA_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSA_EEEEEEPNS_6vectorINS6_12WorkListItemENSI_ISQ_EEEEE3$_1FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!57 = distinct !{!57, !23}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashIRKNS_4pairIKjS4_EEJEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!60 = distinct !{!60, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashIRKNS_4pairIKjS4_EEJEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISQ_EEEEEEmOT_DpOT0_"}
!61 = !{!62, !64}
!62 = distinct !{!62, !63, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!63 = distinct !{!63, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!64 = distinct !{!64, !65, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9VectorDCE19RewriteInstructionsEPNS5_8FunctionERKNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_2FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!65 = distinct !{!65, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9VectorDCE19RewriteInstructionsEPNS5_8FunctionERKNS_13unordered_mapIjNS4_5utils9BitVectorENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjSB_EEEEEEE3$_2FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashINS_4pairIjS4_EEJEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!68 = distinct !{!68, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools5utils9BitVectorEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashINS_4pairIjS4_EEJEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_"}
