; ModuleID = '../../components/sqlite_proto/table_manager.cc'
source_filename = "../../components/sqlite_proto/table_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sqlite_proto::TableManager" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.1", %"class.base::AtomicFlag", %class.scoped_refptr, %"class.sql::Database"* }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.17", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::HistogramBase" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.26" = type { %"class.base::internal::CallbackBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>

$_ZN4base8internal7InvokerINS0_9BindStateIMN12sqlite_proto12TableManagerEFvNS_12OnceCallbackIFvPN3sql8DatabaseEEEEEJ13scoped_refptrIS4_ESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN12sqlite_proto12TableManagerEFvNS_12OnceCallbackIFvPN3sql8DatabaseEEEEEJ13scoped_refptrIS3_ES9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN12sqlite_proto12TableManagerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sqlite_proto::TableManager"*, %"class.base::Location"*, %"class.base::OnceCallback"*)* @_ZN12sqlite_proto12TableManager14ScheduleDBTaskERKN4base8LocationENS1_12OnceCallbackIFvPN3sql8DatabaseEEEE to i8*), i8* bitcast (void (%"class.sqlite_proto::TableManager"*, %"class.base::OnceCallback"*)* @_ZN12sqlite_proto12TableManager25ExecuteDBTaskOnDBSequenceEN4base12OnceCallbackIFvPN3sql8DatabaseEEEE to i8*), i8* bitcast (void (%"class.sqlite_proto::TableManager"*)* @_ZN12sqlite_proto12TableManagerD2Ev to i8*), i8* bitcast (void (%"class.sqlite_proto::TableManager"*)* @_ZN12sqlite_proto12TableManagerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN12sqlite_proto12TableManagerD1Ev = hidden unnamed_addr alias void (%"class.sqlite_proto::TableManager"*), void (%"class.sqlite_proto::TableManager"*)* @_ZN12sqlite_proto12TableManagerD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.base::SequencedTaskRunner"* @_ZN12sqlite_proto12TableManager13GetTaskRunnerEv(%"class.sqlite_proto::TableManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %2, align 8
  ret %"class.base::SequencedTaskRunner"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12sqlite_proto12TableManager14ScheduleDBTaskERKN4base8LocationENS1_12OnceCallbackIFvPN3sql8DatabaseEEEE(%"class.sqlite_proto::TableManager"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture) unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.26", align 8
  %5 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 3, i32 0
  %6 = bitcast %"class.base::SequencedTaskRunner"** %5 to %"class.base::TaskRunner"**
  %7 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %6, align 8
  %8 = tail call i8* @_Znwm(i64 64) #11, !noalias !2
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12sqlite_proto12TableManagerEFvNS_12OnceCallbackIFvPN3sql8DatabaseEEEEEJ13scoped_refptrIS4_ESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12sqlite_proto12TableManagerEFvNS_12OnceCallbackIFvPN3sql8DatabaseEEEEEJ13scoped_refptrIS3_ES9_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !2
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to <2 x i64>*
  store <2 x i64> <i64 9, i64 0>, <2 x i64>* %11, align 8, !noalias !2
  %12 = getelementptr inbounds i8, i8* %8, i64 48
  %13 = bitcast i8* %12 to %"class.sqlite_proto::TableManager"**
  store %"class.sqlite_proto::TableManager"* %0, %"class.sqlite_proto::TableManager"** %13, align 8, !noalias !2
  %14 = icmp eq %"class.sqlite_proto::TableManager"* %0, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic, !noalias !2
  br label %18

18:                                               ; preds = %3, %15
  %19 = getelementptr inbounds i8, i8* %8, i64 56
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !2
  %23 = bitcast i8* %19 to i64*
  store i64 %22, i64* %23, align 8, !noalias !2
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8, !noalias !2
  %24 = bitcast %"class.base::OnceCallback.26"* %4 to i8**
  store i8* %8, i8** %24, align 8, !alias.scope !2
  %25 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %7, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback.26"* nonnull %4) #12
  %26 = getelementptr inbounds %"class.base::OnceCallback.26", %"class.base::OnceCallback.26"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #12
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.26"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12sqlite_proto12TableManager25ExecuteDBTaskOnDBSequenceEN4base12OnceCallbackIFvPN3sql8DatabaseEEEE(%"class.sqlite_proto::TableManager"* nocapture readonly, %"class.base::OnceCallback"* nocapture) unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i8, i8* %4 acquire, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %22

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 4
  %9 = load %"class.sql::Database"*, %"class.sql::Database"** %8, align 8
  %10 = icmp eq %"class.sql::Database"* %9, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %18 = inttoptr i64 %15 to %"class.base::internal::BindStateBase"*
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %18, i64 0, i32 1
  %20 = bitcast void ()** %19 to void (%"class.base::internal::BindStateBase"*, %"class.sql::Database"*)**
  %21 = load void (%"class.base::internal::BindStateBase"*, %"class.sql::Database"*)*, void (%"class.base::internal::BindStateBase"*, %"class.sql::Database"*)** %20, align 8
  tail call void %21(%"class.base::internal::BindStateBase"* %18, %"class.sql::Database"* nonnull %9) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  br label %22

22:                                               ; preds = %2, %7, %11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN12sqlite_proto12TableManager18CantAccessDatabaseEv(%"class.sqlite_proto::TableManager"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 acquire, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 4
  %7 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %8 = icmp eq %"class.sql::Database"* %7, null
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.sql::Database"* @_ZN12sqlite_proto12TableManager2DBEv(%"class.sqlite_proto::TableManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 4
  %3 = load %"class.sql::Database"*, %"class.sql::Database"** %2, align 8
  ret %"class.sql::Database"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12sqlite_proto12TableManagerC2E13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.sqlite_proto::TableManager"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.base::SequencedTaskRunner"* %1 to i64
  %4 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN12sqlite_proto12TableManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 2
  tail call void @_ZN4base10AtomicFlagC1Ev(%"class.base::AtomicFlag"* %6) #12
  %7 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 3
  %8 = bitcast %class.scoped_refptr* %7 to i64*
  store i64 %3, i64* %8, align 8
  %9 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 4
  store %"class.sql::Database"* null, %"class.sql::Database"** %9, align 8
  ret void
}

declare void @_ZN4base10AtomicFlagC1Ev(%"class.base::AtomicFlag"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12sqlite_proto12TableManagerD2Ev(%"class.sqlite_proto::TableManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN12sqlite_proto12TableManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #12
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 2
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %15) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"*) unnamed_addr #5

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN12sqlite_proto12TableManagerD0Ev(%"class.sqlite_proto::TableManager"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12sqlite_proto12TableManager10InitializeEPN3sql8DatabaseE(%"class.sqlite_proto::TableManager"*, %"class.sql::Database"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 4
  store %"class.sql::Database"* %1, %"class.sql::Database"** %3, align 8
  %4 = bitcast %"class.sqlite_proto::TableManager"* %0 to void (%"class.sqlite_proto::TableManager"*)***
  %5 = load void (%"class.sqlite_proto::TableManager"*)**, void (%"class.sqlite_proto::TableManager"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.sqlite_proto::TableManager"*)*, void (%"class.sqlite_proto::TableManager"*)** %5, i64 4
  %7 = load void (%"class.sqlite_proto::TableManager"*)*, void (%"class.sqlite_proto::TableManager"*)** %6, align 8
  tail call void %7(%"class.sqlite_proto::TableManager"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12sqlite_proto12TableManager12SetCancelledEv(%"class.sqlite_proto::TableManager"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 2
  tail call void @_ZN4base10AtomicFlag3SetEv(%"class.base::AtomicFlag"* %2) #12
  ret void
}

declare void @_ZN4base10AtomicFlag3SetEv(%"class.base::AtomicFlag"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN12sqlite_proto12TableManager11IsCancelledEv(%"class.sqlite_proto::TableManager"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 acquire, align 1
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12sqlite_proto12TableManager7ResetDBEv(%"class.sqlite_proto::TableManager"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %0, i64 0, i32 4
  store %"class.sql::Database"* null, %"class.sql::Database"** %2, align 8
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN12sqlite_proto12TableManagerEFvNS_12OnceCallbackIFvPN3sql8DatabaseEEEEEJ13scoped_refptrIS4_ESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %6 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %10
  %15 = bitcast i8* %14 to %"class.sqlite_proto::TableManager"*
  %16 = and i64 %7, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %1
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %7, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.sqlite_proto::TableManager"*, %"class.base::OnceCallback"*)**
  %24 = load void (%"class.sqlite_proto::TableManager"*, %"class.base::OnceCallback"*)*, void (%"class.sqlite_proto::TableManager"*, %"class.base::OnceCallback"*)** %23, align 8
  br label %27

25:                                               ; preds = %1
  %26 = inttoptr i64 %7 to void (%"class.sqlite_proto::TableManager"*, %"class.base::OnceCallback"*)*
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi void (%"class.sqlite_proto::TableManager"*, %"class.base::OnceCallback"*)* [ %24, %18 ], [ %26, %25 ]
  %29 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::BindStateBase"**
  %30 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %31, i64* %32, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  call void %28(%"class.sqlite_proto::TableManager"* %15, %"class.base::OnceCallback"* nonnull %2) #12
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN12sqlite_proto12TableManagerEFvNS_12OnceCallbackIFvPN3sql8DatabaseEEEEEJ13scoped_refptrIS3_ES9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #12
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.sqlite_proto::TableManager"**
  %8 = load %"class.sqlite_proto::TableManager"*, %"class.sqlite_proto::TableManager"** %7, align 8
  %9 = icmp eq %"class.sqlite_proto::TableManager"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.sqlite_proto::TableManager", %"class.sqlite_proto::TableManager"* %8, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe.1"* %16 to %"class.sqlite_proto::TableManager"*
  %18 = bitcast %"class.base::RefCountedThreadSafe.1"* %16 to void (%"class.sqlite_proto::TableManager"*)***
  %19 = load void (%"class.sqlite_proto::TableManager"*)**, void (%"class.sqlite_proto::TableManager"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.sqlite_proto::TableManager"*)*, void (%"class.sqlite_proto::TableManager"*)** %19, i64 3
  %21 = load void (%"class.sqlite_proto::TableManager"*)*, void (%"class.sqlite_proto::TableManager"*)** %20, align 8
  tail call void %21(%"class.sqlite_proto::TableManager"* nonnull %17) #12
  br label %22

22:                                               ; preds = %3, %10, %15
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %22, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12sqlite_proto12TableManagerEFvNS2_IFvPN3sql8DatabaseEEEEEJPS4_S9_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12sqlite_proto12TableManagerEFvNS2_IFvPN3sql8DatabaseEEEEEJPS4_S9_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN12sqlite_proto12TableManagerEFvNS_12OnceCallbackIFvPN3sql8DatabaseEEEEEJPS2_S8_EEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN12sqlite_proto12TableManagerEFvNS_12OnceCallbackIFvPN3sql8DatabaseEEEEEJPS2_S8_EEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
