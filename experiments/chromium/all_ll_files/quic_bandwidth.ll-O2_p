; ModuleID = '../../net/third_party/quiche/src/quic/core/quic_bandwidth.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/quic_bandwidth.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::str_format_internal::FormatArgImpl" = type { %"union.absl::str_format_internal::FormatArgImpl::Data", i1 (i8*, i64, i32, i8*)* }
%"union.absl::str_format_internal::FormatArgImpl::Data" = type { i8* }

@.str = private unnamed_addr constant [23 x i8] c"%d bits/s (%d bytes/s)\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"%.2f %cbits/s (%.2f %cbytes/s)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic13QuicBandwidth16ToDebuggingValueEv(%"class.std::__1::basic_string"* noalias sret, %"class.quic::QuicBandwidth"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca [4 x %"class.absl::str_format_internal::FormatArgImpl"], align 8
  %4 = alloca [2 x %"class.absl::str_format_internal::FormatArgImpl"], align 8
  %5 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp slt i64 %6, 80000
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = sdiv i64 %6, 8
  %10 = bitcast [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #3, !noalias !2
  %11 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %4, i64 0, i64 0
  %12 = bitcast [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %4 to i64*
  store i64 %6, i64* %12, align 8, !noalias !2
  %13 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %4, i64 0, i64 0, i32 1
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchIlEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %13, align 8, !noalias !2
  %14 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %4, i64 0, i64 1
  %15 = bitcast %"class.absl::str_format_internal::FormatArgImpl"* %14 to i64*
  store i64 %9, i64* %15, align 8, !noalias !2
  %16 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %4, i64 0, i64 1, i32 1
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchIlEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %16, align 8, !noalias !2
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i64 22, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %11, i64 2) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #3, !noalias !2
  br label %41

17:                                               ; preds = %2
  %18 = icmp slt i64 %6, 8000000
  br i1 %18, label %24, label %19

19:                                               ; preds = %17
  %20 = icmp slt i64 %6, 8000000000
  %21 = select i1 %20, double 1.000000e+06, double 1.000000e+09
  %22 = select i1 %20, i64 -6148914691236517299, i64 -6148914691236517305
  %23 = inttoptr i64 %22 to i8*
  br label %24

24:                                               ; preds = %19, %17
  %25 = phi i8* [ inttoptr (i64 -6148914691236517269 to i8*), %17 ], [ %23, %19 ]
  %26 = phi double [ 1.000000e+03, %17 ], [ %21, %19 ]
  %27 = sitofp i64 %6 to double
  %28 = fdiv double %27, %26
  %29 = fmul double %28, 1.250000e-01
  %30 = bitcast [4 x %"class.absl::str_format_internal::FormatArgImpl"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %30) #3, !noalias !5
  %31 = getelementptr inbounds [4 x %"class.absl::str_format_internal::FormatArgImpl"], [4 x %"class.absl::str_format_internal::FormatArgImpl"]* %3, i64 0, i64 0
  %32 = bitcast [4 x %"class.absl::str_format_internal::FormatArgImpl"]* %3 to double*
  store double %28, double* %32, align 8, !noalias !5
  %33 = getelementptr inbounds [4 x %"class.absl::str_format_internal::FormatArgImpl"], [4 x %"class.absl::str_format_internal::FormatArgImpl"]* %3, i64 0, i64 0, i32 1
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchIdEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %33, align 8, !noalias !5
  %34 = getelementptr inbounds [4 x %"class.absl::str_format_internal::FormatArgImpl"], [4 x %"class.absl::str_format_internal::FormatArgImpl"]* %3, i64 0, i64 1, i32 0, i32 0
  store i8* %25, i8** %34, align 8, !noalias !5
  %35 = getelementptr inbounds [4 x %"class.absl::str_format_internal::FormatArgImpl"], [4 x %"class.absl::str_format_internal::FormatArgImpl"]* %3, i64 0, i64 1, i32 1
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchIcEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %35, align 8, !noalias !5
  %36 = getelementptr inbounds [4 x %"class.absl::str_format_internal::FormatArgImpl"], [4 x %"class.absl::str_format_internal::FormatArgImpl"]* %3, i64 0, i64 2
  %37 = bitcast %"class.absl::str_format_internal::FormatArgImpl"* %36 to double*
  store double %29, double* %37, align 8, !noalias !5
  %38 = getelementptr inbounds [4 x %"class.absl::str_format_internal::FormatArgImpl"], [4 x %"class.absl::str_format_internal::FormatArgImpl"]* %3, i64 0, i64 2, i32 1
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchIdEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %38, align 8, !noalias !5
  %39 = getelementptr inbounds [4 x %"class.absl::str_format_internal::FormatArgImpl"], [4 x %"class.absl::str_format_internal::FormatArgImpl"]* %3, i64 0, i64 3, i32 0, i32 0
  store i8* %25, i8** %39, align 8, !noalias !5
  %40 = getelementptr inbounds [4 x %"class.absl::str_format_internal::FormatArgImpl"], [4 x %"class.absl::str_format_internal::FormatArgImpl"]* %3, i64 0, i64 3, i32 1
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchIcEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %40, align 8, !noalias !5
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i64 30, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %31, i64 4) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %30) #3, !noalias !5
  br label %41

41:                                               ; preds = %24, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* sret, i8*, i64, %"class.absl::str_format_internal::FormatArgImpl"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZN4absl19str_format_internal13FormatArgImpl8DispatchIlEEbNS1_4DataENS0_24FormatConversionSpecImplEPv(i8*, i64, i32, i8*) #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZN4absl19str_format_internal13FormatArgImpl8DispatchIdEEbNS1_4DataENS0_24FormatConversionSpecImplEPv(i8*, i64, i32, i8*) #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZN4absl19str_format_internal13FormatArgImpl8DispatchIcEEbNS1_4DataENS0_24FormatConversionSpecImplEPv(i8*, i64, i32, i8*) #0 align 2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4absl9StrFormatIJllEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!4 = distinct !{!4, !"_ZN4absl9StrFormatIJllEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4absl9StrFormatIJdcdcEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!7 = distinct !{!7, !"_ZN4absl9StrFormatIJdcdcEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
