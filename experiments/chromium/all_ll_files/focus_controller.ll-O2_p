; ModuleID = '../../ui/wm/core/focus_controller.cc'
source_filename = "../../ui/wm/core/focus_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::ClassProperty" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.aura::Window"* }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.41", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", %"class.std::__1::vector.60", i32, i32, i32, [4 x i8], %"class.base::ObserverList.67", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.79", %"class.base::WeakPtr.85" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.10", %"class.std::__1::vector.17", %"class.ui::EventHandler"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.12" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.32" }
%"class.std::__1::map.32" = type { %"class.std::__1::__tree.33" }
%"class.std::__1::__tree.33" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type opaque
%"class.aura::WindowDelegate" = type opaque
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.67" = type <{ %"class.std::__1::vector.68", %"class.base::LinkedList.76", i64, i32, [4 x i8] }>
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.71" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.70 }
%class.scoped_refptr.70 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.76" = type { %"class.base::LinkNode.77" }
%"class.base::LinkNode.77" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.85" = type { %"class.base::internal::WeakPtrBase" }
%"class.wm::FocusController" = type { %"class.wm::ActivationClient", %"class.aura::client::FocusClient", %"class.ui::EventHandler", %"class.aura::WindowObserver", %"class.aura::Window"*, %"class.aura::Window"*, i8, %"class.absl::optional", %"class.std::__1::unique_ptr.86", %"class.base::ObserverList.92", %"class.base::ObserverList.96", %"class.base::ScopedMultiSourceObservation" }
%"class.wm::ActivationClient" = type { i32 (...)** }
%"class.aura::client::FocusClient" = type { i32 (...)** }
%"class.aura::WindowObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.wm::FocusRules"* }
%"class.base::ObserverList.92" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.93", i64, i32, [4 x i8] }>
%"class.base::LinkedList.93" = type { %"class.base::LinkNode.94" }
%"class.base::LinkNode.94" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.96" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.97", i64, i32, [4 x i8] }>
%"class.base::LinkedList.97" = type { %"class.base::LinkNode.98" }
%"class.base::LinkNode.98" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ScopedMultiSourceObservation" = type { %"class.aura::WindowObserver"*, %"class.std::__1::vector.41" }
%"class.wm::FocusRules" = type { i32 (...)** }
%"class.wm::ActivationChangeObserver" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.aura::client::FocusChangeObserver" = type { i32 (...)** }
%"class.aura::WindowTracker" = type { %"class.aura::WindowObserver", %"class.std::__1::vector.41" }
%"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode.98", %"class.base::ObserverList.96"* }
%"class.ui::KeyEvent" = type <{ %"class.ui::Event", i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.107" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.100" }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.102" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.base::flat_map.110"* }
%"class.base::flat_map.110" = type opaque
%"class.ui::DomKey" = type { i32 }
%"class.ui::MouseEvent" = type { %"class.ui::LocatedEvent", i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.ui::PointerDetails" = type { i32, float, float, float, float, float, float, float, i32, %"class.gfx::Vector2d" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.ui::ScrollEvent" = type <{ %"class.ui::MouseEvent", float, float, float, float, i32, i32, i32, [4 x i8] }>
%"class.ui::TouchEvent" = type <{ %"class.ui::LocatedEvent", i32, i8, i8, [2 x i8], %"struct.ui::PointerDetails", [4 x i8] }>
%"class.ui::GestureEvent" = type <{ %"class.ui::LocatedEvent", %"struct.ui::GestureEventDetails", i32, [4 x i8] }>
%"struct.ui::GestureEventDetails" = type { i32, %"union.ui::GestureEventDetails::Details", i32, i8, i32, i32, %"class.gfx::RectF" }
%"union.ui::GestureEventDetails::Details" = type { %struct.anon }
%struct.anon = type { float, float, i8 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"struct.aura::WindowObserver::HierarchyChangeParams" = type { %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, i32, %"class.aura::Window"* }
%"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode.118", i64, i64 }
%"class.base::internal::WeakLinkNode.118" = type { %"class.base::LinkNode.94", %"class.base::ObserverList.92"* }
%"class.ui::CancelModeEvent" = type { %"class.ui::Event" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>

$_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl = comdat any

$_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb = comdat any

$_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE = comdat any

$_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE = comdat any

$_ZN2wm16ActivationClientD2Ev = comdat any

$_ZN2wm16ActivationClientD0Ev = comdat any

$_ZN4aura6client11FocusClientD2Ev = comdat any

$_ZN4aura6client11FocusClientD0Ev = comdat any

$_ZTVN2wm16ActivationClientE = comdat any

$_ZTVN4aura6client11FocusClientE = comdat any

@_ZTVN2wm15FocusControllerE = hidden unnamed_addr constant { [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] } { [27 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.wm::FocusController"*, %"class.wm::ActivationChangeObserver"*)* @_ZN2wm15FocusController11AddObserverEPNS_24ActivationChangeObserverE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.wm::ActivationChangeObserver"*)* @_ZN2wm15FocusController14RemoveObserverEPNS_24ActivationChangeObserverE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::Window"*)* @_ZN2wm15FocusController14ActivateWindowEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::Window"*)* @_ZN2wm15FocusController16DeactivateWindowEPN4aura6WindowE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.wm::FocusController"*)* @_ZNK2wm15FocusController15GetActiveWindowEv to i8*), i8* bitcast (%"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)* @_ZNK2wm15FocusController20GetActivatableWindowEPN4aura6WindowE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)* @_ZNK2wm15FocusController17GetToplevelWindowEPKN4aura6WindowE to i8*), i8* bitcast (i1 (%"class.wm::FocusController"*, %"class.aura::Window"*)* @_ZNK2wm15FocusController17CanActivateWindowEPKN4aura6WindowE to i8*), i8* bitcast (void (%"class.wm::FocusController"*)* @_ZN2wm15FocusControllerD2Ev to i8*), i8* bitcast (void (%"class.wm::FocusController"*)* @_ZN2wm15FocusControllerD0Ev to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::client::FocusChangeObserver"*)* @_ZN2wm15FocusController11AddObserverEPN4aura6client19FocusChangeObserverE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::client::FocusChangeObserver"*)* @_ZN2wm15FocusController14RemoveObserverEPN4aura6client19FocusChangeObserverE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::Window"*)* @_ZN2wm15FocusController11FocusWindowEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::Window"*)* @_ZN2wm15FocusController28ResetFocusWithinActiveWindowEPN4aura6WindowE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.wm::FocusController"*)* @_ZN2wm15FocusController16GetFocusedWindowEv to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.ui::KeyEvent"*)* @_ZN2wm15FocusController10OnKeyEventEPN2ui8KeyEventE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.ui::MouseEvent"*)* @_ZN2wm15FocusController12OnMouseEventEPN2ui10MouseEventE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.ui::ScrollEvent"*)* @_ZN2wm15FocusController13OnScrollEventEPN2ui11ScrollEventE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.ui::TouchEvent"*)* @_ZN2wm15FocusController12OnTouchEventEPN2ui10TouchEventE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.ui::GestureEvent"*)* @_ZN2wm15FocusController14OnGestureEventEPN2ui12GestureEventE to i8*), i8* bitcast ({ i8*, i64 } (%"class.wm::FocusController"*)* @_ZNK2wm15FocusController13GetLogContextEv to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::Window"*, i1)* @_ZN2wm15FocusController25OnWindowVisibilityChangedEPN4aura6WindowEb to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::Window"*)* @_ZN2wm15FocusController18OnWindowDestroyingEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN2wm15FocusController25OnWindowHierarchyChangingERKN4aura14WindowObserver21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN2wm15FocusController24OnWindowHierarchyChangedERKN4aura14WindowObserver21HierarchyChangeParamsE to i8*)], [9 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.wm::FocusController"*)* @_ZThn8_N2wm15FocusControllerD1Ev to i8*), i8* bitcast (void (%"class.wm::FocusController"*)* @_ZThn8_N2wm15FocusControllerD0Ev to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::client::FocusChangeObserver"*)* @_ZThn8_N2wm15FocusController11AddObserverEPN4aura6client19FocusChangeObserverE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::client::FocusChangeObserver"*)* @_ZThn8_N2wm15FocusController14RemoveObserverEPN4aura6client19FocusChangeObserverE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::Window"*)* @_ZThn8_N2wm15FocusController11FocusWindowEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::Window"*)* @_ZThn8_N2wm15FocusController28ResetFocusWithinActiveWindowEPN4aura6WindowE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.wm::FocusController"*)* @_ZThn8_N2wm15FocusController16GetFocusedWindowEv to i8*)], [12 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.wm::FocusController"*)* @_ZThn16_N2wm15FocusControllerD1Ev to i8*), i8* bitcast (void (%"class.wm::FocusController"*)* @_ZThn16_N2wm15FocusControllerD0Ev to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::Event"*)* @_ZN2ui12EventHandler7OnEventEPNS_5EventE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.ui::KeyEvent"*)* @_ZThn16_N2wm15FocusController10OnKeyEventEPN2ui8KeyEventE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.ui::MouseEvent"*)* @_ZThn16_N2wm15FocusController12OnMouseEventEPN2ui10MouseEventE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.ui::ScrollEvent"*)* @_ZThn16_N2wm15FocusController13OnScrollEventEPN2ui11ScrollEventE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.ui::TouchEvent"*)* @_ZThn16_N2wm15FocusController12OnTouchEventEPN2ui10TouchEventE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.ui::GestureEvent"*)* @_ZThn16_N2wm15FocusController14OnGestureEventEPN2ui12GestureEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::CancelModeEvent"*)* @_ZN2ui12EventHandler12OnCancelModeEPNS_15CancelModeEventE to i8*), i8* bitcast ({ i8*, i64 } (%"class.wm::FocusController"*)* @_ZThn16_NK2wm15FocusController13GetLogContextEv to i8*)], [30 x i8*] [i8* inttoptr (i64 -56 to i8*), i8* null, i8* bitcast (void (%"class.wm::FocusController"*)* @_ZThn56_N2wm15FocusControllerD1Ev to i8*), i8* bitcast (void (%"class.wm::FocusController"*)* @_ZThn56_N2wm15FocusControllerD0Ev to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZThn56_N2wm15FocusController25OnWindowHierarchyChangingERKN4aura14WindowObserver21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZThn56_N2wm15FocusController24OnWindowHierarchyChangedERKN4aura14WindowObserver21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64)* @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::Window"*, i1)* @_ZThn56_N2wm15FocusController25OnWindowVisibilityChangedEPN4aura6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i32)* @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"*)* @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.wm::FocusController"*, %"class.aura::Window"*)* @_ZThn56_N2wm15FocusController18OnWindowDestroyingEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE to i8*)] }, align 8
@.str = private unnamed_addr constant [16 x i8] c"FocusController\00", align 1
@_ZN4aura6client9kModalKeyE = external local_unnamed_addr constant %"struct.ui::ClassProperty"*, align 8
@__const._ZN2wm15FocusController15SetActiveWindowENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowES5_.updating_activation = private unnamed_addr constant { %"class.absl::optional"*, { { { { i8, [7 x i8], %union.anon } } } } } { %"class.absl::optional"* inttoptr (i64 -6148914691236517206 to %"class.absl::optional"*), { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"class.aura::Window"* inttoptr (i64 -6148914691236517206 to %"class.aura::Window"*) } } } } } }, align 8
@_ZTVN2wm16ActivationClientE = linkonce_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.wm::ActivationClient"*)* @_ZN2wm16ActivationClientD2Ev to i8*), i8* bitcast (void (%"class.wm::ActivationClient"*)* @_ZN2wm16ActivationClientD0Ev to i8*)] }, comdat, align 8
@_ZTVN4aura6client11FocusClientE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura::client::FocusClient"*)* @_ZN4aura6client11FocusClientD2Ev to i8*), i8* bitcast (void (%"class.aura::client::FocusClient"*)* @_ZN4aura6client11FocusClientD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

@_ZN2wm15FocusControllerC1EPNS_10FocusRulesE = hidden unnamed_addr alias void (%"class.wm::FocusController"*, %"class.wm::FocusRules"*), void (%"class.wm::FocusController"*, %"class.wm::FocusRules"*)* @_ZN2wm15FocusControllerC2EPNS_10FocusRulesE
@_ZN2wm15FocusControllerD1Ev = hidden unnamed_addr alias void (%"class.wm::FocusController"*), void (%"class.wm::FocusController"*)* @_ZN2wm15FocusControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusControllerC2EPNS_10FocusRulesE(%"class.wm::FocusController"*, %"class.wm::FocusRules"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.wm::FocusController"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2wm16ActivationClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4aura6client11FocusClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 2
  tail call void @_ZN2ui12EventHandlerC2Ev(%"class.ui::EventHandler"* %4) #12
  %5 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 3
  tail call void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"* %5) #12
  %6 = bitcast %"class.wm::FocusController"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }, { [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }* @_ZTVN2wm15FocusControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }, { [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }* @_ZTVN2wm15FocusControllerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.ui::EventHandler", %"class.ui::EventHandler"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }, { [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }* @_ZTVN2wm15FocusControllerE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.aura::WindowObserver", %"class.aura::WindowObserver"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }, { [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }* @_ZTVN2wm15FocusControllerE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 8
  %12 = ptrtoint %"class.wm::FocusRules"* %1 to i64
  %13 = bitcast %"class.std::__1::unique_ptr.86"* %11 to i64*
  %14 = bitcast %"class.aura::Window"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 17, i1 false)
  store i64 %12, i64* %13, align 8
  %15 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9
  %16 = bitcast %"class.base::ObserverList.92"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #12
  %17 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %17, %"class.base::internal::LinkNodeBase"* %17, %"class.base::internal::LinkNodeBase"* %17) #12
  %18 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 2
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 3
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10
  %21 = bitcast %"class.base::ObserverList.96"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #12
  %22 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %22, %"class.base::internal::LinkNodeBase"* %22, %"class.base::internal::LinkNodeBase"* %22) #12
  %23 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 2
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 3
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 0
  store %"class.aura::WindowObserver"* %5, %"class.aura::WindowObserver"** %25, align 8
  %26 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1
  %27 = bitcast %"class.std::__1::vector.41"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #12
  ret void
}

declare void @_ZN2ui12EventHandlerC2Ev(%"class.ui::EventHandler"*) unnamed_addr #1

declare void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusControllerD2Ev(%"class.wm::FocusController"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.wm::FocusController"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }, { [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }* @_ZTVN2wm15FocusControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }, { [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }* @_ZTVN2wm15FocusControllerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.ui::EventHandler", %"class.ui::EventHandler"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }, { [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }* @_ZTVN2wm15FocusControllerE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.aura::WindowObserver", %"class.aura::WindowObserver"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }, { [27 x i8*], [9 x i8*], [12 x i8*], [30 x i8*] }* @_ZTVN2wm15FocusControllerE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.aura::Window"**, %"class.aura::Window"*** %8, align 8
  %10 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1, i32 0, i32 1
  %11 = load %"class.aura::Window"**, %"class.aura::Window"*** %10, align 8
  %12 = icmp eq %"class.aura::Window"** %9, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %1
  %14 = ptrtoint %"class.aura::Window"** %9 to i64
  br label %27

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 0
  br label %21

17:                                               ; preds = %21
  %18 = bitcast %"class.std::__1::vector.41"* %7 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = inttoptr i64 %19 to %"class.aura::Window"**
  br label %27

21:                                               ; preds = %21, %15
  %22 = phi %"class.aura::Window"** [ %9, %15 ], [ %25, %21 ]
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  %24 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %16, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %23, %"class.aura::WindowObserver"* %24) #12
  %25 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %22, i64 1
  %26 = icmp eq %"class.aura::Window"** %25, %11
  br i1 %26, label %17, label %21

27:                                               ; preds = %17, %13
  %28 = phi %"class.aura::Window"** [ %9, %13 ], [ %20, %17 ]
  %29 = phi i64 [ %14, %13 ], [ %19, %17 ]
  %30 = bitcast %"class.aura::Window"*** %10 to i64*
  store i64 %29, i64* %30, align 8
  %31 = icmp eq %"class.aura::Window"** %28, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = ptrtoint %"class.aura::Window"** %28 to i64
  store i64 %33, i64* %30, align 8
  %34 = bitcast %"class.aura::Window"** %28 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %27, %32
  %36 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 1, i32 0, i32 0, i32 1
  %37 = bitcast %"class.base::internal::LinkNodeBase"** %36 to %"class.base::LinkNode.98"**
  %38 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 1, i32 0
  %39 = load %"class.base::LinkNode.98"*, %"class.base::LinkNode.98"** %37, align 8
  %40 = icmp eq %"class.base::LinkNode.98"* %39, %38
  br i1 %40, label %53, label %41

41:                                               ; preds = %35, %50
  %42 = phi %"class.base::LinkNode.98"* [ %51, %50 ], [ %39, %35 ]
  %43 = getelementptr inbounds %"class.base::LinkNode.98", %"class.base::LinkNode.98"* %42, i64 1
  %44 = bitcast %"class.base::LinkNode.98"* %43 to %"class.base::ObserverList.96"**
  %45 = load %"class.base::ObserverList.96"*, %"class.base::ObserverList.96"** %44, align 8
  %46 = icmp eq %"class.base::ObserverList.96"* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  store %"class.base::ObserverList.96"* null, %"class.base::ObserverList.96"** %44, align 8
  %48 = getelementptr inbounds %"class.base::LinkNode.98", %"class.base::LinkNode.98"* %42, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %48) #12
  %49 = load %"class.base::LinkNode.98"*, %"class.base::LinkNode.98"** %37, align 8
  br label %50

50:                                               ; preds = %47, %41
  %51 = phi %"class.base::LinkNode.98"* [ %42, %41 ], [ %49, %47 ]
  %52 = icmp eq %"class.base::LinkNode.98"* %51, %38
  br i1 %52, label %53, label %41

53:                                               ; preds = %50, %35
  %54 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %54, align 8
  %56 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %55 to i64
  %59 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %60 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %55 to i8*
  tail call void @_ZdlPv(i8* %61) #13
  br label %62

62:                                               ; preds = %53, %57
  %63 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 1, i32 0, i32 0, i32 1
  %64 = bitcast %"class.base::internal::LinkNodeBase"** %63 to %"class.base::LinkNode.94"**
  %65 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 1, i32 0
  %66 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %64, align 8
  %67 = icmp eq %"class.base::LinkNode.94"* %66, %65
  br i1 %67, label %80, label %68

68:                                               ; preds = %62, %77
  %69 = phi %"class.base::LinkNode.94"* [ %78, %77 ], [ %66, %62 ]
  %70 = getelementptr inbounds %"class.base::LinkNode.94", %"class.base::LinkNode.94"* %69, i64 1
  %71 = bitcast %"class.base::LinkNode.94"* %70 to %"class.base::ObserverList.92"**
  %72 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %71, align 8
  %73 = icmp eq %"class.base::ObserverList.92"* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %68
  store %"class.base::ObserverList.92"* null, %"class.base::ObserverList.92"** %71, align 8
  %75 = getelementptr inbounds %"class.base::LinkNode.94", %"class.base::LinkNode.94"* %69, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %75) #12
  %76 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %64, align 8
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi %"class.base::LinkNode.94"* [ %69, %68 ], [ %76, %74 ]
  %79 = icmp eq %"class.base::LinkNode.94"* %78, %65
  br i1 %79, label %80, label %68

80:                                               ; preds = %77, %62
  %81 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %82 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %81, align 8
  %83 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %82 to i64
  %86 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %87 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %82 to i8*
  tail call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %80, %84
  %90 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %91 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %90, align 8
  store %"class.wm::FocusRules"* null, %"class.wm::FocusRules"** %90, align 8
  %92 = icmp eq %"class.wm::FocusRules"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.wm::FocusRules"* %91 to void (%"class.wm::FocusRules"*)***
  %95 = load void (%"class.wm::FocusRules"*)**, void (%"class.wm::FocusRules"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.wm::FocusRules"*)*, void (%"class.wm::FocusRules"*)** %95, i64 1
  %97 = load void (%"class.wm::FocusRules"*)*, void (%"class.wm::FocusRules"*)** %96, align 8
  tail call void %97(%"class.wm::FocusRules"* nonnull %91) #12
  br label %98

98:                                               ; preds = %89, %93
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %5) #12
  tail call void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"* %3) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2wm15FocusControllerD1Ev(%"class.wm::FocusController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 11, i32 1, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.43"* %2 to %"class.wm::FocusController"*
  tail call void @_ZN2wm15FocusControllerD2Ev(%"class.wm::FocusController"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N2wm15FocusControllerD1Ev(%"class.wm::FocusController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 11, i32 1, i32 0, i32 1
  %3 = bitcast %"class.aura::Window"*** %2 to %"class.wm::FocusController"*
  tail call void @_ZN2wm15FocusControllerD2Ev(%"class.wm::FocusController"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N2wm15FocusControllerD1Ev(%"class.wm::FocusController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 10, i32 1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::LinkNodeBase"** %2 to %"class.wm::FocusController"*
  tail call void @_ZN2wm15FocusControllerD2Ev(%"class.wm::FocusController"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusControllerD0Ev(%"class.wm::FocusController"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2wm15FocusControllerD2Ev(%"class.wm::FocusController"* %0) #12
  %2 = bitcast %"class.wm::FocusController"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2wm15FocusControllerD0Ev(%"class.wm::FocusController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 11, i32 1, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.43"* %2 to %"class.wm::FocusController"*
  tail call void @_ZN2wm15FocusControllerD2Ev(%"class.wm::FocusController"* %3) #12
  %4 = bitcast %"class.std::__1::__compressed_pair.43"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N2wm15FocusControllerD0Ev(%"class.wm::FocusController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 11, i32 1, i32 0, i32 1
  %3 = bitcast %"class.aura::Window"*** %2 to %"class.wm::FocusController"*
  tail call void @_ZN2wm15FocusControllerD2Ev(%"class.wm::FocusController"* %3) #12
  %4 = bitcast %"class.aura::Window"*** %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N2wm15FocusControllerD0Ev(%"class.wm::FocusController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 10, i32 1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::LinkNodeBase"** %2 to %"class.wm::FocusController"*
  tail call void @_ZN2wm15FocusControllerD2Ev(%"class.wm::FocusController"* %3) #12
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController11AddObserverEPNS_24ActivationChangeObserverE(%"class.wm::FocusController"*, %"class.wm::ActivationChangeObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9
  %4 = icmp eq %"class.wm::ActivationChangeObserver"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.wm::ActivationChangeObserver"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.wm::ActivationChangeObserver"* %1 to i64
  %32 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList.92"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList.92"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #14
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #14
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #13
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #12
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #13
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController14RemoveObserverEPNS_24ActivationChangeObserverE(%"class.wm::FocusController"*, %"class.wm::ActivationChangeObserver"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.wm::ActivationChangeObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode.94"**
  %32 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %31, align 8
  %33 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode.94"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #12
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController14ActivateWindowEPN4aura6WindowE(%"class.wm::FocusController"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.wm::FocusController"* %0 to void (%"class.wm::FocusController"*, %"class.aura::Window"*)***
  %4 = load void (%"class.wm::FocusController"*, %"class.aura::Window"*)**, void (%"class.wm::FocusController"*, %"class.aura::Window"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.wm::FocusController"*, %"class.aura::Window"*)*, void (%"class.wm::FocusController"*, %"class.aura::Window"*)** %4, i64 12
  %6 = load void (%"class.wm::FocusController"*, %"class.aura::Window"*)*, void (%"class.wm::FocusController"*, %"class.aura::Window"*)** %5, align 8
  tail call void %6(%"class.wm::FocusController"* %0, %"class.aura::Window"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController16DeactivateWindowEPN4aura6WindowE(%"class.wm::FocusController"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.aura::Window"* %1, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %6 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %5, align 8
  %7 = bitcast %"class.wm::FocusRules"* %6 to %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)***
  %8 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)**, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %8, i64 8
  %10 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %9, align 8
  %11 = tail call %"class.aura::Window"* %10(%"class.wm::FocusRules"* %6, %"class.aura::Window"* nonnull %1) #12
  %12 = bitcast %"class.wm::FocusController"* %0 to void (%"class.wm::FocusController"*, %"class.aura::Window"*)***
  %13 = load void (%"class.wm::FocusController"*, %"class.aura::Window"*)**, void (%"class.wm::FocusController"*, %"class.aura::Window"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.wm::FocusController"*, %"class.aura::Window"*)*, void (%"class.wm::FocusController"*, %"class.aura::Window"*)** %13, i64 12
  %15 = load void (%"class.wm::FocusController"*, %"class.aura::Window"*)*, void (%"class.wm::FocusController"*, %"class.aura::Window"*)** %14, align 8
  tail call void %15(%"class.wm::FocusController"* %0, %"class.aura::Window"* %11) #12
  br label %16

16:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.aura::Window"* @_ZNK2wm15FocusController15GetActiveWindowEv(%"class.wm::FocusController"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 4
  %3 = load %"class.aura::Window"*, %"class.aura::Window"** %2, align 8
  ret %"class.aura::Window"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZNK2wm15FocusController20GetActivatableWindowEPN4aura6WindowE(%"class.wm::FocusController"* nocapture readonly, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %3, align 8
  %5 = bitcast %"class.wm::FocusRules"* %4 to %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)***
  %6 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)**, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %6, i64 6
  %8 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %7, align 8
  %9 = tail call %"class.aura::Window"* %8(%"class.wm::FocusRules"* %4, %"class.aura::Window"* %1) #12
  ret %"class.aura::Window"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZNK2wm15FocusController17GetToplevelWindowEPKN4aura6WindowE(%"class.wm::FocusController"* nocapture readonly, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %3, align 8
  %5 = bitcast %"class.wm::FocusRules"* %4 to %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)***
  %6 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)**, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %6, i64 5
  %8 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %7, align 8
  %9 = tail call %"class.aura::Window"* %8(%"class.wm::FocusRules"* %4, %"class.aura::Window"* %1) #12
  ret %"class.aura::Window"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2wm15FocusController17CanActivateWindowEPKN4aura6WindowE(%"class.wm::FocusController"* nocapture readonly, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %3, align 8
  %5 = bitcast %"class.wm::FocusRules"* %4 to i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*)***
  %6 = load i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*)**, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %6, i64 3
  %8 = load i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.wm::FocusRules"* %4, %"class.aura::Window"* %1) #12
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController11AddObserverEPN4aura6client19FocusChangeObserverE(%"class.wm::FocusController"*, %"class.aura::client::FocusChangeObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10
  %4 = icmp eq %"class.aura::client::FocusChangeObserver"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.aura::client::FocusChangeObserver"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.aura::client::FocusChangeObserver"* %1 to i64
  %32 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList.96"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList.96"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #14
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #14
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #13
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #12
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #13
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2wm15FocusController11AddObserverEPN4aura6client19FocusChangeObserverE(%"class.wm::FocusController"*, %"class.aura::client::FocusChangeObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 11, i32 1, i32 0, i32 2
  %4 = bitcast %"class.std::__1::__compressed_pair.43"* %3 to %"class.wm::FocusController"*
  tail call void @_ZN2wm15FocusController11AddObserverEPN4aura6client19FocusChangeObserverE(%"class.wm::FocusController"* %4, %"class.aura::client::FocusChangeObserver"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController14RemoveObserverEPN4aura6client19FocusChangeObserverE(%"class.wm::FocusController"*, %"class.aura::client::FocusChangeObserver"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.aura::client::FocusChangeObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode.98"**
  %32 = load %"class.base::LinkNode.98"*, %"class.base::LinkNode.98"** %31, align 8
  %33 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode.98"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #12
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2wm15FocusController14RemoveObserverEPN4aura6client19FocusChangeObserverE(%"class.wm::FocusController"*, %"class.aura::client::FocusChangeObserver"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 11, i32 1, i32 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.43"* %3, i64 23
  %5 = bitcast %"class.std::__1::__compressed_pair.43"* %4 to %"class.base::internal::UncheckedObserverAdapter"**
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.43"* %3, i64 24
  %8 = bitcast %"class.std::__1::__compressed_pair.43"* %7 to %"class.base::internal::UncheckedObserverAdapter"**
  %9 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %8, align 8
  %10 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %6, %9
  %11 = bitcast %"class.aura::client::FocusChangeObserver"* %1 to i8*
  %12 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %9 to i64
  br i1 %10, label %21, label %13

13:                                               ; preds = %2, %18
  %14 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %19, %18 ], [ %6, %2 ]
  %15 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %14, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, %11
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %14, i64 1
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %9
  br i1 %20, label %52, label %13

21:                                               ; preds = %13, %2
  %22 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %6, %2 ], [ %14, %13 ]
  %23 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, %9
  br i1 %23, label %52, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %22, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.43"* %3, i64 28
  %30 = bitcast %"class.std::__1::__compressed_pair.43"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, -1
  store i64 %32, i64* %30, align 8
  br label %33

33:                                               ; preds = %28, %24
  %34 = getelementptr inbounds %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.43"* %3, i64 27
  %35 = bitcast %"class.std::__1::__compressed_pair.43"* %34 to %"class.base::LinkNode.98"**
  %36 = load %"class.base::LinkNode.98"*, %"class.base::LinkNode.98"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.43"* %3, i64 26
  %38 = bitcast %"class.std::__1::__compressed_pair.43"* %37 to %"class.base::LinkNode.98"*
  %39 = icmp eq %"class.base::LinkNode.98"* %36, %38
  br i1 %39, label %40, label %51

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %22, i64 1
  %42 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %41 to i64
  %43 = sub i64 %12, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %22 to i8*
  %48 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %41 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 %43, i1 false) #12
  br label %49

49:                                               ; preds = %46, %40
  %50 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %22, i64 %44
  store %"class.base::internal::UncheckedObserverAdapter"* %50, %"class.base::internal::UncheckedObserverAdapter"** %8, align 8
  br label %52

51:                                               ; preds = %33
  store i8* null, i8** %25, align 8
  br label %52

52:                                               ; preds = %18, %21, %49, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController11FocusWindowEPN4aura6WindowE(%"class.wm::FocusController"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2wm15FocusController22FocusAndActivateWindowENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowE(%"class.wm::FocusController"* %0, i32 0, %"class.aura::Window"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController22FocusAndActivateWindowENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowE(%"class.wm::FocusController"*, i32, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.aura::WindowTracker", align 8
  %5 = icmp ne %"class.aura::Window"* %2, null
  br i1 %5, label %6, label %36

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 5
  %8 = load %"class.aura::Window"*, %"class.aura::Window"** %7, align 8
  %9 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* nonnull %2, %"class.aura::Window"* %8) #12
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 4
  %12 = load %"class.aura::Window"*, %"class.aura::Window"** %11, align 8
  %13 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* nonnull %2, %"class.aura::Window"* %12) #12
  br i1 %13, label %14, label %36

14:                                               ; preds = %10, %6
  %15 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 4
  %16 = load %"class.aura::Window"*, %"class.aura::Window"** %15, align 8
  %17 = icmp eq %"class.aura::Window"* %16, null
  br i1 %17, label %92, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %16, i64 0, i32 4
  %20 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN4aura6client9kModalKeyE, align 8
  %21 = tail call i32 @_ZNK2ui15PropertyHandler11GetPropertyINS_9ModalTypeEEET_PKNS_13ClassPropertyIS3_EE(%"class.ui::PropertyHandler"* %19, %"struct.ui::ClassProperty"* %20) #12
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %32

23:                                               ; preds = %18
  %24 = tail call %"class.aura::Window"* @_ZN2wm18GetTransientParentEPN4aura6WindowE(%"class.aura::Window"* nonnull %16) #12
  %25 = icmp eq %"class.aura::Window"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %23, %26
  %27 = phi %"class.aura::Window"* [ %30, %26 ], [ %24, %23 ]
  %28 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %27, i64 0, i32 13
  %29 = load %"class.aura::Window"*, %"class.aura::Window"** %28, align 8
  tail call void @_ZN4aura6Window15StackChildAtTopEPS0_(%"class.aura::Window"* %29, %"class.aura::Window"* nonnull %27) #12
  %30 = tail call %"class.aura::Window"* @_ZN2wm18GetTransientParentEPN4aura6WindowE(%"class.aura::Window"* nonnull %27) #12
  %31 = icmp eq %"class.aura::Window"* %30, null
  br i1 %31, label %32, label %26

32:                                               ; preds = %26, %23, %18
  %33 = load %"class.aura::Window"*, %"class.aura::Window"** %15, align 8
  %34 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %33, i64 0, i32 13
  %35 = load %"class.aura::Window"*, %"class.aura::Window"** %34, align 8
  tail call void @_ZN4aura6Window15StackChildAtTopEPS0_(%"class.aura::Window"* %35, %"class.aura::Window"* %33) #12
  br label %92

36:                                               ; preds = %10, %3
  %37 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %38 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %37, align 8
  %39 = bitcast %"class.wm::FocusRules"* %38 to %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)***
  %40 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)**, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %40, i64 7
  %42 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %41, align 8
  %43 = tail call %"class.aura::Window"* %42(%"class.wm::FocusRules"* %38, %"class.aura::Window"* %2) #12
  %44 = icmp ne %"class.aura::Window"* %43, null
  br i1 %44, label %45, label %52

45:                                               ; preds = %36
  %46 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %37, align 8
  %47 = bitcast %"class.wm::FocusRules"* %46 to %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)***
  %48 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)**, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %48, i64 6
  %50 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %49, align 8
  %51 = tail call %"class.aura::Window"* %50(%"class.wm::FocusRules"* %46, %"class.aura::Window"* nonnull %43) #12
  br label %52

52:                                               ; preds = %36, %45
  %53 = phi %"class.aura::Window"* [ %51, %45 ], [ null, %36 ]
  %54 = xor i1 %5, true
  %55 = icmp ne %"class.aura::Window"* %53, null
  %56 = and i1 %44, %55
  %57 = or i1 %56, %54
  br i1 %57, label %58, label %92

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 5
  %60 = load %"class.aura::Window"*, %"class.aura::Window"** %59, align 8
  %61 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %81

64:                                               ; preds = %58
  %65 = bitcast %"class.aura::WindowTracker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %65) #12
  %66 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %4, i64 0, i32 1, i32 0, i32 0
  %67 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %4, i64 0, i32 1, i32 0, i32 1
  %68 = bitcast %"class.aura::WindowTracker"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 48, i1 false)
  call void @_ZN4aura13WindowTrackerC1Ev(%"class.aura::WindowTracker"* nonnull %4) #12
  br i1 %44, label %69, label %70

69:                                               ; preds = %64
  call void @_ZN4aura13WindowTracker3AddEPNS_6WindowE(%"class.aura::WindowTracker"* nonnull %4, %"class.aura::Window"* nonnull %43) #12
  br label %70

70:                                               ; preds = %69, %64
  %71 = call zeroext i1 @_ZN2wm15FocusController15SetActiveWindowENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowES5_(%"class.wm::FocusController"* %0, i32 %1, %"class.aura::Window"* %2, %"class.aura::Window"* %53)
  br i1 %71, label %72, label %80

72:                                               ; preds = %70
  %73 = load %"class.aura::Window"**, %"class.aura::Window"*** %66, align 8
  %74 = load %"class.aura::Window"**, %"class.aura::Window"*** %67, align 8
  %75 = icmp eq %"class.aura::Window"** %73, %74
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = call %"class.aura::Window"* @_ZN4aura13WindowTracker3PopEv(%"class.aura::WindowTracker"* nonnull %4) #12
  br label %78

78:                                               ; preds = %76, %72
  %79 = phi %"class.aura::Window"* [ %77, %76 ], [ null, %72 ]
  call void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %65) #12
  br label %81

80:                                               ; preds = %70
  call void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %65) #12
  br label %92

81:                                               ; preds = %58, %78
  %82 = phi %"class.aura::Window"* [ %43, %58 ], [ %79, %78 ]
  %83 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 6
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %81
  %87 = load %"class.aura::Window"*, %"class.aura::Window"** %59, align 8
  %88 = icmp eq %"class.aura::Window"* %60, %87
  %89 = icmp eq %"class.aura::Window"* %87, null
  %90 = or i1 %88, %89
  br i1 %90, label %91, label %92

91:                                               ; preds = %86
  call void @_ZN2wm15FocusController16SetFocusedWindowEPN4aura6WindowE(%"class.wm::FocusController"* %0, %"class.aura::Window"* %82)
  br label %92

92:                                               ; preds = %80, %32, %14, %52, %81, %86, %91
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2wm15FocusController11FocusWindowEPN4aura6WindowE(%"class.wm::FocusController"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 11, i32 1, i32 0, i32 2
  %4 = bitcast %"class.std::__1::__compressed_pair.43"* %3 to %"class.wm::FocusController"*
  tail call void @_ZN2wm15FocusController22FocusAndActivateWindowENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowE(%"class.wm::FocusController"* %4, i32 0, %"class.aura::Window"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController28ResetFocusWithinActiveWindowEPN4aura6WindowE(%"class.wm::FocusController"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 4
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* nonnull %4, %"class.aura::Window"* %1) #12
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @_ZN2wm15FocusController16SetFocusedWindowEPN4aura6WindowE(%"class.wm::FocusController"* %0, %"class.aura::Window"* %1)
  br label %9

9:                                                ; preds = %2, %6, %8
  ret void
}

declare zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController16SetFocusedWindowEPN4aura6WindowE(%"class.wm::FocusController"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.aura::WindowTracker", align 8
  %4 = alloca %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 6
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %513

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 5
  %11 = load %"class.aura::Window"*, %"class.aura::Window"** %10, align 8
  %12 = icmp eq %"class.aura::Window"* %11, %1
  br i1 %12, label %513, label %13

13:                                               ; preds = %9
  store i8 1, i8* %6, align 1
  %14 = bitcast %"class.aura::WindowTracker"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #12
  %15 = bitcast %"class.aura::WindowTracker"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  call void @_ZN4aura13WindowTrackerC1Ev(%"class.aura::WindowTracker"* nonnull %3) #12
  %16 = icmp eq %"class.aura::Window"* %11, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  call void @_ZN4aura13WindowTracker3AddEPNS_6WindowE(%"class.aura::WindowTracker"* nonnull %3, %"class.aura::Window"* nonnull %11) #12
  br label %18

18:                                               ; preds = %13, %17
  %19 = load %"class.aura::Window"*, %"class.aura::Window"** %10, align 8
  %20 = icmp eq %"class.aura::Window"* %19, null
  br i1 %20, label %64, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  %23 = load %"class.aura::Window"**, %"class.aura::Window"*** %22, align 8
  %24 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1, i32 0, i32 1
  %25 = load %"class.aura::Window"**, %"class.aura::Window"*** %24, align 8
  %26 = icmp eq %"class.aura::Window"** %23, %25
  br i1 %26, label %34, label %27

27:                                               ; preds = %21, %31
  %28 = phi %"class.aura::Window"** [ %32, %31 ], [ %23, %21 ]
  %29 = load %"class.aura::Window"*, %"class.aura::Window"** %28, align 8
  %30 = icmp eq %"class.aura::Window"* %29, %19
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %28, i64 1
  %33 = icmp eq %"class.aura::Window"** %32, %25
  br i1 %33, label %64, label %27

34:                                               ; preds = %27, %21
  %35 = phi %"class.aura::Window"** [ %23, %21 ], [ %28, %27 ]
  %36 = icmp eq %"class.aura::Window"** %35, %25
  br i1 %36, label %64, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 4
  %39 = load %"class.aura::Window"*, %"class.aura::Window"** %38, align 8
  %40 = icmp eq %"class.aura::Window"* %19, %39
  br i1 %40, label %64, label %41

41:                                               ; preds = %37
  %42 = ptrtoint %"class.aura::Window"** %25 to i64
  br i1 %26, label %50, label %43

43:                                               ; preds = %41, %47
  %44 = phi %"class.aura::Window"** [ %48, %47 ], [ %23, %41 ]
  %45 = load %"class.aura::Window"*, %"class.aura::Window"** %44, align 8
  %46 = icmp eq %"class.aura::Window"* %45, %19
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %44, i64 1
  %49 = icmp eq %"class.aura::Window"** %48, %25
  br i1 %49, label %50, label %43

50:                                               ; preds = %47, %43, %41
  %51 = phi %"class.aura::Window"** [ %23, %41 ], [ %44, %43 ], [ %25, %47 ]
  %52 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %51, i64 1
  %53 = ptrtoint %"class.aura::Window"** %52 to i64
  %54 = sub i64 %42, %53
  %55 = ashr exact i64 %54, 3
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %50
  %58 = bitcast %"class.aura::Window"** %51 to i8*
  %59 = bitcast %"class.aura::Window"** %52 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 %54, i1 false) #12
  br label %60

60:                                               ; preds = %50, %57
  %61 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %51, i64 %55
  store %"class.aura::Window"** %61, %"class.aura::Window"*** %24, align 8
  %62 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 0
  %63 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %62, align 8
  call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %19, %"class.aura::WindowObserver"* %63) #12
  br label %64

64:                                               ; preds = %31, %34, %37, %18, %60
  store %"class.aura::Window"* %1, %"class.aura::Window"** %10, align 8
  %65 = icmp eq %"class.aura::Window"* %1, null
  br i1 %65, label %154, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  %68 = load %"class.aura::Window"**, %"class.aura::Window"*** %67, align 8
  %69 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1, i32 0, i32 1
  %70 = load %"class.aura::Window"**, %"class.aura::Window"*** %69, align 8
  %71 = icmp eq %"class.aura::Window"** %68, %70
  %72 = ptrtoint %"class.aura::Window"** %68 to i64
  br i1 %71, label %80, label %73

73:                                               ; preds = %66, %77
  %74 = phi %"class.aura::Window"** [ %78, %77 ], [ %68, %66 ]
  %75 = load %"class.aura::Window"*, %"class.aura::Window"** %74, align 8
  %76 = icmp eq %"class.aura::Window"* %75, %1
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %74, i64 1
  %79 = icmp eq %"class.aura::Window"** %78, %70
  br i1 %79, label %83, label %73

80:                                               ; preds = %73, %66
  %81 = phi %"class.aura::Window"** [ %68, %66 ], [ %74, %73 ]
  %82 = icmp eq %"class.aura::Window"** %81, %70
  br i1 %82, label %83, label %154

83:                                               ; preds = %77, %80
  %84 = ptrtoint %"class.aura::Window"* %1 to i64
  %85 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1
  %86 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1, i32 0, i32 2, i32 0, i32 0
  %87 = load %"class.aura::Window"**, %"class.aura::Window"*** %86, align 8
  %88 = icmp eq %"class.aura::Window"** %70, %87
  %89 = ptrtoint %"class.aura::Window"** %87 to i64
  br i1 %88, label %95, label %90

90:                                               ; preds = %83
  %91 = bitcast %"class.aura::Window"** %70 to i64*
  store i64 %84, i64* %91, align 8
  %92 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %70, i64 1
  %93 = ptrtoint %"class.aura::Window"** %92 to i64
  %94 = bitcast %"class.aura::Window"*** %69 to i64*
  store i64 %93, i64* %94, align 8
  br label %151

95:                                               ; preds = %83
  %96 = ptrtoint %"class.aura::Window"** %70 to i64
  %97 = bitcast %"class.aura::Window"*** %69 to i64*
  %98 = bitcast %"class.std::__1::vector.41"* %85 to i64*
  %99 = sub i64 %96, %72
  %100 = ashr exact i64 %99, 3
  %101 = add nsw i64 %100, 1
  %102 = icmp ugt i64 %101, 2305843009213693951
  br i1 %102, label %103, label %105

103:                                              ; preds = %95
  %104 = bitcast %"class.std::__1::vector.41"* %85 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %104) #14
  unreachable

105:                                              ; preds = %95
  %106 = bitcast %"class.aura::Window"*** %86 to i64*
  %107 = sub i64 %89, %72
  %108 = ashr exact i64 %107, 3
  %109 = icmp ult i64 %108, 1152921504606846975
  br i1 %109, label %110, label %118

110:                                              ; preds = %105
  %111 = ashr exact i64 %107, 2
  %112 = icmp ult i64 %111, %101
  %113 = select i1 %112, i64 %101, i64 %111
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %123, label %115

115:                                              ; preds = %110
  %116 = icmp ugt i64 %113, 2305843009213693951
  br i1 %116, label %117, label %118

117:                                              ; preds = %115
  call void @abort() #14
  unreachable

118:                                              ; preds = %115, %105
  %119 = phi i64 [ %113, %115 ], [ 2305843009213693951, %105 ]
  %120 = shl i64 %119, 3
  %121 = call i8* @_Znwm(i64 %120) #13
  %122 = bitcast i8* %121 to %"class.aura::Window"**
  br label %123

123:                                              ; preds = %118, %110
  %124 = phi i64 [ %119, %118 ], [ 0, %110 ]
  %125 = phi %"class.aura::Window"** [ %122, %118 ], [ null, %110 ]
  %126 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %125, i64 %100
  %127 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %125, i64 %124
  %128 = ptrtoint %"class.aura::Window"** %127 to i64
  %129 = bitcast %"class.aura::Window"** %126 to i64*
  store i64 %84, i64* %129, align 8
  %130 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %126, i64 1
  %131 = ptrtoint %"class.aura::Window"** %130 to i64
  %132 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %85, i64 0, i32 0, i32 0
  %133 = load %"class.aura::Window"**, %"class.aura::Window"*** %132, align 8
  %134 = load i64, i64* %97, align 8
  %135 = ptrtoint %"class.aura::Window"** %133 to i64
  %136 = sub i64 %134, %135
  %137 = ashr exact i64 %136, 3
  %138 = sub nsw i64 0, %137
  %139 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %126, i64 %138
  %140 = ptrtoint %"class.aura::Window"** %139 to i64
  %141 = icmp sgt i64 %136, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %123
  %143 = bitcast %"class.aura::Window"** %139 to i8*
  %144 = bitcast %"class.aura::Window"** %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 %136, i1 false) #12
  %145 = load %"class.aura::Window"**, %"class.aura::Window"*** %132, align 8
  br label %146

146:                                              ; preds = %142, %123
  %147 = phi %"class.aura::Window"** [ %133, %123 ], [ %145, %142 ]
  store i64 %140, i64* %98, align 8
  store i64 %131, i64* %97, align 8
  store i64 %128, i64* %106, align 8
  %148 = icmp eq %"class.aura::Window"** %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %146
  %150 = bitcast %"class.aura::Window"** %147 to i8*
  call void @_ZdlPv(i8* %150) #13
  br label %151

151:                                              ; preds = %90, %146, %149
  %152 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 0
  %153 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %152, align 8
  call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %1, %"class.aura::WindowObserver"* %153) #12
  br label %154

154:                                              ; preds = %80, %64, %151
  %155 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10
  %156 = bitcast %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %156) #12
  %157 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %158 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %159 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %160 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %155, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %161, i8 -86, i64 40, i1 false)
  %162 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %160, align 8, !noalias !3
  %163 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %164 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %163, align 8, !noalias !3
  %165 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %162, %164
  %166 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %166) #12
  br i1 %165, label %167, label %169

167:                                              ; preds = %154
  %168 = bitcast %"class.base::ObserverList.96"** %157 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #12, !alias.scope !3
  br label %209

169:                                              ; preds = %154
  store %"class.base::ObserverList.96"* %155, %"class.base::ObserverList.96"** %157, align 8
  %170 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %166, %"class.base::internal::LinkNodeBase"* %170) #12
  store i64 0, i64* %158, align 8
  %171 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 10, i32 3
  %172 = load i32, i32* %171, align 8
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %181, label %174

174:                                              ; preds = %169
  %175 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %163 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.base::ObserverList.96"* %155 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = sub i64 %176, %178
  %180 = ashr exact i64 %179, 3
  br label %181

181:                                              ; preds = %174, %169
  %182 = phi i64 [ %180, %174 ], [ -1, %169 ]
  store i64 %182, i64* %159, align 8
  %183 = load %"class.base::ObserverList.96"*, %"class.base::ObserverList.96"** %157, align 8
  %184 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %183, i64 0, i32 0, i32 0, i32 1
  %185 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = bitcast %"class.base::ObserverList.96"* %183 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = sub i64 %186, %188
  %190 = ashr exact i64 %189, 3
  %191 = icmp ult i64 %190, %182
  %192 = select i1 %191, i64 %190, i64 %182
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %209, label %194

194:                                              ; preds = %181
  %195 = inttoptr i64 %188 to %"class.base::internal::UncheckedObserverAdapter"*
  %196 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %183, i64 0, i32 0, i32 0, i32 0
  %197 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %195, i64 0, i32 0
  %198 = load i8*, i8** %197, align 8
  %199 = icmp eq i8* %198, null
  br i1 %199, label %200, label %209

200:                                              ; preds = %194, %204
  %201 = phi i64 [ %202, %204 ], [ 0, %194 ]
  %202 = add nuw i64 %201, 1
  store i64 %202, i64* %158, align 8
  %203 = icmp ult i64 %202, %192
  br i1 %203, label %204, label %209

204:                                              ; preds = %200
  %205 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %196, align 8
  %206 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %205, i64 %202, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = icmp eq i8* %207, null
  br i1 %208, label %200, label %209

209:                                              ; preds = %204, %200, %194, %181, %167
  %210 = bitcast %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %210) #12
  %211 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %212 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %213 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %214 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %215 = bitcast %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %215, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %214) #12
  %216 = bitcast %"class.base::ObserverList.96"** %211 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %216, i8 0, i64 24, i1 false) #12, !alias.scope !6
  %217 = load %"class.base::ObserverList.96"*, %"class.base::ObserverList.96"** %157, align 8
  br label %218

218:                                              ; preds = %461, %209
  %219 = phi %"class.base::ObserverList.96"* [ %217, %209 ], [ %459, %461 ]
  %220 = icmp eq %"class.base::ObserverList.96"* %219, null
  br i1 %220, label %236, label %221

221:                                              ; preds = %218
  %222 = load i64, i64* %158, align 8
  %223 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %219, i64 0, i32 0, i32 0, i32 1
  %224 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.base::ObserverList.96"* %219 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = sub i64 %225, %227
  %229 = ashr exact i64 %228, 3
  %230 = load i64, i64* %159, align 8
  %231 = icmp ult i64 %229, %230
  %232 = select i1 %231, i64 %229, i64 %230
  %233 = icmp eq i64 %222, %232
  br i1 %233, label %236, label %234

234:                                              ; preds = %221
  %235 = load %"class.base::ObserverList.96"*, %"class.base::ObserverList.96"** %211, align 8
  br label %252

236:                                              ; preds = %221, %218
  %237 = load %"class.base::ObserverList.96"*, %"class.base::ObserverList.96"** %211, align 8
  %238 = icmp eq %"class.base::ObserverList.96"* %237, null
  br i1 %238, label %352, label %239

239:                                              ; preds = %236
  %240 = load i64, i64* %212, align 8
  %241 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %237, i64 0, i32 0, i32 0, i32 1
  %242 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = bitcast %"class.base::ObserverList.96"* %237 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = sub i64 %243, %245
  %247 = ashr exact i64 %246, 3
  %248 = load i64, i64* %213, align 8
  %249 = icmp ult i64 %247, %248
  %250 = select i1 %249, i64 %247, i64 %248
  %251 = icmp eq i64 %240, %250
  br i1 %251, label %261, label %252

252:                                              ; preds = %239, %234
  %253 = phi %"class.base::ObserverList.96"* [ %235, %234 ], [ %237, %239 ]
  %254 = icmp eq %"class.base::ObserverList.96"* %219, %253
  %255 = load i64, i64* %158, align 8
  %256 = load i64, i64* %212, align 8
  %257 = icmp eq i64 %255, %256
  %258 = and i1 %254, %257
  br i1 %258, label %259, label %447

259:                                              ; preds = %252
  %260 = icmp eq %"class.base::ObserverList.96"* %219, null
  br i1 %260, label %352, label %261

261:                                              ; preds = %239, %259
  %262 = phi %"class.base::ObserverList.96"* [ %219, %259 ], [ %237, %239 ]
  %263 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %262, i64 0, i32 1
  %264 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %262, i64 0, i32 1, i32 0, i32 0, i32 1
  %265 = bitcast %"class.base::internal::LinkNodeBase"** %264 to %"class.base::LinkNode.98"**
  %266 = load %"class.base::LinkNode.98"*, %"class.base::LinkNode.98"** %265, align 8
  %267 = bitcast %"class.base::LinkedList.97"* %263 to %"class.base::LinkNode.98"**
  %268 = load %"class.base::LinkNode.98"*, %"class.base::LinkNode.98"** %267, align 8
  %269 = icmp eq %"class.base::LinkNode.98"* %266, %268
  br i1 %269, label %270, label %348

270:                                              ; preds = %261
  %271 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %262, i64 0, i32 0, i32 0, i32 0
  %272 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %271, align 8
  %273 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %262, i64 0, i32 0, i32 0, i32 1
  %274 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %273, align 8
  %275 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %272, %274
  br i1 %275, label %284, label %276

276:                                              ; preds = %270, %281
  %277 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %282, %281 ], [ %272, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 0, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %284, label %281

281:                                              ; preds = %276
  %282 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 1
  %283 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %282, %274
  br i1 %283, label %348, label %276

284:                                              ; preds = %276, %270
  %285 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %272, %270 ], [ %277, %276 ]
  %286 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %285 to i64
  %287 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %285, %274
  br i1 %287, label %348, label %288

288:                                              ; preds = %284
  %289 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %285, i64 1
  %290 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %289, %274
  br i1 %290, label %343, label %291

291:                                              ; preds = %288
  %292 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 -2, i32 0
  %293 = ptrtoint i8** %292 to i64
  %294 = sub i64 %293, %286
  %295 = lshr i64 %294, 3
  %296 = add nuw nsw i64 %295, 1
  %297 = and i64 %296, 3
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %317, label %299

299:                                              ; preds = %291, %312
  %300 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %314, %312 ], [ %289, %291 ]
  %301 = phi i64 [ %313, %312 ], [ %286, %291 ]
  %302 = phi i64 [ %315, %312 ], [ %297, %291 ]
  %303 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %300, i64 0, i32 0
  %304 = load i8*, i8** %303, align 8
  %305 = icmp eq i8* %304, null
  br i1 %305, label %312, label %306

306:                                              ; preds = %299
  %307 = ptrtoint i8* %304 to i64
  %308 = inttoptr i64 %301 to %"class.base::internal::UncheckedObserverAdapter"*
  %309 = inttoptr i64 %301 to i64*
  store i64 %307, i64* %309, align 8
  %310 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %308, i64 1
  %311 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %310 to i64
  br label %312

312:                                              ; preds = %306, %299
  %313 = phi i64 [ %301, %299 ], [ %311, %306 ]
  %314 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %300, i64 1
  %315 = add i64 %302, -1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %299, !llvm.loop !9

317:                                              ; preds = %312, %291
  %318 = phi i64 [ undef, %291 ], [ %313, %312 ]
  %319 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %289, %291 ], [ %314, %312 ]
  %320 = phi i64 [ %286, %291 ], [ %313, %312 ]
  %321 = icmp ult i64 %294, 24
  br i1 %321, label %339, label %322

322:                                              ; preds = %317, %574
  %323 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %576, %574 ], [ %319, %317 ]
  %324 = phi i64 [ %575, %574 ], [ %320, %317 ]
  %325 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 0, i32 0
  %326 = load i8*, i8** %325, align 8
  %327 = icmp eq i8* %326, null
  br i1 %327, label %334, label %328

328:                                              ; preds = %322
  %329 = ptrtoint i8* %326 to i64
  %330 = inttoptr i64 %324 to %"class.base::internal::UncheckedObserverAdapter"*
  %331 = inttoptr i64 %324 to i64*
  store i64 %329, i64* %331, align 8
  %332 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %330, i64 1
  %333 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %332 to i64
  br label %334

334:                                              ; preds = %328, %322
  %335 = phi i64 [ %324, %322 ], [ %333, %328 ]
  %336 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 1, i32 0
  %337 = load i8*, i8** %336, align 8
  %338 = icmp eq i8* %337, null
  br i1 %338, label %552, label %546

339:                                              ; preds = %574, %317
  %340 = phi i64 [ %318, %317 ], [ %575, %574 ]
  %341 = inttoptr i64 %340 to %"class.base::internal::UncheckedObserverAdapter"*
  %342 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %273, align 8
  br label %343

343:                                              ; preds = %339, %288
  %344 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %274, %288 ], [ %342, %339 ]
  %345 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %285, %288 ], [ %341, %339 ]
  %346 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %345, %344
  br i1 %346, label %348, label %347

347:                                              ; preds = %343
  store %"class.base::internal::UncheckedObserverAdapter"* %345, %"class.base::internal::UncheckedObserverAdapter"** %273, align 8
  br label %348

348:                                              ; preds = %281, %347, %343, %284, %261
  %349 = load %"class.base::ObserverList.96"*, %"class.base::ObserverList.96"** %211, align 8
  %350 = icmp eq %"class.base::ObserverList.96"* %349, null
  br i1 %350, label %352, label %351

351:                                              ; preds = %348
  store %"class.base::ObserverList.96"* null, %"class.base::ObserverList.96"** %211, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %214) #12
  br label %352

352:                                              ; preds = %236, %259, %348, %351
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %210) #12
  %353 = load %"class.base::ObserverList.96"*, %"class.base::ObserverList.96"** %157, align 8
  %354 = icmp eq %"class.base::ObserverList.96"* %353, null
  br i1 %354, label %445, label %355

355:                                              ; preds = %352
  %356 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %353, i64 0, i32 1
  %357 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %353, i64 0, i32 1, i32 0, i32 0, i32 1
  %358 = bitcast %"class.base::internal::LinkNodeBase"** %357 to %"class.base::LinkNode.98"**
  %359 = load %"class.base::LinkNode.98"*, %"class.base::LinkNode.98"** %358, align 8
  %360 = bitcast %"class.base::LinkedList.97"* %356 to %"class.base::LinkNode.98"**
  %361 = load %"class.base::LinkNode.98"*, %"class.base::LinkNode.98"** %360, align 8
  %362 = icmp eq %"class.base::LinkNode.98"* %359, %361
  br i1 %362, label %363, label %441

363:                                              ; preds = %355
  %364 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %353, i64 0, i32 0, i32 0, i32 0
  %365 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %364, align 8
  %366 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %353, i64 0, i32 0, i32 0, i32 1
  %367 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %366, align 8
  %368 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %365, %367
  br i1 %368, label %377, label %369

369:                                              ; preds = %363, %374
  %370 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %375, %374 ], [ %365, %363 ]
  %371 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %370, i64 0, i32 0
  %372 = load i8*, i8** %371, align 8
  %373 = icmp eq i8* %372, null
  br i1 %373, label %377, label %374

374:                                              ; preds = %369
  %375 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %370, i64 1
  %376 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %375, %367
  br i1 %376, label %441, label %369

377:                                              ; preds = %369, %363
  %378 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %365, %363 ], [ %370, %369 ]
  %379 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %378 to i64
  %380 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %378, %367
  br i1 %380, label %441, label %381

381:                                              ; preds = %377
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %378, i64 1
  %383 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %382, %367
  br i1 %383, label %436, label %384

384:                                              ; preds = %381
  %385 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %367, i64 -2, i32 0
  %386 = ptrtoint i8** %385 to i64
  %387 = sub i64 %386, %379
  %388 = lshr i64 %387, 3
  %389 = add nuw nsw i64 %388, 1
  %390 = and i64 %389, 3
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %410, label %392

392:                                              ; preds = %384, %405
  %393 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %407, %405 ], [ %382, %384 ]
  %394 = phi i64 [ %406, %405 ], [ %379, %384 ]
  %395 = phi i64 [ %408, %405 ], [ %390, %384 ]
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 0, i32 0
  %397 = load i8*, i8** %396, align 8
  %398 = icmp eq i8* %397, null
  br i1 %398, label %405, label %399

399:                                              ; preds = %392
  %400 = ptrtoint i8* %397 to i64
  %401 = inttoptr i64 %394 to %"class.base::internal::UncheckedObserverAdapter"*
  %402 = inttoptr i64 %394 to i64*
  store i64 %400, i64* %402, align 8
  %403 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %401, i64 1
  %404 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %403 to i64
  br label %405

405:                                              ; preds = %399, %392
  %406 = phi i64 [ %394, %392 ], [ %404, %399 ]
  %407 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %408 = add i64 %395, -1
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %410, label %392, !llvm.loop !11

410:                                              ; preds = %405, %384
  %411 = phi i64 [ undef, %384 ], [ %406, %405 ]
  %412 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %382, %384 ], [ %407, %405 ]
  %413 = phi i64 [ %379, %384 ], [ %406, %405 ]
  %414 = icmp ult i64 %387, 24
  br i1 %414, label %432, label %415

415:                                              ; preds = %410, %542
  %416 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %544, %542 ], [ %412, %410 ]
  %417 = phi i64 [ %543, %542 ], [ %413, %410 ]
  %418 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %416, i64 0, i32 0
  %419 = load i8*, i8** %418, align 8
  %420 = icmp eq i8* %419, null
  br i1 %420, label %427, label %421

421:                                              ; preds = %415
  %422 = ptrtoint i8* %419 to i64
  %423 = inttoptr i64 %417 to %"class.base::internal::UncheckedObserverAdapter"*
  %424 = inttoptr i64 %417 to i64*
  store i64 %422, i64* %424, align 8
  %425 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %423, i64 1
  %426 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %425 to i64
  br label %427

427:                                              ; preds = %421, %415
  %428 = phi i64 [ %417, %415 ], [ %426, %421 ]
  %429 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %416, i64 1, i32 0
  %430 = load i8*, i8** %429, align 8
  %431 = icmp eq i8* %430, null
  br i1 %431, label %520, label %514

432:                                              ; preds = %542, %410
  %433 = phi i64 [ %411, %410 ], [ %543, %542 ]
  %434 = inttoptr i64 %433 to %"class.base::internal::UncheckedObserverAdapter"*
  %435 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %366, align 8
  br label %436

436:                                              ; preds = %432, %381
  %437 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %367, %381 ], [ %435, %432 ]
  %438 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %378, %381 ], [ %434, %432 ]
  %439 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %438, %437
  br i1 %439, label %441, label %440

440:                                              ; preds = %436
  store %"class.base::internal::UncheckedObserverAdapter"* %438, %"class.base::internal::UncheckedObserverAdapter"** %366, align 8
  br label %441

441:                                              ; preds = %374, %440, %436, %377, %355
  %442 = load %"class.base::ObserverList.96"*, %"class.base::ObserverList.96"** %157, align 8
  %443 = icmp eq %"class.base::ObserverList.96"* %442, null
  br i1 %443, label %445, label %444

444:                                              ; preds = %441
  store %"class.base::ObserverList.96"* null, %"class.base::ObserverList.96"** %157, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %166) #12
  br label %445

445:                                              ; preds = %352, %441, %444
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %156) #12
  %446 = call zeroext i1 @_ZNK4aura13WindowTracker8ContainsEPNS_6WindowE(%"class.aura::WindowTracker"* nonnull %3, %"class.aura::Window"* %11) #12
  br i1 %446, label %491, label %499

447:                                              ; preds = %252
  %448 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %219, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %448, align 8
  %450 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %449, i64 %255
  %451 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %450 to %"class.aura::client::FocusChangeObserver"**
  %452 = load %"class.aura::client::FocusChangeObserver"*, %"class.aura::client::FocusChangeObserver"** %451, align 8
  %453 = load %"class.aura::Window"*, %"class.aura::Window"** %10, align 8
  %454 = call zeroext i1 @_ZNK4aura13WindowTracker8ContainsEPNS_6WindowE(%"class.aura::WindowTracker"* nonnull %3, %"class.aura::Window"* %11) #12
  %455 = select i1 %454, %"class.aura::Window"* %11, %"class.aura::Window"* null
  %456 = bitcast %"class.aura::client::FocusChangeObserver"* %452 to void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)***
  %457 = load void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*** %456, align 8
  %458 = load void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %457, align 8
  call void %458(%"class.aura::client::FocusChangeObserver"* %452, %"class.aura::Window"* %453, %"class.aura::Window"* %455) #12
  %459 = load %"class.base::ObserverList.96"*, %"class.base::ObserverList.96"** %157, align 8
  %460 = icmp eq %"class.base::ObserverList.96"* %459, null
  br i1 %460, label %461, label %462

461:                                              ; preds = %486, %482, %447, %462, %476
  br label %218

462:                                              ; preds = %447
  %463 = load i64, i64* %158, align 8
  %464 = add i64 %463, 1
  store i64 %464, i64* %158, align 8
  %465 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %459, i64 0, i32 0, i32 0, i32 1
  %466 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %465 to i64*
  %467 = load i64, i64* %466, align 8
  %468 = bitcast %"class.base::ObserverList.96"* %459 to i64*
  %469 = load i64, i64* %468, align 8
  %470 = sub i64 %467, %469
  %471 = ashr exact i64 %470, 3
  %472 = load i64, i64* %159, align 8
  %473 = icmp ult i64 %471, %472
  %474 = select i1 %473, i64 %471, i64 %472
  %475 = icmp ult i64 %464, %474
  br i1 %475, label %476, label %461

476:                                              ; preds = %462
  %477 = inttoptr i64 %469 to %"class.base::internal::UncheckedObserverAdapter"*
  %478 = getelementptr inbounds %"class.base::ObserverList.96", %"class.base::ObserverList.96"* %459, i64 0, i32 0, i32 0, i32 0
  %479 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %477, i64 %464, i32 0
  %480 = load i8*, i8** %479, align 8
  %481 = icmp eq i8* %480, null
  br i1 %481, label %482, label %461

482:                                              ; preds = %476, %486
  %483 = phi i64 [ %484, %486 ], [ %464, %476 ]
  %484 = add nuw i64 %483, 1
  store i64 %484, i64* %158, align 8
  %485 = icmp ult i64 %484, %474
  br i1 %485, label %486, label %461

486:                                              ; preds = %482
  %487 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %478, align 8
  %488 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %487, i64 %484, i32 0
  %489 = load i8*, i8** %488, align 8
  %490 = icmp eq i8* %489, null
  br i1 %490, label %482, label %461

491:                                              ; preds = %445
  %492 = call %"class.aura::client::FocusChangeObserver"* @_ZN4aura6client22GetFocusChangeObserverEPNS_6WindowE(%"class.aura::Window"* %11) #12
  %493 = icmp eq %"class.aura::client::FocusChangeObserver"* %492, null
  br i1 %493, label %499, label %494

494:                                              ; preds = %491
  %495 = load %"class.aura::Window"*, %"class.aura::Window"** %10, align 8
  %496 = bitcast %"class.aura::client::FocusChangeObserver"* %492 to void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)***
  %497 = load void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*** %496, align 8
  %498 = load void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %497, align 8
  call void %498(%"class.aura::client::FocusChangeObserver"* nonnull %492, %"class.aura::Window"* %495, %"class.aura::Window"* %11) #12
  br label %499

499:                                              ; preds = %494, %491, %445
  %500 = load %"class.aura::Window"*, %"class.aura::Window"** %10, align 8
  %501 = call %"class.aura::client::FocusChangeObserver"* @_ZN4aura6client22GetFocusChangeObserverEPNS_6WindowE(%"class.aura::Window"* %500) #12
  %502 = icmp eq %"class.aura::client::FocusChangeObserver"* %501, null
  br i1 %502, label %510, label %503

503:                                              ; preds = %499
  %504 = load %"class.aura::Window"*, %"class.aura::Window"** %10, align 8
  %505 = call zeroext i1 @_ZNK4aura13WindowTracker8ContainsEPNS_6WindowE(%"class.aura::WindowTracker"* nonnull %3, %"class.aura::Window"* %11) #12
  %506 = select i1 %505, %"class.aura::Window"* %11, %"class.aura::Window"* null
  %507 = bitcast %"class.aura::client::FocusChangeObserver"* %501 to void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)***
  %508 = load void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*** %507, align 8
  %509 = load void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %508, align 8
  call void %509(%"class.aura::client::FocusChangeObserver"* nonnull %501, %"class.aura::Window"* %504, %"class.aura::Window"* %506) #12
  br label %510

510:                                              ; preds = %499, %503
  call void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #12
  %511 = icmp eq i8* %6, null
  br i1 %511, label %513, label %512

512:                                              ; preds = %510
  store i8 0, i8* %6, align 1
  br label %513

513:                                              ; preds = %512, %510, %2, %9
  ret void

514:                                              ; preds = %427
  %515 = ptrtoint i8* %430 to i64
  %516 = inttoptr i64 %428 to %"class.base::internal::UncheckedObserverAdapter"*
  %517 = inttoptr i64 %428 to i64*
  store i64 %515, i64* %517, align 8
  %518 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %516, i64 1
  %519 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %518 to i64
  br label %520

520:                                              ; preds = %514, %427
  %521 = phi i64 [ %428, %427 ], [ %519, %514 ]
  %522 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %416, i64 2, i32 0
  %523 = load i8*, i8** %522, align 8
  %524 = icmp eq i8* %523, null
  br i1 %524, label %531, label %525

525:                                              ; preds = %520
  %526 = ptrtoint i8* %523 to i64
  %527 = inttoptr i64 %521 to %"class.base::internal::UncheckedObserverAdapter"*
  %528 = inttoptr i64 %521 to i64*
  store i64 %526, i64* %528, align 8
  %529 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %527, i64 1
  %530 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %529 to i64
  br label %531

531:                                              ; preds = %525, %520
  %532 = phi i64 [ %521, %520 ], [ %530, %525 ]
  %533 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %416, i64 3, i32 0
  %534 = load i8*, i8** %533, align 8
  %535 = icmp eq i8* %534, null
  br i1 %535, label %542, label %536

536:                                              ; preds = %531
  %537 = ptrtoint i8* %534 to i64
  %538 = inttoptr i64 %532 to %"class.base::internal::UncheckedObserverAdapter"*
  %539 = inttoptr i64 %532 to i64*
  store i64 %537, i64* %539, align 8
  %540 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %538, i64 1
  %541 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %540 to i64
  br label %542

542:                                              ; preds = %536, %531
  %543 = phi i64 [ %532, %531 ], [ %541, %536 ]
  %544 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %416, i64 4
  %545 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %544, %367
  br i1 %545, label %432, label %415

546:                                              ; preds = %334
  %547 = ptrtoint i8* %337 to i64
  %548 = inttoptr i64 %335 to %"class.base::internal::UncheckedObserverAdapter"*
  %549 = inttoptr i64 %335 to i64*
  store i64 %547, i64* %549, align 8
  %550 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %548, i64 1
  %551 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %550 to i64
  br label %552

552:                                              ; preds = %546, %334
  %553 = phi i64 [ %335, %334 ], [ %551, %546 ]
  %554 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 2, i32 0
  %555 = load i8*, i8** %554, align 8
  %556 = icmp eq i8* %555, null
  br i1 %556, label %563, label %557

557:                                              ; preds = %552
  %558 = ptrtoint i8* %555 to i64
  %559 = inttoptr i64 %553 to %"class.base::internal::UncheckedObserverAdapter"*
  %560 = inttoptr i64 %553 to i64*
  store i64 %558, i64* %560, align 8
  %561 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %559, i64 1
  %562 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %561 to i64
  br label %563

563:                                              ; preds = %557, %552
  %564 = phi i64 [ %553, %552 ], [ %562, %557 ]
  %565 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 3, i32 0
  %566 = load i8*, i8** %565, align 8
  %567 = icmp eq i8* %566, null
  br i1 %567, label %574, label %568

568:                                              ; preds = %563
  %569 = ptrtoint i8* %566 to i64
  %570 = inttoptr i64 %564 to %"class.base::internal::UncheckedObserverAdapter"*
  %571 = inttoptr i64 %564 to i64*
  store i64 %569, i64* %571, align 8
  %572 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %570, i64 1
  %573 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %572 to i64
  br label %574

574:                                              ; preds = %568, %563
  %575 = phi i64 [ %564, %563 ], [ %573, %568 ]
  %576 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 4
  %577 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %576, %274
  br i1 %577, label %339, label %322
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2wm15FocusController28ResetFocusWithinActiveWindowEPN4aura6WindowE(%"class.wm::FocusController"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 11, i32 1, i32 0, i32 2
  %4 = bitcast %"class.std::__1::__compressed_pair.43"* %3 to %"class.wm::FocusController"*
  %5 = getelementptr inbounds %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.43"* %3, i64 10
  %6 = bitcast %"class.std::__1::__compressed_pair.43"* %5 to %"class.aura::Window"**
  %7 = load %"class.aura::Window"*, %"class.aura::Window"** %6, align 8
  %8 = icmp eq %"class.aura::Window"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* nonnull %7, %"class.aura::Window"* %1) #12
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @_ZN2wm15FocusController16SetFocusedWindowEPN4aura6WindowE(%"class.wm::FocusController"* %4, %"class.aura::Window"* %1) #12
  br label %12

12:                                               ; preds = %2, %9, %11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.aura::Window"* @_ZN2wm15FocusController16GetFocusedWindowEv(%"class.wm::FocusController"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 5
  %3 = load %"class.aura::Window"*, %"class.aura::Window"** %2, align 8
  ret %"class.aura::Window"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.aura::Window"* @_ZThn8_N2wm15FocusController16GetFocusedWindowEv(%"class.wm::FocusController"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 11, i32 1, i32 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.43"* %2, i64 11
  %4 = bitcast %"class.std::__1::__compressed_pair.43"* %3 to %"class.aura::Window"**
  %5 = load %"class.aura::Window"*, %"class.aura::Window"** %4, align 8
  ret %"class.aura::Window"* %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2wm15FocusController10OnKeyEventEPN2ui8KeyEventE(%"class.wm::FocusController"* nocapture, %"class.ui::KeyEvent"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZThn16_N2wm15FocusController10OnKeyEventEPN2ui8KeyEventE(%"class.wm::FocusController"* nocapture, %"class.ui::KeyEvent"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController12OnMouseEventEPN2ui10MouseEventE(%"class.wm::FocusController"*, %"class.ui::MouseEvent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 10
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %31

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 8
  %13 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %12, align 8
  %14 = icmp eq %"class.ui::EventTarget"* %13, null
  %15 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %13, i64 -2, i32 2, i32 0, i32 1
  %16 = bitcast %"class.ui::EventHandler"*** %15 to %"class.aura::Window"*
  %17 = select i1 %14, %"class.aura::Window"* null, %"class.aura::Window"* %16
  %18 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %19 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %18, align 8
  %20 = bitcast %"class.wm::FocusController"* %0 to %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)***
  %21 = load %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)**, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)** %21, i64 6
  %23 = load %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)** %22, align 8
  %24 = tail call %"class.aura::Window"* %23(%"class.wm::FocusController"* %0, %"class.aura::Window"* %17) #12
  %25 = bitcast %"class.wm::FocusRules"* %19 to i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)***
  %26 = load i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)**, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)** %26, i64 4
  %28 = load i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.wm::FocusRules"* %19, %"class.aura::Window"* %24, %"class.ui::Event"* %3) #12
  br i1 %29, label %30, label %31

30:                                               ; preds = %11
  tail call void @_ZN2wm15FocusController22FocusAndActivateWindowENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowE(%"class.wm::FocusController"* %0, i32 1, %"class.aura::Window"* %17) #12
  br label %31

31:                                               ; preds = %7, %30, %11, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController27WindowFocusedFromInputEventEPN4aura6WindowEPKN2ui5EventE(%"class.wm::FocusController"*, %"class.aura::Window"*, %"class.ui::Event"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %5 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %4, align 8
  %6 = bitcast %"class.wm::FocusController"* %0 to %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)***
  %7 = load %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)**, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)** %7, i64 6
  %9 = load %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)** %8, align 8
  %10 = tail call %"class.aura::Window"* %9(%"class.wm::FocusController"* %0, %"class.aura::Window"* %1) #12
  %11 = bitcast %"class.wm::FocusRules"* %5 to i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)***
  %12 = load i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)**, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)** %12, i64 4
  %14 = load i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.wm::FocusRules"* %5, %"class.aura::Window"* %10, %"class.ui::Event"* %2) #12
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  tail call void @_ZN2wm15FocusController22FocusAndActivateWindowENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowE(%"class.wm::FocusController"* %0, i32 1, %"class.aura::Window"* %1)
  br label %17

17:                                               ; preds = %16, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N2wm15FocusController12OnMouseEventEPN2ui10MouseEventE(%"class.wm::FocusController"*, %"class.ui::MouseEvent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 11, i32 1, i32 0, i32 1
  %4 = bitcast %"class.aura::Window"*** %3 to %"class.wm::FocusController"*
  %5 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %34

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 10
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %34

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 8
  %15 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %14, align 8
  %16 = icmp eq %"class.ui::EventTarget"* %15, null
  %17 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %15, i64 -2, i32 2, i32 0, i32 1
  %18 = bitcast %"class.ui::EventHandler"*** %17 to %"class.aura::Window"*
  %19 = select i1 %16, %"class.aura::Window"* null, %"class.aura::Window"* %18
  %20 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %3, i64 15
  %21 = bitcast %"class.aura::Window"*** %20 to %"class.wm::FocusRules"**
  %22 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %21, align 8
  %23 = bitcast %"class.aura::Window"*** %3 to %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)***
  %24 = load %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)**, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)** %24, i64 6
  %26 = load %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)** %25, align 8
  %27 = tail call %"class.aura::Window"* %26(%"class.wm::FocusController"* %4, %"class.aura::Window"* %19) #12
  %28 = bitcast %"class.wm::FocusRules"* %22 to i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)***
  %29 = load i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)**, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)** %29, i64 4
  %31 = load i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.wm::FocusRules"* %22, %"class.aura::Window"* %27, %"class.ui::Event"* %5) #12
  br i1 %32, label %33, label %34

33:                                               ; preds = %13
  tail call void @_ZN2wm15FocusController22FocusAndActivateWindowENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowE(%"class.wm::FocusController"* %4, i32 1, %"class.aura::Window"* %19) #12
  br label %34

34:                                               ; preds = %2, %9, %13, %33
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2wm15FocusController13OnScrollEventEPN2ui11ScrollEventE(%"class.wm::FocusController"* nocapture, %"class.ui::ScrollEvent"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZThn16_N2wm15FocusController13OnScrollEventEPN2ui11ScrollEventE(%"class.wm::FocusController"* nocapture, %"class.ui::ScrollEvent"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2wm15FocusController12OnTouchEventEPN2ui10TouchEventE(%"class.wm::FocusController"* nocapture, %"class.ui::TouchEvent"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZThn16_N2wm15FocusController12OnTouchEventEPN2ui10TouchEventE(%"class.wm::FocusController"* nocapture, %"class.ui::TouchEvent"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController14OnGestureEventEPN2ui12GestureEventE(%"class.wm::FocusController"*, %"class.ui::GestureEvent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 24
  br i1 %6, label %7, label %35

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %1, i64 0, i32 1, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %35

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %1, i64 0, i32 0, i32 0, i32 10
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %35

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %1, i64 0, i32 0, i32 0, i32 8
  %17 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %16, align 8
  %18 = icmp eq %"class.ui::EventTarget"* %17, null
  %19 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %17, i64 -2, i32 2, i32 0, i32 1
  %20 = bitcast %"class.ui::EventHandler"*** %19 to %"class.aura::Window"*
  %21 = select i1 %18, %"class.aura::Window"* null, %"class.aura::Window"* %20
  %22 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %23 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %22, align 8
  %24 = bitcast %"class.wm::FocusController"* %0 to %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)***
  %25 = load %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)**, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)** %25, i64 6
  %27 = load %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)** %26, align 8
  %28 = tail call %"class.aura::Window"* %27(%"class.wm::FocusController"* %0, %"class.aura::Window"* %21) #12
  %29 = bitcast %"class.wm::FocusRules"* %23 to i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)***
  %30 = load i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)**, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)** %30, i64 4
  %32 = load i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.wm::FocusRules"* %23, %"class.aura::Window"* %28, %"class.ui::Event"* %3) #12
  br i1 %33, label %34, label %35

34:                                               ; preds = %15
  tail call void @_ZN2wm15FocusController22FocusAndActivateWindowENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowE(%"class.wm::FocusController"* %0, i32 1, %"class.aura::Window"* %21) #12
  br label %35

35:                                               ; preds = %11, %34, %15, %7, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N2wm15FocusController14OnGestureEventEPN2ui12GestureEventE(%"class.wm::FocusController"*, %"class.ui::GestureEvent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 11, i32 1, i32 0, i32 1
  %4 = bitcast %"class.aura::Window"*** %3 to %"class.wm::FocusController"*
  %5 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 24
  br i1 %8, label %9, label %38

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %1, i64 0, i32 1, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %38

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %1, i64 0, i32 0, i32 0, i32 10
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %38

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %1, i64 0, i32 0, i32 0, i32 8
  %19 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %18, align 8
  %20 = icmp eq %"class.ui::EventTarget"* %19, null
  %21 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %19, i64 -2, i32 2, i32 0, i32 1
  %22 = bitcast %"class.ui::EventHandler"*** %21 to %"class.aura::Window"*
  %23 = select i1 %20, %"class.aura::Window"* null, %"class.aura::Window"* %22
  %24 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %3, i64 15
  %25 = bitcast %"class.aura::Window"*** %24 to %"class.wm::FocusRules"**
  %26 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %25, align 8
  %27 = bitcast %"class.aura::Window"*** %3 to %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)***
  %28 = load %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)**, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)** %28, i64 6
  %30 = load %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusController"*, %"class.aura::Window"*)** %29, align 8
  %31 = tail call %"class.aura::Window"* %30(%"class.wm::FocusController"* %4, %"class.aura::Window"* %23) #12
  %32 = bitcast %"class.wm::FocusRules"* %26 to i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)***
  %33 = load i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)**, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)** %33, i64 4
  %35 = load i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)*, i1 (%"class.wm::FocusRules"*, %"class.aura::Window"*, %"class.ui::Event"*)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.wm::FocusRules"* %26, %"class.aura::Window"* %31, %"class.ui::Event"* %5) #12
  br i1 %36, label %37, label %38

37:                                               ; preds = %17
  tail call void @_ZN2wm15FocusController22FocusAndActivateWindowENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowE(%"class.wm::FocusController"* %4, i32 1, %"class.aura::Window"* %23) #12
  br label %38

38:                                               ; preds = %2, %9, %13, %17, %37
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZNK2wm15FocusController13GetLogContextEv(%"class.wm::FocusController"* nocapture readnone) unnamed_addr #6 align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i64 15 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZThn16_NK2wm15FocusController13GetLogContextEv(%"class.wm::FocusController"* nocapture readnone) unnamed_addr #5 align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i64 15 }
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController25OnWindowVisibilityChangedEPN4aura6WindowEb(%"class.wm::FocusController"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  br i1 %2, label %7, label %4

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  tail call void @_ZN2wm15FocusController36WindowLostFocusFromDispositionChangeEPN4aura6WindowES3_(%"class.wm::FocusController"* %0, %"class.aura::Window"* %1, %"class.aura::Window"* %6)
  br label %7

7:                                                ; preds = %4, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController36WindowLostFocusFromDispositionChangeEPN4aura6WindowES3_(%"class.wm::FocusController"*, %"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 4
  %5 = load %"class.aura::Window"*, %"class.aura::Window"** %4, align 8
  %6 = icmp eq %"class.aura::Window"* %5, %1
  %7 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp ne i8 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = load %"class.aura::Window"*, %"class.aura::Window"** %11, align 8
  %13 = icmp eq %"class.aura::Window"* %12, %1
  br label %14

14:                                               ; preds = %10, %3
  %15 = phi i1 [ false, %3 ], [ %13, %10 ]
  %16 = or i1 %6, %15
  br i1 %16, label %17, label %41

17:                                               ; preds = %14
  br i1 %9, label %18, label %22

18:                                               ; preds = %17
  br i1 %15, label %19, label %20

19:                                               ; preds = %18
  store i8 0, i8* %7, align 8
  br label %22

20:                                               ; preds = %18
  br i1 %6, label %21, label %22

21:                                               ; preds = %20
  store %"class.aura::Window"* null, %"class.aura::Window"** %4, align 8
  tail call void @_ZN2wm15FocusController16SetFocusedWindowEPN4aura6WindowE(%"class.wm::FocusController"* %0, %"class.aura::Window"* null)
  br label %57

22:                                               ; preds = %19, %20, %17
  %23 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %24 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %23, align 8
  %25 = bitcast %"class.wm::FocusRules"* %24 to %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)***
  %26 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)**, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %26, i64 8
  %28 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %27, align 8
  %29 = tail call %"class.aura::Window"* %28(%"class.wm::FocusRules"* %24, %"class.aura::Window"* %1) #12
  %30 = tail call zeroext i1 @_ZN2wm15FocusController15SetActiveWindowENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowES5_(%"class.wm::FocusController"* %0, i32 2, %"class.aura::Window"* null, %"class.aura::Window"* %29)
  br i1 %30, label %31, label %57

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 5
  %33 = load %"class.aura::Window"*, %"class.aura::Window"** %32, align 8
  %34 = icmp eq %"class.aura::Window"* %33, %1
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = load %"class.aura::Window"*, %"class.aura::Window"** %4, align 8
  %37 = icmp eq %"class.aura::Window"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* nonnull %36, %"class.aura::Window"* %33) #12
  br i1 %39, label %57, label %40

40:                                               ; preds = %35, %38, %31
  tail call void @_ZN2wm15FocusController16SetFocusedWindowEPN4aura6WindowE(%"class.wm::FocusController"* %0, %"class.aura::Window"* %29)
  br label %57

41:                                               ; preds = %14
  %42 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 5
  %43 = load %"class.aura::Window"*, %"class.aura::Window"** %42, align 8
  %44 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %1, %"class.aura::Window"* %43) #12
  br i1 %44, label %45, label %57

45:                                               ; preds = %41
  %46 = load i8, i8* %7, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  tail call void @_ZN2wm15FocusController16SetFocusedWindowEPN4aura6WindowE(%"class.wm::FocusController"* %0, %"class.aura::Window"* null)
  br label %57

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %51 = load %"class.wm::FocusRules"*, %"class.wm::FocusRules"** %50, align 8
  %52 = bitcast %"class.wm::FocusRules"* %51 to %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)***
  %53 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)**, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %53, i64 7
  %55 = load %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::FocusRules"*, %"class.aura::Window"*)** %54, align 8
  %56 = tail call %"class.aura::Window"* %55(%"class.wm::FocusRules"* %51, %"class.aura::Window"* %2) #12
  tail call void @_ZN2wm15FocusController16SetFocusedWindowEPN4aura6WindowE(%"class.wm::FocusController"* %0, %"class.aura::Window"* %56)
  br label %57

57:                                               ; preds = %22, %48, %49, %41, %38, %40, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N2wm15FocusController25OnWindowVisibilityChangedEPN4aura6WindowEb(%"class.wm::FocusController"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  br i1 %2, label %9, label %4

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 10, i32 1, i32 0, i32 0, i32 1
  %6 = bitcast %"class.base::internal::LinkNodeBase"** %5 to %"class.wm::FocusController"*
  %7 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %8 = load %"class.aura::Window"*, %"class.aura::Window"** %7, align 8
  tail call void @_ZN2wm15FocusController36WindowLostFocusFromDispositionChangeEPN4aura6WindowES3_(%"class.wm::FocusController"* %6, %"class.aura::Window"* %1, %"class.aura::Window"* %8) #12
  br label %9

9:                                                ; preds = %3, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController18OnWindowDestroyingEPN4aura6WindowE(%"class.wm::FocusController"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 4
  %4 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN4aura6client9kModalKeyE, align 8
  tail call void @_ZN2ui15PropertyHandler13ClearPropertyINS_9ModalTypeEEEvPKNS_13ClassPropertyIT_EE(%"class.ui::PropertyHandler"* %3, %"struct.ui::ClassProperty"* %4) #12
  %5 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  tail call void @_ZN2wm15FocusController36WindowLostFocusFromDispositionChangeEPN4aura6WindowES3_(%"class.wm::FocusController"* %0, %"class.aura::Window"* %1, %"class.aura::Window"* %6)
  %7 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  %8 = load %"class.aura::Window"**, %"class.aura::Window"*** %7, align 8
  %9 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1, i32 0, i32 1
  %10 = load %"class.aura::Window"**, %"class.aura::Window"*** %9, align 8
  %11 = icmp eq %"class.aura::Window"** %8, %10
  br i1 %11, label %19, label %12

12:                                               ; preds = %2, %16
  %13 = phi %"class.aura::Window"** [ %17, %16 ], [ %8, %2 ]
  %14 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %15 = icmp eq %"class.aura::Window"* %14, %1
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %13, i64 1
  %18 = icmp eq %"class.aura::Window"** %17, %10
  br i1 %18, label %45, label %12

19:                                               ; preds = %12, %2
  %20 = phi %"class.aura::Window"** [ %8, %2 ], [ %13, %12 ]
  %21 = icmp eq %"class.aura::Window"** %20, %10
  br i1 %21, label %45, label %22

22:                                               ; preds = %19
  %23 = ptrtoint %"class.aura::Window"** %10 to i64
  br i1 %11, label %31, label %24

24:                                               ; preds = %22, %28
  %25 = phi %"class.aura::Window"** [ %29, %28 ], [ %8, %22 ]
  %26 = load %"class.aura::Window"*, %"class.aura::Window"** %25, align 8
  %27 = icmp eq %"class.aura::Window"* %26, %1
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %25, i64 1
  %30 = icmp eq %"class.aura::Window"** %29, %10
  br i1 %30, label %31, label %24

31:                                               ; preds = %28, %24, %22
  %32 = phi %"class.aura::Window"** [ %8, %22 ], [ %25, %24 ], [ %10, %28 ]
  %33 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %32, i64 1
  %34 = ptrtoint %"class.aura::Window"** %33 to i64
  %35 = sub i64 %23, %34
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = bitcast %"class.aura::Window"** %32 to i8*
  %40 = bitcast %"class.aura::Window"** %33 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #12
  br label %41

41:                                               ; preds = %31, %38
  %42 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %32, i64 %36
  store %"class.aura::Window"** %42, %"class.aura::Window"*** %9, align 8
  %43 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 0
  %44 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %43, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %44) #12
  br label %45

45:                                               ; preds = %16, %19, %41
  ret void
}

declare void @_ZN2ui15PropertyHandler13ClearPropertyINS_9ModalTypeEEEvPKNS_13ClassPropertyIT_EE(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N2wm15FocusController18OnWindowDestroyingEPN4aura6WindowE(%"class.wm::FocusController"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 10, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.wm::FocusController"*
  %5 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 4
  %6 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN4aura6client9kModalKeyE, align 8
  tail call void @_ZN2ui15PropertyHandler13ClearPropertyINS_9ModalTypeEEEvPKNS_13ClassPropertyIT_EE(%"class.ui::PropertyHandler"* %5, %"struct.ui::ClassProperty"* %6) #12
  %7 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %8 = load %"class.aura::Window"*, %"class.aura::Window"** %7, align 8
  tail call void @_ZN2wm15FocusController36WindowLostFocusFromDispositionChangeEPN4aura6WindowES3_(%"class.wm::FocusController"* %4, %"class.aura::Window"* %1, %"class.aura::Window"* %8) #12
  %9 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %3, i64 31
  %10 = bitcast %"class.base::internal::LinkNodeBase"** %9 to %"class.aura::Window"***
  %11 = load %"class.aura::Window"**, %"class.aura::Window"*** %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %3, i64 32
  %13 = bitcast %"class.base::internal::LinkNodeBase"** %12 to %"class.aura::Window"***
  %14 = load %"class.aura::Window"**, %"class.aura::Window"*** %13, align 8
  %15 = icmp eq %"class.aura::Window"** %11, %14
  br i1 %15, label %23, label %16

16:                                               ; preds = %2, %20
  %17 = phi %"class.aura::Window"** [ %21, %20 ], [ %11, %2 ]
  %18 = load %"class.aura::Window"*, %"class.aura::Window"** %17, align 8
  %19 = icmp eq %"class.aura::Window"* %18, %1
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %17, i64 1
  %22 = icmp eq %"class.aura::Window"** %21, %14
  br i1 %22, label %50, label %16

23:                                               ; preds = %16, %2
  %24 = phi %"class.aura::Window"** [ %11, %2 ], [ %17, %16 ]
  %25 = icmp eq %"class.aura::Window"** %24, %14
  br i1 %25, label %50, label %26

26:                                               ; preds = %23
  %27 = ptrtoint %"class.aura::Window"** %14 to i64
  br i1 %15, label %35, label %28

28:                                               ; preds = %26, %32
  %29 = phi %"class.aura::Window"** [ %33, %32 ], [ %11, %26 ]
  %30 = load %"class.aura::Window"*, %"class.aura::Window"** %29, align 8
  %31 = icmp eq %"class.aura::Window"* %30, %1
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %29, i64 1
  %34 = icmp eq %"class.aura::Window"** %33, %14
  br i1 %34, label %35, label %28

35:                                               ; preds = %32, %28, %26
  %36 = phi %"class.aura::Window"** [ %11, %26 ], [ %14, %32 ], [ %29, %28 ]
  %37 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %36, i64 1
  %38 = ptrtoint %"class.aura::Window"** %37 to i64
  %39 = sub i64 %27, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %35
  %43 = bitcast %"class.aura::Window"** %36 to i8*
  %44 = bitcast %"class.aura::Window"** %37 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 %39, i1 false) #12
  br label %45

45:                                               ; preds = %42, %35
  %46 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %36, i64 %40
  store %"class.aura::Window"** %46, %"class.aura::Window"*** %13, align 8
  %47 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %3, i64 30
  %48 = bitcast %"class.base::internal::LinkNodeBase"** %47 to %"class.aura::WindowObserver"**
  %49 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %48, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %49) #12
  br label %50

50:                                               ; preds = %20, %23, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController25OnWindowHierarchyChangingERKN4aura14WindowObserver21HierarchyChangeParamsE(%"class.wm::FocusController"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 4
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 4
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %7 = icmp eq %"class.aura::Window"* %4, %6
  br i1 %7, label %8, label %25

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 0
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %10, %"class.aura::Window"* %4) #12
  br i1 %11, label %12, label %25

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 1
  %14 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %15 = icmp eq %"class.aura::Window"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = tail call %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"* nonnull %14) #12
  %18 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %19 = tail call %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"* %18) #12
  %20 = icmp eq %"class.aura::client::FocusClient"* %17, %19
  br i1 %20, label %25, label %21

21:                                               ; preds = %16, %12
  %22 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %23 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 2
  %24 = load %"class.aura::Window"*, %"class.aura::Window"** %23, align 8
  tail call void @_ZN2wm15FocusController36WindowLostFocusFromDispositionChangeEPN4aura6WindowES3_(%"class.wm::FocusController"* %0, %"class.aura::Window"* %22, %"class.aura::Window"* %24)
  br label %25

25:                                               ; preds = %16, %21, %8, %2
  ret void
}

declare %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N2wm15FocusController25OnWindowHierarchyChangingERKN4aura14WindowObserver21HierarchyChangeParamsE(%"class.wm::FocusController"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 10, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.wm::FocusController"*
  %5 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 4
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %3, i64 10
  %8 = bitcast %"class.base::internal::LinkNodeBase"** %7 to %"class.aura::Window"**
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %8, align 8
  %10 = icmp eq %"class.aura::Window"* %6, %9
  br i1 %10, label %11, label %28

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 0
  %13 = load %"class.aura::Window"*, %"class.aura::Window"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %13, %"class.aura::Window"* %6) #12
  br i1 %14, label %15, label %28

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 1
  %17 = load %"class.aura::Window"*, %"class.aura::Window"** %16, align 8
  %18 = icmp eq %"class.aura::Window"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"* nonnull %17) #12
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %22 = tail call %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"* %21) #12
  %23 = icmp eq %"class.aura::client::FocusClient"* %20, %22
  br i1 %23, label %28, label %24

24:                                               ; preds = %19, %15
  %25 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %26 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 2
  %27 = load %"class.aura::Window"*, %"class.aura::Window"** %26, align 8
  tail call void @_ZN2wm15FocusController36WindowLostFocusFromDispositionChangeEPN4aura6WindowES3_(%"class.wm::FocusController"* %4, %"class.aura::Window"* %25, %"class.aura::Window"* %27) #12
  br label %28

28:                                               ; preds = %2, %11, %19, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController24OnWindowHierarchyChangedERKN4aura14WindowObserver21HierarchyChangeParamsE(%"class.wm::FocusController"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 4
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 5
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %7 = icmp eq %"class.aura::Window"* %4, %6
  br i1 %7, label %8, label %25

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 0
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %10, %"class.aura::Window"* %4) #12
  br i1 %11, label %12, label %25

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 1
  %14 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %15 = icmp eq %"class.aura::Window"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = tail call %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"* nonnull %14) #12
  %18 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %19 = tail call %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"* %18) #12
  %20 = icmp eq %"class.aura::client::FocusClient"* %17, %19
  br i1 %20, label %25, label %21

21:                                               ; preds = %16, %12
  %22 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %23 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 2
  %24 = load %"class.aura::Window"*, %"class.aura::Window"** %23, align 8
  tail call void @_ZN2wm15FocusController36WindowLostFocusFromDispositionChangeEPN4aura6WindowES3_(%"class.wm::FocusController"* %0, %"class.aura::Window"* %22, %"class.aura::Window"* %24)
  br label %25

25:                                               ; preds = %16, %21, %8, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N2wm15FocusController24OnWindowHierarchyChangedERKN4aura14WindowObserver21HierarchyChangeParamsE(%"class.wm::FocusController"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 -1, i32 10, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.wm::FocusController"*
  %5 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 4
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %3, i64 11
  %8 = bitcast %"class.base::internal::LinkNodeBase"** %7 to %"class.aura::Window"**
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %8, align 8
  %10 = icmp eq %"class.aura::Window"* %6, %9
  br i1 %10, label %11, label %28

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 0
  %13 = load %"class.aura::Window"*, %"class.aura::Window"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %13, %"class.aura::Window"* %6) #12
  br i1 %14, label %15, label %28

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 1
  %17 = load %"class.aura::Window"*, %"class.aura::Window"** %16, align 8
  %18 = icmp eq %"class.aura::Window"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"* nonnull %17) #12
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %22 = tail call %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"* %21) #12
  %23 = icmp eq %"class.aura::client::FocusClient"* %20, %22
  br i1 %23, label %28, label %24

24:                                               ; preds = %19, %15
  %25 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %26 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 2
  %27 = load %"class.aura::Window"*, %"class.aura::Window"** %26, align 8
  tail call void @_ZN2wm15FocusController36WindowLostFocusFromDispositionChangeEPN4aura6WindowES3_(%"class.wm::FocusController"* %4, %"class.aura::Window"* %25, %"class.aura::Window"* %27) #12
  br label %28

28:                                               ; preds = %2, %11, %19, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm15FocusController17StackActiveWindowEv(%"class.wm::FocusController"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 4
  %3 = load %"class.aura::Window"*, %"class.aura::Window"** %2, align 8
  %4 = icmp eq %"class.aura::Window"* %3, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %3, i64 0, i32 4
  %7 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN4aura6client9kModalKeyE, align 8
  %8 = tail call i32 @_ZNK2ui15PropertyHandler11GetPropertyINS_9ModalTypeEEET_PKNS_13ClassPropertyIS3_EE(%"class.ui::PropertyHandler"* %6, %"struct.ui::ClassProperty"* %7) #12
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %19

10:                                               ; preds = %5
  %11 = tail call %"class.aura::Window"* @_ZN2wm18GetTransientParentEPN4aura6WindowE(%"class.aura::Window"* nonnull %3) #12
  %12 = icmp eq %"class.aura::Window"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %10, %13
  %14 = phi %"class.aura::Window"* [ %17, %13 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %14, i64 0, i32 13
  %16 = load %"class.aura::Window"*, %"class.aura::Window"** %15, align 8
  tail call void @_ZN4aura6Window15StackChildAtTopEPS0_(%"class.aura::Window"* %16, %"class.aura::Window"* nonnull %14) #12
  %17 = tail call %"class.aura::Window"* @_ZN2wm18GetTransientParentEPN4aura6WindowE(%"class.aura::Window"* nonnull %14) #12
  %18 = icmp eq %"class.aura::Window"* %17, null
  br i1 %18, label %19, label %13

19:                                               ; preds = %13, %5, %10
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %2, align 8
  %21 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %20, i64 0, i32 13
  %22 = load %"class.aura::Window"*, %"class.aura::Window"** %21, align 8
  tail call void @_ZN4aura6Window15StackChildAtTopEPS0_(%"class.aura::Window"* %22, %"class.aura::Window"* %20) #12
  br label %23

23:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare void @_ZN4aura13WindowTrackerC1Ev(%"class.aura::WindowTracker"*) unnamed_addr #1

declare void @_ZN4aura13WindowTracker3AddEPNS_6WindowE(%"class.aura::WindowTracker"*, %"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2wm15FocusController15SetActiveWindowENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowES5_(%"class.wm::FocusController"*, i32, %"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = alloca %"class.aura::WindowTracker", align 8
  %8 = alloca %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %9 = alloca %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %10 = alloca %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %11 = alloca %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %12 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 7
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %1248

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 4
  %18 = load %"class.aura::Window"*, %"class.aura::Window"** %17, align 8
  %19 = icmp eq %"class.aura::Window"* %18, %3
  br i1 %19, label %20, label %357

20:                                               ; preds = %16
  %21 = icmp eq %"class.aura::Window"* %2, null
  br i1 %21, label %1248, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9
  %24 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %27 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %28 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %23, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 40, i1 false)
  %30 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %28, align 8, !noalias !12
  %31 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %32 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %31, align 8, !noalias !12
  %33 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %30, %32
  %34 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %34) #12
  br i1 %33, label %35, label %37

35:                                               ; preds = %22
  %36 = bitcast %"class.base::ObserverList.92"** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #12, !alias.scope !12
  br label %77

37:                                               ; preds = %22
  store %"class.base::ObserverList.92"* %23, %"class.base::ObserverList.92"** %25, align 8
  %38 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %34, %"class.base::internal::LinkNodeBase"* %38) #12
  store i64 0, i64* %26, align 8
  %39 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %31 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.base::ObserverList.92"* %23 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = ashr exact i64 %47, 3
  br label %49

49:                                               ; preds = %42, %37
  %50 = phi i64 [ %48, %42 ], [ -1, %37 ]
  store i64 %50, i64* %27, align 8
  %51 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %25, align 8
  %52 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %51, i64 0, i32 0, i32 0, i32 1
  %53 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.base::ObserverList.92"* %51 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = ashr exact i64 %57, 3
  %59 = icmp ult i64 %58, %50
  %60 = select i1 %59, i64 %58, i64 %50
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %77, label %62

62:                                               ; preds = %49
  %63 = inttoptr i64 %56 to %"class.base::internal::UncheckedObserverAdapter"*
  %64 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %51, i64 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %63, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %68, label %77

68:                                               ; preds = %62, %72
  %69 = phi i64 [ %70, %72 ], [ 0, %62 ]
  %70 = add nuw i64 %69, 1
  store i64 %70, i64* %26, align 8
  %71 = icmp ult i64 %70, %60
  br i1 %71, label %72, label %77

72:                                               ; preds = %68
  %73 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %64, align 8
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %70, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %68, label %77

77:                                               ; preds = %72, %68, %62, %49, %35
  %78 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %78) #12
  %79 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %81 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %82 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %82) #12
  %84 = bitcast %"class.base::ObserverList.92"** %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #12, !alias.scope !15
  %85 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %25, align 8
  br label %86

86:                                               ; preds = %327, %77
  %87 = phi %"class.base::ObserverList.92"* [ %85, %77 ], [ %325, %327 ]
  %88 = icmp eq %"class.base::ObserverList.92"* %87, null
  br i1 %88, label %104, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %26, align 8
  %91 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %87, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::ObserverList.92"* %87 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = load i64, i64* %27, align 8
  %99 = icmp ult i64 %97, %98
  %100 = select i1 %99, i64 %97, i64 %98
  %101 = icmp eq i64 %90, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %89
  %103 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %79, align 8
  br label %120

104:                                              ; preds = %89, %86
  %105 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %79, align 8
  %106 = icmp eq %"class.base::ObserverList.92"* %105, null
  br i1 %106, label %220, label %107

107:                                              ; preds = %104
  %108 = load i64, i64* %80, align 8
  %109 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %105, i64 0, i32 0, i32 0, i32 1
  %110 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.base::ObserverList.92"* %105 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 %111, %113
  %115 = ashr exact i64 %114, 3
  %116 = load i64, i64* %81, align 8
  %117 = icmp ult i64 %115, %116
  %118 = select i1 %117, i64 %115, i64 %116
  %119 = icmp eq i64 %108, %118
  br i1 %119, label %129, label %120

120:                                              ; preds = %107, %102
  %121 = phi %"class.base::ObserverList.92"* [ %103, %102 ], [ %105, %107 ]
  %122 = icmp eq %"class.base::ObserverList.92"* %87, %121
  %123 = load i64, i64* %26, align 8
  %124 = load i64, i64* %80, align 8
  %125 = icmp eq i64 %123, %124
  %126 = and i1 %122, %125
  br i1 %126, label %127, label %314

127:                                              ; preds = %120
  %128 = icmp eq %"class.base::ObserverList.92"* %87, null
  br i1 %128, label %220, label %129

129:                                              ; preds = %107, %127
  %130 = phi %"class.base::ObserverList.92"* [ %87, %127 ], [ %105, %107 ]
  %131 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %130, i64 0, i32 1
  %132 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %130, i64 0, i32 1, i32 0, i32 0, i32 1
  %133 = bitcast %"class.base::internal::LinkNodeBase"** %132 to %"class.base::LinkNode.94"**
  %134 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %133, align 8
  %135 = bitcast %"class.base::LinkedList.93"* %131 to %"class.base::LinkNode.94"**
  %136 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %135, align 8
  %137 = icmp eq %"class.base::LinkNode.94"* %134, %136
  br i1 %137, label %138, label %216

138:                                              ; preds = %129
  %139 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %130, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %139, align 8
  %141 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %130, i64 0, i32 0, i32 0, i32 1
  %142 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %141, align 8
  %143 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %140, %142
  br i1 %143, label %152, label %144

144:                                              ; preds = %138, %149
  %145 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %150, %149 ], [ %140, %138 ]
  %146 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %145, i64 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %152, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %145, i64 1
  %151 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %150, %142
  br i1 %151, label %216, label %144

152:                                              ; preds = %144, %138
  %153 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %140, %138 ], [ %145, %144 ]
  %154 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %153 to i64
  %155 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %153, %142
  br i1 %155, label %216, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 1
  %158 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %157, %142
  br i1 %158, label %211, label %159

159:                                              ; preds = %156
  %160 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %142, i64 -2, i32 0
  %161 = ptrtoint i8** %160 to i64
  %162 = sub i64 %161, %154
  %163 = lshr i64 %162, 3
  %164 = add nuw nsw i64 %163, 1
  %165 = and i64 %164, 3
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %185, label %167

167:                                              ; preds = %159, %180
  %168 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %182, %180 ], [ %157, %159 ]
  %169 = phi i64 [ %181, %180 ], [ %154, %159 ]
  %170 = phi i64 [ %183, %180 ], [ %165, %159 ]
  %171 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %168, i64 0, i32 0
  %172 = load i8*, i8** %171, align 8
  %173 = icmp eq i8* %172, null
  br i1 %173, label %180, label %174

174:                                              ; preds = %167
  %175 = ptrtoint i8* %172 to i64
  %176 = inttoptr i64 %169 to %"class.base::internal::UncheckedObserverAdapter"*
  %177 = inttoptr i64 %169 to i64*
  store i64 %175, i64* %177, align 8
  %178 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 1
  %179 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %178 to i64
  br label %180

180:                                              ; preds = %174, %167
  %181 = phi i64 [ %169, %167 ], [ %179, %174 ]
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %168, i64 1
  %183 = add i64 %170, -1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %167, !llvm.loop !18

185:                                              ; preds = %180, %159
  %186 = phi i64 [ undef, %159 ], [ %181, %180 ]
  %187 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %157, %159 ], [ %182, %180 ]
  %188 = phi i64 [ %154, %159 ], [ %181, %180 ]
  %189 = icmp ult i64 %162, 24
  br i1 %189, label %207, label %190

190:                                              ; preds = %185, %1310
  %191 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1312, %1310 ], [ %187, %185 ]
  %192 = phi i64 [ %1311, %1310 ], [ %188, %185 ]
  %193 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 0, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = icmp eq i8* %194, null
  br i1 %195, label %202, label %196

196:                                              ; preds = %190
  %197 = ptrtoint i8* %194 to i64
  %198 = inttoptr i64 %192 to %"class.base::internal::UncheckedObserverAdapter"*
  %199 = inttoptr i64 %192 to i64*
  store i64 %197, i64* %199, align 8
  %200 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 1
  %201 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %200 to i64
  br label %202

202:                                              ; preds = %196, %190
  %203 = phi i64 [ %192, %190 ], [ %201, %196 ]
  %204 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 1, i32 0
  %205 = load i8*, i8** %204, align 8
  %206 = icmp eq i8* %205, null
  br i1 %206, label %1288, label %1282

207:                                              ; preds = %1310, %185
  %208 = phi i64 [ %186, %185 ], [ %1311, %1310 ]
  %209 = inttoptr i64 %208 to %"class.base::internal::UncheckedObserverAdapter"*
  %210 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %141, align 8
  br label %211

211:                                              ; preds = %207, %156
  %212 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %156 ], [ %210, %207 ]
  %213 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %153, %156 ], [ %209, %207 ]
  %214 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %213, %212
  br i1 %214, label %216, label %215

215:                                              ; preds = %211
  store %"class.base::internal::UncheckedObserverAdapter"* %213, %"class.base::internal::UncheckedObserverAdapter"** %141, align 8
  br label %216

216:                                              ; preds = %149, %215, %211, %152, %129
  %217 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %79, align 8
  %218 = icmp eq %"class.base::ObserverList.92"* %217, null
  br i1 %218, label %220, label %219

219:                                              ; preds = %216
  store %"class.base::ObserverList.92"* null, %"class.base::ObserverList.92"** %79, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %82) #12
  br label %220

220:                                              ; preds = %104, %127, %216, %219
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %78) #12
  %221 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %25, align 8
  %222 = icmp eq %"class.base::ObserverList.92"* %221, null
  br i1 %222, label %313, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %221, i64 0, i32 1
  %225 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %221, i64 0, i32 1, i32 0, i32 0, i32 1
  %226 = bitcast %"class.base::internal::LinkNodeBase"** %225 to %"class.base::LinkNode.94"**
  %227 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %226, align 8
  %228 = bitcast %"class.base::LinkedList.93"* %224 to %"class.base::LinkNode.94"**
  %229 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %228, align 8
  %230 = icmp eq %"class.base::LinkNode.94"* %227, %229
  br i1 %230, label %231, label %309

231:                                              ; preds = %223
  %232 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %221, i64 0, i32 0, i32 0, i32 0
  %233 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %232, align 8
  %234 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %221, i64 0, i32 0, i32 0, i32 1
  %235 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %234, align 8
  %236 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %233, %235
  br i1 %236, label %245, label %237

237:                                              ; preds = %231, %242
  %238 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %243, %242 ], [ %233, %231 ]
  %239 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %238, i64 0, i32 0
  %240 = load i8*, i8** %239, align 8
  %241 = icmp eq i8* %240, null
  br i1 %241, label %245, label %242

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %238, i64 1
  %244 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %243, %235
  br i1 %244, label %309, label %237

245:                                              ; preds = %237, %231
  %246 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %233, %231 ], [ %238, %237 ]
  %247 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %246 to i64
  %248 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %246, %235
  br i1 %248, label %309, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 1
  %251 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %250, %235
  br i1 %251, label %304, label %252

252:                                              ; preds = %249
  %253 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %235, i64 -2, i32 0
  %254 = ptrtoint i8** %253 to i64
  %255 = sub i64 %254, %247
  %256 = lshr i64 %255, 3
  %257 = add nuw nsw i64 %256, 1
  %258 = and i64 %257, 3
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %278, label %260

260:                                              ; preds = %252, %273
  %261 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %275, %273 ], [ %250, %252 ]
  %262 = phi i64 [ %274, %273 ], [ %247, %252 ]
  %263 = phi i64 [ %276, %273 ], [ %258, %252 ]
  %264 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %261, i64 0, i32 0
  %265 = load i8*, i8** %264, align 8
  %266 = icmp eq i8* %265, null
  br i1 %266, label %273, label %267

267:                                              ; preds = %260
  %268 = ptrtoint i8* %265 to i64
  %269 = inttoptr i64 %262 to %"class.base::internal::UncheckedObserverAdapter"*
  %270 = inttoptr i64 %262 to i64*
  store i64 %268, i64* %270, align 8
  %271 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 1
  %272 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %271 to i64
  br label %273

273:                                              ; preds = %267, %260
  %274 = phi i64 [ %262, %260 ], [ %272, %267 ]
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %261, i64 1
  %276 = add i64 %263, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %260, !llvm.loop !19

278:                                              ; preds = %273, %252
  %279 = phi i64 [ undef, %252 ], [ %274, %273 ]
  %280 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %250, %252 ], [ %275, %273 ]
  %281 = phi i64 [ %247, %252 ], [ %274, %273 ]
  %282 = icmp ult i64 %255, 24
  br i1 %282, label %300, label %283

283:                                              ; preds = %278, %1278
  %284 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1280, %1278 ], [ %280, %278 ]
  %285 = phi i64 [ %1279, %1278 ], [ %281, %278 ]
  %286 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %284, i64 0, i32 0
  %287 = load i8*, i8** %286, align 8
  %288 = icmp eq i8* %287, null
  br i1 %288, label %295, label %289

289:                                              ; preds = %283
  %290 = ptrtoint i8* %287 to i64
  %291 = inttoptr i64 %285 to %"class.base::internal::UncheckedObserverAdapter"*
  %292 = inttoptr i64 %285 to i64*
  store i64 %290, i64* %292, align 8
  %293 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 1
  %294 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %293 to i64
  br label %295

295:                                              ; preds = %289, %283
  %296 = phi i64 [ %285, %283 ], [ %294, %289 ]
  %297 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %284, i64 1, i32 0
  %298 = load i8*, i8** %297, align 8
  %299 = icmp eq i8* %298, null
  br i1 %299, label %1256, label %1250

300:                                              ; preds = %1278, %278
  %301 = phi i64 [ %279, %278 ], [ %1279, %1278 ]
  %302 = inttoptr i64 %301 to %"class.base::internal::UncheckedObserverAdapter"*
  %303 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %234, align 8
  br label %304

304:                                              ; preds = %300, %249
  %305 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %249 ], [ %303, %300 ]
  %306 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %246, %249 ], [ %302, %300 ]
  %307 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %306, %305
  br i1 %307, label %309, label %308

308:                                              ; preds = %304
  store %"class.base::internal::UncheckedObserverAdapter"* %306, %"class.base::internal::UncheckedObserverAdapter"** %234, align 8
  br label %309

309:                                              ; preds = %242, %308, %304, %245, %223
  %310 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %25, align 8
  %311 = icmp eq %"class.base::ObserverList.92"* %310, null
  br i1 %311, label %313, label %312

312:                                              ; preds = %309
  store %"class.base::ObserverList.92"* null, %"class.base::ObserverList.92"** %25, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %34) #12
  br label %313

313:                                              ; preds = %220, %309, %312
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #12
  br label %1248

314:                                              ; preds = %120
  %315 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %87, i64 0, i32 0, i32 0, i32 0
  %316 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %315, align 8
  %317 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %316, i64 %123
  %318 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %317 to %"class.wm::ActivationChangeObserver"**
  %319 = load %"class.wm::ActivationChangeObserver"*, %"class.wm::ActivationChangeObserver"** %318, align 8
  %320 = load %"class.aura::Window"*, %"class.aura::Window"** %17, align 8
  %321 = bitcast %"class.wm::ActivationChangeObserver"* %319 to void (%"class.wm::ActivationChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)***
  %322 = load void (%"class.wm::ActivationChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.wm::ActivationChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*** %321, align 8
  %323 = getelementptr inbounds void (%"class.wm::ActivationChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %322, i64 2
  %324 = load void (%"class.wm::ActivationChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %323, align 8
  call void %324(%"class.wm::ActivationChangeObserver"* %319, %"class.aura::Window"* nonnull %2, %"class.aura::Window"* %320) #12
  %325 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %25, align 8
  %326 = icmp eq %"class.base::ObserverList.92"* %325, null
  br i1 %326, label %327, label %328

327:                                              ; preds = %352, %348, %314, %328, %342
  br label %86

328:                                              ; preds = %314
  %329 = load i64, i64* %26, align 8
  %330 = add i64 %329, 1
  store i64 %330, i64* %26, align 8
  %331 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %325, i64 0, i32 0, i32 0, i32 1
  %332 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = bitcast %"class.base::ObserverList.92"* %325 to i64*
  %335 = load i64, i64* %334, align 8
  %336 = sub i64 %333, %335
  %337 = ashr exact i64 %336, 3
  %338 = load i64, i64* %27, align 8
  %339 = icmp ult i64 %337, %338
  %340 = select i1 %339, i64 %337, i64 %338
  %341 = icmp ult i64 %330, %340
  br i1 %341, label %342, label %327

342:                                              ; preds = %328
  %343 = inttoptr i64 %335 to %"class.base::internal::UncheckedObserverAdapter"*
  %344 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %325, i64 0, i32 0, i32 0, i32 0
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %343, i64 %330, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %348, label %327

348:                                              ; preds = %342, %352
  %349 = phi i64 [ %350, %352 ], [ %330, %342 ]
  %350 = add nuw i64 %349, 1
  store i64 %350, i64* %26, align 8
  %351 = icmp ult i64 %350, %340
  br i1 %351, label %352, label %327

352:                                              ; preds = %348
  %353 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %344, align 8
  %354 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %353, i64 %350, i32 0
  %355 = load i8*, i8** %354, align 8
  %356 = icmp eq i8* %355, null
  br i1 %356, label %348, label %327

357:                                              ; preds = %16
  %358 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %359 = bitcast %"class.aura::Window"** %358 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %361, align 8
  store %"class.aura::Window"* %3, %"class.aura::Window"** %358, align 8
  %362 = bitcast %"class.aura::WindowTracker"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %362) #12
  %363 = bitcast %"class.aura::WindowTracker"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %363, i8 -86, i64 48, i1 false)
  call void @_ZN4aura13WindowTrackerC1Ev(%"class.aura::WindowTracker"* nonnull %7) #12
  %364 = icmp eq %"class.aura::Window"* %18, null
  br i1 %364, label %366, label %365

365:                                              ; preds = %357
  call void @_ZN4aura13WindowTracker3AddEPNS_6WindowE(%"class.aura::WindowTracker"* nonnull %7, %"class.aura::Window"* nonnull %18) #12
  br label %366

366:                                              ; preds = %357, %365
  %367 = icmp eq %"class.aura::Window"* %3, null
  br i1 %367, label %456, label %368

368:                                              ; preds = %366
  %369 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  %370 = load %"class.aura::Window"**, %"class.aura::Window"*** %369, align 8
  %371 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1, i32 0, i32 1
  %372 = load %"class.aura::Window"**, %"class.aura::Window"*** %371, align 8
  %373 = icmp eq %"class.aura::Window"** %370, %372
  %374 = ptrtoint %"class.aura::Window"** %370 to i64
  br i1 %373, label %382, label %375

375:                                              ; preds = %368, %379
  %376 = phi %"class.aura::Window"** [ %380, %379 ], [ %370, %368 ]
  %377 = load %"class.aura::Window"*, %"class.aura::Window"** %376, align 8
  %378 = icmp eq %"class.aura::Window"* %377, %3
  br i1 %378, label %382, label %379

379:                                              ; preds = %375
  %380 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %376, i64 1
  %381 = icmp eq %"class.aura::Window"** %380, %372
  br i1 %381, label %385, label %375

382:                                              ; preds = %375, %368
  %383 = phi %"class.aura::Window"** [ %370, %368 ], [ %376, %375 ]
  %384 = icmp eq %"class.aura::Window"** %383, %372
  br i1 %384, label %385, label %456

385:                                              ; preds = %379, %382
  %386 = ptrtoint %"class.aura::Window"* %3 to i64
  %387 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1
  %388 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1, i32 0, i32 2, i32 0, i32 0
  %389 = load %"class.aura::Window"**, %"class.aura::Window"*** %388, align 8
  %390 = icmp eq %"class.aura::Window"** %372, %389
  %391 = ptrtoint %"class.aura::Window"** %389 to i64
  br i1 %390, label %397, label %392

392:                                              ; preds = %385
  %393 = bitcast %"class.aura::Window"** %372 to i64*
  store i64 %386, i64* %393, align 8
  %394 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %372, i64 1
  %395 = ptrtoint %"class.aura::Window"** %394 to i64
  %396 = bitcast %"class.aura::Window"*** %371 to i64*
  store i64 %395, i64* %396, align 8
  br label %453

397:                                              ; preds = %385
  %398 = ptrtoint %"class.aura::Window"** %372 to i64
  %399 = bitcast %"class.aura::Window"*** %371 to i64*
  %400 = bitcast %"class.std::__1::vector.41"* %387 to i64*
  %401 = sub i64 %398, %374
  %402 = ashr exact i64 %401, 3
  %403 = add nsw i64 %402, 1
  %404 = icmp ugt i64 %403, 2305843009213693951
  br i1 %404, label %405, label %407

405:                                              ; preds = %397
  %406 = bitcast %"class.std::__1::vector.41"* %387 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %406) #14
  unreachable

407:                                              ; preds = %397
  %408 = bitcast %"class.aura::Window"*** %388 to i64*
  %409 = sub i64 %391, %374
  %410 = ashr exact i64 %409, 3
  %411 = icmp ult i64 %410, 1152921504606846975
  br i1 %411, label %412, label %420

412:                                              ; preds = %407
  %413 = ashr exact i64 %409, 2
  %414 = icmp ult i64 %413, %403
  %415 = select i1 %414, i64 %403, i64 %413
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %425, label %417

417:                                              ; preds = %412
  %418 = icmp ugt i64 %415, 2305843009213693951
  br i1 %418, label %419, label %420

419:                                              ; preds = %417
  call void @abort() #14
  unreachable

420:                                              ; preds = %417, %407
  %421 = phi i64 [ %415, %417 ], [ 2305843009213693951, %407 ]
  %422 = shl i64 %421, 3
  %423 = call i8* @_Znwm(i64 %422) #13
  %424 = bitcast i8* %423 to %"class.aura::Window"**
  br label %425

425:                                              ; preds = %420, %412
  %426 = phi i64 [ %421, %420 ], [ 0, %412 ]
  %427 = phi %"class.aura::Window"** [ %424, %420 ], [ null, %412 ]
  %428 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %427, i64 %402
  %429 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %427, i64 %426
  %430 = ptrtoint %"class.aura::Window"** %429 to i64
  %431 = bitcast %"class.aura::Window"** %428 to i64*
  store i64 %386, i64* %431, align 8
  %432 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %428, i64 1
  %433 = ptrtoint %"class.aura::Window"** %432 to i64
  %434 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %387, i64 0, i32 0, i32 0
  %435 = load %"class.aura::Window"**, %"class.aura::Window"*** %434, align 8
  %436 = load i64, i64* %399, align 8
  %437 = ptrtoint %"class.aura::Window"** %435 to i64
  %438 = sub i64 %436, %437
  %439 = ashr exact i64 %438, 3
  %440 = sub nsw i64 0, %439
  %441 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %428, i64 %440
  %442 = ptrtoint %"class.aura::Window"** %441 to i64
  %443 = icmp sgt i64 %438, 0
  br i1 %443, label %444, label %448

444:                                              ; preds = %425
  %445 = bitcast %"class.aura::Window"** %441 to i8*
  %446 = bitcast %"class.aura::Window"** %435 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %445, i8* align 8 %446, i64 %438, i1 false) #12
  %447 = load %"class.aura::Window"**, %"class.aura::Window"*** %434, align 8
  br label %448

448:                                              ; preds = %444, %425
  %449 = phi %"class.aura::Window"** [ %435, %425 ], [ %447, %444 ]
  store i64 %442, i64* %400, align 8
  store i64 %433, i64* %399, align 8
  store i64 %430, i64* %408, align 8
  %450 = icmp eq %"class.aura::Window"** %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %448
  %452 = bitcast %"class.aura::Window"** %449 to i8*
  call void @_ZdlPv(i8* %452) #13
  br label %453

453:                                              ; preds = %392, %448, %451
  %454 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 0
  %455 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %454, align 8
  call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %3, %"class.aura::WindowObserver"* %455) #12
  br label %456

456:                                              ; preds = %382, %366, %453
  %457 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9
  %458 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %458) #12
  %459 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %8, i64 0, i32 0, i32 1
  %460 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %8, i64 0, i32 1
  %461 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %8, i64 0, i32 2
  %462 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %457, i64 0, i32 0, i32 0, i32 0
  %463 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %463, i8 -86, i64 40, i1 false)
  %464 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %462, align 8, !noalias !20
  %465 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %466 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %465, align 8, !noalias !20
  %467 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %464, %466
  %468 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %8, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %468) #12
  br i1 %467, label %469, label %471

469:                                              ; preds = %456
  %470 = bitcast %"class.base::ObserverList.92"** %459 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %470, i8 0, i64 24, i1 false) #12, !alias.scope !20
  br label %511

471:                                              ; preds = %456
  store %"class.base::ObserverList.92"* %457, %"class.base::ObserverList.92"** %459, align 8
  %472 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %468, %"class.base::internal::LinkNodeBase"* %472) #12
  store i64 0, i64* %460, align 8
  %473 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 3
  %474 = load i32, i32* %473, align 8
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %483, label %476

476:                                              ; preds = %471
  %477 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %465 to i64*
  %478 = load i64, i64* %477, align 8
  %479 = bitcast %"class.base::ObserverList.92"* %457 to i64*
  %480 = load i64, i64* %479, align 8
  %481 = sub i64 %478, %480
  %482 = ashr exact i64 %481, 3
  br label %483

483:                                              ; preds = %476, %471
  %484 = phi i64 [ %482, %476 ], [ -1, %471 ]
  store i64 %484, i64* %461, align 8
  %485 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %459, align 8
  %486 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %485, i64 0, i32 0, i32 0, i32 1
  %487 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %486 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = bitcast %"class.base::ObserverList.92"* %485 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = sub i64 %488, %490
  %492 = ashr exact i64 %491, 3
  %493 = icmp ult i64 %492, %484
  %494 = select i1 %493, i64 %492, i64 %484
  %495 = icmp eq i64 %494, 0
  br i1 %495, label %511, label %496

496:                                              ; preds = %483
  %497 = inttoptr i64 %490 to %"class.base::internal::UncheckedObserverAdapter"*
  %498 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %485, i64 0, i32 0, i32 0, i32 0
  %499 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %497, i64 0, i32 0
  %500 = load i8*, i8** %499, align 8
  %501 = icmp eq i8* %500, null
  br i1 %501, label %502, label %511

502:                                              ; preds = %496, %506
  %503 = phi i64 [ %504, %506 ], [ 0, %496 ]
  %504 = add nuw i64 %503, 1
  store i64 %504, i64* %460, align 8
  %505 = icmp ult i64 %504, %494
  br i1 %505, label %506, label %511

506:                                              ; preds = %502
  %507 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %498, align 8
  %508 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %507, i64 %504, i32 0
  %509 = load i8*, i8** %508, align 8
  %510 = icmp eq i8* %509, null
  br i1 %510, label %502, label %511

511:                                              ; preds = %506, %502, %496, %483, %469
  %512 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %512) #12
  %513 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %9, i64 0, i32 0, i32 1
  %514 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %9, i64 0, i32 1
  %515 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %9, i64 0, i32 2
  %516 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %9, i64 0, i32 0, i32 0, i32 0
  %517 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %517, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %516) #12
  %518 = bitcast %"class.base::ObserverList.92"** %513 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %518, i8 0, i64 24, i1 false) #12, !alias.scope !23
  %519 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %459, align 8
  br label %520

520:                                              ; preds = %578, %511
  %521 = phi %"class.base::ObserverList.92"* [ %519, %511 ], [ %576, %578 ]
  %522 = icmp eq %"class.base::ObserverList.92"* %521, null
  br i1 %522, label %538, label %523

523:                                              ; preds = %520
  %524 = load i64, i64* %460, align 8
  %525 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %521, i64 0, i32 0, i32 0, i32 1
  %526 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %"class.base::ObserverList.92"* %521 to i64*
  %529 = load i64, i64* %528, align 8
  %530 = sub i64 %527, %529
  %531 = ashr exact i64 %530, 3
  %532 = load i64, i64* %461, align 8
  %533 = icmp ult i64 %531, %532
  %534 = select i1 %533, i64 %531, i64 %532
  %535 = icmp eq i64 %524, %534
  br i1 %535, label %538, label %536

536:                                              ; preds = %523
  %537 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %513, align 8
  br label %554

538:                                              ; preds = %523, %520
  %539 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %513, align 8
  %540 = icmp eq %"class.base::ObserverList.92"* %539, null
  br i1 %540, label %704, label %541

541:                                              ; preds = %538
  %542 = load i64, i64* %514, align 8
  %543 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %539, i64 0, i32 0, i32 0, i32 1
  %544 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %543 to i64*
  %545 = load i64, i64* %544, align 8
  %546 = bitcast %"class.base::ObserverList.92"* %539 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = sub i64 %545, %547
  %549 = ashr exact i64 %548, 3
  %550 = load i64, i64* %515, align 8
  %551 = icmp ult i64 %549, %550
  %552 = select i1 %551, i64 %549, i64 %550
  %553 = icmp eq i64 %542, %552
  br i1 %553, label %612, label %554

554:                                              ; preds = %541, %536
  %555 = phi %"class.base::ObserverList.92"* [ %537, %536 ], [ %539, %541 ]
  %556 = icmp eq %"class.base::ObserverList.92"* %521, %555
  %557 = load i64, i64* %460, align 8
  %558 = load i64, i64* %514, align 8
  %559 = icmp eq i64 %557, %558
  %560 = and i1 %556, %559
  br i1 %560, label %608, label %561

561:                                              ; preds = %554
  %562 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %521, i64 0, i32 0, i32 0, i32 0
  %563 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %562, align 8
  %564 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %563, i64 %557
  %565 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %564 to %"class.wm::ActivationChangeObserver"**
  %566 = load %"class.wm::ActivationChangeObserver"*, %"class.wm::ActivationChangeObserver"** %565, align 8
  %567 = load %"class.aura::Window"*, %"class.aura::Window"** %17, align 8
  %568 = bitcast %"class.wm::ActivationChangeObserver"* %566 to void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)***
  %569 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*** %568, align 8
  %570 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %569, align 8
  call void %570(%"class.wm::ActivationChangeObserver"* %566, i32 %1, %"class.aura::Window"* %3, %"class.aura::Window"* %567) #12
  %571 = load i8, i8* %13, align 8, !range !2
  %572 = icmp eq i8 %571, 0
  br i1 %572, label %573, label %575

573:                                              ; preds = %561
  %574 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %513, align 8
  br label %608

575:                                              ; preds = %561
  %576 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %459, align 8
  %577 = icmp eq %"class.base::ObserverList.92"* %576, null
  br i1 %577, label %578, label %579

578:                                              ; preds = %603, %599, %575, %579, %593
  br label %520

579:                                              ; preds = %575
  %580 = load i64, i64* %460, align 8
  %581 = add i64 %580, 1
  store i64 %581, i64* %460, align 8
  %582 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %576, i64 0, i32 0, i32 0, i32 1
  %583 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %582 to i64*
  %584 = load i64, i64* %583, align 8
  %585 = bitcast %"class.base::ObserverList.92"* %576 to i64*
  %586 = load i64, i64* %585, align 8
  %587 = sub i64 %584, %586
  %588 = ashr exact i64 %587, 3
  %589 = load i64, i64* %461, align 8
  %590 = icmp ult i64 %588, %589
  %591 = select i1 %590, i64 %588, i64 %589
  %592 = icmp ult i64 %581, %591
  br i1 %592, label %593, label %578

593:                                              ; preds = %579
  %594 = inttoptr i64 %586 to %"class.base::internal::UncheckedObserverAdapter"*
  %595 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %576, i64 0, i32 0, i32 0, i32 0
  %596 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %594, i64 %581, i32 0
  %597 = load i8*, i8** %596, align 8
  %598 = icmp eq i8* %597, null
  br i1 %598, label %599, label %578

599:                                              ; preds = %593, %603
  %600 = phi i64 [ %601, %603 ], [ %581, %593 ]
  %601 = add nuw i64 %600, 1
  store i64 %601, i64* %460, align 8
  %602 = icmp ult i64 %601, %591
  br i1 %602, label %603, label %578

603:                                              ; preds = %599
  %604 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %595, align 8
  %605 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %604, i64 %601, i32 0
  %606 = load i8*, i8** %605, align 8
  %607 = icmp eq i8* %606, null
  br i1 %607, label %599, label %578

608:                                              ; preds = %554, %573
  %609 = phi %"class.base::ObserverList.92"* [ %574, %573 ], [ %521, %554 ]
  %610 = phi i32 [ 1, %573 ], [ 4, %554 ]
  %611 = icmp eq %"class.base::ObserverList.92"* %609, null
  br i1 %611, label %704, label %612

612:                                              ; preds = %541, %608
  %613 = phi i32 [ %610, %608 ], [ 4, %541 ]
  %614 = phi %"class.base::ObserverList.92"* [ %609, %608 ], [ %539, %541 ]
  %615 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %614, i64 0, i32 1
  %616 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %614, i64 0, i32 1, i32 0, i32 0, i32 1
  %617 = bitcast %"class.base::internal::LinkNodeBase"** %616 to %"class.base::LinkNode.94"**
  %618 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %617, align 8
  %619 = bitcast %"class.base::LinkedList.93"* %615 to %"class.base::LinkNode.94"**
  %620 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %619, align 8
  %621 = icmp eq %"class.base::LinkNode.94"* %618, %620
  br i1 %621, label %622, label %700

622:                                              ; preds = %612
  %623 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %614, i64 0, i32 0, i32 0, i32 0
  %624 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %623, align 8
  %625 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %614, i64 0, i32 0, i32 0, i32 1
  %626 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %625, align 8
  %627 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %624, %626
  br i1 %627, label %636, label %628

628:                                              ; preds = %622, %633
  %629 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %634, %633 ], [ %624, %622 ]
  %630 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %629, i64 0, i32 0
  %631 = load i8*, i8** %630, align 8
  %632 = icmp eq i8* %631, null
  br i1 %632, label %636, label %633

633:                                              ; preds = %628
  %634 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %629, i64 1
  %635 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %634, %626
  br i1 %635, label %700, label %628

636:                                              ; preds = %628, %622
  %637 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %624, %622 ], [ %629, %628 ]
  %638 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %637 to i64
  %639 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %637, %626
  br i1 %639, label %700, label %640

640:                                              ; preds = %636
  %641 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %637, i64 1
  %642 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %641, %626
  br i1 %642, label %695, label %643

643:                                              ; preds = %640
  %644 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %626, i64 -2, i32 0
  %645 = ptrtoint i8** %644 to i64
  %646 = sub i64 %645, %638
  %647 = lshr i64 %646, 3
  %648 = add nuw nsw i64 %647, 1
  %649 = and i64 %648, 3
  %650 = icmp eq i64 %649, 0
  br i1 %650, label %669, label %651

651:                                              ; preds = %643, %664
  %652 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %666, %664 ], [ %641, %643 ]
  %653 = phi i64 [ %665, %664 ], [ %638, %643 ]
  %654 = phi i64 [ %667, %664 ], [ %649, %643 ]
  %655 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %652, i64 0, i32 0
  %656 = load i8*, i8** %655, align 8
  %657 = icmp eq i8* %656, null
  br i1 %657, label %664, label %658

658:                                              ; preds = %651
  %659 = ptrtoint i8* %656 to i64
  %660 = inttoptr i64 %653 to %"class.base::internal::UncheckedObserverAdapter"*
  %661 = inttoptr i64 %653 to i64*
  store i64 %659, i64* %661, align 8
  %662 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %660, i64 1
  %663 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %662 to i64
  br label %664

664:                                              ; preds = %658, %651
  %665 = phi i64 [ %653, %651 ], [ %663, %658 ]
  %666 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %652, i64 1
  %667 = add i64 %654, -1
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %651, !llvm.loop !26

669:                                              ; preds = %664, %643
  %670 = phi i64 [ undef, %643 ], [ %665, %664 ]
  %671 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %641, %643 ], [ %666, %664 ]
  %672 = phi i64 [ %638, %643 ], [ %665, %664 ]
  %673 = icmp ult i64 %646, 24
  br i1 %673, label %691, label %674

674:                                              ; preds = %669, %1438
  %675 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1440, %1438 ], [ %671, %669 ]
  %676 = phi i64 [ %1439, %1438 ], [ %672, %669 ]
  %677 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %675, i64 0, i32 0
  %678 = load i8*, i8** %677, align 8
  %679 = icmp eq i8* %678, null
  br i1 %679, label %686, label %680

680:                                              ; preds = %674
  %681 = ptrtoint i8* %678 to i64
  %682 = inttoptr i64 %676 to %"class.base::internal::UncheckedObserverAdapter"*
  %683 = inttoptr i64 %676 to i64*
  store i64 %681, i64* %683, align 8
  %684 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %682, i64 1
  %685 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %684 to i64
  br label %686

686:                                              ; preds = %680, %674
  %687 = phi i64 [ %676, %674 ], [ %685, %680 ]
  %688 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %675, i64 1, i32 0
  %689 = load i8*, i8** %688, align 8
  %690 = icmp eq i8* %689, null
  br i1 %690, label %1416, label %1410

691:                                              ; preds = %1438, %669
  %692 = phi i64 [ %670, %669 ], [ %1439, %1438 ]
  %693 = inttoptr i64 %692 to %"class.base::internal::UncheckedObserverAdapter"*
  %694 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %625, align 8
  br label %695

695:                                              ; preds = %691, %640
  %696 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %626, %640 ], [ %694, %691 ]
  %697 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %637, %640 ], [ %693, %691 ]
  %698 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %697, %696
  br i1 %698, label %700, label %699

699:                                              ; preds = %695
  store %"class.base::internal::UncheckedObserverAdapter"* %697, %"class.base::internal::UncheckedObserverAdapter"** %625, align 8
  br label %700

700:                                              ; preds = %633, %699, %695, %636, %612
  %701 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %513, align 8
  %702 = icmp eq %"class.base::ObserverList.92"* %701, null
  br i1 %702, label %704, label %703

703:                                              ; preds = %700
  store %"class.base::ObserverList.92"* null, %"class.base::ObserverList.92"** %513, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %516) #12
  br label %704

704:                                              ; preds = %538, %608, %700, %703
  %705 = phi i32 [ %610, %608 ], [ %613, %700 ], [ %613, %703 ], [ 4, %538 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %512) #12
  %706 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %459, align 8
  %707 = icmp eq %"class.base::ObserverList.92"* %706, null
  br i1 %707, label %798, label %708

708:                                              ; preds = %704
  %709 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %706, i64 0, i32 1
  %710 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %706, i64 0, i32 1, i32 0, i32 0, i32 1
  %711 = bitcast %"class.base::internal::LinkNodeBase"** %710 to %"class.base::LinkNode.94"**
  %712 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %711, align 8
  %713 = bitcast %"class.base::LinkedList.93"* %709 to %"class.base::LinkNode.94"**
  %714 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %713, align 8
  %715 = icmp eq %"class.base::LinkNode.94"* %712, %714
  br i1 %715, label %716, label %794

716:                                              ; preds = %708
  %717 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %706, i64 0, i32 0, i32 0, i32 0
  %718 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %717, align 8
  %719 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %706, i64 0, i32 0, i32 0, i32 1
  %720 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %719, align 8
  %721 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %718, %720
  br i1 %721, label %730, label %722

722:                                              ; preds = %716, %727
  %723 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %728, %727 ], [ %718, %716 ]
  %724 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %723, i64 0, i32 0
  %725 = load i8*, i8** %724, align 8
  %726 = icmp eq i8* %725, null
  br i1 %726, label %730, label %727

727:                                              ; preds = %722
  %728 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %723, i64 1
  %729 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %728, %720
  br i1 %729, label %794, label %722

730:                                              ; preds = %722, %716
  %731 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %718, %716 ], [ %723, %722 ]
  %732 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %731 to i64
  %733 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %731, %720
  br i1 %733, label %794, label %734

734:                                              ; preds = %730
  %735 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %731, i64 1
  %736 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %735, %720
  br i1 %736, label %789, label %737

737:                                              ; preds = %734
  %738 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %720, i64 -2, i32 0
  %739 = ptrtoint i8** %738 to i64
  %740 = sub i64 %739, %732
  %741 = lshr i64 %740, 3
  %742 = add nuw nsw i64 %741, 1
  %743 = and i64 %742, 3
  %744 = icmp eq i64 %743, 0
  br i1 %744, label %763, label %745

745:                                              ; preds = %737, %758
  %746 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %760, %758 ], [ %735, %737 ]
  %747 = phi i64 [ %759, %758 ], [ %732, %737 ]
  %748 = phi i64 [ %761, %758 ], [ %743, %737 ]
  %749 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %746, i64 0, i32 0
  %750 = load i8*, i8** %749, align 8
  %751 = icmp eq i8* %750, null
  br i1 %751, label %758, label %752

752:                                              ; preds = %745
  %753 = ptrtoint i8* %750 to i64
  %754 = inttoptr i64 %747 to %"class.base::internal::UncheckedObserverAdapter"*
  %755 = inttoptr i64 %747 to i64*
  store i64 %753, i64* %755, align 8
  %756 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %754, i64 1
  %757 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %756 to i64
  br label %758

758:                                              ; preds = %752, %745
  %759 = phi i64 [ %747, %745 ], [ %757, %752 ]
  %760 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %746, i64 1
  %761 = add i64 %748, -1
  %762 = icmp eq i64 %761, 0
  br i1 %762, label %763, label %745, !llvm.loop !27

763:                                              ; preds = %758, %737
  %764 = phi i64 [ undef, %737 ], [ %759, %758 ]
  %765 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %735, %737 ], [ %760, %758 ]
  %766 = phi i64 [ %732, %737 ], [ %759, %758 ]
  %767 = icmp ult i64 %740, 24
  br i1 %767, label %785, label %768

768:                                              ; preds = %763, %1406
  %769 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1408, %1406 ], [ %765, %763 ]
  %770 = phi i64 [ %1407, %1406 ], [ %766, %763 ]
  %771 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %769, i64 0, i32 0
  %772 = load i8*, i8** %771, align 8
  %773 = icmp eq i8* %772, null
  br i1 %773, label %780, label %774

774:                                              ; preds = %768
  %775 = ptrtoint i8* %772 to i64
  %776 = inttoptr i64 %770 to %"class.base::internal::UncheckedObserverAdapter"*
  %777 = inttoptr i64 %770 to i64*
  store i64 %775, i64* %777, align 8
  %778 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %776, i64 1
  %779 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %778 to i64
  br label %780

780:                                              ; preds = %774, %768
  %781 = phi i64 [ %770, %768 ], [ %779, %774 ]
  %782 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %769, i64 1, i32 0
  %783 = load i8*, i8** %782, align 8
  %784 = icmp eq i8* %783, null
  br i1 %784, label %1384, label %1378

785:                                              ; preds = %1406, %763
  %786 = phi i64 [ %764, %763 ], [ %1407, %1406 ]
  %787 = inttoptr i64 %786 to %"class.base::internal::UncheckedObserverAdapter"*
  %788 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %719, align 8
  br label %789

789:                                              ; preds = %785, %734
  %790 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %720, %734 ], [ %788, %785 ]
  %791 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %731, %734 ], [ %787, %785 ]
  %792 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %791, %790
  br i1 %792, label %794, label %793

793:                                              ; preds = %789
  store %"class.base::internal::UncheckedObserverAdapter"* %791, %"class.base::internal::UncheckedObserverAdapter"** %719, align 8
  br label %794

794:                                              ; preds = %727, %793, %789, %730, %708
  %795 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %459, align 8
  %796 = icmp eq %"class.base::ObserverList.92"* %795, null
  br i1 %796, label %798, label %797

797:                                              ; preds = %794
  store %"class.base::ObserverList.92"* null, %"class.base::ObserverList.92"** %459, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %468) #12
  br label %798

798:                                              ; preds = %704, %794, %797
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %458) #12
  %799 = icmp eq i32 %705, 4
  br i1 %799, label %800, label %1241

800:                                              ; preds = %798
  %801 = load %"class.aura::Window"*, %"class.aura::Window"** %17, align 8
  %802 = icmp eq %"class.aura::Window"* %801, null
  br i1 %802, label %846, label %803

803:                                              ; preds = %800
  %804 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  %805 = load %"class.aura::Window"**, %"class.aura::Window"*** %804, align 8
  %806 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 1, i32 0, i32 1
  %807 = load %"class.aura::Window"**, %"class.aura::Window"*** %806, align 8
  %808 = icmp eq %"class.aura::Window"** %805, %807
  br i1 %808, label %816, label %809

809:                                              ; preds = %803, %813
  %810 = phi %"class.aura::Window"** [ %814, %813 ], [ %805, %803 ]
  %811 = load %"class.aura::Window"*, %"class.aura::Window"** %810, align 8
  %812 = icmp eq %"class.aura::Window"* %811, %801
  br i1 %812, label %816, label %813

813:                                              ; preds = %809
  %814 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %810, i64 1
  %815 = icmp eq %"class.aura::Window"** %814, %807
  br i1 %815, label %846, label %809

816:                                              ; preds = %809, %803
  %817 = phi %"class.aura::Window"** [ %805, %803 ], [ %810, %809 ]
  %818 = icmp eq %"class.aura::Window"** %817, %807
  br i1 %818, label %846, label %819

819:                                              ; preds = %816
  %820 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 5
  %821 = load %"class.aura::Window"*, %"class.aura::Window"** %820, align 8
  %822 = icmp eq %"class.aura::Window"* %821, %801
  br i1 %822, label %846, label %823

823:                                              ; preds = %819
  %824 = ptrtoint %"class.aura::Window"** %807 to i64
  br i1 %808, label %832, label %825

825:                                              ; preds = %823, %829
  %826 = phi %"class.aura::Window"** [ %830, %829 ], [ %805, %823 ]
  %827 = load %"class.aura::Window"*, %"class.aura::Window"** %826, align 8
  %828 = icmp eq %"class.aura::Window"* %827, %801
  br i1 %828, label %832, label %829

829:                                              ; preds = %825
  %830 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %826, i64 1
  %831 = icmp eq %"class.aura::Window"** %830, %807
  br i1 %831, label %832, label %825

832:                                              ; preds = %829, %825, %823
  %833 = phi %"class.aura::Window"** [ %805, %823 ], [ %826, %825 ], [ %807, %829 ]
  %834 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %833, i64 1
  %835 = ptrtoint %"class.aura::Window"** %834 to i64
  %836 = sub i64 %824, %835
  %837 = ashr exact i64 %836, 3
  %838 = icmp eq i64 %836, 0
  br i1 %838, label %842, label %839

839:                                              ; preds = %832
  %840 = bitcast %"class.aura::Window"** %833 to i8*
  %841 = bitcast %"class.aura::Window"** %834 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %840, i8* align 8 %841, i64 %836, i1 false) #12
  br label %842

842:                                              ; preds = %832, %839
  %843 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %833, i64 %837
  store %"class.aura::Window"** %843, %"class.aura::Window"*** %806, align 8
  %844 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 11, i32 0
  %845 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %844, align 8
  call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %801, %"class.aura::WindowObserver"* %845) #12
  br label %846

846:                                              ; preds = %813, %816, %819, %800, %842
  store %"class.aura::Window"* %3, %"class.aura::Window"** %17, align 8
  br i1 %367, label %865, label %847

847:                                              ; preds = %846
  %848 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %3, i64 0, i32 4
  %849 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN4aura6client9kModalKeyE, align 8
  %850 = call i32 @_ZNK2ui15PropertyHandler11GetPropertyINS_9ModalTypeEEET_PKNS_13ClassPropertyIS3_EE(%"class.ui::PropertyHandler"* %848, %"struct.ui::ClassProperty"* %849) #12
  %851 = icmp eq i32 %850, 1
  br i1 %851, label %852, label %861

852:                                              ; preds = %847
  %853 = call %"class.aura::Window"* @_ZN2wm18GetTransientParentEPN4aura6WindowE(%"class.aura::Window"* nonnull %3) #12
  %854 = icmp eq %"class.aura::Window"* %853, null
  br i1 %854, label %861, label %855

855:                                              ; preds = %852, %855
  %856 = phi %"class.aura::Window"* [ %859, %855 ], [ %853, %852 ]
  %857 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %856, i64 0, i32 13
  %858 = load %"class.aura::Window"*, %"class.aura::Window"** %857, align 8
  call void @_ZN4aura6Window15StackChildAtTopEPS0_(%"class.aura::Window"* %858, %"class.aura::Window"* nonnull %856) #12
  %859 = call %"class.aura::Window"* @_ZN2wm18GetTransientParentEPN4aura6WindowE(%"class.aura::Window"* nonnull %856) #12
  %860 = icmp eq %"class.aura::Window"* %859, null
  br i1 %860, label %861, label %855

861:                                              ; preds = %855, %847, %852
  %862 = load %"class.aura::Window"*, %"class.aura::Window"** %17, align 8
  %863 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %862, i64 0, i32 13
  %864 = load %"class.aura::Window"*, %"class.aura::Window"** %863, align 8
  call void @_ZN4aura6Window15StackChildAtTopEPS0_(%"class.aura::Window"* %864, %"class.aura::Window"* %862) #12
  br label %865

865:                                              ; preds = %846, %861
  %866 = load i8, i8* %13, align 8, !range !2
  %867 = icmp eq i8 %866, 0
  br i1 %867, label %1241, label %868

868:                                              ; preds = %865
  %869 = call zeroext i1 @_ZNK4aura13WindowTracker8ContainsEPNS_6WindowE(%"class.aura::WindowTracker"* nonnull %7, %"class.aura::Window"* %18) #12
  br i1 %869, label %870, label %879

870:                                              ; preds = %868
  %871 = call %"class.wm::ActivationChangeObserver"* @_ZN2wm27GetActivationChangeObserverEPN4aura6WindowE(%"class.aura::Window"* %18) #12
  %872 = icmp eq %"class.wm::ActivationChangeObserver"* %871, null
  br i1 %872, label %879, label %873

873:                                              ; preds = %870
  %874 = load %"class.aura::Window"*, %"class.aura::Window"** %17, align 8
  %875 = bitcast %"class.wm::ActivationChangeObserver"* %871 to void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)***
  %876 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*** %875, align 8
  %877 = getelementptr inbounds void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %876, i64 1
  %878 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %877, align 8
  call void %878(%"class.wm::ActivationChangeObserver"* nonnull %871, i32 %1, %"class.aura::Window"* %874, %"class.aura::Window"* %18) #12
  br label %879

879:                                              ; preds = %870, %873, %868
  %880 = load i8, i8* %13, align 8, !range !2
  %881 = icmp eq i8 %880, 0
  br i1 %881, label %1241, label %882

882:                                              ; preds = %879
  %883 = load %"class.aura::Window"*, %"class.aura::Window"** %17, align 8
  %884 = call %"class.wm::ActivationChangeObserver"* @_ZN2wm27GetActivationChangeObserverEPN4aura6WindowE(%"class.aura::Window"* %883) #12
  %885 = icmp eq %"class.wm::ActivationChangeObserver"* %884, null
  br i1 %885, label %894, label %886

886:                                              ; preds = %882
  %887 = load %"class.aura::Window"*, %"class.aura::Window"** %17, align 8
  %888 = call zeroext i1 @_ZNK4aura13WindowTracker8ContainsEPNS_6WindowE(%"class.aura::WindowTracker"* nonnull %7, %"class.aura::Window"* %18) #12
  %889 = select i1 %888, %"class.aura::Window"* %18, %"class.aura::Window"* null
  %890 = bitcast %"class.wm::ActivationChangeObserver"* %884 to void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)***
  %891 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*** %890, align 8
  %892 = getelementptr inbounds void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %891, i64 1
  %893 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %892, align 8
  call void %893(%"class.wm::ActivationChangeObserver"* nonnull %884, i32 %1, %"class.aura::Window"* %887, %"class.aura::Window"* %889) #12
  br label %894

894:                                              ; preds = %882, %886
  %895 = load i8, i8* %13, align 8, !range !2
  %896 = icmp eq i8 %895, 0
  br i1 %896, label %1241, label %897

897:                                              ; preds = %894
  %898 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %898) #12
  %899 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %10, i64 0, i32 0, i32 1
  %900 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %10, i64 0, i32 1
  %901 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %10, i64 0, i32 2
  %902 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %902, i8 -86, i64 40, i1 false)
  %903 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %462, align 8, !noalias !28
  %904 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %465, align 8, !noalias !28
  %905 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %903, %904
  %906 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %10, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %906) #12
  br i1 %905, label %907, label %909

907:                                              ; preds = %897
  %908 = bitcast %"class.base::ObserverList.92"** %899 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %908, i8 0, i64 24, i1 false) #12, !alias.scope !28
  br label %949

909:                                              ; preds = %897
  store %"class.base::ObserverList.92"* %457, %"class.base::ObserverList.92"** %899, align 8
  %910 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %906, %"class.base::internal::LinkNodeBase"* %910) #12
  store i64 0, i64* %900, align 8
  %911 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 9, i32 3
  %912 = load i32, i32* %911, align 8
  %913 = icmp eq i32 %912, 0
  br i1 %913, label %921, label %914

914:                                              ; preds = %909
  %915 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %465 to i64*
  %916 = load i64, i64* %915, align 8
  %917 = bitcast %"class.base::ObserverList.92"* %457 to i64*
  %918 = load i64, i64* %917, align 8
  %919 = sub i64 %916, %918
  %920 = ashr exact i64 %919, 3
  br label %921

921:                                              ; preds = %914, %909
  %922 = phi i64 [ %920, %914 ], [ -1, %909 ]
  store i64 %922, i64* %901, align 8
  %923 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %899, align 8
  %924 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %923, i64 0, i32 0, i32 0, i32 1
  %925 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %924 to i64*
  %926 = load i64, i64* %925, align 8
  %927 = bitcast %"class.base::ObserverList.92"* %923 to i64*
  %928 = load i64, i64* %927, align 8
  %929 = sub i64 %926, %928
  %930 = ashr exact i64 %929, 3
  %931 = icmp ult i64 %930, %922
  %932 = select i1 %931, i64 %930, i64 %922
  %933 = icmp eq i64 %932, 0
  br i1 %933, label %949, label %934

934:                                              ; preds = %921
  %935 = inttoptr i64 %928 to %"class.base::internal::UncheckedObserverAdapter"*
  %936 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %923, i64 0, i32 0, i32 0, i32 0
  %937 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %935, i64 0, i32 0
  %938 = load i8*, i8** %937, align 8
  %939 = icmp eq i8* %938, null
  br i1 %939, label %940, label %949

940:                                              ; preds = %934, %944
  %941 = phi i64 [ %942, %944 ], [ 0, %934 ]
  %942 = add nuw i64 %941, 1
  store i64 %942, i64* %900, align 8
  %943 = icmp ult i64 %942, %932
  br i1 %943, label %944, label %949

944:                                              ; preds = %940
  %945 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %936, align 8
  %946 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %945, i64 %942, i32 0
  %947 = load i8*, i8** %946, align 8
  %948 = icmp eq i8* %947, null
  br i1 %948, label %940, label %949

949:                                              ; preds = %944, %940, %934, %921, %907
  %950 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %950) #12
  %951 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %11, i64 0, i32 0, i32 1
  %952 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %11, i64 0, i32 1
  %953 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %11, i64 0, i32 2
  %954 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %11, i64 0, i32 0, i32 0, i32 0
  %955 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %955, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %954) #12
  %956 = bitcast %"class.base::ObserverList.92"** %951 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %956, i8 0, i64 24, i1 false) #12, !alias.scope !31
  %957 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %899, align 8
  br label %958

958:                                              ; preds = %1019, %949
  %959 = phi %"class.base::ObserverList.92"* [ %957, %949 ], [ %1017, %1019 ]
  %960 = icmp eq %"class.base::ObserverList.92"* %959, null
  br i1 %960, label %976, label %961

961:                                              ; preds = %958
  %962 = load i64, i64* %900, align 8
  %963 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %959, i64 0, i32 0, i32 0, i32 1
  %964 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %963 to i64*
  %965 = load i64, i64* %964, align 8
  %966 = bitcast %"class.base::ObserverList.92"* %959 to i64*
  %967 = load i64, i64* %966, align 8
  %968 = sub i64 %965, %967
  %969 = ashr exact i64 %968, 3
  %970 = load i64, i64* %901, align 8
  %971 = icmp ult i64 %969, %970
  %972 = select i1 %971, i64 %969, i64 %970
  %973 = icmp eq i64 %962, %972
  br i1 %973, label %976, label %974

974:                                              ; preds = %961
  %975 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %951, align 8
  br label %992

976:                                              ; preds = %961, %958
  %977 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %951, align 8
  %978 = icmp eq %"class.base::ObserverList.92"* %977, null
  br i1 %978, label %1145, label %979

979:                                              ; preds = %976
  %980 = load i64, i64* %952, align 8
  %981 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %977, i64 0, i32 0, i32 0, i32 1
  %982 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %981 to i64*
  %983 = load i64, i64* %982, align 8
  %984 = bitcast %"class.base::ObserverList.92"* %977 to i64*
  %985 = load i64, i64* %984, align 8
  %986 = sub i64 %983, %985
  %987 = ashr exact i64 %986, 3
  %988 = load i64, i64* %953, align 8
  %989 = icmp ult i64 %987, %988
  %990 = select i1 %989, i64 %987, i64 %988
  %991 = icmp eq i64 %980, %990
  br i1 %991, label %1053, label %992

992:                                              ; preds = %979, %974
  %993 = phi %"class.base::ObserverList.92"* [ %975, %974 ], [ %977, %979 ]
  %994 = icmp eq %"class.base::ObserverList.92"* %959, %993
  %995 = load i64, i64* %900, align 8
  %996 = load i64, i64* %952, align 8
  %997 = icmp eq i64 %995, %996
  %998 = and i1 %994, %997
  br i1 %998, label %1049, label %999

999:                                              ; preds = %992
  %1000 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %959, i64 0, i32 0, i32 0, i32 0
  %1001 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %1000, align 8
  %1002 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1001, i64 %995
  %1003 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %1002 to %"class.wm::ActivationChangeObserver"**
  %1004 = load %"class.wm::ActivationChangeObserver"*, %"class.wm::ActivationChangeObserver"** %1003, align 8
  %1005 = load %"class.aura::Window"*, %"class.aura::Window"** %17, align 8
  %1006 = call zeroext i1 @_ZNK4aura13WindowTracker8ContainsEPNS_6WindowE(%"class.aura::WindowTracker"* nonnull %7, %"class.aura::Window"* %18) #12
  %1007 = select i1 %1006, %"class.aura::Window"* %18, %"class.aura::Window"* null
  %1008 = bitcast %"class.wm::ActivationChangeObserver"* %1004 to void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)***
  %1009 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*** %1008, align 8
  %1010 = getelementptr inbounds void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %1009, i64 1
  %1011 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %1010, align 8
  call void %1011(%"class.wm::ActivationChangeObserver"* %1004, i32 %1, %"class.aura::Window"* %1005, %"class.aura::Window"* %1007) #12
  %1012 = load i8, i8* %13, align 8, !range !2
  %1013 = icmp eq i8 %1012, 0
  br i1 %1013, label %1014, label %1016

1014:                                             ; preds = %999
  %1015 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %951, align 8
  br label %1049

1016:                                             ; preds = %999
  %1017 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %899, align 8
  %1018 = icmp eq %"class.base::ObserverList.92"* %1017, null
  br i1 %1018, label %1019, label %1020

1019:                                             ; preds = %1044, %1040, %1016, %1020, %1034
  br label %958

1020:                                             ; preds = %1016
  %1021 = load i64, i64* %900, align 8
  %1022 = add i64 %1021, 1
  store i64 %1022, i64* %900, align 8
  %1023 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %1017, i64 0, i32 0, i32 0, i32 1
  %1024 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %1023 to i64*
  %1025 = load i64, i64* %1024, align 8
  %1026 = bitcast %"class.base::ObserverList.92"* %1017 to i64*
  %1027 = load i64, i64* %1026, align 8
  %1028 = sub i64 %1025, %1027
  %1029 = ashr exact i64 %1028, 3
  %1030 = load i64, i64* %901, align 8
  %1031 = icmp ult i64 %1029, %1030
  %1032 = select i1 %1031, i64 %1029, i64 %1030
  %1033 = icmp ult i64 %1022, %1032
  br i1 %1033, label %1034, label %1019

1034:                                             ; preds = %1020
  %1035 = inttoptr i64 %1027 to %"class.base::internal::UncheckedObserverAdapter"*
  %1036 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %1017, i64 0, i32 0, i32 0, i32 0
  %1037 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1035, i64 %1022, i32 0
  %1038 = load i8*, i8** %1037, align 8
  %1039 = icmp eq i8* %1038, null
  br i1 %1039, label %1040, label %1019

1040:                                             ; preds = %1034, %1044
  %1041 = phi i64 [ %1042, %1044 ], [ %1022, %1034 ]
  %1042 = add nuw i64 %1041, 1
  store i64 %1042, i64* %900, align 8
  %1043 = icmp ult i64 %1042, %1032
  br i1 %1043, label %1044, label %1019

1044:                                             ; preds = %1040
  %1045 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %1036, align 8
  %1046 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1045, i64 %1042, i32 0
  %1047 = load i8*, i8** %1046, align 8
  %1048 = icmp eq i8* %1047, null
  br i1 %1048, label %1040, label %1019

1049:                                             ; preds = %992, %1014
  %1050 = phi %"class.base::ObserverList.92"* [ %1015, %1014 ], [ %959, %992 ]
  %1051 = phi i32 [ 1, %1014 ], [ 6, %992 ]
  %1052 = icmp eq %"class.base::ObserverList.92"* %1050, null
  br i1 %1052, label %1145, label %1053

1053:                                             ; preds = %979, %1049
  %1054 = phi i32 [ %1051, %1049 ], [ 6, %979 ]
  %1055 = phi %"class.base::ObserverList.92"* [ %1050, %1049 ], [ %977, %979 ]
  %1056 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %1055, i64 0, i32 1
  %1057 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %1055, i64 0, i32 1, i32 0, i32 0, i32 1
  %1058 = bitcast %"class.base::internal::LinkNodeBase"** %1057 to %"class.base::LinkNode.94"**
  %1059 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %1058, align 8
  %1060 = bitcast %"class.base::LinkedList.93"* %1056 to %"class.base::LinkNode.94"**
  %1061 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %1060, align 8
  %1062 = icmp eq %"class.base::LinkNode.94"* %1059, %1061
  br i1 %1062, label %1063, label %1141

1063:                                             ; preds = %1053
  %1064 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %1055, i64 0, i32 0, i32 0, i32 0
  %1065 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %1064, align 8
  %1066 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %1055, i64 0, i32 0, i32 0, i32 1
  %1067 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %1066, align 8
  %1068 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1065, %1067
  br i1 %1068, label %1077, label %1069

1069:                                             ; preds = %1063, %1074
  %1070 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1075, %1074 ], [ %1065, %1063 ]
  %1071 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1070, i64 0, i32 0
  %1072 = load i8*, i8** %1071, align 8
  %1073 = icmp eq i8* %1072, null
  br i1 %1073, label %1077, label %1074

1074:                                             ; preds = %1069
  %1075 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1070, i64 1
  %1076 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1075, %1067
  br i1 %1076, label %1141, label %1069

1077:                                             ; preds = %1069, %1063
  %1078 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1065, %1063 ], [ %1070, %1069 ]
  %1079 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1078 to i64
  %1080 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1078, %1067
  br i1 %1080, label %1141, label %1081

1081:                                             ; preds = %1077
  %1082 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1078, i64 1
  %1083 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1082, %1067
  br i1 %1083, label %1136, label %1084

1084:                                             ; preds = %1081
  %1085 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1067, i64 -2, i32 0
  %1086 = ptrtoint i8** %1085 to i64
  %1087 = sub i64 %1086, %1079
  %1088 = lshr i64 %1087, 3
  %1089 = add nuw nsw i64 %1088, 1
  %1090 = and i64 %1089, 3
  %1091 = icmp eq i64 %1090, 0
  br i1 %1091, label %1110, label %1092

1092:                                             ; preds = %1084, %1105
  %1093 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1107, %1105 ], [ %1082, %1084 ]
  %1094 = phi i64 [ %1106, %1105 ], [ %1079, %1084 ]
  %1095 = phi i64 [ %1108, %1105 ], [ %1090, %1084 ]
  %1096 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1093, i64 0, i32 0
  %1097 = load i8*, i8** %1096, align 8
  %1098 = icmp eq i8* %1097, null
  br i1 %1098, label %1105, label %1099

1099:                                             ; preds = %1092
  %1100 = ptrtoint i8* %1097 to i64
  %1101 = inttoptr i64 %1094 to %"class.base::internal::UncheckedObserverAdapter"*
  %1102 = inttoptr i64 %1094 to i64*
  store i64 %1100, i64* %1102, align 8
  %1103 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1101, i64 1
  %1104 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1103 to i64
  br label %1105

1105:                                             ; preds = %1099, %1092
  %1106 = phi i64 [ %1094, %1092 ], [ %1104, %1099 ]
  %1107 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1093, i64 1
  %1108 = add i64 %1095, -1
  %1109 = icmp eq i64 %1108, 0
  br i1 %1109, label %1110, label %1092, !llvm.loop !34

1110:                                             ; preds = %1105, %1084
  %1111 = phi i64 [ undef, %1084 ], [ %1106, %1105 ]
  %1112 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1082, %1084 ], [ %1107, %1105 ]
  %1113 = phi i64 [ %1079, %1084 ], [ %1106, %1105 ]
  %1114 = icmp ult i64 %1087, 24
  br i1 %1114, label %1132, label %1115

1115:                                             ; preds = %1110, %1374
  %1116 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1376, %1374 ], [ %1112, %1110 ]
  %1117 = phi i64 [ %1375, %1374 ], [ %1113, %1110 ]
  %1118 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1116, i64 0, i32 0
  %1119 = load i8*, i8** %1118, align 8
  %1120 = icmp eq i8* %1119, null
  br i1 %1120, label %1127, label %1121

1121:                                             ; preds = %1115
  %1122 = ptrtoint i8* %1119 to i64
  %1123 = inttoptr i64 %1117 to %"class.base::internal::UncheckedObserverAdapter"*
  %1124 = inttoptr i64 %1117 to i64*
  store i64 %1122, i64* %1124, align 8
  %1125 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1123, i64 1
  %1126 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1125 to i64
  br label %1127

1127:                                             ; preds = %1121, %1115
  %1128 = phi i64 [ %1117, %1115 ], [ %1126, %1121 ]
  %1129 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1116, i64 1, i32 0
  %1130 = load i8*, i8** %1129, align 8
  %1131 = icmp eq i8* %1130, null
  br i1 %1131, label %1352, label %1346

1132:                                             ; preds = %1374, %1110
  %1133 = phi i64 [ %1111, %1110 ], [ %1375, %1374 ]
  %1134 = inttoptr i64 %1133 to %"class.base::internal::UncheckedObserverAdapter"*
  %1135 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %1066, align 8
  br label %1136

1136:                                             ; preds = %1132, %1081
  %1137 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1067, %1081 ], [ %1135, %1132 ]
  %1138 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1078, %1081 ], [ %1134, %1132 ]
  %1139 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1138, %1137
  br i1 %1139, label %1141, label %1140

1140:                                             ; preds = %1136
  store %"class.base::internal::UncheckedObserverAdapter"* %1138, %"class.base::internal::UncheckedObserverAdapter"** %1066, align 8
  br label %1141

1141:                                             ; preds = %1074, %1140, %1136, %1077, %1053
  %1142 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %951, align 8
  %1143 = icmp eq %"class.base::ObserverList.92"* %1142, null
  br i1 %1143, label %1145, label %1144

1144:                                             ; preds = %1141
  store %"class.base::ObserverList.92"* null, %"class.base::ObserverList.92"** %951, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %954) #12
  br label %1145

1145:                                             ; preds = %976, %1049, %1141, %1144
  %1146 = phi i32 [ %1051, %1049 ], [ %1054, %1141 ], [ %1054, %1144 ], [ 6, %976 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %950) #12
  %1147 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %899, align 8
  %1148 = icmp eq %"class.base::ObserverList.92"* %1147, null
  br i1 %1148, label %1239, label %1149

1149:                                             ; preds = %1145
  %1150 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %1147, i64 0, i32 1
  %1151 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %1147, i64 0, i32 1, i32 0, i32 0, i32 1
  %1152 = bitcast %"class.base::internal::LinkNodeBase"** %1151 to %"class.base::LinkNode.94"**
  %1153 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %1152, align 8
  %1154 = bitcast %"class.base::LinkedList.93"* %1150 to %"class.base::LinkNode.94"**
  %1155 = load %"class.base::LinkNode.94"*, %"class.base::LinkNode.94"** %1154, align 8
  %1156 = icmp eq %"class.base::LinkNode.94"* %1153, %1155
  br i1 %1156, label %1157, label %1235

1157:                                             ; preds = %1149
  %1158 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %1147, i64 0, i32 0, i32 0, i32 0
  %1159 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %1158, align 8
  %1160 = getelementptr inbounds %"class.base::ObserverList.92", %"class.base::ObserverList.92"* %1147, i64 0, i32 0, i32 0, i32 1
  %1161 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %1160, align 8
  %1162 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1159, %1161
  br i1 %1162, label %1171, label %1163

1163:                                             ; preds = %1157, %1168
  %1164 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1169, %1168 ], [ %1159, %1157 ]
  %1165 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1164, i64 0, i32 0
  %1166 = load i8*, i8** %1165, align 8
  %1167 = icmp eq i8* %1166, null
  br i1 %1167, label %1171, label %1168

1168:                                             ; preds = %1163
  %1169 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1164, i64 1
  %1170 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1169, %1161
  br i1 %1170, label %1235, label %1163

1171:                                             ; preds = %1163, %1157
  %1172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1159, %1157 ], [ %1164, %1163 ]
  %1173 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1172 to i64
  %1174 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1172, %1161
  br i1 %1174, label %1235, label %1175

1175:                                             ; preds = %1171
  %1176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1172, i64 1
  %1177 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1176, %1161
  br i1 %1177, label %1230, label %1178

1178:                                             ; preds = %1175
  %1179 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1161, i64 -2, i32 0
  %1180 = ptrtoint i8** %1179 to i64
  %1181 = sub i64 %1180, %1173
  %1182 = lshr i64 %1181, 3
  %1183 = add nuw nsw i64 %1182, 1
  %1184 = and i64 %1183, 3
  %1185 = icmp eq i64 %1184, 0
  br i1 %1185, label %1204, label %1186

1186:                                             ; preds = %1178, %1199
  %1187 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1201, %1199 ], [ %1176, %1178 ]
  %1188 = phi i64 [ %1200, %1199 ], [ %1173, %1178 ]
  %1189 = phi i64 [ %1202, %1199 ], [ %1184, %1178 ]
  %1190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1187, i64 0, i32 0
  %1191 = load i8*, i8** %1190, align 8
  %1192 = icmp eq i8* %1191, null
  br i1 %1192, label %1199, label %1193

1193:                                             ; preds = %1186
  %1194 = ptrtoint i8* %1191 to i64
  %1195 = inttoptr i64 %1188 to %"class.base::internal::UncheckedObserverAdapter"*
  %1196 = inttoptr i64 %1188 to i64*
  store i64 %1194, i64* %1196, align 8
  %1197 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1195, i64 1
  %1198 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1197 to i64
  br label %1199

1199:                                             ; preds = %1193, %1186
  %1200 = phi i64 [ %1188, %1186 ], [ %1198, %1193 ]
  %1201 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1187, i64 1
  %1202 = add i64 %1189, -1
  %1203 = icmp eq i64 %1202, 0
  br i1 %1203, label %1204, label %1186, !llvm.loop !35

1204:                                             ; preds = %1199, %1178
  %1205 = phi i64 [ undef, %1178 ], [ %1200, %1199 ]
  %1206 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1176, %1178 ], [ %1201, %1199 ]
  %1207 = phi i64 [ %1173, %1178 ], [ %1200, %1199 ]
  %1208 = icmp ult i64 %1181, 24
  br i1 %1208, label %1226, label %1209

1209:                                             ; preds = %1204, %1342
  %1210 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1344, %1342 ], [ %1206, %1204 ]
  %1211 = phi i64 [ %1343, %1342 ], [ %1207, %1204 ]
  %1212 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1210, i64 0, i32 0
  %1213 = load i8*, i8** %1212, align 8
  %1214 = icmp eq i8* %1213, null
  br i1 %1214, label %1221, label %1215

1215:                                             ; preds = %1209
  %1216 = ptrtoint i8* %1213 to i64
  %1217 = inttoptr i64 %1211 to %"class.base::internal::UncheckedObserverAdapter"*
  %1218 = inttoptr i64 %1211 to i64*
  store i64 %1216, i64* %1218, align 8
  %1219 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1217, i64 1
  %1220 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1219 to i64
  br label %1221

1221:                                             ; preds = %1215, %1209
  %1222 = phi i64 [ %1211, %1209 ], [ %1220, %1215 ]
  %1223 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1210, i64 1, i32 0
  %1224 = load i8*, i8** %1223, align 8
  %1225 = icmp eq i8* %1224, null
  br i1 %1225, label %1320, label %1314

1226:                                             ; preds = %1342, %1204
  %1227 = phi i64 [ %1205, %1204 ], [ %1343, %1342 ]
  %1228 = inttoptr i64 %1227 to %"class.base::internal::UncheckedObserverAdapter"*
  %1229 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %1160, align 8
  br label %1230

1230:                                             ; preds = %1226, %1175
  %1231 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1161, %1175 ], [ %1229, %1226 ]
  %1232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %1172, %1175 ], [ %1228, %1226 ]
  %1233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1232, %1231
  br i1 %1233, label %1235, label %1234

1234:                                             ; preds = %1230
  store %"class.base::internal::UncheckedObserverAdapter"* %1232, %"class.base::internal::UncheckedObserverAdapter"** %1160, align 8
  br label %1235

1235:                                             ; preds = %1168, %1234, %1230, %1171, %1149
  %1236 = load %"class.base::ObserverList.92"*, %"class.base::ObserverList.92"** %899, align 8
  %1237 = icmp eq %"class.base::ObserverList.92"* %1236, null
  br i1 %1237, label %1239, label %1238

1238:                                             ; preds = %1235
  store %"class.base::ObserverList.92"* null, %"class.base::ObserverList.92"** %899, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %906) #12
  br label %1239

1239:                                             ; preds = %1145, %1235, %1238
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %898) #12
  %1240 = icmp eq i32 %1146, 6
  br label %1241

1241:                                             ; preds = %894, %879, %865, %1239, %798
  %1242 = phi i1 [ false, %798 ], [ false, %865 ], [ false, %879 ], [ false, %894 ], [ %1240, %1239 ]
  call void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %362) #12
  %1243 = icmp eq %"class.absl::optional"* %12, null
  br i1 %1243, label %1248, label %1244

1244:                                             ; preds = %1241
  store i8 0, i8* %13, align 8
  %1245 = getelementptr inbounds i8, i8* %13, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1245, i8* nonnull align 1 getelementptr inbounds ({ %"class.absl::optional"*, { { { { i8, [7 x i8], %union.anon } } } } }, { %"class.absl::optional"*, { { { { i8, [7 x i8], %union.anon } } } } }* @__const._ZN2wm15FocusController15SetActiveWindowENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowES5_.updating_activation, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  %1246 = getelementptr inbounds %"class.wm::FocusController", %"class.wm::FocusController"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %1247 = bitcast %union.anon* %1246 to i64*
  store i64 %360, i64* %1247, align 8
  br label %1248

1248:                                             ; preds = %1244, %1241, %4, %313, %20
  %1249 = phi i1 [ false, %4 ], [ true, %20 ], [ true, %313 ], [ %1242, %1241 ], [ %1242, %1244 ]
  ret i1 %1249

1250:                                             ; preds = %295
  %1251 = ptrtoint i8* %298 to i64
  %1252 = inttoptr i64 %296 to %"class.base::internal::UncheckedObserverAdapter"*
  %1253 = inttoptr i64 %296 to i64*
  store i64 %1251, i64* %1253, align 8
  %1254 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1252, i64 1
  %1255 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1254 to i64
  br label %1256

1256:                                             ; preds = %1250, %295
  %1257 = phi i64 [ %296, %295 ], [ %1255, %1250 ]
  %1258 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %284, i64 2, i32 0
  %1259 = load i8*, i8** %1258, align 8
  %1260 = icmp eq i8* %1259, null
  br i1 %1260, label %1267, label %1261

1261:                                             ; preds = %1256
  %1262 = ptrtoint i8* %1259 to i64
  %1263 = inttoptr i64 %1257 to %"class.base::internal::UncheckedObserverAdapter"*
  %1264 = inttoptr i64 %1257 to i64*
  store i64 %1262, i64* %1264, align 8
  %1265 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1263, i64 1
  %1266 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1265 to i64
  br label %1267

1267:                                             ; preds = %1261, %1256
  %1268 = phi i64 [ %1257, %1256 ], [ %1266, %1261 ]
  %1269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %284, i64 3, i32 0
  %1270 = load i8*, i8** %1269, align 8
  %1271 = icmp eq i8* %1270, null
  br i1 %1271, label %1278, label %1272

1272:                                             ; preds = %1267
  %1273 = ptrtoint i8* %1270 to i64
  %1274 = inttoptr i64 %1268 to %"class.base::internal::UncheckedObserverAdapter"*
  %1275 = inttoptr i64 %1268 to i64*
  store i64 %1273, i64* %1275, align 8
  %1276 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1274, i64 1
  %1277 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1276 to i64
  br label %1278

1278:                                             ; preds = %1272, %1267
  %1279 = phi i64 [ %1268, %1267 ], [ %1277, %1272 ]
  %1280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %284, i64 4
  %1281 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1280, %235
  br i1 %1281, label %300, label %283

1282:                                             ; preds = %202
  %1283 = ptrtoint i8* %205 to i64
  %1284 = inttoptr i64 %203 to %"class.base::internal::UncheckedObserverAdapter"*
  %1285 = inttoptr i64 %203 to i64*
  store i64 %1283, i64* %1285, align 8
  %1286 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1284, i64 1
  %1287 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1286 to i64
  br label %1288

1288:                                             ; preds = %1282, %202
  %1289 = phi i64 [ %203, %202 ], [ %1287, %1282 ]
  %1290 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 2, i32 0
  %1291 = load i8*, i8** %1290, align 8
  %1292 = icmp eq i8* %1291, null
  br i1 %1292, label %1299, label %1293

1293:                                             ; preds = %1288
  %1294 = ptrtoint i8* %1291 to i64
  %1295 = inttoptr i64 %1289 to %"class.base::internal::UncheckedObserverAdapter"*
  %1296 = inttoptr i64 %1289 to i64*
  store i64 %1294, i64* %1296, align 8
  %1297 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1295, i64 1
  %1298 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1297 to i64
  br label %1299

1299:                                             ; preds = %1293, %1288
  %1300 = phi i64 [ %1289, %1288 ], [ %1298, %1293 ]
  %1301 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 3, i32 0
  %1302 = load i8*, i8** %1301, align 8
  %1303 = icmp eq i8* %1302, null
  br i1 %1303, label %1310, label %1304

1304:                                             ; preds = %1299
  %1305 = ptrtoint i8* %1302 to i64
  %1306 = inttoptr i64 %1300 to %"class.base::internal::UncheckedObserverAdapter"*
  %1307 = inttoptr i64 %1300 to i64*
  store i64 %1305, i64* %1307, align 8
  %1308 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1306, i64 1
  %1309 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1308 to i64
  br label %1310

1310:                                             ; preds = %1304, %1299
  %1311 = phi i64 [ %1300, %1299 ], [ %1309, %1304 ]
  %1312 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 4
  %1313 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1312, %142
  br i1 %1313, label %207, label %190

1314:                                             ; preds = %1221
  %1315 = ptrtoint i8* %1224 to i64
  %1316 = inttoptr i64 %1222 to %"class.base::internal::UncheckedObserverAdapter"*
  %1317 = inttoptr i64 %1222 to i64*
  store i64 %1315, i64* %1317, align 8
  %1318 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1316, i64 1
  %1319 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1318 to i64
  br label %1320

1320:                                             ; preds = %1314, %1221
  %1321 = phi i64 [ %1222, %1221 ], [ %1319, %1314 ]
  %1322 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1210, i64 2, i32 0
  %1323 = load i8*, i8** %1322, align 8
  %1324 = icmp eq i8* %1323, null
  br i1 %1324, label %1331, label %1325

1325:                                             ; preds = %1320
  %1326 = ptrtoint i8* %1323 to i64
  %1327 = inttoptr i64 %1321 to %"class.base::internal::UncheckedObserverAdapter"*
  %1328 = inttoptr i64 %1321 to i64*
  store i64 %1326, i64* %1328, align 8
  %1329 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1327, i64 1
  %1330 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1329 to i64
  br label %1331

1331:                                             ; preds = %1325, %1320
  %1332 = phi i64 [ %1321, %1320 ], [ %1330, %1325 ]
  %1333 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1210, i64 3, i32 0
  %1334 = load i8*, i8** %1333, align 8
  %1335 = icmp eq i8* %1334, null
  br i1 %1335, label %1342, label %1336

1336:                                             ; preds = %1331
  %1337 = ptrtoint i8* %1334 to i64
  %1338 = inttoptr i64 %1332 to %"class.base::internal::UncheckedObserverAdapter"*
  %1339 = inttoptr i64 %1332 to i64*
  store i64 %1337, i64* %1339, align 8
  %1340 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1338, i64 1
  %1341 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1340 to i64
  br label %1342

1342:                                             ; preds = %1336, %1331
  %1343 = phi i64 [ %1332, %1331 ], [ %1341, %1336 ]
  %1344 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1210, i64 4
  %1345 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1344, %1161
  br i1 %1345, label %1226, label %1209

1346:                                             ; preds = %1127
  %1347 = ptrtoint i8* %1130 to i64
  %1348 = inttoptr i64 %1128 to %"class.base::internal::UncheckedObserverAdapter"*
  %1349 = inttoptr i64 %1128 to i64*
  store i64 %1347, i64* %1349, align 8
  %1350 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1348, i64 1
  %1351 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1350 to i64
  br label %1352

1352:                                             ; preds = %1346, %1127
  %1353 = phi i64 [ %1128, %1127 ], [ %1351, %1346 ]
  %1354 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1116, i64 2, i32 0
  %1355 = load i8*, i8** %1354, align 8
  %1356 = icmp eq i8* %1355, null
  br i1 %1356, label %1363, label %1357

1357:                                             ; preds = %1352
  %1358 = ptrtoint i8* %1355 to i64
  %1359 = inttoptr i64 %1353 to %"class.base::internal::UncheckedObserverAdapter"*
  %1360 = inttoptr i64 %1353 to i64*
  store i64 %1358, i64* %1360, align 8
  %1361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1359, i64 1
  %1362 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1361 to i64
  br label %1363

1363:                                             ; preds = %1357, %1352
  %1364 = phi i64 [ %1353, %1352 ], [ %1362, %1357 ]
  %1365 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1116, i64 3, i32 0
  %1366 = load i8*, i8** %1365, align 8
  %1367 = icmp eq i8* %1366, null
  br i1 %1367, label %1374, label %1368

1368:                                             ; preds = %1363
  %1369 = ptrtoint i8* %1366 to i64
  %1370 = inttoptr i64 %1364 to %"class.base::internal::UncheckedObserverAdapter"*
  %1371 = inttoptr i64 %1364 to i64*
  store i64 %1369, i64* %1371, align 8
  %1372 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1370, i64 1
  %1373 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1372 to i64
  br label %1374

1374:                                             ; preds = %1368, %1363
  %1375 = phi i64 [ %1364, %1363 ], [ %1373, %1368 ]
  %1376 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1116, i64 4
  %1377 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1376, %1067
  br i1 %1377, label %1132, label %1115

1378:                                             ; preds = %780
  %1379 = ptrtoint i8* %783 to i64
  %1380 = inttoptr i64 %781 to %"class.base::internal::UncheckedObserverAdapter"*
  %1381 = inttoptr i64 %781 to i64*
  store i64 %1379, i64* %1381, align 8
  %1382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1380, i64 1
  %1383 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1382 to i64
  br label %1384

1384:                                             ; preds = %1378, %780
  %1385 = phi i64 [ %781, %780 ], [ %1383, %1378 ]
  %1386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %769, i64 2, i32 0
  %1387 = load i8*, i8** %1386, align 8
  %1388 = icmp eq i8* %1387, null
  br i1 %1388, label %1395, label %1389

1389:                                             ; preds = %1384
  %1390 = ptrtoint i8* %1387 to i64
  %1391 = inttoptr i64 %1385 to %"class.base::internal::UncheckedObserverAdapter"*
  %1392 = inttoptr i64 %1385 to i64*
  store i64 %1390, i64* %1392, align 8
  %1393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1391, i64 1
  %1394 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1393 to i64
  br label %1395

1395:                                             ; preds = %1389, %1384
  %1396 = phi i64 [ %1385, %1384 ], [ %1394, %1389 ]
  %1397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %769, i64 3, i32 0
  %1398 = load i8*, i8** %1397, align 8
  %1399 = icmp eq i8* %1398, null
  br i1 %1399, label %1406, label %1400

1400:                                             ; preds = %1395
  %1401 = ptrtoint i8* %1398 to i64
  %1402 = inttoptr i64 %1396 to %"class.base::internal::UncheckedObserverAdapter"*
  %1403 = inttoptr i64 %1396 to i64*
  store i64 %1401, i64* %1403, align 8
  %1404 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1402, i64 1
  %1405 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1404 to i64
  br label %1406

1406:                                             ; preds = %1400, %1395
  %1407 = phi i64 [ %1396, %1395 ], [ %1405, %1400 ]
  %1408 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %769, i64 4
  %1409 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1408, %720
  br i1 %1409, label %785, label %768

1410:                                             ; preds = %686
  %1411 = ptrtoint i8* %689 to i64
  %1412 = inttoptr i64 %687 to %"class.base::internal::UncheckedObserverAdapter"*
  %1413 = inttoptr i64 %687 to i64*
  store i64 %1411, i64* %1413, align 8
  %1414 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1412, i64 1
  %1415 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1414 to i64
  br label %1416

1416:                                             ; preds = %1410, %686
  %1417 = phi i64 [ %687, %686 ], [ %1415, %1410 ]
  %1418 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %675, i64 2, i32 0
  %1419 = load i8*, i8** %1418, align 8
  %1420 = icmp eq i8* %1419, null
  br i1 %1420, label %1427, label %1421

1421:                                             ; preds = %1416
  %1422 = ptrtoint i8* %1419 to i64
  %1423 = inttoptr i64 %1417 to %"class.base::internal::UncheckedObserverAdapter"*
  %1424 = inttoptr i64 %1417 to i64*
  store i64 %1422, i64* %1424, align 8
  %1425 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1423, i64 1
  %1426 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1425 to i64
  br label %1427

1427:                                             ; preds = %1421, %1416
  %1428 = phi i64 [ %1417, %1416 ], [ %1426, %1421 ]
  %1429 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %675, i64 3, i32 0
  %1430 = load i8*, i8** %1429, align 8
  %1431 = icmp eq i8* %1430, null
  br i1 %1431, label %1438, label %1432

1432:                                             ; preds = %1427
  %1433 = ptrtoint i8* %1430 to i64
  %1434 = inttoptr i64 %1428 to %"class.base::internal::UncheckedObserverAdapter"*
  %1435 = inttoptr i64 %1428 to i64*
  store i64 %1433, i64* %1435, align 8
  %1436 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %1434, i64 1
  %1437 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %1436 to i64
  br label %1438

1438:                                             ; preds = %1432, %1427
  %1439 = phi i64 [ %1428, %1427 ], [ %1437, %1432 ]
  %1440 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %675, i64 4
  %1441 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %1440, %626
  br i1 %1441, label %691, label %674
}

declare %"class.aura::Window"* @_ZN4aura13WindowTracker3PopEv(%"class.aura::WindowTracker"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

declare zeroext i1 @_ZNK4aura13WindowTracker8ContainsEPNS_6WindowE(%"class.aura::WindowTracker"*, %"class.aura::Window"*) local_unnamed_addr #1

declare %"class.aura::client::FocusChangeObserver"* @_ZN4aura6client22GetFocusChangeObserverEPNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

declare %"class.wm::ActivationChangeObserver"* @_ZN2wm27GetActivationChangeObserverEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

declare void @_ZN4aura6Window15StackChildAtTopEPS0_(%"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #1

declare void @_ZN2ui12EventHandler7OnEventEPNS_5EventE(%"class.ui::EventHandler"*, %"class.ui::Event"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler12OnCancelModeEPNS_15CancelModeEventE(%"class.ui::EventHandler"*, %"class.ui::CancelModeEvent"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"* dereferenceable(68)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2wm16ActivationClientD2Ev(%"class.wm::ActivationClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2wm16ActivationClientD0Ev(%"class.wm::ActivationClient"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura6client11FocusClientD2Ev(%"class.aura::client::FocusClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura6client11FocusClientD0Ev(%"class.aura::client::FocusClient"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare i32 @_ZNK2ui15PropertyHandler11GetPropertyINS_9ModalTypeEEET_PKNS_13ClassPropertyIS3_EE(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*) local_unnamed_addr #1

declare %"class.aura::Window"* @_ZN2wm18GetTransientParentEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

declare void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #7

declare void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base12ObserverListIN4aura6client19FocusChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base12ObserverListIN4aura6client19FocusChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base12ObserverListIN4aura6client19FocusChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base12ObserverListIN4aura6client19FocusChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!14 = distinct !{!14, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !10}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!26 = distinct !{!26, !10}
!27 = distinct !{!27, !10}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!30 = distinct !{!30, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!34 = distinct !{!34, !10}
!35 = distinct !{!35, !10}
