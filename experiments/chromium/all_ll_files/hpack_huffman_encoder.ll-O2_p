; ModuleID = '../../net/third_party/quiche/src/http2/hpack/huffman/hpack_huffman_encoder.cc'
source_filename = "../../net/third_party/quiche/src/http2/hpack/huffman/hpack_huffman_encoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN5http217HuffmanSpecTables12kCodeLengthsE = external local_unnamed_addr constant [257 x i8], align 16
@_ZN5http217HuffmanSpecTables11kRightCodesE = external local_unnamed_addr constant [257 x i32], align 16
@_ZN5http217HuffmanSpecTables10kLeftCodesE = external local_unnamed_addr constant [257 x i32], align 16

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5http211HuffmanSizeEN4absl11string_viewE(i8*, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %32, label %4

4:                                                ; preds = %2
  %5 = add i64 %1, -1
  %6 = and i64 %1, 3
  %7 = icmp ult i64 %5, 3
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = sub i64 %1, %6
  br label %34

10:                                               ; preds = %34, %4
  %11 = phi i64 [ undef, %4 ], [ %64, %34 ]
  %12 = phi i64 [ 0, %4 ], [ %64, %34 ]
  %13 = phi i8* [ %0, %4 ], [ %65, %34 ]
  %14 = icmp eq i64 %6, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %10, %15
  %16 = phi i64 [ %24, %15 ], [ %12, %10 ]
  %17 = phi i8* [ %25, %15 ], [ %13, %10 ]
  %18 = phi i64 [ %26, %15 ], [ %6, %10 ]
  %19 = load i8, i8* %17, align 1
  %20 = zext i8 %19 to i64
  %21 = getelementptr inbounds [257 x i8], [257 x i8]* @_ZN5http217HuffmanSpecTables12kCodeLengthsE, i64 0, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = add i64 %16, %23
  %25 = getelementptr inbounds i8, i8* %17, i64 1
  %26 = add i64 %18, -1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %15, !llvm.loop !2

28:                                               ; preds = %15, %10
  %29 = phi i64 [ %11, %10 ], [ %24, %15 ]
  %30 = add i64 %29, 7
  %31 = lshr i64 %30, 3
  br label %32

32:                                               ; preds = %28, %2
  %33 = phi i64 [ 0, %2 ], [ %31, %28 ]
  ret i64 %33

34:                                               ; preds = %34, %8
  %35 = phi i64 [ 0, %8 ], [ %64, %34 ]
  %36 = phi i8* [ %0, %8 ], [ %65, %34 ]
  %37 = phi i64 [ %9, %8 ], [ %66, %34 ]
  %38 = load i8, i8* %36, align 1
  %39 = zext i8 %38 to i64
  %40 = getelementptr inbounds [257 x i8], [257 x i8]* @_ZN5http217HuffmanSpecTables12kCodeLengthsE, i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = add i64 %35, %42
  %44 = getelementptr inbounds i8, i8* %36, i64 1
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i64
  %47 = getelementptr inbounds [257 x i8], [257 x i8]* @_ZN5http217HuffmanSpecTables12kCodeLengthsE, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = add i64 %43, %49
  %51 = getelementptr inbounds i8, i8* %36, i64 2
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [257 x i8], [257 x i8]* @_ZN5http217HuffmanSpecTables12kCodeLengthsE, i64 0, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = add i64 %50, %56
  %58 = getelementptr inbounds i8, i8* %36, i64 3
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i64
  %61 = getelementptr inbounds [257 x i8], [257 x i8]* @_ZN5http217HuffmanSpecTables12kCodeLengthsE, i64 0, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i64
  %64 = add i64 %57, %63
  %65 = getelementptr inbounds i8, i8* %36, i64 4
  %66 = add i64 %37, -4
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %10, label %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5http213HuffmanEncodeEN4absl11string_viewEmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, i64, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1 {
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = add i64 %15, %2
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %3, i64 %16) #3
  %17 = getelementptr inbounds i8, i8* %0, i64 %1
  %18 = icmp eq i64 %1, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %44, %14
  %20 = phi i64 [ 64, %14 ], [ %50, %44 ]
  %21 = phi i64 [ 0, %14 ], [ %52, %44 ]
  %22 = sub i64 64, %20
  %23 = icmp ugt i64 %22, 7
  br i1 %23, label %24, label %65

24:                                               ; preds = %19
  %25 = sub i64 0, %20
  br label %55

26:                                               ; preds = %14, %44
  %27 = phi i64 [ %52, %44 ], [ 0, %14 ]
  %28 = phi i64 [ %50, %44 ], [ 64, %14 ]
  %29 = phi i8* [ %53, %44 ], [ %0, %14 ]
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [257 x i8], [257 x i8]* @_ZN5http217HuffmanSpecTables12kCodeLengthsE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i64
  %35 = icmp ult i64 %28, %34
  br i1 %35, label %36, label %44

36:                                               ; preds = %26, %36
  %37 = phi i64 [ %42, %36 ], [ %28, %26 ]
  %38 = phi i64 [ %41, %36 ], [ %27, %26 ]
  %39 = lshr i64 %38, 56
  %40 = trunc i64 %39 to i8
  %41 = shl i64 %38, 8
  %42 = add nuw i64 %37, 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %3, i8 signext %40) #3
  %43 = icmp ult i64 %42, 57
  br i1 %43, label %36, label %44

44:                                               ; preds = %36, %26
  %45 = phi i64 [ %28, %26 ], [ %42, %36 ]
  %46 = phi i64 [ %27, %26 ], [ %41, %36 ]
  %47 = getelementptr inbounds [257 x i32], [257 x i32]* @_ZN5http217HuffmanSpecTables11kRightCodesE, i64 0, i64 %31
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = sub i64 %45, %34
  %51 = shl i64 %49, %50
  %52 = or i64 %51, %46
  %53 = getelementptr inbounds i8, i8* %29, i64 1
  %54 = icmp eq i8* %53, %17
  br i1 %54, label %19, label %26

55:                                               ; preds = %24, %55
  %56 = phi i64 [ %60, %55 ], [ %21, %24 ]
  %57 = phi i64 [ %61, %55 ], [ %22, %24 ]
  %58 = lshr i64 %56, 56
  %59 = trunc i64 %58 to i8
  %60 = shl i64 %56, 8
  %61 = add i64 %57, -8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %3, i8 signext %59) #3
  %62 = icmp ugt i64 %61, 7
  br i1 %62, label %55, label %63

63:                                               ; preds = %55
  %64 = and i64 %25, 7
  br label %65

65:                                               ; preds = %63, %19
  %66 = phi i64 [ %22, %19 ], [ %64, %63 ]
  %67 = phi i64 [ %21, %19 ], [ %60, %63 ]
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %65
  %70 = sub nuw nsw i64 56, %66
  %71 = shl i64 255, %70
  %72 = or i64 %71, %67
  %73 = lshr i64 %72, 56
  %74 = trunc i64 %73 to i8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %3, i8 signext %74) #3
  br label %75

75:                                               ; preds = %65, %69
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5http217HuffmanEncodeFastEN4absl11string_viewEmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, i64, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1 {
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = add i64 %15, %2
  %17 = add i64 %16, 4
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %3, i64 %17, i8 signext 0) #3
  %18 = load i8, i8* %6, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  br label %25

23:                                               ; preds = %14
  %24 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi i8* [ %22, %20 ], [ %24, %23 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 %15
  %28 = getelementptr inbounds i8, i8* %0, i64 %1
  %29 = icmp eq i64 %1, 0
  br i1 %29, label %91, label %33

30:                                               ; preds = %79
  %31 = and i64 %49, 7
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %91, label %82

33:                                               ; preds = %25, %79
  %34 = phi i8* [ %80, %79 ], [ %0, %25 ]
  %35 = phi i64 [ %49, %79 ], [ 0, %25 ]
  %36 = load i8, i8* %34, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [257 x i32], [257 x i32]* @_ZN5http217HuffmanSpecTables10kLeftCodesE, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = and i64 %35, 7
  %42 = sub nuw nsw i64 8, %41
  %43 = shl i64 %40, %42
  %44 = lshr i64 %35, 3
  %45 = getelementptr inbounds i8, i8* %27, i64 %44
  %46 = getelementptr inbounds [257 x i8], [257 x i8]* @_ZN5http217HuffmanSpecTables12kCodeLengthsE, i64 0, i64 %37
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = add i64 %35, %48
  %50 = lshr i64 %43, 32
  %51 = load i8, i8* %45, align 1
  %52 = trunc i64 %50 to i8
  %53 = or i8 %51, %52
  store i8 %53, i8* %45, align 1
  %54 = lshr i64 %43, 24
  %55 = getelementptr inbounds i8, i8* %45, i64 1
  %56 = load i8, i8* %55, align 1
  %57 = trunc i64 %54 to i8
  %58 = or i8 %56, %57
  store i8 %58, i8* %55, align 1
  %59 = and i64 %43, 16711680
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %79, label %61

61:                                               ; preds = %33
  %62 = lshr i64 %43, 16
  %63 = getelementptr inbounds i8, i8* %45, i64 2
  %64 = load i8, i8* %63, align 1
  %65 = trunc i64 %62 to i8
  %66 = or i8 %64, %65
  store i8 %66, i8* %63, align 1
  %67 = and i64 %43, 65280
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %79, label %69

69:                                               ; preds = %61
  %70 = lshr i64 %43, 8
  %71 = getelementptr inbounds i8, i8* %45, i64 3
  %72 = load i8, i8* %71, align 1
  %73 = trunc i64 %70 to i8
  %74 = or i8 %72, %73
  store i8 %74, i8* %71, align 1
  %75 = getelementptr inbounds i8, i8* %45, i64 4
  %76 = load i8, i8* %75, align 1
  %77 = trunc i64 %43 to i8
  %78 = or i8 %76, %77
  store i8 %78, i8* %75, align 1
  br label %79

79:                                               ; preds = %33, %61, %69
  %80 = getelementptr inbounds i8, i8* %34, i64 1
  %81 = icmp eq i8* %80, %28
  br i1 %81, label %30, label %33

82:                                               ; preds = %30
  %83 = trunc i64 %49 to i32
  %84 = and i32 %83, 7
  %85 = lshr i32 255, %84
  %86 = getelementptr inbounds i8, i8* %27, i64 %2
  %87 = getelementptr inbounds i8, i8* %86, i64 -1
  %88 = load i8, i8* %87, align 1
  %89 = trunc i32 %85 to i8
  %90 = or i8 %88, %89
  store i8 %90, i8* %87, align 1
  br label %91

91:                                               ; preds = %25, %30, %82
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %3, i64 %16, i8 signext 0) #3
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
