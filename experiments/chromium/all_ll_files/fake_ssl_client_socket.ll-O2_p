; ModuleID = '../../jingle/glue/fake_ssl_client_socket.cc'
source_filename = "../../jingle/glue/fake_ssl_client_socket.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.jingle_glue::FakeSSLClientSocket" = type { %"class.net::StreamSocket", %"class.std::__1::unique_ptr", i32, i8, %"class.base::OnceCallback", %class.scoped_refptr.10, %class.scoped_refptr.10 }
%"class.net::StreamSocket" = type { %"class.net::Socket" }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.net::StreamSocket"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.10 = type { %"class.net::DrainableIOBuffer"* }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr.12, i32, i32 }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.11", i8* }
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.12 = type { %"class.net::IOBuffer"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::NetLogWithSource" = type opaque
%"class.net::SSLInfo" = type opaque
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*, %"class.std::__1::__compressed_pair.15" }
%"struct.net::ConnectionAttempt" = type { %"class.net::IPEndPoint", i32 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.net::ConnectionAttempt"* }
%"class.net::SocketTag" = type opaque
%"class.base::RepeatingCallback" = type opaque
%"class.net::SSLCertRequestInfo" = type opaque
%"struct.net::StreamSocket::SocketMemoryStats" = type { i64, i64, i64, i64 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN11jingle_glue19FakeSSLClientSocket23ClearConnectionAttemptsEv = comdat any

$_ZN11jingle_glue19FakeSSLClientSocket21AddConnectionAttemptsERKNSt3__16vectorIN3net17ConnectionAttemptENS1_9allocatorIS4_EEEE = comdat any

$_ZNK3net12StreamSocket15DumpMemoryStatsEPNS0_17SocketMemoryStatsE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZN11jingle_glue12_GLOBAL__N_115kSslClientHelloE = internal constant [72 x i8] c"\80F\01\03\01\00-\00\00\00\10\01\00\80\03\00\80\07\00\C0\06\00@\02\00\80\04\00\80\00\00\04\00\FE\FF\00\00\0A\00\FE\FE\00\00\09\00\00d\00\00b\00\00\03\00\00\06\1F\17\0C\A6/\00x\FCFU.\B1\839\F1\EA", align 16
@_ZN11jingle_glue12_GLOBAL__N_115kSslServerHelloE = internal constant [79 x i8] c"\16\03\01\00J\02\00\00F\03\01B\85E\A7'\A9]\A0\B3\C5\E7S\DAH+?\C6Z\CA\89\C1XR\A1x<[\17F\00\85? \0E\D3\06r[[\1B_\15\AC\13\F9\88S\9D\9B\E8={\0C02n8M\A2uWAl4\5C\00\04\00", align 16
@_ZTVN11jingle_glue19FakeSSLClientSocketE = hidden unnamed_addr constant { [33 x i8*] } { [33 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jingle_glue::FakeSSLClientSocket"*)* @_ZN11jingle_glue19FakeSSLClientSocketD2Ev to i8*), i8* bitcast (void (%"class.jingle_glue::FakeSSLClientSocket"*)* @_ZN11jingle_glue19FakeSSLClientSocketD0Ev to i8*), i8* bitcast (i32 (%"class.jingle_glue::FakeSSLClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN11jingle_glue19FakeSSLClientSocket4ReadEPN3net8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.jingle_glue::FakeSSLClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN11jingle_glue19FakeSSLClientSocket11ReadIfReadyEPN3net8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.jingle_glue::FakeSSLClientSocket"*)* @_ZN11jingle_glue19FakeSSLClientSocket17CancelReadIfReadyEv to i8*), i8* bitcast (i32 (%"class.jingle_glue::FakeSSLClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)* @_ZN11jingle_glue19FakeSSLClientSocket5WriteEPN3net8IOBufferEiN4base12OnceCallbackIFviEEERKNS1_27NetworkTrafficAnnotationTagE to i8*), i8* bitcast (i32 (%"class.jingle_glue::FakeSSLClientSocket"*, i32)* @_ZN11jingle_glue19FakeSSLClientSocket20SetReceiveBufferSizeEi to i8*), i8* bitcast (i32 (%"class.jingle_glue::FakeSSLClientSocket"*, i32)* @_ZN11jingle_glue19FakeSSLClientSocket17SetSendBufferSizeEi to i8*), i8* bitcast (void (%"class.net::Socket"*, %"class.std::__1::vector"*)* @_ZN3net6Socket13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE to i8*), i8* bitcast (%"class.std::__1::vector"* (%"class.net::Socket"*)* @_ZNK3net6Socket13GetDnsAliasesEv to i8*), i8* bitcast (void (%"class.net::StreamSocket"*, %"class.base::RepeatingCallback"*)* @_ZN3net12StreamSocket24SetBeforeConnectCallbackERKN4base17RepeatingCallbackIFivEEE to i8*), i8* bitcast (i32 (%"class.jingle_glue::FakeSSLClientSocket"*, %"class.base::OnceCallback"*)* @_ZN11jingle_glue19FakeSSLClientSocket7ConnectEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)* @_ZN3net12StreamSocket16ConfirmHandshakeEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.jingle_glue::FakeSSLClientSocket"*)* @_ZN11jingle_glue19FakeSSLClientSocket10DisconnectEv to i8*), i8* bitcast (i1 (%"class.jingle_glue::FakeSSLClientSocket"*)* @_ZNK11jingle_glue19FakeSSLClientSocket11IsConnectedEv to i8*), i8* bitcast (i1 (%"class.jingle_glue::FakeSSLClientSocket"*)* @_ZNK11jingle_glue19FakeSSLClientSocket18IsConnectedAndIdleEv to i8*), i8* bitcast (i32 (%"class.jingle_glue::FakeSSLClientSocket"*, %"class.net::IPEndPoint"*)* @_ZNK11jingle_glue19FakeSSLClientSocket14GetPeerAddressEPN3net10IPEndPointE to i8*), i8* bitcast (i32 (%"class.jingle_glue::FakeSSLClientSocket"*, %"class.net::IPEndPoint"*)* @_ZNK11jingle_glue19FakeSSLClientSocket15GetLocalAddressEPN3net10IPEndPointE to i8*), i8* bitcast (%"class.net::NetLogWithSource"* (%"class.jingle_glue::FakeSSLClientSocket"*)* @_ZNK11jingle_glue19FakeSSLClientSocket6NetLogEv to i8*), i8* bitcast (i1 (%"class.jingle_glue::FakeSSLClientSocket"*)* @_ZNK11jingle_glue19FakeSSLClientSocket11WasEverUsedEv to i8*), i8* bitcast (i1 (%"class.jingle_glue::FakeSSLClientSocket"*)* @_ZNK11jingle_glue19FakeSSLClientSocket17WasAlpnNegotiatedEv to i8*), i8* bitcast (i32 (%"class.jingle_glue::FakeSSLClientSocket"*)* @_ZNK11jingle_glue19FakeSSLClientSocket21GetNegotiatedProtocolEv to i8*), i8* bitcast (void ()* @_ZNK3net12StreamSocket26GetPeerApplicationSettingsEv to i8*), i8* bitcast (i1 (%"class.jingle_glue::FakeSSLClientSocket"*, %"class.net::SSLInfo"*)* @_ZN11jingle_glue19FakeSSLClientSocket10GetSSLInfoEPN3net7SSLInfoE to i8*), i8* bitcast (void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)* @_ZNK3net12StreamSocket21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE to i8*), i8* bitcast (void (%"class.jingle_glue::FakeSSLClientSocket"*, %"class.std::__1::vector.13"*)* @_ZNK11jingle_glue19FakeSSLClientSocket21GetConnectionAttemptsEPNSt3__16vectorIN3net17ConnectionAttemptENS1_9allocatorIS4_EEEE to i8*), i8* bitcast (void (%"class.jingle_glue::FakeSSLClientSocket"*)* @_ZN11jingle_glue19FakeSSLClientSocket23ClearConnectionAttemptsEv to i8*), i8* bitcast (void (%"class.jingle_glue::FakeSSLClientSocket"*, %"class.std::__1::vector.13"*)* @_ZN11jingle_glue19FakeSSLClientSocket21AddConnectionAttemptsERKNSt3__16vectorIN3net17ConnectionAttemptENS1_9allocatorIS4_EEEE to i8*), i8* bitcast (i64 (%"class.jingle_glue::FakeSSLClientSocket"*)* @_ZNK11jingle_glue19FakeSSLClientSocket21GetTotalReceivedBytesEv to i8*), i8* bitcast (void (%"class.net::StreamSocket"*, %"struct.net::StreamSocket::SocketMemoryStats"*)* @_ZNK3net12StreamSocket15DumpMemoryStatsEPNS0_17SocketMemoryStatsE to i8*), i8* bitcast (void (%"class.jingle_glue::FakeSSLClientSocket"*, %"class.net::SocketTag"*)* @_ZN11jingle_glue19FakeSSLClientSocket14ApplySocketTagERKN3net9SocketTagE to i8*)] }, align 8
@.str = private unnamed_addr constant [44 x i8] c"../../jingle/glue/fake_ssl_client_socket.cc\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"transport_socket_.get()\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"unexpected state: \00", align 1
@_ZN11jingle_glue12_GLOBAL__N_118kTrafficAnnotationE = internal constant %"struct.net::NetworkTrafficAnnotationTag" { i32 3556498 }, align 4
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN11jingle_glue19FakeSSLClientSocketC1ENSt3__110unique_ptrIN3net12StreamSocketENS1_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%"class.jingle_glue::FakeSSLClientSocket"*, %"class.net::StreamSocket"*), void (%"class.jingle_glue::FakeSSLClientSocket"*, %"class.net::StreamSocket"*)* @_ZN11jingle_glue19FakeSSLClientSocketC2ENSt3__110unique_ptrIN3net12StreamSocketENS1_14default_deleteIS4_EEEE
@_ZN11jingle_glue19FakeSSLClientSocketD1Ev = hidden unnamed_addr alias void (%"class.jingle_glue::FakeSSLClientSocket"*), void (%"class.jingle_glue::FakeSSLClientSocket"*)* @_ZN11jingle_glue19FakeSSLClientSocketD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN11jingle_glue19FakeSSLClientSocket17GetSslClientHelloEv() local_unnamed_addr #0 align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([72 x i8], [72 x i8]* @_ZN11jingle_glue12_GLOBAL__N_115kSslClientHelloE, i64 0, i64 0), i64 72 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN11jingle_glue19FakeSSLClientSocket17GetSslServerHelloEv() local_unnamed_addr #0 align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([79 x i8], [79 x i8]* @_ZN11jingle_glue12_GLOBAL__N_115kSslServerHelloE, i64 0, i64 0), i64 79 }
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_glue19FakeSSLClientSocketC2ENSt3__110unique_ptrIN3net12StreamSocketENS1_14default_deleteIS4_EEEE(%"class.jingle_glue::FakeSSLClientSocket"*, %"class.net::StreamSocket"*) unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = ptrtoint %"class.net::StreamSocket"* %1 to i64
  %5 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3net6SocketC2Ev(%"class.net::Socket"* %5) #9
  %6 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*] }, { [33 x i8*] }* @_ZTVN11jingle_glue19FakeSSLClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 3
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %12 = tail call i8* @_Znwm(i64 24) #10
  %13 = bitcast i8* %12 to %"class.net::IOBuffer"*
  tail call void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"* nonnull %13, i64 72) #9
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to i32*
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  %17 = tail call i8* @_Znwm(i64 40) #10
  %18 = bitcast i8* %17 to %"class.net::DrainableIOBuffer"*
  tail call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %18, %"class.net::IOBuffer"* nonnull %13, i32 72) #9
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = bitcast i8* %19 to i32*
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  %22 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 5, i32 0
  %23 = bitcast %"class.net::DrainableIOBuffer"** %22 to i8**
  store i8* %17, i8** %23, align 8
  %24 = tail call i8* @_Znwm(i64 24) #10
  %25 = bitcast i8* %24 to %"class.net::IOBuffer"*
  tail call void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"* nonnull %25, i64 79) #9
  %26 = getelementptr inbounds i8, i8* %24, i64 8
  %27 = bitcast i8* %26 to i32*
  %28 = atomicrmw add i32* %27, i32 1 monotonic
  %29 = tail call i8* @_Znwm(i64 40) #10
  %30 = bitcast i8* %29 to %"class.net::DrainableIOBuffer"*
  tail call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %30, %"class.net::IOBuffer"* nonnull %25, i32 79) #9
  %31 = getelementptr inbounds i8, i8* %29, i64 8
  %32 = bitcast i8* %31 to i32*
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  %34 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 6, i32 0
  %35 = bitcast %"class.net::DrainableIOBuffer"** %34 to i8**
  store i8* %29, i8** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %36, align 8
  %38 = icmp eq %"class.net::StreamSocket"* %37, null
  br i1 %38, label %39, label %42

39:                                               ; preds = %2
  %40 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i32 99, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %39, %2
  %43 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %22, align 8
  %44 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %43, i64 0, i32 0, i32 2
  %45 = load i8*, i8** %44, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 16 getelementptr inbounds ([72 x i8], [72 x i8]* @_ZN11jingle_glue12_GLOBAL__N_115kSslClientHelloE, i64 0, i64 0), i64 72, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_glue19FakeSSLClientSocketD2Ev(%"class.jingle_glue::FakeSSLClientSocket"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*] }, { [33 x i8*] }* @_ZTVN11jingle_glue19FakeSSLClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 6, i32 0
  %4 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %3, align 8
  %5 = icmp eq %"class.net::DrainableIOBuffer"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.11", %"class.base::RefCountedThreadSafe.11"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.11", %"class.base::RefCountedThreadSafe.11"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.11"* %12 to %"class.net::IOBuffer"*
  %14 = bitcast %"class.base::RefCountedThreadSafe.11"* %12 to void (%"class.net::IOBuffer"*)***
  %15 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %15, i64 1
  %17 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %16, align 8
  tail call void %17(%"class.net::IOBuffer"* nonnull %13) #9
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 5, i32 0
  %20 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %19, align 8
  %21 = icmp eq %"class.net::DrainableIOBuffer"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %20, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.11", %"class.base::RefCountedThreadSafe.11"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %34

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.11", %"class.base::RefCountedThreadSafe.11"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe.11"* %28 to %"class.net::IOBuffer"*
  %30 = bitcast %"class.base::RefCountedThreadSafe.11"* %28 to void (%"class.net::IOBuffer"*)***
  %31 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %31, i64 1
  %33 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %32, align 8
  tail call void %33(%"class.net::IOBuffer"* nonnull %29) #9
  br label %34

34:                                               ; preds = %18, %22, %27
  %35 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %35) #9
  %36 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %36, align 8
  store %"class.net::StreamSocket"* null, %"class.net::StreamSocket"** %36, align 8
  %38 = icmp eq %"class.net::StreamSocket"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.net::StreamSocket"* %37 to void (%"class.net::StreamSocket"*)***
  %41 = load void (%"class.net::StreamSocket"*)**, void (%"class.net::StreamSocket"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %41, i64 1
  %43 = load void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %42, align 8
  tail call void %43(%"class.net::StreamSocket"* nonnull %37) #9
  br label %44

44:                                               ; preds = %34, %39
  %45 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3net6SocketD2Ev(%"class.net::Socket"* %45) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net6SocketD2Ev(%"class.net::Socket"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_glue19FakeSSLClientSocketD0Ev(%"class.jingle_glue::FakeSSLClientSocket"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*] }, { [33 x i8*] }* @_ZTVN11jingle_glue19FakeSSLClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 6, i32 0
  %4 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %3, align 8
  %5 = icmp eq %"class.net::DrainableIOBuffer"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.11", %"class.base::RefCountedThreadSafe.11"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.11", %"class.base::RefCountedThreadSafe.11"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.11"* %12 to %"class.net::IOBuffer"*
  %14 = bitcast %"class.base::RefCountedThreadSafe.11"* %12 to void (%"class.net::IOBuffer"*)***
  %15 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %15, i64 1
  %17 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %16, align 8
  tail call void %17(%"class.net::IOBuffer"* nonnull %13) #9
  br label %18

18:                                               ; preds = %11, %6, %1
  %19 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 5, i32 0
  %20 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %19, align 8
  %21 = icmp eq %"class.net::DrainableIOBuffer"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %20, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.11", %"class.base::RefCountedThreadSafe.11"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %34

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.11", %"class.base::RefCountedThreadSafe.11"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe.11"* %28 to %"class.net::IOBuffer"*
  %30 = bitcast %"class.base::RefCountedThreadSafe.11"* %28 to void (%"class.net::IOBuffer"*)***
  %31 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %31, i64 1
  %33 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %32, align 8
  tail call void %33(%"class.net::IOBuffer"* nonnull %29) #9
  br label %34

34:                                               ; preds = %27, %22, %18
  %35 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %35) #9
  %36 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %36, align 8
  store %"class.net::StreamSocket"* null, %"class.net::StreamSocket"** %36, align 8
  %38 = icmp eq %"class.net::StreamSocket"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.net::StreamSocket"* %37 to void (%"class.net::StreamSocket"*)***
  %41 = load void (%"class.net::StreamSocket"*)**, void (%"class.net::StreamSocket"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %41, i64 1
  %43 = load void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %42, align 8
  tail call void %43(%"class.net::StreamSocket"* nonnull %37) #9
  br label %44

44:                                               ; preds = %34, %39
  %45 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3net6SocketD2Ev(%"class.net::Socket"* %45) #9
  %46 = bitcast %"class.jingle_glue::FakeSSLClientSocket"* %0 to i8*
  tail call void @_ZdlPv(i8* %46) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_glue19FakeSSLClientSocket4ReadEPN3net8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #1 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %6, align 8
  %8 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.net::StreamSocket"* %7 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %14 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %14, i64 2
  %16 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %15, align 8
  %17 = call i32 %16(%"class.net::Socket"* %8, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %5) #9
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_glue19FakeSSLClientSocket11ReadIfReadyEPN3net8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #1 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %6, align 8
  %8 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.net::StreamSocket"* %7 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %14 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %14, i64 3
  %16 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %15, align 8
  %17 = call i32 %16(%"class.net::Socket"* %8, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %5) #9
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_glue19FakeSSLClientSocket17CancelReadIfReadyEv(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %2, align 8
  %4 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %3, i64 0, i32 0
  %5 = bitcast %"class.net::StreamSocket"* %3 to i32 (%"class.net::Socket"*)***
  %6 = load i32 (%"class.net::Socket"*)**, i32 (%"class.net::Socket"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.net::Socket"*)*, i32 (%"class.net::Socket"*)** %6, i64 4
  %8 = load i32 (%"class.net::Socket"*)*, i32 (%"class.net::Socket"*)** %7, align 8
  %9 = tail call i32 %8(%"class.net::Socket"* %4) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_glue19FakeSSLClientSocket5WriteEPN3net8IOBufferEiN4base12OnceCallbackIFviEEERKNS1_27NetworkTrafficAnnotationTagE(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) unnamed_addr #1 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %7, align 8
  %9 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.net::StreamSocket"* %8 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)***
  %15 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %15, i64 5
  %17 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %16, align 8
  %18 = call i32 %17(%"class.net::Socket"* %9, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %6, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) %4) #9
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #9
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_glue19FakeSSLClientSocket20SetReceiveBufferSizeEi(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %3, align 8
  %5 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %4, i64 0, i32 0
  %6 = bitcast %"class.net::StreamSocket"* %4 to i32 (%"class.net::Socket"*, i32)***
  %7 = load i32 (%"class.net::Socket"*, i32)**, i32 (%"class.net::Socket"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.net::Socket"*, i32)*, i32 (%"class.net::Socket"*, i32)** %7, i64 6
  %9 = load i32 (%"class.net::Socket"*, i32)*, i32 (%"class.net::Socket"*, i32)** %8, align 8
  %10 = tail call i32 %9(%"class.net::Socket"* %5, i32 %1) #9
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_glue19FakeSSLClientSocket17SetSendBufferSizeEi(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %3, align 8
  %5 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %4, i64 0, i32 0
  %6 = bitcast %"class.net::StreamSocket"* %4 to i32 (%"class.net::Socket"*, i32)***
  %7 = load i32 (%"class.net::Socket"*, i32)**, i32 (%"class.net::Socket"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.net::Socket"*, i32)*, i32 (%"class.net::Socket"*, i32)** %7, i64 7
  %9 = load i32 (%"class.net::Socket"*, i32)*, i32 (%"class.net::Socket"*, i32)** %8, align 8
  %10 = tail call i32 %9(%"class.net::Socket"* %5, i32 %1) #9
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_glue19FakeSSLClientSocket7ConnectEN4base12OnceCallbackIFviEEE(%"class.jingle_glue::FakeSSLClientSocket"*, %"class.base::OnceCallback"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  store i32 1, i32* %3, align 8
  %4 = tail call i32 @_ZN11jingle_glue19FakeSSLClientSocket15DoHandshakeLoopEv(%"class.jingle_glue::FakeSSLClientSocket"* %0)
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4, i32 0
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %9 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %7, %"class.base::internal::CallbackBase"* dereferenceable(8) %8) #9
  br label %10

10:                                               ; preds = %6, %2
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_glue19FakeSSLClientSocket15DoHandshakeLoopEv(%"class.jingle_glue::FakeSSLClientSocket"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  %5 = bitcast %"class.base::OnceCallback"* %2 to i8*
  %6 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = ptrtoint %"class.jingle_glue::FakeSSLClientSocket"* %0 to i64
  %8 = bitcast %"class.base::OnceCallback"* %2 to i8**
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %10 = bitcast %"class.logging::LogMessage"* %3 to i8*
  %11 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %11 to %"class.std::__1::basic_ostream"*
  %13 = load i32, i32* %4, align 8
  br label %14

14:                                               ; preds = %44, %1
  %15 = phi i32 [ %46, %44 ], [ %13, %1 ]
  store i32 0, i32* %4, align 8
  switch i32 %15, label %36 [
    i32 1, label %16
    i32 2, label %32
    i32 3, label %34
  ]

16:                                               ; preds = %14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %17 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %6, align 8
  %18 = call i8* @_Znwm(i64 56) #10, !noalias !2
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !2
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.jingle_glue::FakeSSLClientSocket"*, i32)* @_ZN11jingle_glue19FakeSSLClientSocket13OnConnectDoneEi to i64), i64 0>, <2 x i64>* %21, align 8, !noalias !2
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to i64*
  store i64 %7, i64* %23, align 8, !noalias !2
  store i8* %18, i8** %8, align 8, !alias.scope !2
  %24 = bitcast %"class.net::StreamSocket"* %17 to i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)***
  %25 = load i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)**, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)*, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)** %25, i64 11
  %27 = load i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)*, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)** %26, align 8
  %28 = call i32 %27(%"class.net::StreamSocket"* %17, %"class.base::OnceCallback"* nonnull %2) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #9
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %16
  store i32 2, i32* %4, align 8
  br label %31

31:                                               ; preds = %16, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  br label %41

32:                                               ; preds = %14
  %33 = call i32 @_ZN11jingle_glue19FakeSSLClientSocket17DoSendClientHelloEv(%"class.jingle_glue::FakeSSLClientSocket"* %0)
  br label %41

34:                                               ; preds = %14
  %35 = call i32 @_ZN11jingle_glue19FakeSSLClientSocket19DoVerifyServerHelloEv(%"class.jingle_glue::FakeSSLClientSocket"* %0)
  br label %41

36:                                               ; preds = %14
  %37 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %37, label %38, label %44

38:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %10) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i32 182, i32 2) #9
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18) #9
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %39, i32 %15) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %10) #9
  br label %44

41:                                               ; preds = %34, %32, %31
  %42 = phi i32 [ %35, %34 ], [ %33, %32 ], [ %28, %31 ]
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %48, label %44

44:                                               ; preds = %38, %36, %41
  %45 = phi i32 [ %42, %41 ], [ -9, %36 ], [ -9, %38 ]
  %46 = load i32, i32* %4, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %14

48:                                               ; preds = %44, %41
  %49 = phi i32 [ %45, %44 ], [ -1, %41 ]
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_glue19FakeSSLClientSocket9DoConnectEv(%"class.jingle_glue::FakeSSLClientSocket"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %3, align 8
  %5 = ptrtoint %"class.jingle_glue::FakeSSLClientSocket"* %0 to i64
  %6 = tail call i8* @_Znwm(i64 56) #10, !noalias !7
  %7 = bitcast i8* %6 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %7, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !7
  %8 = getelementptr inbounds i8, i8* %6, i64 32
  %9 = bitcast i8* %8 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.jingle_glue::FakeSSLClientSocket"*, i32)* @_ZN11jingle_glue19FakeSSLClientSocket13OnConnectDoneEi to i64), i64 0>, <2 x i64>* %9, align 8, !noalias !7
  %10 = getelementptr inbounds i8, i8* %6, i64 48
  %11 = bitcast i8* %10 to i64*
  store i64 %5, i64* %11, align 8, !noalias !7
  %12 = bitcast %"class.base::OnceCallback"* %2 to i8**
  store i8* %6, i8** %12, align 8, !alias.scope !7
  %13 = bitcast %"class.net::StreamSocket"* %4 to i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)***
  %14 = load i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)**, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)*, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)** %14, i64 11
  %16 = load i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)*, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)** %15, align 8
  %17 = call i32 %16(%"class.net::StreamSocket"* %4, %"class.base::OnceCallback"* nonnull %2) #9
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #9
  %19 = icmp eq i32 %17, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  store i32 2, i32* %21, align 8
  br label %22

22:                                               ; preds = %1, %20
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_glue19FakeSSLClientSocket17DoSendClientHelloEv(%"class.jingle_glue::FakeSSLClientSocket"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %3, align 8
  %5 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 5, i32 0
  %7 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %6, align 8
  %8 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %7, i64 0, i32 0
  %9 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %7) #9
  %10 = ptrtoint %"class.jingle_glue::FakeSSLClientSocket"* %0 to i64
  %11 = tail call i8* @_Znwm(i64 56) #10, !noalias !12
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !12
  %13 = getelementptr inbounds i8, i8* %11, i64 32
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.jingle_glue::FakeSSLClientSocket"*, i32)* @_ZN11jingle_glue19FakeSSLClientSocket21OnSendClientHelloDoneEi to i64), i64 0>, <2 x i64>* %14, align 8, !noalias !12
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 8, !noalias !12
  %17 = bitcast %"class.base::OnceCallback"* %2 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !12
  %18 = bitcast %"class.net::StreamSocket"* %4 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)***
  %19 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %19, i64 5
  %21 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %20, align 8
  %22 = call i32 %21(%"class.net::Socket"* %5, %"class.net::IOBuffer"* %8, i32 %9, %"class.base::OnceCallback"* nonnull %2, %"struct.net::NetworkTrafficAnnotationTag"* nonnull dereferenceable(4) @_ZN11jingle_glue12_GLOBAL__N_118kTrafficAnnotationE) #9
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #9
  %24 = icmp slt i32 %22, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %1
  %26 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %6, align 8
  %27 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %26) #9
  %28 = icmp ugt i32 %27, %22
  %29 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  br i1 %28, label %30, label %32

30:                                               ; preds = %25
  store i32 2, i32* %29, align 8
  %31 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %6, align 8
  call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %31, i32 %22) #9
  br label %33

32:                                               ; preds = %25
  store i32 3, i32* %29, align 8
  br label %33

33:                                               ; preds = %32, %30, %1
  %34 = phi i32 [ %22, %1 ], [ 0, %30 ], [ 0, %32 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_glue19FakeSSLClientSocket19DoVerifyServerHelloEv(%"class.jingle_glue::FakeSSLClientSocket"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %3, align 8
  %5 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 6, i32 0
  %7 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %6, align 8
  %8 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %7, i64 0, i32 0
  %9 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %7) #9
  %10 = ptrtoint %"class.jingle_glue::FakeSSLClientSocket"* %0 to i64
  %11 = tail call i8* @_Znwm(i64 56) #10, !noalias !17
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !17
  %13 = getelementptr inbounds i8, i8* %11, i64 32
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.jingle_glue::FakeSSLClientSocket"*, i32)* @_ZN11jingle_glue19FakeSSLClientSocket23OnVerifyServerHelloDoneEi to i64), i64 0>, <2 x i64>* %14, align 8, !noalias !17
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 8, !noalias !17
  %17 = bitcast %"class.base::OnceCallback"* %2 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !17
  %18 = bitcast %"class.net::StreamSocket"* %4 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %19 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %19, i64 2
  %21 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %20, align 8
  %22 = call i32 %21(%"class.net::Socket"* %5, %"class.net::IOBuffer"* %8, i32 %9, %"class.base::OnceCallback"* nonnull %2) #9
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #9
  %24 = icmp slt i32 %22, 0
  br i1 %24, label %47, label %25

25:                                               ; preds = %1
  %26 = icmp eq i32 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %25
  %28 = sext i32 %22 to i64
  %29 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %6, align 8
  %30 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %29) #9
  %31 = sext i32 %30 to i64
  %32 = sub nsw i64 79, %31
  %33 = getelementptr inbounds [79 x i8], [79 x i8]* @_ZN11jingle_glue12_GLOBAL__N_115kSslServerHelloE, i64 0, i64 %32
  %34 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %6, align 8
  %35 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %34, i64 0, i32 0, i32 2
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @bcmp(i8* %33, i8* %36, i64 %28) #9
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %47

39:                                               ; preds = %27
  %40 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %34) #9
  %41 = icmp ugt i32 %40, %22
  %42 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  br i1 %41, label %43, label %45

43:                                               ; preds = %39
  store i32 3, i32* %42, align 8
  %44 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %6, align 8
  call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %44, i32 %22) #9
  br label %47

45:                                               ; preds = %39
  store i32 0, i32* %42, align 8
  %46 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 3
  store i8 1, i8* %46, align 4
  br label %47

47:                                               ; preds = %45, %43, %27, %25, %1
  %48 = phi i32 [ %22, %1 ], [ -9, %25 ], [ -9, %27 ], [ 0, %45 ], [ 0, %43 ]
  ret i32 %48
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_glue19FakeSSLClientSocket22RunUserConnectCallbackEi(%"class.jingle_glue::FakeSSLClientSocket"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4
  %6 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*, i32)**
  %15 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %14, align 8
  tail call void %15(%"class.base::internal::BindStateBase"* %12, i32 %1) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_glue19FakeSSLClientSocket38DoHandshakeLoopWithUserConnectCallbackEv(%"class.jingle_glue::FakeSSLClientSocket"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = tail call i32 @_ZN11jingle_glue19FakeSSLClientSocket15DoHandshakeLoopEv(%"class.jingle_glue::FakeSSLClientSocket"* %0)
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4
  %8 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %14 = inttoptr i64 %11 to %"class.base::internal::BindStateBase"*
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %14, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*, i32)**
  %17 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* %14, i32 %3) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br label %18

18:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_glue19FakeSSLClientSocket13OnConnectDoneEi(%"class.jingle_glue::FakeSSLClientSocket"*, i32) #1 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = icmp eq i32 %1, 0
  %6 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  br i1 %5, label %19, label %7

7:                                                ; preds = %2
  store i32 0, i32* %6, align 8
  %8 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4
  %9 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %8 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %15 = inttoptr i64 %12 to %"class.base::internal::BindStateBase"*
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %15, i64 0, i32 1
  %17 = bitcast void ()** %16 to void (%"class.base::internal::BindStateBase"*, i32)**
  %18 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %17, align 8
  tail call void %18(%"class.base::internal::BindStateBase"* %15, i32 %1) #9
  br label %34

19:                                               ; preds = %2
  store i32 2, i32* %6, align 8
  %20 = tail call i32 @_ZN11jingle_glue19FakeSSLClientSocket15DoHandshakeLoopEv(%"class.jingle_glue::FakeSSLClientSocket"* %0) #9
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %37, label %22

22:                                               ; preds = %19
  store i32 0, i32* %6, align 8
  %23 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4
  %24 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.base::OnceCallback"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %30 = inttoptr i64 %27 to %"class.base::internal::BindStateBase"*
  %31 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %30, i64 0, i32 1
  %32 = bitcast void ()** %31 to void (%"class.base::internal::BindStateBase"*, i32)**
  %33 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %32, align 8
  tail call void %33(%"class.base::internal::BindStateBase"* %30, i32 %20) #9
  br label %34

34:                                               ; preds = %7, %22
  %35 = phi %"class.base::internal::CallbackBase"* [ %29, %22 ], [ %14, %7 ]
  %36 = phi i8* [ %24, %22 ], [ %9, %7 ]
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %37

37:                                               ; preds = %34, %19
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11jingle_glue19FakeSSLClientSocket18ProcessConnectDoneEv(%"class.jingle_glue::FakeSSLClientSocket"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  store i32 2, i32* %2, align 8
  ret void
}

declare i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_glue19FakeSSLClientSocket21OnSendClientHelloDoneEi(%"class.jingle_glue::FakeSSLClientSocket"*, i32) #1 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = icmp slt i32 %1, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4
  %9 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %8 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %15 = inttoptr i64 %12 to %"class.base::internal::BindStateBase"*
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %15, i64 0, i32 1
  %17 = bitcast void ()** %16 to void (%"class.base::internal::BindStateBase"*, i32)**
  %18 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %17, align 8
  tail call void %18(%"class.base::internal::BindStateBase"* %15, i32 %1) #9
  br label %43

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 5, i32 0
  %21 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %20, align 8
  %22 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %21) #9
  %23 = icmp ugt i32 %22, %1
  %24 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  br i1 %23, label %25, label %27

25:                                               ; preds = %19
  store i32 2, i32* %24, align 8
  %26 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %20, align 8
  tail call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %26, i32 %1) #9
  br label %28

27:                                               ; preds = %19
  store i32 3, i32* %24, align 8
  br label %28

28:                                               ; preds = %25, %27
  %29 = tail call i32 @_ZN11jingle_glue19FakeSSLClientSocket15DoHandshakeLoopEv(%"class.jingle_glue::FakeSSLClientSocket"* %0) #9
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %46, label %31

31:                                               ; preds = %28
  store i32 0, i32* %24, align 8
  %32 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4
  %33 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.base::OnceCallback"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %39 = inttoptr i64 %36 to %"class.base::internal::BindStateBase"*
  %40 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %39, i64 0, i32 1
  %41 = bitcast void ()** %40 to void (%"class.base::internal::BindStateBase"*, i32)**
  %42 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %41, align 8
  tail call void %42(%"class.base::internal::BindStateBase"* %39, i32 %29) #9
  br label %43

43:                                               ; preds = %6, %31
  %44 = phi %"class.base::internal::CallbackBase"* [ %38, %31 ], [ %14, %6 ]
  %45 = phi i8* [ %33, %31 ], [ %9, %6 ]
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  br label %46

46:                                               ; preds = %43, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_glue19FakeSSLClientSocket26ProcessSendClientHelloDoneEm(%"class.jingle_glue::FakeSSLClientSocket"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 5, i32 0
  %4 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %3, align 8
  %5 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %4) #9
  %6 = sext i32 %5 to i64
  %7 = icmp ugt i64 %6, %1
  %8 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  br i1 %7, label %9, label %12

9:                                                ; preds = %2
  store i32 2, i32* %8, align 8
  %10 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %3, align 8
  %11 = trunc i64 %1 to i32
  tail call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %10, i32 %11) #9
  br label %13

12:                                               ; preds = %2
  store i32 3, i32* %8, align 8
  br label %13

13:                                               ; preds = %12, %9
  ret void
}

declare void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_glue19FakeSSLClientSocket23OnVerifyServerHelloDoneEi(%"class.jingle_glue::FakeSSLClientSocket"*, i32) #1 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = icmp slt i32 %1, 0
  br i1 %7, label %8, label %21

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4
  %11 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback"* %10 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %17 = inttoptr i64 %14 to %"class.base::internal::BindStateBase"*
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %17, i64 0, i32 1
  %19 = bitcast void ()** %18 to void (%"class.base::internal::BindStateBase"*, i32)**
  %20 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %19, align 8
  tail call void %20(%"class.base::internal::BindStateBase"* %17, i32 %1) #9
  br label %87

21:                                               ; preds = %2
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %21
  %24 = sext i32 %1 to i64
  %25 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 6, i32 0
  %26 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %25, align 8
  %27 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %26) #9
  %28 = sext i32 %27 to i64
  %29 = sub nsw i64 79, %28
  %30 = getelementptr inbounds [79 x i8], [79 x i8]* @_ZN11jingle_glue12_GLOBAL__N_115kSslServerHelloE, i64 0, i64 %29
  %31 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %25, align 8
  %32 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %31, i64 0, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = tail call i32 @bcmp(i8* %30, i8* %33, i64 %24) #9
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %23
  %37 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %31) #9
  %38 = icmp ugt i32 %37, %1
  %39 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  br i1 %38, label %55, label %40

40:                                               ; preds = %36
  store i32 0, i32* %39, align 8
  %41 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 3
  store i8 1, i8* %41, align 4
  br label %60

42:                                               ; preds = %21, %23
  %43 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4
  %45 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %44, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.base::OnceCallback"* %44 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %46, align 8
  %50 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %51 = inttoptr i64 %48 to %"class.base::internal::BindStateBase"*
  %52 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %51, i64 0, i32 1
  %53 = bitcast void ()** %52 to void (%"class.base::internal::BindStateBase"*, i32)**
  %54 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %53, align 8
  tail call void %54(%"class.base::internal::BindStateBase"* %51, i32 -9) #9
  br label %87

55:                                               ; preds = %36
  store i32 3, i32* %39, align 8
  %56 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %25, align 8
  tail call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %56, i32 %1) #9
  %57 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 3
  %58 = load i8, i8* %57, align 4, !range !22
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %40, %55
  store i32 0, i32* %39, align 8
  %61 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4
  %62 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #9
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %61, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::OnceCallback"* %61 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %65, i64* %66, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %63, align 8
  %67 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %68 = inttoptr i64 %65 to %"class.base::internal::BindStateBase"*
  %69 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %68, i64 0, i32 1
  %70 = bitcast void ()** %69 to void (%"class.base::internal::BindStateBase"*, i32)**
  %71 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %70, align 8
  tail call void %71(%"class.base::internal::BindStateBase"* %68, i32 0) #9
  br label %87

72:                                               ; preds = %55
  %73 = tail call i32 @_ZN11jingle_glue19FakeSSLClientSocket15DoHandshakeLoopEv(%"class.jingle_glue::FakeSSLClientSocket"* %0) #9
  %74 = icmp eq i32 %73, -1
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  store i32 0, i32* %39, align 8
  %76 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4
  %77 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #9
  %78 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %76, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.base::OnceCallback"* %76 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %80, i64* %81, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %78, align 8
  %82 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %83 = inttoptr i64 %80 to %"class.base::internal::BindStateBase"*
  %84 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %83, i64 0, i32 1
  %85 = bitcast void ()** %84 to void (%"class.base::internal::BindStateBase"*, i32)**
  %86 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %85, align 8
  tail call void %86(%"class.base::internal::BindStateBase"* %83, i32 %73) #9
  br label %87

87:                                               ; preds = %8, %60, %42, %75
  %88 = phi %"class.base::internal::CallbackBase"* [ %82, %75 ], [ %50, %42 ], [ %67, %60 ], [ %16, %8 ]
  %89 = phi i8* [ %77, %75 ], [ %45, %42 ], [ %62, %60 ], [ %11, %8 ]
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %88) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #9
  br label %90

90:                                               ; preds = %87, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_glue19FakeSSLClientSocket28ProcessVerifyServerHelloDoneEm(%"class.jingle_glue::FakeSSLClientSocket"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 6, i32 0
  %6 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %5, align 8
  %7 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %6) #9
  %8 = sext i32 %7 to i64
  %9 = sub nsw i64 79, %8
  %10 = getelementptr inbounds [79 x i8], [79 x i8]* @_ZN11jingle_glue12_GLOBAL__N_115kSslServerHelloE, i64 0, i64 %9
  %11 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %5, align 8
  %12 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %11, i64 0, i32 0, i32 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @bcmp(i8* %10, i8* %13, i64 %1)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %26

16:                                               ; preds = %4
  %17 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %11) #9
  %18 = sext i32 %17 to i64
  %19 = icmp ugt i64 %18, %1
  %20 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  br i1 %19, label %21, label %24

21:                                               ; preds = %16
  store i32 3, i32* %20, align 8
  %22 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %5, align 8
  %23 = trunc i64 %1 to i32
  tail call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %22, i32 %23) #9
  br label %26

24:                                               ; preds = %16
  store i32 0, i32* %20, align 8
  %25 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 3
  store i8 1, i8* %25, align 4
  br label %26

26:                                               ; preds = %4, %24, %21, %2
  %27 = phi i32 [ -9, %2 ], [ -9, %4 ], [ 0, %24 ], [ 0, %21 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_glue19FakeSSLClientSocket10DisconnectEv(%"class.jingle_glue::FakeSSLClientSocket"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %2, align 8
  %4 = bitcast %"class.net::StreamSocket"* %3 to void (%"class.net::StreamSocket"*)***
  %5 = load void (%"class.net::StreamSocket"*)**, void (%"class.net::StreamSocket"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %5, i64 13
  %7 = load void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %6, align 8
  tail call void %7(%"class.net::StreamSocket"* %3) #9
  %8 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 3
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %10) #9
  %11 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 5, i32 0
  %12 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %11, align 8
  tail call void @_ZN3net17DrainableIOBuffer9SetOffsetEi(%"class.net::DrainableIOBuffer"* %12, i32 0) #9
  %13 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 6, i32 0
  %14 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %13, align 8
  tail call void @_ZN3net17DrainableIOBuffer9SetOffsetEi(%"class.net::DrainableIOBuffer"* %14, i32 0) #9
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #3

declare void @_ZN3net17DrainableIOBuffer9SetOffsetEi(%"class.net::DrainableIOBuffer"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11jingle_glue19FakeSSLClientSocket11IsConnectedEv(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 4, !range !22
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %6, align 8
  %8 = bitcast %"class.net::StreamSocket"* %7 to i1 (%"class.net::StreamSocket"*)***
  %9 = load i1 (%"class.net::StreamSocket"*)**, i1 (%"class.net::StreamSocket"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %9, i64 14
  %11 = load i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.net::StreamSocket"* %7) #9
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi i1 [ false, %1 ], [ %12, %5 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11jingle_glue19FakeSSLClientSocket18IsConnectedAndIdleEv(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 4, !range !22
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %6, align 8
  %8 = bitcast %"class.net::StreamSocket"* %7 to i1 (%"class.net::StreamSocket"*)***
  %9 = load i1 (%"class.net::StreamSocket"*)**, i1 (%"class.net::StreamSocket"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %9, i64 15
  %11 = load i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.net::StreamSocket"* %7) #9
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi i1 [ false, %1 ], [ %12, %5 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11jingle_glue19FakeSSLClientSocket14GetPeerAddressEPN3net10IPEndPointE(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly, %"class.net::IPEndPoint"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %3, align 8
  %5 = bitcast %"class.net::StreamSocket"* %4 to i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)***
  %6 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %6, i64 16
  %8 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %7, align 8
  %9 = tail call i32 %8(%"class.net::StreamSocket"* %4, %"class.net::IPEndPoint"* %1) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11jingle_glue19FakeSSLClientSocket15GetLocalAddressEPN3net10IPEndPointE(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly, %"class.net::IPEndPoint"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %3, align 8
  %5 = bitcast %"class.net::StreamSocket"* %4 to i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)***
  %6 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %6, i64 17
  %8 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %7, align 8
  %9 = tail call i32 %8(%"class.net::StreamSocket"* %4, %"class.net::IPEndPoint"* %1) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::NetLogWithSource"* @_ZNK11jingle_glue19FakeSSLClientSocket6NetLogEv(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %2, align 8
  %4 = bitcast %"class.net::StreamSocket"* %3 to %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)***
  %5 = load %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)**, %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)*, %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)** %5, i64 18
  %7 = load %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)*, %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)** %6, align 8
  %8 = tail call %"class.net::NetLogWithSource"* %7(%"class.net::StreamSocket"* %3) #9
  ret %"class.net::NetLogWithSource"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11jingle_glue19FakeSSLClientSocket11WasEverUsedEv(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %2, align 8
  %4 = bitcast %"class.net::StreamSocket"* %3 to i1 (%"class.net::StreamSocket"*)***
  %5 = load i1 (%"class.net::StreamSocket"*)**, i1 (%"class.net::StreamSocket"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %5, i64 19
  %7 = load i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.net::StreamSocket"* %3) #9
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11jingle_glue19FakeSSLClientSocket17WasAlpnNegotiatedEv(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %2, align 8
  %4 = bitcast %"class.net::StreamSocket"* %3 to i1 (%"class.net::StreamSocket"*)***
  %5 = load i1 (%"class.net::StreamSocket"*)**, i1 (%"class.net::StreamSocket"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %5, i64 20
  %7 = load i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.net::StreamSocket"* %3) #9
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11jingle_glue19FakeSSLClientSocket21GetNegotiatedProtocolEv(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %2, align 8
  %4 = bitcast %"class.net::StreamSocket"* %3 to i32 (%"class.net::StreamSocket"*)***
  %5 = load i32 (%"class.net::StreamSocket"*)**, i32 (%"class.net::StreamSocket"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.net::StreamSocket"*)*, i32 (%"class.net::StreamSocket"*)** %5, i64 21
  %7 = load i32 (%"class.net::StreamSocket"*)*, i32 (%"class.net::StreamSocket"*)** %6, align 8
  %8 = tail call i32 %7(%"class.net::StreamSocket"* %3) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11jingle_glue19FakeSSLClientSocket10GetSSLInfoEPN3net7SSLInfoE(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readonly, %"class.net::SSLInfo"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.jingle_glue::FakeSSLClientSocket", %"class.jingle_glue::FakeSSLClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %3, align 8
  %5 = bitcast %"class.net::StreamSocket"* %4 to i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)***
  %6 = load i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)**, i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)*, i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)** %6, i64 23
  %8 = load i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)*, i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.net::StreamSocket"* %4, %"class.net::SSLInfo"* %1) #9
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11jingle_glue19FakeSSLClientSocket21GetConnectionAttemptsEPNSt3__16vectorIN3net17ConnectionAttemptENS1_9allocatorIS4_EEEE(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readnone, %"class.std::__1::vector.13"* nocapture) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %1, i64 0, i32 0, i32 0
  %4 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %1, i64 0, i32 0, i32 1
  %6 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %5, align 8
  %7 = icmp eq %"struct.net::ConnectionAttempt"* %6, %4
  br i1 %7, label %13, label %8

8:                                                ; preds = %2, %8
  %9 = phi %"struct.net::ConnectionAttempt"* [ %10, %8 ], [ %6, %2 ]
  %10 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %9, i64 -1
  %11 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %10, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %11) #9
  %12 = icmp eq %"struct.net::ConnectionAttempt"* %10, %4
  br i1 %12, label %13, label %8

13:                                               ; preds = %8, %2
  store %"struct.net::ConnectionAttempt"* %4, %"struct.net::ConnectionAttempt"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK11jingle_glue19FakeSSLClientSocket21GetTotalReceivedBytesEv(%"class.jingle_glue::FakeSSLClientSocket"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11jingle_glue19FakeSSLClientSocket14ApplySocketTagERKN3net9SocketTagE(%"class.jingle_glue::FakeSSLClientSocket"* nocapture, %"class.net::SocketTag"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

declare void @_ZN3net6Socket13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::Socket"*, %"class.std::__1::vector"*) unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::vector"* @_ZNK3net6Socket13GetDnsAliasesEv(%"class.net::Socket"*) unnamed_addr #3

declare void @_ZN3net12StreamSocket24SetBeforeConnectCallbackERKN4base17RepeatingCallbackIFivEEE(%"class.net::StreamSocket"*, %"class.base::RepeatingCallback"*) unnamed_addr #3

declare i32 @_ZN3net12StreamSocket16ConfirmHandshakeEN4base12OnceCallbackIFviEEE(%"class.net::StreamSocket"*, %"class.base::OnceCallback"*) unnamed_addr #3

declare void @_ZNK3net12StreamSocket26GetPeerApplicationSettingsEv() unnamed_addr

declare void @_ZNK3net12StreamSocket21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE(%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_glue19FakeSSLClientSocket23ClearConnectionAttemptsEv(%"class.jingle_glue::FakeSSLClientSocket"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_glue19FakeSSLClientSocket21AddConnectionAttemptsERKNSt3__16vectorIN3net17ConnectionAttemptENS1_9allocatorIS4_EEEE(%"class.jingle_glue::FakeSSLClientSocket"*, %"class.std::__1::vector.13"* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3net12StreamSocket15DumpMemoryStatsEPNS0_17SocketMemoryStatsE(%"class.net::StreamSocket"*, %"struct.net::StreamSocket::SocketMemoryStats"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN3net6SocketC2Ev(%"class.net::Socket"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"*, %"class.net::IOBuffer"*, i32) unnamed_addr #3

declare void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"*, i64) unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !22
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.jingle_glue::FakeSSLClientSocket"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.jingle_glue::FakeSSLClientSocket"*, i32)**
  %22 = load void (%"class.jingle_glue::FakeSSLClientSocket"*, i32)*, void (%"class.jingle_glue::FakeSSLClientSocket"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.jingle_glue::FakeSSLClientSocket"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.jingle_glue::FakeSSLClientSocket"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.jingle_glue::FakeSSLClientSocket"* %13, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN11jingle_glue19FakeSSLClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN11jingle_glue19FakeSSLClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIMN11jingle_glue19FakeSSLClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIMN11jingle_glue19FakeSSLClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIMN11jingle_glue19FakeSSLClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIMN11jingle_glue19FakeSSLClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN11jingle_glue19FakeSSLClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIMN11jingle_glue19FakeSSLClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIMN11jingle_glue19FakeSSLClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!22 = !{i8 0, i8 2}
