; ModuleID = '../../third_party/ruy/src/ruy/prepacked_cache.cc'
source_filename = "../../third_party/ruy/src/ruy/prepacked_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ruy::PrepackedCache" = type { %"class.std::__1::unordered_map", i32, i32, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"struct.ruy::PrepackedCache::KeyHash" = type { i8 }
%"struct.ruy::PrepackedCache::Key" = type <{ i8*, %"struct.ruy::PMatLayout", i32, [4 x i8] }>
%"struct.ruy::PMatLayout" = type { i32, i32, i32, i8, %"struct.ruy::KernelLayout" }
%"struct.ruy::KernelLayout" = type { i8, i8, i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Entry" }
%"struct.ruy::PrepackedCache::Entry" = type { %"struct.ruy::PEMat", i64 }
%"struct.ruy::PEMat" = type <{ %"struct.ruy::Type", [5 x i8], i8*, %"struct.ruy::Type", [5 x i8], i8*, %"struct.ruy::PMatLayout", i32, [4 x i8] }>
%"struct.ruy::Type" = type { i8, i8, i8 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.7"*, i8, [7 x i8] }>
%"class.std::__1::allocator.7" = type { i8 }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRS4_RS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE = comdat any

@_ZN3ruy14PrepackedCacheD1Ev = hidden unnamed_addr alias void (%"class.ruy::PrepackedCache"*), void (%"class.ruy::PrepackedCache"*)* @_ZN3ruy14PrepackedCacheD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3ruy14PrepackedCache7KeyHashclERKNS0_3KeyE(%"struct.ruy::PrepackedCache::KeyHash"* nocapture readnone, %"struct.ruy::PrepackedCache::Key"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.ruy::PrepackedCache::Key"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 3
  %6 = load i8, i8* %5, align 4
  %7 = zext i8 %6 to i32
  %8 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 4, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 1
  %12 = add nuw nsw i32 %11, %7
  %13 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = mul nsw i32 %14, 3
  %16 = add nsw i32 %12, %15
  %17 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 4, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = mul nuw nsw i32 %19, 5
  %21 = add nsw i32 %16, %20
  %22 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 4, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = mul nuw nsw i32 %24, 7
  %26 = add nsw i32 %21, %25
  %27 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = mul nsw i32 %28, 11
  %30 = add nsw i32 %26, %29
  %31 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = mul nsw i32 %32, 13
  %34 = add nsw i32 %30, %33
  %35 = sext i32 %34 to i64
  %36 = xor i64 %4, %35
  ret i64 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3ruy14PrepackedCacheD2Ev(%"class.ruy::PrepackedCache"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = bitcast %"struct.std::__1::__hash_node_base"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  %6 = inttoptr i64 %4 to %"struct.std::__1::__hash_node_base"*
  br i1 %5, label %9, label %25

7:                                                ; preds = %25
  %8 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %2, align 8
  br label %9

9:                                                ; preds = %7, %1
  %10 = phi %"struct.std::__1::__hash_node_base"* [ %8, %7 ], [ %6, %1 ]
  %11 = icmp eq %"struct.std::__1::__hash_node_base"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %9, %12
  %13 = phi %"struct.std::__1::__hash_node_base"* [ %15, %12 ], [ %10, %9 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %14, align 8
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  %17 = icmp eq %"struct.std::__1::__hash_node_base"* %15, null
  br i1 %17, label %18, label %12

18:                                               ; preds = %12, %9
  %19 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base"** %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"struct.std::__1::__hash_node_base"** %20 to i8*
  tail call void @_ZdlPv(i8* %23) #8
  br label %24

24:                                               ; preds = %18, %22
  ret void

25:                                               ; preds = %1, %25
  %26 = phi i64 [ %33, %25 ], [ %4, %1 ]
  %27 = inttoptr i64 %26 to %"struct.std::__1::__hash_node"*
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %27, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZN3ruy6detail17SystemAlignedFreeEPv(i8* %29) #9
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %27, i64 0, i32 2, i32 0, i32 1, i32 0, i32 5
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZN3ruy6detail17SystemAlignedFreeEPv(i8* %31) #9
  %32 = inttoptr i64 %26 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %7, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3ruy14PrepackedCache3GetEPKvPNS_5PEMatE(%"class.ruy::PrepackedCache"*, i8*, %"struct.ruy::PEMat"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.ruy::PrepackedCache::Key", align 8
  %5 = alloca %"struct.ruy::PrepackedCache::Entry", align 8
  %6 = bitcast %"struct.ruy::PrepackedCache::Key"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %4, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %4, i64 0, i32 2
  %10 = bitcast %"struct.ruy::PMatLayout"* %8 to i8*
  %11 = bitcast %"struct.ruy::PrepackedCache::Key"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  store i8* %1, i8** %7, align 8
  %12 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6
  %13 = bitcast %"struct.ruy::PMatLayout"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %13, i64 16, i1 false)
  %14 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 7
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %9, align 8
  %16 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 0, i32 0
  %17 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"* %16, %"struct.ruy::PrepackedCache::Key"* nonnull dereferenceable(32) %4) #9
  %18 = icmp eq %"struct.std::__1::__hash_node_base"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %17, i64 13
  %24 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i64*
  store i64 %21, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %17, i64 6
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %27, i64 52, i1 false)
  br label %88

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 3
  %30 = load i8, i8* %29, align 4
  %31 = icmp eq i8 %30, 0
  %32 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 1
  %33 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 0
  %34 = load i32, i32* %32, align 4
  %35 = load i32, i32* %33, align 4
  %36 = select i1 %31, i32 %34, i32 %35
  %37 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = mul nsw i32 %38, %36
  %40 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 0, i32 2
  %41 = load i8, i8* %40, align 2
  %42 = zext i8 %41 to i32
  %43 = mul nsw i32 %39, %42
  %44 = sext i32 %43 to i64
  %45 = call i8* @_ZN3ruy6detail18SystemAlignedAllocEl(i64 %44) #9
  %46 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  store i8* %45, i8** %46, align 8
  %47 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 3, i32 1
  %48 = load i8, i8* %47, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %59

50:                                               ; preds = %28
  %51 = load i32, i32* %32, align 4
  %52 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 3, i32 2
  %53 = load i8, i8* %52, align 2
  %54 = zext i8 %53 to i32
  %55 = mul nsw i32 %51, %54
  %56 = sext i32 %55 to i64
  %57 = call i8* @_ZN3ruy6detail18SystemAlignedAllocEl(i64 %56) #9
  %58 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 5
  store i8* %57, i8** %58, align 8
  br label %59

59:                                               ; preds = %28, %50
  %60 = phi i32 [ 0, %28 ], [ %55, %50 ]
  %61 = add nsw i32 %60, %43
  %62 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 2
  %63 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 1
  br label %68

68:                                               ; preds = %73, %66
  %69 = load i32, i32* %62, align 4
  %70 = add nsw i32 %69, %61
  %71 = load i32, i32* %67, align 8
  %72 = icmp sgt i32 %70, %71
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  call void @_ZN3ruy14PrepackedCache8EjectOneEv(%"class.ruy::PrepackedCache"* %0) #9
  %74 = load i64, i64* %63, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %68

76:                                               ; preds = %68, %73, %59
  %77 = getelementptr inbounds %"struct.ruy::PrepackedCache::Entry", %"struct.ruy::PrepackedCache::Entry"* %5, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %77) #9
  %78 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds i8, i8* %77, i64 52
  %80 = bitcast i8* %79 to i32*
  store i32 -1431655766, i32* %80, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %78, i64 52, i1 false)
  %81 = getelementptr inbounds %"struct.ruy::PrepackedCache::Entry", %"struct.ruy::PrepackedCache::Entry"* %5, i64 0, i32 1
  %82 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 3
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %82, align 8
  store i64 %83, i64* %81, align 8
  %85 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRS4_RS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %16, %"struct.ruy::PrepackedCache::Key"* nonnull dereferenceable(32) %4, %"struct.ruy::PrepackedCache::Key"* nonnull dereferenceable(32) %4, %"struct.ruy::PrepackedCache::Entry"* nonnull dereferenceable(64) %5) #9
  %86 = load i32, i32* %62, align 4
  %87 = add nsw i32 %86, %61
  store i32 %87, i32* %62, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %77) #9
  br label %88

88:                                               ; preds = %76, %19
  %89 = phi i32 [ 0, %19 ], [ 1, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret i32 %89
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3ruy14PrepackedCache17EjectUntilRoomForEi(%"class.ruy::PrepackedCache"*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 1
  br label %9

9:                                                ; preds = %7, %14
  %10 = load i32, i32* %3, align 4
  %11 = add nsw i32 %10, %1
  %12 = load i32, i32* %8, align 8
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  tail call void @_ZN3ruy14PrepackedCache8EjectOneEv(%"class.ruy::PrepackedCache"* %0)
  %15 = load i64, i64* %4, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %14, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3ruy14PrepackedCache8EjectOneEv(%"class.ruy::PrepackedCache"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.17", align 8
  %3 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::__hash_node_base"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to %"struct.std::__1::__hash_node"*
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %6, i64 0, i32 2, i32 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = inttoptr i64 %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %53

14:                                               ; preds = %53, %10, %1
  %15 = phi i64 [ 0, %1 ], [ %5, %10 ], [ %64, %53 ]
  %16 = inttoptr i64 %15 to %"struct.std::__1::__hash_node"*
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %16, i64 0, i32 2, i32 0, i32 1, i32 0, i32 6, i32 3
  %18 = load i8, i8* %17, align 4
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %16, i64 0, i32 2, i32 0, i32 1, i32 0, i32 6, i32 1
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %16, i64 0, i32 2, i32 0, i32 1, i32 0, i32 6, i32 0
  %22 = load i32, i32* %20, align 4
  %23 = load i32, i32* %21, align 4
  %24 = select i1 %19, i32 %22, i32 %23
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %16, i64 0, i32 2, i32 0, i32 1, i32 0, i32 6, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %16, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %28 = load i8, i8* %27, align 2
  %29 = zext i8 %28 to i32
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %16, i64 0, i32 2, i32 0, i32 1, i32 0, i32 3, i32 2
  %31 = load i8, i8* %30, align 2
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = mul i32 %26, %24
  %36 = mul i32 %35, %29
  %37 = mul i32 %22, %32
  %38 = add i32 %37, %36
  %39 = sub i32 %34, %38
  store i32 %39, i32* %33, align 4
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %16, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZN3ruy6detail17SystemAlignedFreeEPv(i8* %41) #9
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %16, i64 0, i32 2, i32 0, i32 1, i32 0, i32 5
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZN3ruy6detail17SystemAlignedFreeEPv(i8* %43) #9
  %44 = inttoptr i64 %15 to %"struct.std::__1::__hash_node_base"*
  %45 = getelementptr inbounds %"class.ruy::PrepackedCache", %"class.ruy::PrepackedCache"* %0, i64 0, i32 0, i32 0
  %46 = bitcast %"class.std::__1::unique_ptr.17"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #9
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.17"* nonnull sret %2, %"class.std::__1::__hash_table"* %45, %"struct.std::__1::__hash_node_base"* %44) #9
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.17"* %2, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %47, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %14
  %51 = bitcast %"struct.std::__1::__hash_node"* %48 to i8*
  call void @_ZdlPv(i8* %51) #8
  br label %52

52:                                               ; preds = %14, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #9
  ret void

53:                                               ; preds = %10, %53
  %54 = phi i64 [ %66, %53 ], [ %12, %10 ]
  %55 = phi i64 [ %64, %53 ], [ %5, %10 ]
  %56 = phi i1 [ %63, %53 ], [ false, %10 ]
  %57 = phi i64 [ %59, %53 ], [ %8, %10 ]
  %58 = phi i64 [ %62, %53 ], [ %8, %10 ]
  %59 = select i1 %56, i64 %58, i64 %57
  %60 = inttoptr i64 %54 to %"struct.std::__1::__hash_node"*
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %60, i64 0, i32 2, i32 0, i32 1, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = icmp ult i64 %62, %59
  %64 = select i1 %63, i64 %54, i64 %55
  %65 = inttoptr i64 %54 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %14, label %53
}

declare void @_ZN3ruy6detail17SystemAlignedFreeEPv(i8*) local_unnamed_addr #3

declare i8* @_ZN3ruy6detail18SystemAlignedAllocEl(i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"struct.ruy::PrepackedCache::Key"* dereferenceable(32)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"struct.ruy::PrepackedCache::Key"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 3
  %6 = load i8, i8* %5, align 4
  %7 = zext i8 %6 to i32
  %8 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 4, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 1
  %12 = add nuw nsw i32 %11, %7
  %13 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = mul nsw i32 %14, 3
  %16 = add nsw i32 %12, %15
  %17 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 4, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = mul nuw nsw i32 %19, 5
  %21 = add nsw i32 %16, %20
  %22 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 4, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = mul nuw nsw i32 %24, 7
  %26 = add nsw i32 %21, %25
  %27 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = mul nsw i32 %28, 11
  %30 = add nsw i32 %26, %29
  %31 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = mul nsw i32 %32, 13
  %34 = add nsw i32 %30, %33
  %35 = sext i32 %34 to i64
  %36 = xor i64 %4, %35
  %37 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  %40 = inttoptr i64 %4 to i8*
  br i1 %39, label %127, label %41

41:                                               ; preds = %2
  %42 = tail call i64 @llvm.ctpop.i64(i64 %38) #9, !range !3
  %43 = icmp ugt i64 %42, 1
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = add i64 %38, -1
  %46 = and i64 %36, %45
  br label %51

47:                                               ; preds = %41
  %48 = icmp ult i64 %36, %38
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = urem i64 %36, %38
  br label %51

51:                                               ; preds = %44, %47, %49
  %52 = phi i64 [ %46, %44 ], [ %50, %49 ], [ %36, %47 ]
  %53 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, i64 %52
  %56 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base"* %56, null
  br i1 %57, label %127, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 0, i32 0
  %60 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base"* %60, null
  br i1 %61, label %127, label %62

62:                                               ; preds = %58
  %63 = add i64 %38, -1
  %64 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %123
  %66 = phi %"struct.std::__1::__hash_node_base"* [ %60, %62 ], [ %125, %123 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 1
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, %36
  br i1 %70, label %81, label %71

71:                                               ; preds = %65
  br i1 %43, label %74, label %72

72:                                               ; preds = %71
  %73 = and i64 %69, %63
  br label %78

74:                                               ; preds = %71
  %75 = icmp ult i64 %69, %38
  br i1 %75, label %78, label %76

76:                                               ; preds = %74
  %77 = urem i64 %69, %38
  br label %78

78:                                               ; preds = %72, %74, %76
  %79 = phi i64 [ %73, %72 ], [ %77, %76 ], [ %69, %74 ]
  %80 = icmp eq i64 %79, %52
  br i1 %80, label %123, label %127

81:                                               ; preds = %65
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 2
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %82 to %"struct.std::__1::__hash_value_type"*
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, %40
  br i1 %86, label %87, label %123

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %83, i64 0, i32 0, i32 0, i32 1, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, %32
  br i1 %90, label %91, label %123

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 3
  %93 = bitcast %"struct.std::__1::__hash_node_base"* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, %28
  br i1 %95, label %96, label %123

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 4
  %98 = bitcast %"struct.std::__1::__hash_node_base"* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, %14
  br i1 %100, label %101, label %123

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %83, i64 0, i32 0, i32 0, i32 1, i32 3
  %103 = load i8, i8* %102, align 4
  %104 = icmp eq i8 %103, %6
  br i1 %104, label %105, label %123

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %83, i64 0, i32 0, i32 0, i32 1, i32 4, i32 1
  %107 = load i8, i8* %106, align 1
  %108 = icmp eq i8 %107, %18
  br i1 %108, label %109, label %123

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %83, i64 0, i32 0, i32 0, i32 1, i32 4, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, %23
  br i1 %112, label %113, label %123

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %83, i64 0, i32 0, i32 0, i32 1, i32 4, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp eq i8 %115, %9
  br i1 %116, label %117, label %123

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 5
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i32*
  %120 = load i32, i32* %119, align 8
  %121 = load i32, i32* %64, align 8
  %122 = icmp eq i32 %120, %121
  br i1 %122, label %127, label %123

123:                                              ; preds = %87, %91, %96, %101, %105, %109, %81, %113, %78, %117
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base"* %125, null
  br i1 %126, label %127, label %65

127:                                              ; preds = %117, %123, %78, %58, %2, %51
  %128 = phi %"struct.std::__1::__hash_node_base"* [ null, %51 ], [ null, %2 ], [ null, %58 ], [ %66, %117 ], [ null, %123 ], [ null, %78 ]
  ret %"struct.std::__1::__hash_node_base"* %128
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRS4_RS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"struct.ruy::PrepackedCache::Key"* dereferenceable(32), %"struct.ruy::PrepackedCache::Key"* dereferenceable(32), %"struct.ruy::PrepackedCache::Entry"* dereferenceable(64)) local_unnamed_addr #2 comdat align 2 {
  %5 = bitcast %"struct.ruy::PrepackedCache::Key"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 3
  %8 = load i8, i8* %7, align 4
  %9 = zext i8 %8 to i32
  %10 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 4, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = shl nuw nsw i32 %12, 1
  %14 = add nuw nsw i32 %13, %9
  %15 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = mul nsw i32 %16, 3
  %18 = add nsw i32 %14, %17
  %19 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 4, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = mul nuw nsw i32 %21, 5
  %23 = add nsw i32 %18, %22
  %24 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 4, i32 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = mul nuw nsw i32 %26, 7
  %28 = add nsw i32 %23, %27
  %29 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = mul nsw i32 %30, 11
  %32 = add nsw i32 %28, %31
  %33 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 1, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = mul nsw i32 %34, 13
  %36 = add nsw i32 %32, %35
  %37 = sext i32 %36 to i64
  %38 = xor i64 %6, %37
  %39 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  %42 = inttoptr i64 %6 to i8*
  br i1 %41, label %129, label %43

43:                                               ; preds = %4
  %44 = tail call i64 @llvm.ctpop.i64(i64 %40) #9, !range !3
  %45 = icmp ugt i64 %44, 1
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = add i64 %40, -1
  %48 = and i64 %38, %47
  br label %53

49:                                               ; preds = %43
  %50 = icmp ult i64 %38, %40
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = urem i64 %38, %40
  br label %53

53:                                               ; preds = %46, %49, %51
  %54 = phi i64 [ %48, %46 ], [ %52, %51 ], [ %38, %49 ]
  %55 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, i64 %54
  %58 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %129, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %58, i64 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %61, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base"* %62, null
  br i1 %63, label %129, label %64

64:                                               ; preds = %60
  %65 = add i64 %40, -1
  %66 = getelementptr inbounds %"struct.ruy::PrepackedCache::Key", %"struct.ruy::PrepackedCache::Key"* %1, i64 0, i32 2
  br label %67

67:                                               ; preds = %64, %125
  %68 = phi %"struct.std::__1::__hash_node_base"* [ %62, %64 ], [ %127, %125 ]
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %38
  br i1 %72, label %83, label %73

73:                                               ; preds = %67
  br i1 %45, label %76, label %74

74:                                               ; preds = %73
  %75 = and i64 %71, %65
  br label %80

76:                                               ; preds = %73
  %77 = icmp ult i64 %71, %40
  br i1 %77, label %80, label %78

78:                                               ; preds = %76
  %79 = urem i64 %71, %40
  br label %80

80:                                               ; preds = %74, %76, %78
  %81 = phi i64 [ %75, %74 ], [ %79, %78 ], [ %71, %76 ]
  %82 = icmp eq i64 %81, %54
  br i1 %82, label %83, label %129

83:                                               ; preds = %67, %80
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 2
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %84 to %"struct.std::__1::__hash_value_type"*
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %84 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = icmp eq i8* %87, %42
  br i1 %88, label %89, label %125

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %85, i64 0, i32 0, i32 0, i32 1, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, %34
  br i1 %92, label %93, label %125

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 3
  %95 = bitcast %"struct.std::__1::__hash_node_base"* %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, %30
  br i1 %97, label %98, label %125

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 4
  %100 = bitcast %"struct.std::__1::__hash_node_base"* %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, %16
  br i1 %102, label %103, label %125

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %85, i64 0, i32 0, i32 0, i32 1, i32 3
  %105 = load i8, i8* %104, align 4
  %106 = icmp eq i8 %105, %8
  br i1 %106, label %107, label %125

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %85, i64 0, i32 0, i32 0, i32 1, i32 4, i32 1
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, %20
  br i1 %110, label %111, label %125

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %85, i64 0, i32 0, i32 0, i32 1, i32 4, i32 2
  %113 = load i8, i8* %112, align 1
  %114 = icmp eq i8 %113, %25
  br i1 %114, label %115, label %125

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %85, i64 0, i32 0, i32 0, i32 1, i32 4, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, %11
  br i1 %118, label %119, label %125

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 5
  %121 = bitcast %"struct.std::__1::__hash_node_base"* %120 to i32*
  %122 = load i32, i32* %121, align 8
  %123 = load i32, i32* %66, align 8
  %124 = icmp eq i32 %122, %123
  br i1 %124, label %217, label %125

125:                                              ; preds = %115, %111, %107, %103, %98, %93, %89, %83, %119
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 0, i32 0
  %127 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %126, align 8
  %128 = icmp eq %"struct.std::__1::__hash_node_base"* %127, null
  br i1 %128, label %129, label %67

129:                                              ; preds = %80, %125, %60, %53, %4
  %130 = phi i64 [ %54, %53 ], [ -6148914691236517206, %4 ], [ %54, %60 ], [ %54, %125 ], [ %54, %80 ]
  %131 = tail call i8* @_Znwm(i64 112) #8, !noalias !4
  %132 = getelementptr inbounds i8, i8* %131, i64 16
  %133 = bitcast %"struct.ruy::PrepackedCache::Key"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 32, i1 false) #9, !noalias !4
  %134 = getelementptr inbounds i8, i8* %131, i64 48
  %135 = getelementptr inbounds %"struct.ruy::PrepackedCache::Entry", %"struct.ruy::PrepackedCache::Entry"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 64, i1 false) #9, !noalias !4
  %136 = getelementptr inbounds i8, i8* %131, i64 8
  %137 = bitcast i8* %136 to i64*
  store i64 %38, i64* %137, align 8, !noalias !4
  %138 = bitcast i8* %131 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %138, align 8, !noalias !4
  %139 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = add i64 %140, 1
  %142 = uitofp i64 %141 to float
  %143 = uitofp i64 %40 to float
  %144 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %145 = load float, float* %144, align 4
  %146 = fmul float %145, %143
  %147 = fcmp olt float %146, %142
  %148 = or i1 %41, %147
  br i1 %148, label %149, label %172

149:                                              ; preds = %129
  %150 = shl i64 %40, 1
  %151 = icmp ult i64 %40, 3
  %152 = tail call i64 @llvm.ctpop.i64(i64 %40) #9, !range !3
  %153 = icmp ugt i64 %152, 1
  %154 = or i1 %151, %153
  %155 = zext i1 %154 to i64
  %156 = or i64 %150, %155
  %157 = fdiv float %142, %145
  %158 = tail call float @llvm.ceil.f32(float %157) #9
  %159 = fptoui float %158 to i64
  %160 = icmp ult i64 %156, %159
  %161 = select i1 %160, i64 %159, i64 %156
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %161)
  %162 = load i64, i64* %39, align 8
  %163 = tail call i64 @llvm.ctpop.i64(i64 %162) #9, !range !3
  %164 = icmp ugt i64 %163, 1
  br i1 %164, label %168, label %165

165:                                              ; preds = %149
  %166 = add i64 %162, -1
  %167 = and i64 %166, %38
  br label %172

168:                                              ; preds = %149
  %169 = icmp ult i64 %38, %162
  br i1 %169, label %172, label %170

170:                                              ; preds = %168
  %171 = urem i64 %38, %162
  br label %172

172:                                              ; preds = %170, %168, %165, %129
  %173 = phi i64 [ %40, %129 ], [ %162, %165 ], [ %162, %168 ], [ %162, %170 ]
  %174 = phi i64 [ %130, %129 ], [ %167, %165 ], [ %38, %168 ], [ %171, %170 ]
  %175 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %175, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %174
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = icmp eq %"struct.std::__1::__hash_node_base"* %178, null
  br i1 %179, label %180, label %206

180:                                              ; preds = %172
  %181 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %182 = bitcast %"struct.std::__1::__hash_node_base"* %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = bitcast i8* %131 to i64*
  store i64 %183, i64* %184, align 8
  %185 = bitcast %"struct.std::__1::__hash_node_base"* %181 to i8**
  store i8* %131, i8** %185, align 8
  store %"struct.std::__1::__hash_node_base"* %181, %"struct.std::__1::__hash_node_base"** %177, align 8
  %186 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %138, align 8
  %187 = icmp eq %"struct.std::__1::__hash_node_base"* %186, null
  br i1 %187, label %213, label %188

188:                                              ; preds = %180
  %189 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %186, i64 1
  %190 = bitcast %"struct.std::__1::__hash_node_base"* %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = tail call i64 @llvm.ctpop.i64(i64 %173) #9, !range !3
  %193 = icmp ugt i64 %192, 1
  br i1 %193, label %197, label %194

194:                                              ; preds = %188
  %195 = add i64 %173, -1
  %196 = and i64 %191, %195
  br label %201

197:                                              ; preds = %188
  %198 = icmp ult i64 %191, %173
  br i1 %198, label %201, label %199

199:                                              ; preds = %197
  %200 = urem i64 %191, %173
  br label %201

201:                                              ; preds = %194, %197, %199
  %202 = phi i64 [ %196, %194 ], [ %200, %199 ], [ %191, %197 ]
  %203 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %175, align 8
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %203, i64 %202
  %205 = bitcast %"struct.std::__1::__hash_node_base"** %204 to i8**
  br label %211

206:                                              ; preds = %172
  %207 = bitcast %"struct.std::__1::__hash_node_base"* %178 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = bitcast i8* %131 to i64*
  store i64 %208, i64* %209, align 8
  %210 = bitcast %"struct.std::__1::__hash_node_base"* %178 to i8**
  br label %211

211:                                              ; preds = %201, %206
  %212 = phi i8** [ %210, %206 ], [ %205, %201 ]
  store i8* %131, i8** %212, align 8
  br label %213

213:                                              ; preds = %211, %180
  %214 = bitcast i8* %131 to %"struct.std::__1::__hash_node_base"*
  %215 = load i64, i64* %139, align 8
  %216 = add i64 %215, 1
  store i64 %216, i64* %139, align 8
  br label %217

217:                                              ; preds = %119, %213
  %218 = phi i8 [ 1, %213 ], [ 0, %119 ]
  %219 = phi %"struct.std::__1::__hash_node_base"* [ %214, %213 ], [ %68, %119 ]
  %220 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %219, 0
  %221 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %220, i8 %218, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %221
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #9
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #9, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #9
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #9, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #9
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %190, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #10
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #8
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !7

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %198, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %198, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %184
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %188, %184 ]
  %81 = phi i64 [ %71, %77 ], [ %186, %184 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %185, %184 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %184, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %115, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"struct.std::__1::__hash_value_type"*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %102, i64 0, i32 0, i32 0, i32 1, i32 1
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %105 = bitcast %"struct.std::__1::__hash_node_base"* %104 to i32*
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 4
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i32*
  %108 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %102, i64 0, i32 0, i32 0, i32 1, i32 3
  %109 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %102, i64 0, i32 0, i32 0, i32 1, i32 4, i32 1
  %110 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %102, i64 0, i32 0, i32 0, i32 1, i32 4, i32 2
  %111 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %102, i64 0, i32 0, i32 0, i32 1, i32 4, i32 0
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 5
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %112 to i32*
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i8**
  br label %116

115:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %184

116:                                              ; preds = %100, %165
  %117 = phi %"struct.std::__1::__hash_node_base"* [ %119, %165 ], [ %80, %100 ]
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base"* %119, null
  br i1 %120, label %171, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::__hash_value_type"*
  %124 = load i8*, i8** %114, align 8
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %126 = load i8*, i8** %125, align 8
  %127 = icmp eq i8* %124, %126
  br i1 %127, label %128, label %171

128:                                              ; preds = %121
  %129 = load i32, i32* %103, align 4
  %130 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %123, i64 0, i32 0, i32 0, i32 1, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %129, %131
  br i1 %132, label %133, label %171

133:                                              ; preds = %128
  %134 = load i32, i32* %105, align 4
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 3
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %134, %137
  br i1 %138, label %139, label %171

139:                                              ; preds = %133
  %140 = load i32, i32* %107, align 4
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 4
  %142 = bitcast %"struct.std::__1::__hash_node_base"* %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %140, %143
  br i1 %144, label %145, label %171

145:                                              ; preds = %139
  %146 = load i8, i8* %108, align 4
  %147 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %123, i64 0, i32 0, i32 0, i32 1, i32 3
  %148 = load i8, i8* %147, align 4
  %149 = icmp eq i8 %146, %148
  br i1 %149, label %150, label %171

150:                                              ; preds = %145
  %151 = load i8, i8* %109, align 1
  %152 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %123, i64 0, i32 0, i32 0, i32 1, i32 4, i32 1
  %153 = load i8, i8* %152, align 1
  %154 = icmp eq i8 %151, %153
  br i1 %154, label %155, label %171

155:                                              ; preds = %150
  %156 = load i8, i8* %110, align 1
  %157 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %123, i64 0, i32 0, i32 0, i32 1, i32 4, i32 2
  %158 = load i8, i8* %157, align 1
  %159 = icmp eq i8 %156, %158
  br i1 %159, label %160, label %171

160:                                              ; preds = %155
  %161 = load i8, i8* %111, align 1
  %162 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %123, i64 0, i32 0, i32 0, i32 1, i32 4, i32 0
  %163 = load i8, i8* %162, align 1
  %164 = icmp eq i8 %161, %163
  br i1 %164, label %165, label %171

165:                                              ; preds = %160
  %166 = load i32, i32* %113, align 8
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 5
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i32*
  %169 = load i32, i32* %168, align 8
  %170 = icmp eq i32 %166, %169
  br i1 %170, label %116, label %171

171:                                              ; preds = %128, %133, %139, %145, %150, %155, %121, %160, %116, %165
  %172 = ptrtoint %"struct.std::__1::__hash_node_base"* %119 to i64
  %173 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i64*
  %174 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %172, i64* %174, align 8
  %175 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %175, i64 %93
  %177 = bitcast %"struct.std::__1::__hash_node_base"** %176 to i64**
  %178 = load i64*, i64** %177, align 8
  %179 = load i64, i64* %178, align 8
  store i64 %179, i64* %173, align 8
  %180 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %180, i64 %93
  %182 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %181, align 8
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %182, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %183, align 8
  br label %184

184:                                              ; preds = %92, %171, %115
  %185 = phi %"struct.std::__1::__hash_node_base"* [ %80, %115 ], [ %82, %171 ], [ %80, %92 ]
  %186 = phi i64 [ %93, %115 ], [ %81, %171 ], [ %81, %92 ]
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %185, i64 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"* %188, null
  br i1 %189, label %198, label %79

190:                                              ; preds = %2
  %191 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %192 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %191, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %191, align 8
  %193 = icmp eq %"struct.std::__1::__hash_node_base"** %192, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %190
  %195 = bitcast %"struct.std::__1::__hash_node_base"** %192 to i8*
  tail call void @_ZdlPv(i8* %195) #8
  br label %196

196:                                              ; preds = %190, %194
  %197 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %197, align 8
  br label %198

198:                                              ; preds = %184, %70, %35, %196
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.17"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #9, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.4"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.17"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.17"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.7"** %98 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %30, %"class.std::__1::__compressed_pair.4"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.17"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRS4_JRS5_EEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3ruy14PrepackedCache3KeyENS3_5EntryEEENS_22__unordered_map_hasherIS4_S6_NS3_7KeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRS4_JRS5_EEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
