; ModuleID = '../../net/http/http_auth_handler_basic.cc'
source_filename = "../../net/http/http_auth_handler_basic.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::HttpAuthHandlerBasic::Factory" = type { %"class.net::HttpAuthHandlerFactory" }
%"class.net::HttpAuthHandlerFactory" = type { i32 (...)**, %"class.net::HttpAuthPreferences"* }
%"class.net::HttpAuthPreferences" = type { i32 (...)**, i8, i8, i8, i8, i32, i8, %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.net::URLSecurityManager"* }
%"class.net::URLSecurityManager" = type { i32 (...)** }
%"class.net::HttpAuthHandlerBasic" = type { %"class.net::HttpAuthHandler" }
%"class.net::HttpAuthHandler" = type { i32 (...)**, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, i32, i32, i32, %"class.net::NetLogWithSource", %"class.base::OnceCallback" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.9" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.4" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.11" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.net::HttpAuthChallengeTokenizer" = type { %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string" }
%"class.std::__1::__wrap_iter" = type { i8* }
%"class.net::SSLInfo" = type opaque
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.18" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.18" = type { %"class.absl::optional_internal::optional_data.19" }
%"class.absl::optional_internal::optional_data.19" = type { %"class.absl::optional_internal::optional_data_base.20" }
%"class.absl::optional_internal::optional_data_base.20" = type { %"class.absl::optional_internal::optional_data_dtor_base.21" }
%"class.absl::optional_internal::optional_data_dtor_base.21" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.net::HttpUtil::NameValuePairsIterator" = type <{ %"class.net::HttpUtil::ValuesIterator", i8, [7 x i8], %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string", i8, i8, i8, [5 x i8] }>
%"class.net::HttpUtil::ValuesIterator" = type <{ %"class.base::StringTokenizerT", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", i8, [7 x i8] }>
%"class.base::StringTokenizerT" = type <{ %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.net::AuthCredentials" = type { %"class.std::__1::basic_string.23", %"class.std::__1::basic_string.23" }
%"class.std::__1::basic_string.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.26 }
%union.anon.26 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.net::HttpRequestInfo" = type opaque
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.27 }
%struct.anon.27 = type { %"struct.std::__1::__padding.28", i8 }
%"struct.std::__1::__padding.28" = type { [1 x i8] }
%"class.net::HostResolver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.net::HttpAuthHandler"* }

$_ZN3net20HttpAuthHandlerBasicD0Ev = comdat any

@_ZN3net16kBasicAuthSchemeE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Basic \00", align 1
@_ZTVN3net20HttpAuthHandlerBasic7FactoryE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HttpAuthHandlerBasic::Factory"*)* @_ZN3net20HttpAuthHandlerBasic7FactoryD2Ev to i8*), i8* bitcast (void (%"class.net::HttpAuthHandlerBasic::Factory"*)* @_ZN3net20HttpAuthHandlerBasic7FactoryD0Ev to i8*), i8* bitcast (i32 (%"class.net::HttpAuthHandlerBasic::Factory"*, %"class.net::HttpAuthChallengeTokenizer"*, i32, %"class.net::SSLInfo"*, %"class.net::NetworkIsolationKey"*, %class.GURL*, i32, i32, %"class.net::NetLogWithSource"*, %"class.net::HostResolver"*, %"class.std::__1::unique_ptr.39"*)* @_ZN3net20HttpAuthHandlerBasic7Factory17CreateAuthHandlerEPNS_26HttpAuthChallengeTokenizerENS_8HttpAuth6TargetERKNS_7SSLInfoERKNS_19NetworkIsolationKeyERK4GURLNS_22HttpAuthHandlerFactory12CreateReasonEiRKNS_16NetLogWithSourceEPNS_12HostResolverEPNSt3__110unique_ptrINS_15HttpAuthHandlerENSM_14default_deleteISO_EEEE to i8*)] }, align 8
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@_ZTVN3net20HttpAuthHandlerBasicE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HttpAuthHandler"*)* @_ZN3net15HttpAuthHandlerD2Ev to i8*), i8* bitcast (void (%"class.net::HttpAuthHandlerBasic"*)* @_ZN3net20HttpAuthHandlerBasicD0Ev to i8*), i8* bitcast (i1 (%"class.net::HttpAuthHandler"*)* @_ZN3net15HttpAuthHandler13NeedsIdentityEv to i8*), i8* bitcast (i1 (%"class.net::HttpAuthHandler"*)* @_ZN3net15HttpAuthHandler24AllowsDefaultCredentialsEv to i8*), i8* bitcast (i1 (%"class.net::HttpAuthHandler"*)* @_ZN3net15HttpAuthHandler25AllowsExplicitCredentialsEv to i8*), i8* bitcast (i1 (%"class.net::HttpAuthHandlerBasic"*, %"class.net::HttpAuthChallengeTokenizer"*, %"class.net::SSLInfo"*, %"class.net::NetworkIsolationKey"*)* @_ZN3net20HttpAuthHandlerBasic4InitEPNS_26HttpAuthChallengeTokenizerERKNS_7SSLInfoERKNS_19NetworkIsolationKeyE to i8*), i8* bitcast (i32 (%"class.net::HttpAuthHandlerBasic"*, %"class.net::AuthCredentials"*, %"struct.net::HttpRequestInfo"*, %"class.base::OnceCallback"*, %"class.std::__1::basic_string"*)* @_ZN3net20HttpAuthHandlerBasic21GenerateAuthTokenImplEPKNS_15AuthCredentialsEPKNS_15HttpRequestInfoEN4base12OnceCallbackIFviEEEPNSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEE to i8*), i8* bitcast (i32 (%"class.net::HttpAuthHandlerBasic"*, %"class.net::HttpAuthChallengeTokenizer"*)* @_ZN3net20HttpAuthHandlerBasic26HandleAnotherChallengeImplEPNS_26HttpAuthChallengeTokenizerE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [42 x i8] c"../../net/http/http_auth_handler_basic.cc\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"realm\00", align 1
@_ZN3net14kCharsetLatin1E = external local_unnamed_addr constant i8*, align 8

@_ZN3net20HttpAuthHandlerBasic7FactoryC1Ev = hidden unnamed_addr alias void (%"class.net::HttpAuthHandlerBasic::Factory"*), void (%"class.net::HttpAuthHandlerBasic::Factory"*)* @_ZN3net20HttpAuthHandlerBasic7FactoryC2Ev
@_ZN3net20HttpAuthHandlerBasic7FactoryD1Ev = hidden unnamed_addr alias void (%"class.net::HttpAuthHandlerBasic::Factory"*), void (%"class.net::HttpAuthHandlerBasic::Factory"*)* @_ZN3net20HttpAuthHandlerBasic7FactoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net20HttpAuthHandlerBasic4InitEPNS_26HttpAuthChallengeTokenizerERKNS_7SSLInfoERKNS_19NetworkIsolationKeyE(%"class.net::HttpAuthHandlerBasic"*, %"class.net::HttpAuthChallengeTokenizer"*, %"class.net::SSLInfo"* nocapture readnone, %"class.net::NetworkIsolationKey"* nocapture readnone dereferenceable(184)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::HttpAuthHandlerBasic", %"class.net::HttpAuthHandlerBasic"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.net::HttpAuthHandlerBasic", %"class.net::HttpAuthHandlerBasic"* %0, i64 0, i32 0, i32 5
  store i32 1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.net::HttpAuthHandlerBasic", %"class.net::HttpAuthHandlerBasic"* %0, i64 0, i32 0, i32 7
  store i32 0, i32* %7, align 8
  %8 = tail call zeroext i1 @_ZN3net20HttpAuthHandlerBasic14ParseChallengeEPNS_26HttpAuthChallengeTokenizerE(%"class.net::HttpAuthHandlerBasic"* %0, %"class.net::HttpAuthChallengeTokenizer"* %1)
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net20HttpAuthHandlerBasic14ParseChallengeEPNS_26HttpAuthChallengeTokenizerE(%"class.net::HttpAuthHandlerBasic"*, %"class.net::HttpAuthChallengeTokenizer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.net::HttpAuthChallengeTokenizer", %"class.net::HttpAuthChallengeTokenizer"* %1, i64 0, i32 4
  %5 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net16kBasicAuthSchemeE, i64 0, i64 0)) #10
  %6 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.net::HttpAuthChallengeTokenizer", %"class.net::HttpAuthChallengeTokenizer"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp eq i64 %5, %13
  br i1 %14, label %15, label %58

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %4, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net16kBasicAuthSchemeE, i64 0, i64 0), i64 %5) #10
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %58

18:                                               ; preds = %15
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #10
  %22 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_110ParseRealmERKNS_26HttpAuthChallengeTokenizerEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.net::HttpAuthChallengeTokenizer"* dereferenceable(56) %1, %"class.std::__1::basic_string"* nonnull %3)
  br i1 %22, label %23, label %49

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.net::HttpAuthHandlerBasic", %"class.net::HttpAuthHandlerBasic"* %0, i64 0, i32 0, i32 2
  %25 = icmp eq %"class.std::__1::basic_string"* %24, %3
  br i1 %25, label %49, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %30, label %42, label %35

35:                                               ; preds = %26
  br i1 %34, label %38, label %36

36:                                               ; preds = %35
  %37 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* nonnull align 8 %19, i64 24, i1 false) #10
  br label %49

38:                                               ; preds = %35
  %39 = load i8*, i8** %20, align 8
  %40 = load i64, i64* %21, align 8
  %41 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %24, i8* %39, i64 %40) #10
  br label %49

42:                                               ; preds = %26
  %43 = load i8*, i8** %20, align 8
  %44 = load i64, i64* %21, align 8
  %45 = zext i8 %33 to i64
  %46 = select i1 %34, i8* %43, i8* %19
  %47 = select i1 %34, i64 %44, i64 %45
  %48 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %24, i8* %46, i64 %47) #10
  br label %49

49:                                               ; preds = %42, %38, %36, %23, %18
  %50 = phi i1 [ false, %18 ], [ true, %23 ], [ true, %36 ], [ true, %38 ], [ true, %42 ]
  %51 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %49
  %56 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %49, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  br label %58

58:                                               ; preds = %15, %2, %57
  %59 = phi i1 [ %50, %57 ], [ false, %15 ], [ false, %2 ]
  ret i1 %59
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net12_GLOBAL__N_110ParseRealmERKNS_26HttpAuthChallengeTokenizerEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.net::HttpAuthChallengeTokenizer"* dereferenceable(56), %"class.std::__1::basic_string"*) unnamed_addr #0 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.net::HttpUtil::NameValuePairsIterator", align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %1, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 42, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #10
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  br label %9

9:                                                ; preds = %2, %6
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %17, align 8
  br label %20

18:                                               ; preds = %9
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  store i8 0, i8* %19, align 1
  store i8 0, i8* %11, align 1
  br label %20

20:                                               ; preds = %14, %18
  %21 = bitcast %"class.net::HttpUtil::NameValuePairsIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %21) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 192, i1 false)
  call void @_ZNK3net26HttpAuthChallengeTokenizer11param_pairsEv(%"class.net::HttpUtil::NameValuePairsIterator"* nonnull sret %4, %"class.net::HttpAuthChallengeTokenizer"* %0) #10
  %22 = call zeroext i1 @_ZN3net8HttpUtil22NameValuePairsIterator7GetNextEv(%"class.net::HttpUtil::NameValuePairsIterator"* nonnull %4) #10
  br i1 %22, label %23, label %66

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %4, i64 0, i32 3, i32 0
  %25 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %4, i64 0, i32 4, i32 0
  %26 = bitcast i8** %25 to i64*
  %27 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %4, i64 0, i32 8
  %28 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %4, i64 0, i32 7
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %33 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %4, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %4, i64 0, i32 5, i32 0
  %35 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %4, i64 0, i32 6, i32 0
  %36 = bitcast i8** %35 to i64*
  %37 = load i8*, i8** @_ZN3net14kCharsetLatin1E, align 8
  br label %38

38:                                               ; preds = %23, %44
  %39 = load i8*, i8** %24, align 8
  %40 = load i64, i64* %26, align 8
  %41 = ptrtoint i8* %39 to i64
  %42 = sub i64 %40, %41
  %43 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %39, i64 %42, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5) #10
  br i1 %43, label %46, label %44

44:                                               ; preds = %38, %62
  %45 = call zeroext i1 @_ZN3net8HttpUtil22NameValuePairsIterator7GetNextEv(%"class.net::HttpUtil::NameValuePairsIterator"* nonnull %4) #10
  br i1 %45, label %38, label %66

46:                                               ; preds = %38
  %47 = load i8, i8* %27, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %46
  %50 = load i8, i8* %30, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i8*, i8** %31, align 8
  %53 = select i1 %51, i8* %52, i8* %32
  %54 = load i64, i64* %33, align 8
  %55 = zext i8 %50 to i64
  %56 = select i1 %51, i64 %54, i64 %55
  br label %62

57:                                               ; preds = %46
  %58 = load i8*, i8** %34, align 8
  %59 = load i64, i64* %36, align 8
  %60 = ptrtoint i8* %58 to i64
  %61 = sub i64 %59, %60
  br label %62

62:                                               ; preds = %49, %57
  %63 = phi i64 [ %61, %57 ], [ %56, %49 ]
  %64 = phi i8* [ %58, %57 ], [ %53, %49 ]
  %65 = call zeroext i1 @_ZN3net25ConvertToUtf8AndNormalizeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKcPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8* %64, i64 %63, i8* %37, %"class.std::__1::basic_string"* %1) #10
  br i1 %65, label %44, label %70

66:                                               ; preds = %44, %20
  %67 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %4, i64 0, i32 1
  %68 = load i8, i8* %67, align 8, !range !2
  %69 = icmp ne i8 %68, 0
  br label %70

70:                                               ; preds = %62, %66
  %71 = phi i1 [ %69, %66 ], [ false, %62 ]
  call void @_ZN3net8HttpUtil22NameValuePairsIteratorD1Ev(%"class.net::HttpUtil::NameValuePairsIterator"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %21) #10
  ret i1 %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net20HttpAuthHandlerBasic21GenerateAuthTokenImplEPKNS_15AuthCredentialsEPKNS_15HttpRequestInfoEN4base12OnceCallbackIFviEEEPNSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEE(%"class.net::HttpAuthHandlerBasic"* nocapture readnone, %"class.net::AuthCredentials"*, %"struct.net::HttpRequestInfo"* nocapture readnone, %"class.base::OnceCallback"* nocapture readnone, %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #10
  %15 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %17 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  %19 = bitcast %"class.net::AuthCredentials"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = bitcast %"class.net::AuthCredentials"* %1 to i16*
  %26 = select i1 %22, i16* %24, i16* %25
  %27 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %21 to i64
  %30 = select i1 %22, i64 %28, i64 %29
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i16* %26, i64 %30) #10
  %31 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #10, !noalias !3
  %32 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %32, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #10, !noalias !3
  %33 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %1, i64 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string.23"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string.23", %"class.std::__1::basic_string.23"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string.23"* %34 to i16*
  %42 = select i1 %38, i16* %40, i16* %41
  %43 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %37 to i64
  %46 = select i1 %38, i64 %44, i64 %45
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %11, i16* %42, i64 %46) #10
  %47 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1, !noalias !6
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8, !noalias !6
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8, !noalias !6
  %55 = zext i8 %49 to i64
  %56 = select i1 %50, i8* %52, i8* %33
  %57 = select i1 %50, i64 %54, i64 %55
  %58 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %9, i8* %56, i64 %57) #10, !noalias !6
  %59 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %59, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #10, !noalias !6
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %61 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = select i1 %64, i8* %66, i8* %16
  store i8* %67, i8** %60, align 8
  %68 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %63 to i64
  %72 = select i1 %64, i64 %70, i64 %71
  store i64 %72, i64* %68, align 8
  call void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7, %"class.std::__1::basic_string"* nonnull %6) #10
  %73 = load i8, i8* %62, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %5
  %76 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %76) #11
  br label %77

77:                                               ; preds = %5, %75
  %78 = load i8, i8* %48, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %77
  %81 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %77, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #10
  %83 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %89) #11
  br label %90

90:                                               ; preds = %82, %87
  %91 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #11
  br label %98

98:                                               ; preds = %90, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  %99 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #10
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #10
  %100 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #11
  br label %107

107:                                              ; preds = %104, %98
  %108 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* nonnull align 8 %99, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #10
  %109 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %107
  %114 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %114) #11
  br label %115

115:                                              ; preds = %107, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  ret i32 0
}

declare void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #2

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net20HttpAuthHandlerBasic26HandleAnotherChallengeImplEPNS_26HttpAuthChallengeTokenizerE(%"class.net::HttpAuthHandlerBasic"* nocapture readonly, %"class.net::HttpAuthChallengeTokenizer"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #10
  %6 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_110ParseRealmERKNS_26HttpAuthChallengeTokenizerEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.net::HttpAuthChallengeTokenizer"* dereferenceable(56) %1, %"class.std::__1::basic_string"* nonnull %3)
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  br label %61

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.net::HttpAuthHandlerBasic", %"class.net::HttpAuthHandlerBasic"* %0, i64 0, i32 0, i32 2
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.net::HttpAuthHandlerBasic", %"class.net::HttpAuthHandlerBasic"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i64, i64* %12, align 8
  %27 = zext i8 %24 to i64
  %28 = select i1 %25, i64 %26, i64 %27
  %29 = icmp eq i64 %21, %28
  br i1 %29, label %30, label %60

30:                                               ; preds = %11
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %34 = select i1 %17, i8* %32, i8* %33
  %35 = load i8*, i8** %5, align 8
  %36 = select i1 %25, i8* %35, i8* %4
  %37 = icmp eq i64 %21, 0
  br i1 %17, label %44, label %38

38:                                               ; preds = %30
  br i1 %37, label %61, label %39

39:                                               ; preds = %38
  %40 = ptrtoint i8* %32 to i64
  %41 = trunc i64 %40 to i8
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, %41
  br i1 %43, label %45, label %60

44:                                               ; preds = %30
  br i1 %37, label %61, label %57

45:                                               ; preds = %39, %52
  %46 = phi i64 [ %49, %52 ], [ %20, %39 ]
  %47 = phi i8* [ %50, %52 ], [ %33, %39 ]
  %48 = phi i8* [ %53, %52 ], [ %36, %39 ]
  %49 = add i64 %46, -1
  %50 = getelementptr inbounds i8, i8* %47, i64 1
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %61, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds i8, i8* %48, i64 1
  %54 = load i8, i8* %50, align 1
  %55 = load i8, i8* %53, align 1
  %56 = icmp eq i8 %54, %55
  br i1 %56, label %45, label %60

57:                                               ; preds = %44
  %58 = call i32 @bcmp(i8* %34, i8* %36, i64 %21) #10
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %52, %39, %57, %11
  br label %61

61:                                               ; preds = %45, %7, %57, %38, %44, %60
  %62 = phi i8 [ %10, %7 ], [ %24, %60 ], [ %24, %57 ], [ %24, %44 ], [ %24, %38 ], [ %24, %45 ]
  %63 = phi i32 [ 3, %7 ], [ 4, %60 ], [ 1, %57 ], [ 1, %44 ], [ 1, %38 ], [ 1, %45 ]
  %64 = icmp slt i8 %62, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %66) #11
  br label %67

67:                                               ; preds = %61, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret i32 %63
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net20HttpAuthHandlerBasic7FactoryC2Ev(%"class.net::HttpAuthHandlerBasic::Factory"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpAuthHandlerBasic::Factory", %"class.net::HttpAuthHandlerBasic::Factory"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.net::HttpAuthHandlerBasic::Factory", %"class.net::HttpAuthHandlerBasic::Factory"* %0, i64 0, i32 0, i32 1
  store %"class.net::HttpAuthPreferences"* null, %"class.net::HttpAuthPreferences"** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net20HttpAuthHandlerBasic7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net20HttpAuthHandlerBasic7FactoryD2Ev(%"class.net::HttpAuthHandlerBasic::Factory"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20HttpAuthHandlerBasic7FactoryD0Ev(%"class.net::HttpAuthHandlerBasic::Factory"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.net::HttpAuthHandlerBasic::Factory"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net20HttpAuthHandlerBasic7Factory17CreateAuthHandlerEPNS_26HttpAuthChallengeTokenizerENS_8HttpAuth6TargetERKNS_7SSLInfoERKNS_19NetworkIsolationKeyERK4GURLNS_22HttpAuthHandlerFactory12CreateReasonEiRKNS_16NetLogWithSourceEPNS_12HostResolverEPNSt3__110unique_ptrINS_15HttpAuthHandlerENSM_14default_deleteISO_EEEE(%"class.net::HttpAuthHandlerBasic::Factory"* nocapture readonly, %"class.net::HttpAuthChallengeTokenizer"*, i32, %"class.net::SSLInfo"*, %"class.net::NetworkIsolationKey"* dereferenceable(184), %class.GURL* dereferenceable(120), i32, i32, %"class.net::NetLogWithSource"* dereferenceable(24), %"class.net::HostResolver"* nocapture readnone, %"class.std::__1::unique_ptr.39"* nocapture) unnamed_addr #0 align 2 {
  %12 = getelementptr inbounds %"class.net::HttpAuthHandlerBasic::Factory", %"class.net::HttpAuthHandlerBasic::Factory"* %0, i64 0, i32 0, i32 1
  %13 = load %"class.net::HttpAuthPreferences"*, %"class.net::HttpAuthPreferences"** %12, align 8
  %14 = icmp eq %"class.net::HttpAuthPreferences"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.net::HttpAuthPreferences", %"class.net::HttpAuthPreferences"* %13, i64 0, i32 4
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #10
  %21 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i64 %20) #10
  br i1 %21, label %40, label %22

22:                                               ; preds = %15, %11, %19
  %23 = tail call i8* @_Znwm(i64 232) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 0, i64 232, i1 false)
  %24 = bitcast i8* %23 to %"class.net::HttpAuthHandler"*
  tail call void @_ZN3net15HttpAuthHandlerC2Ev(%"class.net::HttpAuthHandler"* nonnull %24) #10
  %25 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3net20HttpAuthHandlerBasicE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = ptrtoint i8* %23 to i64
  %27 = tail call zeroext i1 @_ZN3net15HttpAuthHandler17InitFromChallengeEPNS_26HttpAuthChallengeTokenizerENS_8HttpAuth6TargetERKNS_7SSLInfoERKNS_19NetworkIsolationKeyERK4GURLRKNS_16NetLogWithSourceE(%"class.net::HttpAuthHandler"* nonnull %24, %"class.net::HttpAuthChallengeTokenizer"* %1, i32 %2, %"class.net::SSLInfo"* %3, %"class.net::NetworkIsolationKey"* dereferenceable(184) %4, %class.GURL* dereferenceable(120) %5, %"class.net::NetLogWithSource"* dereferenceable(24) %8) #10
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::unique_ptr.39"* %10 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %26, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %40, label %32

32:                                               ; preds = %22, %28
  %33 = phi i32 [ 0, %28 ], [ -320, %22 ]
  %34 = phi i64 [ %30, %28 ], [ %26, %22 ]
  %35 = inttoptr i64 %34 to %"class.net::HttpAuthHandler"*
  %36 = inttoptr i64 %34 to void (%"class.net::HttpAuthHandler"*)***
  %37 = load void (%"class.net::HttpAuthHandler"*)**, void (%"class.net::HttpAuthHandler"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.net::HttpAuthHandler"*)*, void (%"class.net::HttpAuthHandler"*)** %37, i64 1
  %39 = load void (%"class.net::HttpAuthHandler"*)*, void (%"class.net::HttpAuthHandler"*)** %38, align 8
  tail call void %39(%"class.net::HttpAuthHandler"* nonnull %35) #10
  br label %40

40:                                               ; preds = %32, %28, %19
  %41 = phi i32 [ -339, %19 ], [ 0, %28 ], [ %33, %32 ]
  ret i32 %41
}

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN3net15HttpAuthHandler17InitFromChallengeEPNS_26HttpAuthChallengeTokenizerENS_8HttpAuth6TargetERKNS_7SSLInfoERKNS_19NetworkIsolationKeyERK4GURLRKNS_16NetLogWithSourceE(%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*, i32, %"class.net::SSLInfo"*, %"class.net::NetworkIsolationKey"* dereferenceable(184), %class.GURL* dereferenceable(120), %"class.net::NetLogWithSource"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net15HttpAuthHandlerD2Ev(%"class.net::HttpAuthHandler"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net20HttpAuthHandlerBasicD0Ev(%"class.net::HttpAuthHandlerBasic"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HttpAuthHandlerBasic", %"class.net::HttpAuthHandlerBasic"* %0, i64 0, i32 0
  tail call void @_ZN3net15HttpAuthHandlerD2Ev(%"class.net::HttpAuthHandler"* %2) #10
  %3 = bitcast %"class.net::HttpAuthHandlerBasic"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

declare zeroext i1 @_ZN3net15HttpAuthHandler13NeedsIdentityEv(%"class.net::HttpAuthHandler"*) unnamed_addr #2

declare zeroext i1 @_ZN3net15HttpAuthHandler24AllowsDefaultCredentialsEv(%"class.net::HttpAuthHandler"*) unnamed_addr #2

declare zeroext i1 @_ZN3net15HttpAuthHandler25AllowsExplicitCredentialsEv(%"class.net::HttpAuthHandler"*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare void @_ZNK3net26HttpAuthChallengeTokenizer11param_pairsEv(%"class.net::HttpUtil::NameValuePairsIterator"* sret, %"class.net::HttpAuthChallengeTokenizer"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net8HttpUtil22NameValuePairsIterator7GetNextEv(%"class.net::HttpUtil::NameValuePairsIterator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3net25ConvertToUtf8AndNormalizeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKcPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8*, i64, i8*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net8HttpUtil22NameValuePairsIteratorD1Ev(%"class.net::HttpUtil::NameValuePairsIterator"*) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZN3net15HttpAuthHandlerC2Ev(%"class.net::HttpAuthHandler"*) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
