; ModuleID = '../../third_party/pdfium/core/fpdfdoc/cpdf_icon.cpp'
source_filename = "../../third_party/pdfium/core/fpdfdoc/cpdf_icon.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_Icon = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr.0", %"class.std::__1::unique_ptr.17", %"class.fxcrt::RetainPtr.21" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.4" }
%"class.fxcrt::RetainPtr.4" = type { %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.38", %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.53", [4 x i8] }>
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i8* }
%"class.fxcrt::RetainPtr.21" = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%class.CFX_STemplate = type { float, float }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.29" }
%"class.fxcrt::RetainPtr.29" = type { %"class.std::__1::unique_ptr.30" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CFX_Matrix = type { float, float, float, float, float, float }

@.str = private unnamed_addr constant [5 x i8] c"BBox\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Matrix\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"Name\00", align 1

@_ZN9CPDF_IconC1EP11CPDF_Stream = hidden unnamed_addr alias void (%class.CPDF_Icon*, %class.CPDF_Stream*), void (%class.CPDF_Icon*, %class.CPDF_Stream*)* @_ZN9CPDF_IconC2EP11CPDF_Stream
@_ZN9CPDF_IconD1Ev = hidden unnamed_addr alias void (%class.CPDF_Icon*), void (%class.CPDF_Icon*)* @_ZN9CPDF_IconD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9CPDF_IconC2EP11CPDF_Stream(%class.CPDF_Icon* nocapture, %class.CPDF_Stream*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.CPDF_Stream* %1 to i64
  %4 = bitcast %class.CPDF_Icon* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = icmp eq %class.CPDF_Stream* %1, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, 1
  store i64 %9, i64* %7, align 8
  br label %10

10:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_IconD2Ev(%class.CPDF_Icon* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Icon, %class.CPDF_Icon* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_Stream*, %class.CPDF_Stream** %2, align 8
  store %class.CPDF_Stream* null, %class.CPDF_Stream** %2, align 8
  %4 = icmp eq %class.CPDF_Stream* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %3, i64 0, i32 0, i32 0
  %12 = bitcast %class.CPDF_Stream* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #5
  br label %16

16:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9CPDF_Icon12GetImageSizeEv(%class.CFX_STemplate* noalias nocapture sret, %class.CPDF_Icon* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = getelementptr inbounds %class.CPDF_Icon, %class.CPDF_Icon* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_Stream*, %class.CPDF_Stream** %4, align 8
  %6 = tail call %class.CPDF_Dictionary* @_ZN11CPDF_Stream7GetDictEv(%class.CPDF_Stream* %5) #5
  %7 = icmp eq %class.CPDF_Dictionary* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #5
  %10 = call { <2 x float>, <2 x float> } @_ZNK15CPDF_Dictionary10GetRectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %6, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #5
  %11 = extractvalue { <2 x float>, <2 x float> } %10, 0
  %12 = extractvalue { <2 x float>, <2 x float> } %10, 1
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  %13 = fsub <2 x float> %12, %11
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi <2 x float> [ %13, %8 ], [ zeroinitializer, %2 ]
  %16 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %0, i64 0, i32 0
  %17 = extractelement <2 x float> %15, i32 0
  store float %17, float* %16, align 4
  %18 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %0, i64 0, i32 1
  %19 = extractelement <2 x float> %15, i32 1
  store float %19, float* %18, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %class.CPDF_Dictionary* @_ZN11CPDF_Stream7GetDictEv(%class.CPDF_Stream*) unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZNK15CPDF_Dictionary10GetRectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9CPDF_Icon14GetImageMatrixEv(%class.CFX_Matrix* noalias sret, %class.CPDF_Icon* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = getelementptr inbounds %class.CPDF_Icon, %class.CPDF_Icon* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_Stream*, %class.CPDF_Stream** %4, align 8
  %6 = tail call %class.CPDF_Dictionary* @_ZN11CPDF_Stream7GetDictEv(%class.CPDF_Stream* %5) #5
  %7 = icmp eq %class.CPDF_Dictionary* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = bitcast %class.CFX_Matrix* %0 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %9, align 4
  %10 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 4
  store float 0.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 5
  store float 0.000000e+00, float* %11, align 4
  br label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #5
  call void @_ZNK15CPDF_Dictionary12GetMatrixForERKN5fxcrt10ByteStringE(%class.CFX_Matrix* sret %0, %class.CPDF_Dictionary* nonnull %6, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #5
  br label %14

14:                                               ; preds = %12, %8
  ret void
}

declare void @_ZNK15CPDF_Dictionary12GetMatrixForERKN5fxcrt10ByteStringE(%class.CFX_Matrix* sret, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9CPDF_Icon13GetImageAliasEv(%"class.fxcrt::ByteString"* noalias sret, %class.CPDF_Icon* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = getelementptr inbounds %class.CPDF_Icon, %class.CPDF_Icon* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_Stream*, %class.CPDF_Stream** %4, align 8
  %6 = tail call %class.CPDF_Dictionary* @_ZN11CPDF_Stream7GetDictEv(%class.CPDF_Stream* %5) #5
  %7 = icmp eq %class.CPDF_Dictionary* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %0) #5
  br label %11

9:                                                ; preds = %2
  %10 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #5
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* sret %0, %class.CPDF_Dictionary* nonnull %6, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #5
  br label %11

11:                                               ; preds = %9, %8
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

declare void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* sret, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
