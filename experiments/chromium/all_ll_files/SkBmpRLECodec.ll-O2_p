; ModuleID = '../../third_party/skia/src/codec/SkBmpRLECodec.cpp'
source_filename = "../../third_party/skia/src/codec/SkBmpRLECodec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkBmpRLECodec = type <{ %class.SkBmpCodec, %class.sk_sp.22, i32, i32, i32, [4096 x i8], [4 x i8], i64, i32, i32, %"class.std::__1::unique_ptr.23", i32, [4 x i8] }>
%class.SkBmpCodec = type { %class.SkCodec.base, i16, i32, i64, %"class.std::__1::unique_ptr.16" }
%class.SkCodec.base = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.3", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8 }>
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.SkStream* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.9, i32, i32 }
%class.sk_sp.9 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.10, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.10 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.0, [8 x i8] }
%struct.anon.0 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i32* }
%class.sk_sp.22 = type { %class.SkColorTable* }
%class.SkColorTable = type <{ %class.SkRefCnt.base, [4 x i8], i32*, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.SkSampler* }
%class.SkSampler = type <{ i32 (...)**, i32, [4 x i8] }>
%class.SkStream = type { i32 (...)** }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkCodec = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.3", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8, [6 x i8] }>
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.41", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.41" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.42", %class.sk_sp, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.42" = type { [4 x %class.SkPixmap] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkCodec::FrameInfo" = type { i32, i32, i8, i32, i8, i32, i32, %struct.SkIRect }
%class.SkFrameHolder = type opaque
%class.SkBmpRLESampler = type { %class.SkSampler.base, %class.SkBmpRLECodec* }
%class.SkSampler.base = type <{ i32 (...)**, i32 }>

$_ZN13SkBmpRLECodecD2Ev = comdat any

$_ZN13SkBmpRLECodecD0Ev = comdat any

$_ZNK7SkCodec21onGetScaledDimensionsEf = comdat any

$_ZN7SkCodec21onDimensionsSupportedERK7SkISize = comdat any

$_ZNK10SkBmpCodec18onGetEncodedFormatEv = comdat any

$_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ = comdat any

$_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps = comdat any

$_ZNK7SkCodec16onGetValidSubsetEP7SkIRect = comdat any

$_ZNK10SkBmpCodec18onGetScanlineOrderEv = comdat any

$_ZNK7SkCodec14usesColorXformEv = comdat any

$_ZN7SkCodec15onGetFrameCountEv = comdat any

$_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE = comdat any

$_ZN7SkCodec20onGetRepetitionCountEv = comdat any

$_ZNK7SkCodec14getFrameHolderEv = comdat any

$_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE = comdat any

$_ZN7SkCodec19onIncrementalDecodeEPi = comdat any

$_ZNK10SkBmpCodec7onInIcoEv = comdat any

$_ZNK15SkBmpRLESampler9fillWidthEv = comdat any

$_ZN9SkSamplerD2Ev = comdat any

$_ZN15SkBmpRLESamplerD0Ev = comdat any

$_ZN15SkBmpRLESampler12onSetSampleXEi = comdat any

$_ZTV15SkBmpRLESampler = comdat any

@_ZTV13SkBmpRLECodec = hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBmpRLECodec*)* @_ZN13SkBmpRLECodecD2Ev to i8*), i8* bitcast (void (%class.SkBmpRLECodec*)* @_ZN13SkBmpRLECodecD0Ev to i8*), i8* bitcast (i64 (%class.SkCodec*, float)* @_ZNK7SkCodec21onGetScaledDimensionsEf to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkISize*)* @_ZN7SkCodec21onDimensionsSupportedERK7SkISize to i8*), i8* bitcast (i32 (%class.SkBmpCodec*)* @_ZNK10SkBmpCodec18onGetEncodedFormatEv to i8*), i8* bitcast (i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)* @_ZN13SkBmpRLECodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi to i8*), i8* bitcast (i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)* @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkIRect*)* @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkBmpCodec*)* @_ZN10SkBmpCodec8onRewindEv to i8*), i8* bitcast (i32 (%class.SkBmpCodec*)* @_ZNK10SkBmpCodec18onGetScanlineOrderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, i32)* @_ZNK7SkCodec16onOutputScanlineEi to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)* @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb to i8*), i8* bitcast (i1 (%class.SkCodec*)* @_ZNK7SkCodec14usesColorXformEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec15onGetFrameCountEv to i8*), i8* bitcast (i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)* @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec20onGetRepetitionCountEv to i8*), i8* bitcast (%class.SkFrameHolder* (%class.SkCodec*)* @_ZNK7SkCodec14getFrameHolderEv to i8*), i8* bitcast (i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN10SkBmpCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, i32*)* @_ZN7SkCodec19onIncrementalDecodeEPi to i8*), i8* bitcast (i1 (%class.SkBmpCodec*, i32)* @_ZN10SkBmpCodec15onSkipScanlinesEi to i8*), i8* bitcast (i32 (%class.SkBmpCodec*, i8*, i32, i64)* @_ZN10SkBmpCodec14onGetScanlinesEPvim to i8*), i8* bitcast (%class.SkSampler* (%class.SkBmpRLECodec*, i1)* @_ZN13SkBmpRLECodec10getSamplerEb to i8*), i8* bitcast (i1 (%class.SkBmpCodec*)* @_ZNK10SkBmpCodec7onInIcoEv to i8*), i8* bitcast (i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN13SkBmpRLECodec17onPrepareToDecodeERK11SkImageInfoRKN7SkCodec7OptionsE to i8*), i8* bitcast (i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN13SkBmpRLECodec10decodeRowsERK11SkImageInfoPvmRKN7SkCodec7OptionsE to i8*), i8* bitcast (i1 (%class.SkBmpRLECodec*, i32)* @_ZN13SkBmpRLECodec8skipRowsEi to i8*)] }, align 8
@_ZTV10SkBmpCodec = external unnamed_addr constant { [30 x i8*] }, align 8
@_ZTV15SkBmpRLESampler = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%class.SkBmpRLESampler*)* @_ZNK15SkBmpRLESampler9fillWidthEv to i8*), i8* bitcast (void (%class.SkSampler*)* @_ZN9SkSamplerD2Ev to i8*), i8* bitcast (void (%class.SkBmpRLESampler*)* @_ZN15SkBmpRLESamplerD0Ev to i8*), i8* bitcast (i32 (%class.SkBmpRLESampler*, i32)* @_ZN15SkBmpRLESampler12onSetSampleXEi to i8*)] }, comdat, align 8

@_ZN13SkBmpRLECodecC1EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtjjjN7SkCodec15SkScanlineOrderE = hidden unnamed_addr alias void (%class.SkBmpRLECodec*, %struct.SkEncodedInfo*, %class.SkStream*, i16, i32, i32, i32, i32), void (%class.SkBmpRLECodec*, %struct.SkEncodedInfo*, %class.SkStream*, i16, i32, i32, i32, i32)* @_ZN13SkBmpRLECodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtjjjN7SkCodec15SkScanlineOrderE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkBmpRLECodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtjjjN7SkCodec15SkScanlineOrderE(%class.SkBmpRLECodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, i16 zeroext, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0
  tail call void @_ZN10SkBmpCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtN7SkCodec15SkScanlineOrderE(%class.SkBmpCodec* %9, %struct.SkEncodedInfo* dereferenceable(32) %1, %class.SkStream* %2, i16 zeroext %3, i32 %7) #11
  %10 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV13SkBmpRLECodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 1, i32 0
  store %class.SkColorTable* null, %class.SkColorTable** %11, align 8
  %12 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 2
  store i32 %4, i32* %12, align 8
  %13 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 3
  store i32 %5, i32* %13, align 4
  %14 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 4
  store i32 %6, i32* %14, align 8
  %15 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 7
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 8
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 9
  store i32 1, i32* %17, align 4
  %18 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 10
  %19 = bitcast %"class.std::__1::unique_ptr.23"* %18 to i64*
  store i64 0, i64* %19, align 8
  ret void
}

declare void @_ZN10SkBmpCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtN7SkCodec15SkScanlineOrderE(%class.SkBmpCodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, i16 zeroext, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkBmpRLECodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi(%class.SkBmpRLECodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* dereferenceable(24), i32* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 1
  %8 = load %struct.SkIRect*, %struct.SkIRect** %7, align 8
  %9 = icmp eq %struct.SkIRect* %8, null
  br i1 %9, label %10, label %24

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0
  %12 = tail call i32 @_ZN10SkBmpCodec15prepareToDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkBmpCodec* %11, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* dereferenceable(24) %4) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = bitcast %class.SkBmpRLECodec* %0 to i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)***
  %16 = load i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)**, i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*, i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)** %16, i64 26
  %18 = load i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*, i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)** %17, align 8
  %19 = tail call i32 %18(%class.SkBmpRLECodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, %"struct.SkCodec::Options"* dereferenceable(24) %4) #11
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %14
  store i32 %21, i32* %5, align 4
  br label %24

24:                                               ; preds = %10, %14, %23, %6
  %25 = phi i32 [ 9, %6 ], [ %12, %10 ], [ 1, %23 ], [ 0, %14 ]
  ret i32 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN10SkBmpCodec15prepareToDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkBmpCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkBmpRLECodec16createColorTableE11SkColorType(%class.SkBmpRLECodec* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca [256 x i32], align 16
  %4 = bitcast [256 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 1024, i1 false)
  %5 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 1
  %6 = load i16, i16* %5, align 2
  %7 = icmp ult i16 %6, 9
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  br label %154

11:                                               ; preds = %2
  %12 = zext i16 %6 to i32
  %13 = shl i32 1, %12
  %14 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = icmp ult i32 %16, %13
  %18 = select i1 %17, i32 %15, i32 %13
  %19 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = mul i32 %18, %20
  %22 = zext i32 %21 to i64
  %23 = tail call i8* @_Znam(i64 %22) #12
  %24 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %class.SkStream*, %class.SkStream** %24, align 8
  %26 = bitcast %class.SkStream* %25 to i64 (%class.SkStream*, i8*, i64)***
  %27 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %26, align 8
  %28 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %27, i64 2
  %29 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %28, align 8
  %30 = tail call i64 %29(%class.SkStream* %25, i8* nonnull %23, i64 %22) #11
  %31 = icmp eq i64 %30, %22
  br i1 %31, label %32, label %149

32:                                               ; preds = %11
  %33 = icmp eq i32 %1, 4
  %34 = select i1 %33, i32 (i32, i32, i32, i32)* @_ZL18SkPackARGB_as_RGBAjjjj, i32 (i32, i32, i32, i32)* @_ZL18SkPackARGB_as_BGRAjjjj
  %35 = icmp eq i32 %18, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = zext i32 %18 to i64
  br label %103

38:                                               ; preds = %103
  %39 = icmp ult i32 %18, %13
  br i1 %39, label %40, label %131

40:                                               ; preds = %32, %38
  %41 = phi i32 [ %18, %38 ], [ 0, %32 ]
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = sub nsw i64 %43, %42
  %45 = icmp ult i64 %44, 8
  br i1 %45, label %46, label %48

46:                                               ; preds = %101, %40
  %47 = phi i64 [ %42, %40 ], [ %50, %101 ]
  br label %126

48:                                               ; preds = %40
  %49 = and i64 %44, -8
  %50 = add nsw i64 %49, %42
  %51 = add nsw i64 %49, -8
  %52 = lshr exact i64 %51, 3
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 3
  %55 = icmp ult i64 %51, 24
  br i1 %55, label %87, label %56

56:                                               ; preds = %48
  %57 = sub nsw i64 %53, %54
  br label %58

58:                                               ; preds = %58, %56
  %59 = phi i64 [ 0, %56 ], [ %84, %58 ]
  %60 = phi i64 [ %57, %56 ], [ %85, %58 ]
  %61 = add i64 %59, %42
  %62 = getelementptr inbounds [256 x i32], [256 x i32]* %3, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>, <4 x i32>* %63, align 4
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>, <4 x i32>* %65, align 4
  %66 = or i64 %59, 8
  %67 = add i64 %66, %42
  %68 = getelementptr inbounds [256 x i32], [256 x i32]* %3, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>, <4 x i32>* %71, align 4
  %72 = or i64 %59, 16
  %73 = add i64 %72, %42
  %74 = getelementptr inbounds [256 x i32], [256 x i32]* %3, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>, <4 x i32>* %75, align 4
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>, <4 x i32>* %77, align 4
  %78 = or i64 %59, 24
  %79 = add i64 %78, %42
  %80 = getelementptr inbounds [256 x i32], [256 x i32]* %3, i64 0, i64 %79
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>, <4 x i32>* %81, align 4
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>, <4 x i32>* %83, align 4
  %84 = add i64 %59, 32
  %85 = add i64 %60, -4
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %58, !llvm.loop !2

87:                                               ; preds = %58, %48
  %88 = phi i64 [ 0, %48 ], [ %84, %58 ]
  %89 = icmp eq i64 %54, 0
  br i1 %89, label %101, label %90

90:                                               ; preds = %87, %90
  %91 = phi i64 [ %98, %90 ], [ %88, %87 ]
  %92 = phi i64 [ %99, %90 ], [ %54, %87 ]
  %93 = add i64 %91, %42
  %94 = getelementptr inbounds [256 x i32], [256 x i32]* %3, i64 0, i64 %93
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>, <4 x i32>* %95, align 4
  %96 = getelementptr inbounds i32, i32* %94, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>, <4 x i32>* %97, align 4
  %98 = add i64 %91, 8
  %99 = add i64 %92, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %90, !llvm.loop !4

101:                                              ; preds = %90, %87
  %102 = icmp eq i64 %44, %49
  br i1 %102, label %131, label %46

103:                                              ; preds = %103, %36
  %104 = phi i64 [ 0, %36 ], [ %124, %103 ]
  %105 = load i32, i32* %19, align 4
  %106 = trunc i64 %104 to i32
  %107 = mul i32 %105, %106
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %23, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = add i32 %107, 1
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %23, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = add i32 %107, 2
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds i8, i8* %23, i64 %116
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = zext i8 %114 to i32
  %121 = zext i8 %110 to i32
  %122 = tail call i32 %34(i32 255, i32 %119, i32 %120, i32 %121) #11, !callees !6
  %123 = getelementptr inbounds [256 x i32], [256 x i32]* %3, i64 0, i64 %104
  store i32 %122, i32* %123, align 4
  %124 = add nuw nsw i64 %104, 1
  %125 = icmp eq i64 %124, %37
  br i1 %125, label %38, label %103

126:                                              ; preds = %46, %126
  %127 = phi i64 [ %129, %126 ], [ %47, %46 ]
  %128 = getelementptr inbounds [256 x i32], [256 x i32]* %3, i64 0, i64 %127
  store i32 -16777216, i32* %128, align 4
  %129 = add nuw nsw i64 %127, 1
  %130 = icmp eq i64 %129, %43
  br i1 %130, label %131, label %126, !llvm.loop !7

131:                                              ; preds = %126, %101, %38
  %132 = tail call i8* @_Znwm(i64 32) #12
  %133 = bitcast i8* %132 to %class.SkColorTable*
  %134 = getelementptr inbounds [256 x i32], [256 x i32]* %3, i64 0, i64 0
  call void @_ZN12SkColorTableC1EPKji(%class.SkColorTable* nonnull %133, i32* nonnull %134, i32 %13) #11
  %135 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 1, i32 0
  %136 = load %class.SkColorTable*, %class.SkColorTable** %135, align 8
  %137 = bitcast %class.SkColorTable** %135 to i8**
  store i8* %132, i8** %137, align 8
  %138 = icmp eq %class.SkColorTable* %136, null
  br i1 %138, label %150, label %139

139:                                              ; preds = %131
  %140 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %136, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw add i32* %140, i32 -1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %150

143:                                              ; preds = %139
  %144 = bitcast %class.SkColorTable* %136 to %class.SkRefCntBase*
  %145 = bitcast %class.SkColorTable* %136 to void (%class.SkRefCntBase*)***
  %146 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %145, align 8
  %147 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %146, i64 2
  %148 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %147, align 8
  call void %148(%class.SkRefCntBase* nonnull %144) #11
  br label %150

149:                                              ; preds = %11
  tail call void @_ZdaPv(i8* nonnull %23) #12
  br label %171

150:                                              ; preds = %143, %139, %131
  call void @_ZdaPv(i8* nonnull %23) #12
  %151 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 4
  %152 = load i32, i32* %151, align 8
  %153 = icmp ult i32 %152, %21
  br i1 %153, label %171, label %154

154:                                              ; preds = %8, %150
  %155 = phi i32 [ %10, %8 ], [ %152, %150 ]
  %156 = phi i32* [ %9, %8 ], [ %151, %150 ]
  %157 = phi i32 [ 0, %8 ], [ %21, %150 ]
  %158 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %159 = load %class.SkStream*, %class.SkStream** %158, align 8
  %160 = sub i32 %155, %157
  %161 = zext i32 %160 to i64
  %162 = bitcast %class.SkStream* %159 to i64 (%class.SkStream*, i8*, i64)***
  %163 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %162, align 8
  %164 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %163, i64 2
  %165 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %164, align 8
  %166 = call i64 %165(%class.SkStream* %159, i8* null, i64 %161) #11
  %167 = load i32, i32* %156, align 8
  %168 = sub i32 %167, %157
  %169 = zext i32 %168 to i64
  %170 = icmp eq i64 %166, %169
  br label %171

171:                                              ; preds = %154, %150, %149
  %172 = phi i1 [ false, %149 ], [ false, %150 ], [ %170, %154 ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %4) #11
  ret i1 %172
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN12SkColorTableC1EPKji(%class.SkColorTable*, i32*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkBmpRLECodec22initializeStreamBufferEv(%class.SkBmpRLECodec*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %class.SkStream*, %class.SkStream** %2, align 8
  %4 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 0
  %5 = bitcast %class.SkStream* %3 to i64 (%class.SkStream*, i8*, i64)***
  %6 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %6, i64 2
  %8 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %7, align 8
  %9 = tail call i64 %8(%class.SkStream* %3, i8* %4, i64 4096) #11
  %10 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 7
  store i64 %9, i64* %10, align 8
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 8
  store i32 0, i32* %13, align 8
  br label %14

14:                                               ; preds = %1, %12
  %15 = phi i1 [ true, %12 ], [ false, %1 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN13SkBmpRLECodec16checkForMoreDataEv(%class.SkBmpRLECodec*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 7
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 8
  %6 = zext i32 %5 to i64
  %7 = sub i64 %3, %6
  %8 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 0
  %9 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %6
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %9, i64 %7, i1 false)
  %10 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %7
  %11 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %class.SkStream*, %class.SkStream** %11, align 8
  %13 = load i32, i32* %4, align 8
  %14 = zext i32 %13 to i64
  %15 = bitcast %class.SkStream* %12 to i64 (%class.SkStream*, i8*, i64)***
  %16 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %15, align 8
  %17 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %16, i64 2
  %18 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %17, align 8
  %19 = tail call i64 %18(%class.SkStream* %12, i8* %10, i64 %14) #11
  store i32 0, i32* %4, align 8
  %20 = add i64 %19, %7
  store i64 %20, i64* %2, align 8
  ret i64 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkBmpRLECodec8setPixelEPvmRK11SkImageInfojjh(%class.SkBmpRLECodec*, i8*, i64, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i32, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %8 = icmp eq i8* %1, null
  br i1 %8, label %71, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 4
  %12 = sdiv i32 %11, 2
  %13 = icmp sgt i32 %12, %4
  br i1 %13, label %71, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sdiv i32 %4, %11
  %18 = icmp slt i32 %17, %16
  br i1 %18, label %19, label %71

19:                                               ; preds = %14
  %20 = sub nsw i32 %4, %12
  %21 = srem i32 %20, %11
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %71

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0
  %25 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = tail call i32 @_ZNK10SkBmpCodec9getDstRowEii(%class.SkBmpCodec* %24, i32 %5, i32 %26) #11
  %28 = load i32, i32* %10, align 4
  %29 = sdiv i32 %4, %28
  %30 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  switch i32 %31, label %71 [
    i32 4, label %32
    i32 6, label %32
    i32 2, label %47
  ]

32:                                               ; preds = %23, %23
  %33 = trunc i64 %2 to i32
  %34 = mul i32 %27, %33
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  %37 = bitcast i8* %36 to i32*
  %38 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 1, i32 0
  %39 = load %class.SkColorTable*, %class.SkColorTable** %38, align 8
  %40 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %39, i64 0, i32 2
  %41 = load i32*, i32** %40, align 8
  %42 = zext i8 %6 to i64
  %43 = getelementptr inbounds i32, i32* %41, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %29 to i64
  %46 = getelementptr inbounds i32, i32* %37, i64 %45
  store i32 %44, i32* %46, align 4
  br label %71

47:                                               ; preds = %23
  %48 = trunc i64 %2 to i32
  %49 = mul i32 %27, %48
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %1, i64 %50
  %52 = bitcast i8* %51 to i16*
  %53 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 1, i32 0
  %54 = load %class.SkColorTable*, %class.SkColorTable** %53, align 8
  %55 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %54, i64 0, i32 2
  %56 = load i32*, i32** %55, align 8
  %57 = zext i8 %6 to i64
  %58 = getelementptr inbounds i32, i32* %56, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = lshr i32 %59, 8
  %61 = and i32 %60, 63488
  %62 = lshr i32 %59, 5
  %63 = and i32 %62, 2016
  %64 = lshr i32 %59, 3
  %65 = and i32 %64, 31
  %66 = or i32 %61, %63
  %67 = or i32 %66, %65
  %68 = trunc i32 %67 to i16
  %69 = sext i32 %29 to i64
  %70 = getelementptr inbounds i16, i16* %52, i64 %69
  store i16 %68, i16* %70, align 2
  br label %71

71:                                               ; preds = %9, %14, %32, %47, %23, %7, %19
  ret void
}

declare i32 @_ZNK10SkBmpCodec9getDstRowEii(%class.SkBmpCodec*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkBmpRLECodec11setRGBPixelEPvmRK11SkImageInfojjhhh(%class.SkBmpRLECodec*, i8*, i64, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i32, i32, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %10 = icmp eq i8* %1, null
  br i1 %10, label %84, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 9
  %13 = load i32, i32* %12, align 4
  %14 = sdiv i32 %13, 2
  %15 = icmp sgt i32 %14, %4
  br i1 %15, label %84, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sdiv i32 %4, %13
  %20 = icmp slt i32 %19, %18
  br i1 %20, label %21, label %84

21:                                               ; preds = %16
  %22 = sub nsw i32 %4, %14
  %23 = srem i32 %22, %13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %84

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0
  %27 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = tail call i32 @_ZNK10SkBmpCodec9getDstRowEii(%class.SkBmpCodec* %26, i32 %5, i32 %28) #11
  %30 = load i32, i32* %12, align 4
  %31 = sdiv i32 %4, %30
  %32 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  switch i32 %33, label %84 [
    i32 4, label %34
    i32 6, label %50
    i32 2, label %66
  ]

34:                                               ; preds = %25
  %35 = trunc i64 %2 to i32
  %36 = mul i32 %29, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = bitcast i8* %38 to i32*
  %40 = zext i8 %6 to i32
  %41 = zext i8 %7 to i32
  %42 = zext i8 %8 to i32
  %43 = shl nuw nsw i32 %41, 8
  %44 = shl nuw nsw i32 %42, 16
  %45 = or i32 %43, %40
  %46 = or i32 %45, %44
  %47 = or i32 %46, -16777216
  %48 = sext i32 %31 to i64
  %49 = getelementptr inbounds i32, i32* %39, i64 %48
  store i32 %47, i32* %49, align 4
  br label %84

50:                                               ; preds = %25
  %51 = trunc i64 %2 to i32
  %52 = mul i32 %29, %51
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %1, i64 %53
  %55 = bitcast i8* %54 to i32*
  %56 = zext i8 %6 to i32
  %57 = zext i8 %7 to i32
  %58 = zext i8 %8 to i32
  %59 = shl nuw nsw i32 %56, 16
  %60 = shl nuw nsw i32 %57, 8
  %61 = or i32 %59, %60
  %62 = or i32 %61, %58
  %63 = or i32 %62, -16777216
  %64 = sext i32 %31 to i64
  %65 = getelementptr inbounds i32, i32* %55, i64 %64
  store i32 %63, i32* %65, align 4
  br label %84

66:                                               ; preds = %25
  %67 = trunc i64 %2 to i32
  %68 = mul i32 %29, %67
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %1, i64 %69
  %71 = bitcast i8* %70 to i16*
  %72 = lshr i8 %6, 3
  %73 = zext i8 %72 to i16
  %74 = shl nuw i16 %73, 11
  %75 = lshr i8 %7, 2
  %76 = zext i8 %75 to i16
  %77 = shl nuw nsw i16 %76, 5
  %78 = or i16 %77, %74
  %79 = lshr i8 %8, 3
  %80 = zext i8 %79 to i16
  %81 = or i16 %78, %80
  %82 = sext i32 %31 to i64
  %83 = getelementptr inbounds i16, i16* %71, i64 %82
  store i16 %81, i16* %83, align 2
  br label %84

84:                                               ; preds = %11, %16, %34, %50, %66, %25, %9, %21
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL18SkPackARGB_as_RGBAjjjj(i32, i32, i32, i32) unnamed_addr #4 {
  %5 = shl i32 %0, 24
  %6 = or i32 %5, %1
  %7 = shl i32 %2, 8
  %8 = or i32 %6, %7
  %9 = shl i32 %3, 16
  %10 = or i32 %8, %9
  ret i32 %10
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL18SkPackARGB_as_BGRAjjjj(i32, i32, i32, i32) unnamed_addr #4 {
  %5 = shl i32 %0, 24
  %6 = shl i32 %1, 16
  %7 = or i32 %6, %5
  %8 = shl i32 %2, 8
  %9 = or i32 %7, %8
  %10 = or i32 %9, %3
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkBmpRLECodec17onPrepareToDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkBmpRLECodec*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %2, i64 0, i32 1
  %5 = load %struct.SkIRect*, %struct.SkIRect** %4, align 8
  %6 = icmp eq %struct.SkIRect* %5, null
  br i1 %6, label %7, label %30

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 9
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 11
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 10
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %14, i32 %11, i32 6
  %16 = tail call zeroext i1 @_ZN13SkBmpRLECodec16createColorTableE11SkColorType(%class.SkBmpRLECodec* %0, i32 %15)
  br i1 %16, label %17, label %30

17:                                               ; preds = %7
  %18 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %19 = load %class.SkStream*, %class.SkStream** %18, align 8
  %20 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 0
  %21 = bitcast %class.SkStream* %19 to i64 (%class.SkStream*, i8*, i64)***
  %22 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %21, align 8
  %23 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %22, i64 2
  %24 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %23, align 8
  %25 = tail call i64 %24(%class.SkStream* %19, i8* %20, i64 4096) #11
  %26 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 7
  store i64 %25, i64* %26, align 8
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 8
  store i32 0, i32* %29, align 8
  br label %30

30:                                               ; preds = %28, %17, %7, %3
  %31 = phi i32 [ 9, %3 ], [ 6, %7 ], [ 0, %28 ], [ 6, %17 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkBmpRLECodec10decodeRowsERK11SkImageInfoPvmRKN7SkCodec7OptionsE(%class.SkBmpRLECodec*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = alloca %struct.SkImageInfo, align 8
  %8 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %15 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  %16 = load i32, i32* %14, align 8
  %17 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 9
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, %16
  br i1 %19, label %22, label %20

20:                                               ; preds = %5
  %21 = sdiv i32 %16, %18
  br label %22

22:                                               ; preds = %5, %20
  %23 = phi i32 [ %21, %20 ], [ 1, %5 ]
  %24 = zext i32 %9 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %23 to i64
  %27 = or i64 %25, %26
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %class.SkColorSpace*, %class.SkColorSpace** %28, align 8, !noalias !9
  %30 = icmp eq %class.SkColorSpace* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic, !noalias !9
  br label %34

34:                                               ; preds = %22, %31
  store %class.SkColorSpace* %29, %class.SkColorSpace** %11, align 8, !alias.scope !9
  %35 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %36 = bitcast i32* %35 to i64*
  %37 = bitcast i32* %12 to i64*
  %38 = load i64, i64* %36, align 8, !noalias !9
  store i64 %38, i64* %37, align 8, !alias.scope !9
  %39 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %40 = bitcast %struct.SkISize* %39 to i64*
  store i64 %27, i64* %40, align 8, !alias.scope !9
  %41 = icmp ne i8* %2, null
  br i1 %41, label %42, label %45

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  call void @_ZN9SkSampler4FillERK11SkImageInfoPvmN7SkCodec15ZeroInitializedE(%struct.SkImageInfo* nonnull dereferenceable(24) %6, i8* nonnull %2, i64 %3, i32 %44) #11
  br label %45

45:                                               ; preds = %42, %34
  %46 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 11
  %47 = load i32, i32* %46, align 8
  %48 = icmp sgt i32 %9, %47
  br i1 %48, label %49, label %100

49:                                               ; preds = %45
  %50 = sub nsw i32 %9, %47
  %51 = sext i32 %47 to i64
  %52 = mul i64 %51, %3
  %53 = getelementptr inbounds i8, i8* %2, i64 %52
  %54 = select i1 %41, i8* %53, i8* null
  store i32 0, i32* %46, align 8
  %55 = load i32, i32* %13, align 8
  %56 = zext i32 %50 to i64
  %57 = shl nuw i64 %56, 32
  %58 = zext i32 %55 to i64
  %59 = or i64 %57, %58
  %60 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8
  %61 = icmp eq %class.SkColorSpace* %60, null
  br i1 %61, label %62, label %65

62:                                               ; preds = %49
  %63 = load i64, i64* %37, align 8, !noalias !14
  %64 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 0, i64* %64, align 8
  br label %79

65:                                               ; preds = %49
  %66 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 1 monotonic, !noalias !14
  %68 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8
  %69 = ptrtoint %class.SkColorSpace* %60 to i64
  %70 = load i64, i64* %37, align 8, !noalias !14
  %71 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 %69, i64* %71, align 8
  %72 = icmp eq %class.SkColorSpace* %68, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %65
  %74 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = bitcast %class.SkColorSpace* %68 to i8*
  call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %77, %73, %65, %62
  %80 = phi i64 [ %63, %62 ], [ %70, %65 ], [ %70, %73 ], [ %70, %77 ]
  store i64 %80, i64* %37, align 8
  store i64 %59, i64* %40, align 8
  %81 = bitcast %struct.SkImageInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #11
  %82 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 1
  %84 = bitcast %struct.SkImageInfo* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 24, i1 false)
  %85 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8
  %86 = icmp eq %class.SkColorSpace* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 1 monotonic
  %90 = load i64, i64* %37, align 8
  %91 = load i64, i64* %40, align 8
  br label %92

92:                                               ; preds = %79, %87
  %93 = phi i64 [ %59, %79 ], [ %91, %87 ]
  %94 = phi i64 [ %80, %79 ], [ %90, %87 ]
  store %class.SkColorSpace* %85, %class.SkColorSpace** %82, align 8
  %95 = bitcast i32* %83 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 1
  %97 = bitcast %struct.SkISize* %96 to i64*
  store i64 %93, i64* %97, align 8
  %98 = icmp eq i8* %54, null
  %99 = and i64 %94, -4294967296
  br i1 %98, label %150, label %102

100:                                              ; preds = %45
  %101 = sub nsw i32 %47, %9
  store i32 %101, i32* %46, align 8
  br label %181

102:                                              ; preds = %92
  %103 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 10
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %150, label %106

106:                                              ; preds = %102
  br i1 %86, label %107, label %110

107:                                              ; preds = %106
  %108 = or i64 %99, 6
  %109 = bitcast %struct.SkImageInfo* %7 to i64*
  store i64 0, i64* %109, align 8
  br label %121

110:                                              ; preds = %106
  %111 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 1 monotonic, !noalias !19
  %113 = ptrtoint %class.SkColorSpace* %85 to i64
  %114 = and i64 %94, -4294967296
  %115 = or i64 %114, 6
  %116 = bitcast %struct.SkImageInfo* %7 to i64*
  store i64 %113, i64* %116, align 8
  %117 = atomicrmw add i32* %111, i32 -1 acq_rel
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %119, label %121

119:                                              ; preds = %110
  %120 = bitcast %class.SkColorSpace* %85 to i8*
  call void @_ZdlPv(i8* %120) #12
  br label %121

121:                                              ; preds = %119, %110, %107
  %122 = phi i64 [ %108, %107 ], [ %115, %110 ], [ %115, %119 ]
  store i64 %122, i64* %95, align 8
  store i64 %93, i64* %97, align 8
  %123 = load i32, i32* %12, align 8
  %124 = icmp eq i32 %123, 13
  br i1 %124, label %125, label %150

125:                                              ; preds = %121
  %126 = load i32, i32* %13, align 8
  %127 = mul nsw i32 %126, %50
  %128 = sext i32 %127 to i64
  %129 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %128, i64 4) #11
  %130 = extractvalue { i64, i1 } %129, 1
  %131 = extractvalue { i64, i1 } %129, 0
  %132 = select i1 %130, i64 -1, i64 %131
  %133 = call i8* @_Znam(i64 %132) #12
  %134 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = bitcast i32** %134 to i8**
  store i8* %133, i8** %136, align 8
  %137 = icmp eq i32* %135, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %125
  %139 = bitcast i32* %135 to i8*
  call void @_ZdaPv(i8* %139) #12
  br label %140

140:                                              ; preds = %125, %138
  %141 = icmp eq i32 %127, 0
  br i1 %141, label %145, label %142

142:                                              ; preds = %140
  %143 = shl nsw i64 %128, 2
  %144 = load i8*, i8** %136, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %144, i8 0, i64 %143, i1 false) #11
  br label %145

145:                                              ; preds = %140, %142
  %146 = load i8*, i8** %136, align 8
  %147 = load i32, i32* %13, align 8
  %148 = sext i32 %147 to i64
  %149 = shl nsw i64 %148, 2
  br label %150

150:                                              ; preds = %102, %92, %145, %121
  %151 = phi i8* [ %146, %145 ], [ %53, %121 ], [ %53, %102 ], [ null, %92 ]
  %152 = phi i64 [ %149, %145 ], [ %3, %121 ], [ %3, %102 ], [ %3, %92 ]
  %153 = call i32 @_ZN13SkBmpRLECodec9decodeRLEERK11SkImageInfoPvm(%class.SkBmpRLECodec* %0, %struct.SkImageInfo* nonnull dereferenceable(24) %7, i8* %151, i64 %152)
  %154 = bitcast %class.SkBmpRLECodec* %0 to %class.SkCodec*
  %155 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 10
  %156 = load i32, i32* %155, align 8
  %157 = icmp ne i32 %156, 0
  %158 = icmp ne i8* %151, null
  %159 = and i1 %158, %157
  %160 = icmp sgt i32 %153, 0
  %161 = and i1 %159, %160
  br i1 %161, label %162, label %171

162:                                              ; preds = %150, %162
  %163 = phi i32 [ %169, %162 ], [ 0, %150 ]
  %164 = phi i8* [ %167, %162 ], [ %151, %150 ]
  %165 = phi i8* [ %168, %162 ], [ %54, %150 ]
  %166 = load i32, i32* %13, align 8
  call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %154, i8* %165, i8* %164, i32 %166) #11
  %167 = getelementptr inbounds i8, i8* %164, i64 %152
  %168 = getelementptr inbounds i8, i8* %165, i64 %3
  %169 = add nuw nsw i32 %163, 1
  %170 = icmp eq i32 %169, %153
  br i1 %170, label %171, label %162

171:                                              ; preds = %162, %150
  %172 = load %class.SkColorSpace*, %class.SkColorSpace** %82, align 8
  %173 = icmp eq %class.SkColorSpace* %172, null
  br i1 %173, label %180, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = atomicrmw add i32* %175, i32 -1 acq_rel
  %177 = icmp eq i32 %176, 1
  br i1 %177, label %178, label %180

178:                                              ; preds = %174
  %179 = bitcast %class.SkColorSpace* %172 to i8*
  call void @_ZdlPv(i8* %179) #12
  br label %180

180:                                              ; preds = %171, %174, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #11
  br label %181

181:                                              ; preds = %180, %100
  %182 = phi i32 [ %153, %180 ], [ %9, %100 ]
  %183 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8
  %184 = icmp eq %class.SkColorSpace* %183, null
  br i1 %184, label %191, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %183, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = atomicrmw add i32* %186, i32 -1 acq_rel
  %188 = icmp eq i32 %187, 1
  br i1 %188, label %189, label %191

189:                                              ; preds = %185
  %190 = bitcast %class.SkColorSpace* %183 to i8*
  call void @_ZdlPv(i8* %190) #12
  br label %191

191:                                              ; preds = %181, %185, %189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  ret i32 %182
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK13SkBmpRLECodec9fillWidthEv(%class.SkBmpRLECodec* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 9
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, %3
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = sdiv i32 %3, %5
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi i32 [ %8, %7 ], [ 1, %1 ]
  ret i32 %10
}

declare void @_ZN9SkSampler4FillERK11SkImageInfoPvmN7SkCodec15ZeroInitializedE(%struct.SkImageInfo* dereferenceable(24), i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkBmpRLECodec9decodeRLEERK11SkImageInfoPvm(%class.SkBmpRLECodec*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca [2 x i8], align 1
  %6 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %476

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 7
  %13 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 8
  %14 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 0
  %15 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0
  %17 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 1
  %20 = icmp eq i8* %2, null
  %21 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 9
  %22 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %24 = trunc i64 %3 to i32
  %25 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 1, i32 0
  br label %26

26:                                               ; preds = %11, %472
  %27 = phi i32 [ 0, %11 ], [ %474, %472 ]
  %28 = phi i32 [ 0, %11 ], [ %473, %472 ]
  %29 = load i64, i64* %12, align 8
  %30 = trunc i64 %29 to i32
  %31 = load i32, i32* %13, align 8
  %32 = sub i32 %30, %31
  %33 = icmp ult i32 %32, 2
  br i1 %33, label %34, label %49

34:                                               ; preds = %26
  %35 = zext i32 %31 to i64
  %36 = sub i64 %29, %35
  %37 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %35
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %37, i64 %36, i1 false) #11
  %38 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %36
  %39 = load %class.SkStream*, %class.SkStream** %15, align 8
  %40 = load i32, i32* %13, align 8
  %41 = zext i32 %40 to i64
  %42 = bitcast %class.SkStream* %39 to i64 (%class.SkStream*, i8*, i64)***
  %43 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %42, align 8
  %44 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %43, i64 2
  %45 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %44, align 8
  %46 = tail call i64 %45(%class.SkStream* %39, i8* %38, i64 %41) #11
  store i32 0, i32* %13, align 8
  %47 = add i64 %46, %36
  store i64 %47, i64* %12, align 8
  %48 = icmp ult i64 %47, 2
  br i1 %48, label %476, label %49

49:                                               ; preds = %34, %26
  %50 = phi i64 [ %47, %34 ], [ %29, %26 ]
  %51 = phi i32 [ 0, %34 ], [ %31, %26 ]
  %52 = add i32 %51, 1
  store i32 %52, i32* %13, align 8
  %53 = zext i32 %51 to i64
  %54 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = add i32 %51, 2
  store i32 %56, i32* %13, align 8
  %57 = zext i32 %52 to i64
  %58 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %55, 0
  br i1 %60, label %61, label %356

61:                                               ; preds = %49
  %62 = zext i8 %59 to i32
  switch i8 %59, label %104 [
    i8 0, label %63
    i8 1, label %476
    i8 2, label %65
  ]

63:                                               ; preds = %61
  %64 = add nsw i32 %28, 1
  br label %472

65:                                               ; preds = %61
  %66 = trunc i64 %50 to i32
  %67 = sub i32 %66, %56
  %68 = icmp ult i32 %67, 2
  br i1 %68, label %69, label %84

69:                                               ; preds = %65
  %70 = zext i32 %56 to i64
  %71 = sub i64 %50, %70
  %72 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %70
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %72, i64 %71, i1 false) #11
  %73 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %71
  %74 = load %class.SkStream*, %class.SkStream** %15, align 8
  %75 = load i32, i32* %13, align 8
  %76 = zext i32 %75 to i64
  %77 = bitcast %class.SkStream* %74 to i64 (%class.SkStream*, i8*, i64)***
  %78 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %77, align 8
  %79 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %78, i64 2
  %80 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %79, align 8
  %81 = tail call i64 %80(%class.SkStream* %74, i8* %73, i64 %76) #11
  store i32 0, i32* %13, align 8
  %82 = add i64 %81, %71
  store i64 %82, i64* %12, align 8
  %83 = icmp ult i64 %82, 2
  br i1 %83, label %476, label %84

84:                                               ; preds = %69, %65
  %85 = phi i32 [ 0, %69 ], [ %56, %65 ]
  %86 = add i32 %85, 1
  store i32 %86, i32* %13, align 8
  %87 = zext i32 %85 to i64
  %88 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = add i32 %85, 2
  store i32 %90, i32* %13, align 8
  %91 = zext i32 %86 to i64
  %92 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %89 to i32
  %95 = add nsw i32 %27, %94
  %96 = zext i8 %93 to i32
  %97 = add nsw i32 %28, %96
  %98 = icmp sgt i32 %95, %7
  br i1 %98, label %476, label %99

99:                                               ; preds = %84
  %100 = icmp sgt i32 %97, %9
  br i1 %100, label %101, label %472

101:                                              ; preds = %99
  %102 = sub nsw i32 %97, %9
  %103 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 11
  store i32 %102, i32* %103, align 8
  br label %476

104:                                              ; preds = %61
  %105 = load i16, i16* %17, align 2
  %106 = icmp ult i16 %105, 16
  br i1 %106, label %107, label %114

107:                                              ; preds = %104
  %108 = trunc i16 %105 to i8
  %109 = udiv i8 8, %108
  %110 = zext i8 %109 to i32
  %111 = add nsw i32 %62, -1
  %112 = add nsw i32 %111, %110
  %113 = udiv i32 %112, %110
  br label %118

114:                                              ; preds = %104
  %115 = lshr i16 %105, 3
  %116 = zext i16 %115 to i32
  %117 = mul nuw nsw i32 %116, %62
  br label %118

118:                                              ; preds = %107, %114
  %119 = phi i32 [ %113, %107 ], [ %117, %114 ]
  %120 = zext i32 %119 to i64
  %121 = add nsw i32 %27, %62
  %122 = icmp sgt i32 %121, %7
  br i1 %122, label %476, label %123

123:                                              ; preds = %118
  %124 = add nuw nsw i64 %120, 1
  %125 = and i64 %124, 8589934590
  %126 = trunc i64 %50 to i32
  %127 = sub i32 %126, %56
  %128 = zext i32 %127 to i64
  %129 = icmp ugt i64 %125, %128
  br i1 %129, label %130, label %145

130:                                              ; preds = %123
  %131 = zext i32 %56 to i64
  %132 = sub i64 %50, %131
  %133 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %131
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %133, i64 %132, i1 false) #11
  %134 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %132
  %135 = load %class.SkStream*, %class.SkStream** %15, align 8
  %136 = load i32, i32* %13, align 8
  %137 = zext i32 %136 to i64
  %138 = bitcast %class.SkStream* %135 to i64 (%class.SkStream*, i8*, i64)***
  %139 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %138, align 8
  %140 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %139, i64 2
  %141 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %140, align 8
  %142 = tail call i64 %141(%class.SkStream* %135, i8* %134, i64 %137) #11
  store i32 0, i32* %13, align 8
  %143 = add i64 %142, %132
  store i64 %143, i64* %12, align 8
  %144 = icmp ult i64 %143, %125
  br i1 %144, label %476, label %145

145:                                              ; preds = %123, %130
  br label %146

146:                                              ; preds = %145, %344
  %147 = phi i32 [ %346, %344 ], [ %27, %145 ]
  %148 = phi i8 [ %347, %344 ], [ %59, %145 ]
  %149 = load i16, i16* %17, align 2
  switch i16 %149, label %476 [
    i16 4, label %150
    i16 8, label %269
    i16 24, label %329
  ]

150:                                              ; preds = %146
  %151 = load i32, i32* %13, align 8
  %152 = add i32 %151, 1
  store i32 %152, i32* %13, align 8
  %153 = zext i32 %151 to i64
  %154 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = add nsw i32 %147, 1
  %157 = lshr i8 %155, 4
  br i1 %20, label %211, label %158

158:                                              ; preds = %150
  %159 = load i32, i32* %21, align 4
  %160 = sdiv i32 %159, 2
  %161 = icmp slt i32 %147, %160
  br i1 %161, label %211, label %162

162:                                              ; preds = %158
  %163 = load i32, i32* %22, align 4
  %164 = sdiv i32 %147, %159
  %165 = icmp slt i32 %164, %163
  br i1 %165, label %166, label %211

166:                                              ; preds = %162
  %167 = sub nsw i32 %147, %160
  %168 = srem i32 %167, %159
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %211

170:                                              ; preds = %166
  %171 = load i32, i32* %8, align 4
  %172 = tail call i32 @_ZNK10SkBmpCodec9getDstRowEii(%class.SkBmpCodec* %16, i32 %28, i32 %171) #11
  %173 = load i32, i32* %21, align 4
  %174 = sdiv i32 %147, %173
  %175 = load i32, i32* %23, align 8
  switch i32 %175, label %211 [
    i32 4, label %176
    i32 6, label %176
    i32 2, label %189
  ]

176:                                              ; preds = %170, %170
  %177 = mul i32 %172, %24
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds i8, i8* %2, i64 %178
  %180 = bitcast i8* %179 to i32*
  %181 = load %class.SkColorTable*, %class.SkColorTable** %25, align 8
  %182 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %181, i64 0, i32 2
  %183 = load i32*, i32** %182, align 8
  %184 = zext i8 %157 to i64
  %185 = getelementptr inbounds i32, i32* %183, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = sext i32 %174 to i64
  %188 = getelementptr inbounds i32, i32* %180, i64 %187
  store i32 %186, i32* %188, align 4
  br label %211

189:                                              ; preds = %170
  %190 = mul i32 %172, %24
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds i8, i8* %2, i64 %191
  %193 = bitcast i8* %192 to i16*
  %194 = load %class.SkColorTable*, %class.SkColorTable** %25, align 8
  %195 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %194, i64 0, i32 2
  %196 = load i32*, i32** %195, align 8
  %197 = zext i8 %157 to i64
  %198 = getelementptr inbounds i32, i32* %196, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = lshr i32 %199, 8
  %201 = and i32 %200, 63488
  %202 = lshr i32 %199, 5
  %203 = and i32 %202, 2016
  %204 = lshr i32 %199, 3
  %205 = and i32 %204, 31
  %206 = or i32 %201, %203
  %207 = or i32 %206, %205
  %208 = trunc i32 %207 to i16
  %209 = sext i32 %174 to i64
  %210 = getelementptr inbounds i16, i16* %193, i64 %209
  store i16 %208, i16* %210, align 2
  br label %211

211:                                              ; preds = %150, %158, %162, %166, %170, %176, %189
  %212 = icmp eq i8 %148, 1
  br i1 %212, label %349, label %213

213:                                              ; preds = %211
  %214 = add nsw i32 %147, 2
  %215 = and i8 %155, 15
  br i1 %20, label %344, label %216

216:                                              ; preds = %213
  %217 = load i32, i32* %21, align 4
  %218 = sdiv i32 %217, 2
  %219 = icmp slt i32 %156, %218
  br i1 %219, label %344, label %220

220:                                              ; preds = %216
  %221 = load i32, i32* %22, align 4
  %222 = sdiv i32 %156, %217
  %223 = icmp slt i32 %222, %221
  br i1 %223, label %224, label %344

224:                                              ; preds = %220
  %225 = sub nsw i32 %156, %218
  %226 = srem i32 %225, %217
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %344

228:                                              ; preds = %224
  %229 = load i32, i32* %8, align 4
  %230 = tail call i32 @_ZNK10SkBmpCodec9getDstRowEii(%class.SkBmpCodec* %16, i32 %28, i32 %229) #11
  %231 = load i32, i32* %21, align 4
  %232 = sdiv i32 %156, %231
  %233 = load i32, i32* %23, align 8
  switch i32 %233, label %344 [
    i32 4, label %234
    i32 6, label %234
    i32 2, label %247
  ]

234:                                              ; preds = %228, %228
  %235 = mul i32 %230, %24
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds i8, i8* %2, i64 %236
  %238 = bitcast i8* %237 to i32*
  %239 = load %class.SkColorTable*, %class.SkColorTable** %25, align 8
  %240 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %239, i64 0, i32 2
  %241 = load i32*, i32** %240, align 8
  %242 = zext i8 %215 to i64
  %243 = getelementptr inbounds i32, i32* %241, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = sext i32 %232 to i64
  %246 = getelementptr inbounds i32, i32* %238, i64 %245
  store i32 %244, i32* %246, align 4
  br label %344

247:                                              ; preds = %228
  %248 = mul i32 %230, %24
  %249 = zext i32 %248 to i64
  %250 = getelementptr inbounds i8, i8* %2, i64 %249
  %251 = bitcast i8* %250 to i16*
  %252 = load %class.SkColorTable*, %class.SkColorTable** %25, align 8
  %253 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %252, i64 0, i32 2
  %254 = load i32*, i32** %253, align 8
  %255 = zext i8 %215 to i64
  %256 = getelementptr inbounds i32, i32* %254, i64 %255
  %257 = load i32, i32* %256, align 4
  %258 = lshr i32 %257, 8
  %259 = and i32 %258, 63488
  %260 = lshr i32 %257, 5
  %261 = and i32 %260, 2016
  %262 = lshr i32 %257, 3
  %263 = and i32 %262, 31
  %264 = or i32 %259, %261
  %265 = or i32 %264, %263
  %266 = trunc i32 %265 to i16
  %267 = sext i32 %232 to i64
  %268 = getelementptr inbounds i16, i16* %251, i64 %267
  store i16 %266, i16* %268, align 2
  br label %344

269:                                              ; preds = %146
  %270 = add nsw i32 %147, 1
  %271 = load i32, i32* %13, align 8
  %272 = add i32 %271, 1
  store i32 %272, i32* %13, align 8
  %273 = zext i32 %271 to i64
  %274 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %273
  %275 = load i8, i8* %274, align 1
  br i1 %20, label %344, label %276

276:                                              ; preds = %269
  %277 = load i32, i32* %21, align 4
  %278 = sdiv i32 %277, 2
  %279 = icmp slt i32 %147, %278
  br i1 %279, label %344, label %280

280:                                              ; preds = %276
  %281 = load i32, i32* %22, align 4
  %282 = sdiv i32 %147, %277
  %283 = icmp slt i32 %282, %281
  br i1 %283, label %284, label %344

284:                                              ; preds = %280
  %285 = sub nsw i32 %147, %278
  %286 = srem i32 %285, %277
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %344

288:                                              ; preds = %284
  %289 = load i32, i32* %8, align 4
  %290 = tail call i32 @_ZNK10SkBmpCodec9getDstRowEii(%class.SkBmpCodec* %16, i32 %28, i32 %289) #11
  %291 = load i32, i32* %21, align 4
  %292 = sdiv i32 %147, %291
  %293 = load i32, i32* %23, align 8
  switch i32 %293, label %344 [
    i32 4, label %294
    i32 6, label %294
    i32 2, label %307
  ]

294:                                              ; preds = %288, %288
  %295 = mul i32 %290, %24
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds i8, i8* %2, i64 %296
  %298 = bitcast i8* %297 to i32*
  %299 = load %class.SkColorTable*, %class.SkColorTable** %25, align 8
  %300 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %299, i64 0, i32 2
  %301 = load i32*, i32** %300, align 8
  %302 = zext i8 %275 to i64
  %303 = getelementptr inbounds i32, i32* %301, i64 %302
  %304 = load i32, i32* %303, align 4
  %305 = sext i32 %292 to i64
  %306 = getelementptr inbounds i32, i32* %298, i64 %305
  store i32 %304, i32* %306, align 4
  br label %344

307:                                              ; preds = %288
  %308 = mul i32 %290, %24
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds i8, i8* %2, i64 %309
  %311 = bitcast i8* %310 to i16*
  %312 = load %class.SkColorTable*, %class.SkColorTable** %25, align 8
  %313 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %312, i64 0, i32 2
  %314 = load i32*, i32** %313, align 8
  %315 = zext i8 %275 to i64
  %316 = getelementptr inbounds i32, i32* %314, i64 %315
  %317 = load i32, i32* %316, align 4
  %318 = lshr i32 %317, 8
  %319 = and i32 %318, 63488
  %320 = lshr i32 %317, 5
  %321 = and i32 %320, 2016
  %322 = lshr i32 %317, 3
  %323 = and i32 %322, 31
  %324 = or i32 %319, %321
  %325 = or i32 %324, %323
  %326 = trunc i32 %325 to i16
  %327 = sext i32 %292 to i64
  %328 = getelementptr inbounds i16, i16* %311, i64 %327
  store i16 %326, i16* %328, align 2
  br label %344

329:                                              ; preds = %146
  %330 = load i32, i32* %13, align 8
  %331 = add i32 %330, 1
  store i32 %331, i32* %13, align 8
  %332 = zext i32 %330 to i64
  %333 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %332
  %334 = load i8, i8* %333, align 1
  %335 = add i32 %330, 2
  store i32 %335, i32* %13, align 8
  %336 = zext i32 %331 to i64
  %337 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %336
  %338 = load i8, i8* %337, align 1
  %339 = add i32 %330, 3
  store i32 %339, i32* %13, align 8
  %340 = zext i32 %335 to i64
  %341 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %340
  %342 = load i8, i8* %341, align 1
  %343 = add nsw i32 %147, 1
  tail call void @_ZN13SkBmpRLECodec11setRGBPixelEPvmRK11SkImageInfojjhhh(%class.SkBmpRLECodec* %0, i8* %2, i64 %3, %struct.SkImageInfo* dereferenceable(24) %1, i32 %147, i32 %28, i8 zeroext %342, i8 zeroext %338, i8 zeroext %334)
  br label %344

344:                                              ; preds = %307, %294, %288, %284, %280, %276, %269, %247, %234, %228, %224, %220, %216, %213, %329
  %345 = phi i8 [ -1, %329 ], [ -2, %213 ], [ -2, %216 ], [ -2, %220 ], [ -2, %224 ], [ -2, %228 ], [ -2, %234 ], [ -2, %247 ], [ -1, %269 ], [ -1, %276 ], [ -1, %280 ], [ -1, %284 ], [ -1, %288 ], [ -1, %294 ], [ -1, %307 ]
  %346 = phi i32 [ %343, %329 ], [ %214, %213 ], [ %214, %216 ], [ %214, %220 ], [ %214, %224 ], [ %214, %228 ], [ %214, %234 ], [ %214, %247 ], [ %270, %269 ], [ %270, %276 ], [ %270, %280 ], [ %270, %284 ], [ %270, %288 ], [ %270, %294 ], [ %270, %307 ]
  %347 = add i8 %148, %345
  %348 = icmp eq i8 %347, 0
  br i1 %348, label %349, label %146

349:                                              ; preds = %211, %344
  %350 = phi i32 [ %346, %344 ], [ %156, %211 ]
  %351 = and i64 %120, 1
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %472, label %353

353:                                              ; preds = %349
  %354 = load i32, i32* %13, align 8
  %355 = add i32 %354, 1
  store i32 %355, i32* %13, align 8
  br label %472

356:                                              ; preds = %49
  %357 = zext i8 %55 to i32
  %358 = add nsw i32 %27, %357
  %359 = icmp slt i32 %7, %358
  %360 = select i1 %359, i32 %7, i32 %358
  %361 = load i16, i16* %17, align 2
  %362 = icmp eq i16 %361, 24
  br i1 %362, label %363, label %397

363:                                              ; preds = %356
  %364 = trunc i64 %50 to i32
  %365 = sub i32 %364, %56
  %366 = icmp ult i32 %365, 2
  br i1 %366, label %367, label %382

367:                                              ; preds = %363
  %368 = zext i32 %56 to i64
  %369 = sub i64 %50, %368
  %370 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %368
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %370, i64 %369, i1 false) #11
  %371 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %369
  %372 = load %class.SkStream*, %class.SkStream** %15, align 8
  %373 = load i32, i32* %13, align 8
  %374 = zext i32 %373 to i64
  %375 = bitcast %class.SkStream* %372 to i64 (%class.SkStream*, i8*, i64)***
  %376 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %375, align 8
  %377 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %376, i64 2
  %378 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %377, align 8
  %379 = tail call i64 %378(%class.SkStream* %372, i8* %371, i64 %374) #11
  store i32 0, i32* %13, align 8
  %380 = add i64 %379, %369
  store i64 %380, i64* %12, align 8
  %381 = icmp ult i64 %380, 2
  br i1 %381, label %476, label %382

382:                                              ; preds = %367, %363
  %383 = phi i32 [ 0, %367 ], [ %56, %363 ]
  %384 = add i32 %383, 1
  store i32 %384, i32* %13, align 8
  %385 = zext i32 %383 to i64
  %386 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %385
  %387 = load i8, i8* %386, align 1
  %388 = add i32 %383, 2
  store i32 %388, i32* %13, align 8
  %389 = zext i32 %384 to i64
  %390 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 5, i64 %389
  %391 = load i8, i8* %390, align 1
  %392 = icmp slt i32 %27, %360
  br i1 %392, label %393, label %472

393:                                              ; preds = %382, %393
  %394 = phi i32 [ %395, %393 ], [ %27, %382 ]
  %395 = add nsw i32 %394, 1
  tail call void @_ZN13SkBmpRLECodec11setRGBPixelEPvmRK11SkImageInfojjhhh(%class.SkBmpRLECodec* %0, i8* %2, i64 %3, %struct.SkImageInfo* dereferenceable(24) %1, i32 %394, i32 %28, i8 zeroext %391, i8 zeroext %387, i8 zeroext %59)
  %396 = icmp slt i32 %395, %360
  br i1 %396, label %393, label %472

397:                                              ; preds = %356
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #11
  store i8 %59, i8* %18, align 1
  store i8 %59, i8* %19, align 1
  %398 = icmp eq i16 %361, 4
  br i1 %398, label %399, label %402

399:                                              ; preds = %397
  %400 = lshr i8 %59, 4
  store i8 %400, i8* %18, align 1
  %401 = and i8 %59, 15
  store i8 %401, i8* %19, align 1
  br label %402

402:                                              ; preds = %399, %397
  %403 = phi i8 [ %400, %399 ], [ %59, %397 ]
  %404 = icmp slt i32 %27, %360
  br i1 %404, label %407, label %405

405:                                              ; preds = %464, %402
  %406 = phi i32 [ %27, %402 ], [ %466, %464 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #11
  br label %472

407:                                              ; preds = %402, %468
  %408 = phi i8 [ %471, %468 ], [ %403, %402 ]
  %409 = phi i32 [ %465, %468 ], [ 0, %402 ]
  %410 = phi i32 [ %466, %468 ], [ %27, %402 ]
  br i1 %20, label %464, label %411

411:                                              ; preds = %407
  %412 = load i32, i32* %21, align 4
  %413 = sdiv i32 %412, 2
  %414 = icmp slt i32 %410, %413
  br i1 %414, label %464, label %415

415:                                              ; preds = %411
  %416 = load i32, i32* %22, align 4
  %417 = sdiv i32 %410, %412
  %418 = icmp slt i32 %417, %416
  br i1 %418, label %419, label %464

419:                                              ; preds = %415
  %420 = sub nsw i32 %410, %413
  %421 = srem i32 %420, %412
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %464

423:                                              ; preds = %419
  %424 = load i32, i32* %8, align 4
  %425 = tail call i32 @_ZNK10SkBmpCodec9getDstRowEii(%class.SkBmpCodec* %16, i32 %28, i32 %424) #11
  %426 = load i32, i32* %21, align 4
  %427 = sdiv i32 %410, %426
  %428 = load i32, i32* %23, align 8
  switch i32 %428, label %464 [
    i32 4, label %429
    i32 6, label %429
    i32 2, label %442
  ]

429:                                              ; preds = %423, %423
  %430 = mul i32 %425, %24
  %431 = zext i32 %430 to i64
  %432 = getelementptr inbounds i8, i8* %2, i64 %431
  %433 = bitcast i8* %432 to i32*
  %434 = load %class.SkColorTable*, %class.SkColorTable** %25, align 8
  %435 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %434, i64 0, i32 2
  %436 = load i32*, i32** %435, align 8
  %437 = zext i8 %408 to i64
  %438 = getelementptr inbounds i32, i32* %436, i64 %437
  %439 = load i32, i32* %438, align 4
  %440 = sext i32 %427 to i64
  %441 = getelementptr inbounds i32, i32* %433, i64 %440
  store i32 %439, i32* %441, align 4
  br label %464

442:                                              ; preds = %423
  %443 = mul i32 %425, %24
  %444 = zext i32 %443 to i64
  %445 = getelementptr inbounds i8, i8* %2, i64 %444
  %446 = bitcast i8* %445 to i16*
  %447 = load %class.SkColorTable*, %class.SkColorTable** %25, align 8
  %448 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %447, i64 0, i32 2
  %449 = load i32*, i32** %448, align 8
  %450 = zext i8 %408 to i64
  %451 = getelementptr inbounds i32, i32* %449, i64 %450
  %452 = load i32, i32* %451, align 4
  %453 = lshr i32 %452, 8
  %454 = and i32 %453, 63488
  %455 = lshr i32 %452, 5
  %456 = and i32 %455, 2016
  %457 = lshr i32 %452, 3
  %458 = and i32 %457, 31
  %459 = or i32 %454, %456
  %460 = or i32 %459, %458
  %461 = trunc i32 %460 to i16
  %462 = sext i32 %427 to i64
  %463 = getelementptr inbounds i16, i16* %446, i64 %462
  store i16 %461, i16* %463, align 2
  br label %464

464:                                              ; preds = %407, %411, %415, %419, %423, %429, %442
  %465 = xor i32 %409, 1
  %466 = add nsw i32 %410, 1
  %467 = icmp slt i32 %466, %360
  br i1 %467, label %468, label %405

468:                                              ; preds = %464
  %469 = zext i32 %465 to i64
  %470 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 %469
  %471 = load i8, i8* %470, align 1
  br label %407

472:                                              ; preds = %393, %382, %405, %63, %99, %353, %349
  %473 = phi i32 [ %64, %63 ], [ %97, %99 ], [ %28, %353 ], [ %28, %349 ], [ %28, %405 ], [ %28, %382 ], [ %28, %393 ]
  %474 = phi i32 [ 0, %63 ], [ %95, %99 ], [ %350, %353 ], [ %350, %349 ], [ %406, %405 ], [ %27, %382 ], [ %395, %393 ]
  %475 = icmp slt i32 %473, %9
  br i1 %475, label %26, label %476

476:                                              ; preds = %472, %34, %61, %69, %367, %84, %118, %130, %146, %4, %101
  %477 = phi i32 [ %9, %101 ], [ %9, %4 ], [ %28, %146 ], [ %9, %472 ], [ %28, %34 ], [ %9, %61 ], [ %28, %69 ], [ %28, %367 ], [ %28, %84 ], [ %28, %118 ], [ %28, %130 ]
  ret i32 %477
}

declare void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkBmpRLECodec8skipRowsEi(%class.SkBmpRLECodec*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkImageInfo, align 16
  %4 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %1 to i64
  %9 = shl nuw i64 %8, 32
  %10 = zext i32 %7 to i64
  %11 = or i64 %9, %10
  %12 = bitcast %struct.SkImageInfo* %3 to <2 x i64>*
  store <2 x i64> <i64 0, i64 12884901894>, <2 x i64>* %12, align 16, !alias.scope !26
  %13 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1
  %14 = bitcast %struct.SkISize* %13 to i64*
  store i64 %11, i64* %14, align 16, !alias.scope !26
  %15 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 9
  %16 = bitcast %class.SkBmpRLECodec* %0 to i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)***
  %17 = load i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)**, i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*, i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)** %17, i64 26
  %19 = load i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*, i32 (%class.SkBmpRLECodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)** %18, align 8
  %20 = call i32 %19(%class.SkBmpRLECodec* %0, %struct.SkImageInfo* nonnull dereferenceable(24) %3, i8* null, i64 0, %"struct.SkCodec::Options"* dereferenceable(24) %15) #11
  %21 = icmp eq i32 %20, %1
  %22 = load %class.SkColorSpace*, %class.SkColorSpace** %5, align 16
  %23 = icmp eq %class.SkColorSpace* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = bitcast %class.SkColorSpace* %22 to i8*
  call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %2, %24, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkSampler* @_ZN13SkBmpRLECodec10getSamplerEb(%class.SkBmpRLECodec*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 10
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.SkSampler*, %class.SkSampler** %4, align 8
  %6 = icmp ne %class.SkSampler* %5, null
  %7 = xor i1 %1, true
  %8 = or i1 %6, %7
  br i1 %8, label %20, label %9

9:                                                ; preds = %2
  %10 = ptrtoint %class.SkBmpRLECodec* %0 to i64
  %11 = tail call i8* @_Znwm(i64 24) #12
  %12 = bitcast i8* %11 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV15SkBmpRLESampler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 8
  %17 = ptrtoint i8* %11 to i64
  %18 = bitcast %"class.std::__1::unique_ptr.23"* %3 to i64*
  store i64 %17, i64* %18, align 8
  %19 = bitcast i8* %11 to %class.SkSampler*
  br label %20

20:                                               ; preds = %2, %9
  %21 = phi %class.SkSampler* [ %5, %2 ], [ %19, %9 ]
  ret %class.SkSampler* %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN13SkBmpRLECodec10setSampleXEi(%class.SkBmpRLECodec* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 9
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, %1
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = sdiv i32 %5, %1
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i32 [ %8, %7 ], [ 1, %2 ]
  ret i32 %10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkBmpRLECodecD2Ev(%class.SkBmpRLECodec*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV13SkBmpRLECodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %class.SkSampler*, %class.SkSampler** %3, align 8
  store %class.SkSampler* null, %class.SkSampler** %3, align 8
  %5 = icmp eq %class.SkSampler* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkSampler* %4 to void (%class.SkSampler*)***
  %8 = load void (%class.SkSampler*)**, void (%class.SkSampler*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkSampler*)*, void (%class.SkSampler*)** %8, i64 2
  %10 = load void (%class.SkSampler*)*, void (%class.SkSampler*)** %9, align 8
  tail call void %10(%class.SkSampler* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 1, i32 0
  %13 = load %class.SkColorTable*, %class.SkColorTable** %12, align 8
  %14 = icmp eq %class.SkColorTable* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkColorTable* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkColorTable* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #11
  br label %25

25:                                               ; preds = %11, %15, %19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV10SkBmpCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  store i32* null, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = bitcast i32* %27 to i8*
  tail call void @_ZdaPv(i8* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = bitcast %class.SkBmpRLECodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecD2Ev(%class.SkCodec* %32) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkBmpRLECodecD0Ev(%class.SkBmpRLECodec*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV13SkBmpRLECodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %class.SkSampler*, %class.SkSampler** %3, align 8
  store %class.SkSampler* null, %class.SkSampler** %3, align 8
  %5 = icmp eq %class.SkSampler* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkSampler* %4 to void (%class.SkSampler*)***
  %8 = load void (%class.SkSampler*)**, void (%class.SkSampler*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkSampler*)*, void (%class.SkSampler*)** %8, i64 2
  %10 = load void (%class.SkSampler*)*, void (%class.SkSampler*)** %9, align 8
  tail call void %10(%class.SkSampler* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 1, i32 0
  %13 = load %class.SkColorTable*, %class.SkColorTable** %12, align 8
  %14 = icmp eq %class.SkColorTable* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkColorTable* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkColorTable* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #11
  br label %25

25:                                               ; preds = %19, %15, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV10SkBmpCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  store i32* null, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = bitcast i32* %27 to i8*
  tail call void @_ZdaPv(i8* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = bitcast %class.SkBmpRLECodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecD2Ev(%class.SkCodec* %32) #11
  %33 = bitcast %class.SkBmpRLECodec* %0 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK7SkCodec21onGetScaledDimensionsEf(%class.SkCodec*, float) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %4 to i64
  %10 = or i64 %8, %9
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7SkCodec21onDimensionsSupportedERK7SkISize(%class.SkCodec*, %struct.SkISize* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK10SkBmpCodec18onGetEncodedFormatEv(%class.SkBmpCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkCodec*, %class.SkYUVAPixmaps* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect(%class.SkCodec*, %struct.SkIRect*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN10SkBmpCodec8onRewindEv(%class.SkBmpCodec*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK10SkBmpCodec18onGetScanlineOrderEv(%class.SkBmpCodec*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK7SkCodec16onOutputScanlineEi(%class.SkCodec*, i32) unnamed_addr #1

declare zeroext i1 @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i1 zeroext, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14usesColorXformEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetFrameCountEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE(%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec20onGetRepetitionCountEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkFrameHolder* @_ZNK7SkCodec14getFrameHolderEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret %class.SkFrameHolder* null
}

declare i32 @_ZN10SkBmpCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkBmpCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec19onIncrementalDecodeEPi(%class.SkCodec*, i32*) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

declare zeroext i1 @_ZN10SkBmpCodec15onSkipScanlinesEi(%class.SkBmpCodec*, i32) unnamed_addr #1

declare i32 @_ZN10SkBmpCodec14onGetScanlinesEPvim(%class.SkBmpCodec*, i8*, i32, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK10SkBmpCodec7onInIcoEv(%class.SkBmpCodec*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN7SkCodecD2Ev(%class.SkCodec*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK15SkBmpRLESampler9fillWidthEv(%class.SkBmpRLESampler*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBmpRLESampler, %class.SkBmpRLESampler* %0, i64 0, i32 1
  %3 = load %class.SkBmpRLECodec*, %class.SkBmpRLECodec** %2, align 8
  %4 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %3, i64 0, i32 0, i32 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %3, i64 0, i32 9
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, %5
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = sdiv i32 %5, %7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i32 [ %10, %9 ], [ 1, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkSamplerD2Ev(%class.SkSampler*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkBmpRLESamplerD0Ev(%class.SkBmpRLESampler*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %class.SkBmpRLESampler* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN15SkBmpRLESampler12onSetSampleXEi(%class.SkBmpRLESampler*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBmpRLESampler, %class.SkBmpRLESampler* %0, i64 0, i32 1
  %4 = load %class.SkBmpRLECodec*, %class.SkBmpRLECodec** %3, align 8
  %5 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %4, i64 0, i32 9
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %class.SkBmpRLECodec, %class.SkBmpRLECodec* %4, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, %1
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = sdiv i32 %7, %1
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ 1, %2 ]
  ret i32 %12
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{i32 (i32, i32, i32, i32)* @_ZL18SkPackARGB_as_BGRAjjjj, i32 (i32, i32, i32, i32)* @_ZL18SkPackARGB_as_RGBAjjjj}
!7 = distinct !{!7, !8, !3}
!8 = !{!"llvm.loop.unroll.runtime.disable"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!11 = distinct !{!11, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!12 = distinct !{!12, !13, !"_ZNK11SkImageInfo6makeWHEii: argument 0"}
!13 = distinct !{!13, !"_ZNK11SkImageInfo6makeWHEii"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!16 = distinct !{!16, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!17 = distinct !{!17, !18, !"_ZNK11SkImageInfo6makeWHEii: argument 0"}
!18 = distinct !{!18, !"_ZNK11SkImageInfo6makeWHEii"}
!19 = !{!20, !22, !24}
!20 = distinct !{!20, !21, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!21 = distinct !{!21, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!22 = distinct !{!22, !23, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!23 = distinct !{!23, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!24 = distinct !{!24, !25, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!25 = distinct !{!25, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!28 = distinct !{!28, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
