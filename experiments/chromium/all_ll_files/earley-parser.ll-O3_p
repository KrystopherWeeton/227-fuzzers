; ModuleID = '../../v8/src/torque/earley-parser.cc'
source_filename = "../../v8/src/torque/earley-parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.v8::internal::torque::ParseResult" }
%"class.v8::internal::torque::ParseResult" = type { %"class.std::__1::unique_ptr.13" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::internal::torque::ParseResultHolderBase"* }
%"class.v8::internal::torque::ParseResultHolderBase" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.v8::internal::torque::Rule" = type { %"class.v8::internal::torque::Symbol"*, %"class.std::__1::vector.4", void (%"class.v8::base::Optional"*, %"class.v8::internal::torque::ParseResultIterator"*)* }
%"class.v8::internal::torque::Symbol" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::torque::Rule"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.v8::internal::torque::Symbol"**, %"class.v8::internal::torque::Symbol"**, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.v8::internal::torque::Symbol"** }
%"class.v8::internal::torque::ParseResultIterator" = type { %"class.std::__1::vector.11", i64, %"struct.v8::internal::torque::MatchedInput" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.v8::internal::torque::ParseResult"*, %"class.v8::internal::torque::ParseResult"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.v8::internal::torque::ParseResult"* }
%"struct.v8::internal::torque::MatchedInput" = type <{ i8*, i8*, %"struct.v8::internal::torque::SourcePosition", [4 x i8] }>
%"struct.v8::internal::torque::SourcePosition" = type { %"class.v8::internal::torque::SourceId", %"struct.v8::internal::torque::LineAndColumn", %"struct.v8::internal::torque::LineAndColumn" }
%"class.v8::internal::torque::SourceId" = type { i32 }
%"struct.v8::internal::torque::LineAndColumn" = type { i32, i32 }
%"class.v8::internal::torque::Item" = type { %"class.v8::internal::torque::Rule"*, i64, i64, i64, %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"* }
%"struct.v8::internal::torque::LexerResult" = type { %"class.std::__1::vector.4", %"class.std::__1::vector.24" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.v8::internal::torque::MatchedInput"*, %"struct.v8::internal::torque::MatchedInput"*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.v8::internal::torque::MatchedInput"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"**, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.v8::internal::torque::Item"** }
%"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope" = type { %"struct.v8::internal::torque::SourcePosition", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.40 }
%union.anon.40 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.v8::internal::torque::MessageBuilder" = type { %"struct.v8::internal::torque::TorqueMessage", %"class.std::__1::vector.147" }
%"struct.v8::internal::torque::TorqueMessage" = type <{ %"class.std::__1::basic_string", %"class.v8::base::Optional.140", i32, [4 x i8] }>
%"class.v8::base::Optional.140" = type { %"class.v8::base::internal::OptionalBase.141" }
%"class.v8::base::internal::OptionalBase.141" = type { %"struct.v8::base::internal::OptionalStorage.142" }
%"struct.v8::base::internal::OptionalStorage.142" = type { %"struct.v8::base::internal::OptionalStorageBase.143" }
%"struct.v8::base::internal::OptionalStorageBase.143" = type { i8, %union.anon.144 }
%union.anon.144 = type { %"struct.v8::internal::torque::SourcePosition" }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"*, %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"struct.v8::internal::torque::TorqueMessage"* }
%"class.v8::internal::torque::Lexer" = type { i1 (i8**)*, %"class.std::__1::map", %"class.std::__1::map.52" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { i64 }
%"class.std::__1::map.52" = type { %"class.std::__1::__tree.53" }
%"class.std::__1::__tree.53" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope" = type { %"class.v8::internal::torque::SourceId", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.66", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68", %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"struct.std::__1::pair.127"* }
%"struct.std::__1::pair.127" = type { i64, %"class.v8::internal::torque::Symbol"* }
%"class.std::__1::tuple.179" = type { i8 }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.v8::internal::torque::Item"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.111", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__tree_node.163" = type { %"class.std::__1::__tree_node_base.base", %"class.v8::internal::torque::Item"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__tree.118" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::length_error" = type { %"class.std::logic_error" }
%"class.std::logic_error" = type { %"class.std::exception", %"class.std::__1::__libcpp_refstring" }
%"class.std::exception" = type { i32 (...)** }
%"class.std::__1::__libcpp_refstring" = type { i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorIN2v88internal6torque11ParseResultENS_9allocatorIS4_EEED2Ev = comdat any

$_ZN2v88internal6torque6Symbol7AddRuleERKNS1_4RuleE = comdat any

$_ZN2v88internal6torque11ReportErrorIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvDpOT_ = comdat any

$_ZN2v88internal6torque13DefaultActionEPNS1_19ParseResultIteratorE = comdat any

$__clang_call_terminate = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN2v88internal6torque4RuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_ = comdat any

$_ZNSt3__120__throw_length_errorEPKc = comdat any

$_ZNSt12length_errorC2EPKc = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN2v88internal6torque11ParseResultENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej = comdat any

$_ZN2v88internal6torque14MessageBuilderD2Ev = comdat any

$_ZN2v88internal6torque8ToStringIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEES9_DpOT_ = comdat any

$_ZNSt3__16vectorIN2v88internal6torque13TorqueMessageENS_9allocatorIS4_EEED2Ev = comdat any

$_ZN2v88internal6torque13TorqueMessageD2Ev = comdat any

$_ZNSt3__16__treeIPKN2v88internal6torque4ItemENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairImPN2v88internal6torque6SymbolEEENS_3setIPKNS5_4ItemENS_4lessISC_EENS_9allocatorISC_EEEEEENS_22__unordered_map_hasherIS8_SI_NS3_4base4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_SI_SO_SM_Lb1EEENSF_ISI_EEE25__emplace_unique_key_argsIS8_JRKNS_21piecewise_construct_tENS_5tupleIJOS8_EEENSY_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISI_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairImPN2v88internal6torque6SymbolEEENS_3setIPKNS5_4ItemENS_4lessISC_EENS_9allocatorISC_EEEEEENS_22__unordered_map_hasherIS8_SI_NS3_4base4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_SI_SO_SM_Lb1EEENSF_ISI_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairImPN2v88internal6torque6SymbolEEENS_3setIPKNS5_4ItemENS_4lessISC_EENS_9allocatorISC_EEEEEENS_22__unordered_map_hasherIS8_SI_NS3_4base4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_SI_SO_SM_Lb1EEENSF_ISI_EEE8__rehashEm = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_ = comdat any

@.str = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"Ambiguous grammer rules for \22\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"\22:\0A   \00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"\0Avs\0A   \00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"  ...\0Avs\0A   \00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"  ...\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"Lexer Error: unknown token \00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"unexpected token \22\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"unexpected end of input\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"Parser Error: \00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.12 = private unnamed_addr constant [35 x i8] c"start.pos.source == end.pos.source\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"results_.size() == i_\00", align 1
@.str.14 = private unnamed_addr constant [68 x i8] c"allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size\00", align 1
@_ZTISt12length_error = external constant i8*
@_ZTVSt12length_error = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

; Function Attrs: ssp uwtable
define hidden void @_ZNK2v88internal6torque4Rule9RunActionEPKNS1_4ItemERKNS1_11LexerResultE(%"class.v8::base::Optional"* noalias sret, %"class.v8::internal::torque::Rule"* nocapture readonly, %"class.v8::internal::torque::Item"* nocapture readonly, %"struct.v8::internal::torque::LexerResult"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::__1::vector.11", align 16
  %6 = alloca %"class.std::__1::vector.31", align 8
  %7 = alloca %"class.v8::base::Optional", align 8
  %8 = alloca %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", align 8
  %9 = alloca %"class.v8::internal::torque::ParseResultIterator", align 16
  %10 = bitcast %"class.std::__1::vector.11"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 24, i1 false) #16
  %11 = bitcast %"class.std::__1::vector.31"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  invoke void @_ZNK2v88internal6torque4Item8ChildrenEv(%"class.std::__1::vector.31"* nonnull sret %6, %"class.v8::internal::torque::Item"* %2)
          to label %12 unwind label %55

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %6, i64 0, i32 0, i32 0
  %14 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %6, i64 0, i32 0, i32 1
  %16 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %15, align 8
  %17 = icmp eq %"class.v8::internal::torque::Item"** %14, %16
  br i1 %17, label %29, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %5, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.v8::internal::torque::ParseResult"* %20 to i64*
  %25 = bitcast %"class.v8::internal::torque::ParseResult"** %21 to i64*
  %26 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %59

27:                                               ; preds = %109
  %28 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %13, align 8
  br label %29

29:                                               ; preds = %27, %12
  %30 = phi %"class.v8::internal::torque::Item"** [ %28, %27 ], [ %14, %12 ]
  %31 = icmp eq %"class.v8::internal::torque::Item"** %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = ptrtoint %"class.v8::internal::torque::Item"** %30 to i64
  %34 = bitcast %"class.v8::internal::torque::Item"*** %15 to i64*
  store i64 %33, i64* %34, align 8
  %35 = bitcast %"class.v8::internal::torque::Item"** %30 to i8*
  call void @_ZdlPv(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  %37 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %2, i64 0, i32 2
  %38 = load i64, i64* %37, align 8, !noalias !2
  %39 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %3, i64 0, i32 1, i32 0, i32 0
  %40 = load %"struct.v8::internal::torque::MatchedInput"*, %"struct.v8::internal::torque::MatchedInput"** %39, align 8, !noalias !2
  %41 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %40, i64 %38
  %42 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %2, i64 0, i32 3
  %43 = load i64, i64* %42, align 8, !noalias !2
  %44 = icmp eq i64 %38, %43
  %45 = add i64 %43, -1
  %46 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %40, i64 %45
  %47 = select i1 %44, %"struct.v8::internal::torque::MatchedInput"* %41, %"struct.v8::internal::torque::MatchedInput"* %46
  %48 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %40, i64 %38, i32 2, i32 0, i32 0
  %49 = load i32, i32* %48, align 4, !noalias !2
  %50 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %47, i64 0, i32 2, i32 0, i32 0
  %51 = load i32, i32* %50, align 4, !noalias !2
  %52 = icmp eq i32 %49, %51
  br i1 %52, label %122, label %53, !prof !5

53:                                               ; preds = %36
  invoke void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0)) #18
          to label %54 unwind label %245

54:                                               ; preds = %53
  unreachable

55:                                               ; preds = %4
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  %58 = extractvalue { i8*, i32 } %56, 1
  br label %305

59:                                               ; preds = %18, %109
  %60 = phi %"class.v8::internal::torque::Item"** [ %14, %18 ], [ %110, %109 ]
  %61 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %60, align 8
  %62 = icmp eq %"class.v8::internal::torque::Item"* %61, null
  br i1 %62, label %109, label %63

63:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #16
  %64 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %61, i64 0, i32 0
  %65 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %64, align 8
  invoke void @_ZNK2v88internal6torque4Rule9RunActionEPKNS1_4ItemERKNS1_11LexerResultE(%"class.v8::base::Optional"* nonnull sret %7, %"class.v8::internal::torque::Rule"* %65, %"class.v8::internal::torque::Item"* nonnull %61, %"struct.v8::internal::torque::LexerResult"* dereferenceable(48) %3)
          to label %66 unwind label %79

66:                                               ; preds = %63
  %67 = load i8, i8* %19, align 8, !range !6
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %108, label %69

69:                                               ; preds = %66
  %70 = load %"class.v8::internal::torque::ParseResult"*, %"class.v8::internal::torque::ParseResult"** %21, align 8
  %71 = load %"class.v8::internal::torque::ParseResult"*, %"class.v8::internal::torque::ParseResult"** %22, align 16
  %72 = icmp ult %"class.v8::internal::torque::ParseResult"* %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %69
  %74 = load i64, i64* %24, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %23, align 8
  %75 = bitcast %"class.v8::internal::torque::ParseResult"* %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %70, i64 1
  %77 = ptrtoint %"class.v8::internal::torque::ParseResult"* %76 to i64
  store i64 %77, i64* %25, align 8
  br label %97

78:                                               ; preds = %69
  invoke void @_ZNSt3__16vectorIN2v88internal6torque11ParseResultENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.11"* nonnull %5, %"class.v8::internal::torque::ParseResult"* dereferenceable(8) %20)
          to label %97 unwind label %83

79:                                               ; preds = %63
  %80 = landingpad { i8*, i32 }
          cleanup
  %81 = extractvalue { i8*, i32 } %80, 0
  %82 = extractvalue { i8*, i32 } %80, 1
  br label %112

83:                                               ; preds = %78
  %84 = landingpad { i8*, i32 }
          cleanup
  %85 = extractvalue { i8*, i32 } %84, 0
  %86 = extractvalue { i8*, i32 } %84, 1
  %87 = load i8, i8* %19, align 8, !range !6
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %112, label %89

89:                                               ; preds = %83
  %90 = load %"class.v8::internal::torque::ParseResultHolderBase"*, %"class.v8::internal::torque::ParseResultHolderBase"** %26, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %26, align 8
  %91 = icmp eq %"class.v8::internal::torque::ParseResultHolderBase"* %90, null
  br i1 %91, label %112, label %92

92:                                               ; preds = %89
  %93 = bitcast %"class.v8::internal::torque::ParseResultHolderBase"* %90 to void (%"class.v8::internal::torque::ParseResultHolderBase"*)***
  %94 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)**, void (%"class.v8::internal::torque::ParseResultHolderBase"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %94, i64 1
  %96 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %95, align 8
  call void %96(%"class.v8::internal::torque::ParseResultHolderBase"* nonnull %90) #16
  br label %112

97:                                               ; preds = %73, %78
  %98 = load i8, i8* %19, align 8
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %108, label %100

100:                                              ; preds = %97
  %101 = load %"class.v8::internal::torque::ParseResultHolderBase"*, %"class.v8::internal::torque::ParseResultHolderBase"** %26, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %26, align 8
  %102 = icmp eq %"class.v8::internal::torque::ParseResultHolderBase"* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %100
  %104 = bitcast %"class.v8::internal::torque::ParseResultHolderBase"* %101 to void (%"class.v8::internal::torque::ParseResultHolderBase"*)***
  %105 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)**, void (%"class.v8::internal::torque::ParseResultHolderBase"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %105, i64 1
  %107 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %106, align 8
  call void %107(%"class.v8::internal::torque::ParseResultHolderBase"* nonnull %101) #16
  br label %108

108:                                              ; preds = %66, %97, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #16
  br label %109

109:                                              ; preds = %59, %108
  %110 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %60, i64 1
  %111 = icmp eq %"class.v8::internal::torque::Item"** %110, %16
  br i1 %111, label %27, label %59

112:                                              ; preds = %92, %89, %83, %79
  %113 = phi i32 [ %82, %79 ], [ %86, %83 ], [ %86, %89 ], [ %86, %92 ]
  %114 = phi i8* [ %81, %79 ], [ %85, %83 ], [ %85, %89 ], [ %85, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #16
  %115 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %13, align 8
  %116 = icmp eq %"class.v8::internal::torque::Item"** %115, null
  br i1 %116, label %121, label %117

117:                                              ; preds = %112
  %118 = ptrtoint %"class.v8::internal::torque::Item"** %115 to i64
  %119 = bitcast %"class.v8::internal::torque::Item"*** %15 to i64*
  store i64 %118, i64* %119, align 8
  %120 = bitcast %"class.v8::internal::torque::Item"** %115 to i8*
  call void @_ZdlPv(i8* %120) #17
  br label %121

121:                                              ; preds = %112, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  br label %305

122:                                              ; preds = %36
  %123 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %40, i64 %38, i32 2, i32 1
  %124 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %123 to i64*
  %125 = load i64, i64* %124, align 4, !noalias !2
  %126 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %47, i64 0, i32 2, i32 2
  %127 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %126 to i64*
  %128 = load i64, i64* %127, align 4, !noalias !2
  %129 = bitcast %"struct.v8::internal::torque::MatchedInput"* %41 to i64*
  %130 = load i64, i64* %129, align 8, !noalias !2
  %131 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %47, i64 0, i32 1
  %132 = bitcast i8** %131 to i64*
  %133 = load i64, i64* %132, align 8, !noalias !2
  %134 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %134) #16
  %135 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 %49, i32* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %8, i64 0, i32 0, i32 1
  %137 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %136 to i64*
  store i64 %125, i64* %137, align 4
  %138 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %8, i64 0, i32 0, i32 2
  %139 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %138 to i64*
  store i64 %128, i64* %139, align 4
  %140 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %141 unwind label %249

141:                                              ; preds = %122
  %142 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %8, i64 0, i32 1
  %143 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %140 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %142 to i64*
  store i64 %144, i64* %145, align 8
  %146 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %147 unwind label %249

147:                                              ; preds = %141
  store %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %8, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %146, align 8
  %148 = bitcast %"class.v8::internal::torque::ParseResultIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %148) #16
  %149 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %5, i64 0, i32 0, i32 1
  %150 = bitcast %"class.std::__1::vector.11"* %5 to <2 x i64>*
  %151 = load <2 x i64>, <2 x i64>* %150, align 16
  %152 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %153 = bitcast %"class.v8::internal::torque::ParseResult"** %152 to i64*
  %154 = load i64, i64* %153, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 24, i1 false) #16
  %155 = bitcast %"class.v8::internal::torque::ParseResultIterator"* %9 to i64*
  %156 = getelementptr inbounds %"class.v8::internal::torque::ParseResultIterator", %"class.v8::internal::torque::ParseResultIterator"* %9, i64 0, i32 0, i32 0, i32 1
  %157 = bitcast %"class.v8::internal::torque::ParseResult"** %156 to i64*
  %158 = bitcast %"class.v8::internal::torque::ParseResultIterator"* %9 to <2 x i64>*
  store <2 x i64> %151, <2 x i64>* %158, align 16
  %159 = getelementptr inbounds %"class.v8::internal::torque::ParseResultIterator", %"class.v8::internal::torque::ParseResultIterator"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %160 = bitcast %"class.v8::internal::torque::ParseResult"** %159 to i64*
  store i64 %154, i64* %160, align 16
  %161 = getelementptr inbounds %"class.v8::internal::torque::ParseResultIterator", %"class.v8::internal::torque::ParseResultIterator"* %9, i64 0, i32 1
  store i64 0, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::torque::ParseResultIterator", %"class.v8::internal::torque::ParseResultIterator"* %9, i64 0, i32 2
  %163 = bitcast %"struct.v8::internal::torque::MatchedInput"* %162 to i64*
  store i64 %130, i64* %163, align 16
  %164 = getelementptr inbounds %"class.v8::internal::torque::ParseResultIterator", %"class.v8::internal::torque::ParseResultIterator"* %9, i64 0, i32 2, i32 1
  %165 = bitcast i8** %164 to i64*
  store i64 %133, i64* %165, align 8
  %166 = getelementptr inbounds %"class.v8::internal::torque::ParseResultIterator", %"class.v8::internal::torque::ParseResultIterator"* %9, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 %49, i32* %166, align 16
  %167 = getelementptr inbounds %"class.v8::internal::torque::ParseResultIterator", %"class.v8::internal::torque::ParseResultIterator"* %9, i64 0, i32 2, i32 2, i32 1
  %168 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %167 to i64*
  store i64 %125, i64* %168, align 4
  %169 = getelementptr inbounds %"class.v8::internal::torque::ParseResultIterator", %"class.v8::internal::torque::ParseResultIterator"* %9, i64 0, i32 2, i32 2, i32 2
  %170 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %169 to i64*
  store i64 %128, i64* %170, align 4
  %171 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %1, i64 0, i32 2
  %172 = load void (%"class.v8::base::Optional"*, %"class.v8::internal::torque::ParseResultIterator"*)*, void (%"class.v8::base::Optional"*, %"class.v8::internal::torque::ParseResultIterator"*)** %171, align 8
  invoke void %172(%"class.v8::base::Optional"* sret %0, %"class.v8::internal::torque::ParseResultIterator"* nonnull %9)
          to label %173 unwind label %253

173:                                              ; preds = %147
  %174 = getelementptr inbounds %"class.v8::internal::torque::ParseResultIterator", %"class.v8::internal::torque::ParseResultIterator"* %9, i64 0, i32 0
  %175 = load i64, i64* %157, align 8
  %176 = load i64, i64* %155, align 16
  %177 = sub i64 %175, %176
  %178 = ashr exact i64 %177, 3
  %179 = load i64, i64* %161, align 8
  %180 = icmp eq i64 %178, %179
  %181 = inttoptr i64 %176 to %"class.v8::internal::torque::ParseResult"*
  %182 = inttoptr i64 %175 to %"class.v8::internal::torque::ParseResult"*
  br i1 %180, label %188, label %183, !prof !5

183:                                              ; preds = %173
  invoke void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0)) #18
          to label %184 unwind label %185

184:                                              ; preds = %183
  unreachable

185:                                              ; preds = %183
  %186 = landingpad { i8*, i32 }
          catch i8* null
  %187 = extractvalue { i8*, i32 } %186, 0
  call void @_ZNSt3__16vectorIN2v88internal6torque11ParseResultENS_9allocatorIS4_EEED2Ev(%"class.std::__1::vector.11"* nonnull %174) #16
  call void @__clang_call_terminate(i8* %187) #19
  unreachable

188:                                              ; preds = %173
  %189 = icmp eq i64 %176, 0
  br i1 %189, label %211, label %190

190:                                              ; preds = %188
  %191 = inttoptr i64 %176 to i8*
  %192 = icmp eq %"class.v8::internal::torque::ParseResult"* %182, %181
  br i1 %192, label %209, label %193

193:                                              ; preds = %190, %204
  %194 = phi %"class.v8::internal::torque::ParseResult"* [ %195, %204 ], [ %182, %190 ]
  %195 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %194, i64 -1
  %196 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %195, i64 0, i32 0, i32 0, i32 0, i32 0
  %197 = load %"class.v8::internal::torque::ParseResultHolderBase"*, %"class.v8::internal::torque::ParseResultHolderBase"** %196, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %196, align 8
  %198 = icmp eq %"class.v8::internal::torque::ParseResultHolderBase"* %197, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %193
  %200 = bitcast %"class.v8::internal::torque::ParseResultHolderBase"* %197 to void (%"class.v8::internal::torque::ParseResultHolderBase"*)***
  %201 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)**, void (%"class.v8::internal::torque::ParseResultHolderBase"*)*** %200, align 8
  %202 = getelementptr inbounds void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %201, i64 1
  %203 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %202, align 8
  call void %203(%"class.v8::internal::torque::ParseResultHolderBase"* nonnull %197) #16
  br label %204

204:                                              ; preds = %199, %193
  %205 = icmp eq %"class.v8::internal::torque::ParseResult"* %195, %181
  br i1 %205, label %206, label %193

206:                                              ; preds = %204
  %207 = bitcast %"class.v8::internal::torque::ParseResultIterator"* %9 to i8**
  %208 = load i8*, i8** %207, align 16
  br label %209

209:                                              ; preds = %206, %190
  %210 = phi i8* [ %208, %206 ], [ %191, %190 ]
  store %"class.v8::internal::torque::ParseResult"* %181, %"class.v8::internal::torque::ParseResult"** %156, align 8
  call void @_ZdlPv(i8* %210) #17
  br label %211

211:                                              ; preds = %188, %209
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %148) #16
  %212 = load i64, i64* %145, align 8
  %213 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %217 unwind label %214

214:                                              ; preds = %211
  %215 = landingpad { i8*, i32 }
          catch i8* null
  %216 = extractvalue { i8*, i32 } %215, 0
  call void @__clang_call_terminate(i8* %216) #19
  unreachable

217:                                              ; preds = %211
  %218 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %213 to i64*
  store i64 %212, i64* %218, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134) #16
  %219 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %5, i64 0, i32 0, i32 0
  %220 = load %"class.v8::internal::torque::ParseResult"*, %"class.v8::internal::torque::ParseResult"** %219, align 16
  %221 = icmp eq %"class.v8::internal::torque::ParseResult"* %220, null
  br i1 %221, label %244, label %222

222:                                              ; preds = %217
  %223 = bitcast %"class.v8::internal::torque::ParseResult"* %220 to i8*
  %224 = load %"class.v8::internal::torque::ParseResult"*, %"class.v8::internal::torque::ParseResult"** %149, align 8
  %225 = icmp eq %"class.v8::internal::torque::ParseResult"* %224, %220
  br i1 %225, label %242, label %226

226:                                              ; preds = %222, %237
  %227 = phi %"class.v8::internal::torque::ParseResult"* [ %228, %237 ], [ %224, %222 ]
  %228 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %227, i64 -1
  %229 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %228, i64 0, i32 0, i32 0, i32 0, i32 0
  %230 = load %"class.v8::internal::torque::ParseResultHolderBase"*, %"class.v8::internal::torque::ParseResultHolderBase"** %229, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %229, align 8
  %231 = icmp eq %"class.v8::internal::torque::ParseResultHolderBase"* %230, null
  br i1 %231, label %237, label %232

232:                                              ; preds = %226
  %233 = bitcast %"class.v8::internal::torque::ParseResultHolderBase"* %230 to void (%"class.v8::internal::torque::ParseResultHolderBase"*)***
  %234 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)**, void (%"class.v8::internal::torque::ParseResultHolderBase"*)*** %233, align 8
  %235 = getelementptr inbounds void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %234, i64 1
  %236 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %235, align 8
  call void %236(%"class.v8::internal::torque::ParseResultHolderBase"* nonnull %230) #16
  br label %237

237:                                              ; preds = %232, %226
  %238 = icmp eq %"class.v8::internal::torque::ParseResult"* %228, %220
  br i1 %238, label %239, label %226

239:                                              ; preds = %237
  %240 = bitcast %"class.std::__1::vector.11"* %5 to i8**
  %241 = load i8*, i8** %240, align 16
  br label %242

242:                                              ; preds = %239, %222
  %243 = phi i8* [ %241, %239 ], [ %223, %222 ]
  store %"class.v8::internal::torque::ParseResult"* %220, %"class.v8::internal::torque::ParseResult"** %149, align 8
  call void @_ZdlPv(i8* %243) #17
  br label %244

244:                                              ; preds = %217, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  ret void

245:                                              ; preds = %53
  %246 = landingpad { i8*, i32 }
          cleanup
  %247 = extractvalue { i8*, i32 } %246, 0
  %248 = extractvalue { i8*, i32 } %246, 1
  br label %305

249:                                              ; preds = %141, %122
  %250 = landingpad { i8*, i32 }
          cleanup
  %251 = extractvalue { i8*, i32 } %250, 0
  %252 = extractvalue { i8*, i32 } %250, 1
  br label %302

253:                                              ; preds = %147
  %254 = landingpad { i8*, i32 }
          cleanup
  %255 = extractvalue { i8*, i32 } %254, 0
  %256 = extractvalue { i8*, i32 } %254, 1
  %257 = getelementptr inbounds %"class.v8::internal::torque::ParseResultIterator", %"class.v8::internal::torque::ParseResultIterator"* %9, i64 0, i32 0
  %258 = load i64, i64* %157, align 8
  %259 = load i64, i64* %155, align 16
  %260 = sub i64 %258, %259
  %261 = ashr exact i64 %260, 3
  %262 = load i64, i64* %161, align 8
  %263 = icmp eq i64 %261, %262
  %264 = inttoptr i64 %259 to %"class.v8::internal::torque::ParseResult"*
  %265 = inttoptr i64 %258 to %"class.v8::internal::torque::ParseResult"*
  br i1 %263, label %271, label %266, !prof !5

266:                                              ; preds = %253
  invoke void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0)) #18
          to label %267 unwind label %268

267:                                              ; preds = %266
  unreachable

268:                                              ; preds = %266
  %269 = landingpad { i8*, i32 }
          catch i8* null
  %270 = extractvalue { i8*, i32 } %269, 0
  call void @_ZNSt3__16vectorIN2v88internal6torque11ParseResultENS_9allocatorIS4_EEED2Ev(%"class.std::__1::vector.11"* nonnull %257) #16
  call void @__clang_call_terminate(i8* %270) #19
  unreachable

271:                                              ; preds = %253
  %272 = icmp eq i64 %259, 0
  br i1 %272, label %294, label %273

273:                                              ; preds = %271
  %274 = inttoptr i64 %259 to i8*
  %275 = icmp eq %"class.v8::internal::torque::ParseResult"* %265, %264
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %287
  %277 = phi %"class.v8::internal::torque::ParseResult"* [ %278, %287 ], [ %265, %273 ]
  %278 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %277, i64 -1
  %279 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %278, i64 0, i32 0, i32 0, i32 0, i32 0
  %280 = load %"class.v8::internal::torque::ParseResultHolderBase"*, %"class.v8::internal::torque::ParseResultHolderBase"** %279, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %279, align 8
  %281 = icmp eq %"class.v8::internal::torque::ParseResultHolderBase"* %280, null
  br i1 %281, label %287, label %282

282:                                              ; preds = %276
  %283 = bitcast %"class.v8::internal::torque::ParseResultHolderBase"* %280 to void (%"class.v8::internal::torque::ParseResultHolderBase"*)***
  %284 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)**, void (%"class.v8::internal::torque::ParseResultHolderBase"*)*** %283, align 8
  %285 = getelementptr inbounds void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %284, i64 1
  %286 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %285, align 8
  call void %286(%"class.v8::internal::torque::ParseResultHolderBase"* nonnull %280) #16
  br label %287

287:                                              ; preds = %282, %276
  %288 = icmp eq %"class.v8::internal::torque::ParseResult"* %278, %264
  br i1 %288, label %289, label %276

289:                                              ; preds = %287
  %290 = bitcast %"class.v8::internal::torque::ParseResultIterator"* %9 to i8**
  %291 = load i8*, i8** %290, align 16
  br label %292

292:                                              ; preds = %289, %273
  %293 = phi i8* [ %291, %289 ], [ %274, %273 ]
  store %"class.v8::internal::torque::ParseResult"* %264, %"class.v8::internal::torque::ParseResult"** %156, align 8
  call void @_ZdlPv(i8* %293) #17
  br label %294

294:                                              ; preds = %271, %292
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %148) #16
  %295 = load i64, i64* %145, align 8
  %296 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %300 unwind label %297

297:                                              ; preds = %294
  %298 = landingpad { i8*, i32 }
          catch i8* null
  %299 = extractvalue { i8*, i32 } %298, 0
  call void @__clang_call_terminate(i8* %299) #19
  unreachable

300:                                              ; preds = %294
  %301 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %296 to i64*
  store i64 %295, i64* %301, align 8
  br label %302

302:                                              ; preds = %300, %249
  %303 = phi i32 [ %256, %300 ], [ %252, %249 ]
  %304 = phi i8* [ %255, %300 ], [ %251, %249 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134) #16
  br label %305

305:                                              ; preds = %245, %302, %55, %121
  %306 = phi i32 [ %113, %121 ], [ %58, %55 ], [ %303, %302 ], [ %248, %245 ]
  %307 = phi i8* [ %114, %121 ], [ %57, %55 ], [ %304, %302 ], [ %247, %245 ]
  %308 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %5, i64 0, i32 0, i32 0
  %309 = load %"class.v8::internal::torque::ParseResult"*, %"class.v8::internal::torque::ParseResult"** %308, align 16
  %310 = icmp eq %"class.v8::internal::torque::ParseResult"* %309, null
  br i1 %310, label %334, label %311

311:                                              ; preds = %305
  %312 = bitcast %"class.v8::internal::torque::ParseResult"* %309 to i8*
  %313 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %5, i64 0, i32 0, i32 1
  %314 = load %"class.v8::internal::torque::ParseResult"*, %"class.v8::internal::torque::ParseResult"** %313, align 8
  %315 = icmp eq %"class.v8::internal::torque::ParseResult"* %314, %309
  br i1 %315, label %332, label %316

316:                                              ; preds = %311, %327
  %317 = phi %"class.v8::internal::torque::ParseResult"* [ %318, %327 ], [ %314, %311 ]
  %318 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %317, i64 -1
  %319 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %318, i64 0, i32 0, i32 0, i32 0, i32 0
  %320 = load %"class.v8::internal::torque::ParseResultHolderBase"*, %"class.v8::internal::torque::ParseResultHolderBase"** %319, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %319, align 8
  %321 = icmp eq %"class.v8::internal::torque::ParseResultHolderBase"* %320, null
  br i1 %321, label %327, label %322

322:                                              ; preds = %316
  %323 = bitcast %"class.v8::internal::torque::ParseResultHolderBase"* %320 to void (%"class.v8::internal::torque::ParseResultHolderBase"*)***
  %324 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)**, void (%"class.v8::internal::torque::ParseResultHolderBase"*)*** %323, align 8
  %325 = getelementptr inbounds void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %324, i64 1
  %326 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %325, align 8
  call void %326(%"class.v8::internal::torque::ParseResultHolderBase"* nonnull %320) #16
  br label %327

327:                                              ; preds = %322, %316
  %328 = icmp eq %"class.v8::internal::torque::ParseResult"* %318, %309
  br i1 %328, label %329, label %316

329:                                              ; preds = %327
  %330 = bitcast %"class.std::__1::vector.11"* %5 to i8**
  %331 = load i8*, i8** %330, align 16
  br label %332

332:                                              ; preds = %329, %311
  %333 = phi i8* [ %331, %329 ], [ %312, %311 ]
  store %"class.v8::internal::torque::ParseResult"* %309, %"class.v8::internal::torque::ParseResult"** %313, align 8
  call void @_ZdlPv(i8* %333) #17
  br label %334

334:                                              ; preds = %305, %332
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  %335 = insertvalue { i8*, i32 } undef, i8* %307, 0
  %336 = insertvalue { i8*, i32 } %335, i32 %306, 1
  resume { i8*, i32 } %336
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: ssp uwtable
define hidden void @_ZNK2v88internal6torque4Item8ChildrenEv(%"class.std::__1::vector.31"* noalias sret, %"class.v8::internal::torque::Item"* nocapture readonly) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = bitcast %"class.std::__1::vector.31"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #16
  %4 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %1, i64 0, i32 4
  %5 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %4, align 8
  %6 = icmp eq %"class.v8::internal::torque::Item"* %5, null
  br i1 %6, label %115, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.v8::internal::torque::Item"*** %8 to i64*
  %11 = bitcast %"class.std::__1::vector.31"* %0 to i64*
  %12 = bitcast %"class.v8::internal::torque::Item"*** %9 to i64*
  %13 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 0
  br label %31

14:                                               ; preds = %96
  %15 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %13, align 8
  %16 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %8, align 8
  %17 = icmp eq %"class.v8::internal::torque::Item"** %15, %16
  br i1 %17, label %115, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %16, i64 -1
  %20 = icmp ugt %"class.v8::internal::torque::Item"** %19, %15
  br i1 %20, label %21, label %115

21:                                               ; preds = %18, %21
  %22 = phi %"class.v8::internal::torque::Item"** [ %29, %21 ], [ %19, %18 ]
  %23 = phi %"class.v8::internal::torque::Item"** [ %28, %21 ], [ %15, %18 ]
  %24 = bitcast %"class.v8::internal::torque::Item"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.v8::internal::torque::Item"** %22 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %24, align 8
  store i64 %25, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %23, i64 1
  %29 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %22, i64 -1
  %30 = icmp ult %"class.v8::internal::torque::Item"** %28, %29
  br i1 %30, label %21, label %115

31:                                               ; preds = %101, %7
  %32 = phi i64 [ 0, %7 ], [ %104, %101 ]
  %33 = phi %"class.v8::internal::torque::Item"** [ null, %7 ], [ %103, %101 ]
  %34 = phi %"class.v8::internal::torque::Item"** [ null, %7 ], [ %102, %101 ]
  %35 = phi %"class.v8::internal::torque::Item"** [ %4, %7 ], [ %98, %101 ]
  %36 = phi %"class.v8::internal::torque::Item"* [ %1, %7 ], [ %97, %101 ]
  %37 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %36, i64 0, i32 5
  %38 = icmp eq %"class.v8::internal::torque::Item"** %34, %33
  br i1 %38, label %45, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.v8::internal::torque::Item"** %37 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.v8::internal::torque::Item"** %34 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %34, i64 1
  %44 = ptrtoint %"class.v8::internal::torque::Item"** %43 to i64
  store i64 %44, i64* %10, align 8
  br label %96

45:                                               ; preds = %31
  %46 = ptrtoint %"class.v8::internal::torque::Item"** %33 to i64
  %47 = load i64, i64* %11, align 8
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 3
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 2305843009213693951
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::vector.31"* %0 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #18
          to label %54 unwind label %108

54:                                               ; preds = %52
  unreachable

55:                                               ; preds = %45
  %56 = icmp ult i64 %49, 1152921504606846975
  br i1 %56, label %57, label %66

57:                                               ; preds = %55
  %58 = ashr exact i64 %48, 2
  %59 = icmp ult i64 %58, %50
  %60 = select i1 %59, i64 %50, i64 %58
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %72, label %62

62:                                               ; preds = %57
  %63 = icmp ugt i64 %60, 2305843009213693951
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  invoke void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.14, i64 0, i64 0)) #18
          to label %65 unwind label %108

65:                                               ; preds = %64
  unreachable

66:                                               ; preds = %62, %55
  %67 = phi i64 [ %60, %62 ], [ 2305843009213693951, %55 ]
  %68 = shl i64 %67, 3
  %69 = invoke i8* @_Znwm(i64 %68) #20
          to label %70 unwind label %105

70:                                               ; preds = %66
  %71 = bitcast i8* %69 to %"class.v8::internal::torque::Item"**
  br label %72

72:                                               ; preds = %70, %57
  %73 = phi i64 [ %67, %70 ], [ 0, %57 ]
  %74 = phi %"class.v8::internal::torque::Item"** [ %71, %70 ], [ null, %57 ]
  %75 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %74, i64 %49
  %76 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %74, i64 %73
  %77 = ptrtoint %"class.v8::internal::torque::Item"** %76 to i64
  %78 = bitcast %"class.v8::internal::torque::Item"** %37 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.v8::internal::torque::Item"** %75 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %75, i64 1
  %82 = ptrtoint %"class.v8::internal::torque::Item"** %81 to i64
  %83 = sub i64 %32, %47
  %84 = ashr exact i64 %83, 3
  %85 = sub nsw i64 0, %84
  %86 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %75, i64 %85
  %87 = ptrtoint %"class.v8::internal::torque::Item"** %86 to i64
  %88 = icmp sgt i64 %83, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %72
  %90 = bitcast %"class.v8::internal::torque::Item"** %86 to i8*
  %91 = inttoptr i64 %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 %83, i1 false) #16
  br label %92

92:                                               ; preds = %89, %72
  store i64 %87, i64* %11, align 8
  store i64 %82, i64* %10, align 8
  store i64 %77, i64* %12, align 8
  %93 = icmp eq i64 %47, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = inttoptr i64 %47 to i8*
  tail call void @_ZdlPv(i8* %95) #17
  br label %96

96:                                               ; preds = %94, %92, %39
  %97 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %35, align 8
  %98 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %97, i64 0, i32 4
  %99 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %98, align 8
  %100 = icmp eq %"class.v8::internal::torque::Item"* %99, null
  br i1 %100, label %14, label %101

101:                                              ; preds = %96
  %102 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %8, align 8
  %103 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %9, align 8
  %104 = ptrtoint %"class.v8::internal::torque::Item"** %102 to i64
  br label %31

105:                                              ; preds = %66
  %106 = landingpad { i8*, i32 }
          cleanup
  %107 = inttoptr i64 %47 to %"class.v8::internal::torque::Item"**
  br label %111

108:                                              ; preds = %52, %64
  %109 = landingpad { i8*, i32 }
          cleanup
  %110 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %13, align 8
  br label %111

111:                                              ; preds = %108, %105
  %112 = phi %"class.v8::internal::torque::Item"** [ %107, %105 ], [ %110, %108 ]
  %113 = phi { i8*, i32 } [ %106, %105 ], [ %109, %108 ]
  %114 = icmp eq %"class.v8::internal::torque::Item"** %112, null
  br i1 %114, label %119, label %116

115:                                              ; preds = %21, %2, %18, %14
  ret void

116:                                              ; preds = %111
  %117 = ptrtoint %"class.v8::internal::torque::Item"** %112 to i64
  store i64 %117, i64* %10, align 8
  %118 = bitcast %"class.v8::internal::torque::Item"** %112 to i8*
  tail call void @_ZdlPv(i8* %118) #17
  br label %119

119:                                              ; preds = %111, %116
  resume { i8*, i32 } %113
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal6torque11ParseResultENS_9allocatorIS4_EEED2Ev(%"class.std::__1::vector.11"*) unnamed_addr #2 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::internal::torque::ParseResult"*, %"class.v8::internal::torque::ParseResult"** %2, align 8
  %4 = icmp eq %"class.v8::internal::torque::ParseResult"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::internal::torque::ParseResult"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.v8::internal::torque::ParseResult"*, %"class.v8::internal::torque::ParseResult"** %7, align 8
  %9 = icmp eq %"class.v8::internal::torque::ParseResult"* %8, %3
  br i1 %9, label %26, label %10

10:                                               ; preds = %5, %21
  %11 = phi %"class.v8::internal::torque::ParseResult"* [ %12, %21 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %11, i64 -1
  %13 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::torque::ParseResultHolderBase"*, %"class.v8::internal::torque::ParseResultHolderBase"** %13, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %13, align 8
  %15 = icmp eq %"class.v8::internal::torque::ParseResultHolderBase"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.v8::internal::torque::ParseResultHolderBase"* %14 to void (%"class.v8::internal::torque::ParseResultHolderBase"*)***
  %18 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)**, void (%"class.v8::internal::torque::ParseResultHolderBase"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %18, i64 1
  %20 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %19, align 8
  tail call void %20(%"class.v8::internal::torque::ParseResultHolderBase"* nonnull %14) #16
  br label %21

21:                                               ; preds = %16, %10
  %22 = icmp eq %"class.v8::internal::torque::ParseResult"* %12, %3
  br i1 %22, label %23, label %10

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.11"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %5
  %27 = phi i8* [ %25, %23 ], [ %6, %5 ]
  store %"class.v8::internal::torque::ParseResult"* %3, %"class.v8::internal::torque::ParseResult"** %7, align 8
  tail call void @_ZdlPv(i8* %27) #17
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: ssp uwtable
define hidden dereferenceable(24) %"class.v8::internal::torque::Symbol"* @_ZN2v88internal6torque6SymbolaSESt16initializer_listINS1_4RuleEE(%"class.v8::internal::torque::Symbol"* returned, %"class.v8::internal::torque::Rule"*, i64) local_unnamed_addr #0 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.v8::internal::torque::Symbol", %"class.v8::internal::torque::Symbol"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::torque::Symbol", %"class.v8::internal::torque::Symbol"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr"* %7, %5
  br i1 %8, label %28, label %9

9:                                                ; preds = %3, %26
  %10 = phi %"class.std::__1::unique_ptr"* [ %11, %26 ], [ %7, %3 ]
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 -1
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %12, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %12, align 8
  %14 = icmp eq %"class.v8::internal::torque::Rule"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %13, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.v8::internal::torque::Symbol"**, %"class.v8::internal::torque::Symbol"*** %16, align 8
  %18 = icmp eq %"class.v8::internal::torque::Symbol"** %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = ptrtoint %"class.v8::internal::torque::Symbol"** %17 to i64
  %21 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %13, i64 0, i32 1, i32 0, i32 1
  %22 = bitcast %"class.v8::internal::torque::Symbol"*** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = bitcast %"class.v8::internal::torque::Symbol"** %17 to i8*
  tail call void @_ZdlPv(i8* %23) #17
  br label %24

24:                                               ; preds = %19, %15
  %25 = bitcast %"class.v8::internal::torque::Rule"* %13 to i8*
  tail call void @_ZdlPv(i8* %25) #17
  br label %26

26:                                               ; preds = %24, %9
  %27 = icmp eq %"class.std::__1::unique_ptr"* %11, %5
  br i1 %27, label %28, label %9

28:                                               ; preds = %26, %3
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %6, align 8
  %29 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %1, i64 %2
  %30 = icmp eq i64 %2, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %32, %28
  ret %"class.v8::internal::torque::Symbol"* %0

32:                                               ; preds = %28, %32
  %33 = phi %"class.v8::internal::torque::Rule"* [ %34, %32 ], [ %1, %28 ]
  tail call void @_ZN2v88internal6torque6Symbol7AddRuleERKNS1_4RuleE(%"class.v8::internal::torque::Symbol"* %0, %"class.v8::internal::torque::Rule"* dereferenceable(40) %33)
  %34 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %33, i64 1
  %35 = icmp eq %"class.v8::internal::torque::Rule"* %34, %29
  br i1 %35, label %31, label %32
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque6Symbol7AddRuleERKNS1_4RuleE(%"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Rule"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.v8::internal::torque::Symbol", %"class.v8::internal::torque::Symbol"* %0, i64 0, i32 0
  %5 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = tail call i8* @_Znwm(i64 40) #20
  %7 = bitcast %"class.v8::internal::torque::Rule"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8* %6 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 8
  %11 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %1, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #16
  %12 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %1, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::torque::Symbol"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.4"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %56, label %20

20:                                               ; preds = %2
  %21 = icmp ugt i64 %18, 2305843009213693951
  br i1 %21, label %22, label %25

22:                                               ; preds = %20
  %23 = bitcast i8* %10 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %23) #18
          to label %24 unwind label %45

24:                                               ; preds = %22
  unreachable

25:                                               ; preds = %20
  %26 = invoke i8* @_Znwm(i64 %17) #20
          to label %27 unwind label %45

27:                                               ; preds = %25
  %28 = bitcast i8* %26 to %"class.v8::internal::torque::Symbol"**
  %29 = getelementptr inbounds i8, i8* %6, i64 16
  %30 = bitcast i8* %29 to i8**
  store i8* %26, i8** %30, align 8
  %31 = bitcast i8* %10 to i8**
  store i8* %26, i8** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %28, i64 %18
  %33 = getelementptr inbounds i8, i8* %6, i64 24
  %34 = bitcast i8* %33 to %"class.v8::internal::torque::Symbol"***
  store %"class.v8::internal::torque::Symbol"** %32, %"class.v8::internal::torque::Symbol"*** %34, align 8
  %35 = bitcast i8* %29 to i64*
  %36 = ptrtoint i8* %26 to i64
  %37 = icmp sgt i64 %17, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %27
  %39 = lshr exact i64 %17, 3
  %40 = inttoptr i64 %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %40, i64 %17, i1 false) #16
  %41 = getelementptr inbounds %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %28, i64 %39
  %42 = ptrtoint %"class.v8::internal::torque::Symbol"** %41 to i64
  br label %43

43:                                               ; preds = %38, %27
  %44 = phi i64 [ %42, %38 ], [ %36, %27 ]
  store i64 %44, i64* %35, align 8
  br label %56

45:                                               ; preds = %25, %22
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = bitcast i8* %10 to %"class.v8::internal::torque::Symbol"***
  %48 = load %"class.v8::internal::torque::Symbol"**, %"class.v8::internal::torque::Symbol"*** %47, align 8
  %49 = icmp eq %"class.v8::internal::torque::Symbol"** %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = ptrtoint %"class.v8::internal::torque::Symbol"** %48 to i64
  %52 = getelementptr inbounds i8, i8* %6, i64 16
  %53 = bitcast i8* %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast %"class.v8::internal::torque::Symbol"** %48 to i8*
  tail call void @_ZdlPv(i8* %54) #17
  br label %55

55:                                               ; preds = %50, %45
  tail call void @_ZdlPv(i8* nonnull %6) #17
  resume { i8*, i32 } %46

56:                                               ; preds = %2, %43
  %57 = getelementptr inbounds i8, i8* %6, i64 32
  %58 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %1, i64 0, i32 2
  %59 = bitcast void (%"class.v8::base::Optional"*, %"class.v8::internal::torque::ParseResultIterator"*)** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8* %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %6, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::torque::Symbol", %"class.v8::internal::torque::Symbol"* %0, i64 0, i32 0, i32 0, i32 1
  %65 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::torque::Symbol", %"class.v8::internal::torque::Symbol"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %66, align 8
  %68 = icmp ult %"class.std::__1::unique_ptr"* %65, %67
  br i1 %68, label %69, label %75

69:                                               ; preds = %56
  %70 = ptrtoint i8* %6 to i64
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %62, align 8
  %71 = bitcast %"class.std::__1::unique_ptr"* %65 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %65, i64 1
  %73 = ptrtoint %"class.std::__1::unique_ptr"* %72 to i64
  %74 = bitcast %"class.std::__1::unique_ptr"** %64 to i64*
  store i64 %73, i64* %74, align 8
  br label %76

75:                                               ; preds = %56
  invoke void @_ZNSt3__16vectorINS_10unique_ptrIN2v88internal6torque4RuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector"* %4, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3)
          to label %76 unwind label %95

76:                                               ; preds = %69, %75
  %77 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %62, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %62, align 8
  %78 = icmp eq %"class.v8::internal::torque::Rule"* %77, null
  br i1 %78, label %90, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %77, i64 0, i32 1, i32 0, i32 0
  %81 = load %"class.v8::internal::torque::Symbol"**, %"class.v8::internal::torque::Symbol"*** %80, align 8
  %82 = icmp eq %"class.v8::internal::torque::Symbol"** %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = ptrtoint %"class.v8::internal::torque::Symbol"** %81 to i64
  %85 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %77, i64 0, i32 1, i32 0, i32 1
  %86 = bitcast %"class.v8::internal::torque::Symbol"*** %85 to i64*
  store i64 %84, i64* %86, align 8
  %87 = bitcast %"class.v8::internal::torque::Symbol"** %81 to i8*
  call void @_ZdlPv(i8* %87) #17
  br label %88

88:                                               ; preds = %83, %79
  %89 = bitcast %"class.v8::internal::torque::Rule"* %77 to i8*
  call void @_ZdlPv(i8* %89) #17
  br label %90

90:                                               ; preds = %76, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %91 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %64, align 8
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %91, i64 -1, i32 0, i32 0, i32 0
  %93 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %93, i64 0, i32 0
  store %"class.v8::internal::torque::Symbol"* %0, %"class.v8::internal::torque::Symbol"** %94, align 8
  ret void

95:                                               ; preds = %75
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %62, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %62, align 8
  %98 = icmp eq %"class.v8::internal::torque::Rule"* %97, null
  br i1 %98, label %110, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %97, i64 0, i32 1, i32 0, i32 0
  %101 = load %"class.v8::internal::torque::Symbol"**, %"class.v8::internal::torque::Symbol"*** %100, align 8
  %102 = icmp eq %"class.v8::internal::torque::Symbol"** %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %99
  %104 = ptrtoint %"class.v8::internal::torque::Symbol"** %101 to i64
  %105 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %97, i64 0, i32 1, i32 0, i32 1
  %106 = bitcast %"class.v8::internal::torque::Symbol"*** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = bitcast %"class.v8::internal::torque::Symbol"** %101 to i8*
  call void @_ZdlPv(i8* %107) #17
  br label %108

108:                                              ; preds = %103, %99
  %109 = bitcast %"class.v8::internal::torque::Rule"* %97 to i8*
  call void @_ZdlPv(i8* %109) #17
  br label %110

110:                                              ; preds = %95, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  resume { i8*, i32 } %96
}

; Function Attrs: ssp uwtable
define hidden void @_ZNK2v88internal6torque4Item15SplitByChildrenERKNS1_11LexerResultE(%"class.std::__1::basic_string"* noalias sret, %"class.v8::internal::torque::Item"* nocapture readonly, %"struct.v8::internal::torque::LexerResult"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::__1::vector.31", align 8
  %5 = alloca %"class.std::__1::basic_stringstream", align 8
  %6 = alloca %"class.std::__1::vector.31", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %1, i64 0, i32 0
  %9 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %9, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %9, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.v8::internal::torque::Symbol"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.4"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = icmp eq i64 %16, 8
  br i1 %17, label %18, label %32

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::vector.31"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #16
  call void @_ZNK2v88internal6torque4Item8ChildrenEv(%"class.std::__1::vector.31"* nonnull sret %4, %"class.v8::internal::torque::Item"* %1)
  %20 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %4, i64 0, i32 0, i32 0
  %21 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %20, align 8
  %22 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %21, align 8
  %23 = icmp eq %"class.v8::internal::torque::Item"** %21, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %18
  %25 = ptrtoint %"class.v8::internal::torque::Item"** %21 to i64
  %26 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %4, i64 0, i32 0, i32 1
  %27 = bitcast %"class.v8::internal::torque::Item"*** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.v8::internal::torque::Item"** %21 to i8*
  call void @_ZdlPv(i8* %28) #17
  br label %29

29:                                               ; preds = %18, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #16
  %30 = icmp eq %"class.v8::internal::torque::Item"* %22, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %29
  call void @_ZNK2v88internal6torque4Item15SplitByChildrenERKNS1_11LexerResultE(%"class.std::__1::basic_string"* sret %0, %"class.v8::internal::torque::Item"* nonnull %22, %"struct.v8::internal::torque::LexerResult"* dereferenceable(48) %2)
  br label %340

32:                                               ; preds = %29, %3
  %33 = bitcast %"class.std::__1::basic_stringstream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %33) #16
  call void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"* nonnull %5, i32 24)
  %34 = bitcast %"class.std::__1::vector.31"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #16
  invoke void @_ZNK2v88internal6torque4Item8ChildrenEv(%"class.std::__1::vector.31"* nonnull sret %6, %"class.v8::internal::torque::Item"* %1)
          to label %35 unwind label %62

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %6, i64 0, i32 0, i32 0
  %37 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %6, i64 0, i32 0, i32 1
  %39 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %38, align 8
  %40 = icmp eq %"class.v8::internal::torque::Item"** %37, %39
  br i1 %40, label %53, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 1
  %43 = bitcast %"class.std::__1::basic_ostream.base"* %42 to %"class.std::__1::basic_ostream"*
  %44 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %45 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %2, i64 0, i32 1, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  br label %66

51:                                               ; preds = %244
  %52 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %36, align 8
  br label %53

53:                                               ; preds = %51, %35
  %54 = phi %"class.v8::internal::torque::Item"** [ %52, %51 ], [ %37, %35 ]
  %55 = icmp eq %"class.v8::internal::torque::Item"** %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %53
  %57 = ptrtoint %"class.v8::internal::torque::Item"** %54 to i64
  %58 = bitcast %"class.v8::internal::torque::Item"*** %38 to i64*
  store i64 %57, i64* %58, align 8
  %59 = bitcast %"class.v8::internal::torque::Item"** %54 to i8*
  call void @_ZdlPv(i8* %59) #17
  br label %60

60:                                               ; preds = %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #16
  %61 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1
  invoke void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %61)
          to label %277 unwind label %304

62:                                               ; preds = %32
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  %65 = extractvalue { i8*, i32 } %63, 1
  br label %308

66:                                               ; preds = %41, %244
  %67 = phi i8 [ 1, %41 ], [ %245, %244 ]
  %68 = phi %"class.v8::internal::torque::Item"** [ %37, %41 ], [ %246, %244 ]
  %69 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %68, align 8
  %70 = icmp eq %"class.v8::internal::torque::Item"* %69, null
  br i1 %70, label %244, label %71

71:                                               ; preds = %66
  %72 = and i8 %67, 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %71
  %75 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2)
          to label %80 unwind label %76

76:                                               ; preds = %74
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = extractvalue { i8*, i32 } %77, 0
  %79 = extractvalue { i8*, i32 } %77, 1
  br label %267

80:                                               ; preds = %74, %71
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #16
  %81 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %69, i64 0, i32 2
  %82 = load i64, i64* %81, align 8, !noalias !7
  %83 = load %"struct.v8::internal::torque::MatchedInput"*, %"struct.v8::internal::torque::MatchedInput"** %45, align 8, !noalias !7
  %84 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %83, i64 %82
  %85 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %69, i64 0, i32 3
  %86 = load i64, i64* %85, align 8, !noalias !7
  %87 = icmp eq i64 %82, %86
  %88 = add i64 %86, -1
  %89 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %83, i64 %88
  %90 = select i1 %87, %"struct.v8::internal::torque::MatchedInput"* %84, %"struct.v8::internal::torque::MatchedInput"* %89
  %91 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %83, i64 %82, i32 2, i32 0, i32 0
  %92 = load i32, i32* %91, align 4, !noalias !7
  %93 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %90, i64 0, i32 2, i32 0, i32 0
  %94 = load i32, i32* %93, align 4, !noalias !7
  %95 = icmp eq i32 %92, %94
  br i1 %95, label %98, label %96, !prof !5

96:                                               ; preds = %80
  invoke void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0)) #18
          to label %97 unwind label %250

97:                                               ; preds = %96
  unreachable

98:                                               ; preds = %80
  %99 = bitcast %"struct.v8::internal::torque::MatchedInput"* %84 to i64*
  %100 = load i64, i64* %99, align 8, !noalias !7
  %101 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %90, i64 0, i32 1
  %102 = bitcast i8** %101 to i64*
  %103 = load i64, i64* %102, align 8, !noalias !7
  %104 = inttoptr i64 %100 to i8*
  %105 = inttoptr i64 %103 to i8*
  %106 = sub i64 %103, %100
  %107 = icmp ugt i64 %106, -17
  br i1 %107, label %108, label %111

108:                                              ; preds = %98
  %109 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  invoke void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %109) #18
          to label %110 unwind label %250

110:                                              ; preds = %108
  unreachable

111:                                              ; preds = %98
  %112 = icmp ult i64 %106, 23
  br i1 %112, label %113, label %115

113:                                              ; preds = %111
  %114 = trunc i64 %106 to i8
  store i8 %114, i8* %50, align 1, !alias.scope !10
  br label %121

115:                                              ; preds = %111
  %116 = add nuw i64 %106, 16
  %117 = and i64 %116, -16
  %118 = invoke i8* @_Znwm(i64 %117) #20
          to label %119 unwind label %248

119:                                              ; preds = %115
  store i8* %118, i8** %46, align 8, !alias.scope !10
  %120 = or i64 %117, -9223372036854775808
  store i64 %120, i64* %47, align 8, !alias.scope !10
  store i64 %106, i64* %48, align 8, !alias.scope !10
  br label %121

121:                                              ; preds = %119, %113
  %122 = phi i8* [ %44, %113 ], [ %118, %119 ]
  %123 = icmp eq i8* %104, %105
  br i1 %123, label %228, label %124

124:                                              ; preds = %121
  %125 = sub i64 0, %100
  %126 = getelementptr i8, i8* %105, i64 %125
  %127 = ptrtoint i8* %126 to i64
  %128 = icmp ult i8* %126, inttoptr (i64 32 to i8*)
  br i1 %128, label %218, label %129

129:                                              ; preds = %124
  %130 = sub i64 0, %100
  %131 = getelementptr i8, i8* %105, i64 %130
  %132 = ptrtoint i8* %131 to i64
  %133 = getelementptr i8, i8* %122, i64 %132
  %134 = icmp ult i8* %122, %105
  %135 = icmp ugt i8* %133, %104
  %136 = and i1 %134, %135
  br i1 %136, label %218, label %137

137:                                              ; preds = %129
  %138 = and i64 %127, -32
  %139 = getelementptr i8, i8* %104, i64 %138
  %140 = getelementptr i8, i8* %122, i64 %138
  %141 = add i64 %138, -32
  %142 = lshr exact i64 %141, 5
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 3
  %145 = icmp ult i64 %141, 96
  br i1 %145, label %197, label %146

146:                                              ; preds = %137
  %147 = sub nsw i64 %143, %144
  br label %148

148:                                              ; preds = %148, %146
  %149 = phi i64 [ 0, %146 ], [ %194, %148 ]
  %150 = phi i64 [ %147, %146 ], [ %195, %148 ]
  %151 = getelementptr i8, i8* %104, i64 %149
  %152 = getelementptr i8, i8* %122, i64 %149
  %153 = bitcast i8* %151 to <16 x i8>*
  %154 = load <16 x i8>, <16 x i8>* %153, align 1, !alias.scope !13
  %155 = getelementptr i8, i8* %151, i64 16
  %156 = bitcast i8* %155 to <16 x i8>*
  %157 = load <16 x i8>, <16 x i8>* %156, align 1, !alias.scope !13
  %158 = bitcast i8* %152 to <16 x i8>*
  store <16 x i8> %154, <16 x i8>* %158, align 1, !alias.scope !16, !noalias !13
  %159 = getelementptr i8, i8* %152, i64 16
  %160 = bitcast i8* %159 to <16 x i8>*
  store <16 x i8> %157, <16 x i8>* %160, align 1, !alias.scope !16, !noalias !13
  %161 = or i64 %149, 32
  %162 = getelementptr i8, i8* %104, i64 %161
  %163 = getelementptr i8, i8* %122, i64 %161
  %164 = bitcast i8* %162 to <16 x i8>*
  %165 = load <16 x i8>, <16 x i8>* %164, align 1, !alias.scope !13
  %166 = getelementptr i8, i8* %162, i64 16
  %167 = bitcast i8* %166 to <16 x i8>*
  %168 = load <16 x i8>, <16 x i8>* %167, align 1, !alias.scope !13
  %169 = bitcast i8* %163 to <16 x i8>*
  store <16 x i8> %165, <16 x i8>* %169, align 1, !alias.scope !16, !noalias !13
  %170 = getelementptr i8, i8* %163, i64 16
  %171 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %168, <16 x i8>* %171, align 1, !alias.scope !16, !noalias !13
  %172 = or i64 %149, 64
  %173 = getelementptr i8, i8* %104, i64 %172
  %174 = getelementptr i8, i8* %122, i64 %172
  %175 = bitcast i8* %173 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1, !alias.scope !13
  %177 = getelementptr i8, i8* %173, i64 16
  %178 = bitcast i8* %177 to <16 x i8>*
  %179 = load <16 x i8>, <16 x i8>* %178, align 1, !alias.scope !13
  %180 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %176, <16 x i8>* %180, align 1, !alias.scope !16, !noalias !13
  %181 = getelementptr i8, i8* %174, i64 16
  %182 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %179, <16 x i8>* %182, align 1, !alias.scope !16, !noalias !13
  %183 = or i64 %149, 96
  %184 = getelementptr i8, i8* %104, i64 %183
  %185 = getelementptr i8, i8* %122, i64 %183
  %186 = bitcast i8* %184 to <16 x i8>*
  %187 = load <16 x i8>, <16 x i8>* %186, align 1, !alias.scope !13
  %188 = getelementptr i8, i8* %184, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !13
  %191 = bitcast i8* %185 to <16 x i8>*
  store <16 x i8> %187, <16 x i8>* %191, align 1, !alias.scope !16, !noalias !13
  %192 = getelementptr i8, i8* %185, i64 16
  %193 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %193, align 1, !alias.scope !16, !noalias !13
  %194 = add i64 %149, 128
  %195 = add i64 %150, -4
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %148, !llvm.loop !18

197:                                              ; preds = %148, %137
  %198 = phi i64 [ 0, %137 ], [ %194, %148 ]
  %199 = icmp eq i64 %144, 0
  br i1 %199, label %216, label %200

200:                                              ; preds = %197, %200
  %201 = phi i64 [ %213, %200 ], [ %198, %197 ]
  %202 = phi i64 [ %214, %200 ], [ %144, %197 ]
  %203 = getelementptr i8, i8* %104, i64 %201
  %204 = getelementptr i8, i8* %122, i64 %201
  %205 = bitcast i8* %203 to <16 x i8>*
  %206 = load <16 x i8>, <16 x i8>* %205, align 1, !alias.scope !13
  %207 = getelementptr i8, i8* %203, i64 16
  %208 = bitcast i8* %207 to <16 x i8>*
  %209 = load <16 x i8>, <16 x i8>* %208, align 1, !alias.scope !13
  %210 = bitcast i8* %204 to <16 x i8>*
  store <16 x i8> %206, <16 x i8>* %210, align 1, !alias.scope !16, !noalias !13
  %211 = getelementptr i8, i8* %204, i64 16
  %212 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %209, <16 x i8>* %212, align 1, !alias.scope !16, !noalias !13
  %213 = add i64 %201, 32
  %214 = add i64 %202, -1
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %216, label %200, !llvm.loop !20

216:                                              ; preds = %200, %197
  %217 = icmp eq i64 %138, %127
  br i1 %217, label %228, label %218

218:                                              ; preds = %216, %129, %124
  %219 = phi i8* [ %104, %129 ], [ %104, %124 ], [ %139, %216 ]
  %220 = phi i8* [ %122, %129 ], [ %122, %124 ], [ %140, %216 ]
  br label %221

221:                                              ; preds = %218, %221
  %222 = phi i8* [ %225, %221 ], [ %219, %218 ]
  %223 = phi i8* [ %226, %221 ], [ %220, %218 ]
  %224 = load i8, i8* %222, align 1
  store i8 %224, i8* %223, align 1
  %225 = getelementptr inbounds i8, i8* %222, i64 1
  %226 = getelementptr inbounds i8, i8* %223, i64 1
  %227 = icmp eq i8* %225, %105
  br i1 %227, label %228, label %221, !llvm.loop !22

228:                                              ; preds = %221, %216, %121
  %229 = phi i8* [ %122, %121 ], [ %140, %216 ], [ %226, %221 ]
  store i8 0, i8* %229, align 1
  %230 = load i8, i8* %50, align 1
  %231 = icmp slt i8 %230, 0
  %232 = load i8*, i8** %46, align 8
  %233 = load i64, i64* %48, align 8
  %234 = zext i8 %230 to i64
  %235 = select i1 %231, i8* %232, i8* %44
  %236 = select i1 %231, i64 %233, i64 %234
  %237 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %43, i8* %235, i64 %236)
          to label %238 unwind label %256

238:                                              ; preds = %228
  %239 = load i8, i8* %50, align 1
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %241, label %243

241:                                              ; preds = %238
  %242 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %242) #17
  br label %243

243:                                              ; preds = %238, %241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #16
  br label %244

244:                                              ; preds = %66, %243
  %245 = phi i8 [ 0, %243 ], [ %67, %66 ]
  %246 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %68, i64 1
  %247 = icmp eq %"class.v8::internal::torque::Item"** %246, %39
  br i1 %247, label %51, label %66

248:                                              ; preds = %115
  %249 = landingpad { i8*, i32 }
          cleanup
  br label %252

250:                                              ; preds = %96, %108
  %251 = landingpad { i8*, i32 }
          cleanup
  br label %252

252:                                              ; preds = %250, %248
  %253 = phi { i8*, i32 } [ %249, %248 ], [ %251, %250 ]
  %254 = extractvalue { i8*, i32 } %253, 0
  %255 = extractvalue { i8*, i32 } %253, 1
  br label %264

256:                                              ; preds = %228
  %257 = landingpad { i8*, i32 }
          cleanup
  %258 = extractvalue { i8*, i32 } %257, 0
  %259 = extractvalue { i8*, i32 } %257, 1
  %260 = load i8, i8* %50, align 1
  %261 = icmp slt i8 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %256
  %263 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %263) #17
  br label %264

264:                                              ; preds = %262, %256, %252
  %265 = phi i8* [ %254, %252 ], [ %258, %256 ], [ %258, %262 ]
  %266 = phi i32 [ %255, %252 ], [ %259, %256 ], [ %259, %262 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #16
  br label %267

267:                                              ; preds = %264, %76
  %268 = phi i8* [ %265, %264 ], [ %78, %76 ]
  %269 = phi i32 [ %266, %264 ], [ %79, %76 ]
  %270 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %36, align 8
  %271 = icmp eq %"class.v8::internal::torque::Item"** %270, null
  br i1 %271, label %276, label %272

272:                                              ; preds = %267
  %273 = ptrtoint %"class.v8::internal::torque::Item"** %270 to i64
  %274 = bitcast %"class.v8::internal::torque::Item"*** %38 to i64*
  store i64 %273, i64* %274, align 8
  %275 = bitcast %"class.v8::internal::torque::Item"** %270 to i8*
  call void @_ZdlPv(i8* %275) #17
  br label %276

276:                                              ; preds = %267, %272
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #16
  br label %308

277:                                              ; preds = %60
  %278 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %279 = bitcast %"class.std::__1::basic_stringstream"* %5 to i64*
  store i64 %278, i64* %279, align 8
  %280 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %281 = inttoptr i64 %278 to i8*
  %282 = getelementptr i8, i8* %281, i64 -24
  %283 = bitcast i8* %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds i8, i8* %33, i64 %284
  %286 = bitcast i8* %285 to i64*
  store i64 %280, i64* %286, align 8
  %287 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %288 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 1
  %289 = bitcast %"class.std::__1::basic_ostream.base"* %288 to i64*
  store i64 %287, i64* %289, align 8
  %290 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %61, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %290, align 8
  %291 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1, i32 1
  %292 = bitcast %"class.std::__1::basic_string"* %291 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %293 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %292, i64 0, i32 1, i32 0
  %294 = load i8, i8* %293, align 1
  %295 = icmp slt i8 %294, 0
  br i1 %295, label %296, label %299

296:                                              ; preds = %277
  %297 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %291, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = load i8*, i8** %297, align 8
  call void @_ZdlPv(i8* %298) #17
  br label %299

299:                                              ; preds = %277, %296
  %300 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %61, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %300) #16
  %301 = bitcast %"class.std::__1::basic_stringstream"* %5 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %301, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #16
  %302 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 2
  %303 = bitcast %"class.std::__1::basic_ios.base"* %302 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %303) #16
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %33) #16
  br label %340

304:                                              ; preds = %60
  %305 = landingpad { i8*, i32 }
          cleanup
  %306 = extractvalue { i8*, i32 } %305, 0
  %307 = extractvalue { i8*, i32 } %305, 1
  br label %308

308:                                              ; preds = %62, %276, %304
  %309 = phi i8* [ %306, %304 ], [ %268, %276 ], [ %64, %62 ]
  %310 = phi i32 [ %307, %304 ], [ %269, %276 ], [ %65, %62 ]
  %311 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %312 = bitcast %"class.std::__1::basic_stringstream"* %5 to i64*
  store i64 %311, i64* %312, align 8
  %313 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %314 = inttoptr i64 %311 to i8*
  %315 = getelementptr i8, i8* %314, i64 -24
  %316 = bitcast i8* %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = getelementptr inbounds i8, i8* %33, i64 %317
  %319 = bitcast i8* %318 to i64*
  store i64 %313, i64* %319, align 8
  %320 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %321 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 1
  %322 = bitcast %"class.std::__1::basic_ostream.base"* %321 to i64*
  store i64 %320, i64* %322, align 8
  %323 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1
  %324 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %323, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %324, align 8
  %325 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1, i32 1
  %326 = bitcast %"class.std::__1::basic_string"* %325 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %327 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %326, i64 0, i32 1, i32 0
  %328 = load i8, i8* %327, align 1
  %329 = icmp slt i8 %328, 0
  br i1 %329, label %330, label %333

330:                                              ; preds = %308
  %331 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %325, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load i8*, i8** %331, align 8
  call void @_ZdlPv(i8* %332) #17
  br label %333

333:                                              ; preds = %308, %330
  %334 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %323, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %334) #16
  %335 = bitcast %"class.std::__1::basic_stringstream"* %5 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %335, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #16
  %336 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 2
  %337 = bitcast %"class.std::__1::basic_ios.base"* %336 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %337) #16
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %33) #16
  %338 = insertvalue { i8*, i32 } undef, i8* %309, 0
  %339 = insertvalue { i8*, i32 } %338, i32 %310, 1
  resume { i8*, i32 } %339

340:                                              ; preds = %31, %299
  ret void
}

; Function Attrs: ssp uwtable
define hidden void @_ZNK2v88internal6torque4Item14CheckAmbiguityERKS2_RKNS1_11LexerResultE(%"class.v8::internal::torque::Item"* nocapture readonly, %"class.v8::internal::torque::Item"* nocapture readonly dereferenceable(48), %"struct.v8::internal::torque::LexerResult"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::__1::basic_stringstream", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_stringstream", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %0, i64 0, i32 5
  %15 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %1, i64 0, i32 5
  %17 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %16, align 8
  %18 = icmp eq %"class.v8::internal::torque::Item"* %15, %17
  br i1 %18, label %347, label %19

19:                                               ; preds = %3
  %20 = bitcast %"class.std::__1::basic_stringstream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %20) #16
  call void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"* nonnull %4, i32 24)
  %21 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_ostream.base"* %21 to %"class.std::__1::basic_ostream"*
  %23 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i64 29)
          to label %24 unwind label %250

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #16
  %26 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %14, align 8
  %27 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %26, i64 0, i32 2
  %28 = load i64, i64* %27, align 8, !noalias !23
  %29 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %2, i64 0, i32 1, i32 0, i32 0
  %30 = load %"struct.v8::internal::torque::MatchedInput"*, %"struct.v8::internal::torque::MatchedInput"** %29, align 8, !noalias !23
  %31 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %30, i64 %28
  %32 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %26, i64 0, i32 3
  %33 = load i64, i64* %32, align 8, !noalias !23
  %34 = icmp eq i64 %28, %33
  %35 = add i64 %33, -1
  %36 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %30, i64 %35
  %37 = select i1 %34, %"struct.v8::internal::torque::MatchedInput"* %31, %"struct.v8::internal::torque::MatchedInput"* %36
  %38 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %30, i64 %28, i32 2, i32 0, i32 0
  %39 = load i32, i32* %38, align 4, !noalias !23
  %40 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %37, i64 0, i32 2, i32 0, i32 0
  %41 = load i32, i32* %40, align 4, !noalias !23
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %45, label %43, !prof !5

43:                                               ; preds = %24
  invoke void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0)) #18
          to label %44 unwind label %254

44:                                               ; preds = %43
  unreachable

45:                                               ; preds = %24
  %46 = bitcast %"struct.v8::internal::torque::MatchedInput"* %31 to i64*
  %47 = load i64, i64* %46, align 8, !noalias !23
  %48 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %37, i64 0, i32 1
  %49 = bitcast i8** %48 to i64*
  %50 = load i64, i64* %49, align 8, !noalias !23
  %51 = inttoptr i64 %47 to i8*
  %52 = inttoptr i64 %50 to i8*
  %53 = sub i64 %50, %47
  %54 = icmp ugt i64 %53, -17
  br i1 %54, label %55, label %58

55:                                               ; preds = %45
  %56 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  invoke void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %56) #18
          to label %57 unwind label %254

57:                                               ; preds = %55
  unreachable

58:                                               ; preds = %45
  %59 = icmp ult i64 %53, 23
  br i1 %59, label %60, label %64

60:                                               ; preds = %58
  %61 = trunc i64 %53 to i8
  %62 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  store i8 %61, i8* %63, align 1, !alias.scope !26
  br label %73

64:                                               ; preds = %58
  %65 = add nuw i64 %53, 16
  %66 = and i64 %65, -16
  %67 = invoke i8* @_Znwm(i64 %66) #20
          to label %68 unwind label %254

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %67, i8** %69, align 8, !alias.scope !26
  %70 = or i64 %66, -9223372036854775808
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %70, i64* %71, align 8, !alias.scope !26
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %53, i64* %72, align 8, !alias.scope !26
  br label %73

73:                                               ; preds = %68, %60
  %74 = phi i8* [ %25, %60 ], [ %67, %68 ]
  %75 = icmp eq i8* %51, %52
  br i1 %75, label %180, label %76

76:                                               ; preds = %73
  %77 = sub i64 0, %47
  %78 = getelementptr i8, i8* %52, i64 %77
  %79 = ptrtoint i8* %78 to i64
  %80 = icmp ult i8* %78, inttoptr (i64 32 to i8*)
  br i1 %80, label %170, label %81

81:                                               ; preds = %76
  %82 = sub i64 0, %47
  %83 = getelementptr i8, i8* %52, i64 %82
  %84 = ptrtoint i8* %83 to i64
  %85 = getelementptr i8, i8* %74, i64 %84
  %86 = icmp ult i8* %74, %52
  %87 = icmp ugt i8* %85, %51
  %88 = and i1 %86, %87
  br i1 %88, label %170, label %89

89:                                               ; preds = %81
  %90 = and i64 %79, -32
  %91 = getelementptr i8, i8* %51, i64 %90
  %92 = getelementptr i8, i8* %74, i64 %90
  %93 = add i64 %90, -32
  %94 = lshr exact i64 %93, 5
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 3
  %97 = icmp ult i64 %93, 96
  br i1 %97, label %149, label %98

98:                                               ; preds = %89
  %99 = sub nsw i64 %95, %96
  br label %100

100:                                              ; preds = %100, %98
  %101 = phi i64 [ 0, %98 ], [ %146, %100 ]
  %102 = phi i64 [ %99, %98 ], [ %147, %100 ]
  %103 = getelementptr i8, i8* %51, i64 %101
  %104 = getelementptr i8, i8* %74, i64 %101
  %105 = bitcast i8* %103 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 1, !alias.scope !29
  %107 = getelementptr i8, i8* %103, i64 16
  %108 = bitcast i8* %107 to <16 x i8>*
  %109 = load <16 x i8>, <16 x i8>* %108, align 1, !alias.scope !29
  %110 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %110, align 1, !alias.scope !32, !noalias !29
  %111 = getelementptr i8, i8* %104, i64 16
  %112 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> %109, <16 x i8>* %112, align 1, !alias.scope !32, !noalias !29
  %113 = or i64 %101, 32
  %114 = getelementptr i8, i8* %51, i64 %113
  %115 = getelementptr i8, i8* %74, i64 %113
  %116 = bitcast i8* %114 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 1, !alias.scope !29
  %118 = getelementptr i8, i8* %114, i64 16
  %119 = bitcast i8* %118 to <16 x i8>*
  %120 = load <16 x i8>, <16 x i8>* %119, align 1, !alias.scope !29
  %121 = bitcast i8* %115 to <16 x i8>*
  store <16 x i8> %117, <16 x i8>* %121, align 1, !alias.scope !32, !noalias !29
  %122 = getelementptr i8, i8* %115, i64 16
  %123 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %120, <16 x i8>* %123, align 1, !alias.scope !32, !noalias !29
  %124 = or i64 %101, 64
  %125 = getelementptr i8, i8* %51, i64 %124
  %126 = getelementptr i8, i8* %74, i64 %124
  %127 = bitcast i8* %125 to <16 x i8>*
  %128 = load <16 x i8>, <16 x i8>* %127, align 1, !alias.scope !29
  %129 = getelementptr i8, i8* %125, i64 16
  %130 = bitcast i8* %129 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !29
  %132 = bitcast i8* %126 to <16 x i8>*
  store <16 x i8> %128, <16 x i8>* %132, align 1, !alias.scope !32, !noalias !29
  %133 = getelementptr i8, i8* %126, i64 16
  %134 = bitcast i8* %133 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %134, align 1, !alias.scope !32, !noalias !29
  %135 = or i64 %101, 96
  %136 = getelementptr i8, i8* %51, i64 %135
  %137 = getelementptr i8, i8* %74, i64 %135
  %138 = bitcast i8* %136 to <16 x i8>*
  %139 = load <16 x i8>, <16 x i8>* %138, align 1, !alias.scope !29
  %140 = getelementptr i8, i8* %136, i64 16
  %141 = bitcast i8* %140 to <16 x i8>*
  %142 = load <16 x i8>, <16 x i8>* %141, align 1, !alias.scope !29
  %143 = bitcast i8* %137 to <16 x i8>*
  store <16 x i8> %139, <16 x i8>* %143, align 1, !alias.scope !32, !noalias !29
  %144 = getelementptr i8, i8* %137, i64 16
  %145 = bitcast i8* %144 to <16 x i8>*
  store <16 x i8> %142, <16 x i8>* %145, align 1, !alias.scope !32, !noalias !29
  %146 = add i64 %101, 128
  %147 = add i64 %102, -4
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %100, !llvm.loop !34

149:                                              ; preds = %100, %89
  %150 = phi i64 [ 0, %89 ], [ %146, %100 ]
  %151 = icmp eq i64 %96, 0
  br i1 %151, label %168, label %152

152:                                              ; preds = %149, %152
  %153 = phi i64 [ %165, %152 ], [ %150, %149 ]
  %154 = phi i64 [ %166, %152 ], [ %96, %149 ]
  %155 = getelementptr i8, i8* %51, i64 %153
  %156 = getelementptr i8, i8* %74, i64 %153
  %157 = bitcast i8* %155 to <16 x i8>*
  %158 = load <16 x i8>, <16 x i8>* %157, align 1, !alias.scope !29
  %159 = getelementptr i8, i8* %155, i64 16
  %160 = bitcast i8* %159 to <16 x i8>*
  %161 = load <16 x i8>, <16 x i8>* %160, align 1, !alias.scope !29
  %162 = bitcast i8* %156 to <16 x i8>*
  store <16 x i8> %158, <16 x i8>* %162, align 1, !alias.scope !32, !noalias !29
  %163 = getelementptr i8, i8* %156, i64 16
  %164 = bitcast i8* %163 to <16 x i8>*
  store <16 x i8> %161, <16 x i8>* %164, align 1, !alias.scope !32, !noalias !29
  %165 = add i64 %153, 32
  %166 = add i64 %154, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %152, !llvm.loop !35

168:                                              ; preds = %152, %149
  %169 = icmp eq i64 %90, %79
  br i1 %169, label %180, label %170

170:                                              ; preds = %168, %81, %76
  %171 = phi i8* [ %51, %81 ], [ %51, %76 ], [ %91, %168 ]
  %172 = phi i8* [ %74, %81 ], [ %74, %76 ], [ %92, %168 ]
  br label %173

173:                                              ; preds = %170, %173
  %174 = phi i8* [ %177, %173 ], [ %171, %170 ]
  %175 = phi i8* [ %178, %173 ], [ %172, %170 ]
  %176 = load i8, i8* %174, align 1
  store i8 %176, i8* %175, align 1
  %177 = getelementptr inbounds i8, i8* %174, i64 1
  %178 = getelementptr inbounds i8, i8* %175, i64 1
  %179 = icmp eq i8* %177, %52
  br i1 %179, label %180, label %173, !llvm.loop !36

180:                                              ; preds = %173, %168, %73
  %181 = phi i8* [ %74, %73 ], [ %92, %168 ], [ %178, %173 ]
  store i8 0, i8* %181, align 1
  %182 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %182, i64 0, i32 1, i32 0
  %184 = load i8, i8* %183, align 1
  %185 = icmp slt i8 %184, 0
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = zext i8 %184 to i64
  %191 = select i1 %185, i8* %187, i8* %25
  %192 = select i1 %185, i64 %189, i64 %190
  %193 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* %191, i64 %192)
          to label %194 unwind label %258

194:                                              ; preds = %180
  %195 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %193, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6)
          to label %196 unwind label %258

196:                                              ; preds = %194
  %197 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %197) #16
  %198 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %14, align 8
  invoke void @_ZNK2v88internal6torque4Item15SplitByChildrenERKNS1_11LexerResultE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.v8::internal::torque::Item"* %198, %"struct.v8::internal::torque::LexerResult"* dereferenceable(48) %2)
          to label %199 unwind label %262

199:                                              ; preds = %196
  %200 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  %204 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load i8*, i8** %204, align 8
  %206 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %207 = load i64, i64* %206, align 8
  %208 = zext i8 %202 to i64
  %209 = select i1 %203, i8* %205, i8* %197
  %210 = select i1 %203, i64 %207, i64 %208
  %211 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %195, i8* %209, i64 %210)
          to label %212 unwind label %266

212:                                              ; preds = %199
  %213 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %211, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7)
          to label %214 unwind label %266

214:                                              ; preds = %212
  %215 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #16
  %216 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %16, align 8
  invoke void @_ZNK2v88internal6torque4Item15SplitByChildrenERKNS1_11LexerResultE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.v8::internal::torque::Item"* %216, %"struct.v8::internal::torque::LexerResult"* dereferenceable(48) %2)
          to label %217 unwind label %270

217:                                              ; preds = %214
  %218 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %219 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %218, i64 0, i32 1, i32 0
  %220 = load i8, i8* %219, align 1
  %221 = icmp slt i8 %220, 0
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = zext i8 %220 to i64
  %227 = select i1 %221, i8* %223, i8* %215
  %228 = select i1 %221, i64 %225, i64 %226
  %229 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %213, i8* %227, i64 %228)
          to label %230 unwind label %274

230:                                              ; preds = %217
  %231 = load i8, i8* %219, align 1
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %233, label %235

233:                                              ; preds = %230
  %234 = load i8*, i8** %222, align 8
  call void @_ZdlPv(i8* %234) #17
  br label %235

235:                                              ; preds = %230, %233
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #16
  %236 = load i8, i8* %201, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %238, label %240

238:                                              ; preds = %235
  %239 = load i8*, i8** %204, align 8
  call void @_ZdlPv(i8* %239) #17
  br label %240

240:                                              ; preds = %235, %238
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %197) #16
  %241 = load i8, i8* %183, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %245

243:                                              ; preds = %240
  %244 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %244) #17
  br label %245

245:                                              ; preds = %240, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  %246 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %246) #16
  %247 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 1
  invoke void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.std::__1::basic_stringbuf"* %247)
          to label %248 unwind label %305

248:                                              ; preds = %245
  invoke void @_ZN2v88internal6torque11ReportErrorIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvDpOT_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #18
          to label %249 unwind label %309

249:                                              ; preds = %248
  unreachable

250:                                              ; preds = %19
  %251 = landingpad { i8*, i32 }
          cleanup
  %252 = extractvalue { i8*, i32 } %251, 0
  %253 = extractvalue { i8*, i32 } %251, 1
  br label %323

254:                                              ; preds = %64, %55, %43
  %255 = landingpad { i8*, i32 }
          cleanup
  %256 = extractvalue { i8*, i32 } %255, 0
  %257 = extractvalue { i8*, i32 } %255, 1
  br label %302

258:                                              ; preds = %194, %180
  %259 = landingpad { i8*, i32 }
          cleanup
  %260 = extractvalue { i8*, i32 } %259, 0
  %261 = extractvalue { i8*, i32 } %259, 1
  br label %295

262:                                              ; preds = %196
  %263 = landingpad { i8*, i32 }
          cleanup
  %264 = extractvalue { i8*, i32 } %263, 0
  %265 = extractvalue { i8*, i32 } %263, 1
  br label %292

266:                                              ; preds = %212, %199
  %267 = landingpad { i8*, i32 }
          cleanup
  %268 = extractvalue { i8*, i32 } %267, 0
  %269 = extractvalue { i8*, i32 } %267, 1
  br label %285

270:                                              ; preds = %214
  %271 = landingpad { i8*, i32 }
          cleanup
  %272 = extractvalue { i8*, i32 } %271, 0
  %273 = extractvalue { i8*, i32 } %271, 1
  br label %282

274:                                              ; preds = %217
  %275 = landingpad { i8*, i32 }
          cleanup
  %276 = extractvalue { i8*, i32 } %275, 0
  %277 = extractvalue { i8*, i32 } %275, 1
  %278 = load i8, i8* %219, align 1
  %279 = icmp slt i8 %278, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %274
  %281 = load i8*, i8** %222, align 8
  call void @_ZdlPv(i8* %281) #17
  br label %282

282:                                              ; preds = %280, %274, %270
  %283 = phi i8* [ %272, %270 ], [ %276, %274 ], [ %276, %280 ]
  %284 = phi i32 [ %273, %270 ], [ %277, %274 ], [ %277, %280 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #16
  br label %285

285:                                              ; preds = %282, %266
  %286 = phi i8* [ %283, %282 ], [ %268, %266 ]
  %287 = phi i32 [ %284, %282 ], [ %269, %266 ]
  %288 = load i8, i8* %201, align 1
  %289 = icmp slt i8 %288, 0
  br i1 %289, label %290, label %292

290:                                              ; preds = %285
  %291 = load i8*, i8** %204, align 8
  call void @_ZdlPv(i8* %291) #17
  br label %292

292:                                              ; preds = %290, %285, %262
  %293 = phi i8* [ %264, %262 ], [ %286, %285 ], [ %286, %290 ]
  %294 = phi i32 [ %265, %262 ], [ %287, %285 ], [ %287, %290 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %197) #16
  br label %295

295:                                              ; preds = %292, %258
  %296 = phi i8* [ %293, %292 ], [ %260, %258 ]
  %297 = phi i32 [ %294, %292 ], [ %261, %258 ]
  %298 = load i8, i8* %183, align 1
  %299 = icmp slt i8 %298, 0
  br i1 %299, label %300, label %302

300:                                              ; preds = %295
  %301 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %301) #17
  br label %302

302:                                              ; preds = %300, %295, %254
  %303 = phi i8* [ %256, %254 ], [ %296, %295 ], [ %296, %300 ]
  %304 = phi i32 [ %257, %254 ], [ %297, %295 ], [ %297, %300 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  br label %323

305:                                              ; preds = %245
  %306 = landingpad { i8*, i32 }
          cleanup
  %307 = extractvalue { i8*, i32 } %306, 0
  %308 = extractvalue { i8*, i32 } %306, 1
  br label %320

309:                                              ; preds = %248
  %310 = landingpad { i8*, i32 }
          cleanup
  %311 = extractvalue { i8*, i32 } %310, 0
  %312 = extractvalue { i8*, i32 } %310, 1
  %313 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %314 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %313, i64 0, i32 1, i32 0
  %315 = load i8, i8* %314, align 1
  %316 = icmp slt i8 %315, 0
  br i1 %316, label %317, label %320

317:                                              ; preds = %309
  %318 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load i8*, i8** %318, align 8
  call void @_ZdlPv(i8* %319) #17
  br label %320

320:                                              ; preds = %317, %309, %305
  %321 = phi i8* [ %307, %305 ], [ %311, %309 ], [ %311, %317 ]
  %322 = phi i32 [ %308, %305 ], [ %312, %309 ], [ %312, %317 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %246) #16
  br label %323

323:                                              ; preds = %320, %302, %250
  %324 = phi i8* [ %321, %320 ], [ %303, %302 ], [ %252, %250 ]
  %325 = phi i32 [ %322, %320 ], [ %304, %302 ], [ %253, %250 ]
  %326 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %327 = bitcast %"class.std::__1::basic_stringstream"* %4 to i64*
  store i64 %326, i64* %327, align 8
  %328 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %329 = inttoptr i64 %326 to i8*
  %330 = getelementptr i8, i8* %329, i64 -24
  %331 = bitcast i8* %330 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = getelementptr inbounds i8, i8* %20, i64 %332
  %334 = bitcast i8* %333 to i64*
  store i64 %328, i64* %334, align 8
  %335 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %336 = bitcast %"class.std::__1::basic_ostream.base"* %21 to i64*
  store i64 %335, i64* %336, align 8
  %337 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 1
  %338 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %337, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 1, i32 1
  %340 = bitcast %"class.std::__1::basic_string"* %339 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %341 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %340, i64 0, i32 1, i32 0
  %342 = load i8, i8* %341, align 1
  %343 = icmp slt i8 %342, 0
  br i1 %343, label %344, label %681

344:                                              ; preds = %323
  %345 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load i8*, i8** %345, align 8
  call void @_ZdlPv(i8* %346) #17
  br label %681

347:                                              ; preds = %3
  %348 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %0, i64 0, i32 4
  %349 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %348, align 8
  %350 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %1, i64 0, i32 4
  %351 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %350, align 8
  %352 = icmp eq %"class.v8::internal::torque::Item"* %349, %351
  br i1 %352, label %680, label %353

353:                                              ; preds = %347
  %354 = bitcast %"class.std::__1::basic_stringstream"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %354) #16
  call void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"* nonnull %9, i32 24)
  %355 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %9, i64 0, i32 0, i32 1
  %356 = bitcast %"class.std::__1::basic_ostream.base"* %355 to %"class.std::__1::basic_ostream"*
  %357 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %356, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i64 29)
          to label %358 unwind label %583

358:                                              ; preds = %353
  %359 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %359) #16
  %360 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %0, i64 0, i32 2
  %361 = load i64, i64* %360, align 8, !noalias !37
  %362 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %2, i64 0, i32 1, i32 0, i32 0
  %363 = load %"struct.v8::internal::torque::MatchedInput"*, %"struct.v8::internal::torque::MatchedInput"** %362, align 8, !noalias !37
  %364 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %363, i64 %361
  %365 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %0, i64 0, i32 3
  %366 = load i64, i64* %365, align 8, !noalias !37
  %367 = icmp eq i64 %361, %366
  %368 = add i64 %366, -1
  %369 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %363, i64 %368
  %370 = select i1 %367, %"struct.v8::internal::torque::MatchedInput"* %364, %"struct.v8::internal::torque::MatchedInput"* %369
  %371 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %363, i64 %361, i32 2, i32 0, i32 0
  %372 = load i32, i32* %371, align 4, !noalias !37
  %373 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %370, i64 0, i32 2, i32 0, i32 0
  %374 = load i32, i32* %373, align 4, !noalias !37
  %375 = icmp eq i32 %372, %374
  br i1 %375, label %378, label %376, !prof !5

376:                                              ; preds = %358
  invoke void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0)) #18
          to label %377 unwind label %587

377:                                              ; preds = %376
  unreachable

378:                                              ; preds = %358
  %379 = bitcast %"struct.v8::internal::torque::MatchedInput"* %364 to i64*
  %380 = load i64, i64* %379, align 8, !noalias !37
  %381 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %370, i64 0, i32 1
  %382 = bitcast i8** %381 to i64*
  %383 = load i64, i64* %382, align 8, !noalias !37
  %384 = inttoptr i64 %380 to i8*
  %385 = inttoptr i64 %383 to i8*
  %386 = sub i64 %383, %380
  %387 = icmp ugt i64 %386, -17
  br i1 %387, label %388, label %391

388:                                              ; preds = %378
  %389 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  invoke void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %389) #18
          to label %390 unwind label %587

390:                                              ; preds = %388
  unreachable

391:                                              ; preds = %378
  %392 = icmp ult i64 %386, 23
  br i1 %392, label %393, label %397

393:                                              ; preds = %391
  %394 = trunc i64 %386 to i8
  %395 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %396 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %395, i64 0, i32 1, i32 0
  store i8 %394, i8* %396, align 1, !alias.scope !40
  br label %406

397:                                              ; preds = %391
  %398 = add nuw i64 %386, 16
  %399 = and i64 %398, -16
  %400 = invoke i8* @_Znwm(i64 %399) #20
          to label %401 unwind label %587

401:                                              ; preds = %397
  %402 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %400, i8** %402, align 8, !alias.scope !40
  %403 = or i64 %399, -9223372036854775808
  %404 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %403, i64* %404, align 8, !alias.scope !40
  %405 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %386, i64* %405, align 8, !alias.scope !40
  br label %406

406:                                              ; preds = %401, %393
  %407 = phi i8* [ %359, %393 ], [ %400, %401 ]
  %408 = icmp eq i8* %384, %385
  br i1 %408, label %513, label %409

409:                                              ; preds = %406
  %410 = sub i64 0, %380
  %411 = getelementptr i8, i8* %385, i64 %410
  %412 = ptrtoint i8* %411 to i64
  %413 = icmp ult i8* %411, inttoptr (i64 32 to i8*)
  br i1 %413, label %503, label %414

414:                                              ; preds = %409
  %415 = sub i64 0, %380
  %416 = getelementptr i8, i8* %385, i64 %415
  %417 = ptrtoint i8* %416 to i64
  %418 = getelementptr i8, i8* %407, i64 %417
  %419 = icmp ult i8* %407, %385
  %420 = icmp ugt i8* %418, %384
  %421 = and i1 %419, %420
  br i1 %421, label %503, label %422

422:                                              ; preds = %414
  %423 = and i64 %412, -32
  %424 = getelementptr i8, i8* %384, i64 %423
  %425 = getelementptr i8, i8* %407, i64 %423
  %426 = add i64 %423, -32
  %427 = lshr exact i64 %426, 5
  %428 = add nuw nsw i64 %427, 1
  %429 = and i64 %428, 3
  %430 = icmp ult i64 %426, 96
  br i1 %430, label %482, label %431

431:                                              ; preds = %422
  %432 = sub nsw i64 %428, %429
  br label %433

433:                                              ; preds = %433, %431
  %434 = phi i64 [ 0, %431 ], [ %479, %433 ]
  %435 = phi i64 [ %432, %431 ], [ %480, %433 ]
  %436 = getelementptr i8, i8* %384, i64 %434
  %437 = getelementptr i8, i8* %407, i64 %434
  %438 = bitcast i8* %436 to <16 x i8>*
  %439 = load <16 x i8>, <16 x i8>* %438, align 1, !alias.scope !43
  %440 = getelementptr i8, i8* %436, i64 16
  %441 = bitcast i8* %440 to <16 x i8>*
  %442 = load <16 x i8>, <16 x i8>* %441, align 1, !alias.scope !43
  %443 = bitcast i8* %437 to <16 x i8>*
  store <16 x i8> %439, <16 x i8>* %443, align 1, !alias.scope !46, !noalias !43
  %444 = getelementptr i8, i8* %437, i64 16
  %445 = bitcast i8* %444 to <16 x i8>*
  store <16 x i8> %442, <16 x i8>* %445, align 1, !alias.scope !46, !noalias !43
  %446 = or i64 %434, 32
  %447 = getelementptr i8, i8* %384, i64 %446
  %448 = getelementptr i8, i8* %407, i64 %446
  %449 = bitcast i8* %447 to <16 x i8>*
  %450 = load <16 x i8>, <16 x i8>* %449, align 1, !alias.scope !43
  %451 = getelementptr i8, i8* %447, i64 16
  %452 = bitcast i8* %451 to <16 x i8>*
  %453 = load <16 x i8>, <16 x i8>* %452, align 1, !alias.scope !43
  %454 = bitcast i8* %448 to <16 x i8>*
  store <16 x i8> %450, <16 x i8>* %454, align 1, !alias.scope !46, !noalias !43
  %455 = getelementptr i8, i8* %448, i64 16
  %456 = bitcast i8* %455 to <16 x i8>*
  store <16 x i8> %453, <16 x i8>* %456, align 1, !alias.scope !46, !noalias !43
  %457 = or i64 %434, 64
  %458 = getelementptr i8, i8* %384, i64 %457
  %459 = getelementptr i8, i8* %407, i64 %457
  %460 = bitcast i8* %458 to <16 x i8>*
  %461 = load <16 x i8>, <16 x i8>* %460, align 1, !alias.scope !43
  %462 = getelementptr i8, i8* %458, i64 16
  %463 = bitcast i8* %462 to <16 x i8>*
  %464 = load <16 x i8>, <16 x i8>* %463, align 1, !alias.scope !43
  %465 = bitcast i8* %459 to <16 x i8>*
  store <16 x i8> %461, <16 x i8>* %465, align 1, !alias.scope !46, !noalias !43
  %466 = getelementptr i8, i8* %459, i64 16
  %467 = bitcast i8* %466 to <16 x i8>*
  store <16 x i8> %464, <16 x i8>* %467, align 1, !alias.scope !46, !noalias !43
  %468 = or i64 %434, 96
  %469 = getelementptr i8, i8* %384, i64 %468
  %470 = getelementptr i8, i8* %407, i64 %468
  %471 = bitcast i8* %469 to <16 x i8>*
  %472 = load <16 x i8>, <16 x i8>* %471, align 1, !alias.scope !43
  %473 = getelementptr i8, i8* %469, i64 16
  %474 = bitcast i8* %473 to <16 x i8>*
  %475 = load <16 x i8>, <16 x i8>* %474, align 1, !alias.scope !43
  %476 = bitcast i8* %470 to <16 x i8>*
  store <16 x i8> %472, <16 x i8>* %476, align 1, !alias.scope !46, !noalias !43
  %477 = getelementptr i8, i8* %470, i64 16
  %478 = bitcast i8* %477 to <16 x i8>*
  store <16 x i8> %475, <16 x i8>* %478, align 1, !alias.scope !46, !noalias !43
  %479 = add i64 %434, 128
  %480 = add i64 %435, -4
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %482, label %433, !llvm.loop !48

482:                                              ; preds = %433, %422
  %483 = phi i64 [ 0, %422 ], [ %479, %433 ]
  %484 = icmp eq i64 %429, 0
  br i1 %484, label %501, label %485

485:                                              ; preds = %482, %485
  %486 = phi i64 [ %498, %485 ], [ %483, %482 ]
  %487 = phi i64 [ %499, %485 ], [ %429, %482 ]
  %488 = getelementptr i8, i8* %384, i64 %486
  %489 = getelementptr i8, i8* %407, i64 %486
  %490 = bitcast i8* %488 to <16 x i8>*
  %491 = load <16 x i8>, <16 x i8>* %490, align 1, !alias.scope !43
  %492 = getelementptr i8, i8* %488, i64 16
  %493 = bitcast i8* %492 to <16 x i8>*
  %494 = load <16 x i8>, <16 x i8>* %493, align 1, !alias.scope !43
  %495 = bitcast i8* %489 to <16 x i8>*
  store <16 x i8> %491, <16 x i8>* %495, align 1, !alias.scope !46, !noalias !43
  %496 = getelementptr i8, i8* %489, i64 16
  %497 = bitcast i8* %496 to <16 x i8>*
  store <16 x i8> %494, <16 x i8>* %497, align 1, !alias.scope !46, !noalias !43
  %498 = add i64 %486, 32
  %499 = add i64 %487, -1
  %500 = icmp eq i64 %499, 0
  br i1 %500, label %501, label %485, !llvm.loop !49

501:                                              ; preds = %485, %482
  %502 = icmp eq i64 %423, %412
  br i1 %502, label %513, label %503

503:                                              ; preds = %501, %414, %409
  %504 = phi i8* [ %384, %414 ], [ %384, %409 ], [ %424, %501 ]
  %505 = phi i8* [ %407, %414 ], [ %407, %409 ], [ %425, %501 ]
  br label %506

506:                                              ; preds = %503, %506
  %507 = phi i8* [ %510, %506 ], [ %504, %503 ]
  %508 = phi i8* [ %511, %506 ], [ %505, %503 ]
  %509 = load i8, i8* %507, align 1
  store i8 %509, i8* %508, align 1
  %510 = getelementptr inbounds i8, i8* %507, i64 1
  %511 = getelementptr inbounds i8, i8* %508, i64 1
  %512 = icmp eq i8* %510, %385
  br i1 %512, label %513, label %506, !llvm.loop !50

513:                                              ; preds = %506, %501, %406
  %514 = phi i8* [ %407, %406 ], [ %425, %501 ], [ %511, %506 ]
  store i8 0, i8* %514, align 1
  %515 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %516 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %515, i64 0, i32 1, i32 0
  %517 = load i8, i8* %516, align 1
  %518 = icmp slt i8 %517, 0
  %519 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %520 = load i8*, i8** %519, align 8
  %521 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %522 = load i64, i64* %521, align 8
  %523 = zext i8 %517 to i64
  %524 = select i1 %518, i8* %520, i8* %359
  %525 = select i1 %518, i64 %522, i64 %523
  %526 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %357, i8* %524, i64 %525)
          to label %527 unwind label %591

527:                                              ; preds = %513
  %528 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %526, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6)
          to label %529 unwind label %591

529:                                              ; preds = %527
  %530 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %530) #16
  invoke void @_ZNK2v88internal6torque4Item15SplitByChildrenERKNS1_11LexerResultE(%"class.std::__1::basic_string"* nonnull sret %11, %"class.v8::internal::torque::Item"* %0, %"struct.v8::internal::torque::LexerResult"* dereferenceable(48) %2)
          to label %531 unwind label %595

531:                                              ; preds = %529
  %532 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %533 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %532, i64 0, i32 1, i32 0
  %534 = load i8, i8* %533, align 1
  %535 = icmp slt i8 %534, 0
  %536 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load i8*, i8** %536, align 8
  %538 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %539 = load i64, i64* %538, align 8
  %540 = zext i8 %534 to i64
  %541 = select i1 %535, i8* %537, i8* %530
  %542 = select i1 %535, i64 %539, i64 %540
  %543 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %528, i8* %541, i64 %542)
          to label %544 unwind label %599

544:                                              ; preds = %531
  %545 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %543, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i64 12)
          to label %546 unwind label %599

546:                                              ; preds = %544
  %547 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %547) #16
  invoke void @_ZNK2v88internal6torque4Item15SplitByChildrenERKNS1_11LexerResultE(%"class.std::__1::basic_string"* nonnull sret %12, %"class.v8::internal::torque::Item"* %1, %"struct.v8::internal::torque::LexerResult"* dereferenceable(48) %2)
          to label %548 unwind label %603

548:                                              ; preds = %546
  %549 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %550 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %549, i64 0, i32 1, i32 0
  %551 = load i8, i8* %550, align 1
  %552 = icmp slt i8 %551, 0
  %553 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %554 = load i8*, i8** %553, align 8
  %555 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %556 = load i64, i64* %555, align 8
  %557 = zext i8 %551 to i64
  %558 = select i1 %552, i8* %554, i8* %547
  %559 = select i1 %552, i64 %556, i64 %557
  %560 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %545, i8* %558, i64 %559)
          to label %561 unwind label %607

561:                                              ; preds = %548
  %562 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %560, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5)
          to label %563 unwind label %607

563:                                              ; preds = %561
  %564 = load i8, i8* %550, align 1
  %565 = icmp slt i8 %564, 0
  br i1 %565, label %566, label %568

566:                                              ; preds = %563
  %567 = load i8*, i8** %553, align 8
  call void @_ZdlPv(i8* %567) #17
  br label %568

568:                                              ; preds = %563, %566
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %547) #16
  %569 = load i8, i8* %533, align 1
  %570 = icmp slt i8 %569, 0
  br i1 %570, label %571, label %573

571:                                              ; preds = %568
  %572 = load i8*, i8** %536, align 8
  call void @_ZdlPv(i8* %572) #17
  br label %573

573:                                              ; preds = %568, %571
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %530) #16
  %574 = load i8, i8* %516, align 1
  %575 = icmp slt i8 %574, 0
  br i1 %575, label %576, label %578

576:                                              ; preds = %573
  %577 = load i8*, i8** %519, align 8
  call void @_ZdlPv(i8* %577) #17
  br label %578

578:                                              ; preds = %573, %576
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %359) #16
  %579 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %579) #16
  %580 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %9, i64 0, i32 1
  invoke void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %13, %"class.std::__1::basic_stringbuf"* %580)
          to label %581 unwind label %638

581:                                              ; preds = %578
  invoke void @_ZN2v88internal6torque11ReportErrorIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvDpOT_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #18
          to label %582 unwind label %642

582:                                              ; preds = %581
  unreachable

583:                                              ; preds = %353
  %584 = landingpad { i8*, i32 }
          cleanup
  %585 = extractvalue { i8*, i32 } %584, 0
  %586 = extractvalue { i8*, i32 } %584, 1
  br label %656

587:                                              ; preds = %397, %388, %376
  %588 = landingpad { i8*, i32 }
          cleanup
  %589 = extractvalue { i8*, i32 } %588, 0
  %590 = extractvalue { i8*, i32 } %588, 1
  br label %635

591:                                              ; preds = %527, %513
  %592 = landingpad { i8*, i32 }
          cleanup
  %593 = extractvalue { i8*, i32 } %592, 0
  %594 = extractvalue { i8*, i32 } %592, 1
  br label %628

595:                                              ; preds = %529
  %596 = landingpad { i8*, i32 }
          cleanup
  %597 = extractvalue { i8*, i32 } %596, 0
  %598 = extractvalue { i8*, i32 } %596, 1
  br label %625

599:                                              ; preds = %544, %531
  %600 = landingpad { i8*, i32 }
          cleanup
  %601 = extractvalue { i8*, i32 } %600, 0
  %602 = extractvalue { i8*, i32 } %600, 1
  br label %618

603:                                              ; preds = %546
  %604 = landingpad { i8*, i32 }
          cleanup
  %605 = extractvalue { i8*, i32 } %604, 0
  %606 = extractvalue { i8*, i32 } %604, 1
  br label %615

607:                                              ; preds = %561, %548
  %608 = landingpad { i8*, i32 }
          cleanup
  %609 = extractvalue { i8*, i32 } %608, 0
  %610 = extractvalue { i8*, i32 } %608, 1
  %611 = load i8, i8* %550, align 1
  %612 = icmp slt i8 %611, 0
  br i1 %612, label %613, label %615

613:                                              ; preds = %607
  %614 = load i8*, i8** %553, align 8
  call void @_ZdlPv(i8* %614) #17
  br label %615

615:                                              ; preds = %613, %607, %603
  %616 = phi i8* [ %605, %603 ], [ %609, %607 ], [ %609, %613 ]
  %617 = phi i32 [ %606, %603 ], [ %610, %607 ], [ %610, %613 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %547) #16
  br label %618

618:                                              ; preds = %615, %599
  %619 = phi i8* [ %616, %615 ], [ %601, %599 ]
  %620 = phi i32 [ %617, %615 ], [ %602, %599 ]
  %621 = load i8, i8* %533, align 1
  %622 = icmp slt i8 %621, 0
  br i1 %622, label %623, label %625

623:                                              ; preds = %618
  %624 = load i8*, i8** %536, align 8
  call void @_ZdlPv(i8* %624) #17
  br label %625

625:                                              ; preds = %623, %618, %595
  %626 = phi i8* [ %597, %595 ], [ %619, %618 ], [ %619, %623 ]
  %627 = phi i32 [ %598, %595 ], [ %620, %618 ], [ %620, %623 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %530) #16
  br label %628

628:                                              ; preds = %625, %591
  %629 = phi i8* [ %626, %625 ], [ %593, %591 ]
  %630 = phi i32 [ %627, %625 ], [ %594, %591 ]
  %631 = load i8, i8* %516, align 1
  %632 = icmp slt i8 %631, 0
  br i1 %632, label %633, label %635

633:                                              ; preds = %628
  %634 = load i8*, i8** %519, align 8
  call void @_ZdlPv(i8* %634) #17
  br label %635

635:                                              ; preds = %633, %628, %587
  %636 = phi i8* [ %589, %587 ], [ %629, %628 ], [ %629, %633 ]
  %637 = phi i32 [ %590, %587 ], [ %630, %628 ], [ %630, %633 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %359) #16
  br label %656

638:                                              ; preds = %578
  %639 = landingpad { i8*, i32 }
          cleanup
  %640 = extractvalue { i8*, i32 } %639, 0
  %641 = extractvalue { i8*, i32 } %639, 1
  br label %653

642:                                              ; preds = %581
  %643 = landingpad { i8*, i32 }
          cleanup
  %644 = extractvalue { i8*, i32 } %643, 0
  %645 = extractvalue { i8*, i32 } %643, 1
  %646 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %647 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %646, i64 0, i32 1, i32 0
  %648 = load i8, i8* %647, align 1
  %649 = icmp slt i8 %648, 0
  br i1 %649, label %650, label %653

650:                                              ; preds = %642
  %651 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %652 = load i8*, i8** %651, align 8
  call void @_ZdlPv(i8* %652) #17
  br label %653

653:                                              ; preds = %650, %642, %638
  %654 = phi i8* [ %640, %638 ], [ %644, %642 ], [ %644, %650 ]
  %655 = phi i32 [ %641, %638 ], [ %645, %642 ], [ %645, %650 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %579) #16
  br label %656

656:                                              ; preds = %653, %635, %583
  %657 = phi i8* [ %654, %653 ], [ %636, %635 ], [ %585, %583 ]
  %658 = phi i32 [ %655, %653 ], [ %637, %635 ], [ %586, %583 ]
  %659 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %660 = bitcast %"class.std::__1::basic_stringstream"* %9 to i64*
  store i64 %659, i64* %660, align 8
  %661 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %662 = inttoptr i64 %659 to i8*
  %663 = getelementptr i8, i8* %662, i64 -24
  %664 = bitcast i8* %663 to i64*
  %665 = load i64, i64* %664, align 8
  %666 = getelementptr inbounds i8, i8* %354, i64 %665
  %667 = bitcast i8* %666 to i64*
  store i64 %661, i64* %667, align 8
  %668 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %669 = bitcast %"class.std::__1::basic_ostream.base"* %355 to i64*
  store i64 %668, i64* %669, align 8
  %670 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %9, i64 0, i32 1
  %671 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %670, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %671, align 8
  %672 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %9, i64 0, i32 1, i32 1
  %673 = bitcast %"class.std::__1::basic_string"* %672 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %674 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %673, i64 0, i32 1, i32 0
  %675 = load i8, i8* %674, align 1
  %676 = icmp slt i8 %675, 0
  br i1 %676, label %677, label %681

677:                                              ; preds = %656
  %678 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %672, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %679 = load i8*, i8** %678, align 8
  call void @_ZdlPv(i8* %679) #17
  br label %681

680:                                              ; preds = %347
  ret void

681:                                              ; preds = %677, %656, %344, %323
  %682 = phi %"class.std::__1::basic_stringbuf"* [ %337, %323 ], [ %337, %344 ], [ %670, %656 ], [ %670, %677 ]
  %683 = phi %"class.std::__1::basic_stringstream"* [ %4, %323 ], [ %4, %344 ], [ %9, %656 ], [ %9, %677 ]
  %684 = phi i8* [ %20, %323 ], [ %20, %344 ], [ %354, %656 ], [ %354, %677 ]
  %685 = phi i8* [ %324, %323 ], [ %324, %344 ], [ %657, %656 ], [ %657, %677 ]
  %686 = phi i32 [ %325, %323 ], [ %325, %344 ], [ %658, %656 ], [ %658, %677 ]
  %687 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %682, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %687) #16
  %688 = bitcast %"class.std::__1::basic_stringstream"* %683 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %688, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #16
  %689 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %683, i64 0, i32 2
  %690 = bitcast %"class.std::__1::basic_ios.base"* %689 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %690) #16
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %684) #16
  %691 = insertvalue { i8*, i32 } undef, i8* %685, 0
  %692 = insertvalue { i8*, i32 } %691, i32 %686, 1
  resume { i8*, i32 } %692
}

; Function Attrs: noreturn ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque11ReportErrorIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvDpOT_(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.v8::internal::torque::MessageBuilder", align 8
  %4 = bitcast %"class.v8::internal::torque::MessageBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %4) #16
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16, !noalias !51
  call void @_ZN2v88internal6torque8ToStringIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEES9_DpOT_(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* dereferenceable(24) %0), !noalias !51
  invoke void @_ZN2v88internal6torque14MessageBuilderC1ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_13TorqueMessage4KindE(%"class.v8::internal::torque::MessageBuilder"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 0)
          to label %6 unwind label %14

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1, !noalias !51
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8, !noalias !51
  call void @_ZdlPv(i8* %13) #17
  br label %24

14:                                               ; preds = %1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !51
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !51
  call void @_ZdlPv(i8* %22) #17
  br label %23

23:                                               ; preds = %20, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16, !noalias !51
  resume { i8*, i32 } %15

24:                                               ; preds = %6, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16, !noalias !51
  invoke void @_ZNK2v88internal6torque14MessageBuilder5ThrowEv(%"class.v8::internal::torque::MessageBuilder"* nonnull %3) #18
          to label %25 unwind label %26

25:                                               ; preds = %24
  unreachable

26:                                               ; preds = %24
  %27 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN2v88internal6torque14MessageBuilderD2Ev(%"class.v8::internal::torque::MessageBuilder"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %4) #16
  resume { i8*, i32 } %27
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque5Lexer8RunLexerERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"struct.v8::internal::torque::LexerResult"* noalias sret, %"class.v8::internal::torque::Lexer"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i8*, align 8
  %5 = alloca %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"struct.v8::internal::torque::LexerResult"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #16
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i8* %15, i8* %18
  %21 = select i1 %13, i64 %17, i64 %19
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #16
  store i8* %20, i8** %4, align 8
  %24 = getelementptr inbounds %"class.v8::internal::torque::Lexer", %"class.v8::internal::torque::Lexer"* %1, i64 0, i32 0
  %25 = load i1 (i8**)*, i1 (i8**)** %24, align 8
  %26 = invoke zeroext i1 %25(i8** nonnull %4)
          to label %27 unwind label %248

27:                                               ; preds = %3
  %28 = load i8*, i8** %4, align 8
  %29 = icmp eq i8* %20, %28
  br i1 %29, label %47, label %30

30:                                               ; preds = %27, %30
  %31 = phi i64 [ %44, %30 ], [ 0, %27 ]
  %32 = phi i32 [ %39, %30 ], [ 0, %27 ]
  %33 = phi i8* [ %45, %30 ], [ %20, %27 ]
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 10
  %36 = add nsw i32 %32, 1
  %37 = zext i32 %36 to i64
  %38 = select i1 %35, i64 %37, i64 %31
  %39 = select i1 %35, i32 %36, i32 %32
  %40 = add i64 %31, 4294967296
  %41 = and i64 %40, -4294967296
  %42 = select i1 %35, i64 0, i64 %41
  %43 = and i64 %38, 4294967295
  %44 = or i64 %42, %43
  %45 = getelementptr inbounds i8, i8* %33, i64 1
  %46 = icmp eq i8* %45, %28
  br i1 %46, label %47, label %30

47:                                               ; preds = %30, %27
  %48 = phi i64 [ 0, %27 ], [ %44, %30 ]
  %49 = icmp eq i8* %28, %22
  br i1 %49, label %490, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %0, i64 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.v8::internal::torque::Symbol"*** %51 to i64*
  %54 = bitcast %"struct.v8::internal::torque::LexerResult"* %0 to i64*
  %55 = bitcast %"class.v8::internal::torque::Symbol"*** %52 to i64*
  %56 = bitcast i8** %4 to i64*
  %57 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %0, i64 0, i32 1
  %58 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %0, i64 0, i32 1, i32 0, i32 1
  %59 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast %"struct.v8::internal::torque::MatchedInput"** %58 to i64*
  %61 = bitcast %"class.std::__1::vector.24"* %57 to i64*
  %62 = bitcast %"struct.v8::internal::torque::MatchedInput"** %59 to i64*
  br label %63

63:                                               ; preds = %50, %479
  %64 = phi i8* [ %28, %50 ], [ %458, %479 ]
  %65 = phi i64 [ %48, %50 ], [ %480, %479 ]
  %66 = invoke %"class.v8::internal::torque::Symbol"* @_ZN2v88internal6torque5Lexer10MatchTokenEPPKcS4_(%"class.v8::internal::torque::Lexer"* %1, i8** nonnull %4, i8* %22)
          to label %67 unwind label %252

67:                                               ; preds = %63
  %68 = ptrtoint %"class.v8::internal::torque::Symbol"* %66 to i64
  %69 = load i8*, i8** %4, align 8
  %70 = icmp eq i8* %64, %69
  br i1 %70, label %90, label %71

71:                                               ; preds = %67
  %72 = trunc i64 %65 to i32
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ %65, %71 ], [ %87, %73 ]
  %75 = phi i32 [ %72, %71 ], [ %82, %73 ]
  %76 = phi i8* [ %64, %71 ], [ %88, %73 ]
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 10
  %79 = add nsw i32 %75, 1
  %80 = zext i32 %79 to i64
  %81 = select i1 %78, i64 %80, i64 %74
  %82 = select i1 %78, i32 %79, i32 %75
  %83 = add i64 %74, 4294967296
  %84 = and i64 %83, -4294967296
  %85 = select i1 %78, i64 0, i64 %84
  %86 = and i64 %81, 4294967295
  %87 = or i64 %85, %86
  %88 = getelementptr inbounds i8, i8* %76, i64 1
  %89 = icmp eq i8* %88, %69
  br i1 %89, label %90, label %73

90:                                               ; preds = %73, %67
  %91 = phi i64 [ %65, %67 ], [ %87, %73 ]
  %92 = icmp eq %"class.v8::internal::torque::Symbol"* %66, null
  br i1 %92, label %93, label %324

93:                                               ; preds = %90
  %94 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #16
  %95 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_17CurrentSourceFileEEERPNT_5ScopeEv()
          to label %96 unwind label %264

96:                                               ; preds = %93
  %97 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"** %95, align 8, !noalias !56
  %98 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"* %97, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4, !noalias !56
  %100 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 %99, i32* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %5, i64 0, i32 0, i32 1
  %102 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %101 to i64*
  store i64 %65, i64* %102, align 4
  %103 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %5, i64 0, i32 0, i32 2
  %104 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %103 to i64*
  store i64 %91, i64* %104, align 4
  %105 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %106 unwind label %264

106:                                              ; preds = %96
  %107 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %5, i64 0, i32 1
  %108 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %105 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %107 to i64*
  store i64 %109, i64* %110, align 8
  %111 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %112 unwind label %264

112:                                              ; preds = %106
  store %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %5, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %111, align 8
  %113 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #16
  %114 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #16
  %115 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #16
  %116 = ptrtoint i8* %22 to i64
  %117 = ptrtoint i8* %64 to i64
  %118 = sub i64 %116, %117
  %119 = icmp slt i64 %118, 10
  %120 = select i1 %119, i64 %118, i64 10
  %121 = getelementptr inbounds i8, i8* %64, i64 %120
  %122 = icmp ugt i64 %120, -17
  br i1 %122, label %123, label %126

123:                                              ; preds = %112
  %124 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  invoke void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %124) #18
          to label %125 unwind label %268

125:                                              ; preds = %123
  unreachable

126:                                              ; preds = %112
  %127 = icmp ult i64 %120, 23
  br i1 %127, label %137, label %128

128:                                              ; preds = %126
  %129 = add nuw nsw i64 %120, 16
  %130 = and i64 %129, -16
  %131 = invoke i8* @_Znwm(i64 %130) #20
          to label %132 unwind label %268

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %131, i8** %133, align 8
  %134 = or i64 %130, -9223372036854775808
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %120, i64* %136, align 8
  br label %142

137:                                              ; preds = %126
  %138 = trunc i64 %120 to i8
  %139 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  store i8 %138, i8* %140, align 1
  %141 = icmp eq i64 %120, 0
  br i1 %141, label %241, label %142

142:                                              ; preds = %132, %137
  %143 = phi i8* [ %131, %132 ], [ %115, %137 ]
  %144 = icmp ult i64 %120, 32
  br i1 %144, label %231, label %145

145:                                              ; preds = %142
  %146 = getelementptr i8, i8* %143, i64 %120
  %147 = icmp ult i8* %143, %121
  %148 = icmp ult i8* %64, %146
  %149 = and i1 %147, %148
  br i1 %149, label %231, label %150

150:                                              ; preds = %145
  %151 = and i64 %120, -32
  %152 = getelementptr i8, i8* %64, i64 %151
  %153 = getelementptr i8, i8* %143, i64 %151
  %154 = add i64 %151, -32
  %155 = lshr exact i64 %154, 5
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp ult i64 %154, 96
  br i1 %158, label %210, label %159

159:                                              ; preds = %150
  %160 = sub nsw i64 %156, %157
  br label %161

161:                                              ; preds = %161, %159
  %162 = phi i64 [ 0, %159 ], [ %207, %161 ]
  %163 = phi i64 [ %160, %159 ], [ %208, %161 ]
  %164 = getelementptr i8, i8* %64, i64 %162
  %165 = getelementptr i8, i8* %143, i64 %162
  %166 = bitcast i8* %164 to <16 x i8>*
  %167 = load <16 x i8>, <16 x i8>* %166, align 1, !alias.scope !59
  %168 = getelementptr i8, i8* %164, i64 16
  %169 = bitcast i8* %168 to <16 x i8>*
  %170 = load <16 x i8>, <16 x i8>* %169, align 1, !alias.scope !59
  %171 = bitcast i8* %165 to <16 x i8>*
  store <16 x i8> %167, <16 x i8>* %171, align 1, !alias.scope !62, !noalias !59
  %172 = getelementptr i8, i8* %165, i64 16
  %173 = bitcast i8* %172 to <16 x i8>*
  store <16 x i8> %170, <16 x i8>* %173, align 1, !alias.scope !62, !noalias !59
  %174 = or i64 %162, 32
  %175 = getelementptr i8, i8* %64, i64 %174
  %176 = getelementptr i8, i8* %143, i64 %174
  %177 = bitcast i8* %175 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !59
  %179 = getelementptr i8, i8* %175, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !59
  %182 = bitcast i8* %176 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 1, !alias.scope !62, !noalias !59
  %183 = getelementptr i8, i8* %176, i64 16
  %184 = bitcast i8* %183 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %184, align 1, !alias.scope !62, !noalias !59
  %185 = or i64 %162, 64
  %186 = getelementptr i8, i8* %64, i64 %185
  %187 = getelementptr i8, i8* %143, i64 %185
  %188 = bitcast i8* %186 to <16 x i8>*
  %189 = load <16 x i8>, <16 x i8>* %188, align 1, !alias.scope !59
  %190 = getelementptr i8, i8* %186, i64 16
  %191 = bitcast i8* %190 to <16 x i8>*
  %192 = load <16 x i8>, <16 x i8>* %191, align 1, !alias.scope !59
  %193 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %189, <16 x i8>* %193, align 1, !alias.scope !62, !noalias !59
  %194 = getelementptr i8, i8* %187, i64 16
  %195 = bitcast i8* %194 to <16 x i8>*
  store <16 x i8> %192, <16 x i8>* %195, align 1, !alias.scope !62, !noalias !59
  %196 = or i64 %162, 96
  %197 = getelementptr i8, i8* %64, i64 %196
  %198 = getelementptr i8, i8* %143, i64 %196
  %199 = bitcast i8* %197 to <16 x i8>*
  %200 = load <16 x i8>, <16 x i8>* %199, align 1, !alias.scope !59
  %201 = getelementptr i8, i8* %197, i64 16
  %202 = bitcast i8* %201 to <16 x i8>*
  %203 = load <16 x i8>, <16 x i8>* %202, align 1, !alias.scope !59
  %204 = bitcast i8* %198 to <16 x i8>*
  store <16 x i8> %200, <16 x i8>* %204, align 1, !alias.scope !62, !noalias !59
  %205 = getelementptr i8, i8* %198, i64 16
  %206 = bitcast i8* %205 to <16 x i8>*
  store <16 x i8> %203, <16 x i8>* %206, align 1, !alias.scope !62, !noalias !59
  %207 = add i64 %162, 128
  %208 = add i64 %163, -4
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %210, label %161, !llvm.loop !64

210:                                              ; preds = %161, %150
  %211 = phi i64 [ 0, %150 ], [ %207, %161 ]
  %212 = icmp eq i64 %157, 0
  br i1 %212, label %229, label %213

213:                                              ; preds = %210, %213
  %214 = phi i64 [ %226, %213 ], [ %211, %210 ]
  %215 = phi i64 [ %227, %213 ], [ %157, %210 ]
  %216 = getelementptr i8, i8* %64, i64 %214
  %217 = getelementptr i8, i8* %143, i64 %214
  %218 = bitcast i8* %216 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !59
  %220 = getelementptr i8, i8* %216, i64 16
  %221 = bitcast i8* %220 to <16 x i8>*
  %222 = load <16 x i8>, <16 x i8>* %221, align 1, !alias.scope !59
  %223 = bitcast i8* %217 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %223, align 1, !alias.scope !62, !noalias !59
  %224 = getelementptr i8, i8* %217, i64 16
  %225 = bitcast i8* %224 to <16 x i8>*
  store <16 x i8> %222, <16 x i8>* %225, align 1, !alias.scope !62, !noalias !59
  %226 = add i64 %214, 32
  %227 = add i64 %215, -1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %213, !llvm.loop !65

229:                                              ; preds = %213, %210
  %230 = icmp eq i64 %120, %151
  br i1 %230, label %241, label %231

231:                                              ; preds = %229, %145, %142
  %232 = phi i8* [ %64, %145 ], [ %64, %142 ], [ %152, %229 ]
  %233 = phi i8* [ %143, %145 ], [ %143, %142 ], [ %153, %229 ]
  br label %234

234:                                              ; preds = %231, %234
  %235 = phi i8* [ %238, %234 ], [ %232, %231 ]
  %236 = phi i8* [ %239, %234 ], [ %233, %231 ]
  %237 = load i8, i8* %235, align 1
  store i8 %237, i8* %236, align 1
  %238 = getelementptr inbounds i8, i8* %235, i64 1
  %239 = getelementptr inbounds i8, i8* %236, i64 1
  %240 = icmp eq i8* %238, %121
  br i1 %240, label %241, label %234, !llvm.loop !66

241:                                              ; preds = %234, %229, %137
  %242 = phi i8* [ %115, %137 ], [ %153, %229 ], [ %239, %234 ]
  store i8 0, i8* %242, align 1
  invoke void @_ZN2v88internal6torque18StringLiteralQuoteERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8)
          to label %243 unwind label %272

243:                                              ; preds = %241
  %244 = invoke dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %7, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0))
          to label %245 unwind label %276

245:                                              ; preds = %243
  %246 = bitcast %"class.std::__1::basic_string"* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %113, i8* align 8 %246, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %246, i8 0, i64 24, i1 false) #16, !noalias !67
  invoke void @_ZN2v88internal6torque11ReportErrorIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvDpOT_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #18
          to label %247 unwind label %280

247:                                              ; preds = %245
  unreachable

248:                                              ; preds = %3
  %249 = landingpad { i8*, i32 }
          cleanup
  %250 = extractvalue { i8*, i32 } %249, 0
  %251 = extractvalue { i8*, i32 } %249, 1
  br label %597

252:                                              ; preds = %63
  %253 = landingpad { i8*, i32 }
          cleanup
  %254 = extractvalue { i8*, i32 } %253, 0
  %255 = extractvalue { i8*, i32 } %253, 1
  br label %597

256:                                              ; preds = %454, %356
  %257 = landingpad { i8*, i32 }
          cleanup
  br label %260

258:                                              ; preds = %340, %354
  %259 = landingpad { i8*, i32 }
          cleanup
  br label %260

260:                                              ; preds = %258, %256
  %261 = phi { i8*, i32 } [ %257, %256 ], [ %259, %258 ]
  %262 = extractvalue { i8*, i32 } %261, 0
  %263 = extractvalue { i8*, i32 } %261, 1
  br label %597

264:                                              ; preds = %106, %96, %93
  %265 = landingpad { i8*, i32 }
          cleanup
  %266 = extractvalue { i8*, i32 } %265, 0
  %267 = extractvalue { i8*, i32 } %265, 1
  br label %321

268:                                              ; preds = %128, %123
  %269 = landingpad { i8*, i32 }
          cleanup
  %270 = extractvalue { i8*, i32 } %269, 0
  %271 = extractvalue { i8*, i32 } %269, 1
  br label %311

272:                                              ; preds = %241
  %273 = landingpad { i8*, i32 }
          cleanup
  %274 = extractvalue { i8*, i32 } %273, 0
  %275 = extractvalue { i8*, i32 } %273, 1
  br label %301

276:                                              ; preds = %243
  %277 = landingpad { i8*, i32 }
          cleanup
  %278 = extractvalue { i8*, i32 } %277, 0
  %279 = extractvalue { i8*, i32 } %277, 1
  br label %291

280:                                              ; preds = %245
  %281 = landingpad { i8*, i32 }
          cleanup
  %282 = extractvalue { i8*, i32 } %281, 0
  %283 = extractvalue { i8*, i32 } %281, 1
  %284 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %285 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %284, i64 0, i32 1, i32 0
  %286 = load i8, i8* %285, align 1
  %287 = icmp slt i8 %286, 0
  br i1 %287, label %288, label %291

288:                                              ; preds = %280
  %289 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8
  call void @_ZdlPv(i8* %290) #17
  br label %291

291:                                              ; preds = %288, %280, %276
  %292 = phi i8* [ %278, %276 ], [ %282, %280 ], [ %282, %288 ]
  %293 = phi i32 [ %279, %276 ], [ %283, %280 ], [ %283, %288 ]
  %294 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %295 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %294, i64 0, i32 1, i32 0
  %296 = load i8, i8* %295, align 1
  %297 = icmp slt i8 %296, 0
  br i1 %297, label %298, label %301

298:                                              ; preds = %291
  %299 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = load i8*, i8** %299, align 8
  call void @_ZdlPv(i8* %300) #17
  br label %301

301:                                              ; preds = %298, %291, %272
  %302 = phi i8* [ %274, %272 ], [ %292, %291 ], [ %292, %298 ]
  %303 = phi i32 [ %275, %272 ], [ %293, %291 ], [ %293, %298 ]
  %304 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %305 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %304, i64 0, i32 1, i32 0
  %306 = load i8, i8* %305, align 1
  %307 = icmp slt i8 %306, 0
  br i1 %307, label %308, label %311

308:                                              ; preds = %301
  %309 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = load i8*, i8** %309, align 8
  call void @_ZdlPv(i8* %310) #17
  br label %311

311:                                              ; preds = %308, %301, %268
  %312 = phi i8* [ %270, %268 ], [ %302, %301 ], [ %302, %308 ]
  %313 = phi i32 [ %271, %268 ], [ %303, %301 ], [ %303, %308 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #16
  %314 = load i64, i64* %110, align 8
  %315 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %319 unwind label %316

316:                                              ; preds = %311
  %317 = landingpad { i8*, i32 }
          catch i8* null
  %318 = extractvalue { i8*, i32 } %317, 0
  call void @__clang_call_terminate(i8* %318) #19
  unreachable

319:                                              ; preds = %311
  %320 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %315 to i64*
  store i64 %314, i64* %320, align 8
  br label %321

321:                                              ; preds = %319, %264
  %322 = phi i8* [ %312, %319 ], [ %266, %264 ]
  %323 = phi i32 [ %313, %319 ], [ %267, %264 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94) #16
  br label %597

324:                                              ; preds = %90
  %325 = load %"class.v8::internal::torque::Symbol"**, %"class.v8::internal::torque::Symbol"*** %51, align 8
  %326 = load %"class.v8::internal::torque::Symbol"**, %"class.v8::internal::torque::Symbol"*** %52, align 8
  %327 = icmp eq %"class.v8::internal::torque::Symbol"** %325, %326
  %328 = ptrtoint %"class.v8::internal::torque::Symbol"** %326 to i64
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.v8::internal::torque::Symbol"** %325 to i64*
  store i64 %68, i64* %330, align 8
  %331 = getelementptr inbounds %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %325, i64 1
  %332 = ptrtoint %"class.v8::internal::torque::Symbol"** %331 to i64
  store i64 %332, i64* %53, align 8
  br label %380

333:                                              ; preds = %324
  %334 = ptrtoint %"class.v8::internal::torque::Symbol"** %325 to i64
  %335 = load i64, i64* %54, align 8
  %336 = sub i64 %334, %335
  %337 = ashr exact i64 %336, 3
  %338 = add nsw i64 %337, 1
  %339 = icmp ugt i64 %338, 2305843009213693951
  br i1 %339, label %340, label %343

340:                                              ; preds = %333
  %341 = bitcast %"struct.v8::internal::torque::LexerResult"* %0 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %341) #18
          to label %342 unwind label %258

342:                                              ; preds = %340
  unreachable

343:                                              ; preds = %333
  %344 = sub i64 %328, %335
  %345 = ashr exact i64 %344, 3
  %346 = icmp ult i64 %345, 1152921504606846975
  br i1 %346, label %347, label %356

347:                                              ; preds = %343
  %348 = ashr exact i64 %344, 2
  %349 = icmp ult i64 %348, %338
  %350 = select i1 %349, i64 %338, i64 %348
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %362, label %352

352:                                              ; preds = %347
  %353 = icmp ugt i64 %350, 2305843009213693951
  br i1 %353, label %354, label %356

354:                                              ; preds = %352
  invoke void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.14, i64 0, i64 0)) #18
          to label %355 unwind label %258

355:                                              ; preds = %354
  unreachable

356:                                              ; preds = %352, %343
  %357 = phi i64 [ %350, %352 ], [ 2305843009213693951, %343 ]
  %358 = shl i64 %357, 3
  %359 = invoke i8* @_Znwm(i64 %358) #20
          to label %360 unwind label %256

360:                                              ; preds = %356
  %361 = bitcast i8* %359 to %"class.v8::internal::torque::Symbol"**
  br label %362

362:                                              ; preds = %360, %347
  %363 = phi i64 [ %357, %360 ], [ 0, %347 ]
  %364 = phi i8* [ %359, %360 ], [ null, %347 ]
  %365 = phi %"class.v8::internal::torque::Symbol"** [ %361, %360 ], [ null, %347 ]
  %366 = getelementptr inbounds %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %365, i64 %337
  %367 = getelementptr inbounds %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %365, i64 %363
  %368 = ptrtoint %"class.v8::internal::torque::Symbol"** %367 to i64
  %369 = bitcast %"class.v8::internal::torque::Symbol"** %366 to i64*
  store i64 %68, i64* %369, align 8
  %370 = getelementptr inbounds %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %366, i64 1
  %371 = ptrtoint %"class.v8::internal::torque::Symbol"** %370 to i64
  %372 = ptrtoint %"class.v8::internal::torque::Symbol"** %365 to i64
  %373 = icmp sgt i64 %336, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %362
  %375 = inttoptr i64 %335 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %364, i8* align 8 %375, i64 %336, i1 false) #16
  br label %376

376:                                              ; preds = %374, %362
  store i64 %372, i64* %54, align 8
  store i64 %371, i64* %53, align 8
  store i64 %368, i64* %55, align 8
  %377 = icmp eq i64 %335, 0
  br i1 %377, label %380, label %378

378:                                              ; preds = %376
  %379 = inttoptr i64 %335 to i8*
  call void @_ZdlPv(i8* %379) #17
  br label %380

380:                                              ; preds = %378, %376, %329
  %381 = load i64, i64* %56, align 8
  %382 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_17CurrentSourceFileEEERPNT_5ScopeEv()
          to label %383 unwind label %482

383:                                              ; preds = %380
  %384 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"** %382, align 8, !noalias !70
  %385 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"* %384, i64 0, i32 0, i32 0
  %386 = load i32, i32* %385, align 4, !noalias !70
  %387 = load %"struct.v8::internal::torque::MatchedInput"*, %"struct.v8::internal::torque::MatchedInput"** %58, align 8
  %388 = load %"struct.v8::internal::torque::MatchedInput"*, %"struct.v8::internal::torque::MatchedInput"** %59, align 8
  %389 = icmp ult %"struct.v8::internal::torque::MatchedInput"* %387, %388
  %390 = ptrtoint %"struct.v8::internal::torque::MatchedInput"* %388 to i64
  br i1 %389, label %391, label %402

391:                                              ; preds = %383
  %392 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %387, i64 0, i32 0
  store i8* %64, i8** %392, align 8
  %393 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %387, i64 0, i32 1
  %394 = bitcast i8** %393 to i64*
  store i64 %381, i64* %394, align 8
  %395 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %387, i64 0, i32 2, i32 0, i32 0
  store i32 %386, i32* %395, align 8
  %396 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %387, i64 0, i32 2, i32 1
  %397 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %396 to i64*
  store i64 %65, i64* %397, align 4
  %398 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %387, i64 0, i32 2, i32 2
  %399 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %398 to i64*
  store i64 %91, i64* %399, align 4
  %400 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %387, i64 1
  %401 = ptrtoint %"struct.v8::internal::torque::MatchedInput"* %400 to i64
  store i64 %401, i64* %60, align 8
  br label %454

402:                                              ; preds = %383
  %403 = ptrtoint %"struct.v8::internal::torque::MatchedInput"* %387 to i64
  %404 = load i64, i64* %61, align 8
  %405 = sub i64 %403, %404
  %406 = sdiv exact i64 %405, 40
  %407 = add nsw i64 %406, 1
  %408 = icmp ugt i64 %407, 461168601842738790
  br i1 %408, label %409, label %412

409:                                              ; preds = %402
  %410 = bitcast %"class.std::__1::vector.24"* %57 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %410) #18
          to label %411 unwind label %484

411:                                              ; preds = %409
  unreachable

412:                                              ; preds = %402
  %413 = sub i64 %390, %404
  %414 = sdiv exact i64 %413, 40
  %415 = icmp ult i64 %414, 230584300921369395
  br i1 %415, label %416, label %421

416:                                              ; preds = %412
  %417 = shl nsw i64 %414, 1
  %418 = icmp ult i64 %417, %407
  %419 = select i1 %418, i64 %407, i64 %417
  %420 = icmp eq i64 %419, 0
  br i1 %420, label %427, label %421

421:                                              ; preds = %416, %412
  %422 = phi i64 [ %419, %416 ], [ 461168601842738790, %412 ]
  %423 = mul i64 %422, 40
  %424 = invoke i8* @_Znwm(i64 %423) #20
          to label %425 unwind label %482

425:                                              ; preds = %421
  %426 = bitcast i8* %424 to %"struct.v8::internal::torque::MatchedInput"*
  br label %427

427:                                              ; preds = %425, %416
  %428 = phi i64 [ %422, %425 ], [ 0, %416 ]
  %429 = phi %"struct.v8::internal::torque::MatchedInput"* [ %426, %425 ], [ null, %416 ]
  %430 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %429, i64 %406
  %431 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %429, i64 %428
  %432 = ptrtoint %"struct.v8::internal::torque::MatchedInput"* %431 to i64
  %433 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %430, i64 0, i32 0
  store i8* %64, i8** %433, align 8
  %434 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %429, i64 %406, i32 1
  %435 = bitcast i8** %434 to i64*
  store i64 %381, i64* %435, align 8
  %436 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %429, i64 %406, i32 2, i32 0, i32 0
  store i32 %386, i32* %436, align 8
  %437 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %429, i64 %406, i32 2, i32 1
  %438 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %437 to i64*
  store i64 %65, i64* %438, align 4
  %439 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %429, i64 %406, i32 2, i32 2
  %440 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %439 to i64*
  store i64 %91, i64* %440, align 4
  %441 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %430, i64 1
  %442 = ptrtoint %"struct.v8::internal::torque::MatchedInput"* %441 to i64
  %443 = sdiv exact i64 %405, -40
  %444 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %430, i64 %443
  %445 = ptrtoint %"struct.v8::internal::torque::MatchedInput"* %444 to i64
  %446 = icmp sgt i64 %405, 0
  br i1 %446, label %447, label %450

447:                                              ; preds = %427
  %448 = bitcast %"struct.v8::internal::torque::MatchedInput"* %444 to i8*
  %449 = inttoptr i64 %404 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %448, i8* align 8 %449, i64 %405, i1 false) #16
  br label %450

450:                                              ; preds = %447, %427
  store i64 %445, i64* %61, align 8
  store i64 %442, i64* %60, align 8
  store i64 %432, i64* %62, align 8
  %451 = icmp eq i64 %404, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %404 to i8*
  call void @_ZdlPv(i8* %453) #17
  br label %454

454:                                              ; preds = %452, %450, %391
  %455 = load i1 (i8**)*, i1 (i8**)** %24, align 8
  %456 = invoke zeroext i1 %455(i8** nonnull %4)
          to label %457 unwind label %256

457:                                              ; preds = %454
  %458 = load i8*, i8** %4, align 8
  %459 = icmp eq i8* %69, %458
  br i1 %459, label %479, label %460

460:                                              ; preds = %457
  %461 = trunc i64 %91 to i32
  br label %462

462:                                              ; preds = %462, %460
  %463 = phi i64 [ %91, %460 ], [ %476, %462 ]
  %464 = phi i32 [ %461, %460 ], [ %471, %462 ]
  %465 = phi i8* [ %69, %460 ], [ %477, %462 ]
  %466 = load i8, i8* %465, align 1
  %467 = icmp eq i8 %466, 10
  %468 = add nsw i32 %464, 1
  %469 = zext i32 %468 to i64
  %470 = select i1 %467, i64 %469, i64 %463
  %471 = select i1 %467, i32 %468, i32 %464
  %472 = add i64 %463, 4294967296
  %473 = and i64 %472, -4294967296
  %474 = select i1 %467, i64 0, i64 %473
  %475 = and i64 %470, 4294967295
  %476 = or i64 %474, %475
  %477 = getelementptr inbounds i8, i8* %465, i64 1
  %478 = icmp eq i8* %477, %458
  br i1 %478, label %479, label %462

479:                                              ; preds = %462, %457
  %480 = phi i64 [ %91, %457 ], [ %476, %462 ]
  %481 = icmp eq i8* %458, %22
  br i1 %481, label %490, label %63

482:                                              ; preds = %380, %421
  %483 = landingpad { i8*, i32 }
          cleanup
  br label %486

484:                                              ; preds = %409
  %485 = landingpad { i8*, i32 }
          cleanup
  br label %486

486:                                              ; preds = %484, %482
  %487 = phi { i8*, i32 } [ %483, %482 ], [ %485, %484 ]
  %488 = extractvalue { i8*, i32 } %487, 0
  %489 = extractvalue { i8*, i32 } %487, 1
  br label %597

490:                                              ; preds = %479, %47
  %491 = phi i64 [ %48, %47 ], [ %480, %479 ]
  %492 = phi i8* [ %20, %47 ], [ %64, %479 ]
  %493 = icmp eq i8* %492, %22
  br i1 %493, label %513, label %494

494:                                              ; preds = %490
  %495 = trunc i64 %491 to i32
  br label %496

496:                                              ; preds = %496, %494
  %497 = phi i64 [ %491, %494 ], [ %510, %496 ]
  %498 = phi i32 [ %495, %494 ], [ %505, %496 ]
  %499 = phi i8* [ %492, %494 ], [ %511, %496 ]
  %500 = load i8, i8* %499, align 1
  %501 = icmp eq i8 %500, 10
  %502 = add nsw i32 %498, 1
  %503 = zext i32 %502 to i64
  %504 = select i1 %501, i64 %503, i64 %497
  %505 = select i1 %501, i32 %502, i32 %498
  %506 = add i64 %497, 4294967296
  %507 = and i64 %506, -4294967296
  %508 = select i1 %501, i64 0, i64 %507
  %509 = and i64 %504, 4294967295
  %510 = or i64 %508, %509
  %511 = getelementptr inbounds i8, i8* %499, i64 1
  %512 = icmp eq i8* %511, %22
  br i1 %512, label %513, label %496

513:                                              ; preds = %496, %490
  %514 = phi i64 [ %491, %490 ], [ %510, %496 ]
  %515 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_17CurrentSourceFileEEERPNT_5ScopeEv()
          to label %516 unwind label %593

516:                                              ; preds = %513
  %517 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"** %515, align 8, !noalias !73
  %518 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"* %517, i64 0, i32 0, i32 0
  %519 = load i32, i32* %518, align 4, !noalias !73
  %520 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %0, i64 0, i32 1
  %521 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %0, i64 0, i32 1, i32 0, i32 1
  %522 = load %"struct.v8::internal::torque::MatchedInput"*, %"struct.v8::internal::torque::MatchedInput"** %521, align 8
  %523 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %524 = load %"struct.v8::internal::torque::MatchedInput"*, %"struct.v8::internal::torque::MatchedInput"** %523, align 8
  %525 = icmp ult %"struct.v8::internal::torque::MatchedInput"* %522, %524
  %526 = ptrtoint %"struct.v8::internal::torque::MatchedInput"* %524 to i64
  br i1 %525, label %527, label %538

527:                                              ; preds = %516
  %528 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %522, i64 0, i32 0
  store i8* %22, i8** %528, align 8
  %529 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %522, i64 0, i32 1
  store i8* %22, i8** %529, align 8
  %530 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %522, i64 0, i32 2, i32 0, i32 0
  store i32 %519, i32* %530, align 8
  %531 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %522, i64 0, i32 2, i32 1
  %532 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %531 to i64*
  store i64 %491, i64* %532, align 4
  %533 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %522, i64 0, i32 2, i32 2
  %534 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %533 to i64*
  store i64 %514, i64* %534, align 4
  %535 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %522, i64 1
  %536 = ptrtoint %"struct.v8::internal::torque::MatchedInput"* %535 to i64
  %537 = bitcast %"struct.v8::internal::torque::MatchedInput"** %521 to i64*
  store i64 %536, i64* %537, align 8
  br label %592

538:                                              ; preds = %516
  %539 = ptrtoint %"struct.v8::internal::torque::MatchedInput"* %522 to i64
  %540 = bitcast %"struct.v8::internal::torque::MatchedInput"** %521 to i64*
  %541 = bitcast %"class.std::__1::vector.24"* %520 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = sub i64 %539, %542
  %544 = sdiv exact i64 %543, 40
  %545 = add nsw i64 %544, 1
  %546 = icmp ugt i64 %545, 461168601842738790
  br i1 %546, label %547, label %550

547:                                              ; preds = %538
  %548 = bitcast %"class.std::__1::vector.24"* %520 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %548) #18
          to label %549 unwind label %593

549:                                              ; preds = %547
  unreachable

550:                                              ; preds = %538
  %551 = bitcast %"struct.v8::internal::torque::MatchedInput"** %523 to i64*
  %552 = sub i64 %526, %542
  %553 = sdiv exact i64 %552, 40
  %554 = icmp ult i64 %553, 230584300921369395
  br i1 %554, label %555, label %560

555:                                              ; preds = %550
  %556 = shl nsw i64 %553, 1
  %557 = icmp ult i64 %556, %545
  %558 = select i1 %557, i64 %545, i64 %556
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %566, label %560

560:                                              ; preds = %555, %550
  %561 = phi i64 [ %558, %555 ], [ 461168601842738790, %550 ]
  %562 = mul i64 %561, 40
  %563 = invoke i8* @_Znwm(i64 %562) #20
          to label %564 unwind label %593

564:                                              ; preds = %560
  %565 = bitcast i8* %563 to %"struct.v8::internal::torque::MatchedInput"*
  br label %566

566:                                              ; preds = %564, %555
  %567 = phi i64 [ %561, %564 ], [ 0, %555 ]
  %568 = phi %"struct.v8::internal::torque::MatchedInput"* [ %565, %564 ], [ null, %555 ]
  %569 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %568, i64 %544
  %570 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %568, i64 %567
  %571 = ptrtoint %"struct.v8::internal::torque::MatchedInput"* %570 to i64
  %572 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %569, i64 0, i32 0
  store i8* %22, i8** %572, align 8
  %573 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %568, i64 %544, i32 1
  store i8* %22, i8** %573, align 8
  %574 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %568, i64 %544, i32 2, i32 0, i32 0
  store i32 %519, i32* %574, align 8
  %575 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %568, i64 %544, i32 2, i32 1
  %576 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %575 to i64*
  store i64 %491, i64* %576, align 4
  %577 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %568, i64 %544, i32 2, i32 2
  %578 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %577 to i64*
  store i64 %514, i64* %578, align 4
  %579 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %569, i64 1
  %580 = ptrtoint %"struct.v8::internal::torque::MatchedInput"* %579 to i64
  %581 = sdiv exact i64 %543, -40
  %582 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %569, i64 %581
  %583 = ptrtoint %"struct.v8::internal::torque::MatchedInput"* %582 to i64
  %584 = icmp sgt i64 %543, 0
  br i1 %584, label %585, label %588

585:                                              ; preds = %566
  %586 = bitcast %"struct.v8::internal::torque::MatchedInput"* %582 to i8*
  %587 = inttoptr i64 %542 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %586, i8* align 8 %587, i64 %543, i1 false) #16
  br label %588

588:                                              ; preds = %585, %566
  store i64 %583, i64* %541, align 8
  store i64 %580, i64* %540, align 8
  store i64 %571, i64* %551, align 8
  %589 = icmp eq i64 %542, 0
  br i1 %589, label %592, label %590

590:                                              ; preds = %588
  %591 = inttoptr i64 %542 to i8*
  call void @_ZdlPv(i8* %591) #17
  br label %592

592:                                              ; preds = %590, %588, %527
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #16
  ret void

593:                                              ; preds = %513, %560, %547
  %594 = landingpad { i8*, i32 }
          cleanup
  %595 = extractvalue { i8*, i32 } %594, 0
  %596 = extractvalue { i8*, i32 } %594, 1
  br label %597

597:                                              ; preds = %252, %486, %321, %260, %593, %248
  %598 = phi i8* [ %595, %593 ], [ %250, %248 ], [ %254, %252 ], [ %262, %260 ], [ %488, %486 ], [ %322, %321 ]
  %599 = phi i32 [ %596, %593 ], [ %251, %248 ], [ %255, %252 ], [ %263, %260 ], [ %489, %486 ], [ %323, %321 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #16
  %600 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %0, i64 0, i32 1, i32 0, i32 0
  %601 = load %"struct.v8::internal::torque::MatchedInput"*, %"struct.v8::internal::torque::MatchedInput"** %600, align 8
  %602 = icmp eq %"struct.v8::internal::torque::MatchedInput"* %601, null
  br i1 %602, label %608, label %603

603:                                              ; preds = %597
  %604 = ptrtoint %"struct.v8::internal::torque::MatchedInput"* %601 to i64
  %605 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %0, i64 0, i32 1, i32 0, i32 1
  %606 = bitcast %"struct.v8::internal::torque::MatchedInput"** %605 to i64*
  store i64 %604, i64* %606, align 8
  %607 = bitcast %"struct.v8::internal::torque::MatchedInput"* %601 to i8*
  call void @_ZdlPv(i8* %607) #17
  br label %608

608:                                              ; preds = %603, %597
  %609 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %0, i64 0, i32 0, i32 0, i32 0
  %610 = load %"class.v8::internal::torque::Symbol"**, %"class.v8::internal::torque::Symbol"*** %609, align 8
  %611 = icmp eq %"class.v8::internal::torque::Symbol"** %610, null
  br i1 %611, label %617, label %612

612:                                              ; preds = %608
  %613 = ptrtoint %"class.v8::internal::torque::Symbol"** %610 to i64
  %614 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %0, i64 0, i32 0, i32 0, i32 1
  %615 = bitcast %"class.v8::internal::torque::Symbol"*** %614 to i64*
  store i64 %613, i64* %615, align 8
  %616 = bitcast %"class.v8::internal::torque::Symbol"** %610 to i8*
  call void @_ZdlPv(i8* %616) #17
  br label %617

617:                                              ; preds = %608, %612
  %618 = insertvalue { i8*, i32 } undef, i8* %598, 0
  %619 = insertvalue { i8*, i32 } %618, i32 %599, 1
  resume { i8*, i32 } %619
}

; Function Attrs: ssp uwtable
define hidden %"class.v8::internal::torque::Symbol"* @_ZN2v88internal6torque5Lexer10MatchTokenEPPKcS4_(%"class.v8::internal::torque::Lexer"*, i8** nocapture, i8*) local_unnamed_addr #0 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = alloca i8*, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = load i8*, i8** %1, align 8
  %7 = getelementptr inbounds %"class.v8::internal::torque::Lexer", %"class.v8::internal::torque::Lexer"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::torque::Lexer", %"class.v8::internal::torque::Lexer"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %10 = icmp eq %"class.std::__1::__tree_end_node"* %8, %9
  %11 = ptrtoint i8* %6 to i64
  br i1 %10, label %17, label %12

12:                                               ; preds = %3
  %13 = bitcast i8** %4 to i8*
  br label %34

14:                                               ; preds = %77
  %15 = bitcast i8** %1 to i64*
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %3, %14
  %18 = phi i64 [ %16, %14 ], [ %11, %3 ]
  %19 = phi %"class.v8::internal::torque::Symbol"* [ %49, %14 ], [ null, %3 ]
  %20 = sub i64 %18, %11
  %21 = getelementptr inbounds %"class.v8::internal::torque::Lexer", %"class.v8::internal::torque::Lexer"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::torque::Lexer", %"class.v8::internal::torque::Lexer"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %21, %23
  br i1 %24, label %357, label %25

25:                                               ; preds = %17
  %26 = ptrtoint i8* %2 to i64
  %27 = sub i64 %26, %11
  %28 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  br label %80

34:                                               ; preds = %12, %77
  %35 = phi %"class.v8::internal::torque::Symbol"* [ null, %12 ], [ %49, %77 ]
  %36 = phi %"class.std::__1::__tree_end_node"* [ %8, %12 ], [ %78, %77 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  store i8* %6, i8** %4, align 8
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to i1 (i8**)**
  %39 = load i1 (i8**)*, i1 (i8**)** %38, align 8
  %40 = call zeroext i1 %39(i8** nonnull %4)
  br i1 %40, label %41, label %48

41:                                               ; preds = %34
  %42 = load i8*, i8** %4, align 8
  %43 = load i8*, i8** %1, align 8
  %44 = icmp ugt i8* %42, %43
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  store i8* %42, i8** %1, align 8
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 5
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.v8::internal::torque::Symbol"*
  br label %48

48:                                               ; preds = %45, %41, %34
  %49 = phi %"class.v8::internal::torque::Symbol"* [ %47, %45 ], [ %35, %41 ], [ %35, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 1, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %52, label %53, label %61

53:                                               ; preds = %48
  %54 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 2
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.std::__1::__tree_end_node"**
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, %54
  br i1 %60, label %77, label %68

61:                                               ; preds = %48, %61
  %62 = phi %"class.std::__1::__tree_node_base"* [ %64, %61 ], [ %51, %48 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %66, label %61

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  br label %77

68:                                               ; preds = %53, %68
  %69 = phi %"class.std::__1::__tree_end_node"** [ %72, %68 ], [ %56, %53 ]
  %70 = bitcast %"class.std::__1::__tree_end_node"** %69 to %"class.std::__1::__tree_node_base"**
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 2
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, %71
  br i1 %76, label %77, label %68

77:                                               ; preds = %68, %53, %66
  %78 = phi %"class.std::__1::__tree_end_node"* [ %67, %66 ], [ %57, %53 ], [ %73, %68 ]
  %79 = icmp eq %"class.std::__1::__tree_end_node"* %78, %9
  br i1 %79, label %14, label %34

80:                                               ; preds = %25, %348
  %81 = phi %"class.std::__1::__tree_end_node"* [ %21, %25 ], [ %350, %348 ]
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 0, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node_base"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %80, %85
  %86 = phi %"class.std::__1::__tree_node_base"* [ %88, %85 ], [ %83, %80 ]
  %87 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %86, i64 0, i32 1
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %101, label %85

90:                                               ; preds = %80, %90
  %91 = phi %"class.std::__1::__tree_end_node"* [ %95, %90 ], [ %81, %80 ]
  %92 = bitcast %"class.std::__1::__tree_end_node"* %91 to %"class.std::__1::__tree_node_base"*
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 2
  %94 = bitcast %"class.std::__1::__tree_end_node"* %93 to %"class.std::__1::__tree_end_node"**
  %95 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %96 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %92
  br i1 %98, label %90, label %99

99:                                               ; preds = %90
  %100 = bitcast %"class.std::__1::__tree_end_node"* %95 to %"class.std::__1::__tree_node_base"*
  br label %101

101:                                              ; preds = %85, %99
  %102 = phi %"class.std::__1::__tree_node_base"* [ %100, %99 ], [ %86, %85 ]
  %103 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %102, i64 1
  %104 = bitcast %"class.std::__1::__tree_node_base"* %103 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %102, i64 1, i32 1
  %110 = bitcast %"class.std::__1::__tree_node_base"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  br label %114

112:                                              ; preds = %101
  %113 = zext i8 %106 to i64
  br label %114

114:                                              ; preds = %108, %112
  %115 = phi i64 [ %111, %108 ], [ %113, %112 ]
  %116 = icmp ult i64 %27, %115
  br i1 %116, label %329, label %117

117:                                              ; preds = %114
  br i1 %107, label %118, label %122

118:                                              ; preds = %117
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %102, i64 1, i32 1
  %120 = bitcast %"class.std::__1::__tree_node_base"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  br label %124

122:                                              ; preds = %117
  %123 = zext i8 %106 to i64
  br label %124

124:                                              ; preds = %118, %122
  %125 = phi i64 [ %121, %118 ], [ %123, %122 ]
  %126 = icmp ult i64 %125, %20
  br i1 %126, label %329, label %127

127:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #16
  br i1 %107, label %130, label %128

128:                                              ; preds = %127
  %129 = zext i8 %106 to i64
  br label %137

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %102, i64 1, i32 1
  %132 = bitcast %"class.std::__1::__tree_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = icmp ugt i64 %133, -17
  br i1 %134, label %135, label %137

135:                                              ; preds = %130
  %136 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %136) #18
  unreachable

137:                                              ; preds = %128, %130
  %138 = phi i64 [ %129, %128 ], [ %133, %130 ]
  %139 = getelementptr inbounds i8, i8* %6, i64 %138
  %140 = icmp ult i64 %138, 23
  br i1 %140, label %146, label %141

141:                                              ; preds = %137
  %142 = add nuw i64 %138, 16
  %143 = and i64 %142, -16
  %144 = call i8* @_Znwm(i64 %143) #20
  store i8* %144, i8** %29, align 8
  %145 = or i64 %143, -9223372036854775808
  store i64 %145, i64* %30, align 8
  store i64 %138, i64* %31, align 8
  br label %149

146:                                              ; preds = %137
  %147 = trunc i64 %138 to i8
  store i8 %147, i8* %33, align 1
  %148 = icmp eq i64 %138, 0
  br i1 %148, label %248, label %149

149:                                              ; preds = %141, %146
  %150 = phi i8* [ %144, %141 ], [ %28, %146 ]
  %151 = icmp ult i64 %138, 32
  br i1 %151, label %238, label %152

152:                                              ; preds = %149
  %153 = getelementptr i8, i8* %150, i64 %138
  %154 = icmp ult i8* %150, %139
  %155 = icmp ult i8* %6, %153
  %156 = and i1 %154, %155
  br i1 %156, label %238, label %157

157:                                              ; preds = %152
  %158 = and i64 %138, -32
  %159 = getelementptr i8, i8* %6, i64 %158
  %160 = getelementptr i8, i8* %150, i64 %158
  %161 = add i64 %158, -32
  %162 = lshr exact i64 %161, 5
  %163 = add nuw nsw i64 %162, 1
  %164 = and i64 %163, 3
  %165 = icmp ult i64 %161, 96
  br i1 %165, label %217, label %166

166:                                              ; preds = %157
  %167 = sub nsw i64 %163, %164
  br label %168

168:                                              ; preds = %168, %166
  %169 = phi i64 [ 0, %166 ], [ %214, %168 ]
  %170 = phi i64 [ %167, %166 ], [ %215, %168 ]
  %171 = getelementptr i8, i8* %6, i64 %169
  %172 = getelementptr i8, i8* %150, i64 %169
  %173 = bitcast i8* %171 to <16 x i8>*
  %174 = load <16 x i8>, <16 x i8>* %173, align 1, !alias.scope !76
  %175 = getelementptr i8, i8* %171, i64 16
  %176 = bitcast i8* %175 to <16 x i8>*
  %177 = load <16 x i8>, <16 x i8>* %176, align 1, !alias.scope !76
  %178 = bitcast i8* %172 to <16 x i8>*
  store <16 x i8> %174, <16 x i8>* %178, align 1, !alias.scope !79, !noalias !76
  %179 = getelementptr i8, i8* %172, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %177, <16 x i8>* %180, align 1, !alias.scope !79, !noalias !76
  %181 = or i64 %169, 32
  %182 = getelementptr i8, i8* %6, i64 %181
  %183 = getelementptr i8, i8* %150, i64 %181
  %184 = bitcast i8* %182 to <16 x i8>*
  %185 = load <16 x i8>, <16 x i8>* %184, align 1, !alias.scope !76
  %186 = getelementptr i8, i8* %182, i64 16
  %187 = bitcast i8* %186 to <16 x i8>*
  %188 = load <16 x i8>, <16 x i8>* %187, align 1, !alias.scope !76
  %189 = bitcast i8* %183 to <16 x i8>*
  store <16 x i8> %185, <16 x i8>* %189, align 1, !alias.scope !79, !noalias !76
  %190 = getelementptr i8, i8* %183, i64 16
  %191 = bitcast i8* %190 to <16 x i8>*
  store <16 x i8> %188, <16 x i8>* %191, align 1, !alias.scope !79, !noalias !76
  %192 = or i64 %169, 64
  %193 = getelementptr i8, i8* %6, i64 %192
  %194 = getelementptr i8, i8* %150, i64 %192
  %195 = bitcast i8* %193 to <16 x i8>*
  %196 = load <16 x i8>, <16 x i8>* %195, align 1, !alias.scope !76
  %197 = getelementptr i8, i8* %193, i64 16
  %198 = bitcast i8* %197 to <16 x i8>*
  %199 = load <16 x i8>, <16 x i8>* %198, align 1, !alias.scope !76
  %200 = bitcast i8* %194 to <16 x i8>*
  store <16 x i8> %196, <16 x i8>* %200, align 1, !alias.scope !79, !noalias !76
  %201 = getelementptr i8, i8* %194, i64 16
  %202 = bitcast i8* %201 to <16 x i8>*
  store <16 x i8> %199, <16 x i8>* %202, align 1, !alias.scope !79, !noalias !76
  %203 = or i64 %169, 96
  %204 = getelementptr i8, i8* %6, i64 %203
  %205 = getelementptr i8, i8* %150, i64 %203
  %206 = bitcast i8* %204 to <16 x i8>*
  %207 = load <16 x i8>, <16 x i8>* %206, align 1, !alias.scope !76
  %208 = getelementptr i8, i8* %204, i64 16
  %209 = bitcast i8* %208 to <16 x i8>*
  %210 = load <16 x i8>, <16 x i8>* %209, align 1, !alias.scope !76
  %211 = bitcast i8* %205 to <16 x i8>*
  store <16 x i8> %207, <16 x i8>* %211, align 1, !alias.scope !79, !noalias !76
  %212 = getelementptr i8, i8* %205, i64 16
  %213 = bitcast i8* %212 to <16 x i8>*
  store <16 x i8> %210, <16 x i8>* %213, align 1, !alias.scope !79, !noalias !76
  %214 = add i64 %169, 128
  %215 = add i64 %170, -4
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %168, !llvm.loop !81

217:                                              ; preds = %168, %157
  %218 = phi i64 [ 0, %157 ], [ %214, %168 ]
  %219 = icmp eq i64 %164, 0
  br i1 %219, label %236, label %220

220:                                              ; preds = %217, %220
  %221 = phi i64 [ %233, %220 ], [ %218, %217 ]
  %222 = phi i64 [ %234, %220 ], [ %164, %217 ]
  %223 = getelementptr i8, i8* %6, i64 %221
  %224 = getelementptr i8, i8* %150, i64 %221
  %225 = bitcast i8* %223 to <16 x i8>*
  %226 = load <16 x i8>, <16 x i8>* %225, align 1, !alias.scope !76
  %227 = getelementptr i8, i8* %223, i64 16
  %228 = bitcast i8* %227 to <16 x i8>*
  %229 = load <16 x i8>, <16 x i8>* %228, align 1, !alias.scope !76
  %230 = bitcast i8* %224 to <16 x i8>*
  store <16 x i8> %226, <16 x i8>* %230, align 1, !alias.scope !79, !noalias !76
  %231 = getelementptr i8, i8* %224, i64 16
  %232 = bitcast i8* %231 to <16 x i8>*
  store <16 x i8> %229, <16 x i8>* %232, align 1, !alias.scope !79, !noalias !76
  %233 = add i64 %221, 32
  %234 = add i64 %222, -1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %220, !llvm.loop !82

236:                                              ; preds = %220, %217
  %237 = icmp eq i64 %138, %158
  br i1 %237, label %248, label %238

238:                                              ; preds = %236, %152, %149
  %239 = phi i8* [ %6, %152 ], [ %6, %149 ], [ %159, %236 ]
  %240 = phi i8* [ %150, %152 ], [ %150, %149 ], [ %160, %236 ]
  br label %241

241:                                              ; preds = %238, %241
  %242 = phi i8* [ %245, %241 ], [ %239, %238 ]
  %243 = phi i8* [ %246, %241 ], [ %240, %238 ]
  %244 = load i8, i8* %242, align 1
  store i8 %244, i8* %243, align 1
  %245 = getelementptr inbounds i8, i8* %242, i64 1
  %246 = getelementptr inbounds i8, i8* %243, i64 1
  %247 = icmp eq i8* %245, %139
  br i1 %247, label %248, label %241, !llvm.loop !83

248:                                              ; preds = %241, %236, %146
  %249 = phi i8* [ %28, %146 ], [ %160, %236 ], [ %246, %241 ]
  store i8 0, i8* %249, align 1
  %250 = load i8, i8* %105, align 1
  %251 = icmp slt i8 %250, 0
  %252 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %102, i64 1, i32 1
  %253 = bitcast %"class.std::__1::__tree_node_base"** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = zext i8 %250 to i64
  %256 = select i1 %251, i64 %254, i64 %255
  %257 = load i8, i8* %33, align 1
  %258 = icmp slt i8 %257, 0
  %259 = load i64, i64* %31, align 8
  %260 = zext i8 %257 to i64
  %261 = select i1 %258, i64 %259, i64 %260
  %262 = icmp eq i64 %256, %261
  br i1 %262, label %263, label %293

263:                                              ; preds = %248
  %264 = bitcast %"class.std::__1::__tree_node_base"* %103 to i8**
  %265 = load i8*, i8** %264, align 8
  %266 = bitcast %"class.std::__1::__tree_node_base"* %103 to i8*
  %267 = select i1 %251, i8* %265, i8* %266
  %268 = load i8*, i8** %29, align 8
  %269 = select i1 %258, i8* %268, i8* %28
  %270 = icmp eq i64 %256, 0
  br i1 %251, label %277, label %271

271:                                              ; preds = %263
  br i1 %270, label %293, label %272

272:                                              ; preds = %271
  %273 = ptrtoint i8* %265 to i64
  %274 = trunc i64 %273 to i8
  %275 = load i8, i8* %269, align 1
  %276 = icmp eq i8 %275, %274
  br i1 %276, label %281, label %293

277:                                              ; preds = %263
  br i1 %270, label %293, label %278

278:                                              ; preds = %277
  %279 = call i32 @bcmp(i8* %267, i8* %269, i64 %256) #16
  %280 = icmp eq i32 %279, 0
  br label %293

281:                                              ; preds = %272, %288
  %282 = phi i64 [ %285, %288 ], [ %255, %272 ]
  %283 = phi i8* [ %286, %288 ], [ %266, %272 ]
  %284 = phi i8* [ %289, %288 ], [ %269, %272 ]
  %285 = add i64 %282, -1
  %286 = getelementptr inbounds i8, i8* %283, i64 1
  %287 = icmp eq i64 %285, 0
  br i1 %287, label %293, label %288

288:                                              ; preds = %281
  %289 = getelementptr inbounds i8, i8* %284, i64 1
  %290 = load i8, i8* %286, align 1
  %291 = load i8, i8* %289, align 1
  %292 = icmp eq i8 %290, %291
  br i1 %292, label %281, label %293

293:                                              ; preds = %281, %288, %272, %248, %271, %277, %278
  %294 = phi i1 [ true, %271 ], [ true, %277 ], [ %280, %278 ], [ false, %248 ], [ false, %272 ], [ false, %288 ], [ true, %281 ]
  br i1 %258, label %295, label %297

295:                                              ; preds = %293
  %296 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %296) #17
  br label %297

297:                                              ; preds = %295, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #16
  br i1 %294, label %300, label %298

298:                                              ; preds = %297
  %299 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  br label %329

300:                                              ; preds = %297
  %301 = load i8, i8* %105, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %306

303:                                              ; preds = %300
  %304 = bitcast %"class.std::__1::__tree_node_base"** %252 to i64*
  %305 = load i64, i64* %304, align 8
  br label %308

306:                                              ; preds = %300
  %307 = zext i8 %301 to i64
  br label %308

308:                                              ; preds = %303, %306
  %309 = phi i64 [ %305, %303 ], [ %307, %306 ]
  %310 = getelementptr inbounds i8, i8* %6, i64 %309
  store i8* %310, i8** %1, align 8
  %311 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %312 = icmp eq %"class.std::__1::__tree_node_base"* %311, null
  br i1 %312, label %318, label %313

313:                                              ; preds = %308, %313
  %314 = phi %"class.std::__1::__tree_node_base"* [ %316, %313 ], [ %311, %308 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 1
  %316 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %317 = icmp eq %"class.std::__1::__tree_node_base"* %316, null
  br i1 %317, label %353, label %313

318:                                              ; preds = %308, %318
  %319 = phi %"class.std::__1::__tree_end_node"* [ %323, %318 ], [ %81, %308 ]
  %320 = bitcast %"class.std::__1::__tree_end_node"* %319 to %"class.std::__1::__tree_node_base"*
  %321 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %319, i64 2
  %322 = bitcast %"class.std::__1::__tree_end_node"* %321 to %"class.std::__1::__tree_end_node"**
  %323 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %322, align 8
  %324 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %323, i64 0, i32 0
  %325 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %324, align 8
  %326 = icmp eq %"class.std::__1::__tree_node_base"* %325, %320
  br i1 %326, label %318, label %327

327:                                              ; preds = %318
  %328 = bitcast %"class.std::__1::__tree_end_node"* %323 to %"class.std::__1::__tree_node_base"*
  br label %353

329:                                              ; preds = %298, %124, %114
  %330 = phi %"class.std::__1::__tree_node_base"* [ %299, %298 ], [ %83, %124 ], [ %83, %114 ]
  %331 = icmp eq %"class.std::__1::__tree_node_base"* %330, null
  br i1 %331, label %337, label %332

332:                                              ; preds = %329, %332
  %333 = phi %"class.std::__1::__tree_node_base"* [ %335, %332 ], [ %330, %329 ]
  %334 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %333, i64 0, i32 1
  %335 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %334, align 8
  %336 = icmp eq %"class.std::__1::__tree_node_base"* %335, null
  br i1 %336, label %348, label %332

337:                                              ; preds = %329, %337
  %338 = phi %"class.std::__1::__tree_end_node"* [ %342, %337 ], [ %81, %329 ]
  %339 = bitcast %"class.std::__1::__tree_end_node"* %338 to %"class.std::__1::__tree_node_base"*
  %340 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %338, i64 2
  %341 = bitcast %"class.std::__1::__tree_end_node"* %340 to %"class.std::__1::__tree_end_node"**
  %342 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %342, i64 0, i32 0
  %344 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %343, align 8
  %345 = icmp eq %"class.std::__1::__tree_node_base"* %344, %339
  br i1 %345, label %337, label %346

346:                                              ; preds = %337
  %347 = bitcast %"class.std::__1::__tree_end_node"* %342 to %"class.std::__1::__tree_node_base"*
  br label %348

348:                                              ; preds = %332, %346
  %349 = phi %"class.std::__1::__tree_node_base"* [ %347, %346 ], [ %333, %332 ]
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %351 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %22, align 8
  %352 = icmp eq %"class.std::__1::__tree_end_node"* %350, %351
  br i1 %352, label %357, label %80

353:                                              ; preds = %313, %327
  %354 = phi %"class.std::__1::__tree_node_base"* [ %328, %327 ], [ %314, %313 ]
  %355 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %354, i64 1, i32 3
  %356 = bitcast i8* %355 to %"class.v8::internal::torque::Symbol"*
  br label %360

357:                                              ; preds = %348, %17
  %358 = icmp eq i64 %20, 0
  %359 = select i1 %358, %"class.v8::internal::torque::Symbol"* null, %"class.v8::internal::torque::Symbol"* %19
  br label %360

360:                                              ; preds = %353, %357
  %361 = phi %"class.v8::internal::torque::Symbol"* [ %359, %357 ], [ %356, %353 ]
  ret %"class.v8::internal::torque::Symbol"* %361
}

declare void @_ZN2v88internal6torque18StringLiteralQuoteERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: ssp uwtable
define hidden %"class.v8::internal::torque::Item"* @_ZN2v88internal6torque18RunEarleyAlgorithmEPNS1_6SymbolERKNS1_11LexerResultEPNSt3__113unordered_setINS1_4ItemENS_4base4hashIS9_EENS7_8equal_toIS9_EENS7_9allocatorIS9_EEEE(%"class.v8::internal::torque::Symbol"*, %"struct.v8::internal::torque::LexerResult"* nocapture readonly dereferenceable(48), %"class.std::__1::unordered_set"*) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.179", align 1
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.179", align 1
  %8 = alloca %"class.std::__1::vector.85", align 8
  %9 = alloca %"class.std::__1::vector.85", align 8
  %10 = alloca %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", align 8
  %11 = alloca { %"struct.v8::internal::torque::LineAndColumn", %"struct.v8::internal::torque::LineAndColumn" }, align 8
  %12 = alloca %"class.std::__1::unordered_map", align 8
  %13 = alloca %"class.std::__1::vector.31", align 8
  %14 = alloca %"class.v8::internal::torque::Symbol", align 8
  %15 = alloca %"class.v8::internal::torque::Rule", align 8
  %16 = alloca { %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"* }, align 8
  %17 = alloca %"struct.v8::internal::torque::MatchedInput", align 8
  %18 = alloca %"struct.std::__1::pair.127", align 8
  %19 = alloca %"struct.std::__1::pair.127", align 8
  %20 = alloca %"class.v8::internal::torque::Item", align 8
  %21 = alloca { %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"* }, align 8
  %22 = alloca %"class.v8::internal::torque::Item", align 8
  %23 = alloca %"class.std::__1::vector.31", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca [15 x i8], align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = bitcast %"class.std::__1::vector.85"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #16
  %30 = bitcast %"class.std::__1::vector.85"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #16
  %31 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #16
  %32 = bitcast { %"struct.v8::internal::torque::LineAndColumn", %"struct.v8::internal::torque::LineAndColumn" }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false)
  %33 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_17CurrentSourceFileEEERPNT_5ScopeEv()
          to label %34 unwind label %232

34:                                               ; preds = %3
  %35 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"** %33, align 8
  %36 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"* %35, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %10, i64 0, i32 0, i32 0, i32 0
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %10, i64 0, i32 0, i32 1
  %40 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* nonnull align 8 %32, i64 16, i1 false)
  %41 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %42 unwind label %232

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %10, i64 0, i32 1
  %44 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %43 to i64*
  store i64 %45, i64* %46, align 8
  %47 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %48 unwind label %232

48:                                               ; preds = %42
  store %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* %10, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32)
  %49 = bitcast %"class.std::__1::unordered_map"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %49) #16
  %50 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %12, i64 0, i32 0, i32 3
  %51 = bitcast %"class.std::__1::__compressed_pair.111"* %50 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %51, align 8
  %52 = bitcast %"class.std::__1::vector.31"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #16
  %53 = bitcast %"class.v8::internal::torque::Symbol"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false)
  %54 = bitcast %"class.v8::internal::torque::Rule"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %54) #16
  %55 = invoke i8* @_Znwm(i64 8) #20
          to label %60 unwind label %56

56:                                               ; preds = %48
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  %59 = extractvalue { i8*, i32 } %57, 1
  br label %246

60:                                               ; preds = %48
  %61 = bitcast i8* %55 to %"class.v8::internal::torque::Symbol"**
  %62 = ptrtoint i8* %55 to i64
  %63 = getelementptr inbounds i8, i8* %55, i64 8
  %64 = ptrtoint i8* %63 to i64
  store %"class.v8::internal::torque::Symbol"* %0, %"class.v8::internal::torque::Symbol"** %61, align 8
  %65 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %15, i64 0, i32 1
  %66 = bitcast %"class.v8::internal::torque::Rule"* %15 to i64*
  store i64 0, i64* %66, align 8
  %67 = bitcast %"class.std::__1::vector.4"* %65 to i64*
  store i64 %62, i64* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %15, i64 0, i32 1, i32 0, i32 1
  %69 = bitcast %"class.v8::internal::torque::Symbol"*** %68 to i64*
  store i64 %64, i64* %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %15, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %71 = bitcast %"class.v8::internal::torque::Symbol"*** %70 to i64*
  store i64 %64, i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %15, i64 0, i32 2
  store void (%"class.v8::base::Optional"*, %"class.v8::internal::torque::ParseResultIterator"*)* @_ZN2v88internal6torque13DefaultActionEPNS1_19ParseResultIteratorE, void (%"class.v8::base::Optional"*, %"class.v8::internal::torque::ParseResultIterator"*)** %72, align 8
  invoke void @_ZN2v88internal6torque6Symbol7AddRuleERKNS1_4RuleE(%"class.v8::internal::torque::Symbol"* nonnull %14, %"class.v8::internal::torque::Rule"* nonnull dereferenceable(40) %15)
          to label %73 unwind label %236

73:                                               ; preds = %60
  %74 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %15, i64 0, i32 1, i32 0, i32 0
  %75 = load %"class.v8::internal::torque::Symbol"**, %"class.v8::internal::torque::Symbol"*** %74, align 8
  %76 = icmp eq %"class.v8::internal::torque::Symbol"** %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = ptrtoint %"class.v8::internal::torque::Symbol"** %75 to i64
  store i64 %78, i64* %69, align 8
  %79 = bitcast %"class.v8::internal::torque::Symbol"** %75 to i8*
  call void @_ZdlPv(i8* %79) #17
  br label %80

80:                                               ; preds = %77, %73
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #16
  %81 = bitcast { %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"* }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81)
  %82 = getelementptr inbounds %"class.v8::internal::torque::Symbol", %"class.v8::internal::torque::Symbol"* %14, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.v8::internal::torque::Symbol"* %14 to i64**
  %84 = load i64*, i64** %83, align 8
  %85 = load i64, i64* %84, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 16, i1 false)
  %86 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %8, i64 0, i32 0, i32 1
  %87 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %89 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %88, align 8
  %90 = icmp ult %"class.v8::internal::torque::Item"* %87, %89
  %91 = ptrtoint %"class.v8::internal::torque::Item"* %89 to i64
  br i1 %90, label %92, label %103

92:                                               ; preds = %80
  %93 = bitcast %"class.v8::internal::torque::Item"* %87 to i64*
  store i64 %85, i64* %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %87, i64 0, i32 1
  %95 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %87, i64 0, i32 4
  %96 = bitcast %"class.v8::internal::torque::Item"** %95 to i8*
  %97 = bitcast i64* %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* nonnull align 8 %81, i64 16, i1 false)
  %98 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %87, i64 1
  %99 = ptrtoint %"class.v8::internal::torque::Item"* %98 to i64
  %100 = bitcast %"class.v8::internal::torque::Item"** %86 to i64*
  store i64 %99, i64* %100, align 8
  %101 = bitcast %"class.std::__1::vector.85"* %8 to i64*
  %102 = bitcast %"class.v8::internal::torque::Item"** %88 to i64*
  br label %157

103:                                              ; preds = %80
  %104 = ptrtoint %"class.v8::internal::torque::Item"* %87 to i64
  %105 = bitcast %"class.v8::internal::torque::Item"** %86 to i64*
  %106 = bitcast %"class.std::__1::vector.85"* %8 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %104, %107
  %109 = sdiv exact i64 %108, 48
  %110 = add nsw i64 %109, 1
  %111 = icmp ugt i64 %110, 384307168202282325
  br i1 %111, label %112, label %115

112:                                              ; preds = %103
  %113 = bitcast %"class.std::__1::vector.85"* %8 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %113) #18
          to label %114 unwind label %249

114:                                              ; preds = %112
  unreachable

115:                                              ; preds = %103
  %116 = bitcast %"class.v8::internal::torque::Item"** %88 to i64*
  %117 = sub i64 %91, %107
  %118 = sdiv exact i64 %117, 48
  %119 = icmp ult i64 %118, 192153584101141162
  br i1 %119, label %120, label %125

120:                                              ; preds = %115
  %121 = shl nsw i64 %118, 1
  %122 = icmp ult i64 %121, %110
  %123 = select i1 %122, i64 %110, i64 %121
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %131, label %125

125:                                              ; preds = %120, %115
  %126 = phi i64 [ %123, %120 ], [ 384307168202282325, %115 ]
  %127 = mul i64 %126, 48
  %128 = invoke i8* @_Znwm(i64 %127) #20
          to label %129 unwind label %249

129:                                              ; preds = %125
  %130 = bitcast i8* %128 to %"class.v8::internal::torque::Item"*
  br label %131

131:                                              ; preds = %129, %120
  %132 = phi i64 [ %126, %129 ], [ 0, %120 ]
  %133 = phi %"class.v8::internal::torque::Item"* [ %130, %129 ], [ null, %120 ]
  %134 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %133, i64 %109
  %135 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %133, i64 %132
  %136 = ptrtoint %"class.v8::internal::torque::Item"* %135 to i64
  %137 = bitcast %"class.v8::internal::torque::Item"* %134 to i64*
  store i64 %85, i64* %137, align 8
  %138 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %133, i64 %109, i32 1
  %139 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %133, i64 %109, i32 4
  %140 = bitcast %"class.v8::internal::torque::Item"** %139 to i8*
  %141 = bitcast i64* %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* nonnull align 8 %81, i64 16, i1 false)
  %142 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %134, i64 1
  %143 = ptrtoint %"class.v8::internal::torque::Item"* %142 to i64
  %144 = sdiv exact i64 %108, -48
  %145 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %134, i64 %144
  %146 = ptrtoint %"class.v8::internal::torque::Item"* %145 to i64
  %147 = icmp sgt i64 %108, 0
  br i1 %147, label %148, label %151

148:                                              ; preds = %131
  %149 = bitcast %"class.v8::internal::torque::Item"* %145 to i8*
  %150 = inttoptr i64 %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 %108, i1 false) #16
  br label %151

151:                                              ; preds = %148, %131
  store i64 %146, i64* %106, align 8
  store i64 %143, i64* %105, align 8
  store i64 %136, i64* %116, align 8
  %152 = icmp eq i64 %107, 0
  br i1 %152, label %157, label %153

153:                                              ; preds = %151
  %154 = inttoptr i64 %107 to i8*
  call void @_ZdlPv(i8* %154) #17
  %155 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %86, align 8
  %156 = ptrtoint %"class.v8::internal::torque::Item"* %155 to i64
  br label %157

157:                                              ; preds = %153, %151, %92
  %158 = phi i64 [ %156, %153 ], [ %143, %151 ], [ %99, %92 ]
  %159 = phi i64* [ %116, %153 ], [ %116, %151 ], [ %102, %92 ]
  %160 = phi i64* [ %106, %153 ], [ %106, %151 ], [ %101, %92 ]
  %161 = phi i64* [ %105, %153 ], [ %105, %151 ], [ %100, %92 ]
  %162 = phi %"class.v8::internal::torque::Item"* [ %155, %153 ], [ %142, %151 ], [ %98, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81)
  %163 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %1, i64 0, i32 0, i32 0, i32 1
  %164 = bitcast %"class.v8::internal::torque::Symbol"*** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"struct.v8::internal::torque::LexerResult"* %1 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = sub i64 %165, %167
  %169 = ashr exact i64 %168, 3
  %170 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %8, i64 0, i32 0, i32 0
  %171 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %2, i64 0, i32 0
  %172 = bitcast %"struct.v8::internal::torque::MatchedInput"* %17 to i8*
  %173 = getelementptr inbounds %"struct.v8::internal::torque::LexerResult", %"struct.v8::internal::torque::LexerResult"* %1, i64 0, i32 1, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %17, i64 0, i32 2
  %175 = bitcast %"struct.v8::internal::torque::SourcePosition"* %174 to i8*
  %176 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %13, i64 0, i32 0, i32 1
  %177 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %178 = bitcast %"class.v8::internal::torque::Item"*** %176 to i64*
  %179 = bitcast %"class.std::__1::vector.31"* %13 to i64*
  %180 = bitcast %"class.v8::internal::torque::Item"*** %177 to i64*
  %181 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %13, i64 0, i32 0, i32 0
  %182 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %9, i64 0, i32 0, i32 1
  %183 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %184 = bitcast %"class.v8::internal::torque::Item"** %182 to i64*
  %185 = bitcast %"class.std::__1::vector.85"* %9 to i64*
  %186 = bitcast %"class.v8::internal::torque::Item"** %183 to i64*
  %187 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %9, i64 0, i32 0, i32 0
  %188 = bitcast %"struct.std::__1::pair.127"* %19 to i8*
  %189 = getelementptr inbounds %"struct.std::__1::pair.127", %"struct.std::__1::pair.127"* %19, i64 0, i32 0
  %190 = getelementptr inbounds %"struct.std::__1::pair.127", %"struct.std::__1::pair.127"* %19, i64 0, i32 1
  %191 = bitcast %"class.v8::internal::torque::Symbol"** %190 to i64*
  %192 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %12, i64 0, i32 0
  %193 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %194 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::tuple.179", %"class.std::__1::tuple.179"* %5, i64 0, i32 0
  %196 = bitcast %"class.v8::internal::torque::Item"* %20 to i8*
  %197 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %20, i64 0, i32 0
  %198 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %20, i64 0, i32 1
  %199 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %20, i64 0, i32 2
  %200 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %20, i64 0, i32 3
  %201 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %20, i64 0, i32 4
  %202 = bitcast %"class.v8::internal::torque::Item"** %201 to i8*
  %203 = bitcast { %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"* }* %21 to i8*
  %204 = bitcast %"struct.std::__1::pair.127"* %18 to i8*
  %205 = getelementptr inbounds %"struct.std::__1::pair.127", %"struct.std::__1::pair.127"* %18, i64 0, i32 0
  %206 = getelementptr inbounds %"struct.std::__1::pair.127", %"struct.std::__1::pair.127"* %18, i64 0, i32 1
  %207 = bitcast %"class.v8::internal::torque::Symbol"** %206 to i64*
  %208 = bitcast %"class.std::__1::tuple"* %6 to i8*
  %209 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.std::__1::tuple.179", %"class.std::__1::tuple.179"* %7, i64 0, i32 0
  %211 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %170, align 8
  %212 = ptrtoint %"class.v8::internal::torque::Item"* %211 to i64
  br label %213

213:                                              ; preds = %157, %897
  %214 = phi i64 [ %158, %157 ], [ %901, %897 ]
  %215 = phi i64 [ %212, %157 ], [ %900, %897 ]
  %216 = phi %"class.v8::internal::torque::Item"* [ %162, %157 ], [ %906, %897 ]
  %217 = phi %"class.v8::internal::torque::Item"* [ %211, %157 ], [ %905, %897 ]
  %218 = phi i64 [ 0, %157 ], [ %220, %897 ]
  %219 = icmp eq %"class.v8::internal::torque::Item"* %217, %216
  %220 = add i64 %218, 1
  br i1 %219, label %897, label %253

221:                                              ; preds = %897
  %222 = bitcast %"class.v8::internal::torque::Item"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %222) #16
  %223 = load i64*, i64** %83, align 8
  %224 = load i64, i64* %223, align 8
  %225 = bitcast %"class.v8::internal::torque::Item"* %22 to i64*
  store i64 %224, i64* %225, align 8
  %226 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %22, i64 0, i32 1
  %227 = bitcast i64* %226 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %22, i64 0, i32 3
  store i64 %169, i64* %228, align 8
  %229 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %22, i64 0, i32 4
  %230 = bitcast %"class.v8::internal::torque::Item"** %229 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %230, i8 0, i64 16, i1 false) #16
  %231 = invoke %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table"* %171, %"class.v8::internal::torque::Item"* nonnull dereferenceable(48) %22)
          to label %907 unwind label %1002

232:                                              ; preds = %3, %34, %42
  %233 = landingpad { i8*, i32 }
          cleanup
  %234 = extractvalue { i8*, i32 } %233, 0
  %235 = extractvalue { i8*, i32 } %233, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #16
  br label %1350

236:                                              ; preds = %60
  %237 = landingpad { i8*, i32 }
          cleanup
  %238 = extractvalue { i8*, i32 } %237, 0
  %239 = extractvalue { i8*, i32 } %237, 1
  %240 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %15, i64 0, i32 1, i32 0, i32 0
  %241 = load %"class.v8::internal::torque::Symbol"**, %"class.v8::internal::torque::Symbol"*** %240, align 8
  %242 = icmp eq %"class.v8::internal::torque::Symbol"** %241, null
  br i1 %242, label %246, label %243

243:                                              ; preds = %236
  %244 = ptrtoint %"class.v8::internal::torque::Symbol"** %241 to i64
  store i64 %244, i64* %69, align 8
  %245 = bitcast %"class.v8::internal::torque::Symbol"** %241 to i8*
  call void @_ZdlPv(i8* %245) #17
  br label %246

246:                                              ; preds = %236, %243, %56
  %247 = phi i32 [ %59, %56 ], [ %239, %243 ], [ %239, %236 ]
  %248 = phi i8* [ %58, %56 ], [ %238, %243 ], [ %238, %236 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #16
  br label %1269

249:                                              ; preds = %125, %112
  %250 = landingpad { i8*, i32 }
          cleanup
  %251 = extractvalue { i8*, i32 } %250, 0
  %252 = extractvalue { i8*, i32 } %250, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81)
  br label %1269

253:                                              ; preds = %213, %887
  %254 = phi %"class.v8::internal::torque::Item"* [ %889, %887 ], [ %216, %213 ]
  %255 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %254, i64 -1
  %256 = invoke { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %171, %"class.v8::internal::torque::Item"* dereferenceable(48) %255, %"class.v8::internal::torque::Item"* dereferenceable(48) %255)
          to label %257 unwind label %273

257:                                              ; preds = %253
  %258 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %256, 0
  %259 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %258, i64 2
  %260 = bitcast %"struct.std::__1::__hash_node_base"* %259 to %"class.v8::internal::torque::Item"*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %172)
  %261 = load %"struct.v8::internal::torque::MatchedInput"*, %"struct.v8::internal::torque::MatchedInput"** %173, align 8
  %262 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %261, i64 %218
  %263 = bitcast %"struct.v8::internal::torque::MatchedInput"* %262 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %172, i8* align 8 %263, i64 40, i1 false)
  %264 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %265 unwind label %277

265:                                              ; preds = %257
  %266 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %256, 1
  %267 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %264 to i8**
  %268 = load i8*, i8** %267, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* align 8 %175, i64 20, i1 false)
  %269 = icmp eq i8 %266, 0
  %270 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %86, align 8
  %271 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %270, i64 -1
  br i1 %269, label %272, label %288

272:                                              ; preds = %265
  invoke void @_ZNK2v88internal6torque4Item14CheckAmbiguityERKS2_RKNS1_11LexerResultE(%"class.v8::internal::torque::Item"* %260, %"class.v8::internal::torque::Item"* dereferenceable(48) %271, %"struct.v8::internal::torque::LexerResult"* dereferenceable(48) %1)
          to label %285 unwind label %281

273:                                              ; preds = %253
  %274 = landingpad { i8*, i32 }
          cleanup
  %275 = extractvalue { i8*, i32 } %274, 0
  %276 = extractvalue { i8*, i32 } %274, 1
  br label %1269

277:                                              ; preds = %257
  %278 = landingpad { i8*, i32 }
          cleanup
  %279 = extractvalue { i8*, i32 } %278, 0
  %280 = extractvalue { i8*, i32 } %278, 1
  br label %891

281:                                              ; preds = %272
  %282 = landingpad { i8*, i32 }
          cleanup
  %283 = extractvalue { i8*, i32 } %282, 0
  %284 = extractvalue { i8*, i32 } %282, 1
  br label %891

285:                                              ; preds = %272
  %286 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %86, align 8
  %287 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %286, i64 -1
  store %"class.v8::internal::torque::Item"* %287, %"class.v8::internal::torque::Item"** %86, align 8
  br label %887

288:                                              ; preds = %265
  store %"class.v8::internal::torque::Item"* %271, %"class.v8::internal::torque::Item"** %86, align 8
  %289 = ptrtoint %"struct.std::__1::__hash_node_base"* %259 to i64
  %290 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %176, align 8
  %291 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %177, align 8
  %292 = icmp ult %"class.v8::internal::torque::Item"** %290, %291
  %293 = ptrtoint %"class.v8::internal::torque::Item"** %291 to i64
  br i1 %292, label %294, label %298

294:                                              ; preds = %288
  %295 = bitcast %"class.v8::internal::torque::Item"** %290 to i64*
  store i64 %289, i64* %295, align 8
  %296 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %290, i64 1
  %297 = ptrtoint %"class.v8::internal::torque::Item"** %296 to i64
  store i64 %297, i64* %178, align 8
  br label %345

298:                                              ; preds = %288
  %299 = ptrtoint %"class.v8::internal::torque::Item"** %290 to i64
  %300 = load i64, i64* %179, align 8
  %301 = sub i64 %299, %300
  %302 = ashr exact i64 %301, 3
  %303 = add nsw i64 %302, 1
  %304 = icmp ugt i64 %303, 2305843009213693951
  br i1 %304, label %305, label %308

305:                                              ; preds = %298
  %306 = bitcast %"class.std::__1::vector.31"* %13 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %306) #18
          to label %307 unwind label %378

307:                                              ; preds = %305
  unreachable

308:                                              ; preds = %298
  %309 = sub i64 %293, %300
  %310 = ashr exact i64 %309, 3
  %311 = icmp ult i64 %310, 1152921504606846975
  br i1 %311, label %312, label %321

312:                                              ; preds = %308
  %313 = ashr exact i64 %309, 2
  %314 = icmp ult i64 %313, %303
  %315 = select i1 %314, i64 %303, i64 %313
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %327, label %317

317:                                              ; preds = %312
  %318 = icmp ugt i64 %315, 2305843009213693951
  br i1 %318, label %319, label %321

319:                                              ; preds = %317
  invoke void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.14, i64 0, i64 0)) #18
          to label %320 unwind label %378

320:                                              ; preds = %319
  unreachable

321:                                              ; preds = %317, %308
  %322 = phi i64 [ %315, %317 ], [ 2305843009213693951, %308 ]
  %323 = shl i64 %322, 3
  %324 = invoke i8* @_Znwm(i64 %323) #20
          to label %325 unwind label %376

325:                                              ; preds = %321
  %326 = bitcast i8* %324 to %"class.v8::internal::torque::Item"**
  br label %327

327:                                              ; preds = %325, %312
  %328 = phi i64 [ %322, %325 ], [ 0, %312 ]
  %329 = phi i8* [ %324, %325 ], [ null, %312 ]
  %330 = phi %"class.v8::internal::torque::Item"** [ %326, %325 ], [ null, %312 ]
  %331 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %330, i64 %302
  %332 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %330, i64 %328
  %333 = ptrtoint %"class.v8::internal::torque::Item"** %332 to i64
  %334 = bitcast %"class.v8::internal::torque::Item"** %331 to i64*
  store i64 %289, i64* %334, align 8
  %335 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %331, i64 1
  %336 = ptrtoint %"class.v8::internal::torque::Item"** %335 to i64
  %337 = ptrtoint %"class.v8::internal::torque::Item"** %330 to i64
  %338 = icmp sgt i64 %301, 0
  br i1 %338, label %339, label %341

339:                                              ; preds = %327
  %340 = inttoptr i64 %300 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %329, i8* align 8 %340, i64 %301, i1 false) #16
  br label %341

341:                                              ; preds = %339, %327
  store i64 %337, i64* %179, align 8
  store i64 %336, i64* %178, align 8
  store i64 %333, i64* %180, align 8
  %342 = icmp eq i64 %300, 0
  br i1 %342, label %345, label %343

343:                                              ; preds = %341
  %344 = inttoptr i64 %300 to i8*
  call void @_ZdlPv(i8* %344) #17
  br label %345

345:                                              ; preds = %294, %341, %343
  %346 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %258, i64 3
  %347 = bitcast %"struct.std::__1::__hash_node_base"* %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"struct.std::__1::__hash_node_base"* %259 to %"class.v8::internal::torque::Rule"**
  %350 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %349, align 8
  %351 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %350, i64 0, i32 1
  %352 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %350, i64 0, i32 1, i32 0, i32 1
  %353 = bitcast %"class.v8::internal::torque::Symbol"*** %352 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = bitcast %"class.std::__1::vector.4"* %351 to i64*
  %356 = load i64, i64* %355, align 8
  %357 = sub i64 %354, %356
  %358 = ashr exact i64 %357, 3
  %359 = icmp eq i64 %348, %358
  %360 = ptrtoint %"class.v8::internal::torque::Rule"* %350 to i64
  br i1 %359, label %361, label %504

361:                                              ; preds = %345
  %362 = bitcast %"class.v8::internal::torque::Rule"* %350 to i64*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %204) #16
  %363 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %258, i64 4
  %364 = bitcast %"struct.std::__1::__hash_node_base"* %363 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = load i64, i64* %362, align 8
  store i64 %365, i64* %205, align 8
  store i64 %366, i64* %207, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #16
  store %"struct.std::__1::pair.127"* %18, %"struct.std::__1::pair.127"** %209, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %210) #16
  %367 = invoke { %"struct.std::__1::__hash_node_base.96"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairImPN2v88internal6torque6SymbolEEENS_3setIPKNS5_4ItemENS_4lessISC_EENS_9allocatorISC_EEEEEENS_22__unordered_map_hasherIS8_SI_NS3_4base4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_SI_SO_SM_Lb1EEENSF_ISI_EEE25__emplace_unique_key_argsIS8_JRKNS_21piecewise_construct_tENS_5tupleIJOS8_EEENSY_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISI_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.92"* nonnull %192, %"struct.std::__1::pair.127"* nonnull dereferenceable(16) %18, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.179"* nonnull dereferenceable(1) %7)
          to label %368 unwind label %384

368:                                              ; preds = %361
  %369 = extractvalue { %"struct.std::__1::__hash_node_base.96"*, i8 } %367, 0
  %370 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %369, i64 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %210) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204) #16
  %371 = bitcast %"struct.std::__1::__hash_node_base.96"* %370 to %"class.std::__1::__tree_end_node"**
  %372 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %371, align 8
  %373 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %369, i64 5
  %374 = bitcast %"struct.std::__1::__hash_node_base.96"* %373 to %"class.std::__1::__tree_end_node"*
  %375 = icmp eq %"class.std::__1::__tree_end_node"* %372, %374
  br i1 %375, label %887, label %388

376:                                              ; preds = %321
  %377 = landingpad { i8*, i32 }
          cleanup
  br label %380

378:                                              ; preds = %305, %319
  %379 = landingpad { i8*, i32 }
          cleanup
  br label %380

380:                                              ; preds = %378, %376
  %381 = phi { i8*, i32 } [ %377, %376 ], [ %379, %378 ]
  %382 = extractvalue { i8*, i32 } %381, 0
  %383 = extractvalue { i8*, i32 } %381, 1
  br label %891

384:                                              ; preds = %361
  %385 = landingpad { i8*, i32 }
          cleanup
  %386 = extractvalue { i8*, i32 } %385, 0
  %387 = extractvalue { i8*, i32 } %385, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204) #16
  br label %891

388:                                              ; preds = %368, %493
  %389 = phi %"class.std::__1::__tree_end_node"* [ %494, %493 ], [ %372, %368 ]
  %390 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %389, i64 4
  %391 = bitcast %"class.std::__1::__tree_end_node"* %390 to %"class.v8::internal::torque::Item"**
  %392 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %391, align 8
  %393 = bitcast %"class.v8::internal::torque::Item"* %392 to i64*
  %394 = load i64, i64* %393, align 8, !noalias !84
  %395 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %392, i64 0, i32 1
  %396 = load i64, i64* %395, align 8, !noalias !84
  %397 = add i64 %396, 1
  %398 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %392, i64 0, i32 2
  %399 = load i64, i64* %398, align 8, !noalias !84
  %400 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %86, align 8
  %401 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %88, align 8
  %402 = icmp ult %"class.v8::internal::torque::Item"* %400, %401
  %403 = ptrtoint %"class.v8::internal::torque::Item"* %401 to i64
  br i1 %402, label %404, label %414

404:                                              ; preds = %388
  %405 = bitcast %"class.v8::internal::torque::Item"* %400 to i64*
  store i64 %394, i64* %405, align 8
  %406 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %400, i64 0, i32 1
  store i64 %397, i64* %406, align 8
  %407 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %400, i64 0, i32 2
  store i64 %399, i64* %407, align 8
  %408 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %400, i64 0, i32 3
  store i64 %218, i64* %408, align 8
  %409 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %400, i64 0, i32 4
  store %"class.v8::internal::torque::Item"* %392, %"class.v8::internal::torque::Item"** %409, align 8
  %410 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %400, i64 0, i32 5
  %411 = bitcast %"class.v8::internal::torque::Item"** %410 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %259, %"struct.std::__1::__hash_node_base"** %411, align 8
  %412 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %400, i64 1
  %413 = ptrtoint %"class.v8::internal::torque::Item"* %412 to i64
  store i64 %413, i64* %161, align 8
  br label %465

414:                                              ; preds = %388
  %415 = ptrtoint %"class.v8::internal::torque::Item"* %400 to i64
  %416 = load i64, i64* %160, align 8
  %417 = sub i64 %415, %416
  %418 = sdiv exact i64 %417, 48
  %419 = add nsw i64 %418, 1
  %420 = icmp ugt i64 %419, 384307168202282325
  br i1 %420, label %421, label %424

421:                                              ; preds = %414
  %422 = bitcast %"class.std::__1::vector.85"* %8 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %422) #18
          to label %423 unwind label %498

423:                                              ; preds = %421
  unreachable

424:                                              ; preds = %414
  %425 = sub i64 %403, %416
  %426 = sdiv exact i64 %425, 48
  %427 = icmp ult i64 %426, 192153584101141162
  br i1 %427, label %428, label %433

428:                                              ; preds = %424
  %429 = shl nsw i64 %426, 1
  %430 = icmp ult i64 %429, %419
  %431 = select i1 %430, i64 %419, i64 %429
  %432 = icmp eq i64 %431, 0
  br i1 %432, label %439, label %433

433:                                              ; preds = %428, %424
  %434 = phi i64 [ %431, %428 ], [ 384307168202282325, %424 ]
  %435 = mul i64 %434, 48
  %436 = invoke i8* @_Znwm(i64 %435) #20
          to label %437 unwind label %496

437:                                              ; preds = %433
  %438 = bitcast i8* %436 to %"class.v8::internal::torque::Item"*
  br label %439

439:                                              ; preds = %437, %428
  %440 = phi i64 [ %434, %437 ], [ 0, %428 ]
  %441 = phi %"class.v8::internal::torque::Item"* [ %438, %437 ], [ null, %428 ]
  %442 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %441, i64 %418
  %443 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %441, i64 %440
  %444 = ptrtoint %"class.v8::internal::torque::Item"* %443 to i64
  %445 = bitcast %"class.v8::internal::torque::Item"* %442 to i64*
  store i64 %394, i64* %445, align 8
  %446 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %441, i64 %418, i32 1
  store i64 %397, i64* %446, align 8
  %447 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %441, i64 %418, i32 2
  store i64 %399, i64* %447, align 8
  %448 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %441, i64 %418, i32 3
  store i64 %218, i64* %448, align 8
  %449 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %441, i64 %418, i32 4
  store %"class.v8::internal::torque::Item"* %392, %"class.v8::internal::torque::Item"** %449, align 8
  %450 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %441, i64 %418, i32 5
  %451 = bitcast %"class.v8::internal::torque::Item"** %450 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %259, %"struct.std::__1::__hash_node_base"** %451, align 8
  %452 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %442, i64 1
  %453 = ptrtoint %"class.v8::internal::torque::Item"* %452 to i64
  %454 = sdiv exact i64 %417, -48
  %455 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %442, i64 %454
  %456 = ptrtoint %"class.v8::internal::torque::Item"* %455 to i64
  %457 = icmp sgt i64 %417, 0
  br i1 %457, label %458, label %461

458:                                              ; preds = %439
  %459 = bitcast %"class.v8::internal::torque::Item"* %455 to i8*
  %460 = inttoptr i64 %416 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %459, i8* align 8 %460, i64 %417, i1 false) #16
  br label %461

461:                                              ; preds = %458, %439
  store i64 %456, i64* %160, align 8
  store i64 %453, i64* %161, align 8
  store i64 %444, i64* %159, align 8
  %462 = icmp eq i64 %416, 0
  br i1 %462, label %465, label %463

463:                                              ; preds = %461
  %464 = inttoptr i64 %416 to i8*
  call void @_ZdlPv(i8* %464) #17
  br label %465

465:                                              ; preds = %463, %461, %404
  %466 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %389, i64 1, i32 0
  %467 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %466, align 8
  %468 = icmp eq %"class.std::__1::__tree_node_base"* %467, null
  br i1 %468, label %469, label %477

469:                                              ; preds = %465
  %470 = bitcast %"class.std::__1::__tree_end_node"* %389 to %"class.std::__1::__tree_node_base"*
  %471 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %389, i64 2
  %472 = bitcast %"class.std::__1::__tree_end_node"* %471 to %"class.std::__1::__tree_end_node"**
  %473 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %472, align 8
  %474 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %473, i64 0, i32 0
  %475 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %474, align 8
  %476 = icmp eq %"class.std::__1::__tree_node_base"* %475, %470
  br i1 %476, label %493, label %484

477:                                              ; preds = %465, %477
  %478 = phi %"class.std::__1::__tree_node_base"* [ %480, %477 ], [ %467, %465 ]
  %479 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %478, i64 0, i32 0, i32 0
  %480 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %479, align 8
  %481 = icmp eq %"class.std::__1::__tree_node_base"* %480, null
  br i1 %481, label %482, label %477

482:                                              ; preds = %477
  %483 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %478, i64 0, i32 0
  br label %493

484:                                              ; preds = %469, %484
  %485 = phi %"class.std::__1::__tree_end_node"** [ %488, %484 ], [ %472, %469 ]
  %486 = bitcast %"class.std::__1::__tree_end_node"** %485 to %"class.std::__1::__tree_node_base"**
  %487 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %486, align 8
  %488 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %487, i64 0, i32 2
  %489 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %488, align 8
  %490 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %489, i64 0, i32 0
  %491 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %490, align 8
  %492 = icmp eq %"class.std::__1::__tree_node_base"* %491, %487
  br i1 %492, label %493, label %484

493:                                              ; preds = %484, %469, %482
  %494 = phi %"class.std::__1::__tree_end_node"* [ %483, %482 ], [ %473, %469 ], [ %489, %484 ]
  %495 = icmp eq %"class.std::__1::__tree_end_node"* %494, %374
  br i1 %495, label %887, label %388

496:                                              ; preds = %433
  %497 = landingpad { i8*, i32 }
          cleanup
  br label %500

498:                                              ; preds = %421
  %499 = landingpad { i8*, i32 }
          cleanup
  br label %500

500:                                              ; preds = %498, %496
  %501 = phi { i8*, i32 } [ %497, %496 ], [ %499, %498 ]
  %502 = extractvalue { i8*, i32 } %501, 0
  %503 = extractvalue { i8*, i32 } %501, 1
  br label %891

504:                                              ; preds = %345
  %505 = inttoptr i64 %356 to %"class.v8::internal::torque::Symbol"**
  %506 = getelementptr inbounds %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %505, i64 %348
  %507 = load %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %506, align 8
  %508 = ptrtoint %"class.v8::internal::torque::Symbol"* %507 to i64
  %509 = load i64, i64* %164, align 8
  %510 = load i64, i64* %166, align 8
  %511 = sub i64 %509, %510
  %512 = ashr exact i64 %511, 3
  %513 = icmp ult i64 %218, %512
  br i1 %513, label %514, label %597

514:                                              ; preds = %504
  %515 = inttoptr i64 %510 to %"class.v8::internal::torque::Symbol"**
  %516 = getelementptr inbounds %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %515, i64 %218
  %517 = load %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %516, align 8
  %518 = icmp eq %"class.v8::internal::torque::Symbol"* %517, %507
  br i1 %518, label %519, label %597

519:                                              ; preds = %514
  %520 = add i64 %348, 1
  %521 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %258, i64 4
  %522 = bitcast %"struct.std::__1::__hash_node_base"* %521 to i64*
  %523 = load i64, i64* %522, align 8, !noalias !87
  %524 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %182, align 8
  %525 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %183, align 8
  %526 = icmp ult %"class.v8::internal::torque::Item"* %524, %525
  %527 = ptrtoint %"class.v8::internal::torque::Item"* %525 to i64
  br i1 %526, label %528, label %538

528:                                              ; preds = %519
  %529 = bitcast %"class.v8::internal::torque::Item"* %524 to i64*
  store i64 %360, i64* %529, align 8
  %530 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %524, i64 0, i32 1
  store i64 %520, i64* %530, align 8
  %531 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %524, i64 0, i32 2
  store i64 %523, i64* %531, align 8
  %532 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %524, i64 0, i32 3
  store i64 %220, i64* %532, align 8
  %533 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %524, i64 0, i32 4
  %534 = bitcast %"class.v8::internal::torque::Item"** %533 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %259, %"struct.std::__1::__hash_node_base"** %534, align 8
  %535 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %524, i64 0, i32 5
  store %"class.v8::internal::torque::Item"* null, %"class.v8::internal::torque::Item"** %535, align 8
  %536 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %524, i64 1
  %537 = ptrtoint %"class.v8::internal::torque::Item"* %536 to i64
  store i64 %537, i64* %184, align 8
  br label %597

538:                                              ; preds = %519
  %539 = ptrtoint %"class.v8::internal::torque::Item"* %524 to i64
  %540 = load i64, i64* %185, align 8
  %541 = sub i64 %539, %540
  %542 = sdiv exact i64 %541, 48
  %543 = add nsw i64 %542, 1
  %544 = icmp ugt i64 %543, 384307168202282325
  br i1 %544, label %545, label %548

545:                                              ; preds = %538
  %546 = bitcast %"class.std::__1::vector.85"* %9 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %546) #18
          to label %547 unwind label %591

547:                                              ; preds = %545
  unreachable

548:                                              ; preds = %538
  %549 = sub i64 %527, %540
  %550 = sdiv exact i64 %549, 48
  %551 = icmp ult i64 %550, 192153584101141162
  br i1 %551, label %552, label %557

552:                                              ; preds = %548
  %553 = shl nsw i64 %550, 1
  %554 = icmp ult i64 %553, %543
  %555 = select i1 %554, i64 %543, i64 %553
  %556 = icmp eq i64 %555, 0
  br i1 %556, label %563, label %557

557:                                              ; preds = %552, %548
  %558 = phi i64 [ %555, %552 ], [ 384307168202282325, %548 ]
  %559 = mul i64 %558, 48
  %560 = invoke i8* @_Znwm(i64 %559) #20
          to label %561 unwind label %589

561:                                              ; preds = %557
  %562 = bitcast i8* %560 to %"class.v8::internal::torque::Item"*
  br label %563

563:                                              ; preds = %561, %552
  %564 = phi i64 [ %558, %561 ], [ 0, %552 ]
  %565 = phi %"class.v8::internal::torque::Item"* [ %562, %561 ], [ null, %552 ]
  %566 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %565, i64 %542
  %567 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %565, i64 %564
  %568 = ptrtoint %"class.v8::internal::torque::Item"* %567 to i64
  %569 = bitcast %"class.v8::internal::torque::Item"* %566 to i64*
  store i64 %360, i64* %569, align 8
  %570 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %565, i64 %542, i32 1
  store i64 %520, i64* %570, align 8
  %571 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %565, i64 %542, i32 2
  store i64 %523, i64* %571, align 8
  %572 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %565, i64 %542, i32 3
  store i64 %220, i64* %572, align 8
  %573 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %565, i64 %542, i32 4
  %574 = bitcast %"class.v8::internal::torque::Item"** %573 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %259, %"struct.std::__1::__hash_node_base"** %574, align 8
  %575 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %565, i64 %542, i32 5
  store %"class.v8::internal::torque::Item"* null, %"class.v8::internal::torque::Item"** %575, align 8
  %576 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %566, i64 1
  %577 = ptrtoint %"class.v8::internal::torque::Item"* %576 to i64
  %578 = sdiv exact i64 %541, -48
  %579 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %566, i64 %578
  %580 = ptrtoint %"class.v8::internal::torque::Item"* %579 to i64
  %581 = icmp sgt i64 %541, 0
  br i1 %581, label %582, label %585

582:                                              ; preds = %563
  %583 = bitcast %"class.v8::internal::torque::Item"* %579 to i8*
  %584 = inttoptr i64 %540 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %583, i8* align 8 %584, i64 %541, i1 false) #16
  br label %585

585:                                              ; preds = %582, %563
  store i64 %580, i64* %185, align 8
  store i64 %577, i64* %184, align 8
  store i64 %568, i64* %186, align 8
  %586 = icmp eq i64 %540, 0
  br i1 %586, label %597, label %587

587:                                              ; preds = %585
  %588 = inttoptr i64 %540 to i8*
  call void @_ZdlPv(i8* %588) #17
  br label %597

589:                                              ; preds = %557
  %590 = landingpad { i8*, i32 }
          cleanup
  br label %593

591:                                              ; preds = %545
  %592 = landingpad { i8*, i32 }
          cleanup
  br label %593

593:                                              ; preds = %591, %589
  %594 = phi { i8*, i32 } [ %590, %589 ], [ %592, %591 ]
  %595 = extractvalue { i8*, i32 } %594, 0
  %596 = extractvalue { i8*, i32 } %594, 1
  br label %891

597:                                              ; preds = %528, %585, %587, %514, %504
  %598 = getelementptr inbounds %"class.v8::internal::torque::Symbol", %"class.v8::internal::torque::Symbol"* %507, i64 0, i32 0, i32 0, i32 0
  %599 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %598, align 8
  %600 = getelementptr inbounds %"class.v8::internal::torque::Symbol", %"class.v8::internal::torque::Symbol"* %507, i64 0, i32 0, i32 0, i32 1
  %601 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %600, align 8
  %602 = icmp eq %"class.std::__1::unique_ptr"* %599, %601
  br i1 %602, label %603, label %608

603:                                              ; preds = %597
  %604 = ptrtoint %"class.std::__1::unique_ptr"* %599 to i64
  %605 = ptrtoint %"class.std::__1::unique_ptr"* %601 to i64
  %606 = bitcast %"class.std::__1::unique_ptr"** %600 to i64*
  %607 = bitcast %"class.v8::internal::torque::Symbol"* %507 to i64*
  br label %694

608:                                              ; preds = %597
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %188) #16
  store i64 %218, i64* %189, align 8
  store i64 %508, i64* %191, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #16
  store %"struct.std::__1::pair.127"* %19, %"struct.std::__1::pair.127"** %194, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %195) #16
  %609 = invoke { %"struct.std::__1::__hash_node_base.96"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairImPN2v88internal6torque6SymbolEEENS_3setIPKNS5_4ItemENS_4lessISC_EENS_9allocatorISC_EEEEEENS_22__unordered_map_hasherIS8_SI_NS3_4base4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_SI_SO_SM_Lb1EEENSF_ISI_EEE25__emplace_unique_key_argsIS8_JRKNS_21piecewise_construct_tENS_5tupleIJOS8_EEENSY_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISI_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.92"* nonnull %192, %"struct.std::__1::pair.127"* nonnull dereferenceable(16) %19, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.179"* nonnull dereferenceable(1) %5)
          to label %610 unwind label %686

610:                                              ; preds = %608
  %611 = extractvalue { %"struct.std::__1::__hash_node_base.96"*, i8 } %609, 0
  %612 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %611, i64 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %195) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #16
  %613 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %611, i64 5
  %614 = bitcast %"struct.std::__1::__hash_node_base.96"* %613 to %"class.std::__1::__tree_node.163"**
  %615 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %614, align 8
  %616 = icmp eq %"class.std::__1::__tree_node.163"* %615, null
  br i1 %616, label %645, label %617

617:                                              ; preds = %610
  %618 = bitcast %"struct.std::__1::__hash_node_base.96"* %613 to %"class.std::__1::__tree_node_base"**
  br label %619

619:                                              ; preds = %641, %617
  %620 = phi %"class.std::__1::__tree_node.163"* [ %644, %641 ], [ %615, %617 ]
  %621 = phi %"class.std::__1::__tree_node_base"** [ %643, %641 ], [ %618, %617 ]
  %622 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %620, i64 0, i32 1
  %623 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %622, align 8
  %624 = icmp ugt %"class.v8::internal::torque::Item"* %623, %260
  br i1 %624, label %625, label %631

625:                                              ; preds = %619
  %626 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %620, i64 0, i32 0, i32 0, i32 0
  %627 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %626, align 8
  %628 = icmp eq %"class.std::__1::__tree_node_base"* %627, null
  br i1 %628, label %629, label %641

629:                                              ; preds = %625
  %630 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %620, i64 0, i32 0, i32 0
  br label %648

631:                                              ; preds = %619
  %632 = icmp ult %"class.v8::internal::torque::Item"* %623, %260
  br i1 %632, label %633, label %639

633:                                              ; preds = %631
  %634 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %620, i64 0, i32 0, i32 1
  %635 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %634, align 8
  %636 = icmp eq %"class.std::__1::__tree_node_base"* %635, null
  br i1 %636, label %637, label %641

637:                                              ; preds = %633
  %638 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %620, i64 0, i32 0, i32 0
  br label %648

639:                                              ; preds = %631
  %640 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %620, i64 0, i32 0, i32 0
  br label %648

641:                                              ; preds = %633, %625
  %642 = phi %"class.std::__1::__tree_node_base"* [ %627, %625 ], [ %635, %633 ]
  %643 = phi %"class.std::__1::__tree_node_base"** [ %626, %625 ], [ %634, %633 ]
  %644 = bitcast %"class.std::__1::__tree_node_base"* %642 to %"class.std::__1::__tree_node.163"*
  br label %619

645:                                              ; preds = %610
  %646 = bitcast %"struct.std::__1::__hash_node_base.96"* %613 to %"class.std::__1::__tree_end_node"*
  %647 = bitcast %"struct.std::__1::__hash_node_base.96"* %613 to %"class.std::__1::__tree_node_base"**
  br label %648

648:                                              ; preds = %645, %639, %637, %629
  %649 = phi %"class.std::__1::__tree_end_node"* [ %646, %645 ], [ %630, %629 ], [ %638, %637 ], [ %640, %639 ]
  %650 = phi %"class.std::__1::__tree_node_base"** [ %647, %645 ], [ %626, %629 ], [ %634, %637 ], [ %621, %639 ]
  %651 = bitcast %"class.std::__1::__tree_node_base"** %650 to %"class.std::__1::__tree_node.163"**
  %652 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %651, align 8
  %653 = icmp eq %"class.std::__1::__tree_node.163"* %652, null
  br i1 %653, label %654, label %680

654:                                              ; preds = %648
  %655 = invoke i8* @_Znwm(i64 40) #20
          to label %656 unwind label %688

656:                                              ; preds = %654
  %657 = getelementptr inbounds i8, i8* %655, i64 32
  %658 = bitcast i8* %657 to i64*
  store i64 %289, i64* %658, align 8, !noalias !90
  %659 = bitcast i8* %655 to %"class.std::__1::__tree_node_base"*
  %660 = getelementptr inbounds i8, i8* %655, i64 16
  %661 = bitcast i8* %660 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %655, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %649, %"class.std::__1::__tree_end_node"** %661, align 8
  %662 = bitcast %"class.std::__1::__tree_node_base"** %650 to i8**
  store i8* %655, i8** %662, align 8
  %663 = bitcast %"struct.std::__1::__hash_node_base.96"* %612 to %"class.std::__1::__tree_end_node"**
  %664 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %663, align 8
  %665 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %664, i64 0, i32 0
  %666 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %665, align 8
  %667 = icmp eq %"class.std::__1::__tree_node_base"* %666, null
  br i1 %667, label %672, label %668

668:                                              ; preds = %656
  %669 = ptrtoint %"class.std::__1::__tree_node_base"* %666 to i64
  %670 = bitcast %"struct.std::__1::__hash_node_base.96"* %612 to i64*
  store i64 %669, i64* %670, align 8
  %671 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %650, align 8
  br label %672

672:                                              ; preds = %668, %656
  %673 = phi %"class.std::__1::__tree_node_base"* [ %659, %656 ], [ %671, %668 ]
  %674 = bitcast %"struct.std::__1::__hash_node_base.96"* %613 to %"class.std::__1::__tree_node_base"**
  %675 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %674, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %675, %"class.std::__1::__tree_node_base"* %673) #16
  %676 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %611, i64 6
  %677 = bitcast %"struct.std::__1::__hash_node_base.96"* %676 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = add i64 %678, 1
  store i64 %679, i64* %677, align 8
  br label %680

680:                                              ; preds = %672, %648
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #16
  %681 = bitcast %"class.std::__1::unique_ptr"** %600 to i64*
  %682 = load i64, i64* %681, align 8
  %683 = bitcast %"class.v8::internal::torque::Symbol"* %507 to i64*
  %684 = load i64, i64* %683, align 8
  %685 = inttoptr i64 %684 to %"class.std::__1::unique_ptr"*
  br label %694

686:                                              ; preds = %608
  %687 = landingpad { i8*, i32 }
          cleanup
  br label %690

688:                                              ; preds = %654
  %689 = landingpad { i8*, i32 }
          cleanup
  br label %690

690:                                              ; preds = %688, %686
  %691 = phi { i8*, i32 } [ %689, %688 ], [ %687, %686 ]
  %692 = extractvalue { i8*, i32 } %691, 0
  %693 = extractvalue { i8*, i32 } %691, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #16
  br label %891

694:                                              ; preds = %603, %680
  %695 = phi i64* [ %607, %603 ], [ %683, %680 ]
  %696 = phi i64* [ %606, %603 ], [ %681, %680 ]
  %697 = phi %"class.std::__1::unique_ptr"* [ %599, %603 ], [ %685, %680 ]
  %698 = phi i64 [ %604, %603 ], [ %684, %680 ]
  %699 = phi i64 [ %605, %603 ], [ %682, %680 ]
  %700 = icmp eq i64 %699, %698
  br i1 %700, label %887, label %701

701:                                              ; preds = %694
  %702 = bitcast %"struct.std::__1::__hash_node_base"* %259 to i64*
  %703 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %258, i64 4
  %704 = bitcast %"struct.std::__1::__hash_node_base"* %703 to i64*
  br label %705

705:                                              ; preds = %701, %879
  %706 = phi %"class.std::__1::unique_ptr"* [ %697, %701 ], [ %886, %879 ]
  %707 = phi i64 [ 0, %701 ], [ %880, %879 ]
  %708 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %706, i64 %707, i32 0, i32 0, i32 0
  %709 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %708, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %196) #16
  %710 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %709, i64 0, i32 1
  %711 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %709, i64 0, i32 1, i32 0, i32 1
  %712 = bitcast %"class.v8::internal::torque::Symbol"*** %711 to i64*
  %713 = load i64, i64* %712, align 8
  %714 = bitcast %"class.std::__1::vector.4"* %710 to i64*
  %715 = load i64, i64* %714, align 8
  %716 = sub i64 %713, %715
  %717 = ashr exact i64 %716, 3
  store %"class.v8::internal::torque::Rule"* %709, %"class.v8::internal::torque::Rule"** %197, align 8
  store i64 %717, i64* %198, align 8
  store i64 %218, i64* %199, align 8
  store i64 %218, i64* %200, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %202, i8 0, i64 16, i1 false) #16
  %718 = invoke %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table"* %171, %"class.v8::internal::torque::Item"* nonnull dereferenceable(48) %20)
          to label %719 unwind label %794

719:                                              ; preds = %705
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %196) #16
  %720 = icmp eq %"struct.std::__1::__hash_node_base"* %718, null
  br i1 %720, label %806, label %721

721:                                              ; preds = %719
  %722 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %718, i64 2
  %723 = load i64, i64* %702, align 8, !noalias !93
  %724 = load i64, i64* %347, align 8, !noalias !93
  %725 = add i64 %724, 1
  %726 = load i64, i64* %704, align 8, !noalias !93
  %727 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %86, align 8
  %728 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %88, align 8
  %729 = icmp ult %"class.v8::internal::torque::Item"* %727, %728
  %730 = ptrtoint %"class.v8::internal::torque::Item"* %728 to i64
  br i1 %729, label %731, label %742

731:                                              ; preds = %721
  %732 = bitcast %"class.v8::internal::torque::Item"* %727 to i64*
  store i64 %723, i64* %732, align 8
  %733 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %727, i64 0, i32 1
  store i64 %725, i64* %733, align 8
  %734 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %727, i64 0, i32 2
  store i64 %726, i64* %734, align 8
  %735 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %727, i64 0, i32 3
  store i64 %218, i64* %735, align 8
  %736 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %727, i64 0, i32 4
  %737 = bitcast %"class.v8::internal::torque::Item"** %736 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %259, %"struct.std::__1::__hash_node_base"** %737, align 8
  %738 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %727, i64 0, i32 5
  %739 = bitcast %"class.v8::internal::torque::Item"** %738 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %722, %"struct.std::__1::__hash_node_base"** %739, align 8
  %740 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %727, i64 1
  %741 = ptrtoint %"class.v8::internal::torque::Item"* %740 to i64
  store i64 %741, i64* %161, align 8
  br label %879

742:                                              ; preds = %721
  %743 = ptrtoint %"class.v8::internal::torque::Item"* %727 to i64
  %744 = load i64, i64* %160, align 8
  %745 = sub i64 %743, %744
  %746 = sdiv exact i64 %745, 48
  %747 = add nsw i64 %746, 1
  %748 = icmp ugt i64 %747, 384307168202282325
  br i1 %748, label %749, label %752

749:                                              ; preds = %742
  %750 = bitcast %"class.std::__1::vector.85"* %8 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %750) #18
          to label %751 unwind label %800

751:                                              ; preds = %749
  unreachable

752:                                              ; preds = %742
  %753 = sub i64 %730, %744
  %754 = sdiv exact i64 %753, 48
  %755 = icmp ult i64 %754, 192153584101141162
  br i1 %755, label %756, label %761

756:                                              ; preds = %752
  %757 = shl nsw i64 %754, 1
  %758 = icmp ult i64 %757, %747
  %759 = select i1 %758, i64 %747, i64 %757
  %760 = icmp eq i64 %759, 0
  br i1 %760, label %767, label %761

761:                                              ; preds = %756, %752
  %762 = phi i64 [ %759, %756 ], [ 384307168202282325, %752 ]
  %763 = mul i64 %762, 48
  %764 = invoke i8* @_Znwm(i64 %763) #20
          to label %765 unwind label %798

765:                                              ; preds = %761
  %766 = bitcast i8* %764 to %"class.v8::internal::torque::Item"*
  br label %767

767:                                              ; preds = %765, %756
  %768 = phi i64 [ %762, %765 ], [ 0, %756 ]
  %769 = phi %"class.v8::internal::torque::Item"* [ %766, %765 ], [ null, %756 ]
  %770 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %769, i64 %746
  %771 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %769, i64 %768
  %772 = ptrtoint %"class.v8::internal::torque::Item"* %771 to i64
  %773 = bitcast %"class.v8::internal::torque::Item"* %770 to i64*
  store i64 %723, i64* %773, align 8
  %774 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %769, i64 %746, i32 1
  store i64 %725, i64* %774, align 8
  %775 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %769, i64 %746, i32 2
  store i64 %726, i64* %775, align 8
  %776 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %769, i64 %746, i32 3
  store i64 %218, i64* %776, align 8
  %777 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %769, i64 %746, i32 4
  %778 = bitcast %"class.v8::internal::torque::Item"** %777 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %259, %"struct.std::__1::__hash_node_base"** %778, align 8
  %779 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %769, i64 %746, i32 5
  %780 = bitcast %"class.v8::internal::torque::Item"** %779 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %722, %"struct.std::__1::__hash_node_base"** %780, align 8
  %781 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %770, i64 1
  %782 = ptrtoint %"class.v8::internal::torque::Item"* %781 to i64
  %783 = sdiv exact i64 %745, -48
  %784 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %770, i64 %783
  %785 = ptrtoint %"class.v8::internal::torque::Item"* %784 to i64
  %786 = icmp sgt i64 %745, 0
  br i1 %786, label %787, label %790

787:                                              ; preds = %767
  %788 = bitcast %"class.v8::internal::torque::Item"* %784 to i8*
  %789 = inttoptr i64 %744 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %788, i8* align 8 %789, i64 %745, i1 false) #16
  br label %790

790:                                              ; preds = %787, %767
  store i64 %785, i64* %160, align 8
  store i64 %782, i64* %161, align 8
  store i64 %772, i64* %159, align 8
  %791 = icmp eq i64 %744, 0
  br i1 %791, label %879, label %792

792:                                              ; preds = %790
  %793 = inttoptr i64 %744 to i8*
  call void @_ZdlPv(i8* %793) #17
  br label %879

794:                                              ; preds = %705
  %795 = landingpad { i8*, i32 }
          cleanup
  %796 = extractvalue { i8*, i32 } %795, 0
  %797 = extractvalue { i8*, i32 } %795, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %196) #16
  br label %891

798:                                              ; preds = %761
  %799 = landingpad { i8*, i32 }
          cleanup
  br label %802

800:                                              ; preds = %749
  %801 = landingpad { i8*, i32 }
          cleanup
  br label %802

802:                                              ; preds = %800, %798
  %803 = phi { i8*, i32 } [ %799, %798 ], [ %801, %800 ]
  %804 = extractvalue { i8*, i32 } %803, 0
  %805 = extractvalue { i8*, i32 } %803, 1
  br label %891

806:                                              ; preds = %719
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %203)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 0, i64 16, i1 false)
  %807 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %86, align 8
  %808 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %88, align 8
  %809 = icmp ult %"class.v8::internal::torque::Item"* %807, %808
  %810 = ptrtoint %"class.v8::internal::torque::Item"* %808 to i64
  br i1 %809, label %811, label %820

811:                                              ; preds = %806
  %812 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %807, i64 0, i32 0
  store %"class.v8::internal::torque::Rule"* %709, %"class.v8::internal::torque::Rule"** %812, align 8
  %813 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %807, i64 0, i32 1
  store i64 0, i64* %813, align 8
  %814 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %807, i64 0, i32 2
  store i64 %218, i64* %814, align 8
  %815 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %807, i64 0, i32 3
  store i64 %218, i64* %815, align 8
  %816 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %807, i64 0, i32 4
  %817 = bitcast %"class.v8::internal::torque::Item"** %816 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %817, i8* nonnull align 8 %203, i64 16, i1 false)
  %818 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %807, i64 1
  %819 = ptrtoint %"class.v8::internal::torque::Item"* %818 to i64
  store i64 %819, i64* %161, align 8
  br label %870

820:                                              ; preds = %806
  %821 = ptrtoint %"class.v8::internal::torque::Item"* %807 to i64
  %822 = load i64, i64* %160, align 8
  %823 = sub i64 %821, %822
  %824 = sdiv exact i64 %823, 48
  %825 = add nsw i64 %824, 1
  %826 = icmp ugt i64 %825, 384307168202282325
  br i1 %826, label %827, label %830

827:                                              ; preds = %820
  %828 = bitcast %"class.std::__1::vector.85"* %8 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %828) #18
          to label %829 unwind label %873

829:                                              ; preds = %827
  unreachable

830:                                              ; preds = %820
  %831 = sub i64 %810, %822
  %832 = sdiv exact i64 %831, 48
  %833 = icmp ult i64 %832, 192153584101141162
  br i1 %833, label %834, label %839

834:                                              ; preds = %830
  %835 = shl nsw i64 %832, 1
  %836 = icmp ult i64 %835, %825
  %837 = select i1 %836, i64 %825, i64 %835
  %838 = icmp eq i64 %837, 0
  br i1 %838, label %845, label %839

839:                                              ; preds = %834, %830
  %840 = phi i64 [ %837, %834 ], [ 384307168202282325, %830 ]
  %841 = mul i64 %840, 48
  %842 = invoke i8* @_Znwm(i64 %841) #20
          to label %843 unwind label %871

843:                                              ; preds = %839
  %844 = bitcast i8* %842 to %"class.v8::internal::torque::Item"*
  br label %845

845:                                              ; preds = %843, %834
  %846 = phi i64 [ %840, %843 ], [ 0, %834 ]
  %847 = phi %"class.v8::internal::torque::Item"* [ %844, %843 ], [ null, %834 ]
  %848 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %847, i64 %824
  %849 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %847, i64 %846
  %850 = ptrtoint %"class.v8::internal::torque::Item"* %849 to i64
  %851 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %848, i64 0, i32 0
  store %"class.v8::internal::torque::Rule"* %709, %"class.v8::internal::torque::Rule"** %851, align 8
  %852 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %847, i64 %824, i32 1
  store i64 0, i64* %852, align 8
  %853 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %847, i64 %824, i32 2
  store i64 %218, i64* %853, align 8
  %854 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %847, i64 %824, i32 3
  store i64 %218, i64* %854, align 8
  %855 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %847, i64 %824, i32 4
  %856 = bitcast %"class.v8::internal::torque::Item"** %855 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %856, i8* nonnull align 8 %203, i64 16, i1 false)
  %857 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %848, i64 1
  %858 = ptrtoint %"class.v8::internal::torque::Item"* %857 to i64
  %859 = sdiv exact i64 %823, -48
  %860 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %848, i64 %859
  %861 = ptrtoint %"class.v8::internal::torque::Item"* %860 to i64
  %862 = icmp sgt i64 %823, 0
  br i1 %862, label %863, label %866

863:                                              ; preds = %845
  %864 = bitcast %"class.v8::internal::torque::Item"* %860 to i8*
  %865 = inttoptr i64 %822 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %864, i8* align 8 %865, i64 %823, i1 false) #16
  br label %866

866:                                              ; preds = %863, %845
  store i64 %861, i64* %160, align 8
  store i64 %858, i64* %161, align 8
  store i64 %850, i64* %159, align 8
  %867 = icmp eq i64 %822, 0
  br i1 %867, label %870, label %868

868:                                              ; preds = %866
  %869 = inttoptr i64 %822 to i8*
  call void @_ZdlPv(i8* %869) #17
  br label %870

870:                                              ; preds = %868, %866, %811
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %203)
  br label %879

871:                                              ; preds = %839
  %872 = landingpad { i8*, i32 }
          cleanup
  br label %875

873:                                              ; preds = %827
  %874 = landingpad { i8*, i32 }
          cleanup
  br label %875

875:                                              ; preds = %873, %871
  %876 = phi { i8*, i32 } [ %872, %871 ], [ %874, %873 ]
  %877 = extractvalue { i8*, i32 } %876, 0
  %878 = extractvalue { i8*, i32 } %876, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %203)
  br label %891

879:                                              ; preds = %731, %790, %792, %870
  %880 = add nuw i64 %707, 1
  %881 = load i64, i64* %696, align 8
  %882 = load i64, i64* %695, align 8
  %883 = sub i64 %881, %882
  %884 = ashr exact i64 %883, 3
  %885 = icmp ult i64 %880, %884
  %886 = inttoptr i64 %882 to %"class.std::__1::unique_ptr"*
  br i1 %885, label %705, label %887

887:                                              ; preds = %879, %493, %694, %368, %285
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %172)
  %888 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %170, align 8
  %889 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %86, align 8
  %890 = icmp eq %"class.v8::internal::torque::Item"* %888, %889
  br i1 %890, label %894, label %253

891:                                              ; preds = %593, %690, %875, %802, %794, %500, %281, %380, %384, %277
  %892 = phi i32 [ %280, %277 ], [ %284, %281 ], [ %383, %380 ], [ %387, %384 ], [ %503, %500 ], [ %693, %690 ], [ %596, %593 ], [ %805, %802 ], [ %878, %875 ], [ %797, %794 ]
  %893 = phi i8* [ %279, %277 ], [ %283, %281 ], [ %382, %380 ], [ %386, %384 ], [ %502, %500 ], [ %692, %690 ], [ %595, %593 ], [ %804, %802 ], [ %877, %875 ], [ %796, %794 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %172)
  br label %1269

894:                                              ; preds = %887
  %895 = ptrtoint %"class.v8::internal::torque::Item"* %889 to i64
  %896 = ptrtoint %"class.v8::internal::torque::Item"* %888 to i64
  br label %897

897:                                              ; preds = %213, %894
  %898 = phi i64 [ %895, %894 ], [ %214, %213 ]
  %899 = phi i64 [ %896, %894 ], [ %215, %213 ]
  %900 = load i64, i64* %185, align 8
  store i64 %900, i64* %160, align 8
  store i64 %899, i64* %185, align 8
  %901 = load i64, i64* %184, align 8
  store i64 %901, i64* %161, align 8
  store i64 %898, i64* %184, align 8
  %902 = load i64, i64* %159, align 8
  %903 = load i64, i64* %186, align 8
  store i64 %903, i64* %159, align 8
  store i64 %902, i64* %186, align 8
  %904 = icmp ugt i64 %220, %169
  %905 = inttoptr i64 %900 to %"class.v8::internal::torque::Item"*
  %906 = inttoptr i64 %901 to %"class.v8::internal::torque::Item"*
  br i1 %904, label %221, label %213

907:                                              ; preds = %221
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %222) #16
  %908 = icmp eq %"struct.std::__1::__hash_node_base"* %231, null
  br i1 %908, label %1010, label %909

909:                                              ; preds = %907
  %910 = bitcast %"class.std::__1::vector.31"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %910) #16
  %911 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %231, i64 2
  %912 = bitcast %"struct.std::__1::__hash_node_base"* %911 to %"class.v8::internal::torque::Item"*
  invoke void @_ZNK2v88internal6torque4Item8ChildrenEv(%"class.std::__1::vector.31"* nonnull sret %23, %"class.v8::internal::torque::Item"* %912)
          to label %913 unwind label %1006

913:                                              ; preds = %909
  %914 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %23, i64 0, i32 0, i32 0
  %915 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %914, align 8
  %916 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %915, align 8
  %917 = icmp eq %"class.v8::internal::torque::Item"** %915, null
  br i1 %917, label %923, label %918

918:                                              ; preds = %913
  %919 = ptrtoint %"class.v8::internal::torque::Item"** %915 to i64
  %920 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %23, i64 0, i32 0, i32 1
  %921 = bitcast %"class.v8::internal::torque::Item"*** %920 to i64*
  store i64 %919, i64* %921, align 8
  %922 = bitcast %"class.v8::internal::torque::Item"** %915 to i8*
  call void @_ZdlPv(i8* %922) #17
  br label %923

923:                                              ; preds = %913, %918
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %910) #16
  %924 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %82, align 8
  %925 = icmp eq %"class.std::__1::unique_ptr"* %924, null
  br i1 %925, label %955, label %926

926:                                              ; preds = %923
  %927 = bitcast %"class.std::__1::unique_ptr"* %924 to i8*
  %928 = getelementptr inbounds %"class.v8::internal::torque::Symbol", %"class.v8::internal::torque::Symbol"* %14, i64 0, i32 0, i32 0, i32 1
  %929 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %928, align 8
  %930 = icmp eq %"class.std::__1::unique_ptr"* %929, %924
  br i1 %930, label %953, label %931

931:                                              ; preds = %926, %948
  %932 = phi %"class.std::__1::unique_ptr"* [ %933, %948 ], [ %929, %926 ]
  %933 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %932, i64 -1
  %934 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %933, i64 0, i32 0, i32 0, i32 0
  %935 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %934, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %934, align 8
  %936 = icmp eq %"class.v8::internal::torque::Rule"* %935, null
  br i1 %936, label %948, label %937

937:                                              ; preds = %931
  %938 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %935, i64 0, i32 1, i32 0, i32 0
  %939 = load %"class.v8::internal::torque::Symbol"**, %"class.v8::internal::torque::Symbol"*** %938, align 8
  %940 = icmp eq %"class.v8::internal::torque::Symbol"** %939, null
  br i1 %940, label %946, label %941

941:                                              ; preds = %937
  %942 = ptrtoint %"class.v8::internal::torque::Symbol"** %939 to i64
  %943 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %935, i64 0, i32 1, i32 0, i32 1
  %944 = bitcast %"class.v8::internal::torque::Symbol"*** %943 to i64*
  store i64 %942, i64* %944, align 8
  %945 = bitcast %"class.v8::internal::torque::Symbol"** %939 to i8*
  call void @_ZdlPv(i8* %945) #17
  br label %946

946:                                              ; preds = %941, %937
  %947 = bitcast %"class.v8::internal::torque::Rule"* %935 to i8*
  call void @_ZdlPv(i8* %947) #17
  br label %948

948:                                              ; preds = %946, %931
  %949 = icmp eq %"class.std::__1::unique_ptr"* %933, %924
  br i1 %949, label %950, label %931

950:                                              ; preds = %948
  %951 = bitcast %"class.v8::internal::torque::Symbol"* %14 to i8**
  %952 = load i8*, i8** %951, align 8
  br label %953

953:                                              ; preds = %950, %926
  %954 = phi i8* [ %952, %950 ], [ %927, %926 ]
  store %"class.std::__1::unique_ptr"* %924, %"class.std::__1::unique_ptr"** %928, align 8
  call void @_ZdlPv(i8* %954) #17
  br label %955

955:                                              ; preds = %923, %953
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #16
  %956 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %181, align 8
  %957 = icmp eq %"class.v8::internal::torque::Item"** %956, null
  br i1 %957, label %961, label %958

958:                                              ; preds = %955
  %959 = ptrtoint %"class.v8::internal::torque::Item"** %956 to i64
  store i64 %959, i64* %178, align 8
  %960 = bitcast %"class.v8::internal::torque::Item"** %956 to i8*
  call void @_ZdlPv(i8* %960) #17
  br label %961

961:                                              ; preds = %955, %958
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #16
  %962 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %963 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %962, align 8
  %964 = icmp eq %"struct.std::__1::__hash_node_base.96"* %963, null
  br i1 %964, label %976, label %965

965:                                              ; preds = %961, %965
  %966 = phi %"struct.std::__1::__hash_node_base.96"* [ %968, %965 ], [ %963, %961 ]
  %967 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %966, i64 0, i32 0
  %968 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %967, align 8
  %969 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %966, i64 4
  %970 = bitcast %"struct.std::__1::__hash_node_base.96"* %969 to %"class.std::__1::__tree.118"*
  %971 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %966, i64 5
  %972 = bitcast %"struct.std::__1::__hash_node_base.96"* %971 to %"class.std::__1::__tree_node.163"**
  %973 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %972, align 8
  call void @_ZNSt3__16__treeIPKN2v88internal6torque4ItemENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.118"* %970, %"class.std::__1::__tree_node.163"* %973) #16
  %974 = bitcast %"struct.std::__1::__hash_node_base.96"* %966 to i8*
  call void @_ZdlPv(i8* %974) #17
  %975 = icmp eq %"struct.std::__1::__hash_node_base.96"* %968, null
  br i1 %975, label %976, label %965

976:                                              ; preds = %965, %961
  %977 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %978 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %977, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %977, align 8
  %979 = icmp eq %"struct.std::__1::__hash_node_base.96"** %978, null
  br i1 %979, label %982, label %980

980:                                              ; preds = %976
  %981 = bitcast %"struct.std::__1::__hash_node_base.96"** %978 to i8*
  call void @_ZdlPv(i8* %981) #17
  br label %982

982:                                              ; preds = %980, %976
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #16
  %983 = load i64, i64* %46, align 8
  %984 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %988 unwind label %985

985:                                              ; preds = %982
  %986 = landingpad { i8*, i32 }
          catch i8* null
  %987 = extractvalue { i8*, i32 } %986, 0
  call void @__clang_call_terminate(i8* %987) #19
  unreachable

988:                                              ; preds = %982
  %989 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %984 to i64*
  store i64 %983, i64* %989, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #16
  %990 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %187, align 8
  %991 = icmp eq %"class.v8::internal::torque::Item"* %990, null
  br i1 %991, label %995, label %992

992:                                              ; preds = %988
  %993 = ptrtoint %"class.v8::internal::torque::Item"* %990 to i64
  store i64 %993, i64* %184, align 8
  %994 = bitcast %"class.v8::internal::torque::Item"* %990 to i8*
  call void @_ZdlPv(i8* %994) #17
  br label %995

995:                                              ; preds = %988, %992
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #16
  %996 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %170, align 8
  %997 = icmp eq %"class.v8::internal::torque::Item"* %996, null
  br i1 %997, label %1001, label %998

998:                                              ; preds = %995
  %999 = ptrtoint %"class.v8::internal::torque::Item"* %996 to i64
  store i64 %999, i64* %161, align 8
  %1000 = bitcast %"class.v8::internal::torque::Item"* %996 to i8*
  call void @_ZdlPv(i8* %1000) #17
  br label %1001

1001:                                             ; preds = %995, %998
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #16
  ret %"class.v8::internal::torque::Item"* %916

1002:                                             ; preds = %221
  %1003 = landingpad { i8*, i32 }
          cleanup
  %1004 = extractvalue { i8*, i32 } %1003, 0
  %1005 = extractvalue { i8*, i32 } %1003, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %222) #16
  br label %1269

1006:                                             ; preds = %909
  %1007 = landingpad { i8*, i32 }
          cleanup
  %1008 = extractvalue { i8*, i32 } %1007, 0
  %1009 = extractvalue { i8*, i32 } %1007, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %910) #16
  br label %1269

1010:                                             ; preds = %907
  %1011 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1011) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1011, i8 0, i64 24, i1 false) #16
  %1012 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %176, align 8
  %1013 = getelementptr inbounds %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %1012, i64 -1
  %1014 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %1013, align 8
  %1015 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %1014, i64 0, i32 3
  %1016 = load i64, i64* %1015, align 8
  %1017 = load i64, i64* %164, align 8
  %1018 = load i64, i64* %166, align 8
  %1019 = sub i64 %1017, %1018
  %1020 = ashr exact i64 %1019, 3
  %1021 = icmp ult i64 %1016, %1020
  br i1 %1021, label %1022, label %1234

1022:                                             ; preds = %1010
  %1023 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1023) #16
  %1024 = load %"struct.v8::internal::torque::MatchedInput"*, %"struct.v8::internal::torque::MatchedInput"** %173, align 8
  %1025 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %1024, i64 %1016, i32 0
  %1026 = load i8*, i8** %1025, align 8, !noalias !96
  %1027 = ptrtoint i8* %1026 to i64
  %1028 = getelementptr inbounds %"struct.v8::internal::torque::MatchedInput", %"struct.v8::internal::torque::MatchedInput"* %1024, i64 %1016, i32 1
  %1029 = load i8*, i8** %1028, align 8, !noalias !96
  %1030 = ptrtoint i8* %1029 to i64
  %1031 = sub i64 %1030, %1027
  %1032 = icmp ugt i64 %1031, -17
  br i1 %1032, label %1033, label %1036

1033:                                             ; preds = %1022
  %1034 = bitcast %"class.std::__1::basic_string"* %25 to %"class.std::__1::__basic_string_common"*
  invoke void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1034) #18
          to label %1035 unwind label %1202

1035:                                             ; preds = %1033
  unreachable

1036:                                             ; preds = %1022
  %1037 = icmp ult i64 %1031, 23
  br i1 %1037, label %1038, label %1042

1038:                                             ; preds = %1036
  %1039 = trunc i64 %1031 to i8
  %1040 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1041 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1040, i64 0, i32 1, i32 0
  store i8 %1039, i8* %1041, align 1, !alias.scope !96
  br label %1051

1042:                                             ; preds = %1036
  %1043 = add nuw i64 %1031, 16
  %1044 = and i64 %1043, -16
  %1045 = invoke i8* @_Znwm(i64 %1044) #20
          to label %1046 unwind label %1202

1046:                                             ; preds = %1042
  %1047 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1045, i8** %1047, align 8, !alias.scope !96
  %1048 = or i64 %1044, -9223372036854775808
  %1049 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1048, i64* %1049, align 8, !alias.scope !96
  %1050 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1031, i64* %1050, align 8, !alias.scope !96
  br label %1051

1051:                                             ; preds = %1046, %1038
  %1052 = phi i8* [ %1023, %1038 ], [ %1045, %1046 ]
  %1053 = icmp eq i8* %1026, %1029
  br i1 %1053, label %1156, label %1054

1054:                                             ; preds = %1051
  %1055 = ptrtoint i8* %1029 to i64
  %1056 = sub i64 %1055, %1027
  %1057 = icmp ult i64 %1056, 32
  br i1 %1057, label %1146, label %1058

1058:                                             ; preds = %1054
  %1059 = ptrtoint i8* %1029 to i64
  %1060 = sub i64 %1059, %1027
  %1061 = getelementptr i8, i8* %1052, i64 %1060
  %1062 = icmp ult i8* %1052, %1029
  %1063 = icmp ult i8* %1026, %1061
  %1064 = and i1 %1062, %1063
  br i1 %1064, label %1146, label %1065

1065:                                             ; preds = %1058
  %1066 = and i64 %1056, -32
  %1067 = getelementptr i8, i8* %1026, i64 %1066
  %1068 = getelementptr i8, i8* %1052, i64 %1066
  %1069 = add i64 %1066, -32
  %1070 = lshr exact i64 %1069, 5
  %1071 = add nuw nsw i64 %1070, 1
  %1072 = and i64 %1071, 3
  %1073 = icmp ult i64 %1069, 96
  br i1 %1073, label %1125, label %1074

1074:                                             ; preds = %1065
  %1075 = sub nsw i64 %1071, %1072
  br label %1076

1076:                                             ; preds = %1076, %1074
  %1077 = phi i64 [ 0, %1074 ], [ %1122, %1076 ]
  %1078 = phi i64 [ %1075, %1074 ], [ %1123, %1076 ]
  %1079 = getelementptr i8, i8* %1026, i64 %1077
  %1080 = getelementptr i8, i8* %1052, i64 %1077
  %1081 = bitcast i8* %1079 to <16 x i8>*
  %1082 = load <16 x i8>, <16 x i8>* %1081, align 1, !alias.scope !99
  %1083 = getelementptr i8, i8* %1079, i64 16
  %1084 = bitcast i8* %1083 to <16 x i8>*
  %1085 = load <16 x i8>, <16 x i8>* %1084, align 1, !alias.scope !99
  %1086 = bitcast i8* %1080 to <16 x i8>*
  store <16 x i8> %1082, <16 x i8>* %1086, align 1, !alias.scope !102, !noalias !99
  %1087 = getelementptr i8, i8* %1080, i64 16
  %1088 = bitcast i8* %1087 to <16 x i8>*
  store <16 x i8> %1085, <16 x i8>* %1088, align 1, !alias.scope !102, !noalias !99
  %1089 = or i64 %1077, 32
  %1090 = getelementptr i8, i8* %1026, i64 %1089
  %1091 = getelementptr i8, i8* %1052, i64 %1089
  %1092 = bitcast i8* %1090 to <16 x i8>*
  %1093 = load <16 x i8>, <16 x i8>* %1092, align 1, !alias.scope !99
  %1094 = getelementptr i8, i8* %1090, i64 16
  %1095 = bitcast i8* %1094 to <16 x i8>*
  %1096 = load <16 x i8>, <16 x i8>* %1095, align 1, !alias.scope !99
  %1097 = bitcast i8* %1091 to <16 x i8>*
  store <16 x i8> %1093, <16 x i8>* %1097, align 1, !alias.scope !102, !noalias !99
  %1098 = getelementptr i8, i8* %1091, i64 16
  %1099 = bitcast i8* %1098 to <16 x i8>*
  store <16 x i8> %1096, <16 x i8>* %1099, align 1, !alias.scope !102, !noalias !99
  %1100 = or i64 %1077, 64
  %1101 = getelementptr i8, i8* %1026, i64 %1100
  %1102 = getelementptr i8, i8* %1052, i64 %1100
  %1103 = bitcast i8* %1101 to <16 x i8>*
  %1104 = load <16 x i8>, <16 x i8>* %1103, align 1, !alias.scope !99
  %1105 = getelementptr i8, i8* %1101, i64 16
  %1106 = bitcast i8* %1105 to <16 x i8>*
  %1107 = load <16 x i8>, <16 x i8>* %1106, align 1, !alias.scope !99
  %1108 = bitcast i8* %1102 to <16 x i8>*
  store <16 x i8> %1104, <16 x i8>* %1108, align 1, !alias.scope !102, !noalias !99
  %1109 = getelementptr i8, i8* %1102, i64 16
  %1110 = bitcast i8* %1109 to <16 x i8>*
  store <16 x i8> %1107, <16 x i8>* %1110, align 1, !alias.scope !102, !noalias !99
  %1111 = or i64 %1077, 96
  %1112 = getelementptr i8, i8* %1026, i64 %1111
  %1113 = getelementptr i8, i8* %1052, i64 %1111
  %1114 = bitcast i8* %1112 to <16 x i8>*
  %1115 = load <16 x i8>, <16 x i8>* %1114, align 1, !alias.scope !99
  %1116 = getelementptr i8, i8* %1112, i64 16
  %1117 = bitcast i8* %1116 to <16 x i8>*
  %1118 = load <16 x i8>, <16 x i8>* %1117, align 1, !alias.scope !99
  %1119 = bitcast i8* %1113 to <16 x i8>*
  store <16 x i8> %1115, <16 x i8>* %1119, align 1, !alias.scope !102, !noalias !99
  %1120 = getelementptr i8, i8* %1113, i64 16
  %1121 = bitcast i8* %1120 to <16 x i8>*
  store <16 x i8> %1118, <16 x i8>* %1121, align 1, !alias.scope !102, !noalias !99
  %1122 = add i64 %1077, 128
  %1123 = add i64 %1078, -4
  %1124 = icmp eq i64 %1123, 0
  br i1 %1124, label %1125, label %1076, !llvm.loop !104

1125:                                             ; preds = %1076, %1065
  %1126 = phi i64 [ 0, %1065 ], [ %1122, %1076 ]
  %1127 = icmp eq i64 %1072, 0
  br i1 %1127, label %1144, label %1128

1128:                                             ; preds = %1125, %1128
  %1129 = phi i64 [ %1141, %1128 ], [ %1126, %1125 ]
  %1130 = phi i64 [ %1142, %1128 ], [ %1072, %1125 ]
  %1131 = getelementptr i8, i8* %1026, i64 %1129
  %1132 = getelementptr i8, i8* %1052, i64 %1129
  %1133 = bitcast i8* %1131 to <16 x i8>*
  %1134 = load <16 x i8>, <16 x i8>* %1133, align 1, !alias.scope !99
  %1135 = getelementptr i8, i8* %1131, i64 16
  %1136 = bitcast i8* %1135 to <16 x i8>*
  %1137 = load <16 x i8>, <16 x i8>* %1136, align 1, !alias.scope !99
  %1138 = bitcast i8* %1132 to <16 x i8>*
  store <16 x i8> %1134, <16 x i8>* %1138, align 1, !alias.scope !102, !noalias !99
  %1139 = getelementptr i8, i8* %1132, i64 16
  %1140 = bitcast i8* %1139 to <16 x i8>*
  store <16 x i8> %1137, <16 x i8>* %1140, align 1, !alias.scope !102, !noalias !99
  %1141 = add i64 %1129, 32
  %1142 = add i64 %1130, -1
  %1143 = icmp eq i64 %1142, 0
  br i1 %1143, label %1144, label %1128, !llvm.loop !105

1144:                                             ; preds = %1128, %1125
  %1145 = icmp eq i64 %1056, %1066
  br i1 %1145, label %1156, label %1146

1146:                                             ; preds = %1144, %1058, %1054
  %1147 = phi i8* [ %1026, %1058 ], [ %1026, %1054 ], [ %1067, %1144 ]
  %1148 = phi i8* [ %1052, %1058 ], [ %1052, %1054 ], [ %1068, %1144 ]
  br label %1149

1149:                                             ; preds = %1146, %1149
  %1150 = phi i8* [ %1153, %1149 ], [ %1147, %1146 ]
  %1151 = phi i8* [ %1154, %1149 ], [ %1148, %1146 ]
  %1152 = load i8, i8* %1150, align 1
  store i8 %1152, i8* %1151, align 1
  %1153 = getelementptr inbounds i8, i8* %1150, i64 1
  %1154 = getelementptr inbounds i8, i8* %1151, i64 1
  %1155 = icmp eq i8* %1153, %1029
  br i1 %1155, label %1156, label %1149, !llvm.loop !106

1156:                                             ; preds = %1149, %1144, %1051
  %1157 = phi i8* [ %1052, %1051 ], [ %1068, %1144 ], [ %1154, %1149 ]
  store i8 0, i8* %1157, align 1
  %1158 = getelementptr inbounds [15 x i8], [15 x i8]* %26, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %1158)
  %1159 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1159) #16
  invoke void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %25)
          to label %1160 unwind label %1206

1160:                                             ; preds = %1156
  %1161 = invoke dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0))
          to label %1162 unwind label %1210

1162:                                             ; preds = %1160
  %1163 = bitcast %"class.std::__1::basic_string"* %1161 to i8*
  %1164 = bitcast %"class.std::__1::basic_string"* %1161 to i64*
  %1165 = load i64, i64* %1164, align 8
  %1166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1167 = bitcast i64* %1166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1158, i8* align 8 %1167, i64 15, i1 false)
  %1168 = getelementptr inbounds i8, i8* %1163, i64 23
  %1169 = load i8, i8* %1168, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %1163, i8 0, i64 24, i1 false) #16, !noalias !107
  %1170 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1170, i64 0, i32 1, i32 0
  %1172 = load i8, i8* %1171, align 1
  %1173 = icmp slt i8 %1172, 0
  br i1 %1173, label %1174, label %1177

1174:                                             ; preds = %1162
  %1175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1176 = load i8*, i8** %1175, align 8
  call void @_ZdlPv(i8* %1176) #17
  br label %1177

1177:                                             ; preds = %1174, %1162
  %1178 = bitcast %"class.std::__1::basic_string"* %24 to i64*
  store i64 %1165, i64* %1178, align 8
  %1179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1180 = bitcast i64* %1179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1180, i8* nonnull align 8 %1158, i64 15, i1 false)
  %1181 = getelementptr inbounds i8, i8* %1011, i64 23
  store i8 %1169, i8* %1181, align 1
  %1182 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1182, i64 0, i32 1, i32 0
  %1184 = load i8, i8* %1183, align 1
  %1185 = icmp slt i8 %1184, 0
  br i1 %1185, label %1186, label %1189

1186:                                             ; preds = %1177
  %1187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1188 = load i8*, i8** %1187, align 8
  call void @_ZdlPv(i8* %1188) #17
  br label %1189

1189:                                             ; preds = %1177, %1186
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1159) #16
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %1158)
  %1190 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1191 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1190, i64 0, i32 1, i32 0
  %1192 = load i8, i8* %1191, align 1
  %1193 = icmp slt i8 %1192, 0
  br i1 %1193, label %1194, label %1197

1194:                                             ; preds = %1189
  %1195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1196 = load i8*, i8** %1195, align 8
  call void @_ZdlPv(i8* %1196) #17
  br label %1197

1197:                                             ; preds = %1189, %1194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1023) #16
  br label %1236

1198:                                             ; preds = %1234
  %1199 = landingpad { i8*, i32 }
          cleanup
  %1200 = extractvalue { i8*, i32 } %1199, 0
  %1201 = extractvalue { i8*, i32 } %1199, 1
  br label %1258

1202:                                             ; preds = %1042, %1033
  %1203 = landingpad { i8*, i32 }
          cleanup
  %1204 = extractvalue { i8*, i32 } %1203, 0
  %1205 = extractvalue { i8*, i32 } %1203, 1
  br label %1231

1206:                                             ; preds = %1156
  %1207 = landingpad { i8*, i32 }
          cleanup
  %1208 = extractvalue { i8*, i32 } %1207, 0
  %1209 = extractvalue { i8*, i32 } %1207, 1
  br label %1221

1210:                                             ; preds = %1160
  %1211 = landingpad { i8*, i32 }
          cleanup
  %1212 = extractvalue { i8*, i32 } %1211, 0
  %1213 = extractvalue { i8*, i32 } %1211, 1
  %1214 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1215 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1214, i64 0, i32 1, i32 0
  %1216 = load i8, i8* %1215, align 1
  %1217 = icmp slt i8 %1216, 0
  br i1 %1217, label %1218, label %1221

1218:                                             ; preds = %1210
  %1219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1220 = load i8*, i8** %1219, align 8
  call void @_ZdlPv(i8* %1220) #17
  br label %1221

1221:                                             ; preds = %1218, %1210, %1206
  %1222 = phi i32 [ %1209, %1206 ], [ %1213, %1210 ], [ %1213, %1218 ]
  %1223 = phi i8* [ %1208, %1206 ], [ %1212, %1210 ], [ %1212, %1218 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1159) #16
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %1158)
  %1224 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1225 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1224, i64 0, i32 1, i32 0
  %1226 = load i8, i8* %1225, align 1
  %1227 = icmp slt i8 %1226, 0
  br i1 %1227, label %1228, label %1231

1228:                                             ; preds = %1221
  %1229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1230 = load i8*, i8** %1229, align 8
  call void @_ZdlPv(i8* %1230) #17
  br label %1231

1231:                                             ; preds = %1228, %1221, %1202
  %1232 = phi i32 [ %1205, %1202 ], [ %1222, %1221 ], [ %1222, %1228 ]
  %1233 = phi i8* [ %1204, %1202 ], [ %1223, %1221 ], [ %1223, %1228 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1023) #16
  br label %1258

1234:                                             ; preds = %1010
  %1235 = invoke dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i64 23)
          to label %1236 unwind label %1198

1236:                                             ; preds = %1234, %1197
  %1237 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1237) #16
  invoke void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %28, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24)
          to label %1238 unwind label %1240

1238:                                             ; preds = %1236
  invoke void @_ZN2v88internal6torque11ReportErrorIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvDpOT_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %28) #18
          to label %1239 unwind label %1244

1239:                                             ; preds = %1238
  unreachable

1240:                                             ; preds = %1236
  %1241 = landingpad { i8*, i32 }
          cleanup
  %1242 = extractvalue { i8*, i32 } %1241, 0
  %1243 = extractvalue { i8*, i32 } %1241, 1
  br label %1255

1244:                                             ; preds = %1238
  %1245 = landingpad { i8*, i32 }
          cleanup
  %1246 = extractvalue { i8*, i32 } %1245, 0
  %1247 = extractvalue { i8*, i32 } %1245, 1
  %1248 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1249 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1248, i64 0, i32 1, i32 0
  %1250 = load i8, i8* %1249, align 1
  %1251 = icmp slt i8 %1250, 0
  br i1 %1251, label %1252, label %1255

1252:                                             ; preds = %1244
  %1253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1254 = load i8*, i8** %1253, align 8
  call void @_ZdlPv(i8* %1254) #17
  br label %1255

1255:                                             ; preds = %1252, %1244, %1240
  %1256 = phi i32 [ %1243, %1240 ], [ %1247, %1244 ], [ %1247, %1252 ]
  %1257 = phi i8* [ %1242, %1240 ], [ %1246, %1244 ], [ %1246, %1252 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1237) #16
  br label %1258

1258:                                             ; preds = %1255, %1231, %1198
  %1259 = phi i32 [ %1256, %1255 ], [ %1232, %1231 ], [ %1201, %1198 ]
  %1260 = phi i8* [ %1257, %1255 ], [ %1233, %1231 ], [ %1200, %1198 ]
  %1261 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1262 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1261, i64 0, i32 1, i32 0
  %1263 = load i8, i8* %1262, align 1
  %1264 = icmp slt i8 %1263, 0
  br i1 %1264, label %1265, label %1268

1265:                                             ; preds = %1258
  %1266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1267 = load i8*, i8** %1266, align 8
  call void @_ZdlPv(i8* %1267) #17
  br label %1268

1268:                                             ; preds = %1258, %1265
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1011) #16
  br label %1269

1269:                                             ; preds = %1002, %1006, %1268, %273, %891, %249, %246
  %1270 = phi i32 [ %252, %249 ], [ %247, %246 ], [ %892, %891 ], [ %276, %273 ], [ %1009, %1006 ], [ %1259, %1268 ], [ %1005, %1002 ]
  %1271 = phi i8* [ %251, %249 ], [ %248, %246 ], [ %893, %891 ], [ %275, %273 ], [ %1008, %1006 ], [ %1260, %1268 ], [ %1004, %1002 ]
  %1272 = getelementptr inbounds %"class.v8::internal::torque::Symbol", %"class.v8::internal::torque::Symbol"* %14, i64 0, i32 0, i32 0, i32 0
  %1273 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %1272, align 8
  %1274 = icmp eq %"class.std::__1::unique_ptr"* %1273, null
  br i1 %1274, label %1304, label %1275

1275:                                             ; preds = %1269
  %1276 = bitcast %"class.std::__1::unique_ptr"* %1273 to i8*
  %1277 = getelementptr inbounds %"class.v8::internal::torque::Symbol", %"class.v8::internal::torque::Symbol"* %14, i64 0, i32 0, i32 0, i32 1
  %1278 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %1277, align 8
  %1279 = icmp eq %"class.std::__1::unique_ptr"* %1278, %1273
  br i1 %1279, label %1302, label %1280

1280:                                             ; preds = %1275, %1297
  %1281 = phi %"class.std::__1::unique_ptr"* [ %1282, %1297 ], [ %1278, %1275 ]
  %1282 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1281, i64 -1
  %1283 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1282, i64 0, i32 0, i32 0, i32 0
  %1284 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %1283, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %1283, align 8
  %1285 = icmp eq %"class.v8::internal::torque::Rule"* %1284, null
  br i1 %1285, label %1297, label %1286

1286:                                             ; preds = %1280
  %1287 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %1284, i64 0, i32 1, i32 0, i32 0
  %1288 = load %"class.v8::internal::torque::Symbol"**, %"class.v8::internal::torque::Symbol"*** %1287, align 8
  %1289 = icmp eq %"class.v8::internal::torque::Symbol"** %1288, null
  br i1 %1289, label %1295, label %1290

1290:                                             ; preds = %1286
  %1291 = ptrtoint %"class.v8::internal::torque::Symbol"** %1288 to i64
  %1292 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %1284, i64 0, i32 1, i32 0, i32 1
  %1293 = bitcast %"class.v8::internal::torque::Symbol"*** %1292 to i64*
  store i64 %1291, i64* %1293, align 8
  %1294 = bitcast %"class.v8::internal::torque::Symbol"** %1288 to i8*
  call void @_ZdlPv(i8* %1294) #17
  br label %1295

1295:                                             ; preds = %1290, %1286
  %1296 = bitcast %"class.v8::internal::torque::Rule"* %1284 to i8*
  call void @_ZdlPv(i8* %1296) #17
  br label %1297

1297:                                             ; preds = %1295, %1280
  %1298 = icmp eq %"class.std::__1::unique_ptr"* %1282, %1273
  br i1 %1298, label %1299, label %1280

1299:                                             ; preds = %1297
  %1300 = bitcast %"class.v8::internal::torque::Symbol"* %14 to i8**
  %1301 = load i8*, i8** %1300, align 8
  br label %1302

1302:                                             ; preds = %1299, %1275
  %1303 = phi i8* [ %1301, %1299 ], [ %1276, %1275 ]
  store %"class.std::__1::unique_ptr"* %1273, %"class.std::__1::unique_ptr"** %1277, align 8
  call void @_ZdlPv(i8* %1303) #17
  br label %1304

1304:                                             ; preds = %1302, %1269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #16
  %1305 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %13, i64 0, i32 0, i32 0
  %1306 = load %"class.v8::internal::torque::Item"**, %"class.v8::internal::torque::Item"*** %1305, align 8
  %1307 = icmp eq %"class.v8::internal::torque::Item"** %1306, null
  br i1 %1307, label %1313, label %1308

1308:                                             ; preds = %1304
  %1309 = ptrtoint %"class.v8::internal::torque::Item"** %1306 to i64
  %1310 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %13, i64 0, i32 0, i32 1
  %1311 = bitcast %"class.v8::internal::torque::Item"*** %1310 to i64*
  store i64 %1309, i64* %1311, align 8
  %1312 = bitcast %"class.v8::internal::torque::Item"** %1306 to i8*
  call void @_ZdlPv(i8* %1312) #17
  br label %1313

1313:                                             ; preds = %1304, %1308
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #16
  %1314 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1315 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %1314, align 8
  %1316 = icmp eq %"struct.std::__1::__hash_node_base.96"* %1315, null
  br i1 %1316, label %1328, label %1317

1317:                                             ; preds = %1313, %1317
  %1318 = phi %"struct.std::__1::__hash_node_base.96"* [ %1320, %1317 ], [ %1315, %1313 ]
  %1319 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %1318, i64 0, i32 0
  %1320 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %1319, align 8
  %1321 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %1318, i64 4
  %1322 = bitcast %"struct.std::__1::__hash_node_base.96"* %1321 to %"class.std::__1::__tree.118"*
  %1323 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %1318, i64 5
  %1324 = bitcast %"struct.std::__1::__hash_node_base.96"* %1323 to %"class.std::__1::__tree_node.163"**
  %1325 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %1324, align 8
  call void @_ZNSt3__16__treeIPKN2v88internal6torque4ItemENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.118"* %1322, %"class.std::__1::__tree_node.163"* %1325) #16
  %1326 = bitcast %"struct.std::__1::__hash_node_base.96"* %1318 to i8*
  call void @_ZdlPv(i8* %1326) #17
  %1327 = icmp eq %"struct.std::__1::__hash_node_base.96"* %1320, null
  br i1 %1327, label %1328, label %1317

1328:                                             ; preds = %1317, %1313
  %1329 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1330 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %1329, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %1329, align 8
  %1331 = icmp eq %"struct.std::__1::__hash_node_base.96"** %1330, null
  br i1 %1331, label %1334, label %1332

1332:                                             ; preds = %1328
  %1333 = bitcast %"struct.std::__1::__hash_node_base.96"** %1330 to i8*
  call void @_ZdlPv(i8* %1333) #17
  br label %1334

1334:                                             ; preds = %1332, %1328
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #16
  %1335 = load i64, i64* %46, align 8
  %1336 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %1340 unwind label %1337

1337:                                             ; preds = %1334
  %1338 = landingpad { i8*, i32 }
          catch i8* null
  %1339 = extractvalue { i8*, i32 } %1338, 0
  call void @__clang_call_terminate(i8* %1339) #19
  unreachable

1340:                                             ; preds = %1334
  %1341 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %1336 to i64*
  store i64 %1335, i64* %1341, align 8
  %1342 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %9, i64 0, i32 0, i32 0
  %1343 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %1342, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #16
  %1344 = icmp eq %"class.v8::internal::torque::Item"* %1343, null
  br i1 %1344, label %1350, label %1345

1345:                                             ; preds = %1340
  %1346 = bitcast %"class.v8::internal::torque::Item"* %1343 to i8*
  %1347 = ptrtoint %"class.v8::internal::torque::Item"* %1343 to i64
  %1348 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %9, i64 0, i32 0, i32 1
  %1349 = bitcast %"class.v8::internal::torque::Item"** %1348 to i64*
  store i64 %1347, i64* %1349, align 8
  call void @_ZdlPv(i8* %1346) #17
  br label %1350

1350:                                             ; preds = %232, %1340, %1345
  %1351 = phi i8* [ %234, %232 ], [ %1271, %1340 ], [ %1271, %1345 ]
  %1352 = phi i32 [ %235, %232 ], [ %1270, %1340 ], [ %1270, %1345 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #16
  %1353 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %8, i64 0, i32 0, i32 0
  %1354 = load %"class.v8::internal::torque::Item"*, %"class.v8::internal::torque::Item"** %1353, align 8
  %1355 = icmp eq %"class.v8::internal::torque::Item"* %1354, null
  br i1 %1355, label %1361, label %1356

1356:                                             ; preds = %1350
  %1357 = ptrtoint %"class.v8::internal::torque::Item"* %1354 to i64
  %1358 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %8, i64 0, i32 0, i32 1
  %1359 = bitcast %"class.v8::internal::torque::Item"** %1358 to i64*
  store i64 %1357, i64* %1359, align 8
  %1360 = bitcast %"class.v8::internal::torque::Item"* %1354 to i8*
  call void @_ZdlPv(i8* %1360) #17
  br label %1361

1361:                                             ; preds = %1350, %1356
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #16
  %1362 = insertvalue { i8*, i32 } undef, i8* %1351, 0
  %1363 = insertvalue { i8*, i32 } %1362, i32 %1352, 1
  resume { i8*, i32 } %1363
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque13DefaultActionEPNS1_19ParseResultIteratorE(%"class.v8::base::Optional"* noalias sret, %"class.v8::internal::torque::ParseResultIterator"*) #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.v8::internal::torque::ParseResultIterator", %"class.v8::internal::torque::ParseResultIterator"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::torque::ParseResultIterator", %"class.v8::internal::torque::ParseResultIterator"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::torque::ParseResult"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.v8::internal::torque::ParseResultIterator"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp ult i64 %4, %11
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %union.anon* %14 to i8*
  store i8 0, i8* %15, align 8
  br label %24

16:                                               ; preds = %2
  %17 = inttoptr i64 %9 to %"class.v8::internal::torque::ParseResult"*
  %18 = add nuw i64 %4, 1
  store i64 %18, i64* %3, align 8
  %19 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %17, i64 %4, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.v8::internal::torque::ParseResultHolderBase"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %19, align 8
  %22 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = bitcast %"class.v8::internal::torque::ParseResult"* %22 to i64*
  store i64 %21, i64* %23, align 8
  br label %24

24:                                               ; preds = %16, %13
  %25 = phi i8 [ 1, %16 ], [ 0, %13 ]
  %26 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %25, i8* %26, align 8
  ret void
}

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6torque7Grammar9MatchCharEPFiiEPPKc(i32 (i32)* nocapture, i8** nocapture) local_unnamed_addr #0 align 2 {
  %3 = load i8*, i8** %1, align 8
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = zext i8 %4 to i32
  %8 = tail call i32 %0(i32 %7)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = load i8*, i8** %1, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 1
  store i8* %12, i8** %1, align 8
  br label %13

13:                                               ; preds = %2, %6, %10
  %14 = phi i1 [ true, %10 ], [ false, %6 ], [ false, %2 ]
  ret i1 %14
}

; Function Attrs: ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6torque7Grammar9MatchCharEPFbcEPPKc(i1 (i8)* nocapture, i8** nocapture) local_unnamed_addr #0 align 2 {
  %3 = load i8*, i8** %1, align 8
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %0(i8 signext %4)
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = load i8*, i8** %1, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  store i8* %10, i8** %1, align 8
  br label %11

11:                                               ; preds = %6, %2, %8
  %12 = phi i1 [ true, %8 ], [ false, %2 ], [ false, %6 ]
  ret i1 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6torque7Grammar11MatchStringEPKcPS4_(i8* nocapture readonly, i8** nocapture) local_unnamed_addr #6 align 2 {
  %3 = load i8*, i8** %1, align 8
  %4 = load i8, i8* %0, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %12
  %7 = phi i8 [ %15, %12 ], [ %4, %2 ]
  %8 = phi i8* [ %14, %12 ], [ %3, %2 ]
  %9 = phi i8* [ %13, %12 ], [ %0, %2 ]
  %10 = load i8, i8* %8, align 1
  %11 = icmp eq i8 %7, %10
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %9, i64 1
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = load i8, i8* %13, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %6

17:                                               ; preds = %12, %2
  %18 = phi i8* [ %3, %2 ], [ %14, %12 ]
  store i8* %18, i8** %1, align 8
  br label %19

19:                                               ; preds = %6, %17
  %20 = phi i1 [ true, %17 ], [ false, %6 ]
  ret i1 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6torque7Grammar12MatchAnyCharEPPKc(i8** nocapture) local_unnamed_addr #6 align 2 {
  %2 = load i8*, i8** %0, align 8
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, i8* %2, i64 1
  store i8* %6, i8** %0, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ true, %5 ], [ false, %1 ]
  ret i1 %8
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #7

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) local_unnamed_addr #8 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #16
  tail call void @_ZSt9terminatev() #19
  unreachable
}

declare i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: inlinehint ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN2v88internal6torque4RuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.14, i64 0, i64 0)) #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #20
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %29, %21
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.v8::internal::torque::Rule"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !110

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %158, label %139

139:                                              ; preds = %132, %156
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %156 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %142, align 8
  store %"class.v8::internal::torque::Rule"* null, %"class.v8::internal::torque::Rule"** %142, align 8
  %144 = icmp eq %"class.v8::internal::torque::Rule"* %143, null
  br i1 %144, label %156, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %143, i64 0, i32 1, i32 0, i32 0
  %147 = load %"class.v8::internal::torque::Symbol"**, %"class.v8::internal::torque::Symbol"*** %146, align 8
  %148 = icmp eq %"class.v8::internal::torque::Symbol"** %147, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %145
  %150 = ptrtoint %"class.v8::internal::torque::Symbol"** %147 to i64
  %151 = getelementptr inbounds %"class.v8::internal::torque::Rule", %"class.v8::internal::torque::Rule"* %143, i64 0, i32 1, i32 0, i32 1
  %152 = bitcast %"class.v8::internal::torque::Symbol"*** %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = bitcast %"class.v8::internal::torque::Symbol"** %147 to i8*
  tail call void @_ZdlPv(i8* %153) #17
  br label %154

154:                                              ; preds = %149, %145
  %155 = bitcast %"class.v8::internal::torque::Rule"* %143 to i8*
  tail call void @_ZdlPv(i8* %155) #17
  br label %156

156:                                              ; preds = %154, %139
  %157 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %157, label %158, label %139

158:                                              ; preds = %156, %132
  %159 = icmp eq i64 %135, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %158
  %161 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %161) #17
  br label %162

162:                                              ; preds = %158, %160
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint noreturn ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__throw_length_errorEPKc(i8*) local_unnamed_addr #9 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = tail call i8* @__cxa_allocate_exception(i64 16) #16
  %3 = bitcast i8* %2 to %"class.std::length_error"*
  invoke void @_ZNSt12length_errorC2EPKc(%"class.std::length_error"* %3, i8* %0)
          to label %4 unwind label %5

4:                                                ; preds = %1
  tail call void @__cxa_throw(i8* %2, i8* bitcast (i8** @_ZTISt12length_error to i8*), i8* bitcast (void (%"class.std::length_error"*)* @_ZNSt12length_errorD1Ev to i8*)) #18
  unreachable

5:                                                ; preds = %1
  %6 = landingpad { i8*, i32 }
          cleanup
  tail call void @__cxa_free_exception(i8* %2) #16
  resume { i8*, i32 } %6
}

declare i8* @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt12length_errorC2EPKc(%"class.std::length_error"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::length_error", %"class.std::length_error"* %0, i64 0, i32 0
  tail call void @_ZNSt11logic_errorC2EPKc(%"class.std::logic_error"* %3, i8* %1)
  %4 = getelementptr inbounds %"class.std::length_error", %"class.std::length_error"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt12length_error, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @__cxa_free_exception(i8*) local_unnamed_addr

; Function Attrs: nounwind
declare void @_ZNSt12length_errorD1Ev(%"class.std::length_error"*) unnamed_addr #10

declare void @__cxa_throw(i8*, i8*, i8*) local_unnamed_addr

declare void @_ZNSt11logic_errorC2EPKc(%"class.std::logic_error"*, i8*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

; Function Attrs: ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  invoke void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0)
          to label %7 unwind label %65

7:                                                ; preds = %3
  %8 = load i8, i8* %6, align 8, !range !6
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %74, label %10

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr i8, i8* %12, i64 -24
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = getelementptr inbounds i8, i8* %17, i64 40
  %19 = bitcast i8* %18 to %"class.std::__1::basic_streambuf"**
  %20 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %19, align 8
  %21 = bitcast i8* %17 to %"class.std::__1::ios_base"*
  %22 = getelementptr inbounds i8, i8* %17, i64 8
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds i8, i8* %1, i64 %2
  %26 = getelementptr inbounds i8, i8* %17, i64 144
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %45

30:                                               ; preds = %10
  %31 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  invoke void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %21)
          to label %32 unwind label %72

32:                                               ; preds = %30
  %33 = invoke %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE)
          to label %34 unwind label %41

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::locale::facet"* %33 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %33 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = invoke signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32)
          to label %43 unwind label %41

41:                                               ; preds = %34, %32
  %42 = landingpad { i8*, i32 }
          catch i8* null
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  br label %75

43:                                               ; preds = %34
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  %44 = sext i8 %40 to i32
  store i32 %44, i32* %27, align 8
  br label %45

45:                                               ; preds = %43, %10
  %46 = phi i32 [ %44, %43 ], [ %28, %10 ]
  %47 = trunc i32 %46 to i8
  %48 = and i32 %24, 176
  %49 = icmp eq i32 %48, 32
  %50 = select i1 %49, i8* %25, i8* %1
  %51 = invoke %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %20, i8* %1, i8* %50, i8* %25, %"class.std::__1::ios_base"* dereferenceable(136) %21, i8 signext %47)
          to label %52 unwind label %72

52:                                               ; preds = %45
  %53 = icmp eq %"class.std::__1::basic_streambuf"* %51, null
  br i1 %53, label %54, label %74

54:                                               ; preds = %52
  %55 = load i8*, i8** %11, align 8
  %56 = getelementptr i8, i8* %55, i64 -24
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds i8, i8* %16, i64 %58
  %60 = bitcast i8* %59 to %"class.std::__1::ios_base"*
  %61 = getelementptr inbounds i8, i8* %59, i64 32
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = or i32 %63, 5
  invoke void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %60, i32 %64)
          to label %74 unwind label %70

65:                                               ; preds = %3
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  %68 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %69 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  br label %78

70:                                               ; preds = %54
  %71 = landingpad { i8*, i32 }
          catch i8* null
  br label %75

72:                                               ; preds = %30, %45
  %73 = landingpad { i8*, i32 }
          catch i8* null
  br label %75

74:                                               ; preds = %7, %54, %52
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  br label %90

75:                                               ; preds = %72, %41, %70
  %76 = phi { i8*, i32 } [ %71, %70 ], [ %73, %72 ], [ %42, %41 ]
  %77 = extractvalue { i8*, i32 } %76, 0
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #16
  br label %78

78:                                               ; preds = %75, %65
  %79 = phi i8* [ %16, %75 ], [ %69, %65 ]
  %80 = phi i8** [ %11, %75 ], [ %68, %65 ]
  %81 = phi i8* [ %77, %75 ], [ %67, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  %82 = call i8* @__cxa_begin_catch(i8* %81) #16
  %83 = load i8*, i8** %80, align 8
  %84 = getelementptr i8, i8* %83, i64 -24
  %85 = bitcast i8* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds i8, i8* %79, i64 %86
  %88 = bitcast i8* %87 to %"class.std::__1::ios_base"*
  invoke void @_ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv(%"class.std::__1::ios_base"* %88)
          to label %89 unwind label %91

89:                                               ; preds = %78
  call void @__cxa_end_catch()
  br label %90

90:                                               ; preds = %89, %74
  ret %"class.std::__1::basic_ostream"* %0

91:                                               ; preds = %78
  %92 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %93 unwind label %94

93:                                               ; preds = %91
  resume { i8*, i32 } %92

94:                                               ; preds = %91
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  call void @__clang_call_terminate(i8* %96) #19
  unreachable
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %86, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19)
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %86

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %75

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #20
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #16
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = invoke i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17)
          to label %61 unwind label %68

61:                                               ; preds = %46
  %62 = icmp eq i64 %60, %17
  %63 = load i8, i8* %50, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %66) #17
  br label %67

67:                                               ; preds = %61, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  br i1 %62, label %75, label %86

68:                                               ; preds = %46
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = load i8, i8* %50, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %73) #17
  br label %74

74:                                               ; preds = %68, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  resume { i8*, i32 } %69

75:                                               ; preds = %67, %28
  %76 = sub i64 %10, %18
  %77 = icmp sgt i64 %76, 0
  br i1 %77, label %78, label %85

78:                                               ; preds = %75
  %79 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %80 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %79, align 8
  %81 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %80, i64 12
  %82 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %81, align 8
  %83 = call i64 %82(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %76)
  %84 = icmp eq i64 %83, %76
  br i1 %84, label %85, label %86

85:                                               ; preds = %78, %75
  store i64 0, i64* %13, align 8
  br label %86

86:                                               ; preds = %85, %67, %21, %78, %6
  %87 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %85 ], [ null, %67 ], [ null, %21 ], [ null, %78 ]
  ret %"class.std::__1::basic_streambuf"* %87
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #10

declare void @_ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv(%"class.std::__1::ios_base"*) local_unnamed_addr #4

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #10

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

declare dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv() local_unnamed_addr #4

declare dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourceFile, v8::internal::torque::SourceId>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_17CurrentSourceFileEEERPNT_5ScopeEv() local_unnamed_addr #4

; Function Attrs: inlinehint ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal6torque11ParseResultENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.11"*, %"class.v8::internal::torque::ParseResult"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::torque::ParseResult"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.11"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.11"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::torque::ParseResult"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.14, i64 0, i64 0)) #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #20
  %33 = bitcast i8* %32 to %"class.v8::internal::torque::ParseResult"*
  br label %34

34:                                               ; preds = %29, %21
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.v8::internal::torque::ParseResult"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %36, i64 %9
  %38 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %36, i64 %35
  %39 = ptrtoint %"class.v8::internal::torque::ParseResult"* %38 to i64
  %40 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.v8::internal::torque::ParseResult"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %40, align 8
  %43 = bitcast %"class.v8::internal::torque::ParseResult"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %37, i64 1
  %45 = ptrtoint %"class.v8::internal::torque::ParseResult"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.v8::internal::torque::ParseResult"*, %"class.v8::internal::torque::ParseResult"** %46, align 8
  %48 = ptrtoint %"class.v8::internal::torque::ParseResult"* %47 to i64
  %49 = load %"class.v8::internal::torque::ParseResult"*, %"class.v8::internal::torque::ParseResult"** %3, align 8
  %50 = icmp eq %"class.v8::internal::torque::ParseResult"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.v8::internal::torque::ParseResultHolderBase"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.v8::internal::torque::ParseResult"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.v8::internal::torque::ParseResult"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %60, i64 -1
  %64 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %61, i64 -1
  %65 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.v8::internal::torque::ParseResult"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %65, align 8
  %68 = bitcast %"class.v8::internal::torque::ParseResult"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !111

71:                                               ; preds = %59, %51
  %72 = phi %"class.v8::internal::torque::ParseResult"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.v8::internal::torque::ParseResult"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.v8::internal::torque::ParseResult"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.v8::internal::torque::ParseResult"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.v8::internal::torque::ParseResult"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %77, i64 -1
  %80 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %78, i64 -1
  %81 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.v8::internal::torque::ParseResult"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %81, align 8
  %84 = bitcast %"class.v8::internal::torque::ParseResult"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %77, i64 -2
  %86 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %78, i64 -2
  %87 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.v8::internal::torque::ParseResult"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %87, align 8
  %90 = bitcast %"class.v8::internal::torque::ParseResult"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %77, i64 -3
  %92 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %78, i64 -3
  %93 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.v8::internal::torque::ParseResult"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %93, align 8
  %96 = bitcast %"class.v8::internal::torque::ParseResult"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %77, i64 -4
  %98 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %78, i64 -4
  %99 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.v8::internal::torque::ParseResult"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %99, align 8
  %102 = bitcast %"class.v8::internal::torque::ParseResult"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %77, i64 -5
  %104 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %78, i64 -5
  %105 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.v8::internal::torque::ParseResult"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %105, align 8
  %108 = bitcast %"class.v8::internal::torque::ParseResult"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %77, i64 -6
  %110 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %78, i64 -6
  %111 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %110, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.v8::internal::torque::ParseResult"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %111, align 8
  %114 = bitcast %"class.v8::internal::torque::ParseResult"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %77, i64 -7
  %116 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %78, i64 -7
  %117 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.v8::internal::torque::ParseResult"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %117, align 8
  %120 = bitcast %"class.v8::internal::torque::ParseResult"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %77, i64 -8
  %122 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %78, i64 -8
  %123 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %122, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.v8::internal::torque::ParseResult"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %123, align 8
  %126 = bitcast %"class.v8::internal::torque::ParseResult"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.v8::internal::torque::ParseResult"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.v8::internal::torque::ParseResult"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.v8::internal::torque::ParseResult"*, %"class.v8::internal::torque::ParseResult"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.v8::internal::torque::ParseResult"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.v8::internal::torque::ParseResult"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.v8::internal::torque::ParseResult"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.v8::internal::torque::ParseResult"*
  %138 = icmp eq %"class.v8::internal::torque::ParseResult"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.v8::internal::torque::ParseResult"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %140, i64 -1
  %142 = getelementptr inbounds %"class.v8::internal::torque::ParseResult", %"class.v8::internal::torque::ParseResult"* %141, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"class.v8::internal::torque::ParseResultHolderBase"*, %"class.v8::internal::torque::ParseResultHolderBase"** %142, align 8
  store %"class.v8::internal::torque::ParseResultHolderBase"* null, %"class.v8::internal::torque::ParseResultHolderBase"** %142, align 8
  %144 = icmp eq %"class.v8::internal::torque::ParseResultHolderBase"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.v8::internal::torque::ParseResultHolderBase"* %143 to void (%"class.v8::internal::torque::ParseResultHolderBase"*)***
  %147 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)**, void (%"class.v8::internal::torque::ParseResultHolderBase"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %147, i64 1
  %149 = load void (%"class.v8::internal::torque::ParseResultHolderBase"*)*, void (%"class.v8::internal::torque::ParseResultHolderBase"*)** %148, align 8
  tail call void %149(%"class.v8::internal::torque::ParseResultHolderBase"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.v8::internal::torque::ParseResult"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #17
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"*, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  %5 = getelementptr inbounds %"class.std::__1::basic_ios.base", %"class.std::__1::basic_ios.base"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = bitcast %"class.std::__1::basic_stringstream"* %0 to %"class.std::__1::basic_iostream"*
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1
  %9 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %10 = bitcast %"class.std::__1::basic_stringstream"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8**
  %13 = inttoptr i64 %9 to i8*
  %14 = getelementptr i8, i8* %13, i64 -24
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %16
  %19 = bitcast i8* %18 to i64*
  store i64 %11, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %20, align 8
  %21 = load i8*, i8** %12, align 8
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %17, i64 %24
  %26 = bitcast i8* %25 to %"class.std::__1::ios_base"*
  %27 = bitcast %"class.std::__1::basic_stringbuf"* %8 to i8*
  invoke void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %26, i8* %27)
          to label %28 unwind label %59

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %8, i64 0, i32 0
  %31 = getelementptr inbounds i8, i8* %25, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1
  %36 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %37 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  %45 = bitcast i8* %44 to i64*
  store i64 %38, i64* %45, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %46, i64* %10, align 8
  %47 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %17, i64 %51
  %53 = bitcast i8* %52 to i64*
  store i64 %47, i64* %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %6, align 8
  invoke void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %30)
          to label %54 unwind label %63

54:                                               ; preds = %28
  %55 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 1
  %57 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 3
  %58 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 32, i1 false)
  store i32 %1, i32* %57, align 8
  ret void

59:                                               ; preds = %2
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  %62 = extractvalue { i8*, i32 } %60, 1
  br label %67

63:                                               ; preds = %28
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  %66 = extractvalue { i8*, i32 } %64, 1
  tail call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* %7, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #16
  br label %67

67:                                               ; preds = %63, %59
  %68 = phi i8* [ %65, %63 ], [ %61, %59 ]
  %69 = phi i32 [ %66, %63 ], [ %62, %59 ]
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %4) #16
  %70 = insertvalue { i8*, i32 } undef, i8* %68, 0
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1
  resume { i8*, i32 } %71
}

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #4

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #4

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNK2v88internal6torque14MessageBuilder5ThrowEv(%"class.v8::internal::torque::MessageBuilder"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque14MessageBuilderD2Ev(%"class.v8::internal::torque::MessageBuilder"*) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  invoke void @_ZNK2v88internal6torque14MessageBuilder6ReportEv(%"class.v8::internal::torque::MessageBuilder"* %0)
          to label %2 unwind label %38

2:                                                ; preds = %1
  %3 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %4, align 8
  %6 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %5 to i8*
  %9 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %9, align 8
  %11 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"struct.v8::internal::torque::TorqueMessage"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %13, i64 -1
  %15 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #17
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.147"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"struct.v8::internal::torque::TorqueMessage"* %5, %"struct.v8::internal::torque::TorqueMessage"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #17
  br label %29

29:                                               ; preds = %2, %27
  %30 = bitcast %"class.v8::internal::torque::MessageBuilder"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #17
  br label %37

37:                                               ; preds = %29, %34
  ret void

38:                                               ; preds = %1
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  %41 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 1
  tail call void @_ZNSt3__16vectorIN2v88internal6torque13TorqueMessageENS_9allocatorIS4_EEED2Ev(%"class.std::__1::vector.147"* %41) #16
  %42 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal6torque13TorqueMessageD2Ev(%"struct.v8::internal::torque::TorqueMessage"* %42) #16
  tail call void @__clang_call_terminate(i8* %40) #19
  unreachable
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque8ToStringIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEES9_DpOT_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__1::basic_stringstream", align 8
  %4 = bitcast %"class.std::__1::basic_stringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %4) #16
  call void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"* nonnull %3, i32 24)
  %5 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_ostream.base"* %5 to %"class.std::__1::basic_ostream"*
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %6, i8* %17, i64 %18)
          to label %20 unwind label %48

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1
  invoke void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %21)
          to label %22 unwind label %50

22:                                               ; preds = %20
  %23 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %24 = bitcast %"class.std::__1::basic_stringstream"* %3 to i64*
  store i64 %23, i64* %24, align 8
  %25 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %26 = inttoptr i64 %23 to i8*
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = bitcast i8* %30 to i64*
  store i64 %25, i64* %31, align 8
  %32 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %33 = bitcast %"class.std::__1::basic_ostream.base"* %5 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %21, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %22
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #17
  br label %43

43:                                               ; preds = %22, %40
  %44 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %21, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %44) #16
  %45 = bitcast %"class.std::__1::basic_stringstream"* %3 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %45, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #16
  %46 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2
  %47 = bitcast %"class.std::__1::basic_ios.base"* %46 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %47) #16
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %4) #16
  ret void

48:                                               ; preds = %2
  %49 = landingpad { i8*, i32 }
          cleanup
  br label %52

50:                                               ; preds = %20
  %51 = landingpad { i8*, i32 }
          cleanup
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi { i8*, i32 } [ %51, %50 ], [ %49, %48 ]
  %54 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %55 = bitcast %"class.std::__1::basic_stringstream"* %3 to i64*
  store i64 %54, i64* %55, align 8
  %56 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %57 = inttoptr i64 %54 to i8*
  %58 = getelementptr i8, i8* %57, i64 -24
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i8, i8* %4, i64 %60
  %62 = bitcast i8* %61 to i64*
  store i64 %56, i64* %62, align 8
  %63 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %64 = bitcast %"class.std::__1::basic_ostream.base"* %5 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %65, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %52
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #17
  br label %75

75:                                               ; preds = %52, %72
  %76 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %65, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %76) #16
  %77 = bitcast %"class.std::__1::basic_stringstream"* %3 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %77, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #16
  %78 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2
  %79 = bitcast %"class.std::__1::basic_ios.base"* %78 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %79) #16
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %4) #16
  resume { i8*, i32 } %53
}

declare void @_ZN2v88internal6torque14MessageBuilderC1ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_13TorqueMessage4KindE(%"class.v8::internal::torque::MessageBuilder"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #4

declare void @_ZNK2v88internal6torque14MessageBuilder6ReportEv(%"class.v8::internal::torque::MessageBuilder"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal6torque13TorqueMessageENS_9allocatorIS4_EEED2Ev(%"class.std::__1::vector.147"*) unnamed_addr #2 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %2, align 8
  %4 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %7, align 8
  %9 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %8, %3
  br i1 %9, label %25, label %10

10:                                               ; preds = %5, %20
  %11 = phi %"struct.v8::internal::torque::TorqueMessage"* [ %12, %20 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %11, i64 -1
  %13 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %17, %10
  %21 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %12, %3
  br i1 %21, label %22, label %10

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.147"* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %5
  %26 = phi i8* [ %24, %22 ], [ %6, %5 ]
  store %"struct.v8::internal::torque::TorqueMessage"* %3, %"struct.v8::internal::torque::TorqueMessage"** %7, align 8
  tail call void @_ZdlPv(i8* %26) #17
  br label %27

27:                                               ; preds = %1, %25
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque13TorqueMessageD2Ev(%"struct.v8::internal::torque::TorqueMessage"*) unnamed_addr #13 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #17
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPKN2v88internal6torque4ItemENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.118"*, %"class.std::__1::__tree_node.163"*) local_unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = icmp eq %"class.std::__1::__tree_node.163"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.163"* %1 to %"class.std::__1::__tree_node.163"**
  %6 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %5, align 8
  tail call void @_ZNSt3__16__treeIPKN2v88internal6torque4ItemENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.118"* %0, %"class.std::__1::__tree_node.163"* %6) #16
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.163"**
  %9 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %8, align 8
  tail call void @_ZNSt3__16__treeIPKN2v88internal6torque4ItemENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.118"* %0, %"class.std::__1::__tree_node.163"* %9) #16
  %10 = bitcast %"class.std::__1::__tree_node.163"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.v8::internal::torque::Item"* dereferenceable(48), %"class.v8::internal::torque::Item"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %1, i64 0, i32 2
  %6 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %1, i64 0, i32 3
  %7 = load i64, i64* %5, align 8
  %8 = load i64, i64* %6, align 8
  %9 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %7, i64 %8)
  %10 = load i64, i64* %4, align 8
  %11 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %10)
  %12 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %9, i64 %11)
  %13 = bitcast %"class.v8::internal::torque::Item"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %14)
  %16 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %12, i64 %15)
  %17 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %118, label %20

20:                                               ; preds = %3
  %21 = tail call i64 @llvm.ctpop.i64(i64 %18) #16, !range !112
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = add i64 %18, -1
  %25 = and i64 %24, %16
  br label %30

26:                                               ; preds = %20
  %27 = icmp ult i64 %16, %18
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = urem i64 %16, %18
  br label %30

30:                                               ; preds = %23, %26, %28
  %31 = phi i64 [ %25, %23 ], [ %29, %28 ], [ %16, %26 ]
  %32 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, i64 %31
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %118, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %118, label %41

41:                                               ; preds = %37
  %42 = add i64 %18, -1
  %43 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %1, i64 0, i32 0
  %44 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %43, align 8
  %45 = load i64, i64* %4, align 8
  %46 = load i64, i64* %5, align 8
  %47 = load i64, i64* %6, align 8
  br i1 %22, label %48, label %85

48:                                               ; preds = %41, %81
  %49 = phi %"struct.std::__1::__hash_node_base"* [ %83, %81 ], [ %39, %41 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %16
  br i1 %53, label %61, label %54

54:                                               ; preds = %48
  %55 = icmp ult i64 %52, %18
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %52, %18
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi i64 [ %57, %56 ], [ %52, %54 ]
  %60 = icmp eq i64 %59, %31
  br i1 %60, label %61, label %118

61:                                               ; preds = %58, %48
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to %"class.v8::internal::torque::Rule"**
  %64 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %63, align 8
  %65 = icmp eq %"class.v8::internal::torque::Rule"* %64, %44
  br i1 %65, label %66, label %81

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 3
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, %45
  br i1 %70, label %71, label %81

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 4
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, %46
  br i1 %75, label %76, label %81

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 5
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, %47
  br i1 %80, label %207, label %81

81:                                               ; preds = %61, %66, %71, %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base"* %83, null
  br i1 %84, label %118, label %48

85:                                               ; preds = %41, %114
  %86 = phi %"struct.std::__1::__hash_node_base"* [ %116, %114 ], [ %39, %41 ]
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %86, i64 1
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, %16
  %91 = and i64 %89, %42
  %92 = icmp eq i64 %91, %31
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %118

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %86, i64 2
  %96 = bitcast %"struct.std::__1::__hash_node_base"* %95 to %"class.v8::internal::torque::Rule"**
  %97 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %96, align 8
  %98 = icmp eq %"class.v8::internal::torque::Rule"* %97, %44
  br i1 %98, label %99, label %114

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %86, i64 3
  %101 = bitcast %"struct.std::__1::__hash_node_base"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = icmp eq i64 %102, %45
  br i1 %103, label %104, label %114

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %86, i64 4
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, %46
  br i1 %108, label %109, label %114

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %86, i64 5
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, %47
  br i1 %113, label %207, label %114

114:                                              ; preds = %104, %99, %94, %109
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %86, i64 0, i32 0
  %116 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %115, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base"* %116, null
  br i1 %117, label %118, label %85

118:                                              ; preds = %85, %114, %58, %81, %37, %30, %3
  %119 = phi i64 [ %31, %30 ], [ undef, %3 ], [ %31, %37 ], [ %31, %81 ], [ %31, %58 ], [ %31, %114 ], [ %31, %85 ]
  %120 = tail call i8* @_Znwm(i64 64) #20, !noalias !113
  %121 = getelementptr inbounds i8, i8* %120, i64 16
  %122 = bitcast %"class.v8::internal::torque::Item"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 48, i1 false) #16, !noalias !113
  %123 = getelementptr inbounds i8, i8* %120, i64 8
  %124 = bitcast i8* %123 to i64*
  store i64 %16, i64* %124, align 8, !noalias !113
  %125 = bitcast i8* %120 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %125, align 8, !noalias !113
  %126 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 1
  %129 = uitofp i64 %128 to float
  %130 = uitofp i64 %18 to float
  %131 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %132 = load float, float* %131, align 4
  %133 = fmul float %132, %130
  %134 = fcmp olt float %133, %129
  %135 = or i1 %19, %134
  br i1 %135, label %136, label %162

136:                                              ; preds = %118
  %137 = shl i64 %18, 1
  %138 = icmp ult i64 %18, 3
  %139 = tail call i64 @llvm.ctpop.i64(i64 %18) #16, !range !112
  %140 = icmp ugt i64 %139, 1
  %141 = or i1 %138, %140
  %142 = zext i1 %141 to i64
  %143 = or i64 %137, %142
  %144 = fdiv float %129, %132
  %145 = tail call float @llvm.ceil.f32(float %144) #16
  %146 = fptoui float %145 to i64
  %147 = icmp ult i64 %143, %146
  %148 = select i1 %147, i64 %146, i64 %143
  invoke void @_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %148)
          to label %149 unwind label %160

149:                                              ; preds = %136
  %150 = load i64, i64* %17, align 8
  %151 = tail call i64 @llvm.ctpop.i64(i64 %150) #16, !range !112
  %152 = icmp ugt i64 %151, 1
  br i1 %152, label %156, label %153

153:                                              ; preds = %149
  %154 = add i64 %150, -1
  %155 = and i64 %154, %16
  br label %162

156:                                              ; preds = %149
  %157 = icmp ult i64 %16, %150
  br i1 %157, label %162, label %158

158:                                              ; preds = %156
  %159 = urem i64 %16, %150
  br label %162

160:                                              ; preds = %136
  %161 = landingpad { i8*, i32 }
          cleanup
  tail call void @_ZdlPv(i8* nonnull %120) #17
  resume { i8*, i32 } %161

162:                                              ; preds = %158, %156, %153, %118
  %163 = phi i64 [ %119, %118 ], [ %155, %153 ], [ %159, %158 ], [ %16, %156 ]
  %164 = phi i64 [ %18, %118 ], [ %150, %153 ], [ %150, %158 ], [ %150, %156 ]
  %165 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %166 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %165, align 8
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %166, i64 %163
  %168 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %167, align 8
  %169 = icmp eq %"struct.std::__1::__hash_node_base"* %168, null
  br i1 %169, label %170, label %196

170:                                              ; preds = %162
  %171 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %172 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast i8* %120 to i64*
  store i64 %173, i64* %174, align 8
  %175 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i8**
  store i8* %120, i8** %175, align 8
  store %"struct.std::__1::__hash_node_base"* %171, %"struct.std::__1::__hash_node_base"** %167, align 8
  %176 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %177 = icmp eq %"struct.std::__1::__hash_node_base"* %176, null
  br i1 %177, label %203, label %178

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %176, i64 1
  %180 = bitcast %"struct.std::__1::__hash_node_base"* %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = tail call i64 @llvm.ctpop.i64(i64 %164) #16, !range !112
  %183 = icmp ugt i64 %182, 1
  br i1 %183, label %187, label %184

184:                                              ; preds = %178
  %185 = add i64 %164, -1
  %186 = and i64 %181, %185
  br label %191

187:                                              ; preds = %178
  %188 = icmp ult i64 %181, %164
  br i1 %188, label %191, label %189

189:                                              ; preds = %187
  %190 = urem i64 %181, %164
  br label %191

191:                                              ; preds = %184, %187, %189
  %192 = phi i64 [ %186, %184 ], [ %190, %189 ], [ %181, %187 ]
  %193 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %165, align 8
  %194 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %193, i64 %192
  %195 = bitcast %"struct.std::__1::__hash_node_base"** %194 to i8**
  br label %201

196:                                              ; preds = %162
  %197 = bitcast %"struct.std::__1::__hash_node_base"* %168 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast i8* %120 to i64*
  store i64 %198, i64* %199, align 8
  %200 = bitcast %"struct.std::__1::__hash_node_base"* %168 to i8**
  br label %201

201:                                              ; preds = %191, %196
  %202 = phi i8** [ %200, %196 ], [ %195, %191 ]
  store i8* %120, i8** %202, align 8
  br label %203

203:                                              ; preds = %201, %170
  %204 = bitcast i8* %120 to %"struct.std::__1::__hash_node_base"*
  %205 = load i64, i64* %126, align 8
  %206 = add i64 %205, 1
  store i64 %206, i64* %126, align 8
  br label %207

207:                                              ; preds = %109, %76, %203
  %208 = phi i8 [ 1, %203 ], [ 0, %76 ], [ 0, %109 ]
  %209 = phi %"struct.std::__1::__hash_node_base"* [ %204, %203 ], [ %49, %76 ], [ %86, %109 ]
  %210 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %209, 0
  %211 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %210, i8 %208, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %211
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !112
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1)
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !112
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !112
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29)
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZN2v84base12hash_combineEmm(i64, i64) local_unnamed_addr #4

declare i64 @_ZN2v84base10hash_valueEm(i64) local_unnamed_addr #4

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #4

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %227, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.14, i64 0, i64 0)) #18
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #20
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !116

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %235, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !112
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %235, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %155

79:                                               ; preds = %77, %140
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %144, %140 ], [ %75, %77 ]
  %81 = phi i64 [ %142, %140 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %141, %140 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %140, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %139, label %146

97:                                               ; preds = %146, %120
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %100, %120 ], [ %80, %146 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %126, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 2
  %104 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %154, align 8
  %105 = bitcast %"struct.std::__1::__hash_node_base"* %103 to %"class.v8::internal::torque::Rule"**
  %106 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %105, align 8
  %107 = icmp eq %"class.v8::internal::torque::Rule"* %104, %106
  br i1 %107, label %108, label %126

108:                                              ; preds = %102
  %109 = load i64, i64* %149, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %109, %112
  br i1 %113, label %114, label %126

114:                                              ; preds = %108
  %115 = load i64, i64* %151, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 4
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %115, %118
  br i1 %119, label %120, label %126

120:                                              ; preds = %114
  %121 = load i64, i64* %153, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 5
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = icmp eq i64 %121, %124
  br i1 %125, label %97, label %126

126:                                              ; preds = %120, %114, %108, %102, %97
  %127 = ptrtoint %"struct.std::__1::__hash_node_base"* %100 to i64
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %129 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %127, i64* %129, align 8
  %130 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %130, i64 %90
  %132 = bitcast %"struct.std::__1::__hash_node_base"** %131 to i64**
  %133 = load i64*, i64** %132, align 8
  %134 = load i64, i64* %133, align 8
  store i64 %134, i64* %128, align 8
  %135 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %135, i64 %90
  %137 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, align 8
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %137, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %138, align 8
  br label %140

139:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %140

140:                                              ; preds = %139, %126, %89
  %141 = phi %"struct.std::__1::__hash_node_base"* [ %80, %139 ], [ %82, %126 ], [ %80, %89 ]
  %142 = phi i64 [ %90, %139 ], [ %81, %126 ], [ %81, %89 ]
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %141, i64 0, i32 0
  %144 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %143, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base"* %144, null
  br i1 %145, label %235, label %79

146:                                              ; preds = %92
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %149 = bitcast %"struct.std::__1::__hash_node_base"* %148 to i64*
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 4
  %151 = bitcast %"struct.std::__1::__hash_node_base"* %150 to i64*
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 5
  %153 = bitcast %"struct.std::__1::__hash_node_base"* %152 to i64*
  %154 = bitcast %"struct.std::__1::__hash_node_base"* %147 to %"class.v8::internal::torque::Rule"**
  br label %97

155:                                              ; preds = %77, %221
  %156 = phi %"struct.std::__1::__hash_node_base"* [ %225, %221 ], [ %75, %77 ]
  %157 = phi i64 [ %223, %221 ], [ %71, %77 ]
  %158 = phi %"struct.std::__1::__hash_node_base"* [ %222, %221 ], [ %38, %77 ]
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %156, i64 1
  %160 = bitcast %"struct.std::__1::__hash_node_base"* %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = and i64 %161, %78
  %163 = icmp eq i64 %162, %157
  br i1 %163, label %221, label %164

164:                                              ; preds = %155
  %165 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %166 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %165, i64 %162
  %167 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %166, align 8
  %168 = icmp eq %"struct.std::__1::__hash_node_base"* %167, null
  br i1 %168, label %178, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %156, i64 2
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %156, i64 3
  %172 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i64*
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %156, i64 4
  %174 = bitcast %"struct.std::__1::__hash_node_base"* %173 to i64*
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %156, i64 5
  %176 = bitcast %"struct.std::__1::__hash_node_base"* %175 to i64*
  %177 = bitcast %"struct.std::__1::__hash_node_base"* %170 to %"class.v8::internal::torque::Rule"**
  br label %179

178:                                              ; preds = %164
  store %"struct.std::__1::__hash_node_base"* %158, %"struct.std::__1::__hash_node_base"** %166, align 8
  br label %221

179:                                              ; preds = %169, %202
  %180 = phi %"struct.std::__1::__hash_node_base"* [ %182, %202 ], [ %156, %169 ]
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %180, i64 0, i32 0
  %182 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %181, align 8
  %183 = icmp eq %"struct.std::__1::__hash_node_base"* %182, null
  br i1 %183, label %208, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %182, i64 2
  %186 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %177, align 8
  %187 = bitcast %"struct.std::__1::__hash_node_base"* %185 to %"class.v8::internal::torque::Rule"**
  %188 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %187, align 8
  %189 = icmp eq %"class.v8::internal::torque::Rule"* %186, %188
  br i1 %189, label %190, label %208

190:                                              ; preds = %184
  %191 = load i64, i64* %172, align 8
  %192 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %182, i64 3
  %193 = bitcast %"struct.std::__1::__hash_node_base"* %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = icmp eq i64 %191, %194
  br i1 %195, label %196, label %208

196:                                              ; preds = %190
  %197 = load i64, i64* %174, align 8
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %182, i64 4
  %199 = bitcast %"struct.std::__1::__hash_node_base"* %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = icmp eq i64 %197, %200
  br i1 %201, label %202, label %208

202:                                              ; preds = %196
  %203 = load i64, i64* %176, align 8
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %182, i64 5
  %205 = bitcast %"struct.std::__1::__hash_node_base"* %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = icmp eq i64 %203, %206
  br i1 %207, label %179, label %208

208:                                              ; preds = %184, %190, %196, %179, %202
  %209 = ptrtoint %"struct.std::__1::__hash_node_base"* %182 to i64
  %210 = bitcast %"struct.std::__1::__hash_node_base"* %180 to i64*
  %211 = bitcast %"struct.std::__1::__hash_node_base"* %158 to i64*
  store i64 %209, i64* %211, align 8
  %212 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %213 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %212, i64 %162
  %214 = bitcast %"struct.std::__1::__hash_node_base"** %213 to i64**
  %215 = load i64*, i64** %214, align 8
  %216 = load i64, i64* %215, align 8
  store i64 %216, i64* %210, align 8
  %217 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %218 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %217, i64 %162
  %219 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %218, align 8
  %220 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %219, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %156, %"struct.std::__1::__hash_node_base"** %220, align 8
  br label %221

221:                                              ; preds = %155, %208, %178
  %222 = phi %"struct.std::__1::__hash_node_base"* [ %156, %178 ], [ %158, %208 ], [ %156, %155 ]
  %223 = phi i64 [ %162, %178 ], [ %157, %208 ], [ %157, %155 ]
  %224 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %222, i64 0, i32 0
  %225 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %224, align 8
  %226 = icmp eq %"struct.std::__1::__hash_node_base"* %225, null
  br i1 %226, label %235, label %155

227:                                              ; preds = %2
  %228 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %229 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %228, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %228, align 8
  %230 = icmp eq %"struct.std::__1::__hash_node_base"** %229, null
  br i1 %230, label %233, label %231

231:                                              ; preds = %227
  %232 = bitcast %"struct.std::__1::__hash_node_base"** %229 to i8*
  tail call void @_ZdlPv(i8* %232) #17
  br label %233

233:                                              ; preds = %227, %231
  %234 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %234, align 8
  br label %235

235:                                              ; preds = %221, %140, %70, %35, %233
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

; Function Attrs: ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.96"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairImPN2v88internal6torque6SymbolEEENS_3setIPKNS5_4ItemENS_4lessISC_EENS_9allocatorISC_EEEEEENS_22__unordered_map_hasherIS8_SI_NS3_4base4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_SI_SO_SM_Lb1EEENSF_ISI_EEE25__emplace_unique_key_argsIS8_JRKNS_21piecewise_construct_tENS_5tupleIJOS8_EEENSY_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISI_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.92"*, %"struct.std::__1::pair.127"* dereferenceable(16), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.179"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = getelementptr inbounds %"struct.std::__1::pair.127", %"struct.std::__1::pair.127"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__1::pair.127", %"struct.std::__1::pair.127"* %1, i64 0, i32 1
  %8 = bitcast %"class.v8::internal::torque::Symbol"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %9)
  %11 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 0, i64 %10)
  %12 = load i64, i64* %6, align 8
  %13 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %12)
  %14 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %11, i64 %13)
  %15 = getelementptr inbounds %"class.std::__1::__hash_table.92", %"class.std::__1::__hash_table.92"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %93, label %18

18:                                               ; preds = %5
  %19 = tail call i64 @llvm.ctpop.i64(i64 %16) #16, !range !112
  %20 = icmp ugt i64 %19, 1
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = add i64 %16, -1
  %23 = and i64 %22, %14
  br label %28

24:                                               ; preds = %18
  %25 = icmp ult i64 %14, %16
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = urem i64 %14, %16
  br label %28

28:                                               ; preds = %21, %24, %26
  %29 = phi i64 [ %23, %21 ], [ %27, %26 ], [ %14, %24 ]
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.92", %"class.std::__1::__hash_table.92"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %31, i64 %29
  %33 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.96"* %33, null
  br i1 %34, label %93, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %33, i64 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.96"* %37, null
  br i1 %38, label %93, label %39

39:                                               ; preds = %35
  %40 = add i64 %16, -1
  %41 = load i64, i64* %6, align 8
  %42 = load %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %7, align 8
  br i1 %20, label %43, label %70

43:                                               ; preds = %39, %66
  %44 = phi %"struct.std::__1::__hash_node_base.96"* [ %68, %66 ], [ %37, %39 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %44, i64 1
  %46 = bitcast %"struct.std::__1::__hash_node_base.96"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %14
  br i1 %48, label %56, label %49

49:                                               ; preds = %43
  %50 = icmp ult i64 %47, %16
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = urem i64 %47, %16
  br label %53

53:                                               ; preds = %51, %49
  %54 = phi i64 [ %52, %51 ], [ %47, %49 ]
  %55 = icmp eq i64 %54, %29
  br i1 %55, label %56, label %93

56:                                               ; preds = %53, %43
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %44, i64 2
  %58 = bitcast %"struct.std::__1::__hash_node_base.96"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %41
  br i1 %60, label %61, label %66

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %44, i64 3
  %63 = bitcast %"struct.std::__1::__hash_node_base.96"* %62 to %"class.v8::internal::torque::Symbol"**
  %64 = load %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %63, align 8
  %65 = icmp eq %"class.v8::internal::torque::Symbol"* %64, %42
  br i1 %65, label %189, label %66

66:                                               ; preds = %61, %56
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %44, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.96"* %68, null
  br i1 %69, label %93, label %43

70:                                               ; preds = %39, %89
  %71 = phi %"struct.std::__1::__hash_node_base.96"* [ %91, %89 ], [ %37, %39 ]
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %71, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.96"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, %14
  %76 = and i64 %74, %40
  %77 = icmp eq i64 %76, %29
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %93

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %71, i64 2
  %81 = bitcast %"struct.std::__1::__hash_node_base.96"* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, %41
  br i1 %83, label %84, label %89

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %71, i64 3
  %86 = bitcast %"struct.std::__1::__hash_node_base.96"* %85 to %"class.v8::internal::torque::Symbol"**
  %87 = load %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %86, align 8
  %88 = icmp eq %"class.v8::internal::torque::Symbol"* %87, %42
  br i1 %88, label %189, label %89

89:                                               ; preds = %84, %79
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %71, i64 0, i32 0
  %91 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %90, align 8
  %92 = icmp eq %"struct.std::__1::__hash_node_base.96"* %91, null
  br i1 %92, label %93, label %70

93:                                               ; preds = %70, %89, %53, %66, %35, %28, %5
  %94 = phi i64 [ %29, %28 ], [ undef, %5 ], [ %29, %35 ], [ %29, %66 ], [ %29, %53 ], [ %29, %89 ], [ %29, %70 ]
  %95 = tail call i8* @_Znwm(i64 56) #20, !noalias !117
  %96 = getelementptr inbounds i8, i8* %95, i64 16
  %97 = bitcast %"class.std::__1::tuple"* %3 to i8**
  %98 = load i8*, i8** %97, align 8, !noalias !117
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %98, i64 16, i1 false) #16, !noalias !117
  %99 = getelementptr inbounds i8, i8* %95, i64 40
  %100 = getelementptr inbounds i8, i8* %95, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false) #16, !noalias !117
  %101 = bitcast i8* %100 to i8**
  store i8* %99, i8** %101, align 8, !noalias !117
  %102 = getelementptr inbounds i8, i8* %95, i64 8
  %103 = bitcast i8* %102 to i64*
  store i64 %14, i64* %103, align 8, !noalias !117
  %104 = bitcast i8* %95 to %"struct.std::__1::__hash_node_base.96"**
  store %"struct.std::__1::__hash_node_base.96"* null, %"struct.std::__1::__hash_node_base.96"** %104, align 8, !noalias !117
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.92", %"class.std::__1::__hash_table.92"* %0, i64 0, i32 2, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 1
  %108 = uitofp i64 %107 to float
  %109 = uitofp i64 %16 to float
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.92", %"class.std::__1::__hash_table.92"* %0, i64 0, i32 3, i32 0, i32 0
  %111 = load float, float* %110, align 4
  %112 = fmul float %111, %109
  %113 = fcmp olt float %112, %108
  %114 = or i1 %17, %113
  br i1 %114, label %115, label %144

115:                                              ; preds = %93
  %116 = shl i64 %16, 1
  %117 = icmp ult i64 %16, 3
  %118 = tail call i64 @llvm.ctpop.i64(i64 %16) #16, !range !112
  %119 = icmp ugt i64 %118, 1
  %120 = or i1 %117, %119
  %121 = zext i1 %120 to i64
  %122 = or i64 %116, %121
  %123 = fdiv float %108, %111
  %124 = tail call float @llvm.ceil.f32(float %123) #16
  %125 = fptoui float %124 to i64
  %126 = icmp ult i64 %122, %125
  %127 = select i1 %126, i64 %125, i64 %122
  invoke void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairImPN2v88internal6torque6SymbolEEENS_3setIPKNS5_4ItemENS_4lessISC_EENS_9allocatorISC_EEEEEENS_22__unordered_map_hasherIS8_SI_NS3_4base4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_SI_SO_SM_Lb1EEENSF_ISI_EEE6rehashEm(%"class.std::__1::__hash_table.92"* %0, i64 %127)
          to label %128 unwind label %139

128:                                              ; preds = %115
  %129 = load i64, i64* %15, align 8
  %130 = tail call i64 @llvm.ctpop.i64(i64 %129) #16, !range !112
  %131 = icmp ugt i64 %130, 1
  br i1 %131, label %135, label %132

132:                                              ; preds = %128
  %133 = add i64 %129, -1
  %134 = and i64 %133, %14
  br label %144

135:                                              ; preds = %128
  %136 = icmp ult i64 %14, %129
  br i1 %136, label %144, label %137

137:                                              ; preds = %135
  %138 = urem i64 %14, %129
  br label %144

139:                                              ; preds = %115
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = bitcast i8* %100 to %"class.std::__1::__tree.118"*
  %142 = bitcast i8* %99 to %"class.std::__1::__tree_node.163"**
  %143 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %142, align 8
  tail call void @_ZNSt3__16__treeIPKN2v88internal6torque4ItemENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.118"* %141, %"class.std::__1::__tree_node.163"* %143) #16
  tail call void @_ZdlPv(i8* nonnull %95) #17
  resume { i8*, i32 } %140

144:                                              ; preds = %137, %135, %132, %93
  %145 = phi i64 [ %94, %93 ], [ %134, %132 ], [ %138, %137 ], [ %14, %135 ]
  %146 = phi i64 [ %16, %93 ], [ %129, %132 ], [ %129, %137 ], [ %129, %135 ]
  %147 = getelementptr inbounds %"class.std::__1::__hash_table.92", %"class.std::__1::__hash_table.92"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %147, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %148, i64 %145
  %150 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.96"* %150, null
  br i1 %151, label %152, label %178

152:                                              ; preds = %144
  %153 = getelementptr inbounds %"class.std::__1::__hash_table.92", %"class.std::__1::__hash_table.92"* %0, i64 0, i32 1, i32 0, i32 0
  %154 = bitcast %"struct.std::__1::__hash_node_base.96"* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast i8* %95 to i64*
  store i64 %155, i64* %156, align 8
  %157 = bitcast %"struct.std::__1::__hash_node_base.96"* %153 to i8**
  store i8* %95, i8** %157, align 8
  store %"struct.std::__1::__hash_node_base.96"* %153, %"struct.std::__1::__hash_node_base.96"** %149, align 8
  %158 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %104, align 8
  %159 = icmp eq %"struct.std::__1::__hash_node_base.96"* %158, null
  br i1 %159, label %185, label %160

160:                                              ; preds = %152
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %158, i64 1
  %162 = bitcast %"struct.std::__1::__hash_node_base.96"* %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = tail call i64 @llvm.ctpop.i64(i64 %146) #16, !range !112
  %165 = icmp ugt i64 %164, 1
  br i1 %165, label %169, label %166

166:                                              ; preds = %160
  %167 = add i64 %146, -1
  %168 = and i64 %163, %167
  br label %173

169:                                              ; preds = %160
  %170 = icmp ult i64 %163, %146
  br i1 %170, label %173, label %171

171:                                              ; preds = %169
  %172 = urem i64 %163, %146
  br label %173

173:                                              ; preds = %166, %169, %171
  %174 = phi i64 [ %168, %166 ], [ %172, %171 ], [ %163, %169 ]
  %175 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %147, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %175, i64 %174
  %177 = bitcast %"struct.std::__1::__hash_node_base.96"** %176 to i8**
  br label %183

178:                                              ; preds = %144
  %179 = bitcast %"struct.std::__1::__hash_node_base.96"* %150 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast i8* %95 to i64*
  store i64 %180, i64* %181, align 8
  %182 = bitcast %"struct.std::__1::__hash_node_base.96"* %150 to i8**
  br label %183

183:                                              ; preds = %173, %178
  %184 = phi i8** [ %182, %178 ], [ %177, %173 ]
  store i8* %95, i8** %184, align 8
  br label %185

185:                                              ; preds = %183, %152
  %186 = bitcast i8* %95 to %"struct.std::__1::__hash_node_base.96"*
  %187 = load i64, i64* %105, align 8
  %188 = add i64 %187, 1
  store i64 %188, i64* %105, align 8
  br label %189

189:                                              ; preds = %84, %61, %185
  %190 = phi i8 [ 1, %185 ], [ 0, %61 ], [ 0, %84 ]
  %191 = phi %"struct.std::__1::__hash_node_base.96"* [ %186, %185 ], [ %44, %61 ], [ %71, %84 ]
  %192 = insertvalue { %"struct.std::__1::__hash_node_base.96"*, i8 } undef, %"struct.std::__1::__hash_node_base.96"* %191, 0
  %193 = insertvalue { %"struct.std::__1::__hash_node_base.96"*, i8 } %192, i8 %190, 1
  ret { %"struct.std::__1::__hash_node_base.96"*, i8 } %193
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairImPN2v88internal6torque6SymbolEEENS_3setIPKNS5_4ItemENS_4lessISC_EENS_9allocatorISC_EEEEEENS_22__unordered_map_hasherIS8_SI_NS3_4base4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_SI_SO_SM_Lb1EEENSF_ISI_EEE6rehashEm(%"class.std::__1::__hash_table.92"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !112
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1)
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.92", %"class.std::__1::__hash_table.92"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairImPN2v88internal6torque6SymbolEEENS_3setIPKNS5_4ItemENS_4lessISC_EENS_9allocatorISC_EEEEEENS_22__unordered_map_hasherIS8_SI_NS3_4base4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_SI_SO_SM_Lb1EEENSF_ISI_EEE8__rehashEm(%"class.std::__1::__hash_table.92"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !112
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.92", %"class.std::__1::__hash_table.92"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.92", %"class.std::__1::__hash_table.92"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !112
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29)
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairImPN2v88internal6torque6SymbolEEENS_3setIPKNS5_4ItemENS_4lessISC_EENS_9allocatorISC_EEEEEENS_22__unordered_map_hasherIS8_SI_NS3_4base4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_SI_SO_SM_Lb1EEENSF_ISI_EEE8__rehashEm(%"class.std::__1::__hash_table.92"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairImPN2v88internal6torque6SymbolEEENS_3setIPKNS5_4ItemENS_4lessISC_EENS_9allocatorISC_EEEEEENS_22__unordered_map_hasherIS8_SI_NS3_4base4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_SI_SO_SM_Lb1EEENSF_ISI_EEE8__rehashEm(%"class.std::__1::__hash_table.92"*, i64) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.92", %"class.std::__1::__hash_table.92"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %195, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.14, i64 0, i64 0)) #18
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #20
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.92", %"class.std::__1::__hash_table.92"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.92"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.96"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.96"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.98", %"class.std::__1::__bucket_list_deallocator.98"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.96"* null, %"struct.std::__1::__hash_node_base.96"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !120

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.92", %"class.std::__1::__hash_table.92"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.96"* %38, null
  br i1 %39, label %203, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.96"* null, %"struct.std::__1::__hash_node_base.96"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.96"* null, %"struct.std::__1::__hash_node_base.96"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.96"* null, %"struct.std::__1::__hash_node_base.96"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.96"* null, %"struct.std::__1::__hash_node_base.96"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.96"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !112
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.96"* %36, %"struct.std::__1::__hash_node_base.96"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.96"* %75, null
  br i1 %76, label %203, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %139

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.96"* [ %132, %128 ], [ %75, %77 ]
  %81 = phi i64 [ %130, %128 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.96"* [ %129, %128 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.96"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %128, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.96"* %95, null
  br i1 %96, label %127, label %134

97:                                               ; preds = %134, %108
  %98 = phi %"struct.std::__1::__hash_node_base.96"* [ %100, %108 ], [ %80, %134 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.96"* %100, null
  br i1 %101, label %114, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %100, i64 2
  %104 = load i64, i64* %138, align 8
  %105 = bitcast %"struct.std::__1::__hash_node_base.96"* %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %104, %106
  br i1 %107, label %108, label %114

108:                                              ; preds = %102
  %109 = load %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %137, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %100, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base.96"* %110 to %"class.v8::internal::torque::Symbol"**
  %112 = load %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %111, align 8
  %113 = icmp eq %"class.v8::internal::torque::Symbol"* %109, %112
  br i1 %113, label %97, label %114

114:                                              ; preds = %108, %102, %97
  %115 = ptrtoint %"struct.std::__1::__hash_node_base.96"* %100 to i64
  %116 = bitcast %"struct.std::__1::__hash_node_base.96"* %98 to i64*
  %117 = bitcast %"struct.std::__1::__hash_node_base.96"* %82 to i64*
  store i64 %115, i64* %117, align 8
  %118 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %11, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %118, i64 %90
  %120 = bitcast %"struct.std::__1::__hash_node_base.96"** %119 to i64**
  %121 = load i64*, i64** %120, align 8
  %122 = load i64, i64* %121, align 8
  store i64 %122, i64* %116, align 8
  %123 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %11, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %123, i64 %90
  %125 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %125, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.96"* %80, %"struct.std::__1::__hash_node_base.96"** %126, align 8
  br label %128

127:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.96"* %82, %"struct.std::__1::__hash_node_base.96"** %94, align 8
  br label %128

128:                                              ; preds = %127, %114, %89
  %129 = phi %"struct.std::__1::__hash_node_base.96"* [ %80, %127 ], [ %82, %114 ], [ %80, %89 ]
  %130 = phi i64 [ %90, %127 ], [ %81, %114 ], [ %81, %89 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.96"* %132, null
  br i1 %133, label %203, label %79

134:                                              ; preds = %92
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %80, i64 2
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %80, i64 3
  %137 = bitcast %"struct.std::__1::__hash_node_base.96"* %136 to %"class.v8::internal::torque::Symbol"**
  %138 = bitcast %"struct.std::__1::__hash_node_base.96"* %135 to i64*
  br label %97

139:                                              ; preds = %77, %189
  %140 = phi %"struct.std::__1::__hash_node_base.96"* [ %193, %189 ], [ %75, %77 ]
  %141 = phi i64 [ %191, %189 ], [ %71, %77 ]
  %142 = phi %"struct.std::__1::__hash_node_base.96"* [ %190, %189 ], [ %38, %77 ]
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %140, i64 1
  %144 = bitcast %"struct.std::__1::__hash_node_base.96"* %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = and i64 %145, %78
  %147 = icmp eq i64 %146, %141
  br i1 %147, label %189, label %148

148:                                              ; preds = %139
  %149 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %11, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %149, i64 %146
  %151 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %150, align 8
  %152 = icmp eq %"struct.std::__1::__hash_node_base.96"* %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %140, i64 2
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %140, i64 3
  %156 = bitcast %"struct.std::__1::__hash_node_base.96"* %155 to %"class.v8::internal::torque::Symbol"**
  %157 = bitcast %"struct.std::__1::__hash_node_base.96"* %154 to i64*
  br label %159

158:                                              ; preds = %148
  store %"struct.std::__1::__hash_node_base.96"* %142, %"struct.std::__1::__hash_node_base.96"** %150, align 8
  br label %189

159:                                              ; preds = %153, %170
  %160 = phi %"struct.std::__1::__hash_node_base.96"* [ %162, %170 ], [ %140, %153 ]
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %160, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %161, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node_base.96"* %162, null
  br i1 %163, label %176, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %162, i64 2
  %166 = load i64, i64* %157, align 8
  %167 = bitcast %"struct.std::__1::__hash_node_base.96"* %165 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = icmp eq i64 %166, %168
  br i1 %169, label %170, label %176

170:                                              ; preds = %164
  %171 = load %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %156, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %162, i64 3
  %173 = bitcast %"struct.std::__1::__hash_node_base.96"* %172 to %"class.v8::internal::torque::Symbol"**
  %174 = load %"class.v8::internal::torque::Symbol"*, %"class.v8::internal::torque::Symbol"** %173, align 8
  %175 = icmp eq %"class.v8::internal::torque::Symbol"* %171, %174
  br i1 %175, label %159, label %176

176:                                              ; preds = %164, %159, %170
  %177 = ptrtoint %"struct.std::__1::__hash_node_base.96"* %162 to i64
  %178 = bitcast %"struct.std::__1::__hash_node_base.96"* %160 to i64*
  %179 = bitcast %"struct.std::__1::__hash_node_base.96"* %142 to i64*
  store i64 %177, i64* %179, align 8
  %180 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %11, align 8
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %180, i64 %146
  %182 = bitcast %"struct.std::__1::__hash_node_base.96"** %181 to i64**
  %183 = load i64*, i64** %182, align 8
  %184 = load i64, i64* %183, align 8
  store i64 %184, i64* %178, align 8
  %185 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %11, align 8
  %186 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %185, i64 %146
  %187 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %186, align 8
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %187, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.96"* %140, %"struct.std::__1::__hash_node_base.96"** %188, align 8
  br label %189

189:                                              ; preds = %139, %176, %158
  %190 = phi %"struct.std::__1::__hash_node_base.96"* [ %140, %158 ], [ %142, %176 ], [ %140, %139 ]
  %191 = phi i64 [ %146, %158 ], [ %141, %176 ], [ %141, %139 ]
  %192 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %190, i64 0, i32 0
  %193 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %192, align 8
  %194 = icmp eq %"struct.std::__1::__hash_node_base.96"* %193, null
  br i1 %194, label %203, label %139

195:                                              ; preds = %2
  %196 = getelementptr inbounds %"class.std::__1::__hash_table.92", %"class.std::__1::__hash_table.92"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %196, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.96"** %197, null
  br i1 %198, label %201, label %199

199:                                              ; preds = %195
  %200 = bitcast %"struct.std::__1::__hash_node_base.96"** %197 to i8*
  tail call void @_ZdlPv(i8* %200) #17
  br label %201

201:                                              ; preds = %195, %199
  %202 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.98", %"class.std::__1::__bucket_list_deallocator.98"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %202, align 8
  br label %203

203:                                              ; preds = %189, %128, %70, %35, %201
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !6
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !6
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !6
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.v8::internal::torque::Item"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %1, i64 0, i32 2
  %5 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %1, i64 0, i32 3
  %6 = load i64, i64* %4, align 8
  %7 = load i64, i64* %5, align 8
  %8 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %6, i64 %7)
  %9 = load i64, i64* %3, align 8
  %10 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %9)
  %11 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %8, i64 %10)
  %12 = bitcast %"class.v8::internal::torque::Item"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %13)
  %15 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %11, i64 %14)
  %16 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %117, label %19

19:                                               ; preds = %2
  %20 = tail call i64 @llvm.ctpop.i64(i64 %17) #16, !range !112
  %21 = icmp ugt i64 %20, 1
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = add i64 %17, -1
  %24 = and i64 %23, %15
  br label %29

25:                                               ; preds = %19
  %26 = icmp ult i64 %15, %17
  br i1 %26, label %29, label %27

27:                                               ; preds = %25
  %28 = urem i64 %15, %17
  br label %29

29:                                               ; preds = %22, %25, %27
  %30 = phi i64 [ %24, %22 ], [ %28, %27 ], [ %15, %25 ]
  %31 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, i64 %30
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %35, label %117, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %117, label %40

40:                                               ; preds = %36
  %41 = add i64 %17, -1
  %42 = getelementptr inbounds %"class.v8::internal::torque::Item", %"class.v8::internal::torque::Item"* %1, i64 0, i32 0
  %43 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %42, align 8
  %44 = load i64, i64* %3, align 8
  %45 = load i64, i64* %4, align 8
  %46 = load i64, i64* %5, align 8
  br i1 %21, label %47, label %84

47:                                               ; preds = %40, %80
  %48 = phi %"struct.std::__1::__hash_node_base"* [ %82, %80 ], [ %38, %40 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %15
  br i1 %52, label %60, label %53

53:                                               ; preds = %47
  %54 = icmp ult i64 %51, %17
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %51, %17
  br label %57

57:                                               ; preds = %55, %53
  %58 = phi i64 [ %56, %55 ], [ %51, %53 ]
  %59 = icmp eq i64 %58, %30
  br i1 %59, label %80, label %117

60:                                               ; preds = %47
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to %"class.v8::internal::torque::Rule"**
  %63 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %62, align 8
  %64 = icmp eq %"class.v8::internal::torque::Rule"* %63, %43
  br i1 %64, label %65, label %80

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 3
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %44
  br i1 %69, label %70, label %80

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 4
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, %45
  br i1 %74, label %75, label %80

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 5
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, %46
  br i1 %79, label %117, label %80

80:                                               ; preds = %75, %70, %65, %60, %57
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base"* %82, null
  br i1 %83, label %117, label %47

84:                                               ; preds = %40, %113
  %85 = phi %"struct.std::__1::__hash_node_base"* [ %115, %113 ], [ %38, %40 ]
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %85, i64 1
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, %15
  br i1 %89, label %93, label %90

90:                                               ; preds = %84
  %91 = and i64 %88, %41
  %92 = icmp eq i64 %91, %30
  br i1 %92, label %113, label %117

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %85, i64 2
  %95 = bitcast %"struct.std::__1::__hash_node_base"* %94 to %"class.v8::internal::torque::Rule"**
  %96 = load %"class.v8::internal::torque::Rule"*, %"class.v8::internal::torque::Rule"** %95, align 8
  %97 = icmp eq %"class.v8::internal::torque::Rule"* %96, %43
  br i1 %97, label %98, label %113

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %85, i64 3
  %100 = bitcast %"struct.std::__1::__hash_node_base"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = icmp eq i64 %101, %44
  br i1 %102, label %103, label %113

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %85, i64 4
  %105 = bitcast %"struct.std::__1::__hash_node_base"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %106, %45
  br i1 %107, label %108, label %113

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %85, i64 5
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, %46
  br i1 %112, label %117, label %113

113:                                              ; preds = %93, %98, %103, %90, %108
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %85, i64 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %117, label %84

117:                                              ; preds = %108, %113, %90, %75, %80, %57, %36, %2, %29
  %118 = phi %"struct.std::__1::__hash_node_base"* [ null, %29 ], [ null, %2 ], [ null, %36 ], [ %48, %75 ], [ null, %80 ], [ null, %57 ], [ %85, %108 ], [ null, %113 ], [ null, %90 ]
  ret %"struct.std::__1::__hash_node_base"* %118
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline noreturn nounwind }
attributes #9 = { inlinehint noreturn ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn }
attributes #19 = { noreturn nounwind }
attributes #20 = { builtin }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK2v88internal6torque4Item15GetMatchedInputERKNS1_11LexerResultE: argument 0"}
!4 = distinct !{!4, !"_ZNK2v88internal6torque4Item15GetMatchedInputERKNS1_11LexerResultE"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK2v88internal6torque4Item15GetMatchedInputERKNS1_11LexerResultE: argument 0"}
!9 = distinct !{!9, !"_ZNK2v88internal6torque4Item15GetMatchedInputERKNS1_11LexerResultE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK2v88internal6torque12MatchedInput8ToStringEv: argument 0"}
!12 = distinct !{!12, !"_ZNK2v88internal6torque12MatchedInput8ToStringEv"}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.isvectorized", i32 1}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.unroll.disable"}
!22 = distinct !{!22, !19}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK2v88internal6torque4Item15GetMatchedInputERKNS1_11LexerResultE: argument 0"}
!25 = distinct !{!25, !"_ZNK2v88internal6torque4Item15GetMatchedInputERKNS1_11LexerResultE"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK2v88internal6torque12MatchedInput8ToStringEv: argument 0"}
!28 = distinct !{!28, !"_ZNK2v88internal6torque12MatchedInput8ToStringEv"}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !19}
!35 = distinct !{!35, !21}
!36 = distinct !{!36, !19}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK2v88internal6torque4Item15GetMatchedInputERKNS1_11LexerResultE: argument 0"}
!39 = distinct !{!39, !"_ZNK2v88internal6torque4Item15GetMatchedInputERKNS1_11LexerResultE"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK2v88internal6torque12MatchedInput8ToStringEv: argument 0"}
!42 = distinct !{!42, !"_ZNK2v88internal6torque12MatchedInput8ToStringEv"}
!43 = !{!44}
!44 = distinct !{!44, !45}
!45 = distinct !{!45, !"LVerDomain"}
!46 = !{!47}
!47 = distinct !{!47, !45}
!48 = distinct !{!48, !19}
!49 = distinct !{!49, !21}
!50 = distinct !{!50, !19}
!51 = !{!52, !54}
!52 = distinct !{!52, !53, !"_ZN2v88internal6torqueL7MessageIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS1_14MessageBuilderENS1_13TorqueMessage4KindEDpOT_: argument 0"}
!53 = distinct !{!53, !"_ZN2v88internal6torqueL7MessageIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS1_14MessageBuilderENS1_13TorqueMessage4KindEDpOT_"}
!54 = distinct !{!54, !55, !"_ZN2v88internal6torque5ErrorIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS1_14MessageBuilderEDpOT_: argument 0"}
!55 = distinct !{!55, !"_ZN2v88internal6torque5ErrorIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS1_14MessageBuilderEDpOT_"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN2v88internal6torque12_GLOBAL__N_120LineAndColumnTracker16ToSourcePositionEv: argument 0"}
!58 = distinct !{!58, !"_ZN2v88internal6torque12_GLOBAL__N_120LineAndColumnTracker16ToSourcePositionEv"}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !19}
!65 = distinct !{!65, !21}
!66 = distinct !{!66, !19}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!69 = distinct !{!69, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZN2v88internal6torque12_GLOBAL__N_120LineAndColumnTracker16ToSourcePositionEv: argument 0"}
!72 = distinct !{!72, !"_ZN2v88internal6torque12_GLOBAL__N_120LineAndColumnTracker16ToSourcePositionEv"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZN2v88internal6torque12_GLOBAL__N_120LineAndColumnTracker16ToSourcePositionEv: argument 0"}
!75 = distinct !{!75, !"_ZN2v88internal6torque12_GLOBAL__N_120LineAndColumnTracker16ToSourcePositionEv"}
!76 = !{!77}
!77 = distinct !{!77, !78}
!78 = distinct !{!78, !"LVerDomain"}
!79 = !{!80}
!80 = distinct !{!80, !78}
!81 = distinct !{!81, !19}
!82 = distinct !{!82, !21}
!83 = distinct !{!83, !19}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZNK2v88internal6torque4Item7AdvanceEmPKS2_: argument 0"}
!86 = distinct !{!86, !"_ZNK2v88internal6torque4Item7AdvanceEmPKS2_"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNK2v88internal6torque4Item7AdvanceEmPKS2_: argument 0"}
!89 = distinct !{!89, !"_ZNK2v88internal6torque4Item7AdvanceEmPKS2_"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZNSt3__16__treeIPKN2v88internal6torque4ItemENS_4lessIS6_EENS_9allocatorIS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS9_ISG_EEEEEEDpOT_: argument 0"}
!92 = distinct !{!92, !"_ZNSt3__16__treeIPKN2v88internal6torque4ItemENS_4lessIS6_EENS_9allocatorIS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS9_ISG_EEEEEEDpOT_"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZNK2v88internal6torque4Item7AdvanceEmPKS2_: argument 0"}
!95 = distinct !{!95, !"_ZNK2v88internal6torque4Item7AdvanceEmPKS2_"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZNK2v88internal6torque12MatchedInput8ToStringEv: argument 0"}
!98 = distinct !{!98, !"_ZNK2v88internal6torque12MatchedInput8ToStringEv"}
!99 = !{!100}
!100 = distinct !{!100, !101}
!101 = distinct !{!101, !"LVerDomain"}
!102 = !{!103}
!103 = distinct !{!103, !101}
!104 = distinct !{!104, !19}
!105 = distinct !{!105, !21}
!106 = distinct !{!106, !19}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!109 = distinct !{!109, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!110 = distinct !{!110, !21}
!111 = distinct !{!111, !21}
!112 = !{i64 0, i64 65}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINSA_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!115 = distinct !{!115, !"_ZNSt3__112__hash_tableIN2v88internal6torque4ItemENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINSA_ISJ_EEEEEEmOT_DpOT0_"}
!116 = distinct !{!116, !21}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairImPN2v88internal6torque6SymbolEEENS_3setIPKNS5_4ItemENS_4lessISC_EENS_9allocatorISC_EEEEEENS_22__unordered_map_hasherIS8_SI_NS3_4base4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_SI_SO_SM_Lb1EEENSF_ISI_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS8_EEENSY_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISI_PvEENS_22__hash_node_destructorINSF_IS15_EEEEEEmOT_DpOT0_: argument 0"}
!119 = distinct !{!119, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairImPN2v88internal6torque6SymbolEEENS_3setIPKNS5_4ItemENS_4lessISC_EENS_9allocatorISC_EEEEEENS_22__unordered_map_hasherIS8_SI_NS3_4base4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_SI_SO_SM_Lb1EEENSF_ISI_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS8_EEENSY_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISI_PvEENS_22__hash_node_destructorINSF_IS15_EEEEEEmOT_DpOT0_"}
!120 = distinct !{!120, !21}
