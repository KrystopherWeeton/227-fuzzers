; ModuleID = '../../net/disk_cache/blockfile/sparse_control.cc'
source_filename = "../../net/disk_cache/blockfile/sparse_control.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.disk_cache::SparseControl" = type { %"class.disk_cache::EntryImpl"*, %class.scoped_refptr.33, i32, i8, i8, i8, i8, i8, %"struct.disk_cache::SparseHeader", %"class.disk_cache::Bitmap", %"struct.disk_cache::SparseData", %"class.disk_cache::Bitmap", %"class.base::OnceCallback", %"class.std::__1::vector.36", i64, %class.scoped_refptr.43, i32, i32, i32, i32 }
%class.scoped_refptr.33 = type { %"class.disk_cache::EntryImpl"* }
%"struct.disk_cache::SparseHeader" = type { i64, i32, i32, i32, i32, [10 x i32] }
%"struct.disk_cache::SparseData" = type { %"struct.disk_cache::SparseHeader", [32 x i32] }
%"class.disk_cache::Bitmap" = type <{ i32*, i32, i32, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.35", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.35" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.base::OnceCallback"* }
%class.scoped_refptr.43 = type { %"class.net::DrainableIOBuffer"* }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr.45, i32, i32 }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.44", i8* }
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.45 = type { %"class.net::IOBuffer"* }
%"class.disk_cache::EntryImpl" = type { %"class.disk_cache::Entry", %"class.base::RefCounted", %"class.net::NetLogWithSource", %"class.disk_cache::StorageBlock", %"class.disk_cache::StorageBlock.14", %"class.base::WeakPtr", %"class.base::WeakPtr.22", [3 x %"class.std::__1::unique_ptr"], [4 x %class.scoped_refptr.26], %"class.std::__1::basic_string", [3 x i32], i8, i8, i8, %"class.std::__1::unique_ptr.27" }
%"class.disk_cache::Entry" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.3" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.disk_cache::StorageBlock" = type <{ %"class.disk_cache::FileBlock", %"struct.disk_cache::EntryStore"*, %"class.disk_cache::MappedFile"*, %"class.disk_cache::Addr", i8, i8, i8, i8 }>
%"class.disk_cache::FileBlock" = type { i32 (...)** }
%"struct.disk_cache::EntryStore" = type { i32, i32, i32, i32, i32, i32, i64, i32, i32, [4 x i32], [4 x i32], i32, [4 x i32], i32, [160 x i8] }
%"class.disk_cache::MappedFile" = type { %"class.disk_cache::File", i8, i8*, i64 }
%"class.disk_cache::File" = type { i32 (...)**, %"class.base::RefCounted.8", i8, i8, [2 x i8], %"class.base::File", %"class.base::File" }
%"class.base::RefCounted.8" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.disk_cache::Addr" = type { i32 }
%"class.disk_cache::StorageBlock.14" = type <{ %"class.disk_cache::FileBlock", %"struct.disk_cache::RankingsNode"*, %"class.disk_cache::MappedFile"*, %"class.disk_cache::Addr", i8, i8, i8, i8 }>
%"struct.disk_cache::RankingsNode" = type <{ i64, i64, i32, i32, i32, i32, i32 }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.17" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i8 }
%"class.base::WeakPtr.22" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.disk_cache::EntryImpl::UserBuffer"* }
%"class.disk_cache::EntryImpl::UserBuffer" = type opaque
%class.scoped_refptr.26 = type { %"class.disk_cache::File"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.disk_cache::SparseControl"* }
%"class.net::WrappedIOBuffer" = type { %"class.net::IOBuffer" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.135" }
%"union.absl::variant_internal::DestructibleUnionImpl.135" = type { %"union.absl::variant_internal::DestructibleUnionImpl.136" }
%"union.absl::variant_internal::DestructibleUnionImpl.136" = type { %"union.absl::variant_internal::DestructibleUnionImpl.137" }
%"union.absl::variant_internal::DestructibleUnionImpl.137" = type { %"union.absl::variant_internal::DestructibleUnionImpl.138" }
%"union.absl::variant_internal::DestructibleUnionImpl.138" = type { %"class.std::__1::basic_string" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback.112" = type { %"class.base::internal::CallbackBase" }
%"class.disk_cache::BackendImpl" = type { %"class.disk_cache::Backend.base", %class.scoped_refptr.53, %"class.disk_cache::InFlightBackendIO", %class.scoped_refptr.66, %"class.base::FilePath", %"struct.disk_cache::Index"*, %"class.disk_cache::BlockFiles", %"class.disk_cache::Rankings", i32, i32, %"class.disk_cache::Eviction", %"class.std::__1::unordered_map", i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.net::NetLog"*, %"class.disk_cache::Stats", %"class.std::__1::unique_ptr.104", %"class.base::WeakPtrFactory.111" }
%"class.disk_cache::Backend.base" = type <{ i32 (...)**, i32 }>
%class.scoped_refptr.53 = type { %"class.disk_cache::BackendCleanupTracker"* }
%"class.disk_cache::BackendCleanupTracker" = type opaque
%"class.disk_cache::InFlightBackendIO" = type { %"class.disk_cache::InFlightIO.base", %"class.disk_cache::BackendImpl"*, %class.scoped_refptr.64, %"class.base::WeakPtrFactory" }
%"class.disk_cache::InFlightIO.base" = type <{ i32 (...)**, %"class.std::__1::set", %class.scoped_refptr.62, i8 }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i64 }
%class.scoped_refptr.62 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.63" }>
%"class.base::RefCountedThreadSafe.63" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.64 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.65 }
%class.scoped_refptr.65 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.66 = type { %"class.disk_cache::MappedFile"* }
%"struct.disk_cache::Index" = type { %"struct.disk_cache::IndexHeader", [65536 x i32] }
%"struct.disk_cache::IndexHeader" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, [52 x i32], %"struct.disk_cache::LruData" }
%"struct.disk_cache::LruData" = type { [2 x i32], i32, [5 x i32], [5 x i32], [5 x i32], i32, i32, i32, [7 x i32] }
%"class.disk_cache::BlockFiles" = type { i8, i8*, %"class.base::FilePath", %"class.std::__1::vector.67", %"class.std::__1::unique_ptr.74" }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %class.scoped_refptr.66*, %class.scoped_refptr.66*, %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.scoped_refptr.66* }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.base::ThreadChecker"* }
%"class.base::ThreadChecker" = type { i8 }
%"class.disk_cache::Rankings" = type { i8, i8, [5 x %"class.disk_cache::Addr"], [5 x %"class.disk_cache::Addr"], %"class.disk_cache::BackendImpl"*, %"struct.disk_cache::LruData"*, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.80" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.disk_cache::Eviction" = type { %"class.disk_cache::BackendImpl"*, %"class.disk_cache::Rankings"*, %"struct.disk_cache::IndexHeader"*, i32, i32, i32, i8, i8, i8, i8, i8, i8, %"class.base::WeakPtrFactory.84" }
%"class.base::WeakPtrFactory.84" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.85", %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.100", [4 x i8] }>
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87", %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { float }
%"class.disk_cache::Stats" = type { %"class.disk_cache::Addr", [28 x i32], [22 x i64] }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.base::RepeatingTimer"* }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.62, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.107" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.107" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.111" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.63", [4 x i8] }>
%"class.(anonymous namespace)::ChildrenDeleter" = type { %"class.disk_cache::FileIOCallback", %"class.base::RefCounted.46", %"class.base::WeakPtr", %"class.std::__1::basic_string", %"class.disk_cache::Bitmap", i64, %"class.std::__1::unique_ptr.47" }
%"class.disk_cache::FileIOCallback" = type { i32 (...)** }
%"class.base::RefCounted.46" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::tuple.131" = type { %"struct.std::__1::__tuple_impl.132" }
%"struct.std::__1::__tuple_impl.132" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.133", %"class.std::__1::__tuple_leaf.126" }
%"class.std::__1::__tuple_leaf" = type { %class.scoped_refptr.115 }
%class.scoped_refptr.115 = type { %"class.(anonymous namespace)::ChildrenDeleter"* }
%"class.std::__1::__tuple_leaf.133" = type { %"class.disk_cache::Addr" }
%"class.std::__1::__tuple_leaf.126" = type { i32 }

$_ZNSt3__16vectorIN4base12OnceCallbackIFviEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN10disk_cache13SparseControlEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN10disk_cache13SparseControlEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [15 x i8] c"DeleteChildren\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"../../net/disk_cache/blockfile/sparse_control.cc\00", align 1
@_ZTVN12_GLOBAL__N_115ChildrenDeleterE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::ChildrenDeleter"*, i32)* @_ZN12_GLOBAL__N_115ChildrenDeleter16OnFileIOCompleteEi to i8*), i8* bitcast (void (%"class.(anonymous namespace)::ChildrenDeleter"*)* @_ZN12_GLOBAL__N_115ChildrenDeleterD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::ChildrenDeleter"*)* @_ZN12_GLOBAL__N_115ChildrenDeleterD0Ev to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [17 x i8] c"Range_%s:%lx:%lx\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@switch.table._ZN12_GLOBAL__N_115ChildrenDeleter8ReadDataEN10disk_cache4AddrEi = private unnamed_addr constant [8 x i32] [i32 0, i32 36, i32 256, i32 1024, i32 4096, i32 8, i32 104, i32 48], align 4
@switch.table._ZN10disk_cache13SparseControl18OnChildIOCompletedEi = private unnamed_addr constant [3 x i32] [i32 133, i32 134, i32 137], align 4

@_ZN10disk_cache13SparseControlC1EPNS_9EntryImplE = hidden unnamed_addr alias void (%"class.disk_cache::SparseControl"*, %"class.disk_cache::EntryImpl"*), void (%"class.disk_cache::SparseControl"*, %"class.disk_cache::EntryImpl"*)* @_ZN10disk_cache13SparseControlC2EPNS_9EntryImplE
@_ZN10disk_cache13SparseControlD1Ev = hidden unnamed_addr alias void (%"class.disk_cache::SparseControl"*), void (%"class.disk_cache::SparseControl"*)* @_ZN10disk_cache13SparseControlD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControlC2EPNS_9EntryImplE(%"class.disk_cache::SparseControl"*, %"class.disk_cache::EntryImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  store %"class.disk_cache::EntryImpl"* %1, %"class.disk_cache::EntryImpl"** %3, align 8
  %4 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9
  %6 = bitcast %"class.disk_cache::Bitmap"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 17, i1 false) #13
  %7 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 11
  %8 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10
  %9 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 1, i64 0
  %10 = bitcast %"class.disk_cache::EntryImpl"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 17, i1 false)
  tail call void @_ZN10disk_cache6BitmapC1EPjii(%"class.disk_cache::Bitmap"* %7, i32* %9, i32 1024, i32 32) #13
  %11 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 8
  %13 = bitcast %"struct.disk_cache::SparseHeader"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 64, i1 false)
  %14 = bitcast %"struct.disk_cache::SparseData"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 192, i1 false)
  %15 = bitcast %"class.base::internal::BindStateBase"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 64, i1 false)
  ret void
}

declare void @_ZN10disk_cache6BitmapC1EPjii(%"class.disk_cache::Bitmap"*, i32*, i32, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControlD2Ev(%"class.disk_cache::SparseControl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %3, align 8
  %5 = icmp eq %"class.disk_cache::EntryImpl"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN10disk_cache13SparseControl10CloseChildEv(%"class.disk_cache::SparseControl"* %0)
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 5
  %9 = load i8, i8* %8, align 2, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %42, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9
  %14 = bitcast %"class.disk_cache::Bitmap"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = tail call i8* @_Znwm(i64 24) #14
  %17 = bitcast i8* %16 to %"class.net::WrappedIOBuffer"*
  tail call void @_ZN3net15WrappedIOBufferC1EPKc(%"class.net::WrappedIOBuffer"* nonnull %17, i8* %15) #13
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to i32*
  %20 = atomicrmw add i32* %19, i32 1 monotonic
  %21 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = shl nsw i32 %22, 2
  %24 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %25 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %24, align 8
  %26 = bitcast i8* %16 to %"class.net::IOBuffer"*
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  %28 = bitcast %"class.disk_cache::EntryImpl"* %25 to i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)***
  %29 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)**, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)** %29, i64 7
  %31 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)** %30, align 8
  %32 = call i32 %31(%"class.disk_cache::EntryImpl"* %25, i32 2, i32 64, %"class.net::IOBuffer"* nonnull %26, i32 %23, %"class.base::OnceCallback"* nonnull %2, i1 zeroext false) #13
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #13
  %34 = atomicrmw sub i32* %19, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %41

36:                                               ; preds = %11
  %37 = bitcast i8* %16 to void (%"class.net::IOBuffer"*)***
  %38 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %38, i64 1
  %40 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %39, align 8
  call void %40(%"class.net::IOBuffer"* nonnull %26) #13
  br label %41

41:                                               ; preds = %11, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  br label %42

42:                                               ; preds = %7, %41
  %43 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 15, i32 0
  %44 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %43, align 8
  %45 = icmp eq %"class.net::DrainableIOBuffer"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %44, i64 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw sub i32* %48, i32 1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %58

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %47, i64 -2
  %53 = bitcast %"class.base::RefCountedThreadSafe.44"* %52 to %"class.net::IOBuffer"*
  %54 = bitcast %"class.base::RefCountedThreadSafe.44"* %52 to void (%"class.net::IOBuffer"*)***
  %55 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %55, i64 1
  %57 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %56, align 8
  call void %57(%"class.net::IOBuffer"* nonnull %53) #13
  br label %58

58:                                               ; preds = %42, %46, %51
  %59 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 13
  %60 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %60, align 8
  %62 = icmp eq %"class.base::OnceCallback"* %61, null
  br i1 %62, label %78, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.base::OnceCallback"* %61 to i8*
  %65 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 13, i32 0, i32 1
  %66 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %65, align 8
  %67 = icmp eq %"class.base::OnceCallback"* %66, %61
  br i1 %67, label %76, label %68

68:                                               ; preds = %63, %68
  %69 = phi %"class.base::OnceCallback"* [ %70, %68 ], [ %66, %63 ]
  %70 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %69, i64 -1
  %71 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %70, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %71) #13
  %72 = icmp eq %"class.base::OnceCallback"* %70, %61
  br i1 %72, label %73, label %68

73:                                               ; preds = %68
  %74 = bitcast %"class.std::__1::vector.36"* %59 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %73, %63
  %77 = phi i8* [ %75, %73 ], [ %64, %63 ]
  store %"class.base::OnceCallback"* %61, %"class.base::OnceCallback"** %65, align 8
  call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %58, %76
  %79 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 12, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %79) #13
  %80 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 11
  call void @_ZN10disk_cache6BitmapD1Ev(%"class.disk_cache::Bitmap"* %80) #13
  %81 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9
  call void @_ZN10disk_cache6BitmapD1Ev(%"class.disk_cache::Bitmap"* %81) #13
  %82 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %3, align 8
  %83 = icmp eq %"class.disk_cache::EntryImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %82, i64 0, i32 1
  %86 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %85, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %86) #13
  %87 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %85, i64 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %97

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %85, i64 -2
  %92 = bitcast %"class.base::RefCounted"* %91 to %"class.disk_cache::EntryImpl"*
  %93 = bitcast %"class.base::RefCounted"* %91 to void (%"class.disk_cache::EntryImpl"*)***
  %94 = load void (%"class.disk_cache::EntryImpl"*)**, void (%"class.disk_cache::EntryImpl"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %94, i64 16
  %96 = load void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %95, align 8
  call void %96(%"class.disk_cache::EntryImpl"* nonnull %92) #13
  br label %97

97:                                               ; preds = %78, %84, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControl10CloseChildEv(%"class.disk_cache::SparseControl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10
  %4 = bitcast %"struct.disk_cache::SparseData"* %3 to i8*
  %5 = tail call i8* @_Znwm(i64 24) #14
  %6 = bitcast i8* %5 to %"class.net::WrappedIOBuffer"*
  tail call void @_ZN3net15WrappedIOBufferC1EPKc(%"class.net::WrappedIOBuffer"* nonnull %6, i8* %4) #13
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  %10 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.scoped_refptr.33, %class.scoped_refptr.33* %10, i64 0, i32 0
  %12 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %11, align 8
  %13 = bitcast i8* %5 to %"class.net::IOBuffer"*
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %15 = bitcast %"class.disk_cache::EntryImpl"* %12 to i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)***
  %16 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)**, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)** %16, i64 7
  %18 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)** %17, align 8
  %19 = call i32 %18(%"class.disk_cache::EntryImpl"* %12, i32 2, i32 0, %"class.net::IOBuffer"* nonnull %13, i32 192, %"class.base::OnceCallback"* nonnull %2, i1 zeroext false) #13
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #13
  %21 = bitcast %class.scoped_refptr.33* %10 to i64*
  %22 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %11, align 8
  store i64 0, i64* %21, align 8
  %23 = icmp eq %"class.disk_cache::EntryImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %22, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #13
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 -2
  %32 = bitcast %"class.base::RefCounted"* %31 to %"class.disk_cache::EntryImpl"*
  %33 = bitcast %"class.base::RefCounted"* %31 to void (%"class.disk_cache::EntryImpl"*)***
  %34 = load void (%"class.disk_cache::EntryImpl"*)**, void (%"class.disk_cache::EntryImpl"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %34, i64 16
  %36 = load void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %35, align 8
  call void %36(%"class.disk_cache::EntryImpl"* nonnull %32) #13
  br label %37

37:                                               ; preds = %30, %24, %1
  %38 = atomicrmw sub i32* %8, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %45

40:                                               ; preds = %37
  %41 = bitcast i8* %5 to void (%"class.net::IOBuffer"*)***
  %42 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %42, i64 1
  %44 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %43, align 8
  call void %44(%"class.net::IOBuffer"* nonnull %13) #13
  br label %45

45:                                               ; preds = %37, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControl15WriteSparseDataEv(%"class.disk_cache::SparseControl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9
  %4 = bitcast %"class.disk_cache::Bitmap"* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = tail call i8* @_Znwm(i64 24) #14
  %7 = bitcast i8* %6 to %"class.net::WrappedIOBuffer"*
  tail call void @_ZN3net15WrappedIOBufferC1EPKc(%"class.net::WrappedIOBuffer"* nonnull %7, i8* %5) #13
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = shl nsw i32 %12, 2
  %14 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %15 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %14, align 8
  %16 = bitcast i8* %6 to %"class.net::IOBuffer"*
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  %18 = bitcast %"class.disk_cache::EntryImpl"* %15 to i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)***
  %19 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)**, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)** %19, i64 7
  %21 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)** %20, align 8
  %22 = call i32 %21(%"class.disk_cache::EntryImpl"* %15, i32 2, i32 64, %"class.net::IOBuffer"* nonnull %16, i32 %13, %"class.base::OnceCallback"* nonnull %2, i1 zeroext false) #13
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #13
  %24 = atomicrmw sub i32* %9, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %31

26:                                               ; preds = %1
  %27 = bitcast i8* %6 to void (%"class.net::IOBuffer"*)***
  %28 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %28, i64 1
  %30 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %29, align 8
  call void %30(%"class.net::IOBuffer"* nonnull %16) #13
  br label %31

31:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN10disk_cache6BitmapD1Ev(%"class.disk_cache::Bitmap"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache13SparseControl4InitEv(%"class.disk_cache::SparseControl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %3 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %2, align 8
  %4 = bitcast %"class.disk_cache::EntryImpl"* %3 to i32 (%"class.disk_cache::EntryImpl"*, i32)***
  %5 = load i32 (%"class.disk_cache::EntryImpl"*, i32)**, i32 (%"class.disk_cache::EntryImpl"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %5, i64 5
  %7 = load i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %6, align 8
  %8 = tail call i32 %7(%"class.disk_cache::EntryImpl"* %3, i32 1) #13
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %27

10:                                               ; preds = %1
  %11 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %2, align 8
  %12 = bitcast %"class.disk_cache::EntryImpl"* %11 to i32 (%"class.disk_cache::EntryImpl"*, i32)***
  %13 = load i32 (%"class.disk_cache::EntryImpl"*, i32)**, i32 (%"class.disk_cache::EntryImpl"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %13, i64 5
  %15 = load i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %14, align 8
  %16 = tail call i32 %15(%"class.disk_cache::EntryImpl"* %11, i32 2) #13
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  %19 = tail call i32 @_ZN10disk_cache13SparseControl17CreateSparseEntryEv(%"class.disk_cache::SparseControl"* %0)
  br label %22

20:                                               ; preds = %10
  %21 = tail call i32 @_ZN10disk_cache13SparseControl15OpenSparseEntryEi(%"class.disk_cache::SparseControl"* %0, i32 %16)
  br label %22

22:                                               ; preds = %20, %18
  %23 = phi i32 [ %21, %20 ], [ %19, %18 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 5
  store i8 1, i8* %26, align 2
  br label %27

27:                                               ; preds = %22, %25, %1
  %28 = phi i32 [ -403, %1 ], [ 0, %25 ], [ %23, %22 ]
  ret i32 %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache13SparseControl17CreateSparseEntryEv(%"class.disk_cache::SparseControl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %5 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %4, align 8
  %6 = tail call i32 @_ZN10disk_cache9EntryImpl13GetEntryFlagsEv(%"class.disk_cache::EntryImpl"* %5) #13
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %63

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 8
  %11 = bitcast %"struct.disk_cache::SparseHeader"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 64, i1 false)
  %12 = tail call i64 @_ZN4base4Time3NowEv() #13
  %13 = getelementptr inbounds %"struct.disk_cache::SparseHeader", %"struct.disk_cache::SparseHeader"* %10, i64 0, i32 0
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 8, i32 1
  store i32 -1056716093, i32* %14, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #13
  %16 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %4, align 8
  %17 = bitcast %"class.disk_cache::EntryImpl"* %16 to void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)***
  %18 = load void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)**, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)** %18, i64 2
  %20 = load void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)** %19, align 8
  call void %20(%"class.std::__1::basic_string"* nonnull sret %2, %"class.disk_cache::EntryImpl"* %16) #13
  %21 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %9
  %26 = zext i8 %23 to i32
  %27 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 8, i32 2
  store i32 %26, i32* %27, align 4
  br label %35

28:                                               ; preds = %9
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 8, i32 2
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %28, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #13
  %36 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9
  call void @_ZN10disk_cache6Bitmap6ResizeEib(%"class.disk_cache::Bitmap"* %36, i32 1024, i1 zeroext true) #13
  %37 = call i8* @_Znwm(i64 24) #14
  %38 = bitcast i8* %37 to %"class.net::WrappedIOBuffer"*
  call void @_ZN3net15WrappedIOBufferC1EPKc(%"class.net::WrappedIOBuffer"* nonnull %38, i8* %11) #13
  %39 = getelementptr inbounds i8, i8* %37, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  %42 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %4, align 8
  %43 = bitcast i8* %37 to %"class.net::IOBuffer"*
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %44, align 8
  %45 = bitcast %"class.disk_cache::EntryImpl"* %42 to i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)***
  %46 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)**, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*** %45, align 8
  %47 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)** %46, i64 7
  %48 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)** %47, align 8
  %49 = call i32 %48(%"class.disk_cache::EntryImpl"* %42, i32 2, i32 0, %"class.net::IOBuffer"* nonnull %43, i32 64, %"class.base::OnceCallback"* nonnull %3, i1 zeroext false) #13
  %50 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #13
  %51 = icmp eq i32 %49, 64
  br i1 %51, label %52, label %54

52:                                               ; preds = %35
  %53 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %4, align 8
  call void @_ZN10disk_cache9EntryImpl13SetEntryFlagsEj(%"class.disk_cache::EntryImpl"* %53, i32 1) #13
  br label %54

54:                                               ; preds = %52, %35
  %55 = phi i32 [ 0, %52 ], [ -403, %35 ]
  %56 = atomicrmw sub i32* %40, i32 1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = bitcast i8* %37 to void (%"class.net::IOBuffer"*)***
  %60 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %60, i64 1
  %62 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %61, align 8
  call void %62(%"class.net::IOBuffer"* nonnull %43) #13
  br label %63

63:                                               ; preds = %58, %54, %1
  %64 = phi i32 [ -403, %1 ], [ %55, %54 ], [ %55, %58 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache13SparseControl15OpenSparseEntryEi(%"class.disk_cache::SparseControl"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = icmp slt i32 %1, 192
  br i1 %6, label %116, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %9 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %8, align 8
  %10 = bitcast %"class.disk_cache::EntryImpl"* %9 to i32 (%"class.disk_cache::EntryImpl"*, i32)***
  %11 = load i32 (%"class.disk_cache::EntryImpl"*, i32)**, i32 (%"class.disk_cache::EntryImpl"*, i32)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %11, i64 5
  %13 = load i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %12, align 8
  %14 = tail call i32 %13(%"class.disk_cache::EntryImpl"* %9, i32 1) #13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %116

16:                                               ; preds = %7
  %17 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %8, align 8
  %18 = tail call i32 @_ZN10disk_cache9EntryImpl13GetEntryFlagsEv(%"class.disk_cache::EntryImpl"* %17) #13
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %116, label %21

21:                                               ; preds = %16
  %22 = add nsw i32 %1, -64
  %23 = icmp slt i32 %22, 8193
  %24 = and i32 %22, 3
  %25 = icmp eq i32 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %116

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 8
  %29 = bitcast %"struct.disk_cache::SparseHeader"* %28 to i8*
  %30 = tail call i8* @_Znwm(i64 24) #14
  %31 = bitcast i8* %30 to %"class.net::IOBuffer"*
  %32 = bitcast i8* %30 to %"class.net::WrappedIOBuffer"*
  tail call void @_ZN3net15WrappedIOBufferC1EPKc(%"class.net::WrappedIOBuffer"* nonnull %32, i8* %29) #13
  %33 = getelementptr inbounds i8, i8* %30, i64 8
  %34 = bitcast i8* %33 to i32*
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  %36 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %8, align 8
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %37, align 8
  %38 = bitcast %"class.disk_cache::EntryImpl"* %36 to i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %39 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %38, align 8
  %40 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %39, i64 6
  %41 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %40, align 8
  %42 = call i32 %41(%"class.disk_cache::EntryImpl"* %36, i32 2, i32 0, %"class.net::IOBuffer"* nonnull %31, i32 64, %"class.base::OnceCallback"* nonnull %3) #13
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #13
  %44 = icmp eq i32 %42, 64
  br i1 %44, label %45, label %102

45:                                               ; preds = %27
  %46 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 8, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, -1056716093
  br i1 %48, label %49, label %102

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 8, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #13
  %53 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %8, align 8
  %54 = bitcast %"class.disk_cache::EntryImpl"* %53 to void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)***
  %55 = load void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)**, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)** %55, i64 2
  %57 = load void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)** %56, align 8
  call void %57(%"class.std::__1::basic_string"* nonnull sret %4, %"class.disk_cache::EntryImpl"* %53) #13
  %58 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = zext i8 %60 to i64
  %65 = select i1 %61, i64 %63, i64 %64
  %66 = trunc i64 %65 to i32
  %67 = icmp eq i32 %51, %66
  br i1 %61, label %68, label %71

68:                                               ; preds = %49
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %70) #14
  br label %71

71:                                               ; preds = %68, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #13
  br i1 %67, label %72, label %102

72:                                               ; preds = %71
  %73 = call i8* @_Znwm(i64 24) #14
  %74 = bitcast i8* %73 to %"class.net::IOBuffer"*
  %75 = sext i32 %22 to i64
  call void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"* nonnull %74, i64 %75) #13
  %76 = getelementptr inbounds i8, i8* %73, i64 8
  %77 = bitcast i8* %76 to i32*
  %78 = atomicrmw add i32* %77, i32 1 monotonic
  %79 = atomicrmw sub i32* %34, i32 1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %86

81:                                               ; preds = %72
  %82 = bitcast i8* %30 to void (%"class.net::IOBuffer"*)***
  %83 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %83, i64 1
  %85 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %84, align 8
  call void %85(%"class.net::IOBuffer"* nonnull %31) #13
  br label %86

86:                                               ; preds = %72, %81
  %87 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %8, align 8
  %88 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %88, align 8
  %89 = bitcast %"class.disk_cache::EntryImpl"* %87 to i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %90 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %89, align 8
  %91 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %90, i64 6
  %92 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %91, align 8
  %93 = call i32 %92(%"class.disk_cache::EntryImpl"* %87, i32 2, i32 64, %"class.net::IOBuffer"* nonnull %74, i32 %22, %"class.base::OnceCallback"* nonnull %5) #13
  %94 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %94) #13
  %95 = icmp eq i32 %93, %22
  br i1 %95, label %96, label %102

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9
  %98 = shl nsw i32 %22, 3
  call void @_ZN10disk_cache6Bitmap6ResizeEib(%"class.disk_cache::Bitmap"* %97, i32 %98, i1 zeroext false) #13
  %99 = getelementptr inbounds i8, i8* %73, i64 16
  %100 = bitcast i8* %99 to i32**
  %101 = load i32*, i32** %100, align 8
  call void @_ZN10disk_cache6Bitmap6SetMapEPKji(%"class.disk_cache::Bitmap"* %97, i32* %101, i32 %22) #13
  br label %102

102:                                              ; preds = %96, %27, %86, %45, %71
  %103 = phi %"class.net::IOBuffer"* [ %31, %71 ], [ %74, %96 ], [ %74, %86 ], [ %31, %27 ], [ %31, %45 ]
  %104 = phi i32 [ -403, %71 ], [ 0, %96 ], [ -401, %86 ], [ -401, %27 ], [ -403, %45 ]
  %105 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %103, i64 0, i32 1
  %106 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = atomicrmw sub i32* %106, i32 1 acq_rel
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %116

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %105, i64 -2
  %111 = bitcast %"class.base::RefCountedThreadSafe.44"* %110 to %"class.net::IOBuffer"*
  %112 = bitcast %"class.base::RefCountedThreadSafe.44"* %110 to void (%"class.net::IOBuffer"*)***
  %113 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %113, i64 1
  %115 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %114, align 8
  call void %115(%"class.net::IOBuffer"* nonnull %111) #13
  br label %116

116:                                              ; preds = %21, %102, %109, %16, %7, %2
  %117 = phi i32 [ -403, %2 ], [ -403, %7 ], [ -403, %16 ], [ -403, %21 ], [ %104, %102 ], [ %104, %109 ]
  ret i32 %117
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10disk_cache13SparseControl13CouldBeSparseEv(%"class.disk_cache::SparseControl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %3 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %2, align 8
  %4 = bitcast %"class.disk_cache::EntryImpl"* %3 to i32 (%"class.disk_cache::EntryImpl"*, i32)***
  %5 = load i32 (%"class.disk_cache::EntryImpl"*, i32)**, i32 (%"class.disk_cache::EntryImpl"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %5, i64 5
  %7 = load i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %6, align 8
  %8 = tail call i32 %7(%"class.disk_cache::EntryImpl"* %3, i32 1) #13
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %1
  %11 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %2, align 8
  %12 = bitcast %"class.disk_cache::EntryImpl"* %11 to i32 (%"class.disk_cache::EntryImpl"*, i32)***
  %13 = load i32 (%"class.disk_cache::EntryImpl"*, i32)**, i32 (%"class.disk_cache::EntryImpl"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %13, i64 5
  %15 = load i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %14, align 8
  %16 = tail call i32 %15(%"class.disk_cache::EntryImpl"* %11, i32 2) #13
  %17 = icmp ne i32 %16, 0
  br label %18

18:                                               ; preds = %1, %10
  %19 = phi i1 [ %17, %10 ], [ false, %1 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache13SparseControl7StartIOENS0_15SparseOperationElPN3net8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.disk_cache::SparseControl"*, i32, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %120

10:                                               ; preds = %6
  %11 = icmp slt i64 %2, 0
  %12 = icmp slt i32 %4, 0
  %13 = or i1 %11, %12
  br i1 %13, label %120, label %14

14:                                               ; preds = %10
  %15 = sext i32 %4 to i64
  %16 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %2, i64 %15) #13
  %17 = extractvalue { i64, i1 } %16, 1
  %18 = extractvalue { i64, i1 } %16, 0
  br i1 %17, label %19, label %21, !prof !3

19:                                               ; preds = %14
  %20 = icmp eq i32 %1, 2
  br i1 %20, label %120, label %21

21:                                               ; preds = %14, %19
  %22 = phi i64 [ 9223372036854775807, %19 ], [ %18, %14 ]
  %23 = icmp sgt i64 %2, 68719476735
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = icmp eq i32 %1, 3
  %26 = select i1 %25, i32 0, i32 -403
  br label %120

27:                                               ; preds = %21
  %28 = icmp sgt i64 %22, 68719476736
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = icmp eq i32 %1, 2
  br i1 %30, label %120, label %31

31:                                               ; preds = %29, %27
  %32 = phi i64 [ %22, %27 ], [ 68719476736, %29 ]
  %33 = sub nsw i64 %32, %2
  %34 = trunc i64 %33 to i32
  %35 = icmp eq %"class.net::IOBuffer"* %3, null
  %36 = add i32 %1, -1
  %37 = icmp ult i32 %36, 2
  %38 = and i1 %37, %35
  br i1 %38, label %120, label %39

39:                                               ; preds = %31
  store i32 %1, i32* %7, align 8
  %40 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 14
  store i64 %2, i64* %40, align 8
  br i1 %35, label %50, label %41

41:                                               ; preds = %39
  %42 = tail call i8* @_Znwm(i64 40) #14
  %43 = bitcast i8* %42 to %"class.net::DrainableIOBuffer"*
  %44 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 1 monotonic
  tail call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %43, %"class.net::IOBuffer"* nonnull %3, i32 %34) #13
  %46 = getelementptr inbounds i8, i8* %42, i64 8
  %47 = bitcast i8* %46 to i32*
  %48 = atomicrmw add i32* %47, i32 1 monotonic
  %49 = ptrtoint i8* %42 to i64
  br label %50

50:                                               ; preds = %39, %41
  %51 = phi i64 [ %49, %41 ], [ 0, %39 ]
  %52 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 15
  %53 = bitcast %class.scoped_refptr.43* %52 to i64*
  %54 = getelementptr inbounds %class.scoped_refptr.43, %class.scoped_refptr.43* %52, i64 0, i32 0
  %55 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %54, align 8
  store i64 %51, i64* %53, align 8
  %56 = icmp eq %"class.net::DrainableIOBuffer"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %55, i64 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw sub i32* %59, i32 1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %69

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %58, i64 -2
  %64 = bitcast %"class.base::RefCountedThreadSafe.44"* %63 to %"class.net::IOBuffer"*
  %65 = bitcast %"class.base::RefCountedThreadSafe.44"* %63 to void (%"class.net::IOBuffer"*)***
  %66 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %66, i64 1
  %68 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %67, align 8
  tail call void %68(%"class.net::IOBuffer"* nonnull %64) #13
  br label %69

69:                                               ; preds = %50, %57, %62
  %70 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 16
  store i32 %34, i32* %70, align 8
  %71 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 12, i32 0
  %72 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %73 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %71, %"class.base::internal::CallbackBase"* dereferenceable(8) %72) #13
  %74 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 19
  store i32 0, i32* %74, align 4
  %75 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 3
  store i8 0, i8* %75, align 4
  %76 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 4
  store i8 0, i8* %76, align 1
  %77 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 7
  store i8 0, i8* %77, align 8
  %78 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %79 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %78, align 8
  %80 = tail call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %79) #13
  %81 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %80, i64 0, i32 1
  %82 = load %"class.net::NetLog"*, %"class.net::NetLog"** %81, align 8
  %83 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %82, i64 0, i32 3
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %100, label %86

86:                                               ; preds = %69
  %87 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %78, align 8
  %88 = tail call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %87) #13
  %89 = load i32, i32* %7, align 8
  %90 = add i32 %89, -1
  %91 = icmp ult i32 %90, 3
  br i1 %91, label %92, label %96

92:                                               ; preds = %86
  %93 = sext i32 %90 to i64
  %94 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN10disk_cache13SparseControl18OnChildIOCompletedEi, i64 0, i64 %93
  %95 = load i32, i32* %94, align 4
  br label %96

96:                                               ; preds = %86, %92
  %97 = phi i32 [ %95, %92 ], [ 0, %86 ]
  %98 = load i64, i64* %40, align 8
  %99 = load i32, i32* %70, align 8
  tail call void @_ZN10disk_cache21NetLogSparseOperationERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEli(%"class.net::NetLogWithSource"* dereferenceable(24) %88, i32 %97, i32 1, i64 %98, i32 %99) #13
  br label %100

100:                                              ; preds = %69, %96
  tail call void @_ZN10disk_cache13SparseControl12DoChildrenIOEv(%"class.disk_cache::SparseControl"* %0)
  %101 = load i8, i8* %75, align 4, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %120

103:                                              ; preds = %100
  store i32 0, i32* %7, align 8
  %104 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %54, align 8
  store i64 0, i64* %53, align 8
  %105 = icmp eq %"class.net::DrainableIOBuffer"* %104, null
  br i1 %105, label %118, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %104, i64 0, i32 0, i32 1
  %108 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw sub i32* %108, i32 1 acq_rel
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %118

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %107, i64 -2
  %113 = bitcast %"class.base::RefCountedThreadSafe.44"* %112 to %"class.net::IOBuffer"*
  %114 = bitcast %"class.base::RefCountedThreadSafe.44"* %112 to void (%"class.net::IOBuffer"*)***
  %115 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %115, i64 1
  %117 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %116, align 8
  tail call void %117(%"class.net::IOBuffer"* nonnull %113) #13
  br label %118

118:                                              ; preds = %103, %106, %111
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %71) #13
  %119 = load i32, i32* %74, align 4
  br label %120

120:                                              ; preds = %118, %19, %24, %29, %31, %100, %10, %6
  %121 = phi i32 [ -403, %6 ], [ -4, %10 ], [ %119, %118 ], [ -4, %19 ], [ %26, %24 ], [ -403, %29 ], [ 0, %31 ], [ -1, %100 ]
  ret i32 %121
}

declare dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"*) local_unnamed_addr #1

declare void @_ZN10disk_cache21NetLogSparseOperationERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEli(%"class.net::NetLogWithSource"* dereferenceable(24), i32, i32, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControl12DoChildrenIOEv(%"class.disk_cache::SparseControl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Value", align 8
  br label %3

3:                                                ; preds = %3, %1
  %4 = tail call zeroext i1 @_ZN10disk_cache13SparseControl9DoChildIOEv(%"class.disk_cache::SparseControl"* %0)
  br i1 %4, label %3, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %11 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %10, align 8
  %12 = tail call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %11) #13
  %13 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %12, i64 0, i32 1
  %14 = load %"class.net::NetLog"*, %"class.net::NetLog"** %13, align 8
  %15 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %14, i64 0, i32 3
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %33, label %18

18:                                               ; preds = %9
  %19 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %10, align 8
  %20 = tail call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %19) #13
  %21 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %20, i64 0, i32 1
  %22 = load %"class.net::NetLog"*, %"class.net::NetLog"** %21, align 8
  %23 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %22, i64 0, i32 3
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26, !prof !4

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %20, i64 0, i32 0
  %28 = bitcast %"class.base::Value"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 14
  %30 = load i64, i64* %29, align 8, !noalias !5
  %31 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 19
  %32 = load i32, i32* %31, align 4, !noalias !5
  call void @_ZN10disk_cache41CreateNetLogGetAvailableRangeResultParamsEli(%"class.base::Value"* nonnull sret %2, i64 %30, i32 %32) #13
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %22, i32 137, %"struct.net::NetLogSource"* dereferenceable(16) %27, i32 2, %"class.base::Value"* nonnull dereferenceable(32) %2) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #13
  br label %33

33:                                               ; preds = %9, %26, %18, %5
  %34 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 4
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %66, label %37

37:                                               ; preds = %33
  %38 = load i32, i32* %6, align 8
  %39 = icmp eq i32 %38, 3
  br i1 %39, label %61, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %42 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %41, align 8
  %43 = call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %42) #13
  %44 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %43, i64 0, i32 1
  %45 = load %"class.net::NetLog"*, %"class.net::NetLog"** %44, align 8
  %46 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %45, i64 0, i32 3
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %61, label %49

49:                                               ; preds = %40
  %50 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %41, align 8
  %51 = call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %50) #13
  %52 = load i32, i32* %6, align 8
  %53 = add i32 %52, -1
  %54 = icmp ult i32 %53, 3
  br i1 %54, label %55, label %59

55:                                               ; preds = %49
  %56 = sext i32 %53 to i64
  %57 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN10disk_cache13SparseControl18OnChildIOCompletedEi, i64 0, i64 %56
  %58 = load i32, i32* %57, align 4
  br label %59

59:                                               ; preds = %49, %55
  %60 = phi i32 [ %58, %55 ], [ 0, %49 ]
  call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %51, i32 %60) #13
  br label %61

61:                                               ; preds = %40, %37, %59
  %62 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 3
  %63 = load i8, i8* %62, align 4, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  call void @_ZN10disk_cache13SparseControl14DoUserCallbackEv(%"class.disk_cache::SparseControl"* %0)
  br label %66

66:                                               ; preds = %61, %33, %65
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache13SparseControl17GetAvailableRangeEliPl(%"class.disk_cache::SparseControl"*, i64, i32, i64* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %22

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 6
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %12 = call i32 @_ZN10disk_cache13SparseControl7StartIOENS0_15SparseOperationElPN3net8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.disk_cache::SparseControl"* %0, i32 3, i64 %1, %"class.net::IOBuffer"* null, i32 %2, %"class.base::OnceCallback"* nonnull %5)
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #13
  %14 = load i8, i8* %10, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 14
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %3, align 8
  br label %22

19:                                               ; preds = %9
  store i64 %1, i64* %3, align 8
  %20 = icmp slt i32 %12, 0
  %21 = select i1 %20, i32 %12, i32 0
  br label %22

22:                                               ; preds = %16, %19, %4
  %23 = phi i32 [ -403, %4 ], [ %12, %16 ], [ %21, %19 ]
  ret i32 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControl8CancelIOEv(%"class.disk_cache::SparseControl"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 7
  store i8 1, i8* %6, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache13SparseControl10ReadyToUseEN4base12OnceCallbackIFviEEE(%"class.disk_cache::SparseControl"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 7
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.disk_cache::SparseControl"* %0 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %10) #13
  %11 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 13, i32 0, i32 1
  %12 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %11, align 8
  %13 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %14 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %13, align 8
  %15 = icmp ult %"class.base::OnceCallback"* %12, %14
  br i1 %15, label %16, label %24

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::OnceCallback"* %12 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 1
  %22 = ptrtoint %"class.base::OnceCallback"* %21 to i64
  %23 = bitcast %"class.base::OnceCallback"** %11 to i64*
  store i64 %22, i64* %23, align 8
  br label %26

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 13
  tail call void @_ZNSt3__16vectorIN4base12OnceCallbackIFviEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.36"* %25, %"class.base::OnceCallback"* dereferenceable(8) %1) #13
  br label %26

26:                                               ; preds = %24, %16, %2
  %27 = phi i32 [ 0, %2 ], [ -1, %16 ], [ -1, %24 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControl14DeleteChildrenEPNS_9EntryImplE(%"class.disk_cache::EntryImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca %"class.disk_cache::Addr", align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback.112", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback.112", align 8
  %9 = bitcast %"class.disk_cache::EntryImpl"* %0 to i32 (%"class.disk_cache::EntryImpl"*, i32)***
  %10 = load i32 (%"class.disk_cache::EntryImpl"*, i32)**, i32 (%"class.disk_cache::EntryImpl"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %10, i64 5
  %12 = load i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %11, align 8
  %13 = tail call i32 %12(%"class.disk_cache::EntryImpl"* %0, i32 2) #13
  %14 = icmp slt i32 %13, 192
  br i1 %14, label %121, label %15

15:                                               ; preds = %1
  %16 = load i32 (%"class.disk_cache::EntryImpl"*, i32)**, i32 (%"class.disk_cache::EntryImpl"*, i32)*** %9, align 8
  %17 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %16, i64 5
  %18 = load i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %17, align 8
  %19 = tail call i32 %18(%"class.disk_cache::EntryImpl"* %0, i32 1) #13
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %121

21:                                               ; preds = %15
  %22 = add nsw i32 %13, -64
  %23 = icmp slt i32 %22, 8193
  %24 = and i32 %22, 3
  %25 = icmp eq i32 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %121

27:                                               ; preds = %21
  %28 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %29 = bitcast %"class.disk_cache::Addr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.disk_cache::Addr", %"class.disk_cache::Addr"* %3, i64 0, i32 0
  store i32 0, i32* %30, align 4
  call void @_ZN10disk_cache9EntryImpl7GetDataEiPPcPNS_4AddrE(%"class.disk_cache::EntryImpl"* %0, i32 2, i8** nonnull %2, %"class.disk_cache::Addr"* nonnull %3) #13
  %31 = load i8*, i8** %2, align 8
  %32 = icmp ne i8* %31, null
  %33 = load i32, i32* %30, align 4
  %34 = icmp slt i32 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %120

36:                                               ; preds = %27
  %37 = call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %0) #13
  call void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %37, i32 138) #13
  %38 = call i8* @_Znwm(i64 96) #14
  %39 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %0, i64 0, i32 5, i32 0, i32 0
  %40 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %39) #13
  br i1 %40, label %41, label %45

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %0, i64 0, i32 5, i32 0, i32 1
  %43 = bitcast i64* %42 to %"class.disk_cache::BackendImpl"**
  %44 = load %"class.disk_cache::BackendImpl"*, %"class.disk_cache::BackendImpl"** %43, align 8
  br label %45

45:                                               ; preds = %36, %41
  %46 = phi %"class.disk_cache::BackendImpl"* [ %44, %41 ], [ null, %36 ]
  %47 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #13
  %48 = bitcast %"class.disk_cache::EntryImpl"* %0 to void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)***
  %49 = load void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)**, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)** %49, i64 2
  %51 = load void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)** %50, align 8
  call void %51(%"class.std::__1::basic_string"* nonnull sret %4, %"class.disk_cache::EntryImpl"* %0) #13
  %52 = getelementptr inbounds i8, i8* %38, i64 8
  %53 = bitcast i8* %52 to i32*
  store i32 0, i32* %53, align 4
  %54 = bitcast i8* %38 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_115ChildrenDeleterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds i8, i8* %38, i64 16
  %56 = bitcast i8* %55 to %"class.base::WeakPtr"*
  call void @_ZN10disk_cache11BackendImpl10GetWeakPtrEv(%"class.base::WeakPtr"* sret %56, %"class.disk_cache::BackendImpl"* %46) #13
  %57 = getelementptr inbounds i8, i8* %38, i64 32
  %58 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %47, i64 24, i1 false) #13
  br label %70

63:                                               ; preds = %45
  %64 = bitcast i8* %57 to %"class.std::__1::basic_string"*
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %64, i8* %66, i64 %68) #13
  %69 = load i8, i8* %59, align 1
  br label %70

70:                                               ; preds = %62, %63
  %71 = phi i8 [ %60, %62 ], [ %69, %63 ]
  %72 = getelementptr inbounds i8, i8* %38, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 17, i1 false) #13
  %73 = getelementptr inbounds i8, i8* %38, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #13
  %74 = icmp slt i8 %71, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #13
  %79 = bitcast i8* %52 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %79) #13
  %80 = load i8*, i8** %2, align 8
  %81 = icmp eq i8* %80, null
  %82 = call dereferenceable(8) %class.scoped_refptr.64* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #13
  %83 = bitcast %class.scoped_refptr.64* %82 to %"class.base::TaskRunner"**
  %84 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %83, align 8
  br i1 %81, label %101, label %85

85:                                               ; preds = %78
  %86 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 406) #13
  %87 = call i8* @_Znwm(i64 72) #14, !noalias !8
  %88 = bitcast i8* %87 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %88, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_115ChildrenDeleterEFvPciEJ13scoped_refptrIS4_ES5_iEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_115ChildrenDeleterEFvPciEJ13scoped_refptrIS3_ES4_iEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !8
  %89 = getelementptr inbounds i8, i8* %87, i64 32
  %90 = bitcast i8* %89 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::ChildrenDeleter"*, i8*, i32)* @_ZN12_GLOBAL__N_115ChildrenDeleter5StartEPci to i64), i64 0>, <2 x i64>* %90, align 8, !noalias !8
  %91 = getelementptr inbounds i8, i8* %87, i64 48
  %92 = bitcast i8* %91 to i8**
  store i8* %38, i8** %92, align 8, !noalias !8
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %79) #13, !noalias !8
  %93 = getelementptr inbounds i8, i8* %87, i64 56
  %94 = bitcast i8** %2 to i64*
  %95 = load i64, i64* %94, align 8, !noalias !8
  %96 = bitcast i8* %93 to i64*
  store i64 %95, i64* %96, align 8, !noalias !8
  %97 = getelementptr inbounds i8, i8* %87, i64 64
  %98 = bitcast i8* %97 to i32*
  store i32 %13, i32* %98, align 4, !noalias !8
  %99 = bitcast %"class.base::OnceCallback.112"* %6 to i8**
  store i8* %87, i8** %99, align 8, !alias.scope !8
  %100 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %84, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback.112"* nonnull %6) #13
  br label %116

101:                                              ; preds = %78
  %102 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 410) #13
  %103 = call i8* @_Znwm(i64 64) #14, !noalias !13
  %104 = bitcast i8* %103 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %104, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_115ChildrenDeleterEFvN10disk_cache4AddrEiEJ13scoped_refptrIS4_ES6_iEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_115ChildrenDeleterEFvN10disk_cache4AddrEiEJ13scoped_refptrIS3_ES5_iEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !13
  %105 = getelementptr inbounds i8, i8* %103, i64 32
  %106 = bitcast i8* %105 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::ChildrenDeleter"*, i32, i32)* @_ZN12_GLOBAL__N_115ChildrenDeleter8ReadDataEN10disk_cache4AddrEi to i64), i64 0>, <2 x i64>* %106, align 8, !noalias !13
  %107 = getelementptr inbounds i8, i8* %103, i64 48
  %108 = bitcast i8* %107 to i8**
  store i8* %38, i8** %108, align 8, !noalias !13
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %79) #13, !noalias !13
  %109 = getelementptr inbounds i8, i8* %103, i64 56
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %30, align 4, !noalias !13
  store i32 %111, i32* %110, align 4, !noalias !13
  %112 = getelementptr inbounds i8, i8* %103, i64 60
  %113 = bitcast i8* %112 to i32*
  store i32 %13, i32* %113, align 4, !noalias !13
  %114 = bitcast %"class.base::OnceCallback.112"* %8 to i8**
  store i8* %103, i8** %114, align 8, !alias.scope !13
  %115 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %84, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback.112"* nonnull %8) #13
  br label %116

116:                                              ; preds = %101, %85
  %117 = phi %"class.base::OnceCallback.112"* [ %6, %85 ], [ %8, %101 ]
  %118 = phi i8* [ %86, %85 ], [ %102, %101 ]
  %119 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %117, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %119) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #13
  br label %120

120:                                              ; preds = %116, %27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %121

121:                                              ; preds = %120, %21, %1, %15
  ret void
}

declare void @_ZN10disk_cache9EntryImpl7GetDataEiPPcPNS_4AddrE(%"class.disk_cache::EntryImpl"*, i32, i8**, %"class.disk_cache::Addr"*) local_unnamed_addr #1

declare void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare dereferenceable(8) %class.scoped_refptr.64* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.112"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115ChildrenDeleter5StartEPci(%"class.(anonymous namespace)::ChildrenDeleter"*, i8*, i32) #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  store i8* %1, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZdaPv(i8* nonnull %5) #14
  br label %8

8:                                                ; preds = %3, %7
  %9 = icmp slt i32 %2, 192
  br i1 %9, label %10, label %23

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %11, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #13
  %13 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %11, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %37

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %11, i64 -2
  %18 = bitcast %"class.base::RefCounted.46"* %17 to %"class.(anonymous namespace)::ChildrenDeleter"*
  %19 = bitcast %"class.base::RefCounted.46"* %17 to void (%"class.(anonymous namespace)::ChildrenDeleter"*)***
  %20 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)**, void (%"class.(anonymous namespace)::ChildrenDeleter"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %20, i64 2
  %22 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %21, align 8
  tail call void %22(%"class.(anonymous namespace)::ChildrenDeleter"* nonnull %18) #13
  br label %37

23:                                               ; preds = %8
  %24 = bitcast i8* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 5
  store i64 %25, i64* %26, align 8
  %27 = shl i32 %2, 3
  %28 = add i32 %27, -512
  %29 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 4
  tail call void @_ZN10disk_cache6Bitmap6ResizeEib(%"class.disk_cache::Bitmap"* %29, i32 %28, i1 zeroext false) #13
  %30 = getelementptr inbounds i8, i8* %1, i64 64
  %31 = bitcast i8* %30 to i32*
  %32 = sdiv i32 %28, 32
  tail call void @_ZN10disk_cache6Bitmap6SetMapEPKji(%"class.disk_cache::Bitmap"* %29, i32* %31, i32 %32) #13
  %33 = load i8*, i8** %4, align 8
  store i8* null, i8** %4, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %23
  tail call void @_ZdaPv(i8* nonnull %33) #14
  br label %36

36:                                               ; preds = %23, %35
  tail call void @_ZN12_GLOBAL__N_115ChildrenDeleter14DeleteChildrenEv(%"class.(anonymous namespace)::ChildrenDeleter"* %0)
  br label %37

37:                                               ; preds = %16, %10, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115ChildrenDeleter8ReadDataEN10disk_cache4AddrEi(%"class.(anonymous namespace)::ChildrenDeleter"*, i32, i32) #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.disk_cache::Addr", align 4
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.disk_cache::Addr", %"class.disk_cache::Addr"* %5, i64 0, i32 0
  store i32 %1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #13
  br i1 %9, label %10, label %15

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast i64* %11 to %"class.disk_cache::BackendImpl"**
  %13 = load %"class.disk_cache::BackendImpl"*, %"class.disk_cache::BackendImpl"** %12, align 8
  %14 = icmp eq %"class.disk_cache::BackendImpl"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %3, %10
  %16 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %16, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #13
  %18 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %99

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %16, i64 -2
  %23 = bitcast %"class.base::RefCounted.46"* %22 to %"class.(anonymous namespace)::ChildrenDeleter"*
  %24 = bitcast %"class.base::RefCounted.46"* %22 to void (%"class.(anonymous namespace)::ChildrenDeleter"*)***
  %25 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)**, void (%"class.(anonymous namespace)::ChildrenDeleter"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %25, i64 2
  %27 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %26, align 8
  tail call void %27(%"class.(anonymous namespace)::ChildrenDeleter"* nonnull %23) #13
  br label %99

28:                                               ; preds = %10
  %29 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #13
  br i1 %29, label %33, label %30

30:                                               ; preds = %28
  %31 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %33

33:                                               ; preds = %30, %28
  %34 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #13
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = load %"class.disk_cache::BackendImpl"*, %"class.disk_cache::BackendImpl"** %12, align 8
  br label %37

37:                                               ; preds = %33, %35
  %38 = phi %"class.disk_cache::BackendImpl"* [ %36, %35 ], [ null, %33 ]
  %39 = load i32, i32* %7, align 4
  %40 = call %"class.disk_cache::MappedFile"* @_ZN10disk_cache11BackendImpl4FileENS_4AddrE(%"class.disk_cache::BackendImpl"* %38, i32 %39) #13
  %41 = icmp eq %"class.disk_cache::MappedFile"* %40, null
  br i1 %41, label %42, label %55

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %43, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #13
  %45 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %99

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted.46"* %49 to %"class.(anonymous namespace)::ChildrenDeleter"*
  %51 = bitcast %"class.base::RefCounted.46"* %49 to void (%"class.(anonymous namespace)::ChildrenDeleter"*)***
  %52 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)**, void (%"class.(anonymous namespace)::ChildrenDeleter"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %52, i64 2
  %54 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %53, align 8
  call void %54(%"class.(anonymous namespace)::ChildrenDeleter"* nonnull %50) #13
  br label %99

55:                                               ; preds = %37
  %56 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %40, i64 0, i32 0
  %57 = call i32 @_ZNK10disk_cache4Addr11start_blockEv(%"class.disk_cache::Addr"* nonnull %5) #13
  %58 = load i32, i32* %7, align 4
  %59 = lshr i32 %58, 28
  %60 = and i32 %59, 7
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN12_GLOBAL__N_115ChildrenDeleter8ReadDataEN10disk_cache4AddrEi, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = mul nsw i32 %63, %57
  %65 = add nsw i32 %64, 8192
  %66 = sext i32 %65 to i64
  %67 = sext i32 %2 to i64
  %68 = call i8* @_Znam(i64 %67) #14
  %69 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  store i8* %68, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %55
  call void @_ZdaPv(i8* nonnull %70) #14
  %73 = load i8*, i8** %69, align 8
  br label %74

74:                                               ; preds = %55, %72
  %75 = phi i8* [ %68, %55 ], [ %73, %72 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #13
  store i8 -86, i8* %6, align 1
  %76 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 0
  %77 = call zeroext i1 @_ZN10disk_cache4File4ReadEPvmmPNS_14FileIOCallbackEPb(%"class.disk_cache::File"* %56, i8* %75, i64 %67, i64 %66, %"class.disk_cache::FileIOCallback"* %76, i8* nonnull %6) #13
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 1
  %80 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %79, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %80) #13
  %81 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %79, i64 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %98

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %79, i64 -2
  %86 = bitcast %"class.base::RefCounted.46"* %85 to %"class.(anonymous namespace)::ChildrenDeleter"*
  %87 = bitcast %"class.base::RefCounted.46"* %85 to void (%"class.(anonymous namespace)::ChildrenDeleter"*)***
  %88 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)**, void (%"class.(anonymous namespace)::ChildrenDeleter"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %88, i64 2
  %90 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %89, align 8
  call void %90(%"class.(anonymous namespace)::ChildrenDeleter"* nonnull %86) #13
  br label %98

91:                                               ; preds = %74
  %92 = load i8, i8* %6, align 1, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %98, label %94

94:                                               ; preds = %91
  %95 = bitcast %"class.(anonymous namespace)::ChildrenDeleter"* %0 to void (%"class.(anonymous namespace)::ChildrenDeleter"*, i32)***
  %96 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*, i32)**, void (%"class.(anonymous namespace)::ChildrenDeleter"*, i32)*** %95, align 8
  %97 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*, i32)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*, i32)** %96, align 8
  call void %97(%"class.(anonymous namespace)::ChildrenDeleter"* %0, i32 %2) #13
  br label %98

98:                                               ; preds = %84, %78, %94, %91
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #13
  br label %99

99:                                               ; preds = %48, %42, %21, %15, %98
  ret void
}

declare i32 @_ZN10disk_cache9EntryImpl13GetEntryFlagsEv(%"class.disk_cache::EntryImpl"*) local_unnamed_addr #1

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

declare void @_ZN10disk_cache6Bitmap6ResizeEib(%"class.disk_cache::Bitmap"*, i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZN10disk_cache9EntryImpl13SetEntryFlagsEj(%"class.disk_cache::EntryImpl"*, i32) local_unnamed_addr #1

declare void @_ZN10disk_cache6Bitmap6SetMapEPKji(%"class.disk_cache::Bitmap"*, i32*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10disk_cache13SparseControl9OpenChildEv(%"class.disk_cache::SparseControl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13, !noalias !18
  %12 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %13 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %12, align 8, !noalias !18
  %14 = bitcast %"class.disk_cache::EntryImpl"* %13 to void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)***
  %15 = load void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)**, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*** %14, align 8, !noalias !18
  %16 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)** %15, i64 2
  %17 = load void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)** %16, align 8, !noalias !18
  call void %17(%"class.std::__1::basic_string"* nonnull sret %3, %"class.disk_cache::EntryImpl"* %13) #13, !noalias !18
  %18 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 8, i32 0
  %19 = load i64, i64* %18, align 8, !noalias !18
  %20 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 14
  %21 = load i64, i64* %20, align 8, !noalias !18
  %22 = ashr i64 %21, 20
  %23 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1, !noalias !21
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !noalias !21
  %29 = select i1 %26, i8* %28, i8* %10
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* %29, i64 %19, i64 %22) #13
  %30 = load i8, i8* %24, align 1, !noalias !18
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %1
  %33 = load i8*, i8** %27, align 8, !noalias !18
  call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %1, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13, !noalias !18
  %35 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.scoped_refptr.33, %class.scoped_refptr.33* %35, i64 0, i32 0
  %37 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %36, align 8
  %38 = icmp eq %"class.disk_cache::EntryImpl"* %37, null
  br i1 %38, label %97, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13
  %41 = bitcast %"class.disk_cache::EntryImpl"* %37 to void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)***
  %42 = load void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)**, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)** %42, i64 2
  %44 = load void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)** %43, align 8
  call void %44(%"class.std::__1::basic_string"* nonnull sret %5, %"class.disk_cache::EntryImpl"* nonnull %37) #13
  %45 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %9, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = zext i8 %54 to i64
  %59 = select i1 %55, i64 %57, i64 %58
  %60 = icmp eq i64 %51, %59
  br i1 %60, label %61, label %90

61:                                               ; preds = %39
  %62 = load i8*, i8** %8, align 8
  %63 = select i1 %48, i8* %62, i8* %7
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = select i1 %55, i8* %65, i8* %40
  %67 = icmp eq i64 %51, 0
  br i1 %48, label %74, label %68

68:                                               ; preds = %61
  br i1 %67, label %90, label %69

69:                                               ; preds = %68
  %70 = ptrtoint i8* %62 to i64
  %71 = trunc i64 %70 to i8
  %72 = load i8, i8* %66, align 1
  %73 = icmp eq i8 %72, %71
  br i1 %73, label %78, label %90

74:                                               ; preds = %61
  br i1 %67, label %90, label %75

75:                                               ; preds = %74
  %76 = call i32 @bcmp(i8* %63, i8* %66, i64 %51) #13
  %77 = icmp eq i32 %76, 0
  br label %90

78:                                               ; preds = %69, %85
  %79 = phi i64 [ %82, %85 ], [ %50, %69 ]
  %80 = phi i8* [ %83, %85 ], [ %7, %69 ]
  %81 = phi i8* [ %86, %85 ], [ %66, %69 ]
  %82 = add i64 %79, -1
  %83 = getelementptr inbounds i8, i8* %80, i64 1
  %84 = icmp eq i64 %82, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds i8, i8* %81, i64 1
  %87 = load i8, i8* %83, align 1
  %88 = load i8, i8* %86, align 1
  %89 = icmp eq i8 %87, %88
  br i1 %89, label %78, label %90

90:                                               ; preds = %78, %85, %69, %39, %68, %74, %75
  %91 = phi i1 [ false, %39 ], [ %77, %75 ], [ true, %74 ], [ true, %68 ], [ false, %69 ], [ false, %85 ], [ true, %78 ]
  br i1 %55, label %92, label %95

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %94) #14
  br label %95

95:                                               ; preds = %90, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13
  br i1 %91, label %218, label %96

96:                                               ; preds = %95
  call void @_ZN10disk_cache13SparseControl10CloseChildEv(%"class.disk_cache::SparseControl"* %0)
  br label %97

97:                                               ; preds = %34, %96
  %98 = load i64, i64* %20, align 8
  %99 = lshr i64 %98, 20
  %100 = trunc i64 %99 to i32
  %101 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = icmp sgt i32 %102, %100
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9
  %106 = call zeroext i1 @_ZNK10disk_cache6Bitmap3GetEi(%"class.disk_cache::Bitmap"* %105, i32 %100) #13
  br i1 %106, label %109, label %107

107:                                              ; preds = %97, %104
  %108 = call zeroext i1 @_ZN10disk_cache13SparseControl20ContinueWithoutChildERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.disk_cache::SparseControl"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  br label %218

109:                                              ; preds = %104
  %110 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %12, align 8
  %111 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %110, i64 0, i32 5, i32 0, i32 0
  %112 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %111) #13
  br i1 %112, label %113, label %218

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %110, i64 0, i32 5, i32 0, i32 1
  %115 = bitcast i64* %114 to %"class.disk_cache::BackendImpl"**
  %116 = load %"class.disk_cache::BackendImpl"*, %"class.disk_cache::BackendImpl"** %115, align 8
  %117 = icmp eq %"class.disk_cache::BackendImpl"* %116, null
  br i1 %117, label %218, label %118

118:                                              ; preds = %113
  %119 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %12, align 8
  %120 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %119, i64 0, i32 5, i32 0, i32 0
  %121 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %120) #13
  br i1 %121, label %125, label %122

122:                                              ; preds = %118
  %123 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %124 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #13
  br label %125

125:                                              ; preds = %122, %118
  %126 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %120) #13
  br i1 %126, label %127, label %131

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %119, i64 0, i32 5, i32 0, i32 1
  %129 = bitcast i64* %128 to %"class.disk_cache::BackendImpl"**
  %130 = load %"class.disk_cache::BackendImpl"*, %"class.disk_cache::BackendImpl"** %129, align 8
  br label %131

131:                                              ; preds = %125, %127
  %132 = phi %"class.disk_cache::BackendImpl"* [ %130, %127 ], [ null, %125 ]
  %133 = call %"class.disk_cache::EntryImpl"* @_ZN10disk_cache11BackendImpl13OpenEntryImplERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.disk_cache::BackendImpl"* %132, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #13
  %134 = ptrtoint %"class.disk_cache::EntryImpl"* %133 to i64
  %135 = bitcast %class.scoped_refptr.33* %35 to i64*
  %136 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %36, align 8
  store i64 %134, i64* %135, align 8
  %137 = icmp eq %"class.disk_cache::EntryImpl"* %136, null
  br i1 %137, label %153, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %136, i64 0, i32 1
  %140 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %139, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %140) #13
  %141 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %139, i64 0, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %151

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %139, i64 -2
  %146 = bitcast %"class.base::RefCounted"* %145 to %"class.disk_cache::EntryImpl"*
  %147 = bitcast %"class.base::RefCounted"* %145 to void (%"class.disk_cache::EntryImpl"*)***
  %148 = load void (%"class.disk_cache::EntryImpl"*)**, void (%"class.disk_cache::EntryImpl"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %148, i64 16
  %150 = load void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %149, align 8
  call void %150(%"class.disk_cache::EntryImpl"* nonnull %146) #13
  br label %151

151:                                              ; preds = %144, %138
  %152 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %36, align 8
  br label %153

153:                                              ; preds = %151, %131
  %154 = phi %"class.disk_cache::EntryImpl"* [ %152, %151 ], [ %133, %131 ]
  %155 = icmp eq %"class.disk_cache::EntryImpl"* %154, null
  br i1 %155, label %156, label %158

156:                                              ; preds = %153
  %157 = call zeroext i1 @_ZN10disk_cache13SparseControl20ContinueWithoutChildERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.disk_cache::SparseControl"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  br label %218

158:                                              ; preds = %153
  %159 = call i32 @_ZN10disk_cache9EntryImpl13GetEntryFlagsEv(%"class.disk_cache::EntryImpl"* nonnull %154) #13
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %170, label %162

162:                                              ; preds = %158
  %163 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %36, align 8
  %164 = bitcast %"class.disk_cache::EntryImpl"* %163 to i32 (%"class.disk_cache::EntryImpl"*, i32)***
  %165 = load i32 (%"class.disk_cache::EntryImpl"*, i32)**, i32 (%"class.disk_cache::EntryImpl"*, i32)*** %164, align 8
  %166 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %165, i64 5
  %167 = load i32 (%"class.disk_cache::EntryImpl"*, i32)*, i32 (%"class.disk_cache::EntryImpl"*, i32)** %166, align 8
  %168 = call i32 %167(%"class.disk_cache::EntryImpl"* %163, i32 2) #13
  %169 = icmp slt i32 %168, 192
  br i1 %169, label %170, label %172

170:                                              ; preds = %158, %162
  %171 = call zeroext i1 @_ZN10disk_cache13SparseControl20KillChildAndContinueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.disk_cache::SparseControl"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i1 zeroext false)
  br label %218

172:                                              ; preds = %162
  %173 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10
  %174 = bitcast %"struct.disk_cache::SparseData"* %173 to i8*
  %175 = call i8* @_Znwm(i64 24) #14
  %176 = bitcast i8* %175 to %"class.net::WrappedIOBuffer"*
  call void @_ZN3net15WrappedIOBufferC1EPKc(%"class.net::WrappedIOBuffer"* nonnull %176, i8* %174) #13
  %177 = getelementptr inbounds i8, i8* %175, i64 8
  %178 = bitcast i8* %177 to i32*
  %179 = atomicrmw add i32* %178, i32 1 monotonic
  %180 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %36, align 8
  %181 = bitcast i8* %175 to %"class.net::IOBuffer"*
  %182 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %182, align 8
  %183 = bitcast %"class.disk_cache::EntryImpl"* %180 to i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %184 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %183, align 8
  %185 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %184, i64 6
  %186 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %185, align 8
  %187 = call i32 %186(%"class.disk_cache::EntryImpl"* %180, i32 2, i32 0, %"class.net::IOBuffer"* nonnull %181, i32 192, %"class.base::OnceCallback"* nonnull %6) #13
  %188 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %188) #13
  %189 = icmp eq i32 %187, 192
  br i1 %189, label %192, label %190

190:                                              ; preds = %172
  %191 = call zeroext i1 @_ZN10disk_cache13SparseControl20KillChildAndContinueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.disk_cache::SparseControl"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i1 zeroext true)
  br label %209

192:                                              ; preds = %172
  %193 = getelementptr inbounds %"struct.disk_cache::SparseData", %"struct.disk_cache::SparseData"* %173, i64 0, i32 0, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = load i64, i64* %18, align 8
  %196 = icmp eq i64 %194, %195
  br i1 %196, label %197, label %201

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 1
  %199 = load i32, i32* %198, align 8
  %200 = icmp eq i32 %199, -1056716093
  br i1 %200, label %203, label %201

201:                                              ; preds = %197, %192
  %202 = call zeroext i1 @_ZN10disk_cache13SparseControl20KillChildAndContinueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.disk_cache::SparseControl"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i1 zeroext false)
  br label %209

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 4
  %205 = load i32, i32* %204, align 4
  %206 = icmp ugt i32 %205, 1023
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  store i32 0, i32* %204, align 4
  %208 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 3
  store i32 -1, i32* %208, align 8
  br label %209

209:                                              ; preds = %190, %201, %203, %207
  %210 = phi i1 [ %191, %190 ], [ %202, %201 ], [ true, %203 ], [ true, %207 ]
  %211 = atomicrmw sub i32* %178, i32 1 acq_rel
  %212 = icmp eq i32 %211, 1
  br i1 %212, label %213, label %218

213:                                              ; preds = %209
  %214 = bitcast i8* %175 to void (%"class.net::IOBuffer"*)***
  %215 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %215, i64 1
  %217 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %216, align 8
  call void %217(%"class.net::IOBuffer"* nonnull %181) #13
  br label %218

218:                                              ; preds = %109, %213, %209, %113, %95, %170, %156, %107
  %219 = phi i1 [ %171, %170 ], [ %157, %156 ], [ %108, %107 ], [ true, %95 ], [ false, %113 ], [ %210, %209 ], [ %210, %213 ], [ false, %109 ]
  %220 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  %222 = load i8, i8* %221, align 1
  %223 = icmp slt i8 %222, 0
  br i1 %223, label %224, label %226

224:                                              ; preds = %218
  %225 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %225) #14
  br label %226

226:                                              ; preds = %218, %224
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret i1 %219
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControl16GenerateChildKeyEv(%"class.std::__1::basic_string"* noalias sret, %"class.disk_cache::SparseControl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %1, i64 0, i32 0
  %6 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %5, align 8
  %7 = bitcast %"class.disk_cache::EntryImpl"* %6 to void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)***
  %8 = load void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)**, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)** %8, i64 2
  %10 = load void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.disk_cache::EntryImpl"*)** %9, align 8
  call void %10(%"class.std::__1::basic_string"* nonnull sret %3, %"class.disk_cache::EntryImpl"* %6) #13
  %11 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %1, i64 0, i32 8, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %1, i64 0, i32 14
  %14 = load i64, i64* %13, align 8
  %15 = ashr i64 %14, 20
  %16 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !24
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8, !noalias !24
  %22 = select i1 %19, i8* %21, i8* %4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* %22, i64 %12, i64 %15) #13
  %23 = load i8, i8* %17, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %2
  %26 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %2, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10disk_cache13SparseControl12ChildPresentEv(%"class.disk_cache::SparseControl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 14
  %3 = load i64, i64* %2, align 8
  %4 = lshr i64 %3, 20
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, %5
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9
  %11 = tail call zeroext i1 @_ZNK10disk_cache6Bitmap3GetEi(%"class.disk_cache::Bitmap"* %10, i32 %5) #13
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i1 [ %11, %9 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10disk_cache13SparseControl20ContinueWithoutChildERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.disk_cache::SparseControl"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %7 [
    i32 1, label %60
    i32 3, label %6
  ]

6:                                                ; preds = %2
  br label %60

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %9 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %9, i64 0, i32 5, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #13
  br i1 %11, label %12, label %60

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %9, i64 0, i32 5, i32 0, i32 1
  %14 = bitcast i64* %13 to %"class.disk_cache::BackendImpl"**
  %15 = load %"class.disk_cache::BackendImpl"*, %"class.disk_cache::BackendImpl"** %14, align 8
  %16 = icmp eq %"class.disk_cache::BackendImpl"* %15, null
  br i1 %16, label %60, label %17

17:                                               ; preds = %12
  %18 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %8, align 8
  %19 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %18, i64 0, i32 5, i32 0, i32 0
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %19) #13
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  br label %24

24:                                               ; preds = %21, %17
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %19) #13
  br i1 %25, label %26, label %30

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %18, i64 0, i32 5, i32 0, i32 1
  %28 = bitcast i64* %27 to %"class.disk_cache::BackendImpl"**
  %29 = load %"class.disk_cache::BackendImpl"*, %"class.disk_cache::BackendImpl"** %28, align 8
  br label %30

30:                                               ; preds = %24, %26
  %31 = phi %"class.disk_cache::BackendImpl"* [ %29, %26 ], [ null, %24 ]
  %32 = call %"class.disk_cache::EntryImpl"* @_ZN10disk_cache11BackendImpl15CreateEntryImplERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.disk_cache::BackendImpl"* %31, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %33 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 1
  %34 = ptrtoint %"class.disk_cache::EntryImpl"* %32 to i64
  %35 = bitcast %class.scoped_refptr.33* %33 to i64*
  %36 = getelementptr inbounds %class.scoped_refptr.33, %class.scoped_refptr.33* %33, i64 0, i32 0
  %37 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %36, align 8
  store i64 %34, i64* %35, align 8
  %38 = icmp eq %"class.disk_cache::EntryImpl"* %37, null
  br i1 %38, label %54, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %37, i64 0, i32 1
  %41 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %40, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #13
  %42 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %40, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %52

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %40, i64 -2
  %47 = bitcast %"class.base::RefCounted"* %46 to %"class.disk_cache::EntryImpl"*
  %48 = bitcast %"class.base::RefCounted"* %46 to void (%"class.disk_cache::EntryImpl"*)***
  %49 = load void (%"class.disk_cache::EntryImpl"*)**, void (%"class.disk_cache::EntryImpl"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %49, i64 16
  %51 = load void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %50, align 8
  call void %51(%"class.disk_cache::EntryImpl"* nonnull %47) #13
  br label %52

52:                                               ; preds = %45, %39
  %53 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %36, align 8
  br label %54

54:                                               ; preds = %52, %30
  %55 = phi %"class.disk_cache::EntryImpl"* [ %53, %52 ], [ %32, %30 ]
  %56 = icmp eq %"class.disk_cache::EntryImpl"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %54
  store i64 0, i64* %35, align 8
  %58 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 19
  store i32 -401, i32* %58, align 4
  br label %60

59:                                               ; preds = %54
  call void @_ZN10disk_cache13SparseControl13InitChildDataEv(%"class.disk_cache::SparseControl"* %0)
  br label %60

60:                                               ; preds = %7, %12, %2, %59, %57, %6
  %61 = phi i1 [ true, %6 ], [ true, %59 ], [ false, %57 ], [ false, %2 ], [ false, %12 ], [ false, %7 ]
  ret i1 %61
}

declare %"class.disk_cache::EntryImpl"* @_ZN10disk_cache11BackendImpl13OpenEntryImplERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.disk_cache::BackendImpl"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10disk_cache13SparseControl20KillChildAndContinueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.disk_cache::SparseControl"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 14
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 20
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9
  %9 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, %7
  br i1 %11, label %17, label %12

12:                                               ; preds = %3
  %13 = icmp slt i32 %7, 32
  %14 = add nsw i32 %7, 32
  %15 = and i32 %14, -32
  %16 = select i1 %13, i32 32, i32 %15
  tail call void @_ZN10disk_cache6Bitmap6ResizeEib(%"class.disk_cache::Bitmap"* %8, i32 %16, i1 zeroext true) #13
  br label %17

17:                                               ; preds = %3, %12
  tail call void @_ZN10disk_cache6Bitmap3SetEib(%"class.disk_cache::Bitmap"* %8, i32 %7, i1 zeroext false) #13
  %18 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %class.scoped_refptr.33, %class.scoped_refptr.33* %18, i64 0, i32 0
  %20 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %19, align 8
  tail call void @_ZN10disk_cache9EntryImpl8DoomImplEv(%"class.disk_cache::EntryImpl"* %20) #13
  %21 = bitcast %class.scoped_refptr.33* %18 to i64*
  %22 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %19, align 8
  store i64 0, i64* %21, align 8
  %23 = icmp eq %"class.disk_cache::EntryImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.disk_cache::EntryImpl", %"class.disk_cache::EntryImpl"* %22, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #13
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 -2
  %32 = bitcast %"class.base::RefCounted"* %31 to %"class.disk_cache::EntryImpl"*
  %33 = bitcast %"class.base::RefCounted"* %31 to void (%"class.disk_cache::EntryImpl"*)***
  %34 = load void (%"class.disk_cache::EntryImpl"*)**, void (%"class.disk_cache::EntryImpl"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %34, i64 16
  %36 = load void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %35, align 8
  tail call void %36(%"class.disk_cache::EntryImpl"* nonnull %32) #13
  br label %37

37:                                               ; preds = %17, %24, %30
  br i1 %2, label %38, label %40

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 19
  store i32 -401, i32* %39, align 4
  br label %42

40:                                               ; preds = %37
  %41 = tail call zeroext i1 @_ZN10disk_cache13SparseControl20ContinueWithoutChildERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.disk_cache::SparseControl"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i1 [ false, %38 ], [ %41, %40 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControl11SetChildBitEb(%"class.disk_cache::SparseControl"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 14
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 20
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9
  %8 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, %6
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = icmp slt i32 %6, 32
  %13 = add nsw i32 %6, 32
  %14 = and i32 %13, -32
  %15 = select i1 %12, i32 32, i32 %14
  tail call void @_ZN10disk_cache6Bitmap6ResizeEib(%"class.disk_cache::Bitmap"* %7, i32 %15, i1 zeroext true) #13
  br label %16

16:                                               ; preds = %2, %11
  tail call void @_ZN10disk_cache6Bitmap3SetEib(%"class.disk_cache::Bitmap"* %7, i32 %6, i1 zeroext %1) #13
  ret void
}

declare void @_ZN10disk_cache9EntryImpl8DoomImplEv(%"class.disk_cache::EntryImpl"*) local_unnamed_addr #1

declare %"class.disk_cache::EntryImpl"* @_ZN10disk_cache11BackendImpl15CreateEntryImplERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.disk_cache::BackendImpl"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControl13InitChildDataEv(%"class.disk_cache::SparseControl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %3, align 8
  tail call void @_ZN10disk_cache9EntryImpl13SetEntryFlagsEj(%"class.disk_cache::EntryImpl"* %4, i32 2) #13
  %5 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10
  %6 = bitcast %"struct.disk_cache::SparseData"* %5 to i8*
  %7 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 8
  %8 = bitcast %"struct.disk_cache::SparseHeader"* %7 to i8*
  %9 = getelementptr %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 1
  %10 = bitcast [32 x i32]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 128, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %8, i64 64, i1 false)
  %11 = tail call i8* @_Znwm(i64 24) #14
  %12 = bitcast i8* %11 to %"class.net::WrappedIOBuffer"*
  tail call void @_ZN3net15WrappedIOBufferC1EPKc(%"class.net::WrappedIOBuffer"* nonnull %12, i8* %6) #13
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i32*
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  %16 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %3, align 8
  %17 = bitcast i8* %11 to %"class.net::IOBuffer"*
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  %19 = bitcast %"class.disk_cache::EntryImpl"* %16 to i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)***
  %20 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)**, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)** %20, i64 7
  %22 = load i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*, i32 (%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)** %21, align 8
  %23 = call i32 %22(%"class.disk_cache::EntryImpl"* %16, i32 2, i32 0, %"class.net::IOBuffer"* nonnull %17, i32 192, %"class.base::OnceCallback"* nonnull %2, i1 zeroext false) #13
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #13
  %25 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 14
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %26, 20
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9
  %30 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 9, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, %28
  br i1 %32, label %38, label %33

33:                                               ; preds = %1
  %34 = icmp slt i32 %28, 32
  %35 = add nsw i32 %28, 32
  %36 = and i32 %35, -32
  %37 = select i1 %34, i32 32, i32 %36
  call void @_ZN10disk_cache6Bitmap6ResizeEib(%"class.disk_cache::Bitmap"* %29, i32 %37, i1 zeroext true) #13
  br label %38

38:                                               ; preds = %33, %1
  call void @_ZN10disk_cache6Bitmap3SetEib(%"class.disk_cache::Bitmap"* %29, i32 %28, i1 zeroext true) #13
  %39 = atomicrmw sub i32* %14, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %46

41:                                               ; preds = %38
  %42 = bitcast i8* %11 to void (%"class.net::IOBuffer"*)***
  %43 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %43, i64 1
  %45 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %44, align 8
  call void %45(%"class.net::IOBuffer"* nonnull %17) #13
  br label %46

46:                                               ; preds = %38, %41
  ret void
}

declare zeroext i1 @_ZNK10disk_cache6Bitmap3GetEi(%"class.disk_cache::Bitmap"*, i32) local_unnamed_addr #1

declare void @_ZN10disk_cache6Bitmap3SetEib(%"class.disk_cache::Bitmap"*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10disk_cache13SparseControl11VerifyRangeEv(%"class.disk_cache::SparseControl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 14
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = and i32 %5, 1048575
  %7 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 17
  store i32 %6, i32* %7, align 4
  %8 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 16
  %9 = sub nuw nsw i32 1048576, %6
  %10 = load i32, i32* %8, align 4
  %11 = icmp slt i32 %9, %10
  %12 = select i1 %11, i32 %9, i32 %10
  %13 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 18
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %54

17:                                               ; preds = %1
  %18 = add nuw nsw i32 %6, 1023
  %19 = add i32 %18, %12
  %20 = ashr i32 %19, 10
  %21 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #13
  %22 = lshr i32 %6, 10
  store i32 %22, i32* %2, align 4
  %23 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 11
  %24 = call zeroext i1 @_ZNK10disk_cache6Bitmap11FindNextBitEPiib(%"class.disk_cache::Bitmap"* %23, i32* nonnull %2, i32 %20, i1 zeroext false) #13
  br i1 %24, label %25, label %52

25:                                               ; preds = %17
  %26 = load i32, i32* %2, align 4
  %27 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, %26
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 4
  %32 = load i32, i32* %31, align 4
  br label %33

33:                                               ; preds = %25, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %25 ]
  %35 = load i32, i32* %7, align 4
  %36 = ashr i32 %35, 10
  %37 = icmp ne i32 %26, %36
  %38 = and i32 %35, 1023
  %39 = icmp sgt i32 %34, %38
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %52

41:                                               ; preds = %33
  %42 = shl i32 %26, 10
  %43 = sub nsw i32 %42, %35
  store i32 %43, i32* %13, align 8
  %44 = icmp eq i32 %34, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = add nsw i32 %43, %34
  %47 = load i32, i32* %8, align 4
  %48 = icmp slt i32 %47, %46
  %49 = select i1 %48, i32 %47, i32 %46
  store i32 %49, i32* %13, align 8
  br label %50

50:                                               ; preds = %41, %45
  %51 = phi i32 [ %43, %41 ], [ %49, %45 ]
  store i32 %51, i32* %8, align 8
  br label %52

52:                                               ; preds = %17, %50, %33
  %53 = phi i1 [ false, %33 ], [ true, %50 ], [ true, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #13
  br label %54

54:                                               ; preds = %1, %52
  %55 = phi i1 [ %53, %52 ], [ true, %1 ]
  ret i1 %55
}

declare zeroext i1 @_ZNK10disk_cache6Bitmap11FindNextBitEPiib(%"class.disk_cache::Bitmap"*, i32*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK10disk_cache13SparseControl18PartialBlockLengthEi(%"class.disk_cache::SparseControl"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 4
  %8 = load i32, i32* %7, align 4
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ 0, %2 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControl11UpdateRangeEi(%"class.disk_cache::SparseControl"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 1
  br i1 %3, label %42, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %42

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 17
  %10 = load i32, i32* %9, align 4
  %11 = ashr i32 %10, 10
  %12 = and i32 %10, 1023
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, %11
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, %12
  br i1 %21, label %22, label %24

22:                                               ; preds = %14, %18
  %23 = add nsw i32 %11, 1
  br label %24

24:                                               ; preds = %8, %22, %18
  %25 = phi i32 [ %23, %22 ], [ %11, %18 ], [ %11, %8 ]
  %26 = add nsw i32 %10, %1
  %27 = ashr i32 %26, 10
  %28 = and i32 %26, 1023
  %29 = icmp sgt i32 %25, %27
  br i1 %29, label %42, label %30

30:                                               ; preds = %24
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 11
  %34 = tail call zeroext i1 @_ZNK10disk_cache6Bitmap3GetEi(%"class.disk_cache::Bitmap"* %33, i32 %27) #13
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 3
  store i32 %27, i32* %36, align 8
  %37 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 4
  store i32 %28, i32* %37, align 4
  br label %40

38:                                               ; preds = %30, %32
  %39 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 3
  store i32 -1, i32* %39, align 8
  br label %40

40:                                               ; preds = %38, %35
  %41 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 11
  tail call void @_ZN10disk_cache6Bitmap8SetRangeEiib(%"class.disk_cache::Bitmap"* %41, i32 %25, i32 %27, i1 zeroext true) #13
  br label %42

42:                                               ; preds = %40, %24, %4, %2
  ret void
}

declare void @_ZN10disk_cache6Bitmap8SetRangeEiib(%"class.disk_cache::Bitmap"*, i32, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10disk_cache13SparseControl9DoChildIOEv(%"class.disk_cache::SparseControl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 4
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 16
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %166, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 19
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %166, label %15

15:                                               ; preds = %11
  %16 = tail call zeroext i1 @_ZN10disk_cache13SparseControl9OpenChildEv(%"class.disk_cache::SparseControl"* %0)
  br i1 %16, label %17, label %166

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 14
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = and i32 %20, 1048575
  %22 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 17
  store i32 %21, i32* %22, align 4
  %23 = sub nuw nsw i32 1048576, %21
  %24 = load i32, i32* %8, align 4
  %25 = icmp slt i32 %23, %24
  %26 = select i1 %25, i32 %23, i32 %24
  %27 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 18
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %68

31:                                               ; preds = %17
  %32 = add nuw nsw i32 %21, 1023
  %33 = add i32 %32, %26
  %34 = ashr i32 %33, 10
  %35 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #13
  %36 = lshr i32 %21, 10
  store i32 %36, i32* %2, align 4
  %37 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 11
  %38 = call zeroext i1 @_ZNK10disk_cache6Bitmap11FindNextBitEPiib(%"class.disk_cache::Bitmap"* %37, i32* nonnull %2, i32 %34, i1 zeroext false) #13
  br i1 %38, label %39, label %66

39:                                               ; preds = %31
  %40 = load i32, i32* %2, align 4
  %41 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, %40
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 4
  %46 = load i32, i32* %45, align 4
  br label %47

47:                                               ; preds = %44, %39
  %48 = phi i32 [ %46, %44 ], [ 0, %39 ]
  %49 = load i32, i32* %22, align 4
  %50 = ashr i32 %49, 10
  %51 = icmp ne i32 %40, %50
  %52 = and i32 %49, 1023
  %53 = icmp sgt i32 %48, %52
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %67

55:                                               ; preds = %47
  %56 = shl i32 %40, 10
  %57 = sub nsw i32 %56, %49
  store i32 %57, i32* %27, align 8
  %58 = icmp eq i32 %48, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = add nsw i32 %57, %48
  %61 = load i32, i32* %8, align 4
  %62 = icmp slt i32 %61, %60
  %63 = select i1 %62, i32 %61, i32 %60
  store i32 %63, i32* %27, align 8
  br label %64

64:                                               ; preds = %59, %55
  %65 = phi i32 [ %57, %55 ], [ %63, %59 ]
  store i32 %65, i32* %8, align 8
  br label %66

66:                                               ; preds = %64, %31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #13
  br label %68

67:                                               ; preds = %47
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #13
  br label %166

68:                                               ; preds = %17, %66
  store i8 0, i8* %7, align 1
  %69 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #13
  %70 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %70, align 8
  %71 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %72 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %71, align 8
  %73 = icmp eq %"class.base::internal::BindStateBase"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #13
  %76 = ptrtoint %"class.disk_cache::SparseControl"* %0 to i64
  %77 = call i8* @_Znwm(i64 56) #14, !noalias !27
  %78 = bitcast i8* %77 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %78, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10disk_cache13SparseControlEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10disk_cache13SparseControlEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !27
  %79 = getelementptr inbounds i8, i8* %77, i64 32
  %80 = bitcast i8* %79 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.disk_cache::SparseControl"*, i32)* @_ZN10disk_cache13SparseControl18OnChildIOCompletedEi to i64), i64 0>, <2 x i64>* %80, align 8, !noalias !27
  %81 = getelementptr inbounds i8, i8* %77, i64 48
  %82 = bitcast i8* %81 to i64*
  store i64 %76, i64* %82, align 8, !noalias !27
  %83 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %77, i8** %83, align 8, !alias.scope !27
  %84 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %86 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* nonnull %84, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %85) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %85) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #13
  br label %87

87:                                               ; preds = %74, %68
  %88 = load i32, i32* %28, align 8
  switch i32 %88, label %163 [
    i32 1, label %89
    i32 2, label %119
    i32 3, label %149
  ]

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %91 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %90, align 8
  %92 = call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %91) #13
  %93 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %92, i64 0, i32 1
  %94 = load %"class.net::NetLog"*, %"class.net::NetLog"** %93, align 8
  %95 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %94, i64 0, i32 3
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %106, label %98

98:                                               ; preds = %89
  %99 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %90, align 8
  %100 = call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %99) #13
  %101 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 1, i32 0
  %102 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %101, align 8
  %103 = call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %102) #13
  %104 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %103, i64 0, i32 0
  %105 = load i32, i32* %27, align 8
  call void @_ZN10disk_cache21NetLogSparseReadWriteERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseERKNS0_12NetLogSourceEi(%"class.net::NetLogWithSource"* dereferenceable(24) %100, i32 135, i32 1, %"struct.net::NetLogSource"* dereferenceable(16) %104, i32 %105) #13
  br label %106

106:                                              ; preds = %89, %98
  %107 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 1, i32 0
  %108 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %107, align 8
  %109 = load i32, i32* %22, align 4
  %110 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 15, i32 0
  %111 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %110, align 8
  %112 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %111, i64 0, i32 0
  %113 = load i32, i32* %27, align 8
  %114 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %115, i64* %116, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %70, align 8
  %117 = call i32 @_ZN10disk_cache9EntryImpl12ReadDataImplEiiPN3net8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.disk_cache::EntryImpl"* %108, i32 1, i32 %109, %"class.net::IOBuffer"* %112, i32 %113, %"class.base::OnceCallback"* nonnull %5) #13
  %118 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %118) #13
  br label %151

119:                                              ; preds = %87
  %120 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %121 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %120, align 8
  %122 = call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %121) #13
  %123 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %122, i64 0, i32 1
  %124 = load %"class.net::NetLog"*, %"class.net::NetLog"** %123, align 8
  %125 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %124, i64 0, i32 3
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %136, label %128

128:                                              ; preds = %119
  %129 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %120, align 8
  %130 = call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %129) #13
  %131 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 1, i32 0
  %132 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %131, align 8
  %133 = call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %132) #13
  %134 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %133, i64 0, i32 0
  %135 = load i32, i32* %27, align 8
  call void @_ZN10disk_cache21NetLogSparseReadWriteERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseERKNS0_12NetLogSourceEi(%"class.net::NetLogWithSource"* dereferenceable(24) %130, i32 136, i32 1, %"struct.net::NetLogSource"* dereferenceable(16) %134, i32 %135) #13
  br label %136

136:                                              ; preds = %119, %128
  %137 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 1, i32 0
  %138 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %137, align 8
  %139 = load i32, i32* %22, align 4
  %140 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 15, i32 0
  %141 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %140, align 8
  %142 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %141, i64 0, i32 0
  %143 = load i32, i32* %27, align 8
  %144 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %145, i64* %146, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %70, align 8
  %147 = call i32 @_ZN10disk_cache9EntryImpl13WriteDataImplEiiPN3net8IOBufferEiN4base12OnceCallbackIFviEEEb(%"class.disk_cache::EntryImpl"* %138, i32 1, i32 %139, %"class.net::IOBuffer"* %142, i32 %143, %"class.base::OnceCallback"* nonnull %6, i1 zeroext false) #13
  %148 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %148) #13
  br label %151

149:                                              ; preds = %87
  %150 = call i32 @_ZN10disk_cache13SparseControl19DoGetAvailableRangeEv(%"class.disk_cache::SparseControl"* %0)
  br label %151

151:                                              ; preds = %149, %136, %106
  %152 = phi i32 [ %150, %149 ], [ %147, %136 ], [ %117, %106 ]
  switch i32 %152, label %162 [
    i32 -1, label %153
    i32 0, label %163
  ]

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 3
  %155 = load i8, i8* %154, align 4, !range !2
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %157, label %163

157:                                              ; preds = %153
  store i8 1, i8* %154, align 4
  %158 = bitcast %"class.disk_cache::SparseControl"* %0 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = getelementptr inbounds i8, i8* %159, i64 8
  %161 = bitcast i8* %160 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %161) #13
  br label %163

162:                                              ; preds = %151
  call void @_ZN10disk_cache13SparseControl18DoChildIOCompletedEi(%"class.disk_cache::SparseControl"* %0, i32 %152)
  br label %163

163:                                              ; preds = %87, %151, %157, %153, %162
  %164 = phi i1 [ true, %162 ], [ false, %153 ], [ false, %157 ], [ false, %151 ], [ false, %87 ]
  %165 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %165) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13
  br label %166

166:                                              ; preds = %67, %15, %11, %1, %163
  %167 = phi i1 [ %164, %163 ], [ false, %1 ], [ false, %11 ], [ false, %15 ], [ false, %67 ]
  ret i1 %167
}

declare void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControl14DoUserCallbackEv(%"class.disk_cache::SparseControl"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 12
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 15
  %12 = bitcast %class.scoped_refptr.43* %11 to i64*
  %13 = getelementptr inbounds %class.scoped_refptr.43, %class.scoped_refptr.43* %11, i64 0, i32 0
  %14 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %13, align 8
  store i64 0, i64* %12, align 8
  %15 = icmp eq %"class.net::DrainableIOBuffer"* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %14, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %28

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe.44"* %22 to %"class.net::IOBuffer"*
  %24 = bitcast %"class.base::RefCountedThreadSafe.44"* %22 to void (%"class.net::IOBuffer"*)***
  %25 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %25, i64 1
  %27 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %26, align 8
  tail call void %27(%"class.net::IOBuffer"* nonnull %23) #13
  br label %28

28:                                               ; preds = %1, %16, %21
  %29 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 3
  store i8 0, i8* %29, align 4
  %30 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 2
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 19
  %32 = load i32, i32* %31, align 4
  %33 = bitcast %"class.disk_cache::SparseControl"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 8
  %36 = bitcast i8* %35 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #13
  %37 = bitcast i8* %35 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %28
  %41 = bitcast i8* %34 to %"class.disk_cache::EntryImpl"*
  %42 = bitcast i8* %34 to void (%"class.disk_cache::EntryImpl"*)***
  %43 = load void (%"class.disk_cache::EntryImpl"*)**, void (%"class.disk_cache::EntryImpl"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %43, i64 16
  %45 = load void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %44, align 8
  tail call void %45(%"class.disk_cache::EntryImpl"* nonnull %41) #13
  br label %46

46:                                               ; preds = %28, %40
  %47 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  %48 = load i64, i64* %10, align 8
  %49 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %50 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %51 = inttoptr i64 %48 to %"class.base::internal::BindStateBase"*
  %52 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %51, i64 0, i32 1
  %53 = bitcast void ()** %52 to void (%"class.base::internal::BindStateBase"*, i32)**
  %54 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %53, align 8
  tail call void %54(%"class.base::internal::BindStateBase"* %51, i32 %32) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  %55 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %55) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControl18OnChildIOCompletedEi(%"class.disk_cache::SparseControl"*, i32) #0 align 2 {
  tail call void @_ZN10disk_cache13SparseControl18DoChildIOCompletedEi(%"class.disk_cache::SparseControl"* %0, i32 %1)
  %3 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 7
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  store i8 0, i8* %3, align 8
  %7 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %8 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %7, align 8
  %9 = tail call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %8) #13
  %10 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %9, i64 0, i32 1
  %11 = load %"class.net::NetLog"*, %"class.net::NetLog"** %10, align 8
  %12 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %11, i64 0, i32 3
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %30, label %15

15:                                               ; preds = %6
  %16 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %7, align 8
  %17 = tail call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %16) #13
  tail call void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %17, i32 0) #13
  %18 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %7, align 8
  %19 = tail call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %18) #13
  %20 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, -1
  %23 = icmp ult i32 %22, 3
  br i1 %23, label %24, label %28

24:                                               ; preds = %15
  %25 = sext i32 %22 to i64
  %26 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN10disk_cache13SparseControl18OnChildIOCompletedEi, i64 0, i64 %25
  %27 = load i32, i32* %26, align 4
  br label %28

28:                                               ; preds = %15, %24
  %29 = phi i32 [ %27, %24 ], [ 0, %15 ]
  tail call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %19, i32 %29) #13
  br label %30

30:                                               ; preds = %6, %28
  %31 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 13, i32 0, i32 0
  %32 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %31, align 8
  %33 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 13, i32 0, i32 1
  %34 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %33, align 8
  %35 = icmp eq %"class.base::OnceCallback"* %32, %34
  tail call void @_ZN10disk_cache13SparseControl14DoUserCallbackEv(%"class.disk_cache::SparseControl"* %0)
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  tail call void @_ZN10disk_cache13SparseControl16DoAbortCallbacksEv(%"class.disk_cache::SparseControl"* %0)
  br label %38

37:                                               ; preds = %2
  tail call void @_ZN10disk_cache13SparseControl12DoChildrenIOEv(%"class.disk_cache::SparseControl"* %0)
  br label %38

38:                                               ; preds = %36, %30, %37
  ret void
}

declare void @_ZN10disk_cache21NetLogSparseReadWriteERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseERKNS0_12NetLogSourceEi(%"class.net::NetLogWithSource"* dereferenceable(24), i32, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32) local_unnamed_addr #1

declare i32 @_ZN10disk_cache9EntryImpl12ReadDataImplEiiPN3net8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #1

declare i32 @_ZN10disk_cache9EntryImpl13WriteDataImplEiiPN3net8IOBufferEiN4base12OnceCallbackIFviEEEb(%"class.disk_cache::EntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache13SparseControl19DoGetAvailableRangeEv(%"class.disk_cache::SparseControl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %3, align 8
  %5 = icmp eq %"class.disk_cache::EntryImpl"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 18
  %8 = load i32, i32* %7, align 8
  br label %87

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 17
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 18
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, %11
  %15 = ashr i32 %11, 10
  %16 = add nsw i32 %14, 1023
  %17 = ashr i32 %16, 10
  %18 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #13
  store i32 %15, i32* %2, align 4
  %19 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 11
  %20 = call i32 @_ZNK10disk_cache6Bitmap8FindBitsEPiib(%"class.disk_cache::Bitmap"* %19, i32* nonnull %2, i32 %17, i1 zeroext true) #13
  %21 = load i32, i32* %2, align 4
  %22 = shl nsw i32 %21, 10
  %23 = add i32 %21, %20
  %24 = shl i32 %23, 10
  %25 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = icmp sgt i32 %26, -1
  br i1 %27, label %28, label %41

28:                                               ; preds = %9
  %29 = shl nsw i32 %26, 10
  %30 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = add nsw i32 %31, %29
  %33 = icmp sgt i32 %31, 0
  %34 = icmp slt i32 %22, %24
  %35 = and i1 %34, %33
  %36 = icmp eq i32 %24, %29
  %37 = and i1 %36, %35
  %38 = select i1 %37, i32 0, i32 %32
  %39 = select i1 %37, i32 0, i32 %29
  %40 = select i1 %37, i32 %32, i32 %24
  br label %41

41:                                               ; preds = %28, %9
  %42 = phi i32 [ 0, %9 ], [ %38, %28 ]
  %43 = phi i32 [ 0, %9 ], [ %39, %28 ]
  %44 = phi i32 [ %24, %9 ], [ %40, %28 ]
  %45 = icmp slt i32 %22, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = icmp sgt i32 %11, %22
  %48 = select i1 %47, i32 %11, i32 %22
  %49 = icmp slt i32 %14, %44
  %50 = select i1 %49, i32 %14, i32 %44
  br label %51

51:                                               ; preds = %46, %41
  %52 = phi i32 [ %22, %41 ], [ %48, %46 ]
  %53 = phi i32 [ %44, %41 ], [ %50, %46 ]
  %54 = icmp slt i32 %43, %42
  br i1 %54, label %55, label %60

55:                                               ; preds = %51
  %56 = icmp sgt i32 %11, %43
  %57 = select i1 %56, i32 %11, i32 %43
  %58 = icmp slt i32 %14, %42
  %59 = select i1 %58, i32 %14, i32 %42
  br label %60

60:                                               ; preds = %55, %51
  %61 = phi i32 [ %42, %51 ], [ %59, %55 ]
  %62 = phi i32 [ %43, %51 ], [ %57, %55 ]
  %63 = icmp slt i32 %52, %53
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = icmp slt i32 %62, %61
  %66 = icmp slt i32 %62, %52
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %69

68:                                               ; preds = %60, %64
  br label %69

69:                                               ; preds = %64, %68
  %70 = phi i32 [ %61, %68 ], [ %53, %64 ]
  %71 = phi i32 [ %62, %68 ], [ %52, %64 ]
  %72 = icmp sgt i32 %70, %71
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = load i32, i32* %12, align 8
  br label %85

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 6
  store i8 1, i8* %76, align 1
  %77 = load i32, i32* %10, align 4
  %78 = sub nsw i32 %71, %77
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 14
  %81 = load i64, i64* %80, align 8
  %82 = add nsw i64 %81, %79
  store i64 %82, i64* %80, align 8
  %83 = sub nsw i32 %70, %71
  %84 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 19
  store i32 %83, i32* %84, align 4
  br label %85

85:                                               ; preds = %75, %73
  %86 = phi i32 [ %74, %73 ], [ 0, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #13
  br label %87

87:                                               ; preds = %85, %6
  %88 = phi i32 [ %86, %85 ], [ %8, %6 ]
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControl18DoChildIOCompletedEi(%"class.disk_cache::SparseControl"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 0
  %4 = load %"class.disk_cache::EntryImpl"*, %"class.disk_cache::EntryImpl"** %3, align 8
  %5 = tail call dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK10disk_cache9EntryImpl7net_logEv(%"class.disk_cache::EntryImpl"* %4) #13
  %6 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %5, i64 0, i32 1
  %9 = load %"class.net::NetLog"*, %"class.net::NetLog"** %8, align 8
  %10 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %9, i64 0, i32 3
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %2
  switch i32 %7, label %17 [
    i32 1, label %15
    i32 2, label %14
  ]

14:                                               ; preds = %13
  br label %15

15:                                               ; preds = %14, %13
  %16 = phi i32 [ 136, %14 ], [ 135, %13 ]
  tail call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %5, i32 %16, i32 %1) #13
  br label %17

17:                                               ; preds = %2, %13, %15
  %18 = icmp slt i32 %1, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 19
  store i32 %1, i32* %20, align 4
  br label %77

21:                                               ; preds = %17
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %60, label %23

23:                                               ; preds = %21
  %24 = load i32, i32* %6, align 8
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %26, label %60

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 17
  %28 = load i32, i32* %27, align 4
  %29 = ashr i32 %28, 10
  %30 = and i32 %28, 1023
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, %29
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 4
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, %30
  br i1 %39, label %40, label %42

40:                                               ; preds = %36, %32
  %41 = add nsw i32 %29, 1
  br label %42

42:                                               ; preds = %40, %36, %26
  %43 = phi i32 [ %41, %40 ], [ %29, %36 ], [ %29, %26 ]
  %44 = add nsw i32 %28, %1
  %45 = ashr i32 %44, 10
  %46 = and i32 %44, 1023
  %47 = icmp sgt i32 %43, %45
  br i1 %47, label %60, label %48

48:                                               ; preds = %42
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 11
  %52 = tail call zeroext i1 @_ZNK10disk_cache6Bitmap3GetEi(%"class.disk_cache::Bitmap"* %51, i32 %45) #13
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 3
  store i32 %45, i32* %54, align 8
  %55 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 4
  store i32 %46, i32* %55, align 4
  br label %58

56:                                               ; preds = %50, %48
  %57 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 10, i32 0, i32 3
  store i32 -1, i32* %57, align 8
  br label %58

58:                                               ; preds = %56, %53
  %59 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 11
  tail call void @_ZN10disk_cache6Bitmap8SetRangeEiib(%"class.disk_cache::Bitmap"* %59, i32 %43, i32 %45, i1 zeroext true) #13
  br label %60

60:                                               ; preds = %21, %23, %42, %58
  %61 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 19
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %62, %1
  store i32 %63, i32* %61, align 4
  %64 = sext i32 %1 to i64
  %65 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 14
  %66 = load i64, i64* %65, align 8
  %67 = add nsw i64 %66, %64
  store i64 %67, i64* %65, align 8
  %68 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 16
  %69 = load i32, i32* %68, align 8
  %70 = sub nsw i32 %69, %1
  store i32 %70, i32* %68, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %60
  %73 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 15, i32 0
  %74 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %73, align 8
  %75 = icmp eq %"class.net::DrainableIOBuffer"* %74, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %72
  tail call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* nonnull %74, i32 %1) #13
  br label %77

77:                                               ; preds = %72, %60, %19, %76
  ret void
}

declare i32 @_ZNK10disk_cache6Bitmap8FindBitsEPiib(%"class.disk_cache::Bitmap"*, i32*, i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache13SparseControl16DoAbortCallbacksEv(%"class.disk_cache::SparseControl"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 13
  %4 = bitcast %"class.std::__1::vector.36"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  store i64 0, i64* %4, align 8
  %6 = getelementptr inbounds %"class.disk_cache::SparseControl", %"class.disk_cache::SparseControl"* %0, i64 0, i32 13, i32 0, i32 1
  %7 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %8 = inttoptr i64 %5 to %"class.base::OnceCallback"*
  %9 = icmp eq %"class.base::OnceCallback"* %7, %8
  %10 = bitcast %"class.base::OnceCallback"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  br i1 %9, label %16, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.disk_cache::SparseControl"* %0 to i8**
  %13 = bitcast %"class.base::OnceCallback"* %2 to i8*
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  br label %27

16:                                               ; preds = %41, %1
  %17 = icmp eq i64 %5, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %16
  br i1 %9, label %24, label %19

19:                                               ; preds = %18, %19
  %20 = phi %"class.base::OnceCallback"* [ %21, %19 ], [ %7, %18 ]
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %20, i64 -1
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %21, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %22) #13
  %23 = icmp eq %"class.base::OnceCallback"* %21, %8
  br i1 %23, label %24, label %19

24:                                               ; preds = %19, %18
  %25 = inttoptr i64 %5 to i8*
  call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %16, %24
  ret void

27:                                               ; preds = %11, %41
  %28 = phi %"class.base::OnceCallback"* [ %8, %11 ], [ %49, %41 ]
  %29 = load i8*, i8** %12, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #13
  %32 = bitcast i8* %30 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %27
  %36 = bitcast i8* %29 to %"class.disk_cache::EntryImpl"*
  %37 = bitcast i8* %29 to void (%"class.disk_cache::EntryImpl"*)***
  %38 = load void (%"class.disk_cache::EntryImpl"*)**, void (%"class.disk_cache::EntryImpl"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %38, i64 16
  %40 = load void (%"class.disk_cache::EntryImpl"*)*, void (%"class.disk_cache::EntryImpl"*)** %39, align 8
  call void %40(%"class.disk_cache::EntryImpl"* nonnull %36) #13
  br label %41

41:                                               ; preds = %27, %35
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  %42 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %28, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.base::OnceCallback"* %28 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8
  %45 = inttoptr i64 %44 to %"class.base::internal::BindStateBase"*
  %46 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %45, i64 0, i32 1
  %47 = bitcast void ()** %46 to void (%"class.base::internal::BindStateBase"*, i32)**
  %48 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %47, align 8
  call void %48(%"class.base::internal::BindStateBase"* %45, i32 0) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %28, i64 1
  %50 = icmp eq %"class.base::OnceCallback"* %49, %7
  br i1 %50, label %16, label %27
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN10disk_cache11BackendImpl10GetWeakPtrEv(%"class.base::WeakPtr"* sret, %"class.disk_cache::BackendImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115ChildrenDeleter16OnFileIOCompleteEi(%"class.(anonymous namespace)::ChildrenDeleter"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  tail call void @_ZN12_GLOBAL__N_115ChildrenDeleter5StartEPci(%"class.(anonymous namespace)::ChildrenDeleter"* %0, i8* %4, i32 %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115ChildrenDeleterD2Ev(%"class.(anonymous namespace)::ChildrenDeleter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_115ChildrenDeleterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #14
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 4
  tail call void @_ZN10disk_cache6BitmapD1Ev(%"class.disk_cache::Bitmap"* %8) #13
  %9 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %7, %14
  %18 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %18) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115ChildrenDeleterD0Ev(%"class.(anonymous namespace)::ChildrenDeleter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_115ChildrenDeleterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #14
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 4
  tail call void @_ZN10disk_cache6BitmapD1Ev(%"class.disk_cache::Bitmap"* %8) #13
  %9 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %7, %14
  %18 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %18) #13
  %19 = bitcast %"class.(anonymous namespace)::ChildrenDeleter"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115ChildrenDeleter14DeleteChildrenEv(%"class.(anonymous namespace)::ChildrenDeleter"*) #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback.112", align 8
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13
  store i32 0, i32* %3, align 4
  %8 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 4, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = call zeroext i1 @_ZNK10disk_cache6Bitmap11FindNextBitEPiib(%"class.disk_cache::Bitmap"* %8, i32* nonnull %3, i32 %10, i1 zeroext true) #13
  br i1 %11, label %12, label %20

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #13
  br i1 %14, label %15, label %20

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = bitcast i64* %16 to %"class.disk_cache::BackendImpl"**
  %18 = load %"class.disk_cache::BackendImpl"*, %"class.disk_cache::BackendImpl"** %17, align 8
  %19 = icmp eq %"class.disk_cache::BackendImpl"* %18, null
  br i1 %19, label %20, label %33

20:                                               ; preds = %12, %15, %1
  %21 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %21, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #13
  %23 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %86

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted.46"* %27 to %"class.(anonymous namespace)::ChildrenDeleter"*
  %29 = bitcast %"class.base::RefCounted.46"* %27 to void (%"class.(anonymous namespace)::ChildrenDeleter"*)***
  %30 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)**, void (%"class.(anonymous namespace)::ChildrenDeleter"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %30, i64 2
  %32 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %31, align 8
  call void %32(%"class.(anonymous namespace)::ChildrenDeleter"* nonnull %28) #13
  br label %86

33:                                               ; preds = %15
  %34 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 3
  %37 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 5
  %38 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  %39 = load i64, i64* %37, align 8
  %40 = load i32, i32* %3, align 4
  %41 = sext i32 %40 to i64
  %42 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1, !noalias !32
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8, !noalias !32
  %48 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %49 = select i1 %45, i8* %47, i8* %48
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* %49, i64 %39, i64 %41) #13
  %50 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #13
  br i1 %50, label %54, label %51

51:                                               ; preds = %33
  %52 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %54

54:                                               ; preds = %51, %33
  %55 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #13
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = load %"class.disk_cache::BackendImpl"*, %"class.disk_cache::BackendImpl"** %17, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.disk_cache::BackendImpl"* [ %57, %56 ], [ null, %54 ]
  %60 = call i32 @_ZN10disk_cache11BackendImpl13SyncDoomEntryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.disk_cache::BackendImpl"* %59, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #13
  %61 = load i32, i32* %3, align 4
  call void @_ZN10disk_cache6Bitmap3SetEib(%"class.disk_cache::Bitmap"* %8, i32 %61, i1 zeroext false) #13
  %62 = call dereferenceable(8) %class.scoped_refptr.64* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #13
  %63 = bitcast %class.scoped_refptr.64* %62 to %"class.base::TaskRunner"**
  %64 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %63, align 8
  %65 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 154) #13
  %66 = call i8* @_Znwm(i64 56) #14, !noalias !35
  %67 = bitcast i8* %66 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %67, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_115ChildrenDeleterEFvvEJ13scoped_refptrIS4_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_115ChildrenDeleterEFvvEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !35
  %68 = getelementptr inbounds i8, i8* %66, i64 32
  %69 = bitcast i8* %68 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::ChildrenDeleter"*)* @_ZN12_GLOBAL__N_115ChildrenDeleter14DeleteChildrenEv to i64), i64 0>, <2 x i64>* %69, align 8, !noalias !35
  %70 = getelementptr inbounds i8, i8* %66, i64 48
  %71 = bitcast i8* %70 to %"class.(anonymous namespace)::ChildrenDeleter"**
  store %"class.(anonymous namespace)::ChildrenDeleter"* %0, %"class.(anonymous namespace)::ChildrenDeleter"** %71, align 8, !noalias !35
  %72 = icmp eq %"class.(anonymous namespace)::ChildrenDeleter"* %0, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %58
  %74 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %0, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %74) #13, !noalias !35
  br label %75

75:                                               ; preds = %58, %73
  %76 = bitcast %"class.base::OnceCallback.112"* %6 to i8**
  store i8* %66, i8** %76, align 8, !alias.scope !35
  %77 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %64, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback.112"* nonnull %6) #13
  %78 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %78) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #13
  %79 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %75
  %84 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %84) #14
  br label %85

85:                                               ; preds = %75, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #13
  br label %86

86:                                               ; preds = %26, %20, %85
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare i32 @_ZN10disk_cache11BackendImpl13SyncDoomEntryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.disk_cache::BackendImpl"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_115ChildrenDeleterEFvvEJ13scoped_refptrIS4_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.(anonymous namespace)::ChildrenDeleter"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.(anonymous namespace)::ChildrenDeleter"*)**
  %21 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.(anonymous namespace)::ChildrenDeleter"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.(anonymous namespace)::ChildrenDeleter"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.(anonymous namespace)::ChildrenDeleter"* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN12_GLOBAL__N_115ChildrenDeleterEFvvEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.(anonymous namespace)::ChildrenDeleter"**
  %6 = load %"class.(anonymous namespace)::ChildrenDeleter"*, %"class.(anonymous namespace)::ChildrenDeleter"** %5, align 8
  %7 = icmp eq %"class.(anonymous namespace)::ChildrenDeleter"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %9, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #13
  %11 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %9, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %9, i64 -2
  %16 = bitcast %"class.base::RefCounted.46"* %15 to %"class.(anonymous namespace)::ChildrenDeleter"*
  %17 = bitcast %"class.base::RefCounted.46"* %15 to void (%"class.(anonymous namespace)::ChildrenDeleter"*)***
  %18 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)**, void (%"class.(anonymous namespace)::ChildrenDeleter"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %18, i64 2
  %20 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %19, align 8
  tail call void %20(%"class.(anonymous namespace)::ChildrenDeleter"* nonnull %16) #13
  br label %21

21:                                               ; preds = %3, %8, %14
  %22 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #14
  br label %23

23:                                               ; preds = %21, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare %"class.disk_cache::MappedFile"* @_ZN10disk_cache11BackendImpl4FileENS_4AddrE(%"class.disk_cache::BackendImpl"*, i32) local_unnamed_addr #1

declare i32 @_ZNK10disk_cache4Addr11start_blockEv(%"class.disk_cache::Addr"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

declare zeroext i1 @_ZN10disk_cache4File4ReadEPvmmPNS_14FileIOCallbackEPb(%"class.disk_cache::File"*, i8*, i64, i64, %"class.disk_cache::FileIOCallback"*, i8*) local_unnamed_addr #1

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

declare void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"*, %"class.net::IOBuffer"*, i32) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base12OnceCallbackIFviEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.36"*, %"class.base::OnceCallback"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::OnceCallback"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.36"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.36"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.base::OnceCallback"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::OnceCallback"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %36, i64 %35
  %39 = ptrtoint %"class.base::OnceCallback"* %38 to i64
  %40 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.base::OnceCallback"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %37, i64 1
  %45 = ptrtoint %"class.base::OnceCallback"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %46, align 8
  %48 = ptrtoint %"class.base::OnceCallback"* %47 to i64
  %49 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %3, align 8
  %50 = icmp eq %"class.base::OnceCallback"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.base::OnceCallback", %"class.base::OnceCallback"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.base::internal::BindStateBase"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.base::OnceCallback"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.base::OnceCallback"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %60, i64 -1
  %64 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %61, i64 -1
  %65 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::OnceCallback"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.base::OnceCallback"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !40

71:                                               ; preds = %59, %51
  %72 = phi %"class.base::OnceCallback"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.base::OnceCallback"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.base::OnceCallback"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.base::OnceCallback"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.base::OnceCallback"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -1
  %80 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -1
  %81 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::OnceCallback"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::OnceCallback"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -2
  %86 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -2
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.base::OnceCallback"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.base::OnceCallback"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %87, align 8
  %91 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -3
  %92 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -3
  %93 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.base::OnceCallback"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.base::OnceCallback"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %93, align 8
  %97 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -4
  %98 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -4
  %99 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.base::OnceCallback"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.base::OnceCallback"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %99, align 8
  %103 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -5
  %104 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -5
  %105 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.base::OnceCallback"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.base::OnceCallback"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %105, align 8
  %109 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -6
  %110 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -6
  %111 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.base::OnceCallback"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.base::OnceCallback"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %111, align 8
  %115 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -7
  %116 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -7
  %117 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.base::OnceCallback"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.base::OnceCallback"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %117, align 8
  %121 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -8
  %122 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -8
  %123 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.base::OnceCallback"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.base::OnceCallback"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %123, align 8
  %127 = icmp eq %"class.base::OnceCallback"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.base::OnceCallback"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.base::OnceCallback"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.base::OnceCallback"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.base::OnceCallback"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.base::OnceCallback"*
  %138 = icmp eq %"class.base::OnceCallback"* %133, %137
  br i1 %138, label %144, label %139

139:                                              ; preds = %132, %139
  %140 = phi %"class.base::OnceCallback"* [ %141, %139 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %140, i64 -1
  %142 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %141, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %142) #13
  %143 = icmp eq %"class.base::OnceCallback"* %141, %137
  br i1 %143, label %144, label %139

144:                                              ; preds = %139, %132
  %145 = icmp eq i64 %135, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %147) #14
  br label %148

148:                                              ; preds = %144, %146
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_115ChildrenDeleterEFvPciEJ13scoped_refptrIS4_ES5_iEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i32*
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %12
  %16 = bitcast i8* %15 to %"class.(anonymous namespace)::ChildrenDeleter"*
  %17 = and i64 %9, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %9, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.(anonymous namespace)::ChildrenDeleter"*, i8*, i32)**
  %25 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*, i8*, i32)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*, i8*, i32)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %9 to void (%"class.(anonymous namespace)::ChildrenDeleter"*, i8*, i32)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.(anonymous namespace)::ChildrenDeleter"*, i8*, i32)* [ %25, %19 ], [ %27, %26 ]
  %30 = load i8*, i8** %5, align 8
  %31 = load i32, i32* %7, align 4
  tail call void %29(%"class.(anonymous namespace)::ChildrenDeleter"* %16, i8* %30, i32 %31) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN12_GLOBAL__N_115ChildrenDeleterEFvPciEJ13scoped_refptrIS3_ES4_iEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.(anonymous namespace)::ChildrenDeleter"**
  %6 = load %"class.(anonymous namespace)::ChildrenDeleter"*, %"class.(anonymous namespace)::ChildrenDeleter"** %5, align 8
  %7 = icmp eq %"class.(anonymous namespace)::ChildrenDeleter"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %9, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #13
  %11 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %9, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %9, i64 -2
  %16 = bitcast %"class.base::RefCounted.46"* %15 to %"class.(anonymous namespace)::ChildrenDeleter"*
  %17 = bitcast %"class.base::RefCounted.46"* %15 to void (%"class.(anonymous namespace)::ChildrenDeleter"*)***
  %18 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)**, void (%"class.(anonymous namespace)::ChildrenDeleter"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %18, i64 2
  %20 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %19, align 8
  tail call void %20(%"class.(anonymous namespace)::ChildrenDeleter"* nonnull %16) #13
  br label %21

21:                                               ; preds = %3, %8, %14
  %22 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #14
  br label %23

23:                                               ; preds = %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_115ChildrenDeleterEFvN10disk_cache4AddrEiEJ13scoped_refptrIS4_ES6_iEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.std::__1::tuple.131"*
  %5 = getelementptr inbounds %"class.std::__1::tuple.131", %"class.std::__1::tuple.131"* %4, i64 0, i32 0, i32 2, i32 0
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  %14 = bitcast i8* %13 to %"class.(anonymous namespace)::ChildrenDeleter"*
  %15 = and i64 %7, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %7, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.(anonymous namespace)::ChildrenDeleter"*, i32, i32)**
  %23 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*, i32, i32)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*, i32, i32)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %7 to void (%"class.(anonymous namespace)::ChildrenDeleter"*, i32, i32)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.(anonymous namespace)::ChildrenDeleter"*, i32, i32)* [ %23, %17 ], [ %25, %24 ]
  %28 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %29 = bitcast void (%"class.base::internal::BindStateBase"*)** %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = load i32, i32* %5, align 4
  tail call void %27(%"class.(anonymous namespace)::ChildrenDeleter"* %14, i32 %30, i32 %31) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN12_GLOBAL__N_115ChildrenDeleterEFvN10disk_cache4AddrEiEJ13scoped_refptrIS3_ES5_iEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.(anonymous namespace)::ChildrenDeleter"**
  %6 = load %"class.(anonymous namespace)::ChildrenDeleter"*, %"class.(anonymous namespace)::ChildrenDeleter"** %5, align 8
  %7 = icmp eq %"class.(anonymous namespace)::ChildrenDeleter"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.(anonymous namespace)::ChildrenDeleter", %"class.(anonymous namespace)::ChildrenDeleter"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %9, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #13
  %11 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %9, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::RefCounted.46", %"class.base::RefCounted.46"* %9, i64 -2
  %16 = bitcast %"class.base::RefCounted.46"* %15 to %"class.(anonymous namespace)::ChildrenDeleter"*
  %17 = bitcast %"class.base::RefCounted.46"* %15 to void (%"class.(anonymous namespace)::ChildrenDeleter"*)***
  %18 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)**, void (%"class.(anonymous namespace)::ChildrenDeleter"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %18, i64 2
  %20 = load void (%"class.(anonymous namespace)::ChildrenDeleter"*)*, void (%"class.(anonymous namespace)::ChildrenDeleter"*)** %19, align 8
  tail call void %20(%"class.(anonymous namespace)::ChildrenDeleter"* nonnull %16) #13
  br label %21

21:                                               ; preds = %3, %8, %14
  %22 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #14
  br label %23

23:                                               ; preds = %21, %1
  ret void
}

declare void @_ZN3net15WrappedIOBufferC1EPKc(%"class.net::WrappedIOBuffer"*, i8*) unnamed_addr #1

declare void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"*, i64) unnamed_addr #1

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

declare void @_ZN10disk_cache41CreateNetLogGetAvailableRangeResultParamsEli(%"class.base::Value"* sret, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN10disk_cache13SparseControlEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.disk_cache::SparseControl"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.disk_cache::SparseControl"*, i32)**
  %22 = load void (%"class.disk_cache::SparseControl"*, i32)*, void (%"class.disk_cache::SparseControl"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.disk_cache::SparseControl"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.disk_cache::SparseControl"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.disk_cache::SparseControl"* %13, i32 %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN10disk_cache13SparseControlEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZZN10disk_cache13SparseControl12DoChildrenIOEvENK3$_0clEv: argument 0"}
!7 = distinct !{!7, !"_ZZN10disk_cache13SparseControl12DoChildrenIOEvENK3$_0clEv"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_115ChildrenDeleterEFvPciEJRPS4_RS5_RiEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_115ChildrenDeleterEFvPciEJRPS4_RS5_RiEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIMN12_GLOBAL__N_115ChildrenDeleterEFvPciEJRPS2_RS3_RiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIMN12_GLOBAL__N_115ChildrenDeleterEFvPciEJRPS2_RS3_RiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_115ChildrenDeleterEFvN10disk_cache4AddrEiEJRPS4_RS6_RiEEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_115ChildrenDeleterEFvN10disk_cache4AddrEiEJRPS4_RS6_RiEEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceIMN12_GLOBAL__N_115ChildrenDeleterEFvN10disk_cache4AddrEiEJRPS2_RS4_RiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceIMN12_GLOBAL__N_115ChildrenDeleterEFvN10disk_cache4AddrEiEJRPS2_RS4_RiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN10disk_cache13SparseControl16GenerateChildKeyEv: argument 0"}
!20 = distinct !{!20, !"_ZN10disk_cache13SparseControl16GenerateChildKeyEv"}
!21 = !{!22, !19}
!22 = distinct !{!22, !23, !"_ZN12_GLOBAL__N_117GenerateChildNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEll: argument 0"}
!23 = distinct !{!23, !"_ZN12_GLOBAL__N_117GenerateChildNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEll"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN12_GLOBAL__N_117GenerateChildNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEll: argument 0"}
!26 = distinct !{!26, !"_ZN12_GLOBAL__N_117GenerateChildNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEll"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN10disk_cache13SparseControlEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN10disk_cache13SparseControlEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIMN10disk_cache13SparseControlEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIMN10disk_cache13SparseControlEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN12_GLOBAL__N_117GenerateChildNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEll: argument 0"}
!34 = distinct !{!34, !"_ZN12_GLOBAL__N_117GenerateChildNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEll"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_115ChildrenDeleterEFvvEJPS4_EEEDcOT0_DpOT1_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_115ChildrenDeleterEFvvEJPS4_EEEDcOT0_DpOT1_"}
!38 = distinct !{!38, !39, !"_ZN4base8BindOnceIMN12_GLOBAL__N_115ChildrenDeleterEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8BindOnceIMN12_GLOBAL__N_115ChildrenDeleterEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!40 = distinct !{!40, !41}
!41 = !{!"llvm.loop.unroll.disable"}
