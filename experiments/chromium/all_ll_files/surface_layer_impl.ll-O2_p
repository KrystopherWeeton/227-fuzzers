; ModuleID = '../../cc/layers/surface_layer_impl.cc'
source_filename = "../../cc/layers/surface_layer_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.cc::SurfaceLayerImpl" = type <{ %"class.cc::LayerImpl.base", [7 x i8], %"class.base::RepeatingCallback.1199", %"class.viz::SurfaceRange", %"class.absl::optional.1200", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1173", %"class.std::__1::unique_ptr.1193", i8 }>
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.1163" }
%"class.base::flat_map.1163" = type { %"class.base::internal::flat_tree.1164" }
%"class.base::internal::flat_tree.1164" = type { %"class.std::__1::vector.1165" }
%"class.std::__1::vector.1165" = type { %"class.std::__1::__vector_base.1166" }
%"class.std::__1::__vector_base.1166" = type { %"struct.std::__1::pair.1167"*, %"struct.std::__1::pair.1167"*, %"class.std::__1::__compressed_pair.1168" }
%"struct.std::__1::pair.1167" = type opaque
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"struct.std::__1::pair.1167"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.1173" = type { %"class.std::__1::__compressed_pair.1174" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.1176", %"class.std::__1::vector.1176", %"class.std::__1::vector.1183" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.1176" = type { %"class.std::__1::__vector_base.1177" }
%"class.std::__1::__vector_base.1177" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { i8** }
%"class.std::__1::vector.1183" = type { %"class.std::__1::__vector_base.1184" }
%"class.std::__1::__vector_base.1184" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.1185" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.1193" = type { %"class.std::__1::__compressed_pair.1194" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { %"class.cc::Region"* }
%"class.base::RepeatingCallback.1199" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.88 }
%class.scoped_refptr.88 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.89", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.89" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.604", %"class.viz::SurfaceId" }
%"class.absl::optional.604" = type { %"class.absl::optional_internal::optional_data.605" }
%"class.absl::optional_internal::optional_data.605" = type { %"class.absl::optional_internal::optional_data_base.606" }
%"class.absl::optional_internal::optional_data_base.606" = type { %"class.absl::optional_internal::optional_data_dtor_base.607" }
%"class.absl::optional_internal::optional_data_dtor_base.607" = type { i8, %union.anon.608 }
%union.anon.608 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1200" = type { %"class.absl::optional_internal::optional_data.1201" }
%"class.absl::optional_internal::optional_data.1201" = type { %"class.absl::optional_internal::optional_data_base.1202" }
%"class.absl::optional_internal::optional_data_base.1202" = type { %"class.absl::optional_internal::optional_data_dtor_base.1203" }
%"class.absl::optional_internal::optional_data_dtor_base.1203" = type { i8, %union.anon.1204 }
%union.anon.1204 = type { i32 }
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection.978", %class.scoped_refptr.979, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.985, %"class.std::__1::vector.989", %"class.std::__1::unordered_map.1002", %"class.base::internal::flat_tree.1026", %"class.std::__1::unordered_map.1034", %"class.std::__1::unordered_map.1058", %"class.std::__1::unordered_map.1082", %"class.std::__1::unordered_map.1082", %"class.base::flat_map.1106", %"class.std::__1::vector.1116", %"class.base::internal::flat_tree.1123", %"class.base::internal::flat_tree.601", %"class.std::__1::vector.1124", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.117", %"class.std::__1::vector.117", %"class.std::__1::vector.1131", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.1138, %class.scoped_refptr.1138, %"class.std::__1::unique_ptr.1143", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.636", %"class.std::__1::vector.759", %"class.std::__1::unique_ptr.1149", %"class.std::__1::vector.1155" }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.60", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.105", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.111", %"class.gfx::Vector2dF", %"class.std::__1::vector.117", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.397", %"class.std::__1::unique_ptr.409", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.466", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.472", %"class.std::__1::unique_ptr.478", %"class.std::__1::set.484", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.494", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.535", %"class.base::RepeatingCallback.331", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.541", i8, i8, i8, i32, %"class.std::__1::unique_ptr.551", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.557", %"class.std::__1::vector.563", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.583", %"class.std::__1::unique_ptr.595", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.601", %"class.absl::optional.614", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.85", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.689", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.767", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.810", %"class.base::WeakPtrFactory.817" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.35", [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.45, %class.scoped_refptr.46, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.47", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.45 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.46 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.54", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.54" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.55" }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i8 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.85", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.93" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.75"*, i64 }
%"class.std::__1::unique_ptr.75" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.76" }
%"class.std::__1::__tree.76" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.93" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.100" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.100" = type { %"class.base::internal::VectorBuffer.101", i64, i64 }
%"class.base::internal::VectorBuffer.101" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.cc::LayerTreeImpl"* }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.125", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.131", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.358", %"class.std::__1::vector.213", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.396", %"class.base::WeakPtrFactory.396" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.131" = type { %"class.std::__1::__hash_table.132" }
%"class.std::__1::__hash_table.132" = type <{ %"class.std::__1::unique_ptr.133", %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.153", [4 x i8] }>
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135", %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.std::__1::__hash_node_base.136"** }
%"struct.std::__1::__hash_node_base.136" = type { %"struct.std::__1::__hash_node_base.136"* }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.std::__1::__bucket_list_deallocator.138" }
%"class.std::__1::__bucket_list_deallocator.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.std::__1::__hash_node_base.136" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.158, %"class.base::WeakPtr", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.160", %"class.base::flat_map.190", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.200", %"class.std::__1::map.200", i8, %"class.std::__1::vector.209", %"class.base::WeakPtrFactory.225" }
%class.scoped_refptr.158 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.159 }
%class.scoped_refptr.159 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.185" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.180", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.163, %"class.gfx::Rect", i32, %class.sk_sp.168, %class.sk_sp.176, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.177 }
%class.sk_sp.163 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.164", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { i8* }
%class.sk_sp.168 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.169" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.162, i32, i32 }
%class.sk_sp.162 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.55" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.171" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.176 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.177 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.178", [4 x i8] }>
%"class.base::RefCountedThreadSafe.178" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.179 }
%union.anon.179 = type { i64 }
%"class.absl::optional.180" = type { %"class.absl::optional_internal::optional_data.181" }
%"class.absl::optional_internal::optional_data.181" = type { %"class.absl::optional_internal::optional_data_base.182" }
%"class.absl::optional_internal::optional_data_base.182" = type { %"class.absl::optional_internal::optional_data_dtor_base.183" }
%"class.absl::optional_internal::optional_data_dtor_base.183" = type { i8, %union.anon.184 }
%union.anon.184 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.190" = type { %"class.base::internal::flat_tree.191" }
%"class.base::internal::flat_tree.191" = type { %"class.std::__1::vector.192" }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"struct.std::__1::pair.194"*, %"struct.std::__1::pair.194"*, %"class.std::__1::__compressed_pair.195" }
%"struct.std::__1::pair.194" = type opaque
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.std::__1::pair.194"* }
%"class.std::__1::map.200" = type { %"class.std::__1::__tree.201" }
%"class.std::__1::__tree.201" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.202", %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.220" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback", %class.scoped_refptr.211, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.211 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.213", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.212", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.212" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.225" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.226", i8, %class.scoped_refptr.158, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.236" }
%"class.base::flat_map.226" = type { %"class.base::internal::flat_tree.227" }
%"class.base::internal::flat_tree.227" = type { %"class.std::__1::vector.228" }
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { %"struct.std::__1::pair.230"*, %"struct.std::__1::pair.230"*, %"class.std::__1::__compressed_pair.231" }
%"struct.std::__1::pair.230" = type { i32, %"class.std::__1::unique_ptr.1370" }
%"class.std::__1::unique_ptr.1370" = type { %"class.std::__1::__compressed_pair.1371" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.1372" }
%"struct.std::__1::__compressed_pair_elem.1372" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.std::__1::pair.230"* }
%"class.base::WeakPtrFactory.236" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.237", %"class.base::internal::flat_tree.237", %"class.std::__1::vector.245", i32, %"class.absl::optional.252", %"class.std::__1::unordered_map.257", %"class.std::__1::unordered_map.281", %"class.base::flat_map.305", %"class.base::WeakPtrFactory.315" }
%"class.base::internal::flat_tree.237" = type { %"class.std::__1::vector.238" }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { i32*, i32*, %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { i32* }
%"class.std::__1::vector.245" = type { %"class.std::__1::__vector_base.246" }
%"class.std::__1::__vector_base.246" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.247" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.252" = type { %"class.absl::optional_internal::optional_data.253" }
%"class.absl::optional_internal::optional_data.253" = type { %"class.absl::optional_internal::optional_data_base.254" }
%"class.absl::optional_internal::optional_data_base.254" = type { %"class.absl::optional_internal::optional_data_dtor_base.255" }
%"class.absl::optional_internal::optional_data_dtor_base.255" = type { i8, %union.anon.256 }
%union.anon.256 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.257" = type { %"class.std::__1::__hash_table.258" }
%"class.std::__1::__hash_table.258" = type <{ %"class.std::__1::unique_ptr.259", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.277", [4 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.262"** }
%"struct.std::__1::__hash_node_base.262" = type { %"struct.std::__1::__hash_node_base.262"* }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::__bucket_list_deallocator.264" }
%"class.std::__1::__bucket_list_deallocator.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base.262" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::unordered_map.281" = type { %"class.std::__1::__hash_table.282" }
%"class.std::__1::__hash_table.282" = type <{ %"class.std::__1::unique_ptr.283", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", %"class.std::__1::__compressed_pair.301", [4 x i8] }>
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285", %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::__hash_node_base.286"** }
%"struct.std::__1::__hash_node_base.286" = type { %"struct.std::__1::__hash_node_base.286"* }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.std::__1::__bucket_list_deallocator.288" }
%"class.std::__1::__bucket_list_deallocator.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::__hash_node_base.286" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.base::flat_map.305" = type { %"class.base::internal::flat_tree.306" }
%"class.base::internal::flat_tree.306" = type { %"class.std::__1::vector.307" }
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"*, %"class.std::__1::__compressed_pair.310" }
%"struct.std::__1::pair.309" = type { i32, i32 }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.std::__1::pair.309"* }
%"class.base::WeakPtrFactory.315" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.316", %"class.std::__1::vector.324" }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.319" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.318, i16, i16, i32 }
%class.scoped_refptr.318 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.326" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.331", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.332" }
%"class.base::WeakPtrFactory.332" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.333" }
%"class.std::__1::__hash_table.333" = type <{ %"class.std::__1::unique_ptr.334", %"class.std::__1::__compressed_pair.344", %"class.std::__1::__compressed_pair.349", %"class.std::__1::__compressed_pair.353", [4 x i8] }>
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336", %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::__hash_node_base.337"** }
%"struct.std::__1::__hash_node_base.337" = type { %"struct.std::__1::__hash_node_base.337"* }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.std::__1::__bucket_list_deallocator.339" }
%"class.std::__1::__bucket_list_deallocator.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::__hash_node_base.337" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::unordered_map.358" = type { %"class.std::__1::__hash_table.359" }
%"class.std::__1::__hash_table.359" = type <{ %"class.std::__1::unique_ptr.360", %"class.std::__1::__compressed_pair.370", %"class.std::__1::__compressed_pair.375", %"class.std::__1::__compressed_pair.378", [4 x i8] }>
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362", %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"struct.std::__1::__hash_node_base.363"** }
%"struct.std::__1::__hash_node_base.363" = type { %"struct.std::__1::__hash_node_base.363"* }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.std::__1::__bucket_list_deallocator.365" }
%"class.std::__1::__bucket_list_deallocator.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"struct.std::__1::__hash_node_base.363" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %class.scoped_refptr.211*, %class.scoped_refptr.211*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %class.scoped_refptr.211* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.382" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.388", %"class.base::WeakPtrFactory.389" }
%"class.base::OnceCallback.388" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.389" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.390, i8, [7 x i8] }>
%class.scoped_refptr.390 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.391", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.391" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.392" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::WeakPtrFactory.396" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.400", %"class.absl::optional.400", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.400" = type { %"class.absl::optional_internal::optional_data.401" }
%"class.absl::optional_internal::optional_data.401" = type { %"class.absl::optional_internal::optional_data_base.402" }
%"class.absl::optional_internal::optional_data_base.402" = type { %"class.absl::optional_internal::optional_data_dtor_base.403" }
%"class.absl::optional_internal::optional_data_dtor_base.403" = type { i8, %union.anon.404 }
%union.anon.404 = type { %"struct.std::__1::pair.405" }
%"struct.std::__1::pair.405" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.425", %"class.absl::optional.425", %"class.absl::optional.425", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.444, %"class.absl::optional.445", %"class.std::__1::map.450" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.421" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.415"**, %"struct.std::__1::pair.415"**, %"struct.std::__1::pair.415"**, %"class.std::__1::__compressed_pair.416" }
%"struct.std::__1::pair.415" = type opaque
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"struct.std::__1::pair.415"** }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.425" = type { %"class.absl::optional_internal::optional_data.426" }
%"class.absl::optional_internal::optional_data.426" = type { %"class.absl::optional_internal::optional_data_base.427" }
%"class.absl::optional_internal::optional_data_base.427" = type { %"class.absl::optional_internal::optional_data_dtor_base.428" }
%"class.absl::optional_internal::optional_data_dtor_base.428" = type { i8, %union.anon.429 }
%union.anon.429 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.430", %"class.base::circular_deque.431", %"class.std::__1::map.433", %"class.absl::optional" }
%"class.base::RepeatingCallback.430" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::circular_deque.431" = type { %"class.base::internal::VectorBuffer.432", i64, i64 }
%"class.base::internal::VectorBuffer.432" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.433" = type { %"class.std::__1::__tree.434" }
%"class.std::__1::__tree.434" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.435", %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%struct.anon.444 = type { double, double }
%"class.absl::optional.445" = type { %"class.absl::optional_internal::optional_data.446" }
%"class.absl::optional_internal::optional_data.446" = type { %"class.absl::optional_internal::optional_data_base.447" }
%"class.absl::optional_internal::optional_data_base.447" = type { %"class.absl::optional_internal::optional_data_dtor_base.448" }
%"class.absl::optional_internal::optional_data_dtor_base.448" = type { i8, %union.anon.449 }
%union.anon.449 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.450" = type { %"class.std::__1::__tree.451" }
%"class.std::__1::__tree.451" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.452", %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.462" }
%"class.base::RingBuffer.462" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.494" = type { %"class.std::__1::__hash_table.495" }
%"class.std::__1::__hash_table.495" = type <{ %"class.std::__1::unique_ptr.496", %"class.std::__1::__compressed_pair.506", %"class.std::__1::__compressed_pair.511", %"class.std::__1::__compressed_pair.514", [4 x i8] }>
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498", %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"struct.std::__1::__hash_node_base.499"** }
%"struct.std::__1::__hash_node_base.499" = type { %"struct.std::__1::__hash_node_base.499"* }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.std::__1::__bucket_list_deallocator.501" }
%"class.std::__1::__bucket_list_deallocator.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.499" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.520" }
%"class.std::__1::vector.520" = type { %"class.std::__1::__vector_base.521" }
%"class.std::__1::__vector_base.521" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.527" }
%"class.std::__1::vector.527" = type { %"class.std::__1::__vector_base.528" }
%"class.std::__1::__vector_base.528" = type { %"class.std::__1::unique_ptr.529"*, %"class.std::__1::unique_ptr.529"*, %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::unique_ptr.529" = type opaque
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.std::__1::unique_ptr.529"* }
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.331" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.541" = type { %"class.std::__1::__tree.542" }
%"class.std::__1::__tree.542" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.563" = type { %"class.std::__1::__vector_base.564" }
%"class.std::__1::__vector_base.564" = type { %"struct.std::__1::pair.565"*, %"struct.std::__1::pair.565"*, %"class.std::__1::__compressed_pair.566" }
%"struct.std::__1::pair.565" = type opaque
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::pair.565"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.571", %"class.base::internal::flat_tree.237", %"class.base::internal::flat_tree.237", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.571" = type { %"class.base::internal::flat_tree.572" }
%"class.base::internal::flat_tree.572" = type { %"class.std::__1::vector.573" }
%"class.std::__1::vector.573" = type { %"class.std::__1::__vector_base.574" }
%"class.std::__1::__vector_base.574" = type { %"struct.std::__1::pair.575"*, %"struct.std::__1::pair.575"*, %"class.std::__1::__compressed_pair.576" }
%"struct.std::__1::pair.575" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.169", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1376", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1376" = type { %"class.std::__1::vector.1377" }
%"class.std::__1::vector.1377" = type { %"class.std::__1::__vector_base.1378" }
%"class.std::__1::__vector_base.1378" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1379" }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1380" }
%"struct.std::__1::__compressed_pair_elem.1380" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"struct.std::__1::pair.575"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.581", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.582" }
%"class.base::RepeatingCallback.581" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.582" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.586" }
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.absl::optional.614" = type { %"class.absl::optional_internal::optional_data.615" }
%"class.absl::optional_internal::optional_data.615" = type { %"class.absl::optional_internal::optional_data_base.616" }
%"class.absl::optional_internal::optional_data_base.616" = type { %"class.absl::optional_internal::optional_data_dtor_base.617" }
%"class.absl::optional_internal::optional_data_dtor_base.617" = type { i8, [7 x i8], %union.anon.618 }
%union.anon.618 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.619", %"struct.viz::Selection", i8, %"class.absl::optional.624", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.629", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.619" = type { %"class.absl::optional_internal::optional_data.620" }
%"class.absl::optional_internal::optional_data.620" = type { %"class.absl::optional_internal::optional_data_base.621" }
%"class.absl::optional_internal::optional_data_base.621" = type { %"class.absl::optional_internal::optional_data_dtor_base.622" }
%"class.absl::optional_internal::optional_data_dtor_base.622" = type { i8, %union.anon.623 }
%union.anon.623 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.624" = type { %"class.absl::optional_internal::optional_data.625" }
%"class.absl::optional_internal::optional_data.625" = type { %"class.absl::optional_internal::optional_data_base.626" }
%"class.absl::optional_internal::optional_data_base.626" = type { %"class.absl::optional_internal::optional_data_dtor_base.627" }
%"class.absl::optional_internal::optional_data_dtor_base.627" = type { i8, %union.anon.628 }
%union.anon.628 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.629" = type { %"class.absl::optional_internal::optional_data.630" }
%"class.absl::optional_internal::optional_data.630" = type { %"class.absl::optional_internal::optional_data_base.631" }
%"class.absl::optional_internal::optional_data_base.631" = type { %"class.absl::optional_internal::optional_data_dtor_base.632" }
%"class.absl::optional_internal::optional_data_dtor_base.632" = type { i8, %union.anon.633 }
%union.anon.633 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.634" }
%"class.base::circular_deque.634" = type { %"class.base::internal::VectorBuffer.635", i64, i64 }
%"class.base::internal::VectorBuffer.635" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.636", %"class.std::__1::vector.636" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.644", %"class.base::flat_map.650", %"class.base::flat_map.660", %"class.base::RepeatingCallback.670", %"class.std::__1::vector.671", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.679", i64, i64 }
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.650" = type { %"class.base::internal::flat_tree.651" }
%"class.base::internal::flat_tree.651" = type { %"class.std::__1::vector.652" }
%"class.std::__1::vector.652" = type { %"class.std::__1::__vector_base.653" }
%"class.std::__1::__vector_base.653" = type { %"struct.std::__1::pair.654"*, %"struct.std::__1::pair.654"*, %"class.std::__1::__compressed_pair.655" }
%"struct.std::__1::pair.654" = type opaque
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"struct.std::__1::pair.654"* }
%"class.base::flat_map.660" = type { %"class.base::internal::flat_tree.661" }
%"class.base::internal::flat_tree.661" = type { %"class.std::__1::vector.662" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"struct.std::__1::pair.664"*, %"struct.std::__1::pair.664"*, %"class.std::__1::__compressed_pair.665" }
%"struct.std::__1::pair.664" = type opaque
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"struct.std::__1::pair.664"* }
%"class.base::RepeatingCallback.670" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.671" = type { %"class.std::__1::__vector_base.672" }
%"class.std::__1::__vector_base.672" = type { %"class.std::__1::unique_ptr.673"*, %"class.std::__1::unique_ptr.673"*, %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::unique_ptr.673" = type opaque
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.std::__1::unique_ptr.673"* }
%"class.base::flat_map.679" = type { %"class.base::internal::flat_tree.680" }
%"class.base::internal::flat_tree.680" = type { %"class.std::__1::vector.681" }
%"class.std::__1::vector.681" = type { %"class.std::__1::__vector_base.682" }
%"class.std::__1::__vector_base.682" = type { %"struct.std::__1::pair.683"*, %"struct.std::__1::pair.683"*, %"class.std::__1::__compressed_pair.684" }
%"struct.std::__1::pair.683" = type opaque
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"struct.std::__1::pair.683"* }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.695", %"class.base::internal::flat_tree.705" }
%"class.base::flat_map.695" = type { %"class.base::internal::flat_tree.696" }
%"class.base::internal::flat_tree.696" = type { %"class.std::__1::vector.697" }
%"class.std::__1::vector.697" = type { %"class.std::__1::__vector_base.698" }
%"class.std::__1::__vector_base.698" = type { %"struct.std::__1::pair.699"*, %"struct.std::__1::pair.699"*, %"class.std::__1::__compressed_pair.700" }
%"struct.std::__1::pair.699" = type opaque
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::pair.699"* }
%"class.base::internal::flat_tree.705" = type { %"class.std::__1::vector.706" }
%"class.std::__1::vector.706" = type { %"class.std::__1::__vector_base.707" }
%"class.std::__1::__vector_base.707" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.718" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.708", %"class.absl::optional.713", %"struct.cc::ElementId" }
%"class.absl::optional.708" = type { %"class.absl::optional_internal::optional_data.709" }
%"class.absl::optional_internal::optional_data.709" = type { %"class.absl::optional_internal::optional_data_base.710" }
%"class.absl::optional_internal::optional_data_base.710" = type { %"class.absl::optional_internal::optional_data_dtor_base.711" }
%"class.absl::optional_internal::optional_data_dtor_base.711" = type { i8, %union.anon.712 }
%union.anon.712 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.713" = type { %"class.absl::optional_internal::optional_data.714" }
%"class.absl::optional_internal::optional_data.714" = type { %"class.absl::optional_internal::optional_data_base.715" }
%"class.absl::optional_internal::optional_data_base.715" = type { %"class.absl::optional_internal::optional_data_dtor_base.716" }
%"class.absl::optional_internal::optional_data_dtor_base.716" = type { i8, %union.anon.717 }
%union.anon.717 = type { i32 }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.735" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.723", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.723" = type { %"class.std::__1::__deque_base.724" }
%"class.std::__1::__deque_base.724" = type { %"struct.std::__1::__split_buffer.725", i64, %"class.std::__1::__compressed_pair.731" }
%"struct.std::__1::__split_buffer.725" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.726" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::circular_deque.735" = type { %"class.base::internal::VectorBuffer.736", i64, i64 }
%"class.base::internal::VectorBuffer.736" = type { %"struct.std::__1::pair.737"*, i64 }
%"struct.std::__1::pair.737" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.738", %"class.std::__1::map.743", %"class.std::__1::map.743" }
%"class.absl::optional.738" = type { %"class.absl::optional_internal::optional_data.739" }
%"class.absl::optional_internal::optional_data.739" = type { %"class.absl::optional_internal::optional_data_base.740" }
%"class.absl::optional_internal::optional_data_base.740" = type { %"class.absl::optional_internal::optional_data_dtor_base.741" }
%"class.absl::optional_internal::optional_data_dtor_base.741" = type { i8, [3 x i8], %union.anon.742 }
%union.anon.742 = type { %"class.gfx::Transform" }
%"class.std::__1::map.743" = type { %"class.std::__1::__tree.744" }
%"class.std::__1::__tree.744" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.745", %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.752", %"class.std::__1::vector.759" }
%"class.std::__1::vector.752" = type { %"class.std::__1::__vector_base.753" }
%"class.std::__1::__vector_base.753" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.754" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.331", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.773" }
%"class.base::WeakPtrFactory.773" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.774", %"class.std::__1::map.781", i64 }
%"class.std::__1::list.774" = type { %"class.std::__1::__list_imp.775" }
%"class.std::__1::__list_imp.775" = type { %"struct.std::__1::__list_node_base.776", %"class.std::__1::__compressed_pair.777" }
%"struct.std::__1::__list_node_base.776" = type { %"struct.std::__1::__list_node_base.776"*, %"struct.std::__1::__list_node_base.776"* }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::map.781" = type { %"class.std::__1::__tree.782" }
%"class.std::__1::__tree.782" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.783", %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.792", %"class.base::internal::flat_tree.802", %"class.base::internal::flat_tree.802" }
%"class.base::flat_map.792" = type { %"class.base::internal::flat_tree.793" }
%"class.base::internal::flat_tree.793" = type { %"class.std::__1::vector.794" }
%"class.std::__1::vector.794" = type { %"class.std::__1::__vector_base.795" }
%"class.std::__1::__vector_base.795" = type { %"struct.std::__1::pair.796"*, %"struct.std::__1::pair.796"*, %"class.std::__1::__compressed_pair.797" }
%"struct.std::__1::pair.796" = type opaque
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"struct.std::__1::pair.796"* }
%"class.base::internal::flat_tree.802" = type { %"class.std::__1::vector.803" }
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.810" = type { %"class.std::__1::__vector_base.811" }
%"class.std::__1::__vector_base.811" = type { i32*, i32*, %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { i32* }
%"class.base::WeakPtrFactory.817" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::HeadsUpDisplayLayerImpl" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.818", %"class.base::flat_map.818", %"class.base::flat_map.818", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.818" = type { %"class.base::internal::flat_tree.819" }
%"class.base::internal::flat_tree.819" = type { %"class.std::__1::vector.820" }
%"class.std::__1::vector.820" = type { %"class.std::__1::__vector_base.821" }
%"class.std::__1::__vector_base.821" = type { %"struct.std::__1::pair.822"*, %"struct.std::__1::pair.822"*, %"class.std::__1::__compressed_pair.823" }
%"struct.std::__1::pair.822" = type opaque
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::pair.822"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.238", %"class.std::__1::vector.835", %"class.std::__1::vector.842" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.828", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.828" = type { %"class.std::__1::__vector_base.829" }
%"class.std::__1::__vector_base.829" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.830" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.835" = type { %"class.std::__1::__vector_base.836" }
%"class.std::__1::__vector_base.836" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.837" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.844" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.849", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.907" }
%"class.cc::PropertyTree.849" = type { i32 (...)**, %"class.std::__1::vector.850", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.850" = type { %"class.std::__1::__vector_base.851" }
%"class.std::__1::__vector_base.851" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.879" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.873", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.852" }
%"class.std::__1::vector.852" = type { %"class.std::__1::__vector_base.853" }
%"class.std::__1::__vector_base.853" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.868" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.854, [20 x float], i32, [4 x i8], %"class.std::__1::vector.861", i32, [4 x i8] }>
%class.sk_sp.854 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.855, i32, %"class.absl::optional.856", i8, i32 }
%class.sk_sp.855 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.856" = type { %"class.absl::optional_internal::optional_data.857" }
%"class.absl::optional_internal::optional_data.857" = type { %"class.absl::optional_internal::optional_data_base.858" }
%"class.absl::optional_internal::optional_data_base.858" = type { %"class.absl::optional_internal::optional_data_dtor_base.859" }
%"class.absl::optional_internal::optional_data_dtor_base.859" = type { i8, %union.anon.860 }
%union.anon.860 = type { %struct.SkRect }
%"class.std::__1::vector.861" = type { %"class.std::__1::__vector_base.862" }
%"class.std::__1::__vector_base.862" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.873" = type { %"class.absl::optional_internal::optional_data.874" }
%"class.absl::optional_internal::optional_data.874" = type { %"class.absl::optional_internal::optional_data_base.875" }
%"class.absl::optional_internal::optional_data_base.875" = type { %"class.absl::optional_internal::optional_data_dtor_base.876" }
%"class.absl::optional_internal::optional_data_dtor_base.876" = type { i8, %union.anon.877 }
%union.anon.877 = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.878" }
%"class.base::internal::flat_tree.878" = type { %"class.std::__1::vector.810" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.884" }
%"class.std::__1::__hash_table.884" = type <{ %"class.std::__1::unique_ptr.885", %"class.std::__1::__compressed_pair.895", %"class.std::__1::__compressed_pair.900", %"class.std::__1::__compressed_pair.903", [4 x i8] }>
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887", %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"struct.std::__1::__hash_node_base.888"** }
%"struct.std::__1::__hash_node_base.888" = type { %"struct.std::__1::__hash_node_base.888"* }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"class.std::__1::__bucket_list_deallocator.890" }
%"class.std::__1::__bucket_list_deallocator.890" = type { %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"struct.std::__1::__hash_node_base.888" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::vector.907" = type { %"class.std::__1::__vector_base.908" }
%"class.std::__1::__vector_base.908" = type { %"class.std::__1::unique_ptr.909"*, %"class.std::__1::unique_ptr.909"*, %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.912" }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"class.std::__1::unique_ptr.909"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.926" }
%"class.cc::PropertyTree.926" = type { i32 (...)**, %"class.std::__1::vector.927", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.927" = type { %"class.std::__1::__vector_base.928" }
%"class.std::__1::__vector_base.928" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.929" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.934", i32, %"class.base::flat_map.942", %"class.base::flat_map.952", %"class.base::WeakPtr.962" }
%"class.cc::PropertyTree.934" = type { i32 (...)**, %"class.std::__1::vector.935", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.935" = type { %"class.std::__1::__vector_base.936" }
%"class.std::__1::__vector_base.936" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.937" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.942" = type { %"class.base::internal::flat_tree.943" }
%"class.base::internal::flat_tree.943" = type { %"class.std::__1::vector.944" }
%"class.std::__1::vector.944" = type { %"class.std::__1::__vector_base.945" }
%"class.std::__1::__vector_base.945" = type { %"struct.std::__1::pair.946"*, %"struct.std::__1::pair.946"*, %"class.std::__1::__compressed_pair.947" }
%"struct.std::__1::pair.946" = type opaque
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"struct.std::__1::pair.946"* }
%"class.base::flat_map.952" = type { %"class.base::internal::flat_tree.953" }
%"class.base::internal::flat_tree.953" = type { %"class.std::__1::vector.954" }
%"class.std::__1::vector.954" = type { %"class.std::__1::__vector_base.955" }
%"class.std::__1::__vector_base.955" = type { %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"*, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"* }
%"class.base::WeakPtr.962" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.963", %"class.std::__1::vector.970" }
%"class.std::__1::vector.963" = type { %"class.std::__1::__vector_base.964" }
%"class.std::__1::__vector_base.964" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.965" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.970" = type { %"class.std::__1::__vector_base.971" }
%"class.std::__1::__vector_base.971" = type { %"class.std::__1::vector.972"*, %"class.std::__1::vector.972"*, %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::vector.972" = type opaque
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.std::__1::vector.972"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection.978" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.979 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.980" }
%"class.absl::optional.980" = type { %"class.absl::optional_internal::optional_data.981" }
%"class.absl::optional_internal::optional_data.981" = type { %"class.absl::optional_internal::optional_data_base.982" }
%"class.absl::optional_internal::optional_data_base.982" = type { %"class.absl::optional_internal::optional_data_dtor_base.983" }
%"class.absl::optional_internal::optional_data_dtor_base.983" = type { i8, %union.anon.984 }
%union.anon.984 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%class.scoped_refptr.985 = type { %"class.cc::SyncedProperty.986"* }
%"class.cc::SyncedProperty.986" = type <{ %"class.base::RefCounted.987", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.987" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.989" = type { %"class.std::__1::__vector_base.990" }
%"class.std::__1::__vector_base.990" = type { %"class.std::__1::unique_ptr.991"*, %"class.std::__1::unique_ptr.991"*, %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"class.cc::LayerImpl"* }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1173", %"class.std::__1::unique_ptr.1193", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.std::__1::unique_ptr.991"* }
%"class.std::__1::unordered_map.1002" = type { %"class.std::__1::__hash_table.1003" }
%"class.std::__1::__hash_table.1003" = type <{ %"class.std::__1::unique_ptr.1004", %"class.std::__1::__compressed_pair.1014", %"class.std::__1::__compressed_pair.1019", %"class.std::__1::__compressed_pair.1022", [4 x i8] }>
%"class.std::__1::unique_ptr.1004" = type { %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006", %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.std::__1::__hash_node_base.1007"** }
%"struct.std::__1::__hash_node_base.1007" = type { %"struct.std::__1::__hash_node_base.1007"* }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"class.std::__1::__bucket_list_deallocator.1009" }
%"class.std::__1::__bucket_list_deallocator.1009" = type { %"class.std::__1::__compressed_pair.1010" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"struct.std::__1::__hash_node_base.1007" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.base::internal::flat_tree.1026" = type { %"class.std::__1::vector.1027" }
%"class.std::__1::vector.1027" = type { %"class.std::__1::__vector_base.1028" }
%"class.std::__1::__vector_base.1028" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.1034" = type { %"class.std::__1::__hash_table.1035" }
%"class.std::__1::__hash_table.1035" = type <{ %"class.std::__1::unique_ptr.1036", %"class.std::__1::__compressed_pair.1046", %"class.std::__1::__compressed_pair.1051", %"class.std::__1::__compressed_pair.1054", [4 x i8] }>
%"class.std::__1::unique_ptr.1036" = type { %"class.std::__1::__compressed_pair.1037" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038", %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"struct.std::__1::__hash_node_base.1039"** }
%"struct.std::__1::__hash_node_base.1039" = type { %"struct.std::__1::__hash_node_base.1039"* }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"class.std::__1::__bucket_list_deallocator.1041" }
%"class.std::__1::__bucket_list_deallocator.1041" = type { %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"struct.std::__1::__hash_node_base.1039" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::unordered_map.1058" = type { %"class.std::__1::__hash_table.1059" }
%"class.std::__1::__hash_table.1059" = type <{ %"class.std::__1::unique_ptr.1060", %"class.std::__1::__compressed_pair.1070", %"class.std::__1::__compressed_pair.1075", %"class.std::__1::__compressed_pair.1078", [4 x i8] }>
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062", %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"struct.std::__1::__hash_node_base.1063"** }
%"struct.std::__1::__hash_node_base.1063" = type { %"struct.std::__1::__hash_node_base.1063"* }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"class.std::__1::__bucket_list_deallocator.1065" }
%"class.std::__1::__bucket_list_deallocator.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"struct.std::__1::__hash_node_base.1063" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::unordered_map.1082" = type { %"class.std::__1::__hash_table.1083" }
%"class.std::__1::__hash_table.1083" = type <{ %"class.std::__1::unique_ptr.1084", %"class.std::__1::__compressed_pair.1094", %"class.std::__1::__compressed_pair.1099", %"class.std::__1::__compressed_pair.1102", [4 x i8] }>
%"class.std::__1::unique_ptr.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086", %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"struct.std::__1::__hash_node_base.1087"** }
%"struct.std::__1::__hash_node_base.1087" = type { %"struct.std::__1::__hash_node_base.1087"* }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.std::__1::__bucket_list_deallocator.1089" }
%"class.std::__1::__bucket_list_deallocator.1089" = type { %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1087" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.base::flat_map.1106" = type { %"class.base::internal::flat_tree.1107" }
%"class.base::internal::flat_tree.1107" = type { %"class.std::__1::vector.1108" }
%"class.std::__1::vector.1108" = type { %"class.std::__1::__vector_base.1109" }
%"class.std::__1::__vector_base.1109" = type { %"struct.std::__1::pair.1110"*, %"struct.std::__1::pair.1110"*, %"class.std::__1::__compressed_pair.1111" }
%"struct.std::__1::pair.1110" = type opaque
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.1112" }
%"struct.std::__1::__compressed_pair_elem.1112" = type { %"struct.std::__1::pair.1110"* }
%"class.std::__1::vector.1116" = type { %"class.std::__1::__vector_base.1117" }
%"class.std::__1::__vector_base.1117" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.1118" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.1208", %class.scoped_refptr.1216, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.1268", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.1273", %"class.base::flat_map.1280", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1208" = type { %"class.std::__1::__compressed_pair.1209" }
%"class.std::__1::__compressed_pair.1209" = type { %"struct.std::__1::__compressed_pair_elem.1210" }
%"struct.std::__1::__compressed_pair_elem.1210" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.1211", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque.1253", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.1216, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.1211" = type { %"class.std::__1::__vector_base.1212" }
%"class.std::__1::__vector_base.1212" = type { %"class.std::__1::unique_ptr.1213"*, %"class.std::__1::unique_ptr.1213"*, %"class.std::__1::__compressed_pair.1248" }
%"class.std::__1::unique_ptr.1213" = type { %"class.std::__1::__compressed_pair.1214" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.1216, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.1219", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.1219" = type { %"class.std::__1::__hash_table.1220" }
%"class.std::__1::__hash_table.1220" = type <{ %"class.std::__1::unique_ptr.1221", %"class.std::__1::__compressed_pair.1231", %"class.std::__1::__compressed_pair.1236", %"class.std::__1::__compressed_pair.1239", [4 x i8] }>
%"class.std::__1::unique_ptr.1221" = type { %"class.std::__1::__compressed_pair.1222" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.1223", %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1223" = type { %"struct.std::__1::__hash_node_base.1224"** }
%"struct.std::__1::__hash_node_base.1224" = type { %"struct.std::__1::__hash_node_base.1224"* }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"class.std::__1::__bucket_list_deallocator.1226" }
%"class.std::__1::__bucket_list_deallocator.1226" = type { %"class.std::__1::__compressed_pair.1227" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.1232" }
%"struct.std::__1::__compressed_pair_elem.1232" = type { %"struct.std::__1::__hash_node_base.1224" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"class.std::__1::unique_ptr.1213"* }
%"class.std::__1::deque.1253" = type { %"class.std::__1::__deque_base.1254" }
%"class.std::__1::__deque_base.1254" = type { %"struct.std::__1::__split_buffer.1255", i64, %"class.std::__1::__compressed_pair.1261" }
%"struct.std::__1::__split_buffer.1255" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.1256" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.1257" }
%"struct.std::__1::__compressed_pair_elem.1257" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.1216 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1217", [4 x i8], i64, %class.scoped_refptr.1218, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.1217" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1218 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.1268" = type { %"class.absl::optional_internal::optional_data.1269" }
%"class.absl::optional_internal::optional_data.1269" = type { %"class.absl::optional_internal::optional_data_base.1270" }
%"class.absl::optional_internal::optional_data_base.1270" = type { %"class.absl::optional_internal::optional_data_dtor_base.1271" }
%"class.absl::optional_internal::optional_data_dtor_base.1271" = type { i8, %union.anon.1272 }
%union.anon.1272 = type { %"class.gfx::Size" }
%"class.std::__1::vector.1273" = type { %"class.std::__1::__vector_base.1274" }
%"class.std::__1::__vector_base.1274" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.1275" }
%"class.std::__1::__compressed_pair.1275" = type { %"struct.std::__1::__compressed_pair_elem.1276" }
%"struct.std::__1::__compressed_pair_elem.1276" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.1280" = type { %"class.base::internal::flat_tree.1281" }
%"class.base::internal::flat_tree.1281" = type { %"class.std::__1::vector.1282" }
%"class.std::__1::vector.1282" = type { %"class.std::__1::__vector_base.1283" }
%"class.std::__1::__vector_base.1283" = type { %"struct.std::__1::pair.1284"*, %"struct.std::__1::pair.1284"*, %"class.std::__1::__compressed_pair.1285" }
%"struct.std::__1::pair.1284" = type opaque
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"struct.std::__1::pair.1284"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.1119" }
%"struct.std::__1::__compressed_pair_elem.1119" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.1123" = type { %"class.std::__1::vector.1116" }
%"class.base::internal::flat_tree.601" = type { %"class.std::__1::vector.602" }
%"class.std::__1::vector.602" = type { %"class.std::__1::__vector_base.603" }
%"class.std::__1::__vector_base.603" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.viz::SurfaceRange"* }
%"class.std::__1::vector.1124" = type { %"class.std::__1::__vector_base.1125" }
%"class.std::__1::__vector_base.1125" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.1126" }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { %"class.std::__1::unique_ptr.119"*, %"class.std::__1::unique_ptr.119"*, %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.1365" }
%"class.std::__1::__compressed_pair.1365" = type { %"struct.std::__1::__compressed_pair_elem.1366" }
%"struct.std::__1::__compressed_pair_elem.1366" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.std::__1::unique_ptr.119"* }
%"class.std::__1::vector.1131" = type { %"class.std::__1::__vector_base.1132" }
%"class.std::__1::__vector_base.1132" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.1133" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.1134" }
%"struct.std::__1::__compressed_pair_elem.1134" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.1138 = type { %"class.cc::SyncedProperty.1139"* }
%"class.cc::SyncedProperty.1139" = type <{ %"class.base::RefCounted.1140", %"class.cc::AdditionGroup.1141", %"class.cc::AdditionGroup.1141", %"class.cc::AdditionGroup.1141", %"class.cc::AdditionGroup.1141", %"class.cc::AdditionGroup.1141", i8, [3 x i8] }>
%"class.base::RefCounted.1140" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.1141" = type { float }
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.636" = type { %"class.std::__1::__vector_base.637" }
%"class.std::__1::__vector_base.637" = type { %"class.base::OnceCallback.638"*, %"class.base::OnceCallback.638"*, %"class.std::__1::__compressed_pair.639" }
%"class.base::OnceCallback.638" = type opaque
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.base::OnceCallback.638"* }
%"class.std::__1::vector.759" = type { %"class.std::__1::__vector_base.760" }
%"class.std::__1::__vector_base.760" = type { %"class.std::__1::unique_ptr.761"*, %"class.std::__1::unique_ptr.761"*, %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::unique_ptr.761" = type { %"class.std::__1::__compressed_pair.1355" }
%"class.std::__1::__compressed_pair.1355" = type { %"struct.std::__1::__compressed_pair_elem.1356" }
%"struct.std::__1::__compressed_pair_elem.1356" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1357", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1357" = type { %"class.absl::optional_internal::optional_data.1358" }
%"class.absl::optional_internal::optional_data.1358" = type { %"class.absl::optional_internal::optional_data_base.1359" }
%"class.absl::optional_internal::optional_data_base.1359" = type { %"class.absl::optional_internal::optional_data_dtor_base.1360" }
%"class.absl::optional_internal::optional_data_dtor_base.1360" = type { i8, %union.anon.1361 }
%union.anon.1361 = type { i32 }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.std::__1::unique_ptr.761"* }
%"class.std::__1::unique_ptr.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.1155" = type { %"class.std::__1::__vector_base.1156" }
%"class.std::__1::__vector_base.1156" = type { %"class.std::__1::unique_ptr.1157"*, %"class.std::__1::unique_ptr.1157"*, %"class.std::__1::__compressed_pair.1158" }
%"class.std::__1::unique_ptr.1157" = type opaque
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.1159" }
%"struct.std::__1::__compressed_pair_elem.1159" = type { %"class.std::__1::unique_ptr.1157"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1387", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.1387" = type { %"class.std::__1::__vector_base.1388" }
%"class.std::__1::__vector_base.1388" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1395" }
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.1396" }
%"struct.std::__1::__compressed_pair_elem.1396" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1389", i64, i64 }
%"class.std::__1::unique_ptr.1389" = type { %"class.std::__1::__compressed_pair.1390" }
%"class.std::__1::__compressed_pair.1390" = type { %"struct.std::__1::__compressed_pair_elem.1391" }
%"struct.std::__1::__compressed_pair_elem.1391" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.1400" }
%"class.std::__1::list.1400" = type { %"class.std::__1::__list_imp.1401" }
%"class.std::__1::__list_imp.1401" = type { %"struct.std::__1::__list_node_base.1402", %"class.std::__1::__compressed_pair.1403" }
%"struct.std::__1::__list_node_base.1402" = type { %"struct.std::__1::__list_node_base.1402"*, %"struct.std::__1::__list_node_base.1402"* }
%"class.std::__1::__compressed_pair.1403" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.viz::CompositorRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [4 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.873", i8, i8, i8, i8, %"class.std::__1::vector.1290", %"class.viz::QuadList", %"class.cc::ListContainer.1304" }
%"class.std::__1::vector.1290" = type { %"class.std::__1::__vector_base.1291" }
%"class.std::__1::__vector_base.1291" = type { %"class.std::__1::unique_ptr.1292"*, %"class.std::__1::unique_ptr.1292"*, %"class.std::__1::__compressed_pair.1293" }
%"class.std::__1::unique_ptr.1292" = type opaque
%"class.std::__1::__compressed_pair.1293" = type { %"struct.std::__1::__compressed_pair_elem.1294" }
%"struct.std::__1::__compressed_pair_elem.1294" = type { %"class.std::__1::unique_ptr.1292"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.1298" }
%"class.std::__1::unique_ptr.1298" = type { %"class.std::__1::__compressed_pair.1299" }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.1304" = type { %"class.cc::ListContainerHelper" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.cc::AppendQuadsData" = type { i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional.1200", i8, %"class.std::__1::vector.1305" }
%"class.std::__1::vector.1305" = type { %"class.std::__1::__vector_base.1306" }
%"class.std::__1::__vector_base.1306" = type { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.std::__1::__compressed_pair.1307" }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.1308" }
%"struct.std::__1::__compressed_pair_elem.1308" = type { %"class.viz::SurfaceId"* }
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.1312", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional", float, i8, [3 x i8] }>
%"class.absl::optional.1312" = type { %"class.absl::optional_internal::optional_data.1313" }
%"class.absl::optional_internal::optional_data.1313" = type { %"class.absl::optional_internal::optional_data_base.1314" }
%"class.absl::optional_internal::optional_data_base.1314" = type { %"class.absl::optional_internal::optional_data_dtor_base.1315" }
%"class.absl::optional_internal::optional_data_dtor_base.1315" = type { i8, %union.anon.1316 }
%union.anon.1316 = type { %"class.gfx::Rect" }
%"class.viz::SurfaceDrawQuad" = type <{ %"class.viz::DrawQuad.base", [4 x i8], %"class.viz::SurfaceRange", i32, i8, i8, i8, i8 }>
%"class.viz::DrawQuad.base" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources" }>
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType.1317"] }
%"class.util::IdType.1317" = type { %"class.base::StrongAlias.1318" }
%"class.base::StrongAlias.1318" = type { i32 }
%"class.viz::SolidColorDrawQuad" = type <{ %"class.viz::DrawQuad.base", i32, i8, [7 x i8] }>
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.1319" }
%"class.std::__1::unique_ptr.1319" = type { %"class.std::__1::__compressed_pair.1320" }
%"class.std::__1::__compressed_pair.1320" = type { %"struct.std::__1::__compressed_pair_elem.1321" }
%"struct.std::__1::__compressed_pair_elem.1321" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.cc::Tile" = type { %"class.cc::TileManager"*, %"class.cc::PictureLayerTiling"*, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::AxisTransform2d", %"class.cc::TileDrawInfo", i32, i32, i32, i32, i32, i64, i32, i8, i64, %"class.std::__1::vector.1339", %"class.gfx::Rect", %class.scoped_refptr.211 }
%"class.cc::TileDrawInfo" = type <{ i32, i32, %"class.cc::ResourcePool::InUsePoolResource", i8, i8, i8, [5 x i8] }>
%"class.cc::ResourcePool::InUsePoolResource" = type { i8, %"class.cc::ResourcePool::PoolResource"* }
%"class.cc::ResourcePool::PoolResource" = type { i64, %"class.gfx::Size", i32, %"class.gfx::ColorSpace", i64, %"class.base::TimeTicks", %"class.gfx::Rect", i8, %"class.util::IdType.1317", %"class.std::__1::unique_ptr.1325", %"class.std::__1::unique_ptr.1333" }
%"class.std::__1::unique_ptr.1325" = type { %"class.std::__1::__compressed_pair.1326" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.1327" }
%"struct.std::__1::__compressed_pair_elem.1327" = type { %"class.cc::ResourcePool::GpuBacking"* }
%"class.cc::ResourcePool::GpuBacking" = type { i32 (...)**, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, i8, i8, %"struct.gpu::SyncToken" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.1328", i64 }
%"class.util::IdType.1328" = type { %"class.base::StrongAlias.1329" }
%"class.base::StrongAlias.1329" = type { i64 }
%"class.std::__1::unique_ptr.1333" = type { %"class.std::__1::__compressed_pair.1334" }
%"class.std::__1::__compressed_pair.1334" = type { %"struct.std::__1::__compressed_pair_elem.1335" }
%"struct.std::__1::__compressed_pair_elem.1335" = type { %"class.cc::ResourcePool::SoftwareBacking"* }
%"class.cc::ResourcePool::SoftwareBacking" = type { i32 (...)**, %"struct.gpu::Mailbox" }
%"class.std::__1::vector.1339" = type { %"class.std::__1::__vector_base.1340" }
%"class.std::__1::__vector_base.1340" = type { %"struct.std::__1::pair.1341"*, %"struct.std::__1::pair.1341"*, %"class.std::__1::__compressed_pair.1342" }
%"struct.std::__1::pair.1341" = type opaque
%"class.std::__1::__compressed_pair.1342" = type { %"struct.std::__1::__compressed_pair_elem.1343" }
%"struct.std::__1::__compressed_pair_elem.1343" = type { %"struct.std::__1::pair.1341"* }
%"class.std::__1::vector.1347" = type { %"class.std::__1::__vector_base.1348" }
%"class.std::__1::__vector_base.1348" = type { %"class.cc::PrioritizedTile"*, %"class.cc::PrioritizedTile"*, %"class.std::__1::__compressed_pair.1349" }
%"class.cc::PrioritizedTile" = type <{ %"class.cc::Tile"*, %"class.cc::PictureLayerTiling"*, %"struct.cc::TilePriority", i8, i8, i8, i8 }>
%"struct.cc::TilePriority" = type { i32, i32, float }
%"class.std::__1::__compressed_pair.1349" = type { %"struct.std::__1::__compressed_pair_elem.1350" }
%"struct.std::__1::__compressed_pair_elem.1350" = type { %"class.cc::PrioritizedTile"* }
%"class.cc::MicroBenchmarkImpl" = type { i32 (...)**, %"class.base::OnceCallback.1354", i8, %class.scoped_refptr }
%"class.base::OnceCallback.1354" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN20trace_event_internal13AddTraceEventIRA17_KcNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPS1_SG_yjySG_OT_SG_OT0_ = comdat any

$_ZN2cc9LayerImpl22NotifyTileStateChangedEPKNS_4TileE = comdat any

$_ZN2cc9LayerImpl15DidBecomeActiveEv = comdat any

$_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

@_ZTVN2cc16SurfaceLayerImplE = hidden unnamed_addr constant { [32 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::SurfaceLayerImpl"*)* @_ZN2cc16SurfaceLayerImplD2Ev to i8*), i8* bitcast (void (%"class.cc::SurfaceLayerImpl"*)* @_ZN2cc16SurfaceLayerImplD0Ev to i8*), i8* bitcast (i1 (%"class.cc::SurfaceLayerImpl"*, i32, %"class.viz::ClientResourceProvider"*)* @_ZN2cc16SurfaceLayerImpl8WillDrawENS_8DrawModeEPN3viz22ClientResourceProviderE to i8*), i8* bitcast (void (%"class.cc::SurfaceLayerImpl"*, %"class.viz::CompositorRenderPass"*, %"class.cc::AppendQuadsData"*)* @_ZN2cc16SurfaceLayerImpl11AppendQuadsEPN3viz20CompositorRenderPassEPNS_15AppendQuadsDataE to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, %"class.viz::ClientResourceProvider"*)* @_ZN2cc9LayerImpl7DidDrawEPN3viz22ClientResourceProviderE to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, %"class.util::IdType.1317"*, %"class.gfx::Size"*, %"class.gfx::SizeF"*)* @_ZNK2cc9LayerImpl21GetContentsResourceIdEPN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEPN3gfx4SizeEPNS7_5SizeFE to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, %"class.cc::Tile"*)* @_ZN2cc9LayerImpl22NotifyTileStateChangedEPKNS_4TileE to i8*), i8* bitcast (i1 (%"class.cc::LayerImpl"*)* @_ZNK2cc9LayerImpl16IsScrollbarLayerEv to i8*), i8* bitcast ({ i64, i64 } (%"class.cc::LayerImpl"*)* @_ZNK2cc9LayerImpl13GetDamageRectEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl19ResetChangeTrackingEv to i8*), i8* bitcast (void (%"class.cc::SimpleEnclosedRegion"*, %"class.cc::LayerImpl"*)* @_ZNK2cc9LayerImpl19VisibleOpaqueRegionEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl15DidBecomeActiveEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl15DidBeginTracingEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl16ReleaseResourcesEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl13OnPurgeMemoryEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl20ReleaseTileResourcesEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl21RecreateTileResourcesEv to i8*), i8* bitcast (%"class.cc::LayerImpl"* (%"class.cc::SurfaceLayerImpl"*, %"class.cc::LayerTreeImpl"*)* @_ZN2cc16SurfaceLayerImpl15CreateLayerImplEPNS_13LayerTreeImplE to i8*), i8* bitcast (void (%"class.cc::SurfaceLayerImpl"*, %"class.cc::LayerImpl"*)* @_ZN2cc16SurfaceLayerImpl16PushPropertiesToEPNS_9LayerImplE to i8*), i8* bitcast (i1 (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl28IsSnappedToPixelGridInTargetEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, %"class.std::__1::vector.1347"*)* @_ZNK2cc9LayerImpl32GetAllPrioritizedTilesForTracingEPNSt3__16vectorINS_15PrioritizedTileENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.cc::SurfaceLayerImpl"*, %"class.base::trace_event::TracedValue"*)* @_ZNK2cc16SurfaceLayerImpl11AsValueIntoEPN4base11trace_event11TracedValueE to i8*), i8* bitcast (i64 (%"class.cc::LayerImpl"*)* @_ZNK2cc9LayerImpl21GPUMemoryUsageInBytesEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, %"class.cc::MicroBenchmarkImpl"*)* @_ZN2cc9LayerImpl17RunMicroBenchmarkEPNS_18MicroBenchmarkImplE to i8*), i8* bitcast (void (%"class.cc::Region"*, %"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl33GetInvalidationRegionForDebuggingEv to i8*), i8* bitcast ({ i64, i64 } (%"class.cc::SurfaceLayerImpl"*)* @_ZNK2cc16SurfaceLayerImpl36GetEnclosingVisibleRectInTargetSpaceEv to i8*), i8* bitcast (i1 (%"class.cc::SurfaceLayerImpl"*)* @_ZNK2cc16SurfaceLayerImpl16is_surface_layerEv to i8*), i8* bitcast (i8 (%"class.cc::LayerImpl"*)* @_ZNK2cc9LayerImpl20GetContentColorUsageEv to i8*), i8* bitcast (void (%"class.cc::SurfaceLayerImpl"*, i32*, float*)* @_ZNK2cc16SurfaceLayerImpl24GetDebugBorderPropertiesEPjPf to i8*), i8* bitcast (i8* (%"class.cc::SurfaceLayerImpl"*)* @_ZNK2cc16SurfaceLayerImpl17LayerTypeAsStringEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [26 x i8] c"LocalSurfaceId.Embed.Flow\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"ImplSetSurfaceId\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"surface_id\00", align 1
@__const._ZN2cc16SurfaceLayerImpl24AppendRainbowDebugBorderEPN3viz20CompositorRenderPassE.colors = private unnamed_addr constant [6 x i32] [i32 -2130771968, i32 -2130729728, i32 -2130706688, i32 -2147450880, i32 -2147483393, i32 -2131852562], align 16
@.str.4 = private unnamed_addr constant [14 x i8] c"surface_range\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"cc::SurfaceLayerImpl\00", align 1

@_ZN2cc16SurfaceLayerImplC1EPNS_13LayerTreeImplEiN4base17RepeatingCallbackIFvbPNS3_13WaitableEventEEEE = hidden unnamed_addr alias void (%"class.cc::SurfaceLayerImpl"*, %"class.cc::LayerTreeImpl"*, i32, %"class.base::RepeatingCallback.1199"*), void (%"class.cc::SurfaceLayerImpl"*, %"class.cc::LayerTreeImpl"*, i32, %"class.base::RepeatingCallback.1199"*)* @_ZN2cc16SurfaceLayerImplC2EPNS_13LayerTreeImplEiN4base17RepeatingCallbackIFvbPNS3_13WaitableEventEEEE
@_ZN2cc16SurfaceLayerImplD1Ev = hidden unnamed_addr alias void (%"class.cc::SurfaceLayerImpl"*), void (%"class.cc::SurfaceLayerImpl"*)* @_ZN2cc16SurfaceLayerImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.cc::SurfaceLayerImpl"* @_ZN2cc16SurfaceLayerImpl6CreateEPNS_13LayerTreeImplEiN4base17RepeatingCallbackIFvbPNS3_13WaitableEventEEEE(%"class.cc::LayerTreeImpl"*, i32, %"class.base::RepeatingCallback.1199"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RepeatingCallback.1199", align 8
  %5 = tail call i8* @_Znwm(i64 736) #12
  %6 = bitcast i8* %5 to %"class.cc::SurfaceLayerImpl"*
  %7 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::RepeatingCallback.1199"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %10 = bitcast i8* %5 to %"class.cc::LayerImpl"*
  tail call void @_ZN2cc9LayerImplC2EPNS_13LayerTreeImplEib(%"class.cc::LayerImpl"* nonnull %10, %"class.cc::LayerTreeImpl"* %0, i32 %1, i1 zeroext false) #13
  %11 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2cc16SurfaceLayerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 640
  %13 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast i8* %12 to i64*
  store i64 %9, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %15 = getelementptr inbounds i8, i8* %5, i64 648
  %16 = bitcast i8* %15 to %"class.viz::SurfaceRange"*
  tail call void @_ZN3viz12SurfaceRangeC1Ev(%"class.viz::SurfaceRange"* %16) #13
  %17 = getelementptr inbounds i8, i8* %5, i64 720
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds i8, i8* %5, i64 728
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 5, i1 false) #13
  %19 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #13
  ret %"class.cc::SurfaceLayerImpl"* %6
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.cc::SurfaceLayerImpl"* @_ZN2cc16SurfaceLayerImpl6CreateEPNS_13LayerTreeImplEi(%"class.cc::LayerTreeImpl"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback.1199", align 8
  %4 = tail call i8* @_Znwm(i64 736) #12
  %5 = bitcast i8* %4 to %"class.cc::SurfaceLayerImpl"*
  %6 = tail call i8* @_Znwm(i64 40) #12, !noalias !2
  %7 = bitcast i8* %6 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %7, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1, %"class.base::WaitableEvent"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN2cc16SurfaceLayerImpl6CreateEPNS3_13LayerTreeImplEiE3$_0JEEEFvbPNS_13WaitableEventEEE3RunEPNS0_13BindStateBaseEbSA_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN2cc16SurfaceLayerImpl6CreateEPNS2_13LayerTreeImplEiE3$_0JEE7DestroyEPKNS0_13BindStateBaseE") #13, !noalias !2
  %8 = bitcast i8* %4 to %"class.cc::LayerImpl"*
  tail call void @_ZN2cc9LayerImplC2EPNS_13LayerTreeImplEib(%"class.cc::LayerImpl"* nonnull %8, %"class.cc::LayerTreeImpl"* %0, i32 %1, i1 zeroext false) #13
  %9 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2cc16SurfaceLayerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 640
  %11 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = ptrtoint i8* %6 to i64
  %13 = bitcast i8* %10 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %14 = getelementptr inbounds i8, i8* %4, i64 648
  %15 = bitcast i8* %14 to %"class.viz::SurfaceRange"*
  tail call void @_ZN3viz12SurfaceRangeC1Ev(%"class.viz::SurfaceRange"* %15) #13
  %16 = getelementptr inbounds i8, i8* %4, i64 720
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds i8, i8* %4, i64 728
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 5, i1 false) #13
  %18 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #13
  ret %"class.cc::SurfaceLayerImpl"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16SurfaceLayerImplC2EPNS_13LayerTreeImplEiN4base17RepeatingCallbackIFvbPNS3_13WaitableEventEEEE(%"class.cc::SurfaceLayerImpl"*, %"class.cc::LayerTreeImpl"*, i32, %"class.base::RepeatingCallback.1199"* nocapture) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  tail call void @_ZN2cc9LayerImplC2EPNS_13LayerTreeImplEib(%"class.cc::LayerImpl"* %5, %"class.cc::LayerTreeImpl"* %1, i32 %2, i1 zeroext false) #13
  %6 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2cc16SurfaceLayerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::RepeatingCallback.1199"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::RepeatingCallback.1199"* %7 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3
  tail call void @_ZN3viz12SurfaceRangeC1Ev(%"class.viz::SurfaceRange"* %12) #13
  %13 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 5, i1 false)
  ret void
}

declare void @_ZN2cc9LayerImplC2EPNS_13LayerTreeImplEib(%"class.cc::LayerImpl"*, %"class.cc::LayerTreeImpl"*, i32, i1 zeroext) unnamed_addr #4

declare void @_ZN3viz12SurfaceRangeC1Ev(%"class.viz::SurfaceRange"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16SurfaceLayerImplD2Ev(%"class.cc::SurfaceLayerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2cc16SurfaceLayerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %3, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %5, align 8
  %7 = icmp eq %"class.base::internal::BindStateBase"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %6, i64 0, i32 1
  %10 = bitcast void ()** %9 to void (%"class.base::internal::BindStateBase"*, i1, %"class.base::WaitableEvent"*)**
  %11 = load void (%"class.base::internal::BindStateBase"*, i1, %"class.base::WaitableEvent"*)*, void (%"class.base::internal::BindStateBase"*, i1, %"class.base::WaitableEvent"*)** %10, align 8
  tail call void %11(%"class.base::internal::BindStateBase"* nonnull %6, i1 zeroext false, %"class.base::WaitableEvent"* null) #13
  br label %12

12:                                               ; preds = %1, %8
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #13
  %13 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  tail call void @_ZN2cc9LayerImplD2Ev(%"class.cc::LayerImpl"* %13) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc9LayerImplD2Ev(%"class.cc::LayerImpl"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16SurfaceLayerImplD0Ev(%"class.cc::SurfaceLayerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2cc16SurfaceLayerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %3, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %5, align 8
  %7 = icmp eq %"class.base::internal::BindStateBase"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %6, i64 0, i32 1
  %10 = bitcast void ()** %9 to void (%"class.base::internal::BindStateBase"*, i1, %"class.base::WaitableEvent"*)**
  %11 = load void (%"class.base::internal::BindStateBase"*, i1, %"class.base::WaitableEvent"*)*, void (%"class.base::internal::BindStateBase"*, i1, %"class.base::WaitableEvent"*)** %10, align 8
  tail call void %11(%"class.base::internal::BindStateBase"* nonnull %6, i1 zeroext false, %"class.base::WaitableEvent"* null) #13
  br label %12

12:                                               ; preds = %1, %8
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #13
  %13 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  tail call void @_ZN2cc9LayerImplD2Ev(%"class.cc::LayerImpl"* %13) #13
  %14 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::LayerImpl"* @_ZN2cc16SurfaceLayerImpl15CreateLayerImplEPNS_13LayerTreeImplE(%"class.cc::SurfaceLayerImpl"* nocapture, %"class.cc::LayerTreeImpl"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback.1199", align 8
  %4 = alloca %"class.base::RepeatingCallback.1199", align 8
  %5 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::RepeatingCallback.1199"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %11 = bitcast %"class.base::RepeatingCallback.1199"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = tail call i8* @_Znwm(i64 736) #12
  %13 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %14 = bitcast i8* %12 to %"class.cc::LayerImpl"*
  tail call void @_ZN2cc9LayerImplC2EPNS_13LayerTreeImplEib(%"class.cc::LayerImpl"* nonnull %14, %"class.cc::LayerTreeImpl"* %1, i32 %6, i1 zeroext false) #13
  %15 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2cc16SurfaceLayerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 640
  %17 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast i8* %16 to i64*
  store i64 %10, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 648
  %20 = bitcast i8* %19 to %"class.viz::SurfaceRange"*
  tail call void @_ZN3viz12SurfaceRangeC1Ev(%"class.viz::SurfaceRange"* %20) #13
  %21 = getelementptr inbounds i8, i8* %12, i64 720
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds i8, i8* %12, i64 728
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 5, i1 false) #13
  %23 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  %24 = getelementptr inbounds %"class.base::RepeatingCallback.1199", %"class.base::RepeatingCallback.1199"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #13
  ret %"class.cc::LayerImpl"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16SurfaceLayerImpl8SetRangeERKN3viz12SurfaceRangeEN4absl8optionalIjEE(%"class.cc::SurfaceLayerImpl"*, %"class.viz::SurfaceRange"* dereferenceable(72), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = trunc i64 %2 to i8
  %6 = lshr i64 %2, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3
  %9 = tail call zeroext i1 @_ZNK3viz12SurfaceRangeeqERKS0_(%"class.viz::SurfaceRange"* %8, %"class.viz::SurfaceRange"* dereferenceable(72) %1) #13
  br i1 %9, label %10, label %26

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 4, !range !7
  %13 = icmp ne i8 %12, 0
  %14 = icmp ne i8 %5, 0
  %15 = xor i1 %14, %13
  %16 = xor i1 %13, true
  %17 = or i1 %15, %16
  br i1 %17, label %25, label %18

18:                                               ; preds = %10
  %19 = icmp eq i8 %5, 0
  br i1 %19, label %20, label %21, !prof !8

20:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %7
  br i1 %24, label %139, label %26

25:                                               ; preds = %10
  br i1 %15, label %26, label %139

26:                                               ; preds = %25, %21, %3
  %27 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 1
  %28 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1
  %29 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %27, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %34, label %64

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %64

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 1, i32 1, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 1, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %64

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 1, i32 1, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 1, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %52, label %64

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 1, i32 1, i32 2, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %54, %56
  br i1 %57, label %58, label %64

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 1, i32 1, i32 2, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %60, %62
  br i1 %63, label %101, label %64

64:                                               ; preds = %58, %26, %52, %40, %46, %34
  %65 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 1
  %66 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %101, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 1, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %101, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %101, label %81

81:                                               ; preds = %77, %73
  %82 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), align 16
  %83 = and i8 %82, 25
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %101, label %85, !prof !9

85:                                               ; preds = %81
  %86 = tail call i64 @_ZNK3viz14LocalSurfaceId15persistent_hashEv(%"class.viz::LocalSurfaceId"* %65) #13
  %87 = shl i64 %86, 1
  %88 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #13
  call void @_ZNK3viz9SurfaceId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.viz::SurfaceId"* %28) #13
  %89 = call i64 @_ZN20trace_event_internal13AddTraceEventIRA17_KcNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPS1_SG_yjySG_OT_SG_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 4480, i64 %87, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), [17 x i8]* nonnull dereferenceable(17) @.str.2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %90 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #12
  br label %97

97:                                               ; preds = %85, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #13
  %98 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), align 16
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %101, label %100

100:                                              ; preds = %97
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i64 %89) #13
  br label %101

101:                                              ; preds = %58, %77, %81, %64, %69, %100, %97
  %102 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8, i8* %102, align 8, !range !7
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %131, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %107 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8, i8* %107, align 8, !range !7
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %112 = bitcast %"class.viz::SurfaceId"* %111 to i8*
  %113 = bitcast %"class.viz::SurfaceId"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 32, i1 false) #13
  br label %133

114:                                              ; preds = %105
  %115 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %106, i64 0, i32 0, i32 0
  %117 = load i32, i32* %116, align 4
  store i32 %117, i32* %115, align 4
  %118 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %119 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  store i32 %120, i32* %118, align 4
  %121 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %122 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %123 = load i32, i32* %122, align 8
  store i32 %123, i32* %121, align 8
  %124 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %125 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %126 = load i32, i32* %125, align 4
  store i32 %126, i32* %124, align 4
  %127 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2
  %128 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2
  %129 = bitcast %"class.base::UnguessableToken"* %127 to i8*
  %130 = bitcast %"class.base::UnguessableToken"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 16, i1 false) #13
  store i8 1, i8* %107, align 8
  br label %133

131:                                              ; preds = %101
  %132 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %132, align 8
  br label %133

133:                                              ; preds = %110, %114, %131
  %134 = bitcast %"class.viz::SurfaceId"* %27 to i8*
  %135 = bitcast %"class.viz::SurfaceId"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 32, i1 false) #13
  %136 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %137 = bitcast i8* %136 to i64*
  store i64 %2, i64* %137, align 8
  %138 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  call void @_ZN2cc9LayerImpl24NoteLayerPropertyChangedEv(%"class.cc::LayerImpl"* %138) #13
  br label %139

139:                                              ; preds = %25, %21, %133
  ret void
}

declare zeroext i1 @_ZNK3viz12SurfaceRangeeqERKS0_(%"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"* dereferenceable(72)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRA17_KcNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPS1_SG_yjySG_OT_SG_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, [17 x i8]* dereferenceable(17), i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #13
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247241726, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0
  %23 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 0
  %24 = bitcast %"union.base::trace_event::TraceValue"* %22 to i8**
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1
  %26 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %33 = select i1 %29, i8* %31, i8* %32
  %34 = bitcast %"union.base::trace_event::TraceValue"* %25 to i8**
  store i8* %33, i8** %34, align 8
  %35 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #13
  %36 = load i8, i8* %18, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %11, %67
  %39 = phi i64 [ %68, %67 ], [ 0, %11 ]
  %40 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 8
  br i1 %42, label %43, label %54

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %46 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %46 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %46) #13
  %53 = load i8, i8* %40, align 1
  br label %54

54:                                               ; preds = %48, %38
  %55 = phi i8 [ %41, %38 ], [ %53, %48 ]
  %56 = icmp eq i8 %55, 9
  br i1 %56, label %57, label %67

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %59 = bitcast %"union.base::trace_event::TraceValue"* %58 to %"class.protozero::HeapBuffered"**
  %60 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %59, align 8
  %61 = icmp eq %"class.protozero::HeapBuffered"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %63) #13
  %64 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %64) #13
  %65 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %65) #13
  %66 = bitcast %"class.protozero::HeapBuffered"* %60 to i8*
  call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %62, %57, %54, %43
  %68 = add nuw nsw i64 %39, 1
  %69 = load i8, i8* %18, align 8
  %70 = zext i8 %69 to i64
  %71 = icmp ult i64 %68, %70
  br i1 %71, label %38, label %72

72:                                               ; preds = %67, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  ret i64 %35
}

declare void @_ZNK3viz9SurfaceId8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.viz::SurfaceId"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN2cc9LayerImpl24NoteLayerPropertyChangedEv(%"class.cc::LayerImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16SurfaceLayerImpl29SetStretchContentToFillBoundsEb(%"class.cc::SurfaceLayerImpl"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 8, !range !7
  %5 = zext i8 %4 to i32
  %6 = zext i1 %1 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %3, align 8
  %10 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  tail call void @_ZN2cc9LayerImpl24NoteLayerPropertyChangedEv(%"class.cc::LayerImpl"* %10) #13
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16SurfaceLayerImpl21SetSurfaceHitTestableEb(%"class.cc::SurfaceLayerImpl"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 1, !range !7
  %5 = zext i8 %4 to i32
  %6 = zext i1 %1 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %3, align 1
  %10 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  tail call void @_ZN2cc9LayerImpl24NoteLayerPropertyChangedEv(%"class.cc::LayerImpl"* %10) #13
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16SurfaceLayerImpl23SetHasPointerEventsNoneEb(%"class.cc::SurfaceLayerImpl"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 7
  %4 = load i8, i8* %3, align 2, !range !7
  %5 = zext i8 %4 to i32
  %6 = zext i1 %1 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %3, align 2
  %10 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  tail call void @_ZN2cc9LayerImpl24NoteLayerPropertyChangedEv(%"class.cc::LayerImpl"* %10) #13
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16SurfaceLayerImpl15SetIsReflectionEb(%"class.cc::SurfaceLayerImpl"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 1, !range !7
  %5 = zext i8 %4 to i32
  %6 = zext i1 %1 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %3, align 1
  %10 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  tail call void @_ZN2cc9LayerImpl24NoteLayerPropertyChangedEv(%"class.cc::LayerImpl"* %10) #13
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16SurfaceLayerImpl16PushPropertiesToEPNS_9LayerImplE(%"class.cc::SurfaceLayerImpl"*, %"class.cc::LayerImpl"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  tail call void @_ZN2cc9LayerImpl16PushPropertiesToEPS0_(%"class.cc::LayerImpl"* %3, %"class.cc::LayerImpl"* %1) #13
  %4 = bitcast %"class.cc::LayerImpl"* %1 to %"class.cc::SurfaceLayerImpl"*
  %5 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 4
  %7 = bitcast %"class.absl::optional.1200"* %6 to i64*
  %8 = load i64, i64* %7, align 4
  tail call void @_ZN2cc16SurfaceLayerImpl8SetRangeERKN3viz12SurfaceRangeEN4absl8optionalIjEE(%"class.cc::SurfaceLayerImpl"* %4, %"class.viz::SurfaceRange"* dereferenceable(72) %5, i64 %8)
  store i64 1, i64* %7, align 8
  %9 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 5
  %10 = load i8, i8* %9, align 8, !range !7
  %11 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 1, i32 13
  %12 = bitcast %"class.cc::TouchActionRegion"* %11 to i8*
  %13 = load i8, i8* %12, align 8, !range !7
  %14 = icmp eq i8 %13, %10
  br i1 %14, label %16, label %15

15:                                               ; preds = %2
  store i8 %10, i8* %12, align 8
  tail call void @_ZN2cc9LayerImpl24NoteLayerPropertyChangedEv(%"class.cc::LayerImpl"* %1) #13
  br label %16

16:                                               ; preds = %2, %15
  %17 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 6
  %18 = load i8, i8* %17, align 1, !range !7
  %19 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %4, i64 0, i32 6
  %20 = load i8, i8* %19, align 1, !range !7
  %21 = icmp eq i8 %20, %18
  br i1 %21, label %23, label %22

22:                                               ; preds = %16
  store i8 %18, i8* %19, align 1
  tail call void @_ZN2cc9LayerImpl24NoteLayerPropertyChangedEv(%"class.cc::LayerImpl"* %1) #13
  br label %23

23:                                               ; preds = %16, %22
  %24 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 7
  %25 = load i8, i8* %24, align 2, !range !7
  %26 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %4, i64 0, i32 7
  %27 = load i8, i8* %26, align 2, !range !7
  %28 = icmp eq i8 %27, %25
  br i1 %28, label %30, label %29

29:                                               ; preds = %23
  store i8 %25, i8* %26, align 2
  tail call void @_ZN2cc9LayerImpl24NoteLayerPropertyChangedEv(%"class.cc::LayerImpl"* %1) #13
  br label %30

30:                                               ; preds = %23, %29
  %31 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 8
  %32 = load i8, i8* %31, align 1, !range !7
  %33 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %4, i64 0, i32 8
  %34 = load i8, i8* %33, align 1, !range !7
  %35 = icmp eq i8 %34, %32
  br i1 %35, label %37, label %36

36:                                               ; preds = %30
  store i8 %32, i8* %33, align 1
  tail call void @_ZN2cc9LayerImpl24NoteLayerPropertyChangedEv(%"class.cc::LayerImpl"* %1) #13
  br label %37

37:                                               ; preds = %30, %36
  ret void
}

declare void @_ZN2cc9LayerImpl16PushPropertiesToEPS0_(%"class.cc::LayerImpl"*, %"class.cc::LayerImpl"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc16SurfaceLayerImpl8WillDrawENS_8DrawModeEPN3viz22ClientResourceProviderE(%"class.cc::SurfaceLayerImpl"*, i32, %"class.viz::ClientResourceProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::WaitableEvent", align 8
  %5 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  %6 = tail call zeroext i1 @_ZN2cc9LayerImpl8WillDrawENS_8DrawModeEPN3viz22ClientResourceProviderE(%"class.cc::LayerImpl"* %5, i32 %1, %"class.viz::ClientResourceProvider"* %2) #13
  %7 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 9
  %8 = load i8, i8* %7, align 4, !range !7
  %9 = zext i8 %8 to i32
  %10 = zext i1 %6 to i32
  %11 = icmp eq i32 %9, %10
  br i1 %11, label %41, label %12

12:                                               ; preds = %3
  %13 = zext i1 %6 to i8
  store i8 %13, i8* %7, align 4
  %14 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %14, align 8
  %16 = icmp eq %"class.base::internal::BindStateBase"* %15, null
  br i1 %16, label %41, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 0, i32 3
  %19 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %19, i64 0, i32 1
  %21 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %21, i64 0, i32 8
  %23 = load %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostImplClient"** %22, align 8
  %24 = bitcast %"class.cc::LayerTreeHostImplClient"* %23 to i1 (%"class.cc::LayerTreeHostImplClient"*)***
  %25 = load i1 (%"class.cc::LayerTreeHostImplClient"*)**, i1 (%"class.cc::LayerTreeHostImplClient"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.cc::LayerTreeHostImplClient"*)*, i1 (%"class.cc::LayerTreeHostImplClient"*)** %25, i64 28
  %27 = load i1 (%"class.cc::LayerTreeHostImplClient"*)*, i1 (%"class.cc::LayerTreeHostImplClient"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.cc::LayerTreeHostImplClient"* %23) #13
  br i1 %28, label %29, label %36

29:                                               ; preds = %17
  %30 = bitcast %"class.base::WaitableEvent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #13
  %31 = bitcast %"class.base::WaitableEvent"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* nonnull %4, i32 0, i32 1) #13
  %32 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %14, align 8
  %33 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %32, i64 0, i32 1
  %34 = bitcast void ()** %33 to void (%"class.base::internal::BindStateBase"*, i1, %"class.base::WaitableEvent"*)**
  %35 = load void (%"class.base::internal::BindStateBase"*, i1, %"class.base::WaitableEvent"*)*, void (%"class.base::internal::BindStateBase"*, i1, %"class.base::WaitableEvent"*)** %34, align 8
  call void %35(%"class.base::internal::BindStateBase"* %32, i1 zeroext %6, %"class.base::WaitableEvent"* nonnull %4) #13
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* nonnull %4) #13
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #13
  br label %41

36:                                               ; preds = %17
  %37 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %14, align 8
  %38 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %37, i64 0, i32 1
  %39 = bitcast void ()** %38 to void (%"class.base::internal::BindStateBase"*, i1, %"class.base::WaitableEvent"*)**
  %40 = load void (%"class.base::internal::BindStateBase"*, i1, %"class.base::WaitableEvent"*)*, void (%"class.base::internal::BindStateBase"*, i1, %"class.base::WaitableEvent"*)** %39, align 8
  tail call void %40(%"class.base::internal::BindStateBase"* %37, i1 zeroext %6, %"class.base::WaitableEvent"* null) #13
  br label %41

41:                                               ; preds = %12, %3, %36, %29
  ret i1 %6
}

declare zeroext i1 @_ZN2cc9LayerImpl8WillDrawENS_8DrawModeEPN3viz22ClientResourceProviderE(%"class.cc::LayerImpl"*, i32, %"class.viz::ClientResourceProvider"*) unnamed_addr #4

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #4

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16SurfaceLayerImpl11AppendQuadsEPN3viz20CompositorRenderPassEPNS_15AppendQuadsDataE(%"class.cc::SurfaceLayerImpl"*, %"class.viz::CompositorRenderPass"*, %"class.cc::AppendQuadsData"*) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %8 = alloca %"class.gfx::Rect", align 4
  tail call void @_ZN2cc16SurfaceLayerImpl24AppendRainbowDebugBorderEPN3viz20CompositorRenderPassE(%"class.cc::SurfaceLayerImpl"* %0, %"class.viz::CompositorRenderPass"* %1)
  %9 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  %10 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 0, i32 3
  %11 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %11, i64 0, i32 14
  %13 = load float, float* %12, align 4
  %14 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %16 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = tail call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %9) #13
  %18 = fcmp oeq float %13, 1.000000e+00
  br i1 %18, label %65, label %19

19:                                               ; preds = %3
  %20 = fmul float %13, 0.000000e+00
  %21 = tail call float @llvm.floor.f32(float %20) #13
  %22 = fptosi float %21 to i32
  %23 = trunc i64 %17 to i32
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %19
  %26 = sitofp i32 %23 to float
  %27 = fmul float %13, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptosi float %28 to i32
  br label %30

30:                                               ; preds = %25, %19
  %31 = phi i32 [ %29, %25 ], [ %22, %19 ]
  %32 = lshr i64 %17, 32
  %33 = trunc i64 %32 to i32
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = sitofp i32 %33 to float
  %37 = fmul float %13, %36
  %38 = tail call float @llvm.ceil.f32(float %37) #13
  %39 = fptosi float %38 to i32
  br label %40

40:                                               ; preds = %35, %30
  %41 = phi i32 [ %39, %35 ], [ %22, %30 ]
  %42 = sub nsw i32 %31, %22
  %43 = sub nsw i32 %41, %22
  %44 = icmp sgt i32 %22, 0
  %45 = icmp sgt i32 %42, 0
  %46 = and i1 %44, %45
  %47 = sub nuw nsw i32 2147483647, %22
  %48 = icmp ult i32 %47, %42
  %49 = and i1 %48, %46
  %50 = select i1 %49, i32 %47, i32 %42
  %51 = icmp sgt i32 %43, 0
  %52 = and i1 %44, %51
  %53 = icmp ult i32 %47, %43
  %54 = and i1 %53, %52
  %55 = select i1 %54, i32 %47, i32 %43
  %56 = icmp sgt i32 %50, 0
  %57 = select i1 %56, i32 %50, i32 0
  %58 = zext i32 %57 to i64
  %59 = icmp sgt i32 %55, 0
  %60 = select i1 %59, i32 %55, i32 0
  %61 = zext i32 %60 to i64
  %62 = shl nuw nsw i64 %61, 32
  %63 = or i64 %62, %58
  %64 = zext i32 %22 to i64
  br label %65

65:                                               ; preds = %3, %40
  %66 = phi i64 [ %64, %40 ], [ 0, %3 ]
  %67 = phi i64 [ %63, %40 ], [ %17, %3 ]
  %68 = shl nuw i64 %66, 32
  %69 = or i64 %68, %66
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %69, i64* %70, align 8
  store i64 %67, i64* %15, align 8
  %71 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #13
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %73 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 0, i32 25, i32 2
  %74 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #13
  %75 = tail call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %9) #13
  %76 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 0
  store i32 0, i32* %76, align 4
  %77 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 1
  store i32 0, i32* %77, align 4
  %78 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1
  %79 = bitcast %"class.gfx::Size"* %78 to i64*
  store i64 %75, i64* %79, align 4
  %80 = call { i64, i64 } @_ZNK2cc9Occlusion24GetUnoccludedContentRectERKN3gfx4RectE(%"class.cc::Occlusion"* %73, %"class.gfx::Rect"* nonnull dereferenceable(16) %8) #13
  %81 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %82 = extractvalue { i64, i64 } %80, 0
  store i64 %82, i64* %81, align 8
  %83 = extractvalue { i64, i64 } %80, 1
  store i64 %83, i64* %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #13
  %84 = trunc i64 %82 to i32
  %85 = lshr i64 %82, 32
  %86 = trunc i64 %85 to i32
  %87 = trunc i64 %83 to i32
  %88 = lshr i64 %83, 32
  %89 = trunc i64 %88 to i32
  br i1 %18, label %141, label %90

90:                                               ; preds = %65
  %91 = sitofp i32 %84 to float
  %92 = fmul float %13, %91
  %93 = call float @llvm.floor.f32(float %92) #13
  %94 = fptosi float %93 to i32
  %95 = sitofp i32 %86 to float
  %96 = fmul float %13, %95
  %97 = call float @llvm.floor.f32(float %96) #13
  %98 = fptosi float %97 to i32
  %99 = icmp eq i32 %87, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %90
  %101 = add nsw i32 %87, %84
  %102 = sitofp i32 %101 to float
  %103 = fmul float %13, %102
  %104 = call float @llvm.ceil.f32(float %103) #13
  %105 = fptosi float %104 to i32
  br label %106

106:                                              ; preds = %100, %90
  %107 = phi i32 [ %105, %100 ], [ %94, %90 ]
  %108 = icmp eq i32 %89, 0
  br i1 %108, label %115, label %109

109:                                              ; preds = %106
  %110 = add nsw i32 %89, %86
  %111 = sitofp i32 %110 to float
  %112 = fmul float %13, %111
  %113 = call float @llvm.ceil.f32(float %112) #13
  %114 = fptosi float %113 to i32
  br label %115

115:                                              ; preds = %109, %106
  %116 = phi i32 [ %114, %109 ], [ %98, %106 ]
  %117 = sub nsw i32 %107, %94
  %118 = sub nsw i32 %116, %98
  %119 = icmp sgt i32 %94, 0
  %120 = icmp sgt i32 %117, 0
  %121 = and i1 %119, %120
  %122 = sub nuw nsw i32 2147483647, %94
  %123 = icmp ult i32 %122, %117
  %124 = and i1 %123, %121
  %125 = select i1 %124, i32 %122, i32 %117
  %126 = icmp sgt i32 %98, 0
  %127 = icmp sgt i32 %118, 0
  %128 = and i1 %126, %127
  %129 = sub nuw nsw i32 2147483647, %98
  %130 = icmp ult i32 %129, %118
  %131 = and i1 %130, %128
  %132 = select i1 %131, i32 %129, i32 %118
  %133 = icmp sgt i32 %125, 0
  %134 = select i1 %133, i32 %125, i32 0
  %135 = zext i32 %134 to i64
  %136 = icmp sgt i32 %132, 0
  %137 = select i1 %136, i32 %132, i32 0
  %138 = zext i32 %137 to i64
  %139 = shl nuw nsw i64 %138, 32
  %140 = or i64 %139, %135
  br label %141

141:                                              ; preds = %65, %115
  %142 = phi i32 [ %98, %115 ], [ %86, %65 ]
  %143 = phi i32 [ %94, %115 ], [ %84, %65 ]
  %144 = phi i64 [ %140, %115 ], [ %83, %65 ]
  %145 = zext i32 %142 to i64
  %146 = shl nuw i64 %145, 32
  %147 = zext i32 %143 to i64
  %148 = or i64 %146, %147
  store i64 %148, i64* %81, align 8
  store i64 %144, i64* %72, align 8
  %149 = call { i64, i64 } @_ZN3gfx14IntersectRectsERKNS_4RectES2_(%"class.gfx::Rect"* nonnull dereferenceable(16) %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #13
  %150 = extractvalue { i64, i64 } %149, 0
  %151 = extractvalue { i64, i64 } %149, 1
  store i64 %150, i64* %81, align 8
  store i64 %151, i64* %72, align 8
  %152 = trunc i64 %151 to i32
  %153 = icmp eq i32 %152, 0
  %154 = icmp ult i64 %151, 4294967296
  %155 = or i1 %153, %154
  br i1 %155, label %240, label %156

156:                                              ; preds = %141
  %157 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %1, i64 0, i32 0
  %158 = call %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"* %157) #13
  %159 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 0, i32 10
  %160 = load i16, i16* %159, align 4
  %161 = and i16 %160, 16
  %162 = icmp ne i16 %161, 0
  call void @_ZNK2cc9LayerImpl29PopulateScaledSharedQuadStateEPN3viz15SharedQuadStateEfb(%"class.cc::LayerImpl"* %9, %"class.viz::SharedQuadState"* %158, float %13, i1 zeroext %162) #13
  %163 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3
  %164 = call zeroext i1 @_ZNK3viz12SurfaceRange7IsValidEv(%"class.viz::SurfaceRange"* %163) #13
  %165 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %1, i64 0, i32 0, i32 11, i32 0, i32 0
  br i1 %164, label %166, label %232

166:                                              ; preds = %156
  %167 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %165, i64 8, i64 160) #13
  %168 = bitcast i8* %167 to %"class.viz::SurfaceDrawQuad"*
  call void @_ZN3viz15SurfaceDrawQuadC1Ev(%"class.viz::SurfaceDrawQuad"* %168) #13
  %169 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 0, i32 15
  %170 = load i32, i32* %169, align 8
  %171 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 5
  %172 = load i8, i8* %171, align 8, !range !7
  %173 = icmp ne i8 %172, 0
  call void @_ZN3viz15SurfaceDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_RKNS_12SurfaceRangeEjb(%"class.viz::SurfaceDrawQuad"* %168, %"class.viz::SharedQuadState"* %158, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %7, %"class.viz::SurfaceRange"* dereferenceable(72) %163, i32 %170, i1 zeroext %173) #13
  %174 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 8
  %175 = load i8, i8* %174, align 1, !range !7
  %176 = getelementptr inbounds i8, i8* %167, i64 157
  store i8 %175, i8* %176, align 1
  %177 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 1
  %178 = getelementptr inbounds %"class.cc::AppendQuadsData", %"class.cc::AppendQuadsData"* %2, i64 0, i32 9, i32 0, i32 1
  %179 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %178, align 8
  %180 = getelementptr inbounds %"class.cc::AppendQuadsData", %"class.cc::AppendQuadsData"* %2, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %181 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %180, align 8
  %182 = icmp eq %"class.viz::SurfaceId"* %179, %181
  br i1 %182, label %203, label %183

183:                                              ; preds = %166
  %184 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %179, i64 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %177, i64 0, i32 0, i32 0
  %186 = load i32, i32* %185, align 4
  store i32 %186, i32* %184, align 4
  %187 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %179, i64 0, i32 0, i32 1
  %188 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %189 = load i32, i32* %188, align 4
  store i32 %189, i32* %187, align 4
  %190 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %179, i64 0, i32 1, i32 0
  %191 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 1, i32 1, i32 0
  %192 = load i32, i32* %191, align 8
  store i32 %192, i32* %190, align 8
  %193 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %179, i64 0, i32 1, i32 1
  %194 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 1, i32 1, i32 1
  %195 = load i32, i32* %194, align 4
  store i32 %195, i32* %193, align 4
  %196 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %179, i64 0, i32 1, i32 2
  %197 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3, i32 1, i32 1, i32 2
  %198 = bitcast %"class.base::UnguessableToken"* %196 to i8*
  %199 = bitcast %"class.base::UnguessableToken"* %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %198, i8* align 8 %199, i64 16, i1 false) #13
  %200 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %179, i64 1
  %201 = ptrtoint %"class.viz::SurfaceId"* %200 to i64
  %202 = bitcast %"class.viz::SurfaceId"** %178 to i64*
  store i64 %201, i64* %202, align 8
  br label %205

203:                                              ; preds = %166
  %204 = getelementptr inbounds %"class.cc::AppendQuadsData", %"class.cc::AppendQuadsData"* %2, i64 0, i32 9
  call void @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.1305"* %204, %"class.viz::SurfaceId"* dereferenceable(32) %177) #13
  br label %205

205:                                              ; preds = %183, %203
  %206 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %207 = load i8, i8* %206, align 4, !range !7
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %230, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.cc::AppendQuadsData", %"class.cc::AppendQuadsData"* %2, i64 0, i32 7
  %211 = getelementptr inbounds %"class.absl::optional.1200", %"class.absl::optional.1200"* %210, i64 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8, i8* %211, align 4, !range !7
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %214, label %219

214:                                              ; preds = %209
  %215 = bitcast %"class.absl::optional.1200"* %210 to i64*
  store i64 1, i64* %215, align 8
  %216 = load i8, i8* %206, align 4, !range !7
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %219, !prof !8

218:                                              ; preds = %214
  call void @llvm.trap() #13
  unreachable

219:                                              ; preds = %209, %214
  %220 = getelementptr inbounds %"class.cc::AppendQuadsData", %"class.cc::AppendQuadsData"* %2, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %222 = load i32, i32* %220, align 4
  %223 = load i32, i32* %221, align 4
  %224 = icmp ult i32 %222, %223
  %225 = select i1 %224, i32 %223, i32 %222
  %226 = bitcast %"class.absl::optional.1200"* %210 to i64*
  %227 = zext i32 %225 to i64
  %228 = shl nuw i64 %227, 32
  %229 = or i64 %228, 1
  store i64 %229, i64* %226, align 8
  br label %237

230:                                              ; preds = %205
  %231 = getelementptr inbounds %"class.cc::AppendQuadsData", %"class.cc::AppendQuadsData"* %2, i64 0, i32 8
  store i8 1, i8* %231, align 8
  br label %237

232:                                              ; preds = %156
  %233 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %165, i64 8, i64 88) #13
  %234 = bitcast i8* %233 to %"class.viz::SolidColorDrawQuad"*
  call void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"* %234) #13
  %235 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 0, i32 15
  %236 = load i32, i32* %235, align 8
  call void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"* %234, %"class.viz::SharedQuadState"* %158, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %7, i32 %236, i1 zeroext false) #13
  br label %237

237:                                              ; preds = %219, %230, %232
  %238 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %239 = bitcast i8* %238 to i64*
  store i64 1, i64* %239, align 8
  br label %240

240:                                              ; preds = %141, %237
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16SurfaceLayerImpl24AppendRainbowDebugBorderEPN3viz20CompositorRenderPassE(%"class.cc::SurfaceLayerImpl"*, %"class.viz::CompositorRenderPass"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca float, align 4
  %5 = alloca %"class.gfx::Rect", align 4
  %6 = alloca %"class.gfx::Rect", align 4
  %7 = alloca %"class.gfx::Rect", align 4
  %8 = alloca %"class.gfx::Rect", align 4
  %9 = alloca %"class.gfx::Rect", align 4
  %10 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  %11 = tail call zeroext i1 @_ZNK2cc9LayerImpl16ShowDebugBordersENS_15DebugBorderTypeE(%"class.cc::LayerImpl"* %10, i32 1) #13
  br i1 %11, label %12, label %188

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %1, i64 0, i32 0
  %14 = tail call %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"* %13) #13
  %15 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 0, i32 10
  %16 = load i16, i16* %15, align 4
  %17 = and i16 %16, 16
  %18 = icmp ne i16 %17, 0
  tail call void @_ZNK2cc9LayerImpl23PopulateSharedQuadStateEPN3viz15SharedQuadStateEb(%"class.cc::LayerImpl"* %10, %"class.viz::SharedQuadState"* %14, i1 zeroext %18) #13
  %19 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #13
  store i32 -1431655766, i32* %3, align 4
  %20 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #13
  store float 0xFFFFFFFFE0000000, float* %4, align 4
  %21 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to void (%"class.cc::SurfaceLayerImpl"*, i32*, float*)***
  %22 = load void (%"class.cc::SurfaceLayerImpl"*, i32*, float*)**, void (%"class.cc::SurfaceLayerImpl"*, i32*, float*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.cc::SurfaceLayerImpl"*, i32*, float*)*, void (%"class.cc::SurfaceLayerImpl"*, i32*, float*)** %22, i64 28
  %24 = load void (%"class.cc::SurfaceLayerImpl"*, i32*, float*)*, void (%"class.cc::SurfaceLayerImpl"*, i32*, float*)** %23, align 8
  call void %24(%"class.cc::SurfaceLayerImpl"* %0, i32* nonnull %3, float* nonnull %4) #13
  %25 = bitcast %"class.gfx::Rect"* %5 to i8*
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 1
  %30 = bitcast %"class.gfx::Rect"* %6 to i8*
  %31 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 1
  %35 = bitcast %"class.gfx::Rect"* %7 to i8*
  %36 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 1
  %40 = bitcast %"class.gfx::Rect"* %8 to i8*
  %41 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1, i32 1
  %45 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %1, i64 0, i32 0, i32 11, i32 0, i32 0
  %46 = bitcast %"class.gfx::Rect"* %9 to i8*
  %47 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1, i32 1
  %51 = bitcast %"class.gfx::Rect"* %6 to i8*
  %52 = bitcast %"class.gfx::Rect"* %8 to i8*
  %53 = bitcast %"class.gfx::Rect"* %9 to i8*
  br label %54

54:                                               ; preds = %185, %12
  %55 = phi i32 [ 0, %12 ], [ %186, %185 ]
  %56 = mul nsw i32 %55, 300
  %57 = call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %10) #13
  %58 = trunc i64 %57 to i32
  %59 = xor i32 %56, -1
  %60 = add i32 %58, %59
  %61 = icmp slt i32 %60, 300
  %62 = select i1 %61, i32 %60, i32 300
  %63 = call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %10) #13
  %64 = lshr i64 %63, 32
  %65 = trunc i64 %64 to i32
  %66 = add i32 %65, %59
  %67 = icmp slt i32 %66, 300
  %68 = select i1 %67, i32 %66, i32 300
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #13
  %69 = load float, float* %4, align 4
  %70 = fptosi float %69 to i32
  store i32 %56, i32* %26, align 4
  store i32 0, i32* %27, align 4
  %71 = icmp ne i32 %55, 0
  %72 = icmp sgt i32 %60, 0
  %73 = and i1 %71, %72
  %74 = xor i32 %56, 2147483647
  %75 = icmp ult i32 %74, %62
  %76 = and i1 %73, %75
  %77 = select i1 %76, i32 %74, i32 %62
  %78 = icmp sgt i32 %77, 0
  %79 = select i1 %78, i32 %77, i32 0
  store i32 %79, i32* %28, align 4
  %80 = icmp sgt i32 %70, 0
  %81 = select i1 %80, i32 %70, i32 0
  store i32 %81, i32* %29, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %51, i8 -86, i64 16, i1 false)
  %82 = call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %10) #13
  %83 = lshr i64 %82, 32
  %84 = trunc i64 %83 to i32
  %85 = sitofp i32 %84 to float
  %86 = load float, float* %4, align 4
  %87 = fsub float %85, %86
  %88 = fptosi float %87 to i32
  %89 = fptosi float %86 to i32
  store i32 %56, i32* %31, align 4
  store i32 %88, i32* %32, align 4
  %90 = icmp sgt i32 %88, 0
  %91 = icmp sgt i32 %89, 0
  %92 = and i1 %91, %90
  %93 = sub nuw nsw i32 2147483647, %88
  %94 = icmp ult i32 %93, %89
  %95 = and i1 %94, %92
  %96 = select i1 %95, i32 %93, i32 %89
  store i32 %79, i32* %33, align 4
  %97 = icmp sgt i32 %96, 0
  %98 = select i1 %97, i32 %96, i32 0
  store i32 %98, i32* %34, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #13
  store i32 0, i32* %36, align 4
  store i32 %56, i32* %37, align 4
  %99 = icmp sgt i32 %66, 0
  %100 = and i1 %71, %99
  %101 = icmp ult i32 %74, %68
  %102 = and i1 %100, %101
  %103 = select i1 %102, i32 %74, i32 %68
  %104 = select i1 %91, i32 %89, i32 0
  store i32 %104, i32* %38, align 4
  %105 = icmp sgt i32 %103, 0
  %106 = select i1 %105, i32 %103, i32 0
  store i32 %106, i32* %39, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %52, i8 -86, i64 16, i1 false)
  %107 = call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %10) #13
  %108 = trunc i64 %107 to i32
  %109 = sitofp i32 %108 to float
  %110 = load float, float* %4, align 4
  %111 = fsub float %109, %110
  %112 = fptosi float %111 to i32
  %113 = fptosi float %110 to i32
  store i32 %112, i32* %41, align 4
  store i32 %56, i32* %42, align 4
  %114 = icmp sgt i32 %112, 0
  %115 = icmp sgt i32 %113, 0
  %116 = and i1 %115, %114
  %117 = sub nuw nsw i32 2147483647, %112
  %118 = icmp ult i32 %117, %113
  %119 = and i1 %118, %116
  %120 = select i1 %119, i32 %117, i32 %113
  %121 = icmp sgt i32 %120, 0
  %122 = select i1 %121, i32 %120, i32 0
  store i32 %122, i32* %43, align 4
  store i32 %106, i32* %44, align 4
  %123 = load i32, i32* %28, align 4
  %124 = icmp eq i32 %123, 0
  %125 = load i32, i32* %29, align 4
  %126 = icmp eq i32 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %134

128:                                              ; preds = %54
  %129 = load i32, i32* %38, align 4
  %130 = icmp eq i32 %129, 0
  %131 = load i32, i32* %39, align 4
  %132 = icmp eq i32 %131, 0
  %133 = or i1 %130, %132
  br i1 %133, label %187, label %166

134:                                              ; preds = %54
  %135 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %45, i64 8, i64 88) #13
  %136 = bitcast i8* %135 to %"class.viz::SolidColorDrawQuad"*
  call void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"* %136) #13
  %137 = urem i32 %55, 6
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds [6 x i32], [6 x i32]* @__const._ZN2cc16SurfaceLayerImpl24AppendRainbowDebugBorderEPN3viz20CompositorRenderPassE.colors, i64 0, i64 %138
  %140 = load i32, i32* %139, align 4
  call void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"* %136, %"class.viz::SharedQuadState"* %14, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, i32 %140, i1 zeroext false) #13
  %141 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %45, i64 8, i64 88) #13
  %142 = bitcast i8* %141 to %"class.viz::SolidColorDrawQuad"*
  call void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"* %142) #13
  %143 = sub nuw nsw i32 5, %137
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [6 x i32], [6 x i32]* @__const._ZN2cc16SurfaceLayerImpl24AppendRainbowDebugBorderEPN3viz20CompositorRenderPassE.colors, i64 0, i64 %144
  %146 = load i32, i32* %145, align 4
  call void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"* %142, %"class.viz::SharedQuadState"* %14, %"class.gfx::Rect"* nonnull dereferenceable(16) %6, %"class.gfx::Rect"* nonnull dereferenceable(16) %6, i32 %146, i1 zeroext false) #13
  %147 = load i16, i16* %15, align 4
  %148 = and i16 %147, 16
  %149 = icmp eq i16 %148, 0
  br i1 %149, label %166, label %150

150:                                              ; preds = %134
  %151 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %45, i64 8, i64 88) #13
  %152 = bitcast i8* %151 to %"class.viz::SolidColorDrawQuad"*
  call void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"* %152) #13
  %153 = lshr i32 %140, 24
  %154 = uitofp i32 %153 to float
  %155 = fmul float %154, 0x3FB99999A0000000
  %156 = fptoui float %155 to i8
  %157 = zext i8 %156 to i32
  %158 = and i32 %140, 16777215
  %159 = shl nuw i32 %157, 24
  %160 = or i32 %159, %158
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %53, i8 -86, i64 16, i1 false)
  %161 = call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %10) #13
  %162 = lshr i64 %161, 32
  %163 = trunc i64 %162 to i32
  store i32 %56, i32* %47, align 4
  store i32 0, i32* %48, align 4
  store i32 %79, i32* %49, align 4
  %164 = icmp sgt i32 %163, 0
  %165 = select i1 %164, i32 %163, i32 0
  store i32 %165, i32* %50, align 4
  call void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"* %152, %"class.viz::SharedQuadState"* %14, %"class.gfx::Rect"* nonnull dereferenceable(16) %9, %"class.gfx::Rect"* nonnull dereferenceable(16) %9, i32 %160, i1 zeroext false) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #13
  br label %166

166:                                              ; preds = %128, %134, %150
  %167 = load i32, i32* %38, align 4
  %168 = icmp eq i32 %167, 0
  %169 = load i32, i32* %39, align 4
  %170 = icmp eq i32 %169, 0
  %171 = or i1 %168, %170
  br i1 %171, label %185, label %172

172:                                              ; preds = %166
  %173 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %45, i64 8, i64 88) #13
  %174 = bitcast i8* %173 to %"class.viz::SolidColorDrawQuad"*
  call void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"* %174) #13
  %175 = urem i32 %55, 6
  %176 = sub nuw nsw i32 5, %175
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds [6 x i32], [6 x i32]* @__const._ZN2cc16SurfaceLayerImpl24AppendRainbowDebugBorderEPN3viz20CompositorRenderPassE.colors, i64 0, i64 %177
  %179 = load i32, i32* %178, align 4
  call void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"* %174, %"class.viz::SharedQuadState"* %14, %"class.gfx::Rect"* nonnull dereferenceable(16) %7, %"class.gfx::Rect"* nonnull dereferenceable(16) %7, i32 %179, i1 zeroext false) #13
  %180 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %45, i64 8, i64 88) #13
  %181 = bitcast i8* %180 to %"class.viz::SolidColorDrawQuad"*
  call void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"* %181) #13
  %182 = zext i32 %175 to i64
  %183 = getelementptr inbounds [6 x i32], [6 x i32]* @__const._ZN2cc16SurfaceLayerImpl24AppendRainbowDebugBorderEPN3viz20CompositorRenderPassE.colors, i64 0, i64 %182
  %184 = load i32, i32* %183, align 4
  call void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"* %181, %"class.viz::SharedQuadState"* %14, %"class.gfx::Rect"* nonnull dereferenceable(16) %8, %"class.gfx::Rect"* nonnull dereferenceable(16) %8, i32 %184, i1 zeroext false) #13
  br label %185

185:                                              ; preds = %166, %172
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #13
  %186 = add nuw nsw i32 %55, 1
  br label %54

187:                                              ; preds = %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #13
  br label %188

188:                                              ; preds = %2, %187
  ret void
}

declare i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"*) local_unnamed_addr #4

declare { i64, i64 } @_ZNK2cc9Occlusion24GetUnoccludedContentRectERKN3gfx4RectE(%"class.cc::Occlusion"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #4

declare { i64, i64 } @_ZN3gfx14IntersectRectsERKNS_4RectES2_(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"*) local_unnamed_addr #4

declare void @_ZNK2cc9LayerImpl29PopulateScaledSharedQuadStateEPN3viz15SharedQuadStateEfb(%"class.cc::LayerImpl"*, %"class.viz::SharedQuadState"*, float, i1 zeroext) local_unnamed_addr #4

declare zeroext i1 @_ZNK3viz12SurfaceRange7IsValidEv(%"class.viz::SurfaceRange"*) local_unnamed_addr #4

declare void @_ZN3viz15SurfaceDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_RKNS_12SurfaceRangeEjb(%"class.viz::SurfaceDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.viz::SurfaceRange"* dereferenceable(72), i32, i1 zeroext) local_unnamed_addr #4

declare void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2cc16SurfaceLayerImpl16is_surface_layerEv(%"class.cc::SurfaceLayerImpl"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2cc16SurfaceLayerImpl36GetEnclosingVisibleRectInTargetSpaceEv(%"class.cc::SurfaceLayerImpl"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  %3 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 0, i32 3
  %4 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %4, i64 0, i32 14
  %6 = load float, float* %5, align 4
  %7 = tail call { i64, i64 } @_ZNK2cc9LayerImpl42GetScaledEnclosingVisibleRectInTargetSpaceEf(%"class.cc::LayerImpl"* %2, float %6) #13
  ret { i64, i64 } %7
}

declare { i64, i64 } @_ZNK2cc9LayerImpl42GetScaledEnclosingVisibleRectInTargetSpaceEf(%"class.cc::LayerImpl"*, float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc16SurfaceLayerImpl24GetDebugBorderPropertiesEPjPf(%"class.cc::SurfaceLayerImpl"* nocapture readonly, i32* nocapture, float* nocapture) unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN2cc11DebugColors23SurfaceLayerBorderColorEv() #13
  store i32 %4, i32* %1, align 4
  %5 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 0, i32 3
  %6 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %5, align 8
  %7 = icmp eq %"class.cc::LayerTreeImpl"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %6, i64 0, i32 14
  %10 = load float, float* %9, align 4
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi float [ %10, %8 ], [ 1.000000e+00, %3 ]
  %13 = tail call i32 @_ZN2cc11DebugColors23SurfaceLayerBorderWidthEf(float %12) #13
  %14 = sitofp i32 %13 to float
  store float %14, float* %2, align 4
  ret void
}

declare i32 @_ZN2cc11DebugColors23SurfaceLayerBorderColorEv() local_unnamed_addr #4

declare i32 @_ZN2cc11DebugColors23SurfaceLayerBorderWidthEf(float) local_unnamed_addr #4

declare zeroext i1 @_ZNK2cc9LayerImpl16ShowDebugBordersENS_15DebugBorderTypeE(%"class.cc::LayerImpl"*, i32) local_unnamed_addr #4

declare void @_ZNK2cc9LayerImpl23PopulateSharedQuadStateEPN3viz15SharedQuadStateEb(%"class.cc::LayerImpl"*, %"class.viz::SharedQuadState"*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc16SurfaceLayerImpl11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::SurfaceLayerImpl"*, %"class.base::trace_event::TracedValue"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.cc::SurfaceLayerImpl"* %0 to %"class.cc::LayerImpl"*
  tail call void @_ZNK2cc9LayerImpl11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::LayerImpl"* %4, %"class.base::trace_event::TracedValue"* %1) #13
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.cc::SurfaceLayerImpl", %"class.cc::SurfaceLayerImpl"* %0, i64 0, i32 3
  call void @_ZNK3viz12SurfaceRange8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.viz::SurfaceRange"* %6) #13
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = select i1 %10, i8* %12, i8* %5
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i64 %15, i64 %16
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8* %13, i64 %17) #13
  %18 = load i8, i8* %8, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %2, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret void
}

declare void @_ZNK2cc9LayerImpl11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::LayerImpl"*, %"class.base::trace_event::TracedValue"*) unnamed_addr #4

declare void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"*, i8*, i8*, i64) local_unnamed_addr #4

declare void @_ZNK3viz12SurfaceRange8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.viz::SurfaceRange"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK2cc16SurfaceLayerImpl17LayerTypeAsStringEv(%"class.cc::SurfaceLayerImpl"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)
}

declare void @_ZN2cc9LayerImpl7DidDrawEPN3viz22ClientResourceProviderE(%"class.cc::LayerImpl"*, %"class.viz::ClientResourceProvider"*) unnamed_addr #4

declare void @_ZNK2cc9LayerImpl21GetContentsResourceIdEPN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEPN3gfx4SizeEPNS7_5SizeFE(%"class.cc::LayerImpl"*, %"class.util::IdType.1317"*, %"class.gfx::Size"*, %"class.gfx::SizeF"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc9LayerImpl22NotifyTileStateChangedEPKNS_4TileE(%"class.cc::LayerImpl"*, %"class.cc::Tile"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK2cc9LayerImpl16IsScrollbarLayerEv(%"class.cc::LayerImpl"*) unnamed_addr #4

declare { i64, i64 } @_ZNK2cc9LayerImpl13GetDamageRectEv(%"class.cc::LayerImpl"*) unnamed_addr #4

declare void @_ZN2cc9LayerImpl19ResetChangeTrackingEv(%"class.cc::LayerImpl"*) unnamed_addr #4

declare void @_ZNK2cc9LayerImpl19VisibleOpaqueRegionEv(%"class.cc::SimpleEnclosedRegion"* sret, %"class.cc::LayerImpl"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc9LayerImpl15DidBecomeActiveEv(%"class.cc::LayerImpl"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2cc9LayerImpl15DidBeginTracingEv(%"class.cc::LayerImpl"*) unnamed_addr #4

declare void @_ZN2cc9LayerImpl16ReleaseResourcesEv(%"class.cc::LayerImpl"*) unnamed_addr #4

declare void @_ZN2cc9LayerImpl13OnPurgeMemoryEv(%"class.cc::LayerImpl"*) unnamed_addr #4

declare void @_ZN2cc9LayerImpl20ReleaseTileResourcesEv(%"class.cc::LayerImpl"*) unnamed_addr #4

declare void @_ZN2cc9LayerImpl21RecreateTileResourcesEv(%"class.cc::LayerImpl"*) unnamed_addr #4

declare zeroext i1 @_ZN2cc9LayerImpl28IsSnappedToPixelGridInTargetEv(%"class.cc::LayerImpl"*) unnamed_addr #4

declare void @_ZNK2cc9LayerImpl32GetAllPrioritizedTilesForTracingEPNSt3__16vectorINS_15PrioritizedTileENS1_9allocatorIS3_EEEE(%"class.cc::LayerImpl"*, %"class.std::__1::vector.1347"*) unnamed_addr #4

declare i64 @_ZNK2cc9LayerImpl21GPUMemoryUsageInBytesEv(%"class.cc::LayerImpl"*) unnamed_addr #4

declare void @_ZN2cc9LayerImpl17RunMicroBenchmarkEPNS_18MicroBenchmarkImplE(%"class.cc::LayerImpl"*, %"class.cc::MicroBenchmarkImpl"*) unnamed_addr #4

declare void @_ZN2cc9LayerImpl33GetInvalidationRegionForDebuggingEv(%"class.cc::Region"* sret, %"class.cc::LayerImpl"*) unnamed_addr #4

declare zeroext i8 @_ZNK2cc9LayerImpl20GetContentColorUsageEv(%"class.cc::LayerImpl"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare i64 @_ZNK3viz14LocalSurfaceId15persistent_hashEv(%"class.viz::LocalSurfaceId"*) local_unnamed_addr #4

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN2cc16SurfaceLayerImpl6CreateEPNS3_13LayerTreeImplEiE3$_0JEEEFvbPNS_13WaitableEventEEE3RunEPNS0_13BindStateBaseEbSA_"(%"class.base::internal::BindStateBase"* nocapture readnone, i1 zeroext, %"class.base::WaitableEvent"*) #0 align 2 {
  %4 = icmp eq %"class.base::WaitableEvent"* %2, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* nonnull %2) #13
  br label %6

6:                                                ; preds = %3, %5
  ret void
}

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN2cc16SurfaceLayerImpl6CreateEPNS2_13LayerTreeImplEiE3$_0JEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"*, i64, i64) local_unnamed_addr #4

declare void @_ZN3viz15SurfaceDrawQuadC1Ev(%"class.viz::SurfaceDrawQuad"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.1305"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1305", %"class.std::__1::vector.1305"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.viz::SurfaceId"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1305"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1305"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1305", %"class.std::__1::vector.1305"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.viz::SurfaceId"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.viz::SurfaceId"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.viz::SurfaceId"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9
  %38 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %35
  %39 = ptrtoint %"class.viz::SurfaceId"* %38 to i64
  %40 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %40, align 4
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 0, i32 1
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %43, align 4
  %46 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 1, i32 0
  %47 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 8
  store i32 %48, i32* %46, align 8
  %49 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 1, i32 1
  %50 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %49, align 4
  %52 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 1, i32 2
  %53 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %54 = bitcast %"class.base::UnguessableToken"* %52 to i8*
  %55 = bitcast %"class.base::UnguessableToken"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #13
  %56 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 1
  %57 = ptrtoint %"class.viz::SurfaceId"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.1305", %"class.std::__1::vector.1305"* %0, i64 0, i32 0, i32 0
  %59 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %58, align 8
  %60 = ptrtoint %"class.viz::SurfaceId"* %59 to i64
  %61 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  %62 = icmp eq %"class.viz::SurfaceId"* %61, %59
  br i1 %62, label %134, label %63

63:                                               ; preds = %34
  %64 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 0, i32 0
  %65 = ptrtoint i32* %64 to i64
  %66 = sub i64 %65, %60
  %67 = and i64 %66, 32
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %88

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1
  %71 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 0, i32 0
  %72 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %70, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %71, align 4
  %74 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 0, i32 1
  %75 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 1, i32 0
  %78 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 1, i32 0
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 1, i32 1
  %81 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 1, i32 2
  %84 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 1, i32 2
  %85 = bitcast %"class.base::UnguessableToken"* %83 to i8*
  %86 = bitcast %"class.base::UnguessableToken"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #13
  %87 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1
  br label %88

88:                                               ; preds = %69, %63
  %89 = phi %"class.viz::SurfaceId"* [ undef, %63 ], [ %87, %69 ]
  %90 = phi %"class.viz::SurfaceId"* [ %37, %63 ], [ %87, %69 ]
  %91 = phi %"class.viz::SurfaceId"* [ %61, %63 ], [ %70, %69 ]
  %92 = icmp ult i64 %66, 32
  br i1 %92, label %131, label %93

93:                                               ; preds = %88, %93
  %94 = phi %"class.viz::SurfaceId"* [ %129, %93 ], [ %90, %88 ]
  %95 = phi %"class.viz::SurfaceId"* [ %112, %93 ], [ %91, %88 ]
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 0, i32 0
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 0, i32 1
  %100 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 1, i32 0
  %103 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 1, i32 0
  %104 = load i32, i32* %103, align 8
  store i32 %104, i32* %102, align 8
  %105 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 1, i32 1
  %106 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 1, i32 1
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 1, i32 2
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 1, i32 2
  %110 = bitcast %"class.base::UnguessableToken"* %108 to i8*
  %111 = bitcast %"class.base::UnguessableToken"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 16, i1 false) #13
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 0, i32 0
  %114 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %112, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %113, align 4
  %116 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 0, i32 1
  %117 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %116, align 4
  %119 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 1, i32 0
  %120 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 1, i32 0
  %121 = load i32, i32* %120, align 8
  store i32 %121, i32* %119, align 8
  %122 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 1, i32 1
  %123 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 1, i32 1
  %124 = load i32, i32* %123, align 4
  store i32 %124, i32* %122, align 4
  %125 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 1, i32 2
  %126 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 1, i32 2
  %127 = bitcast %"class.base::UnguessableToken"* %125 to i8*
  %128 = bitcast %"class.base::UnguessableToken"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #13
  %129 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2
  %130 = icmp eq %"class.viz::SurfaceId"* %112, %59
  br i1 %130, label %131, label %93

131:                                              ; preds = %93, %88
  %132 = phi %"class.viz::SurfaceId"* [ %89, %88 ], [ %129, %93 ]
  %133 = load i64, i64* %6, align 8
  br label %134

134:                                              ; preds = %34, %131
  %135 = phi %"class.viz::SurfaceId"* [ %132, %131 ], [ %37, %34 ]
  %136 = phi i64 [ %133, %131 ], [ %60, %34 ]
  %137 = ptrtoint %"class.viz::SurfaceId"* %135 to i64
  store i64 %137, i64* %6, align 8
  store i64 %57, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %138 = icmp eq i64 %136, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %134
  %140 = inttoptr i64 %136 to i8*
  tail call void @_ZdlPv(i8* %140) #12
  br label %141

141:                                              ; preds = %134, %139
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

declare void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN2cc16SurfaceLayerImpl6CreateEPNS3_13LayerTreeImplEiE3$_0JEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN2cc16SurfaceLayerImpl6CreateEPNS3_13LayerTreeImplEiE3$_0JEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIZN2cc16SurfaceLayerImpl6CreateEPNS1_13LayerTreeImplEiE3$_0JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIZN2cc16SurfaceLayerImpl6CreateEPNS1_13LayerTreeImplEiE3$_0JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!7 = !{i8 0, i8 2}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!"branch_weights", i32 2000, i32 1}
