; ModuleID = '../../third_party/icu/source/common/bytestrie.cpp'
source_filename = "../../third_party/icu/source/common/bytestrie.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::BytesTrie" = type <{ i8*, i8*, i8*, i32, [4 x i8] }>
%"class.icu_69::ByteSink" = type { i32 (...)** }

@_ZN6icu_699BytesTrieD1Ev = hidden unnamed_addr alias void (%"class.icu_69::BytesTrie"*), void (%"class.icu_69::BytesTrie"*)* @_ZN6icu_699BytesTrieD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699BytesTrieD2Ev(%"class.icu_69::BytesTrie"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  tail call void @uprv_free_69(i8* %3) #6
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6icu_699BytesTrie9readValueEPKhi(i8* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = icmp slt i32 %1, 81
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = add nsw i32 %1, -16
  br label %58

6:                                                ; preds = %2
  %7 = icmp slt i32 %1, 108
  br i1 %7, label %8, label %14

8:                                                ; preds = %6
  %9 = shl i32 %1, 8
  %10 = add nsw i32 %9, -20736
  %11 = load i8, i8* %0, align 1
  %12 = zext i8 %11 to i32
  %13 = or i32 %10, %12
  br label %58

14:                                               ; preds = %6
  %15 = icmp slt i32 %1, 126
  br i1 %15, label %16, label %27

16:                                               ; preds = %14
  %17 = shl i32 %1, 16
  %18 = add nsw i32 %17, -7077888
  %19 = load i8, i8* %0, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %21, %18
  %23 = getelementptr inbounds i8, i8* %0, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = or i32 %22, %25
  br label %58

27:                                               ; preds = %14
  %28 = icmp eq i32 %1, 126
  %29 = load i8, i8* %0, align 1
  %30 = zext i8 %29 to i32
  br i1 %28, label %31, label %42

31:                                               ; preds = %27
  %32 = shl nuw nsw i32 %30, 16
  %33 = getelementptr inbounds i8, i8* %0, i64 1
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = or i32 %36, %32
  %38 = getelementptr inbounds i8, i8* %0, i64 2
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %37, %40
  br label %58

42:                                               ; preds = %27
  %43 = shl nuw i32 %30, 24
  %44 = getelementptr inbounds i8, i8* %0, i64 1
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = shl nuw nsw i32 %46, 16
  %48 = or i32 %47, %43
  %49 = getelementptr inbounds i8, i8* %0, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = or i32 %48, %52
  %54 = getelementptr inbounds i8, i8* %0, i64 3
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = or i32 %53, %56
  br label %58

58:                                               ; preds = %8, %31, %42, %16, %4
  %59 = phi i32 [ %5, %4 ], [ %13, %8 ], [ %26, %16 ], [ %41, %31 ], [ %57, %42 ]
  ret i32 %59
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN6icu_699BytesTrie11jumpByDeltaEPKh(i8* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 1
  %3 = load i8, i8* %0, align 1
  %4 = zext i8 %3 to i32
  %5 = icmp ult i8 %3, -64
  br i1 %5, label %62, label %6

6:                                                ; preds = %1
  %7 = icmp ult i8 %3, -16
  br i1 %7, label %8, label %15

8:                                                ; preds = %6
  %9 = shl nuw nsw i32 %4, 8
  %10 = add nsw i32 %9, -49152
  %11 = getelementptr inbounds i8, i8* %0, i64 2
  %12 = load i8, i8* %2, align 1
  %13 = zext i8 %12 to i32
  %14 = or i32 %10, %13
  br label %62

15:                                               ; preds = %6
  %16 = icmp ult i8 %3, -2
  br i1 %16, label %17, label %29

17:                                               ; preds = %15
  %18 = shl nuw nsw i32 %4, 16
  %19 = add nsw i32 %18, -15728640
  %20 = load i8, i8* %2, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 8
  %23 = or i32 %22, %19
  %24 = getelementptr inbounds i8, i8* %0, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = or i32 %23, %26
  %28 = getelementptr inbounds i8, i8* %0, i64 3
  br label %62

29:                                               ; preds = %15
  %30 = icmp eq i8 %3, -2
  %31 = load i8, i8* %2, align 1
  %32 = zext i8 %31 to i32
  br i1 %30, label %33, label %45

33:                                               ; preds = %29
  %34 = shl nuw nsw i32 %32, 16
  %35 = getelementptr inbounds i8, i8* %0, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl nuw nsw i32 %37, 8
  %39 = or i32 %38, %34
  %40 = getelementptr inbounds i8, i8* %0, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = or i32 %39, %42
  %44 = getelementptr inbounds i8, i8* %0, i64 4
  br label %62

45:                                               ; preds = %29
  %46 = shl nuw i32 %32, 24
  %47 = getelementptr inbounds i8, i8* %0, i64 2
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 16
  %51 = or i32 %50, %46
  %52 = getelementptr inbounds i8, i8* %0, i64 3
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = shl nuw nsw i32 %54, 8
  %56 = or i32 %51, %55
  %57 = getelementptr inbounds i8, i8* %0, i64 4
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = or i32 %56, %59
  %61 = getelementptr inbounds i8, i8* %0, i64 5
  br label %62

62:                                               ; preds = %8, %33, %45, %17, %1
  %63 = phi i8* [ %2, %1 ], [ %11, %8 ], [ %28, %17 ], [ %44, %33 ], [ %61, %45 ]
  %64 = phi i32 [ %4, %1 ], [ %14, %8 ], [ %27, %17 ], [ %43, %33 ], [ %60, %45 ]
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %63, i64 %65
  ret i8* %66
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_699BytesTrie7currentEv(%"class.icu_69::BytesTrie"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = load i8, i8* %3, align 1
  %11 = icmp ugt i8 %10, 31
  br i1 %11, label %12, label %16

12:                                               ; preds = %9
  %13 = and i8 %10, 1
  %14 = xor i8 %13, 3
  %15 = zext i8 %14 to i32
  br label %16

16:                                               ; preds = %12, %9, %5, %1
  %17 = phi i32 [ 0, %1 ], [ %15, %12 ], [ 1, %9 ], [ 1, %5 ]
  ret i32 %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_699BytesTrie10branchNextEPKhii(%"class.icu_69::BytesTrie"* nocapture, i8*, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  %8 = load i8, i8* %1, align 1
  %9 = zext i8 %8 to i32
  br label %10

10:                                               ; preds = %6, %4
  %11 = phi i8* [ %7, %6 ], [ %1, %4 ]
  %12 = phi i32 [ %9, %6 ], [ %2, %4 ]
  %13 = add nsw i32 %12, 1
  %14 = icmp sgt i32 %12, 4
  br i1 %14, label %15, label %111

15:                                               ; preds = %10, %107
  %16 = phi i32 [ %109, %107 ], [ %13, %10 ]
  %17 = phi i8* [ %108, %107 ], [ %11, %10 ]
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  %19 = load i8, i8* %17, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp sgt i32 %20, %3
  %22 = lshr i32 %16, 1
  br i1 %21, label %23, label %89

23:                                               ; preds = %15
  %24 = getelementptr inbounds i8, i8* %17, i64 2
  %25 = load i8, i8* %18, align 1
  %26 = zext i8 %25 to i32
  %27 = icmp ult i8 %25, -64
  br i1 %27, label %84, label %28

28:                                               ; preds = %23
  %29 = icmp ult i8 %25, -16
  br i1 %29, label %30, label %37

30:                                               ; preds = %28
  %31 = shl nuw nsw i32 %26, 8
  %32 = add nsw i32 %31, -49152
  %33 = getelementptr inbounds i8, i8* %17, i64 3
  %34 = load i8, i8* %24, align 1
  %35 = zext i8 %34 to i32
  %36 = or i32 %32, %35
  br label %84

37:                                               ; preds = %28
  %38 = icmp ult i8 %25, -2
  br i1 %38, label %39, label %51

39:                                               ; preds = %37
  %40 = shl nuw nsw i32 %26, 16
  %41 = add nsw i32 %40, -15728640
  %42 = load i8, i8* %24, align 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw nsw i32 %43, 8
  %45 = or i32 %44, %41
  %46 = getelementptr inbounds i8, i8* %17, i64 3
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = or i32 %45, %48
  %50 = getelementptr inbounds i8, i8* %17, i64 4
  br label %84

51:                                               ; preds = %37
  %52 = icmp eq i8 %25, -2
  %53 = load i8, i8* %24, align 1
  %54 = zext i8 %53 to i32
  br i1 %52, label %55, label %67

55:                                               ; preds = %51
  %56 = shl nuw nsw i32 %54, 16
  %57 = getelementptr inbounds i8, i8* %17, i64 3
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = shl nuw nsw i32 %59, 8
  %61 = or i32 %60, %56
  %62 = getelementptr inbounds i8, i8* %17, i64 4
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = or i32 %61, %64
  %66 = getelementptr inbounds i8, i8* %17, i64 5
  br label %84

67:                                               ; preds = %51
  %68 = shl nuw i32 %54, 24
  %69 = getelementptr inbounds i8, i8* %17, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = shl nuw nsw i32 %71, 16
  %73 = or i32 %72, %68
  %74 = getelementptr inbounds i8, i8* %17, i64 4
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = shl nuw nsw i32 %76, 8
  %78 = or i32 %73, %77
  %79 = getelementptr inbounds i8, i8* %17, i64 5
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = or i32 %78, %81
  %83 = getelementptr inbounds i8, i8* %17, i64 6
  br label %84

84:                                               ; preds = %23, %30, %39, %55, %67
  %85 = phi i8* [ %24, %23 ], [ %33, %30 ], [ %50, %39 ], [ %66, %55 ], [ %83, %67 ]
  %86 = phi i32 [ %26, %23 ], [ %36, %30 ], [ %49, %39 ], [ %65, %55 ], [ %82, %67 ]
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  br label %107

89:                                               ; preds = %15
  %90 = sub nsw i32 %16, %22
  %91 = getelementptr inbounds i8, i8* %17, i64 2
  %92 = load i8, i8* %18, align 1
  %93 = icmp ugt i8 %92, -65
  br i1 %93, label %94, label %107

94:                                               ; preds = %89
  %95 = icmp ult i8 %92, -16
  br i1 %95, label %96, label %98

96:                                               ; preds = %94
  %97 = getelementptr inbounds i8, i8* %17, i64 3
  br label %107

98:                                               ; preds = %94
  %99 = icmp ult i8 %92, -2
  br i1 %99, label %100, label %102

100:                                              ; preds = %98
  %101 = getelementptr inbounds i8, i8* %17, i64 4
  br label %107

102:                                              ; preds = %98
  %103 = and i8 %92, 1
  %104 = add nuw nsw i8 %103, 3
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds i8, i8* %91, i64 %105
  br label %107

107:                                              ; preds = %102, %100, %96, %89, %84
  %108 = phi i8* [ %88, %84 ], [ %97, %96 ], [ %101, %100 ], [ %106, %102 ], [ %91, %89 ]
  %109 = phi i32 [ %22, %84 ], [ %90, %96 ], [ %90, %100 ], [ %90, %102 ], [ %90, %89 ]
  %110 = icmp sgt i32 %109, 5
  br i1 %110, label %15, label %111

111:                                              ; preds = %107, %10
  %112 = phi i8* [ %11, %10 ], [ %108, %107 ]
  %113 = phi i32 [ %13, %10 ], [ %109, %107 ]
  br label %114

114:                                              ; preds = %111, %222
  %115 = phi i8* [ %223, %222 ], [ %112, %111 ]
  %116 = phi i32 [ %204, %222 ], [ %113, %111 ]
  %117 = getelementptr inbounds i8, i8* %115, i64 1
  %118 = load i8, i8* %115, align 1
  %119 = zext i8 %118 to i32
  %120 = icmp eq i32 %119, %3
  br i1 %120, label %121, label %203

121:                                              ; preds = %114
  %122 = load i8, i8* %117, align 1
  %123 = zext i8 %122 to i32
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %199

126:                                              ; preds = %121
  %127 = getelementptr inbounds i8, i8* %115, i64 2
  %128 = lshr i32 %123, 1
  %129 = icmp ult i8 %122, -94
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  %131 = add nsw i32 %128, -16
  br label %188

132:                                              ; preds = %126
  %133 = icmp ult i8 %122, -40
  br i1 %133, label %134, label %141

134:                                              ; preds = %132
  %135 = shl nuw nsw i32 %128, 8
  %136 = add nsw i32 %135, -20736
  %137 = getelementptr inbounds i8, i8* %115, i64 3
  %138 = load i8, i8* %127, align 1
  %139 = zext i8 %138 to i32
  %140 = or i32 %136, %139
  br label %188

141:                                              ; preds = %132
  %142 = icmp ult i8 %122, -4
  br i1 %142, label %143, label %155

143:                                              ; preds = %141
  %144 = shl nuw nsw i32 %128, 16
  %145 = add nsw i32 %144, -7077888
  %146 = load i8, i8* %127, align 1
  %147 = zext i8 %146 to i32
  %148 = shl nuw nsw i32 %147, 8
  %149 = or i32 %148, %145
  %150 = getelementptr inbounds i8, i8* %115, i64 3
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = or i32 %149, %152
  %154 = getelementptr inbounds i8, i8* %115, i64 4
  br label %188

155:                                              ; preds = %141
  %156 = icmp eq i32 %128, 126
  %157 = load i8, i8* %127, align 1
  %158 = zext i8 %157 to i32
  br i1 %156, label %159, label %171

159:                                              ; preds = %155
  %160 = shl nuw nsw i32 %158, 16
  %161 = getelementptr inbounds i8, i8* %115, i64 3
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = shl nuw nsw i32 %163, 8
  %165 = or i32 %164, %160
  %166 = getelementptr inbounds i8, i8* %115, i64 4
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i32
  %169 = or i32 %165, %168
  %170 = getelementptr inbounds i8, i8* %115, i64 5
  br label %188

171:                                              ; preds = %155
  %172 = shl nuw i32 %158, 24
  %173 = getelementptr inbounds i8, i8* %115, i64 3
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = shl nuw nsw i32 %175, 16
  %177 = or i32 %176, %172
  %178 = getelementptr inbounds i8, i8* %115, i64 4
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  %181 = shl nuw nsw i32 %180, 8
  %182 = or i32 %177, %181
  %183 = getelementptr inbounds i8, i8* %115, i64 5
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = or i32 %182, %185
  %187 = getelementptr inbounds i8, i8* %115, i64 6
  br label %188

188:                                              ; preds = %134, %159, %171, %143, %130
  %189 = phi i8* [ %127, %130 ], [ %137, %134 ], [ %154, %143 ], [ %170, %159 ], [ %187, %171 ]
  %190 = phi i32 [ %131, %130 ], [ %140, %134 ], [ %153, %143 ], [ %169, %159 ], [ %186, %171 ]
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i8, i8* %189, i64 %191
  %193 = load i8, i8* %192, align 1
  %194 = icmp ugt i8 %193, 31
  br i1 %194, label %195, label %199

195:                                              ; preds = %188
  %196 = and i8 %193, 1
  %197 = xor i8 %196, 3
  %198 = zext i8 %197 to i32
  br label %199

199:                                              ; preds = %195, %188, %121
  %200 = phi i8* [ %117, %121 ], [ %192, %188 ], [ %192, %195 ]
  %201 = phi i32 [ 2, %121 ], [ 1, %188 ], [ %198, %195 ]
  %202 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 2
  store i8* %200, i8** %202, align 8
  br label %239

203:                                              ; preds = %114
  %204 = add nsw i32 %116, -1
  %205 = getelementptr inbounds i8, i8* %115, i64 2
  %206 = load i8, i8* %117, align 1
  %207 = icmp ugt i8 %206, -95
  br i1 %207, label %208, label %222

208:                                              ; preds = %203
  %209 = icmp ult i8 %206, -40
  br i1 %209, label %210, label %212

210:                                              ; preds = %208
  %211 = getelementptr inbounds i8, i8* %115, i64 3
  br label %222

212:                                              ; preds = %208
  %213 = icmp ult i8 %206, -4
  br i1 %213, label %214, label %216

214:                                              ; preds = %212
  %215 = getelementptr inbounds i8, i8* %115, i64 4
  br label %222

216:                                              ; preds = %212
  %217 = lshr i8 %206, 1
  %218 = and i8 %217, 1
  %219 = add nuw nsw i8 %218, 3
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds i8, i8* %205, i64 %220
  br label %222

222:                                              ; preds = %203, %210, %214, %216
  %223 = phi i8* [ %211, %210 ], [ %215, %214 ], [ %221, %216 ], [ %205, %203 ]
  %224 = icmp sgt i32 %204, 1
  br i1 %224, label %114, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds i8, i8* %223, i64 1
  %227 = load i8, i8* %223, align 1
  %228 = zext i8 %227 to i32
  %229 = icmp eq i32 %228, %3
  %230 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 2
  br i1 %229, label %231, label %238

231:                                              ; preds = %225
  store i8* %226, i8** %230, align 8
  %232 = load i8, i8* %226, align 1
  %233 = icmp ugt i8 %232, 31
  br i1 %233, label %234, label %239

234:                                              ; preds = %231
  %235 = and i8 %232, 1
  %236 = xor i8 %235, 3
  %237 = zext i8 %236 to i32
  br label %239

238:                                              ; preds = %225
  store i8* null, i8** %230, align 8
  br label %239

239:                                              ; preds = %234, %231, %238, %199
  %240 = phi i32 [ %201, %199 ], [ 0, %238 ], [ %237, %234 ], [ 1, %231 ]
  ret i32 %240
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_699BytesTrie8nextImplEPKhi(%"class.icu_69::BytesTrie"* nocapture, i8*, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds i8, i8* %1, i64 1
  %5 = load i8, i8* %1, align 1
  %6 = zext i8 %5 to i32
  %7 = icmp ult i8 %5, 16
  br i1 %7, label %10, label %14

8:                                                ; preds = %56
  %9 = zext i8 %59 to i32
  br label %10

10:                                               ; preds = %8, %3
  %11 = phi i8* [ %4, %3 ], [ %58, %8 ]
  %12 = phi i32 [ %6, %3 ], [ %9, %8 ]
  %13 = tail call i32 @_ZN6icu_699BytesTrie10branchNextEPKhii(%"class.icu_69::BytesTrie"* %0, i8* %11, i32 %12, i32 %2)
  br label %64

14:                                               ; preds = %3, %56
  %15 = phi i32 [ %60, %56 ], [ %6, %3 ]
  %16 = phi i8 [ %59, %56 ], [ %5, %3 ]
  %17 = phi i8* [ %58, %56 ], [ %4, %3 ]
  %18 = phi i8* [ %57, %56 ], [ %1, %3 ]
  %19 = icmp ult i8 %16, 32
  br i1 %19, label %20, label %37

20:                                               ; preds = %14
  %21 = getelementptr inbounds i8, i8* %18, i64 2
  %22 = load i8, i8* %17, align 1
  %23 = zext i8 %22 to i32
  %24 = icmp eq i32 %23, %2
  br i1 %24, label %25, label %62

25:                                               ; preds = %20
  %26 = add nsw i32 %15, -17
  %27 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 3
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 2
  store i8* %21, i8** %28, align 8
  %29 = icmp slt i32 %26, 0
  br i1 %29, label %30, label %64

30:                                               ; preds = %25
  %31 = load i8, i8* %21, align 1
  %32 = icmp ugt i8 %31, 31
  br i1 %32, label %33, label %64

33:                                               ; preds = %30
  %34 = and i8 %31, 1
  %35 = xor i8 %34, 3
  %36 = zext i8 %35 to i32
  br label %64

37:                                               ; preds = %14
  %38 = and i32 %15, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %62

40:                                               ; preds = %37
  %41 = icmp ugt i8 %16, -95
  br i1 %41, label %42, label %56

42:                                               ; preds = %40
  %43 = icmp ult i8 %16, -40
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = getelementptr inbounds i8, i8* %18, i64 2
  br label %56

46:                                               ; preds = %42
  %47 = icmp ult i8 %16, -4
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = getelementptr inbounds i8, i8* %18, i64 3
  br label %56

50:                                               ; preds = %46
  %51 = lshr i32 %15, 1
  %52 = and i32 %51, 1
  %53 = add nuw nsw i32 %52, 3
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %17, i64 %54
  br label %56

56:                                               ; preds = %50, %48, %44, %40
  %57 = phi i8* [ %45, %44 ], [ %49, %48 ], [ %55, %50 ], [ %17, %40 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  %59 = load i8, i8* %57, align 1
  %60 = zext i8 %59 to i32
  %61 = icmp ult i8 %59, 16
  br i1 %61, label %8, label %14

62:                                               ; preds = %37, %20
  %63 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 2
  store i8* null, i8** %63, align 8
  br label %64

64:                                               ; preds = %33, %30, %25, %10, %62
  %65 = phi i32 [ 0, %62 ], [ 1, %25 ], [ 1, %30 ], [ %36, %33 ], [ %13, %10 ]
  ret i32 %65
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_699BytesTrie4nextEi(%"class.icu_69::BytesTrie"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %84, label %6

6:                                                ; preds = %2
  %7 = icmp slt i32 %1, 0
  %8 = add nsw i32 %1, 256
  %9 = select i1 %7, i32 %8, i32 %1
  %10 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, -1
  %13 = getelementptr inbounds i8, i8* %4, i64 1
  %14 = load i8, i8* %4, align 1
  %15 = zext i8 %14 to i32
  br i1 %12, label %16, label %29

16:                                               ; preds = %6
  %17 = icmp eq i32 %9, %15
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = add nsw i32 %11, -1
  store i32 %19, i32* %10, align 8
  store i8* %13, i8** %3, align 8
  %20 = icmp slt i32 %11, 1
  br i1 %20, label %21, label %84

21:                                               ; preds = %18
  %22 = load i8, i8* %13, align 1
  %23 = icmp ugt i8 %22, 31
  br i1 %23, label %24, label %84

24:                                               ; preds = %21
  %25 = and i8 %22, 1
  %26 = xor i8 %25, 3
  %27 = zext i8 %26 to i32
  br label %84

28:                                               ; preds = %16
  store i8* null, i8** %3, align 8
  br label %84

29:                                               ; preds = %6
  %30 = icmp ult i8 %14, 16
  br i1 %30, label %33, label %37

31:                                               ; preds = %77
  %32 = zext i8 %80 to i32
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i8* [ %13, %29 ], [ %79, %31 ]
  %35 = phi i32 [ %15, %29 ], [ %32, %31 ]
  %36 = tail call i32 @_ZN6icu_699BytesTrie10branchNextEPKhii(%"class.icu_69::BytesTrie"* %0, i8* %34, i32 %35, i32 %9) #6
  br label %84

37:                                               ; preds = %29, %77
  %38 = phi i32 [ %81, %77 ], [ %15, %29 ]
  %39 = phi i8 [ %80, %77 ], [ %14, %29 ]
  %40 = phi i8* [ %79, %77 ], [ %13, %29 ]
  %41 = phi i8* [ %78, %77 ], [ %4, %29 ]
  %42 = icmp ult i8 %39, 32
  br i1 %42, label %43, label %58

43:                                               ; preds = %37
  %44 = getelementptr inbounds i8, i8* %41, i64 2
  %45 = load i8, i8* %40, align 1
  %46 = zext i8 %45 to i32
  %47 = icmp eq i32 %9, %46
  br i1 %47, label %48, label %83

48:                                               ; preds = %43
  %49 = add nsw i32 %38, -17
  store i32 %49, i32* %10, align 8
  store i8* %44, i8** %3, align 8
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %84

51:                                               ; preds = %48
  %52 = load i8, i8* %44, align 1
  %53 = icmp ugt i8 %52, 31
  br i1 %53, label %54, label %84

54:                                               ; preds = %51
  %55 = and i8 %52, 1
  %56 = xor i8 %55, 3
  %57 = zext i8 %56 to i32
  br label %84

58:                                               ; preds = %37
  %59 = and i32 %38, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %83

61:                                               ; preds = %58
  %62 = icmp ugt i8 %39, -95
  br i1 %62, label %63, label %77

63:                                               ; preds = %61
  %64 = icmp ult i8 %39, -40
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = getelementptr inbounds i8, i8* %41, i64 2
  br label %77

67:                                               ; preds = %63
  %68 = icmp ult i8 %39, -4
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = getelementptr inbounds i8, i8* %41, i64 3
  br label %77

71:                                               ; preds = %67
  %72 = lshr i32 %38, 1
  %73 = and i32 %72, 1
  %74 = add nuw nsw i32 %73, 3
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %40, i64 %75
  br label %77

77:                                               ; preds = %71, %69, %65, %61
  %78 = phi i8* [ %66, %65 ], [ %70, %69 ], [ %76, %71 ], [ %40, %61 ]
  %79 = getelementptr inbounds i8, i8* %78, i64 1
  %80 = load i8, i8* %78, align 1
  %81 = zext i8 %80 to i32
  %82 = icmp ult i8 %80, 16
  br i1 %82, label %31, label %37

83:                                               ; preds = %58, %43
  store i8* null, i8** %3, align 8
  br label %84

84:                                               ; preds = %83, %54, %51, %48, %33, %28, %18, %21, %24, %2
  %85 = phi i32 [ 0, %2 ], [ 0, %28 ], [ %27, %24 ], [ 1, %21 ], [ 1, %18 ], [ 0, %83 ], [ 1, %48 ], [ 1, %51 ], [ %57, %54 ], [ %36, %33 ]
  ret i32 %85
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_699BytesTrie4nextEPKci(%"class.icu_69::BytesTrie"* nocapture, i8* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %4 = icmp slt i32 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = load i8, i8* %1, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %25

8:                                                ; preds = %3
  %9 = icmp eq i32 %2, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %8, %5
  %11 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %177, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %177

18:                                               ; preds = %14
  %19 = load i8, i8* %12, align 1
  %20 = icmp ugt i8 %19, 31
  br i1 %20, label %21, label %177

21:                                               ; preds = %18
  %22 = and i8 %19, 1
  %23 = xor i8 %22, 3
  %24 = zext i8 %23 to i32
  br label %177

25:                                               ; preds = %8, %5
  %26 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 2
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %177, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  br label %32

32:                                               ; preds = %173, %29
  %33 = phi i8* [ %1, %29 ], [ %111, %173 ]
  %34 = phi i32 [ %2, %29 ], [ %112, %173 ]
  %35 = phi i8* [ %27, %29 ], [ %175, %173 ]
  %36 = phi i32 [ %31, %29 ], [ %176, %173 ]
  %37 = icmp slt i32 %34, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %72, label %83

40:                                               ; preds = %32
  %41 = load i8, i8* %33, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %54

43:                                               ; preds = %40, %67
  %44 = phi i8* [ %68, %67 ], [ %35, %40 ]
  %45 = phi i32 [ %69, %67 ], [ %36, %40 ]
  store i32 %45, i32* %30, align 8
  store i8* %44, i8** %26, align 8
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %47, label %177

47:                                               ; preds = %43
  %48 = load i8, i8* %44, align 1
  %49 = icmp ugt i8 %48, 31
  br i1 %49, label %50, label %177

50:                                               ; preds = %47
  %51 = and i8 %48, 1
  %52 = xor i8 %51, 3
  %53 = zext i8 %52 to i32
  br label %177

54:                                               ; preds = %40, %67
  %55 = phi i8 [ %70, %67 ], [ %41, %40 ]
  %56 = phi i8* [ %59, %67 ], [ %33, %40 ]
  %57 = phi i32 [ %69, %67 ], [ %36, %40 ]
  %58 = phi i8* [ %68, %67 ], [ %35, %40 ]
  %59 = getelementptr inbounds i8, i8* %56, i64 1
  %60 = sext i8 %55 to i32
  %61 = icmp slt i32 %57, 0
  br i1 %61, label %104, label %62

62:                                               ; preds = %54
  %63 = load i8, i8* %58, align 1
  %64 = zext i8 %63 to i32
  %65 = icmp eq i32 %60, %64
  br i1 %65, label %67, label %66

66:                                               ; preds = %62
  store i8* null, i8** %26, align 8
  br label %177

67:                                               ; preds = %62
  %68 = getelementptr inbounds i8, i8* %58, i64 1
  %69 = add nsw i32 %57, -1
  %70 = load i8, i8* %59, align 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %43, label %54

72:                                               ; preds = %38, %98
  %73 = phi i8* [ %99, %98 ], [ %35, %38 ]
  %74 = phi i32 [ %100, %98 ], [ %36, %38 ]
  store i32 %74, i32* %30, align 8
  store i8* %73, i8** %26, align 8
  %75 = icmp slt i32 %74, 0
  br i1 %75, label %76, label %177

76:                                               ; preds = %72
  %77 = load i8, i8* %73, align 1
  %78 = icmp ugt i8 %77, 31
  br i1 %78, label %79, label %177

79:                                               ; preds = %76
  %80 = and i8 %77, 1
  %81 = xor i8 %80, 3
  %82 = zext i8 %81 to i32
  br label %177

83:                                               ; preds = %38, %98
  %84 = phi i32 [ %100, %98 ], [ %36, %38 ]
  %85 = phi i8* [ %99, %98 ], [ %35, %38 ]
  %86 = phi i32 [ %90, %98 ], [ %34, %38 ]
  %87 = phi i8* [ %88, %98 ], [ %33, %38 ]
  %88 = getelementptr inbounds i8, i8* %87, i64 1
  %89 = load i8, i8* %87, align 1
  %90 = add nsw i32 %86, -1
  %91 = icmp slt i32 %84, 0
  %92 = sext i8 %89 to i32
  br i1 %91, label %102, label %93

93:                                               ; preds = %83
  %94 = load i8, i8* %85, align 1
  %95 = zext i8 %94 to i32
  %96 = icmp eq i32 %92, %95
  br i1 %96, label %98, label %97

97:                                               ; preds = %93
  store i8* null, i8** %26, align 8
  br label %177

98:                                               ; preds = %93
  %99 = getelementptr inbounds i8, i8* %85, i64 1
  %100 = add nsw i32 %84, -1
  %101 = icmp eq i32 %90, 0
  br i1 %101, label %72, label %83

102:                                              ; preds = %83
  %103 = sext i8 %89 to i32
  br label %104

104:                                              ; preds = %54, %102
  %105 = phi i32 [ %84, %102 ], [ %57, %54 ]
  %106 = phi i8* [ %88, %102 ], [ %59, %54 ]
  %107 = phi i32 [ %90, %102 ], [ %34, %54 ]
  %108 = phi i8* [ %85, %102 ], [ %58, %54 ]
  %109 = phi i32 [ %103, %102 ], [ %60, %54 ]
  store i32 %105, i32* %30, align 8
  br label %110

110:                                              ; preds = %140, %104
  %111 = phi i8* [ %142, %140 ], [ %106, %104 ]
  %112 = phi i32 [ %136, %140 ], [ %107, %104 ]
  %113 = phi i8* [ %143, %140 ], [ %108, %104 ]
  %114 = phi i32 [ %141, %140 ], [ %109, %104 ]
  br label %115

115:                                              ; preds = %157, %110
  %116 = phi i8* [ %113, %110 ], [ %158, %157 ]
  %117 = getelementptr inbounds i8, i8* %116, i64 1
  %118 = load i8, i8* %116, align 1
  %119 = zext i8 %118 to i32
  %120 = icmp ult i8 %118, 16
  br i1 %120, label %121, label %144

121:                                              ; preds = %115
  %122 = zext i8 %118 to i32
  %123 = tail call i32 @_ZN6icu_699BytesTrie10branchNextEPKhii(%"class.icu_69::BytesTrie"* %0, i8* %117, i32 %122, i32 %114)
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %177, label %125

125:                                              ; preds = %121
  %126 = icmp slt i32 %112, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %125
  %128 = load i8, i8* %111, align 1
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %177, label %135

130:                                              ; preds = %125
  %131 = icmp eq i32 %112, 0
  br i1 %131, label %177, label %132

132:                                              ; preds = %130
  %133 = load i8, i8* %111, align 1
  %134 = add nsw i32 %112, -1
  br label %135

135:                                              ; preds = %127, %132
  %136 = phi i32 [ %112, %127 ], [ %134, %132 ]
  %137 = phi i8 [ %128, %127 ], [ %133, %132 ]
  %138 = icmp eq i32 %123, 2
  br i1 %138, label %139, label %140

139:                                              ; preds = %135
  store i8* null, i8** %26, align 8
  br label %177

140:                                              ; preds = %135
  %141 = sext i8 %137 to i32
  %142 = getelementptr inbounds i8, i8* %111, i64 1
  %143 = load i8*, i8** %26, align 8
  br label %110

144:                                              ; preds = %115
  %145 = icmp ult i8 %118, 32
  br i1 %145, label %146, label %151

146:                                              ; preds = %144
  %147 = load i8, i8* %117, align 1
  %148 = zext i8 %147 to i32
  %149 = icmp eq i32 %114, %148
  br i1 %149, label %173, label %150

150:                                              ; preds = %146
  store i8* null, i8** %26, align 8
  br label %177

151:                                              ; preds = %144
  %152 = and i32 %119, 1
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %155, label %154

154:                                              ; preds = %151
  store i8* null, i8** %26, align 8
  br label %177

155:                                              ; preds = %151
  %156 = icmp ugt i8 %118, -95
  br i1 %156, label %159, label %157

157:                                              ; preds = %155, %161, %165, %167
  %158 = phi i8* [ %117, %155 ], [ %162, %161 ], [ %166, %165 ], [ %172, %167 ]
  br label %115

159:                                              ; preds = %155
  %160 = icmp ult i8 %118, -40
  br i1 %160, label %161, label %163

161:                                              ; preds = %159
  %162 = getelementptr inbounds i8, i8* %116, i64 2
  br label %157

163:                                              ; preds = %159
  %164 = icmp ult i8 %118, -4
  br i1 %164, label %165, label %167

165:                                              ; preds = %163
  %166 = getelementptr inbounds i8, i8* %116, i64 3
  br label %157

167:                                              ; preds = %163
  %168 = lshr i32 %119, 1
  %169 = and i32 %168, 1
  %170 = add nuw nsw i32 %169, 3
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %117, i64 %171
  br label %157

173:                                              ; preds = %146
  %174 = zext i8 %118 to i32
  %175 = getelementptr inbounds i8, i8* %116, i64 2
  %176 = add nsw i32 %174, -17
  br label %32

177:                                              ; preds = %130, %127, %121, %139, %154, %150, %79, %76, %72, %50, %47, %43, %97, %66, %21, %18, %14, %10, %25
  %178 = phi i32 [ 0, %25 ], [ 0, %10 ], [ %24, %21 ], [ 1, %18 ], [ 1, %14 ], [ 1, %72 ], [ 1, %76 ], [ %82, %79 ], [ 1, %43 ], [ 1, %47 ], [ %53, %50 ], [ 0, %97 ], [ 0, %66 ], [ 0, %154 ], [ 0, %150 ], [ 0, %139 ], [ 0, %121 ], [ %123, %127 ], [ %123, %130 ]
  ret i32 %178
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @_ZN6icu_699BytesTrie25findUniqueValueFromBranchEPKhiaRi(i8*, i32, i8 signext, i32* nocapture dereferenceable(4)) local_unnamed_addr #5 align 2 {
  %5 = icmp sgt i32 %1, 5
  br i1 %5, label %6, label %98

6:                                                ; preds = %4, %95
  %7 = phi i8* [ %96, %95 ], [ %0, %4 ]
  %8 = phi i32 [ %79, %95 ], [ %1, %4 ]
  %9 = getelementptr inbounds i8, i8* %7, i64 1
  %10 = getelementptr inbounds i8, i8* %7, i64 2
  %11 = load i8, i8* %9, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp ult i8 %11, -64
  br i1 %13, label %70, label %14

14:                                               ; preds = %6
  %15 = icmp ult i8 %11, -16
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = shl nuw nsw i32 %12, 8
  %18 = add nsw i32 %17, -49152
  %19 = getelementptr inbounds i8, i8* %7, i64 3
  %20 = load i8, i8* %10, align 1
  %21 = zext i8 %20 to i32
  %22 = or i32 %18, %21
  br label %70

23:                                               ; preds = %14
  %24 = icmp ult i8 %11, -2
  br i1 %24, label %25, label %37

25:                                               ; preds = %23
  %26 = shl nuw nsw i32 %12, 16
  %27 = add nsw i32 %26, -15728640
  %28 = load i8, i8* %10, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 8
  %31 = or i32 %30, %27
  %32 = getelementptr inbounds i8, i8* %7, i64 3
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = or i32 %31, %34
  %36 = getelementptr inbounds i8, i8* %7, i64 4
  br label %70

37:                                               ; preds = %23
  %38 = icmp eq i8 %11, -2
  %39 = load i8, i8* %10, align 1
  %40 = zext i8 %39 to i32
  br i1 %38, label %41, label %53

41:                                               ; preds = %37
  %42 = shl nuw nsw i32 %40, 16
  %43 = getelementptr inbounds i8, i8* %7, i64 3
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 8
  %47 = or i32 %46, %42
  %48 = getelementptr inbounds i8, i8* %7, i64 4
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = or i32 %47, %50
  %52 = getelementptr inbounds i8, i8* %7, i64 5
  br label %70

53:                                               ; preds = %37
  %54 = shl nuw i32 %40, 24
  %55 = getelementptr inbounds i8, i8* %7, i64 3
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 16
  %59 = or i32 %58, %54
  %60 = getelementptr inbounds i8, i8* %7, i64 4
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw nsw i32 %62, 8
  %64 = or i32 %59, %63
  %65 = getelementptr inbounds i8, i8* %7, i64 5
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = or i32 %64, %67
  %69 = getelementptr inbounds i8, i8* %7, i64 6
  br label %70

70:                                               ; preds = %6, %16, %25, %41, %53
  %71 = phi i8* [ %10, %6 ], [ %19, %16 ], [ %36, %25 ], [ %52, %41 ], [ %69, %53 ]
  %72 = phi i32 [ %12, %6 ], [ %22, %16 ], [ %35, %25 ], [ %51, %41 ], [ %68, %53 ]
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %71, i64 %73
  %75 = lshr i32 %8, 1
  %76 = tail call i8* @_ZN6icu_699BytesTrie25findUniqueValueFromBranchEPKhiaRi(i8* %74, i32 %75, i8 signext %2, i32* dereferenceable(4) %3)
  %77 = icmp eq i8* %76, null
  br i1 %77, label %192, label %78

78:                                               ; preds = %70
  %79 = sub nsw i32 %8, %75
  %80 = load i8, i8* %9, align 1
  %81 = icmp ugt i8 %80, -65
  br i1 %81, label %82, label %95

82:                                               ; preds = %78
  %83 = icmp ult i8 %80, -16
  br i1 %83, label %84, label %86

84:                                               ; preds = %82
  %85 = getelementptr inbounds i8, i8* %7, i64 3
  br label %95

86:                                               ; preds = %82
  %87 = icmp ult i8 %80, -2
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = getelementptr inbounds i8, i8* %7, i64 4
  br label %95

90:                                               ; preds = %86
  %91 = and i8 %80, 1
  %92 = add nuw nsw i8 %91, 3
  %93 = zext i8 %92 to i64
  %94 = getelementptr inbounds i8, i8* %10, i64 %93
  br label %95

95:                                               ; preds = %78, %84, %88, %90
  %96 = phi i8* [ %85, %84 ], [ %89, %88 ], [ %94, %90 ], [ %10, %78 ]
  %97 = icmp sgt i32 %79, 5
  br i1 %97, label %6, label %98

98:                                               ; preds = %95, %4
  %99 = phi i32 [ %1, %4 ], [ %79, %95 ]
  %100 = phi i8* [ %0, %4 ], [ %96, %95 ]
  br label %101

101:                                              ; preds = %98, %186
  %102 = phi i8 [ %187, %186 ], [ %2, %98 ]
  %103 = phi i32 [ %188, %186 ], [ %99, %98 ]
  %104 = phi i8* [ %173, %186 ], [ %100, %98 ]
  %105 = getelementptr inbounds i8, i8* %104, i64 1
  %106 = getelementptr inbounds i8, i8* %104, i64 2
  %107 = load i8, i8* %105, align 1
  %108 = and i8 %107, 1
  %109 = lshr i8 %107, 1
  %110 = zext i8 %109 to i32
  %111 = icmp ult i8 %107, -94
  br i1 %111, label %137, label %112

112:                                              ; preds = %101
  %113 = icmp ult i8 %107, -40
  br i1 %113, label %139, label %114

114:                                              ; preds = %112
  %115 = icmp ult i8 %107, -4
  br i1 %115, label %146, label %116

116:                                              ; preds = %114
  %117 = icmp eq i8 %109, 126
  %118 = load i8, i8* %106, align 1
  %119 = zext i8 %118 to i32
  br i1 %117, label %120, label %126

120:                                              ; preds = %116
  %121 = shl nuw nsw i32 %119, 16
  %122 = getelementptr inbounds i8, i8* %104, i64 3
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = shl nuw nsw i32 %124, 8
  br label %158

126:                                              ; preds = %116
  %127 = shl nuw i32 %119, 24
  %128 = getelementptr inbounds i8, i8* %104, i64 3
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = shl nuw nsw i32 %130, 16
  %132 = or i32 %131, %127
  %133 = getelementptr inbounds i8, i8* %104, i64 4
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = shl nuw nsw i32 %135, 8
  br label %158

137:                                              ; preds = %101
  %138 = add nsw i32 %110, -16
  br label %171

139:                                              ; preds = %112
  %140 = shl nuw nsw i32 %110, 8
  %141 = add nsw i32 %140, -20736
  %142 = load i8, i8* %106, align 1
  %143 = zext i8 %142 to i32
  %144 = or i32 %141, %143
  %145 = getelementptr inbounds i8, i8* %104, i64 3
  br label %171

146:                                              ; preds = %114
  %147 = shl nuw nsw i32 %110, 16
  %148 = add nsw i32 %147, -7077888
  %149 = load i8, i8* %106, align 1
  %150 = zext i8 %149 to i32
  %151 = shl nuw nsw i32 %150, 8
  %152 = or i32 %151, %148
  %153 = getelementptr inbounds i8, i8* %104, i64 3
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = or i32 %152, %155
  %157 = getelementptr inbounds i8, i8* %104, i64 4
  br label %171

158:                                              ; preds = %120, %126
  %159 = phi i32 [ %121, %120 ], [ %136, %126 ]
  %160 = phi i32 [ %125, %120 ], [ %132, %126 ]
  %161 = phi i64 [ 4, %120 ], [ 5, %126 ]
  %162 = or i32 %160, %159
  %163 = getelementptr inbounds i8, i8* %104, i64 %161
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i32
  %166 = or i32 %162, %165
  %167 = and i32 %110, 1
  %168 = add nuw nsw i32 %167, 3
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds i8, i8* %106, i64 %169
  br label %171

171:                                              ; preds = %137, %139, %146, %158
  %172 = phi i32 [ %144, %139 ], [ %156, %146 ], [ %166, %158 ], [ %138, %137 ]
  %173 = phi i8* [ %145, %139 ], [ %157, %146 ], [ %170, %158 ], [ %106, %137 ]
  %174 = icmp eq i8 %108, 0
  br i1 %174, label %181, label %175

175:                                              ; preds = %171
  %176 = icmp eq i8 %102, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %175
  %178 = load i32, i32* %3, align 4
  %179 = icmp eq i32 %172, %178
  br i1 %179, label %186, label %192

180:                                              ; preds = %175
  store i32 %172, i32* %3, align 4
  br label %186

181:                                              ; preds = %171
  %182 = sext i32 %172 to i64
  %183 = getelementptr inbounds i8, i8* %173, i64 %182
  %184 = tail call signext i8 @_ZN6icu_699BytesTrie15findUniqueValueEPKhaRi(i8* %183, i8 signext %102, i32* dereferenceable(4) %3)
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %192, label %186

186:                                              ; preds = %181, %177, %180
  %187 = phi i8 [ %102, %177 ], [ 1, %180 ], [ 1, %181 ]
  %188 = add nsw i32 %103, -1
  %189 = icmp sgt i32 %188, 1
  br i1 %189, label %101, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds i8, i8* %173, i64 1
  br label %192

192:                                              ; preds = %70, %181, %177, %190
  %193 = phi i8* [ %191, %190 ], [ null, %177 ], [ null, %181 ], [ null, %70 ]
  ret i8* %193
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_699BytesTrie15findUniqueValueEPKhaRi(i8*, i8 signext, i32* nocapture dereferenceable(4)) local_unnamed_addr #5 align 2 {
  br label %4

4:                                                ; preds = %26, %3
  %5 = phi i8 [ %1, %3 ], [ %27, %26 ]
  %6 = phi i8* [ %0, %3 ], [ %28, %26 ]
  br label %7

7:                                                ; preds = %4, %31
  %8 = phi i8* [ %34, %31 ], [ %6, %4 ]
  %9 = getelementptr inbounds i8, i8* %8, i64 1
  %10 = load i8, i8* %8, align 1
  %11 = zext i8 %10 to i32
  %12 = icmp ult i8 %10, 16
  br i1 %12, label %13, label %29

13:                                               ; preds = %7
  %14 = zext i8 %10 to i32
  %15 = icmp eq i8 %10, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, i8* %8, i64 2
  %18 = load i8, i8* %9, align 1
  %19 = zext i8 %18 to i32
  br label %20

20:                                               ; preds = %16, %13
  %21 = phi i8* [ %17, %16 ], [ %9, %13 ]
  %22 = phi i32 [ %19, %16 ], [ %14, %13 ]
  %23 = add nuw nsw i32 %22, 1
  %24 = tail call i8* @_ZN6icu_699BytesTrie25findUniqueValueFromBranchEPKhiaRi(i8* %21, i32 %23, i8 signext %5, i32* dereferenceable(4) %2)
  %25 = icmp eq i8* %24, null
  br i1 %25, label %119, label %26

26:                                               ; preds = %20, %104, %108, %112, %114
  %27 = phi i8 [ %102, %114 ], [ %102, %112 ], [ %102, %108 ], [ %102, %104 ], [ 1, %20 ]
  %28 = phi i8* [ %118, %114 ], [ %113, %112 ], [ %109, %108 ], [ %9, %104 ], [ %24, %20 ]
  br label %4

29:                                               ; preds = %7
  %30 = icmp ult i8 %10, 32
  br i1 %30, label %31, label %35

31:                                               ; preds = %29
  %32 = add nsw i32 %11, -15
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %9, i64 %33
  br label %7

35:                                               ; preds = %29
  %36 = zext i8 %10 to i32
  %37 = and i8 %10, 1
  %38 = lshr i32 %36, 1
  %39 = icmp ult i8 %10, -94
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  %41 = add nsw i32 %38, -16
  br label %94

42:                                               ; preds = %35
  %43 = icmp ult i8 %10, -40
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = shl nuw nsw i32 %38, 8
  %46 = add nsw i32 %45, -20736
  %47 = load i8, i8* %9, align 1
  %48 = zext i8 %47 to i32
  %49 = or i32 %46, %48
  br label %94

50:                                               ; preds = %42
  %51 = icmp ult i8 %10, -4
  br i1 %51, label %52, label %63

52:                                               ; preds = %50
  %53 = shl nuw nsw i32 %38, 16
  %54 = add nsw i32 %53, -7077888
  %55 = load i8, i8* %9, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 8
  %58 = or i32 %57, %54
  %59 = getelementptr inbounds i8, i8* %8, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = or i32 %58, %61
  br label %94

63:                                               ; preds = %50
  %64 = icmp eq i32 %38, 126
  %65 = load i8, i8* %9, align 1
  %66 = zext i8 %65 to i32
  br i1 %64, label %67, label %78

67:                                               ; preds = %63
  %68 = shl nuw nsw i32 %66, 16
  %69 = getelementptr inbounds i8, i8* %8, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = shl nuw nsw i32 %71, 8
  %73 = or i32 %72, %68
  %74 = getelementptr inbounds i8, i8* %8, i64 3
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = or i32 %73, %76
  br label %94

78:                                               ; preds = %63
  %79 = shl nuw i32 %66, 24
  %80 = getelementptr inbounds i8, i8* %8, i64 2
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = shl nuw nsw i32 %82, 16
  %84 = or i32 %83, %79
  %85 = getelementptr inbounds i8, i8* %8, i64 3
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = shl nuw nsw i32 %87, 8
  %89 = or i32 %84, %88
  %90 = getelementptr inbounds i8, i8* %8, i64 4
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = or i32 %89, %92
  br label %94

94:                                               ; preds = %40, %44, %52, %67, %78
  %95 = phi i32 [ %41, %40 ], [ %49, %44 ], [ %62, %52 ], [ %77, %67 ], [ %93, %78 ]
  %96 = icmp eq i8 %5, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %94
  %98 = load i32, i32* %2, align 4
  %99 = icmp eq i32 %95, %98
  br i1 %99, label %101, label %119

100:                                              ; preds = %94
  store i32 %95, i32* %2, align 4
  br label %101

101:                                              ; preds = %97, %100
  %102 = phi i8 [ %5, %97 ], [ 1, %100 ]
  %103 = icmp eq i8 %37, 0
  br i1 %103, label %104, label %119

104:                                              ; preds = %101
  %105 = icmp ugt i8 %10, -95
  br i1 %105, label %106, label %26

106:                                              ; preds = %104
  %107 = icmp ult i8 %10, -40
  br i1 %107, label %108, label %110

108:                                              ; preds = %106
  %109 = getelementptr inbounds i8, i8* %8, i64 2
  br label %26

110:                                              ; preds = %106
  %111 = icmp ult i8 %10, -4
  br i1 %111, label %112, label %114

112:                                              ; preds = %110
  %113 = getelementptr inbounds i8, i8* %8, i64 3
  br label %26

114:                                              ; preds = %110
  %115 = and i32 %38, 1
  %116 = add nuw nsw i32 %115, 3
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %9, i64 %117
  br label %26

119:                                              ; preds = %20, %97, %101
  %120 = phi i8 [ 1, %101 ], [ 0, %97 ], [ 0, %20 ]
  ret i8 %120
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_699BytesTrie12getNextBytesERNS_8ByteSinkE(%"class.icu_69::BytesTrie"* nocapture readonly, %"class.icu_69::ByteSink"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %67, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = load i8, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #6
  store i8 %13, i8* %4, align 1
  %14 = bitcast %"class.icu_69::ByteSink"* %1 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %15 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %15, i64 2
  %17 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %16, align 8
  call void %17(%"class.icu_69::ByteSink"* %1, i8* nonnull %4, i32 1) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  br label %67

18:                                               ; preds = %8
  %19 = getelementptr inbounds i8, i8* %6, i64 1
  %20 = load i8, i8* %6, align 1
  %21 = zext i8 %20 to i32
  %22 = icmp ugt i8 %20, 31
  br i1 %22, label %23, label %47

23:                                               ; preds = %18
  %24 = and i32 %21, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %67

26:                                               ; preds = %23
  %27 = icmp ugt i8 %20, -95
  br i1 %27, label %28, label %42

28:                                               ; preds = %26
  %29 = icmp ult i8 %20, -40
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = getelementptr inbounds i8, i8* %6, i64 2
  br label %42

32:                                               ; preds = %28
  %33 = icmp ult i8 %20, -4
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = getelementptr inbounds i8, i8* %6, i64 3
  br label %42

36:                                               ; preds = %32
  %37 = lshr i32 %21, 1
  %38 = and i32 %37, 1
  %39 = add nuw nsw i32 %38, 3
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %19, i64 %40
  br label %42

42:                                               ; preds = %26, %30, %34, %36
  %43 = phi i8* [ %31, %30 ], [ %35, %34 ], [ %41, %36 ], [ %19, %26 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 1
  %45 = load i8, i8* %43, align 1
  %46 = zext i8 %45 to i32
  br label %47

47:                                               ; preds = %42, %18
  %48 = phi i8* [ %44, %42 ], [ %19, %18 ]
  %49 = phi i32 [ %46, %42 ], [ %21, %18 ]
  %50 = icmp ult i32 %49, 16
  br i1 %50, label %51, label %61

51:                                               ; preds = %47
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %51
  %54 = getelementptr inbounds i8, i8* %48, i64 1
  %55 = load i8, i8* %48, align 1
  %56 = zext i8 %55 to i32
  br label %57

57:                                               ; preds = %53, %51
  %58 = phi i8* [ %54, %53 ], [ %48, %51 ]
  %59 = phi i32 [ %56, %53 ], [ %49, %51 ]
  %60 = add nuw nsw i32 %59, 1
  tail call void @_ZN6icu_699BytesTrie18getNextBranchBytesEPKhiRNS_8ByteSinkE(i8* %58, i32 %60, %"class.icu_69::ByteSink"* dereferenceable(8) %1)
  br label %67

61:                                               ; preds = %47
  %62 = load i8, i8* %48, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #6
  store i8 %62, i8* %3, align 1
  %63 = bitcast %"class.icu_69::ByteSink"* %1 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %64 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %64, i64 2
  %66 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %65, align 8
  call void %66(%"class.icu_69::ByteSink"* %1, i8* nonnull %3, i32 1) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #6
  br label %67

67:                                               ; preds = %57, %61, %23, %2, %12
  %68 = phi i32 [ 1, %12 ], [ 0, %2 ], [ %60, %57 ], [ 1, %61 ], [ 0, %23 ]
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699BytesTrie6appendERNS_8ByteSinkEi(%"class.icu_69::ByteSink"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #6
  %4 = trunc i32 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = bitcast %"class.icu_69::ByteSink"* %0 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %6 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %6, i64 2
  %8 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %7, align 8
  call void %8(%"class.icu_69::ByteSink"* %0, i8* nonnull %3, i32 1) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699BytesTrie18getNextBranchBytesEPKhiRNS_8ByteSinkE(i8* nocapture readonly, i32, %"class.icu_69::ByteSink"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = icmp sgt i32 %1, 5
  br i1 %6, label %11, label %7

7:                                                ; preds = %97, %3
  %8 = phi i32 [ %1, %3 ], [ %81, %97 ]
  %9 = phi i8* [ %0, %3 ], [ %98, %97 ]
  %10 = bitcast %"class.icu_69::ByteSink"* %2 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  br label %100

11:                                               ; preds = %3, %97
  %12 = phi i8* [ %98, %97 ], [ %0, %3 ]
  %13 = phi i32 [ %81, %97 ], [ %1, %3 ]
  %14 = getelementptr inbounds i8, i8* %12, i64 1
  %15 = getelementptr inbounds i8, i8* %12, i64 2
  %16 = load i8, i8* %14, align 1
  %17 = zext i8 %16 to i32
  %18 = icmp ult i8 %16, -64
  br i1 %18, label %75, label %19

19:                                               ; preds = %11
  %20 = icmp ult i8 %16, -16
  br i1 %20, label %21, label %28

21:                                               ; preds = %19
  %22 = shl nuw nsw i32 %17, 8
  %23 = add nsw i32 %22, -49152
  %24 = getelementptr inbounds i8, i8* %12, i64 3
  %25 = load i8, i8* %15, align 1
  %26 = zext i8 %25 to i32
  %27 = or i32 %23, %26
  br label %75

28:                                               ; preds = %19
  %29 = icmp ult i8 %16, -2
  br i1 %29, label %30, label %42

30:                                               ; preds = %28
  %31 = shl nuw nsw i32 %17, 16
  %32 = add nsw i32 %31, -15728640
  %33 = load i8, i8* %15, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %35, %32
  %37 = getelementptr inbounds i8, i8* %12, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = getelementptr inbounds i8, i8* %12, i64 4
  br label %75

42:                                               ; preds = %28
  %43 = icmp eq i8 %16, -2
  %44 = load i8, i8* %15, align 1
  %45 = zext i8 %44 to i32
  br i1 %43, label %46, label %58

46:                                               ; preds = %42
  %47 = shl nuw nsw i32 %45, 16
  %48 = getelementptr inbounds i8, i8* %12, i64 3
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = shl nuw nsw i32 %50, 8
  %52 = or i32 %51, %47
  %53 = getelementptr inbounds i8, i8* %12, i64 4
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = or i32 %52, %55
  %57 = getelementptr inbounds i8, i8* %12, i64 5
  br label %75

58:                                               ; preds = %42
  %59 = shl nuw i32 %45, 24
  %60 = getelementptr inbounds i8, i8* %12, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw nsw i32 %62, 16
  %64 = or i32 %63, %59
  %65 = getelementptr inbounds i8, i8* %12, i64 4
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl nuw nsw i32 %67, 8
  %69 = or i32 %64, %68
  %70 = getelementptr inbounds i8, i8* %12, i64 5
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = or i32 %69, %72
  %74 = getelementptr inbounds i8, i8* %12, i64 6
  br label %75

75:                                               ; preds = %11, %21, %30, %46, %58
  %76 = phi i8* [ %15, %11 ], [ %24, %21 ], [ %41, %30 ], [ %57, %46 ], [ %74, %58 ]
  %77 = phi i32 [ %17, %11 ], [ %27, %21 ], [ %40, %30 ], [ %56, %46 ], [ %73, %58 ]
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = lshr i32 %13, 1
  tail call void @_ZN6icu_699BytesTrie18getNextBranchBytesEPKhiRNS_8ByteSinkE(i8* %79, i32 %80, %"class.icu_69::ByteSink"* dereferenceable(8) %2)
  %81 = sub nsw i32 %13, %80
  %82 = load i8, i8* %14, align 1
  %83 = icmp ugt i8 %82, -65
  br i1 %83, label %84, label %97

84:                                               ; preds = %75
  %85 = icmp ult i8 %82, -16
  br i1 %85, label %86, label %88

86:                                               ; preds = %84
  %87 = getelementptr inbounds i8, i8* %12, i64 3
  br label %97

88:                                               ; preds = %84
  %89 = icmp ult i8 %82, -2
  br i1 %89, label %90, label %92

90:                                               ; preds = %88
  %91 = getelementptr inbounds i8, i8* %12, i64 4
  br label %97

92:                                               ; preds = %88
  %93 = and i8 %82, 1
  %94 = add nuw nsw i8 %93, 3
  %95 = zext i8 %94 to i64
  %96 = getelementptr inbounds i8, i8* %15, i64 %95
  br label %97

97:                                               ; preds = %75, %86, %90, %92
  %98 = phi i8* [ %87, %86 ], [ %91, %90 ], [ %96, %92 ], [ %15, %75 ]
  %99 = icmp sgt i32 %81, 5
  br i1 %99, label %11, label %7

100:                                              ; preds = %7, %125
  %101 = phi i32 [ %127, %125 ], [ %8, %7 ]
  %102 = phi i8* [ %126, %125 ], [ %9, %7 ]
  %103 = getelementptr inbounds i8, i8* %102, i64 1
  %104 = load i8, i8* %102, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #6
  store i8 %104, i8* %4, align 1
  %105 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %10, align 8
  %106 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %105, i64 2
  %107 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %106, align 8
  call void %107(%"class.icu_69::ByteSink"* %2, i8* nonnull %4, i32 1) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  %108 = getelementptr inbounds i8, i8* %102, i64 2
  %109 = load i8, i8* %103, align 1
  %110 = icmp ugt i8 %109, -95
  br i1 %110, label %111, label %125

111:                                              ; preds = %100
  %112 = icmp ult i8 %109, -40
  br i1 %112, label %113, label %115

113:                                              ; preds = %111
  %114 = getelementptr inbounds i8, i8* %102, i64 3
  br label %125

115:                                              ; preds = %111
  %116 = icmp ult i8 %109, -4
  br i1 %116, label %117, label %119

117:                                              ; preds = %115
  %118 = getelementptr inbounds i8, i8* %102, i64 4
  br label %125

119:                                              ; preds = %115
  %120 = lshr i8 %109, 1
  %121 = and i8 %120, 1
  %122 = add nuw nsw i8 %121, 3
  %123 = zext i8 %122 to i64
  %124 = getelementptr inbounds i8, i8* %108, i64 %123
  br label %125

125:                                              ; preds = %100, %113, %117, %119
  %126 = phi i8* [ %114, %113 ], [ %118, %117 ], [ %124, %119 ], [ %108, %100 ]
  %127 = add nsw i32 %101, -1
  %128 = icmp sgt i32 %127, 1
  br i1 %128, label %100, label %129

129:                                              ; preds = %125
  %130 = load i8, i8* %126, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #6
  store i8 %130, i8* %5, align 1
  %131 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %10, align 8
  %132 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %131, i64 2
  %133 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %132, align 8
  call void %133(%"class.icu_69::ByteSink"* %2, i8* nonnull %5, i32 1) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #6
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
