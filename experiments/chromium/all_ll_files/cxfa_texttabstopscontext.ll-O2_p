; ModuleID = '../../third_party/pdfium/xfa/fxfa/cxfa_texttabstopscontext.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/cxfa_texttabstopscontext.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.CXFA_TextTabstopsContext = type { i32, i8, float, float, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.XFA_TABSTOPS*, %struct.XFA_TABSTOPS*, %"class.std::__1::__compressed_pair" }
%struct.XFA_TABSTOPS = type { i32, float }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.XFA_TABSTOPS* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorI12XFA_TABSTOPSNS_9allocatorIS1_EEE6insertENS_11__wrap_iterIPKS1_EERS6_ = comdat any

@_ZN24CXFA_TextTabstopsContextC1Ev = hidden unnamed_addr alias void (%class.CXFA_TextTabstopsContext*), void (%class.CXFA_TextTabstopsContext*)* @_ZN24CXFA_TextTabstopsContextC2Ev
@_ZN24CXFA_TextTabstopsContextD1Ev = hidden unnamed_addr alias void (%class.CXFA_TextTabstopsContext*), void (%class.CXFA_TextTabstopsContext*)* @_ZN24CXFA_TextTabstopsContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24CXFA_TextTabstopsContextC2Ev(%class.CXFA_TextTabstopsContext* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_TextTabstopsContext, %class.CXFA_TextTabstopsContext* %0, i64 0, i32 0
  store i32 -1, i32* %2, align 8
  %3 = getelementptr inbounds %class.CXFA_TextTabstopsContext, %class.CXFA_TextTabstopsContext* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %class.CXFA_TextTabstopsContext, %class.CXFA_TextTabstopsContext* %0, i64 0, i32 2
  %5 = bitcast float* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24CXFA_TextTabstopsContextD2Ev(%class.CXFA_TextTabstopsContext* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_TextTabstopsContext, %class.CXFA_TextTabstopsContext* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %struct.XFA_TABSTOPS*, %struct.XFA_TABSTOPS** %2, align 8
  %4 = icmp eq %struct.XFA_TABSTOPS* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %struct.XFA_TABSTOPS* %3 to i64
  %7 = getelementptr inbounds %class.CXFA_TextTabstopsContext, %class.CXFA_TextTabstopsContext* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %struct.XFA_TABSTOPS** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %struct.XFA_TABSTOPS* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24CXFA_TextTabstopsContext6AppendEjf(%class.CXFA_TextTabstopsContext*, i32, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.XFA_TABSTOPS, align 4
  %5 = bitcast %struct.XFA_TABSTOPS* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %4, i64 0, i32 0
  %7 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %4, i64 0, i32 1
  store i32 %1, i32* %6, align 4
  store float %2, float* %7, align 4
  %8 = getelementptr inbounds %class.CXFA_TextTabstopsContext, %class.CXFA_TextTabstopsContext* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %10 = load %struct.XFA_TABSTOPS*, %struct.XFA_TABSTOPS** %9, align 8
  %11 = getelementptr inbounds %class.CXFA_TextTabstopsContext, %class.CXFA_TextTabstopsContext* %0, i64 0, i32 4, i32 0, i32 1
  %12 = bitcast %struct.XFA_TABSTOPS** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = ptrtoint %struct.XFA_TABSTOPS* %10 to i64
  %15 = sub i64 %13, %14
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %3
  %18 = ashr exact i64 %15, 3
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi %struct.XFA_TABSTOPS* [ %10, %17 ], [ %31, %19 ]
  %21 = phi i64 [ %18, %17 ], [ %30, %19 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %20, i64 1
  %24 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %20, i64 %22, i32 1
  %25 = load float, float* %24, align 4
  %26 = fcmp olt float %25, %2
  %27 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %23, i64 %22
  %28 = xor i64 %22, -1
  %29 = add i64 %21, %28
  %30 = select i1 %26, i64 %29, i64 %22
  %31 = select i1 %26, %struct.XFA_TABSTOPS* %27, %struct.XFA_TABSTOPS* %20
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %19

33:                                               ; preds = %19, %3
  %34 = phi %struct.XFA_TABSTOPS* [ %10, %3 ], [ %31, %19 ]
  %35 = call %struct.XFA_TABSTOPS* @_ZNSt3__16vectorI12XFA_TABSTOPSNS_9allocatorIS1_EEE6insertENS_11__wrap_iterIPKS1_EERS6_(%"class.std::__1::vector"* %8, %struct.XFA_TABSTOPS* %34, %struct.XFA_TABSTOPS* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.XFA_TABSTOPS* @_ZNSt3__16vectorI12XFA_TABSTOPSNS_9allocatorIS1_EEE6insertENS_11__wrap_iterIPKS1_EERS6_(%"class.std::__1::vector"*, %struct.XFA_TABSTOPS*, %struct.XFA_TABSTOPS* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %struct.XFA_TABSTOPS* %1 to i64
  %5 = bitcast %struct.XFA_TABSTOPS* %1 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load %struct.XFA_TABSTOPS*, %struct.XFA_TABSTOPS** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %struct.XFA_TABSTOPS*, %struct.XFA_TABSTOPS** %9, align 8
  %11 = icmp ult %struct.XFA_TABSTOPS* %8, %10
  %12 = ptrtoint %struct.XFA_TABSTOPS* %8 to i64
  %13 = ptrtoint %struct.XFA_TABSTOPS* %10 to i64
  br i1 %11, label %14, label %172

14:                                               ; preds = %3
  %15 = icmp eq %struct.XFA_TABSTOPS* %8, %1
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = bitcast %struct.XFA_TABSTOPS* %2 to i64*
  %18 = bitcast %struct.XFA_TABSTOPS* %1 to i64*
  %19 = load i64, i64* %17, align 4
  store i64 %19, i64* %18, align 4
  %20 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %1, i64 1
  %21 = ptrtoint %struct.XFA_TABSTOPS* %20 to i64
  %22 = bitcast %struct.XFA_TABSTOPS** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %439

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %1, i64 1
  %25 = ptrtoint %struct.XFA_TABSTOPS* %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %1, i64 %27
  %29 = bitcast %struct.XFA_TABSTOPS** %7 to i64*
  %30 = icmp ult %struct.XFA_TABSTOPS* %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %8, i64 %32, i32 0
  %34 = bitcast i32* %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %struct.XFA_TABSTOPS* [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %struct.XFA_TABSTOPS* [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %151

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %8, i64 %45, i32 0
  %47 = bitcast i32* %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %1, i64 %55
  %57 = icmp ult %struct.XFA_TABSTOPS* %8, %56
  %58 = icmp ult %struct.XFA_TABSTOPS* %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %8, i64 %61
  %63 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %8, i64 %72
  %75 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %28, i64 %72
  %76 = bitcast %struct.XFA_TABSTOPS* %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 4, !alias.scope !2
  %78 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %75, i64 2
  %79 = bitcast %struct.XFA_TABSTOPS* %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 4, !alias.scope !2
  %81 = bitcast %struct.XFA_TABSTOPS* %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 4, !alias.scope !5, !noalias !2
  %82 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %74, i64 2
  %83 = bitcast %struct.XFA_TABSTOPS* %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 4, !alias.scope !5, !noalias !2
  %84 = or i64 %72, 4
  %85 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %8, i64 %84
  %86 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %28, i64 %84
  %87 = bitcast %struct.XFA_TABSTOPS* %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 4, !alias.scope !2
  %89 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %86, i64 2
  %90 = bitcast %struct.XFA_TABSTOPS* %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 4, !alias.scope !2
  %92 = bitcast %struct.XFA_TABSTOPS* %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 4, !alias.scope !5, !noalias !2
  %93 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %85, i64 2
  %94 = bitcast %struct.XFA_TABSTOPS* %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 4, !alias.scope !5, !noalias !2
  %95 = or i64 %72, 8
  %96 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %8, i64 %95
  %97 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %28, i64 %95
  %98 = bitcast %struct.XFA_TABSTOPS* %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 4, !alias.scope !2
  %100 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %97, i64 2
  %101 = bitcast %struct.XFA_TABSTOPS* %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 4, !alias.scope !2
  %103 = bitcast %struct.XFA_TABSTOPS* %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 4, !alias.scope !5, !noalias !2
  %104 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %96, i64 2
  %105 = bitcast %struct.XFA_TABSTOPS* %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 4, !alias.scope !5, !noalias !2
  %106 = or i64 %72, 12
  %107 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %8, i64 %106
  %108 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %28, i64 %106
  %109 = bitcast %struct.XFA_TABSTOPS* %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 4, !alias.scope !2
  %111 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %108, i64 2
  %112 = bitcast %struct.XFA_TABSTOPS* %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 4, !alias.scope !2
  %114 = bitcast %struct.XFA_TABSTOPS* %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 4, !alias.scope !5, !noalias !2
  %115 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %107, i64 2
  %116 = bitcast %struct.XFA_TABSTOPS* %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 4, !alias.scope !5, !noalias !2
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !7

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %8, i64 %124
  %127 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %28, i64 %124
  %128 = bitcast %struct.XFA_TABSTOPS* %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 4, !alias.scope !2
  %130 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %127, i64 2
  %131 = bitcast %struct.XFA_TABSTOPS* %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 4, !alias.scope !2
  %133 = bitcast %struct.XFA_TABSTOPS* %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 4, !alias.scope !5, !noalias !2
  %134 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %126, i64 2
  %135 = bitcast %struct.XFA_TABSTOPS* %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 4, !alias.scope !5, !noalias !2
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !9

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %151, %139
  %142 = phi %struct.XFA_TABSTOPS* [ %62, %139 ], [ %158, %151 ]
  %143 = ptrtoint %struct.XFA_TABSTOPS* %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %160, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %8, i64 %148
  %150 = bitcast %struct.XFA_TABSTOPS* %149 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %150, i8* align 4 %5, i64 %26, i1 false) #9
  br label %160

151:                                              ; preds = %41, %151
  %152 = phi %struct.XFA_TABSTOPS* [ %158, %151 ], [ %42, %41 ]
  %153 = phi %struct.XFA_TABSTOPS* [ %157, %151 ], [ %43, %41 ]
  %154 = bitcast %struct.XFA_TABSTOPS* %153 to i64*
  %155 = bitcast %struct.XFA_TABSTOPS* %152 to i64*
  %156 = load i64, i64* %154, align 4
  store i64 %156, i64* %155, align 4
  %157 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %153, i64 1
  %158 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %152, i64 1
  %159 = icmp ult %struct.XFA_TABSTOPS* %157, %8
  br i1 %159, label %151, label %141, !llvm.loop !11

160:                                              ; preds = %144, %147
  %161 = icmp ugt %struct.XFA_TABSTOPS* %1, %2
  br i1 %161, label %167, label %162

162:                                              ; preds = %160
  %163 = load %struct.XFA_TABSTOPS*, %struct.XFA_TABSTOPS** %7, align 8
  %164 = icmp ugt %struct.XFA_TABSTOPS* %163, %2
  %165 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %2, i64 1
  %166 = select i1 %164, %struct.XFA_TABSTOPS* %165, %struct.XFA_TABSTOPS* %2
  br label %167

167:                                              ; preds = %162, %160
  %168 = phi %struct.XFA_TABSTOPS* [ %2, %160 ], [ %166, %162 ]
  %169 = bitcast %struct.XFA_TABSTOPS* %168 to i64*
  %170 = bitcast %struct.XFA_TABSTOPS* %1 to i64*
  %171 = load i64, i64* %169, align 4
  store i64 %171, i64* %170, align 4
  br label %439

172:                                              ; preds = %3
  %173 = bitcast %struct.XFA_TABSTOPS** %7 to i64*
  %174 = bitcast %"class.std::__1::vector"* %0 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %12, %175
  %177 = ashr exact i64 %176, 3
  %178 = add nsw i64 %177, 1
  %179 = icmp ugt i64 %178, 2305843009213693951
  br i1 %179, label %180, label %182

180:                                              ; preds = %172
  %181 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %181) #10
  unreachable

182:                                              ; preds = %172
  %183 = bitcast %struct.XFA_TABSTOPS** %9 to i64*
  %184 = sub i64 %13, %175
  %185 = ashr exact i64 %184, 3
  %186 = icmp ult i64 %185, 1152921504606846975
  br i1 %186, label %190, label %187

187:                                              ; preds = %182
  %188 = sub i64 %4, %175
  %189 = ashr exact i64 %188, 3
  br label %200

190:                                              ; preds = %182
  %191 = ashr exact i64 %184, 2
  %192 = icmp ult i64 %191, %178
  %193 = select i1 %192, i64 %178, i64 %191
  %194 = sub i64 %4, %175
  %195 = ashr exact i64 %194, 3
  %196 = icmp eq i64 %193, 0
  br i1 %196, label %206, label %197

197:                                              ; preds = %190
  %198 = icmp ugt i64 %193, 2305843009213693951
  br i1 %198, label %199, label %200

199:                                              ; preds = %197
  tail call void @abort() #10
  unreachable

200:                                              ; preds = %187, %197
  %201 = phi i64 [ 2305843009213693951, %187 ], [ %193, %197 ]
  %202 = phi i64 [ %189, %187 ], [ %195, %197 ]
  %203 = shl i64 %201, 3
  %204 = tail call i8* @_Znwm(i64 %203) #8
  %205 = bitcast i8* %204 to %struct.XFA_TABSTOPS*
  br label %206

206:                                              ; preds = %190, %200
  %207 = phi i64 [ %202, %200 ], [ %195, %190 ]
  %208 = phi i64 [ %201, %200 ], [ 0, %190 ]
  %209 = phi i8* [ %204, %200 ], [ null, %190 ]
  %210 = phi %struct.XFA_TABSTOPS* [ %205, %200 ], [ null, %190 ]
  %211 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %210, i64 %207
  %212 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %210, i64 %208
  %213 = ptrtoint %struct.XFA_TABSTOPS* %212 to i64
  %214 = icmp eq i64 %207, %208
  %215 = bitcast %struct.XFA_TABSTOPS* %211 to i64*
  br i1 %214, label %216, label %240

216:                                              ; preds = %206
  %217 = icmp sgt i64 %207, 0
  br i1 %217, label %218, label %223

218:                                              ; preds = %216
  %219 = add nuw nsw i64 %207, 1
  %220 = sdiv i64 %219, -2
  %221 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %211, i64 %220
  %222 = bitcast %struct.XFA_TABSTOPS* %221 to i64*
  br label %240

223:                                              ; preds = %216
  %224 = shl nsw i64 %207, 1
  %225 = icmp eq i64 %207, 0
  %226 = select i1 %225, i64 1, i64 %224
  %227 = icmp ugt i64 %226, 2305843009213693951
  br i1 %227, label %228, label %229

228:                                              ; preds = %223
  tail call void @abort() #10
  unreachable

229:                                              ; preds = %223
  %230 = lshr i64 %226, 2
  %231 = shl i64 %226, 3
  %232 = tail call i8* @_Znwm(i64 %231) #8
  %233 = bitcast i8* %232 to %struct.XFA_TABSTOPS*
  %234 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %233, i64 %230
  %235 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %233, i64 %226
  %236 = ptrtoint %struct.XFA_TABSTOPS* %235 to i64
  %237 = icmp eq %struct.XFA_TABSTOPS* %210, null
  %238 = bitcast %struct.XFA_TABSTOPS* %234 to i64*
  br i1 %237, label %240, label %239

239:                                              ; preds = %229
  tail call void @_ZdlPv(i8* %209) #8
  br label %240

240:                                              ; preds = %206, %218, %229, %239
  %241 = phi %struct.XFA_TABSTOPS* [ %221, %218 ], [ %234, %229 ], [ %234, %239 ], [ %211, %206 ]
  %242 = phi i64 [ %213, %218 ], [ %236, %229 ], [ %236, %239 ], [ %213, %206 ]
  %243 = phi i64* [ %222, %218 ], [ %238, %229 ], [ %238, %239 ], [ %215, %206 ]
  %244 = bitcast %struct.XFA_TABSTOPS* %2 to i64*
  %245 = load i64, i64* %244, align 4
  store i64 %245, i64* %243, align 4
  %246 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %241, i64 1
  %247 = load %struct.XFA_TABSTOPS*, %struct.XFA_TABSTOPS** %6, align 8
  %248 = ptrtoint %struct.XFA_TABSTOPS* %247 to i64
  %249 = sub i64 %4, %248
  %250 = ashr exact i64 %249, 3
  %251 = sub nsw i64 0, %250
  %252 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %241, i64 %251
  %253 = ptrtoint %struct.XFA_TABSTOPS* %252 to i64
  %254 = icmp sgt i64 %249, 0
  br i1 %254, label %255, label %258

255:                                              ; preds = %240
  %256 = bitcast %struct.XFA_TABSTOPS* %252 to i8*
  %257 = bitcast %struct.XFA_TABSTOPS* %247 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %256, i8* align 4 %257, i64 %249, i1 false) #9
  br label %258

258:                                              ; preds = %255, %240
  %259 = load %struct.XFA_TABSTOPS*, %struct.XFA_TABSTOPS** %7, align 8
  %260 = icmp eq %struct.XFA_TABSTOPS* %259, %1
  br i1 %260, label %432, label %261

261:                                              ; preds = %258
  %262 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %259, i64 -1, i32 0
  %263 = ptrtoint i32* %262 to i64
  %264 = sub i64 %263, %4
  %265 = lshr i64 %264, 3
  %266 = add nuw nsw i64 %265, 1
  %267 = icmp ult i64 %266, 4
  br i1 %267, label %361, label %268

268:                                              ; preds = %261
  %269 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %259, i64 -1, i32 0
  %270 = ptrtoint i32* %269 to i64
  %271 = sub i64 %270, %4
  %272 = lshr i64 %271, 3
  %273 = add nuw nsw i64 %272, 2
  %274 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %241, i64 %273
  %275 = add nuw nsw i64 %272, 1
  %276 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %1, i64 %275
  %277 = icmp ult %struct.XFA_TABSTOPS* %246, %276
  %278 = icmp ugt %struct.XFA_TABSTOPS* %274, %1
  %279 = and i1 %277, %278
  br i1 %279, label %361, label %280

280:                                              ; preds = %268
  %281 = and i64 %266, 4611686018427387900
  %282 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %246, i64 %281
  %283 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %1, i64 %281
  %284 = add nsw i64 %281, -4
  %285 = lshr exact i64 %284, 2
  %286 = add nuw nsw i64 %285, 1
  %287 = and i64 %286, 3
  %288 = icmp ult i64 %284, 12
  br i1 %288, label %340, label %289

289:                                              ; preds = %280
  %290 = sub nsw i64 %286, %287
  br label %291

291:                                              ; preds = %291, %289
  %292 = phi i64 [ 0, %289 ], [ %337, %291 ]
  %293 = phi i64 [ %290, %289 ], [ %338, %291 ]
  %294 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %246, i64 %292
  %295 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %1, i64 %292
  %296 = bitcast %struct.XFA_TABSTOPS* %295 to <2 x i64>*
  %297 = load <2 x i64>, <2 x i64>* %296, align 4, !alias.scope !12
  %298 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %295, i64 2
  %299 = bitcast %struct.XFA_TABSTOPS* %298 to <2 x i64>*
  %300 = load <2 x i64>, <2 x i64>* %299, align 4, !alias.scope !12
  %301 = bitcast %struct.XFA_TABSTOPS* %294 to <2 x i64>*
  store <2 x i64> %297, <2 x i64>* %301, align 4, !alias.scope !15, !noalias !12
  %302 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %294, i64 2
  %303 = bitcast %struct.XFA_TABSTOPS* %302 to <2 x i64>*
  store <2 x i64> %300, <2 x i64>* %303, align 4, !alias.scope !15, !noalias !12
  %304 = or i64 %292, 4
  %305 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %246, i64 %304
  %306 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %1, i64 %304
  %307 = bitcast %struct.XFA_TABSTOPS* %306 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 4, !alias.scope !12
  %309 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %306, i64 2
  %310 = bitcast %struct.XFA_TABSTOPS* %309 to <2 x i64>*
  %311 = load <2 x i64>, <2 x i64>* %310, align 4, !alias.scope !12
  %312 = bitcast %struct.XFA_TABSTOPS* %305 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %312, align 4, !alias.scope !15, !noalias !12
  %313 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %305, i64 2
  %314 = bitcast %struct.XFA_TABSTOPS* %313 to <2 x i64>*
  store <2 x i64> %311, <2 x i64>* %314, align 4, !alias.scope !15, !noalias !12
  %315 = or i64 %292, 8
  %316 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %246, i64 %315
  %317 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %1, i64 %315
  %318 = bitcast %struct.XFA_TABSTOPS* %317 to <2 x i64>*
  %319 = load <2 x i64>, <2 x i64>* %318, align 4, !alias.scope !12
  %320 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %317, i64 2
  %321 = bitcast %struct.XFA_TABSTOPS* %320 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 4, !alias.scope !12
  %323 = bitcast %struct.XFA_TABSTOPS* %316 to <2 x i64>*
  store <2 x i64> %319, <2 x i64>* %323, align 4, !alias.scope !15, !noalias !12
  %324 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %316, i64 2
  %325 = bitcast %struct.XFA_TABSTOPS* %324 to <2 x i64>*
  store <2 x i64> %322, <2 x i64>* %325, align 4, !alias.scope !15, !noalias !12
  %326 = or i64 %292, 12
  %327 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %246, i64 %326
  %328 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %1, i64 %326
  %329 = bitcast %struct.XFA_TABSTOPS* %328 to <2 x i64>*
  %330 = load <2 x i64>, <2 x i64>* %329, align 4, !alias.scope !12
  %331 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %328, i64 2
  %332 = bitcast %struct.XFA_TABSTOPS* %331 to <2 x i64>*
  %333 = load <2 x i64>, <2 x i64>* %332, align 4, !alias.scope !12
  %334 = bitcast %struct.XFA_TABSTOPS* %327 to <2 x i64>*
  store <2 x i64> %330, <2 x i64>* %334, align 4, !alias.scope !15, !noalias !12
  %335 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %327, i64 2
  %336 = bitcast %struct.XFA_TABSTOPS* %335 to <2 x i64>*
  store <2 x i64> %333, <2 x i64>* %336, align 4, !alias.scope !15, !noalias !12
  %337 = add i64 %292, 16
  %338 = add i64 %293, -4
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %291, !llvm.loop !17

340:                                              ; preds = %291, %280
  %341 = phi i64 [ 0, %280 ], [ %337, %291 ]
  %342 = icmp eq i64 %287, 0
  br i1 %342, label %359, label %343

343:                                              ; preds = %340, %343
  %344 = phi i64 [ %356, %343 ], [ %341, %340 ]
  %345 = phi i64 [ %357, %343 ], [ %287, %340 ]
  %346 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %246, i64 %344
  %347 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %1, i64 %344
  %348 = bitcast %struct.XFA_TABSTOPS* %347 to <2 x i64>*
  %349 = load <2 x i64>, <2 x i64>* %348, align 4, !alias.scope !12
  %350 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %347, i64 2
  %351 = bitcast %struct.XFA_TABSTOPS* %350 to <2 x i64>*
  %352 = load <2 x i64>, <2 x i64>* %351, align 4, !alias.scope !12
  %353 = bitcast %struct.XFA_TABSTOPS* %346 to <2 x i64>*
  store <2 x i64> %349, <2 x i64>* %353, align 4, !alias.scope !15, !noalias !12
  %354 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %346, i64 2
  %355 = bitcast %struct.XFA_TABSTOPS* %354 to <2 x i64>*
  store <2 x i64> %352, <2 x i64>* %355, align 4, !alias.scope !15, !noalias !12
  %356 = add i64 %344, 4
  %357 = add i64 %345, -1
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %343, !llvm.loop !18

359:                                              ; preds = %343, %340
  %360 = icmp eq i64 %266, %281
  br i1 %360, label %432, label %361

361:                                              ; preds = %359, %268, %261
  %362 = phi %struct.XFA_TABSTOPS* [ %246, %268 ], [ %246, %261 ], [ %282, %359 ]
  %363 = phi %struct.XFA_TABSTOPS* [ %1, %268 ], [ %1, %261 ], [ %283, %359 ]
  %364 = ptrtoint %struct.XFA_TABSTOPS* %363 to i64
  %365 = getelementptr %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %259, i64 -1, i32 0
  %366 = ptrtoint i32* %365 to i64
  %367 = sub i64 %366, %364
  %368 = lshr i64 %367, 3
  %369 = add nuw nsw i64 %368, 1
  %370 = and i64 %369, 7
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %383, label %372

372:                                              ; preds = %361, %372
  %373 = phi %struct.XFA_TABSTOPS* [ %380, %372 ], [ %362, %361 ]
  %374 = phi %struct.XFA_TABSTOPS* [ %379, %372 ], [ %363, %361 ]
  %375 = phi i64 [ %381, %372 ], [ %370, %361 ]
  %376 = bitcast %struct.XFA_TABSTOPS* %373 to i64*
  %377 = bitcast %struct.XFA_TABSTOPS* %374 to i64*
  %378 = load i64, i64* %377, align 4
  store i64 %378, i64* %376, align 4
  %379 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %374, i64 1
  %380 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %373, i64 1
  %381 = add i64 %375, -1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %372, !llvm.loop !19

383:                                              ; preds = %372, %361
  %384 = phi %struct.XFA_TABSTOPS* [ undef, %361 ], [ %380, %372 ]
  %385 = phi %struct.XFA_TABSTOPS* [ %362, %361 ], [ %380, %372 ]
  %386 = phi %struct.XFA_TABSTOPS* [ %363, %361 ], [ %379, %372 ]
  %387 = icmp ult i64 %367, 56
  br i1 %387, label %432, label %388

388:                                              ; preds = %383, %388
  %389 = phi %struct.XFA_TABSTOPS* [ %430, %388 ], [ %385, %383 ]
  %390 = phi %struct.XFA_TABSTOPS* [ %429, %388 ], [ %386, %383 ]
  %391 = bitcast %struct.XFA_TABSTOPS* %389 to i64*
  %392 = bitcast %struct.XFA_TABSTOPS* %390 to i64*
  %393 = load i64, i64* %392, align 4
  store i64 %393, i64* %391, align 4
  %394 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %390, i64 1
  %395 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %389, i64 1
  %396 = bitcast %struct.XFA_TABSTOPS* %395 to i64*
  %397 = bitcast %struct.XFA_TABSTOPS* %394 to i64*
  %398 = load i64, i64* %397, align 4
  store i64 %398, i64* %396, align 4
  %399 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %390, i64 2
  %400 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %389, i64 2
  %401 = bitcast %struct.XFA_TABSTOPS* %400 to i64*
  %402 = bitcast %struct.XFA_TABSTOPS* %399 to i64*
  %403 = load i64, i64* %402, align 4
  store i64 %403, i64* %401, align 4
  %404 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %390, i64 3
  %405 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %389, i64 3
  %406 = bitcast %struct.XFA_TABSTOPS* %405 to i64*
  %407 = bitcast %struct.XFA_TABSTOPS* %404 to i64*
  %408 = load i64, i64* %407, align 4
  store i64 %408, i64* %406, align 4
  %409 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %390, i64 4
  %410 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %389, i64 4
  %411 = bitcast %struct.XFA_TABSTOPS* %410 to i64*
  %412 = bitcast %struct.XFA_TABSTOPS* %409 to i64*
  %413 = load i64, i64* %412, align 4
  store i64 %413, i64* %411, align 4
  %414 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %390, i64 5
  %415 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %389, i64 5
  %416 = bitcast %struct.XFA_TABSTOPS* %415 to i64*
  %417 = bitcast %struct.XFA_TABSTOPS* %414 to i64*
  %418 = load i64, i64* %417, align 4
  store i64 %418, i64* %416, align 4
  %419 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %390, i64 6
  %420 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %389, i64 6
  %421 = bitcast %struct.XFA_TABSTOPS* %420 to i64*
  %422 = bitcast %struct.XFA_TABSTOPS* %419 to i64*
  %423 = load i64, i64* %422, align 4
  store i64 %423, i64* %421, align 4
  %424 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %390, i64 7
  %425 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %389, i64 7
  %426 = bitcast %struct.XFA_TABSTOPS* %425 to i64*
  %427 = bitcast %struct.XFA_TABSTOPS* %424 to i64*
  %428 = load i64, i64* %427, align 4
  store i64 %428, i64* %426, align 4
  %429 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %390, i64 8
  %430 = getelementptr inbounds %struct.XFA_TABSTOPS, %struct.XFA_TABSTOPS* %389, i64 8
  %431 = icmp eq %struct.XFA_TABSTOPS* %429, %259
  br i1 %431, label %432, label %388, !llvm.loop !20

432:                                              ; preds = %383, %388, %359, %258
  %433 = phi %struct.XFA_TABSTOPS* [ %246, %258 ], [ %282, %359 ], [ %384, %383 ], [ %430, %388 ]
  %434 = ptrtoint %struct.XFA_TABSTOPS* %433 to i64
  %435 = load %struct.XFA_TABSTOPS*, %struct.XFA_TABSTOPS** %6, align 8
  store i64 %253, i64* %174, align 8
  store i64 %434, i64* %173, align 8
  store i64 %242, i64* %183, align 8
  %436 = icmp eq %struct.XFA_TABSTOPS* %435, null
  br i1 %436, label %439, label %437

437:                                              ; preds = %432
  %438 = bitcast %struct.XFA_TABSTOPS* %435 to i8*
  tail call void @_ZdlPv(i8* %438) #8
  br label %439

439:                                              ; preds = %437, %432, %16, %167
  %440 = phi %struct.XFA_TABSTOPS* [ %1, %16 ], [ %1, %167 ], [ %241, %432 ], [ %241, %437 ]
  ret %struct.XFA_TABSTOPS* %440
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN24CXFA_TextTabstopsContext9RemoveAllEv(%class.CXFA_TextTabstopsContext* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CXFA_TextTabstopsContext, %class.CXFA_TextTabstopsContext* %0, i64 0, i32 4
  %3 = bitcast %"class.std::__1::vector"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.CXFA_TextTabstopsContext, %class.CXFA_TextTabstopsContext* %0, i64 0, i32 4, i32 0, i32 1
  %6 = bitcast %struct.XFA_TABSTOPS** %5 to i64*
  store i64 %4, i64* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN24CXFA_TextTabstopsContext5ResetEv(%class.CXFA_TextTabstopsContext* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CXFA_TextTabstopsContext, %class.CXFA_TextTabstopsContext* %0, i64 0, i32 0
  store i32 -1, i32* %2, align 8
  %3 = getelementptr inbounds %class.CXFA_TextTabstopsContext, %class.CXFA_TextTabstopsContext* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %class.CXFA_TextTabstopsContext, %class.CXFA_TextTabstopsContext* %0, i64 0, i32 2
  store float 0.000000e+00, float* %4, align 8
  %5 = getelementptr inbounds %class.CXFA_TextTabstopsContext, %class.CXFA_TextTabstopsContext* %0, i64 0, i32 3
  store float 0.000000e+00, float* %5, align 4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !8}
