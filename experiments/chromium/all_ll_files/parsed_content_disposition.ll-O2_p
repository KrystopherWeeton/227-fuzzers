; ModuleID = '../../third_party/blink/renderer/platform/network/parsed_content_disposition.cc'
source_filename = "../../third_party/blink/renderer/platform/network/parsed_content_disposition.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ParsedContentDisposition" = type { %"class.WTF::String", %"class.absl::optional" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ParsedContentHeaderFieldParameters" }
%"class.blink::ParsedContentHeaderFieldParameters" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"*, i32, i32 }
%"struct.blink::ParsedContentHeaderFieldParameters::NameValue" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HeaderFieldTokenizer" = type { i32, %"class.WTF::String" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>

@.str = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8

@_ZN5blink24ParsedContentDispositionC1ERKN3WTF6StringENS_34ParsedContentHeaderFieldParameters4ModeE = hidden unnamed_addr alias void (%"class.blink::ParsedContentDisposition"*, %"class.WTF::String"*, i32), void (%"class.blink::ParsedContentDisposition"*, %"class.WTF::String"*, i32)* @_ZN5blink24ParsedContentDispositionC2ERKN3WTF6StringENS_34ParsedContentHeaderFieldParameters4ModeE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ParsedContentDispositionC2ERKN3WTF6StringENS_34ParsedContentHeaderFieldParameters4ModeE(%"class.blink::ParsedContentDisposition"* nocapture, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::HeaderFieldTokenizer", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.absl::optional", align 8
  %7 = alloca %"class.blink::HeaderFieldTokenizer", align 8
  %8 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = bitcast %"class.blink::HeaderFieldTokenizer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZN5blink20HeaderFieldTokenizerC1ERKN3WTF6StringE(%"class.blink::HeaderFieldTokenizer"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %1) #3
  %11 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #3
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %14 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  store i32 0, i32* %13, align 8
  store i8* null, i8** %12, align 8
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %15, i64* %16, align 8
  %17 = call zeroext i1 @_ZN5blink20HeaderFieldTokenizer12ConsumeTokenENS_34ParsedContentHeaderFieldParameters4ModeERN3WTF10StringViewE(%"class.blink::HeaderFieldTokenizer"* nonnull %4, i32 0, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #3
  br i1 %17, label %18, label %207

18:                                               ; preds = %3
  %19 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %5) #3
  %20 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %21 = bitcast %"class.blink::ParsedContentDisposition"* %0 to i64*
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store i64 %20, i64* %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #3
  br label %37

37:                                               ; preds = %36, %33, %18
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #3
  call void @_ZN5blink20HeaderFieldTokenizerC1EOS0_(%"class.blink::HeaderFieldTokenizer"* nonnull %7, %"class.blink::HeaderFieldTokenizer"* nonnull dereferenceable(16) %4) #3
  call void @_ZN5blink34ParsedContentHeaderFieldParameters5ParseENS_20HeaderFieldTokenizerENS0_4ModeE(%"class.absl::optional"* nonnull sret %6, %"class.blink::HeaderFieldTokenizer"* nonnull %7, i32 %2) #3
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %70, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = load i8, i8* %9, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  %45 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %44, label %59, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::ParsedContentHeaderFieldParameters"* %42 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.blink::ParsedContentHeaderFieldParameters"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  store atomic i64 %50, i64* %47 monotonic, align 8
  store atomic i64 %48, i64* %49 monotonic, align 8
  %51 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i32, i32* %51, align 4
  %54 = load i32, i32* %52, align 8
  store i32 %54, i32* %51, align 4
  store i32 %53, i32* %52, align 8
  %55 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %56 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %55, align 4
  %58 = load i32, i32* %56, align 4
  store i32 %58, i32* %55, align 4
  store i32 %57, i32* %56, align 4
  br label %132

59:                                               ; preds = %41
  %60 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = bitcast %"class.blink::ParsedContentHeaderFieldParameters"* %42 to i64*
  %63 = bitcast %"class.blink::ParsedContentHeaderFieldParameters"* %45 to i64*
  store i64 0, i64* %63, align 8
  %64 = load i64, i64* %62, align 8
  %65 = bitcast %"class.blink::ParsedContentHeaderFieldParameters"* %45 to i64*
  store atomic i64 0, i64* %62 monotonic, align 8
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  store i32 %67, i32* %60, align 4
  store i32 0, i32* %66, align 8
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %61, align 4
  store i32 0, i32* %68, align 4
  store i8 1, i8* %9, align 8
  br label %132

70:                                               ; preds = %37
  %71 = load i8, i8* %9, align 8, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %189, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %75 = getelementptr inbounds %"class.blink::ParsedContentHeaderFieldParameters", %"class.blink::ParsedContentHeaderFieldParameters"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"*, %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"** %75, align 8
  %77 = icmp eq %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %76, null
  br i1 %77, label %78, label %79, !prof !3

78:                                               ; preds = %73
  store i8 0, i8* %9, align 8
  br label %189

79:                                               ; preds = %73
  %80 = bitcast %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %76 to i8*
  %81 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %128, label %84, !prof !4

84:                                               ; preds = %79
  %85 = zext i32 %82 to i64
  %86 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %76, i64 %85
  br label %87

87:                                               ; preds = %122, %84
  %88 = phi %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* [ %123, %122 ], [ %76, %84 ]
  %89 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %88, i64 0, i32 1, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #3
  br label %105

105:                                              ; preds = %104, %101, %87
  %106 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %88, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #3
  br label %122

122:                                              ; preds = %121, %118, %105
  %123 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %88, i64 1
  %124 = icmp eq %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %123, %86
  br i1 %124, label %125, label %87

125:                                              ; preds = %122
  store i32 0, i32* %81, align 4
  %126 = bitcast %"class.blink::ParsedContentHeaderFieldParameters"* %74 to i8**
  %127 = load i8*, i8** %126, align 8
  br label %128

128:                                              ; preds = %79, %125
  %129 = phi i8* [ %127, %125 ], [ %80, %79 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %129) #3
  store %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* null, %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"** %75, align 8
  %130 = load i8, i8* %38, align 8, !range !2
  store i8 0, i8* %9, align 8
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %189, label %132

132:                                              ; preds = %59, %46, %128
  %133 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %134 = getelementptr inbounds %"class.blink::ParsedContentHeaderFieldParameters", %"class.blink::ParsedContentHeaderFieldParameters"* %133, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"*, %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"** %134, align 8
  %136 = icmp eq %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %135, null
  br i1 %136, label %188, label %137, !prof !3

137:                                              ; preds = %132
  %138 = bitcast %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %135 to i8*
  %139 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %186, label %142, !prof !4

142:                                              ; preds = %137
  %143 = zext i32 %140 to i64
  %144 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %135, i64 %143
  br label %145

145:                                              ; preds = %180, %142
  %146 = phi %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* [ %181, %180 ], [ %135, %142 ]
  %147 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %146, i64 0, i32 1, i32 0, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #3
  br label %163

163:                                              ; preds = %162, %159, %145
  %164 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %146, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #3
  br label %180

180:                                              ; preds = %179, %176, %163
  %181 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %146, i64 1
  %182 = icmp eq %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %181, %144
  br i1 %182, label %183, label %145

183:                                              ; preds = %180
  store i32 0, i32* %139, align 4
  %184 = bitcast %"class.blink::ParsedContentHeaderFieldParameters"* %133 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %186

186:                                              ; preds = %183, %137
  %187 = phi i8* [ %185, %183 ], [ %138, %137 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %187) #3
  store %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* null, %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"** %134, align 8
  br label %188

188:                                              ; preds = %132, %186
  store i8 0, i8* %38, align 8
  br label %189

189:                                              ; preds = %70, %78, %128, %188
  %190 = getelementptr inbounds %"class.blink::HeaderFieldTokenizer", %"class.blink::HeaderFieldTokenizer"* %7, i64 0, i32 1, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #3
  br label %206

206:                                              ; preds = %189, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #3
  br label %207

207:                                              ; preds = %3, %206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #3
  %208 = getelementptr inbounds %"class.blink::HeaderFieldTokenizer", %"class.blink::HeaderFieldTokenizer"* %4, i64 0, i32 1, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #3
  br label %224

224:                                              ; preds = %207, %220, %223
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink20HeaderFieldTokenizerC1ERKN3WTF6StringE(%"class.blink::HeaderFieldTokenizer"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZN5blink20HeaderFieldTokenizer12ConsumeTokenENS_34ParsedContentHeaderFieldParameters4ModeERN3WTF10StringViewE(%"class.blink::HeaderFieldTokenizer"*, i32, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink34ParsedContentHeaderFieldParameters5ParseENS_20HeaderFieldTokenizerENS0_4ModeE(%"class.absl::optional"* sret, %"class.blink::HeaderFieldTokenizer"*, i32) local_unnamed_addr #2

declare void @_ZN5blink20HeaderFieldTokenizerC1EOS0_(%"class.blink::HeaderFieldTokenizer"*, %"class.blink::HeaderFieldTokenizer"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink24ParsedContentDisposition8FilenameEv(%"class.blink::ParsedContentDisposition"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #3
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 8) #3
  %4 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = call %"class.WTF::StringImpl"* @_ZNK5blink34ParsedContentHeaderFieldParameters21ParameterValueForNameERKN3WTF6StringE(%"class.blink::ParsedContentHeaderFieldParameters"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %2) #3
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi %"class.WTF::StringImpl"* [ %9, %7 ], [ null, %1 ]
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #3
  br label %28

28:                                               ; preds = %10, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #3
  ret %"class.WTF::StringImpl"* %11
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink34ParsedContentHeaderFieldParameters21ParameterValueForNameERKN3WTF6StringE(%"class.blink::ParsedContentHeaderFieldParameters"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
