; ModuleID = '../../ui/aura/window_tracker.cc'
source_filename = "../../ui/aura/window_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.aura::WindowTracker" = type { %"class.aura::WindowObserver", %"class.std::__1::vector" }
%"class.aura::WindowObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair" }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", %"class.std::__1::vector.60", i32, i32, i32, [4 x i8], %"class.base::ObserverList.67", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.79", %"class.base::WeakPtr.85" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.10", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.12" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.17", %"class.std::__1::vector.24", %"class.ui::EventHandler"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.19" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.39" }
%"class.std::__1::map.39" = type { %"class.std::__1::__tree.40" }
%"class.std::__1::__tree.40" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type opaque
%"class.aura::WindowDelegate" = type opaque
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.67" = type <{ %"class.std::__1::vector.68", %"class.base::LinkedList.76", i64, i32, [4 x i8] }>
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.71" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.70 }
%class.scoped_refptr.70 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.76" = type { %"class.base::LinkNode.77" }
%"class.base::LinkNode.77" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.85" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.aura::Window"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.aura::WindowObserver::HierarchyChangeParams" = type { %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, i32, %"class.aura::Window"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>

$_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE = comdat any

$_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE = comdat any

$_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl = comdat any

$_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb = comdat any

$_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb = comdat any

$_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE = comdat any

$_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE = comdat any

@_ZTVN4aura13WindowTrackerE = hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura::WindowTracker"*)* @_ZN4aura13WindowTrackerD2Ev to i8*), i8* bitcast (void (%"class.aura::WindowTracker"*)* @_ZN4aura13WindowTrackerD0Ev to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64)* @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i32)* @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"*)* @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowTracker"*, %"class.aura::Window"*)* @_ZN4aura13WindowTracker18OnWindowDestroyingEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE to i8*)] }, align 8

@_ZN4aura13WindowTrackerC1ERKNSt3__16vectorIPNS_6WindowENS1_9allocatorIS4_EEEE = hidden unnamed_addr alias void (%"class.aura::WindowTracker"*, %"class.std::__1::vector"*), void (%"class.aura::WindowTracker"*, %"class.std::__1::vector"*)* @_ZN4aura13WindowTrackerC2ERKNSt3__16vectorIPNS_6WindowENS1_9allocatorIS4_EEEE
@_ZN4aura13WindowTrackerC1Ev = hidden unnamed_addr alias void (%"class.aura::WindowTracker"*), void (%"class.aura::WindowTracker"*)* @_ZN4aura13WindowTrackerC2Ev
@_ZN4aura13WindowTrackerD1Ev = hidden unnamed_addr alias void (%"class.aura::WindowTracker"*), void (%"class.aura::WindowTracker"*)* @_ZN4aura13WindowTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura13WindowTrackerC2ERKNSt3__16vectorIPNS_6WindowENS1_9allocatorIS4_EEEE(%"class.aura::WindowTracker"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"* %3) #9
  %4 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN4aura13WindowTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #9
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.aura::Window"**, %"class.aura::Window"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %10 = load %"class.aura::Window"**, %"class.aura::Window"*** %9, align 8
  %11 = icmp eq %"class.aura::Window"** %8, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %13, %2
  ret void

13:                                               ; preds = %2, %13
  %14 = phi %"class.aura::Window"** [ %16, %13 ], [ %8, %2 ]
  %15 = load %"class.aura::Window"*, %"class.aura::Window"** %14, align 8
  tail call void @_ZN4aura13WindowTracker3AddEPNS_6WindowE(%"class.aura::WindowTracker"* %0, %"class.aura::Window"* %15)
  %16 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %14, i64 1
  %17 = icmp eq %"class.aura::Window"** %16, %10
  br i1 %17, label %12, label %13
}

declare void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura13WindowTracker3AddEPNS_6WindowE(%"class.aura::WindowTracker"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.aura::Window"* %1 to i64
  %4 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %"class.aura::Window"**, %"class.aura::Window"*** %7, align 8
  %9 = icmp eq %"class.aura::Window"** %6, %8
  br i1 %9, label %17, label %10

10:                                               ; preds = %2, %14
  %11 = phi %"class.aura::Window"** [ %15, %14 ], [ %6, %2 ]
  %12 = load %"class.aura::Window"*, %"class.aura::Window"** %11, align 8
  %13 = icmp eq %"class.aura::Window"* %12, %1
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %11, i64 1
  %16 = icmp eq %"class.aura::Window"** %15, %8
  br i1 %16, label %20, label %10

17:                                               ; preds = %10, %2
  %18 = phi %"class.aura::Window"** [ %6, %2 ], [ %11, %10 ]
  %19 = icmp eq %"class.aura::Window"** %18, %8
  br i1 %19, label %20, label %88

20:                                               ; preds = %14, %17
  %21 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0
  tail call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %21) #9
  %22 = load %"class.aura::Window"**, %"class.aura::Window"*** %7, align 8
  %23 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %24 = load %"class.aura::Window"**, %"class.aura::Window"*** %23, align 8
  %25 = icmp eq %"class.aura::Window"** %22, %24
  %26 = ptrtoint %"class.aura::Window"** %24 to i64
  br i1 %25, label %32, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.aura::Window"** %22 to i64*
  store i64 %3, i64* %28, align 8
  %29 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %22, i64 1
  %30 = ptrtoint %"class.aura::Window"** %29 to i64
  %31 = bitcast %"class.aura::Window"*** %7 to i64*
  store i64 %30, i64* %31, align 8
  br label %88

32:                                               ; preds = %20
  %33 = ptrtoint %"class.aura::Window"** %22 to i64
  %34 = bitcast %"class.aura::Window"*** %7 to i64*
  %35 = bitcast %"class.std::__1::vector"* %4 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %33, %36
  %38 = ashr exact i64 %37, 3
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 2305843009213693951
  br i1 %40, label %41, label %43

41:                                               ; preds = %32
  %42 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #10
  unreachable

43:                                               ; preds = %32
  %44 = bitcast %"class.aura::Window"*** %23 to i64*
  %45 = sub i64 %26, %36
  %46 = ashr exact i64 %45, 3
  %47 = icmp ult i64 %46, 1152921504606846975
  br i1 %47, label %48, label %56

48:                                               ; preds = %43
  %49 = ashr exact i64 %45, 2
  %50 = icmp ult i64 %49, %39
  %51 = select i1 %50, i64 %39, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %48
  %54 = icmp ugt i64 %51, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  tail call void @abort() #10
  unreachable

56:                                               ; preds = %53, %43
  %57 = phi i64 [ %51, %53 ], [ 2305843009213693951, %43 ]
  %58 = shl i64 %57, 3
  %59 = tail call i8* @_Znwm(i64 %58) #11
  %60 = bitcast i8* %59 to %"class.aura::Window"**
  br label %61

61:                                               ; preds = %56, %48
  %62 = phi i64 [ %57, %56 ], [ 0, %48 ]
  %63 = phi %"class.aura::Window"** [ %60, %56 ], [ null, %48 ]
  %64 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %63, i64 %38
  %65 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %63, i64 %62
  %66 = ptrtoint %"class.aura::Window"** %65 to i64
  %67 = bitcast %"class.aura::Window"** %64 to i64*
  store i64 %3, i64* %67, align 8
  %68 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %64, i64 1
  %69 = ptrtoint %"class.aura::Window"** %68 to i64
  %70 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %71 = load i64, i64* %34, align 8
  %72 = ptrtoint %"class.aura::Window"** %70 to i64
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 3
  %75 = sub nsw i64 0, %74
  %76 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %64, i64 %75
  %77 = ptrtoint %"class.aura::Window"** %76 to i64
  %78 = icmp sgt i64 %73, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %61
  %80 = bitcast %"class.aura::Window"** %76 to i8*
  %81 = bitcast %"class.aura::Window"** %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 %73, i1 false) #9
  %82 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  br label %83

83:                                               ; preds = %79, %61
  %84 = phi %"class.aura::Window"** [ %70, %61 ], [ %82, %79 ]
  store i64 %77, i64* %35, align 8
  store i64 %69, i64* %34, align 8
  store i64 %66, i64* %44, align 8
  %85 = icmp eq %"class.aura::Window"** %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = bitcast %"class.aura::Window"** %84 to i8*
  tail call void @_ZdlPv(i8* %87) #11
  br label %88

88:                                               ; preds = %17, %86, %83, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura13WindowTrackerC2Ev(%"class.aura::WindowTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"* %2) #9
  %3 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN4aura13WindowTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura13WindowTrackerD2Ev(%"class.aura::WindowTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN4aura13WindowTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.aura::Window"**, %"class.aura::Window"*** %4, align 8
  %6 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.aura::Window"**, %"class.aura::Window"*** %6, align 8
  %8 = icmp eq %"class.aura::Window"** %5, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = ptrtoint %"class.aura::Window"** %5 to i64
  br label %22

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0
  br label %17

13:                                               ; preds = %17
  %14 = bitcast %"class.std::__1::vector"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = inttoptr i64 %15 to %"class.aura::Window"**
  br label %22

17:                                               ; preds = %17, %11
  %18 = phi %"class.aura::Window"** [ %5, %11 ], [ %20, %17 ]
  %19 = load %"class.aura::Window"*, %"class.aura::Window"** %18, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %19, %"class.aura::WindowObserver"* %12) #9
  %20 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %18, i64 1
  %21 = icmp eq %"class.aura::Window"** %20, %7
  br i1 %21, label %13, label %17

22:                                               ; preds = %9, %13
  %23 = phi %"class.aura::Window"** [ %5, %9 ], [ %16, %13 ]
  %24 = phi i64 [ %10, %9 ], [ %15, %13 ]
  %25 = bitcast %"class.aura::Window"*** %6 to i64*
  store i64 %24, i64* %25, align 8
  %26 = icmp eq %"class.aura::Window"** %23, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = ptrtoint %"class.aura::Window"** %23 to i64
  store i64 %28, i64* %25, align 8
  %29 = bitcast %"class.aura::Window"** %23 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %22, %27
  %31 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %31) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura13WindowTracker9RemoveAllEv(%"class.aura::WindowTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.aura::Window"**, %"class.aura::Window"*** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = icmp eq %"class.aura::Window"** %4, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = ptrtoint %"class.aura::Window"** %4 to i64
  br label %15

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0
  br label %18

12:                                               ; preds = %18
  %13 = bitcast %"class.std::__1::vector"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  br label %15

15:                                               ; preds = %8, %12
  %16 = phi i64 [ %14, %12 ], [ %9, %8 ]
  %17 = bitcast %"class.aura::Window"*** %5 to i64*
  store i64 %16, i64* %17, align 8
  ret void

18:                                               ; preds = %10, %18
  %19 = phi %"class.aura::Window"** [ %4, %10 ], [ %21, %18 ]
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %20, %"class.aura::WindowObserver"* %11) #9
  %21 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %19, i64 1
  %22 = icmp eq %"class.aura::Window"** %21, %6
  br i1 %22, label %12, label %18
}

; Function Attrs: nounwind
declare void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura13WindowTrackerD0Ev(%"class.aura::WindowTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN4aura13WindowTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.aura::Window"**, %"class.aura::Window"*** %4, align 8
  %6 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.aura::Window"**, %"class.aura::Window"*** %6, align 8
  %8 = icmp eq %"class.aura::Window"** %5, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = ptrtoint %"class.aura::Window"** %5 to i64
  br label %22

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0
  br label %17

13:                                               ; preds = %17
  %14 = bitcast %"class.std::__1::vector"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = inttoptr i64 %15 to %"class.aura::Window"**
  br label %22

17:                                               ; preds = %17, %11
  %18 = phi %"class.aura::Window"** [ %5, %11 ], [ %20, %17 ]
  %19 = load %"class.aura::Window"*, %"class.aura::Window"** %18, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %19, %"class.aura::WindowObserver"* %12) #9
  %20 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %18, i64 1
  %21 = icmp eq %"class.aura::Window"** %20, %7
  br i1 %21, label %13, label %17

22:                                               ; preds = %13, %9
  %23 = phi %"class.aura::Window"** [ %5, %9 ], [ %16, %13 ]
  %24 = phi i64 [ %10, %9 ], [ %15, %13 ]
  %25 = bitcast %"class.aura::Window"*** %6 to i64*
  store i64 %24, i64* %25, align 8
  %26 = icmp eq %"class.aura::Window"** %23, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = ptrtoint %"class.aura::Window"** %23 to i64
  store i64 %28, i64* %25, align 8
  %29 = bitcast %"class.aura::Window"** %23 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %22, %27
  %31 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %31) #9
  %32 = bitcast %"class.aura::WindowTracker"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #1

declare void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura13WindowTracker6RemoveEPNS_6WindowE(%"class.aura::WindowTracker"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.aura::Window"**, %"class.aura::Window"*** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = icmp eq %"class.aura::Window"** %4, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2, %12
  %9 = phi %"class.aura::Window"** [ %13, %12 ], [ %4, %2 ]
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = icmp eq %"class.aura::Window"* %10, %1
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %9, i64 1
  %14 = icmp eq %"class.aura::Window"** %13, %6
  br i1 %14, label %32, label %8

15:                                               ; preds = %8, %2
  %16 = phi %"class.aura::Window"** [ %4, %2 ], [ %9, %8 ]
  %17 = icmp eq %"class.aura::Window"** %16, %6
  br i1 %17, label %32, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %19) #9
  %20 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %16, i64 1
  %21 = bitcast %"class.aura::Window"*** %5 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = ptrtoint %"class.aura::Window"** %20 to i64
  %24 = sub i64 %22, %23
  %25 = ashr exact i64 %24, 3
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %18
  %28 = bitcast %"class.aura::Window"** %16 to i8*
  %29 = bitcast %"class.aura::Window"** %20 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 %24, i1 false) #9
  br label %30

30:                                               ; preds = %18, %27
  %31 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %16, i64 %25
  store %"class.aura::Window"** %31, %"class.aura::Window"*** %5, align 8
  br label %32

32:                                               ; preds = %12, %15, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN4aura13WindowTracker3PopEv(%"class.aura::WindowTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.aura::Window"**, %"class.aura::Window"*** %2, align 8
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = icmp eq %"class.aura::Window"** %3, %6
  br i1 %7, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %4, %"class.aura::WindowObserver"* %9) #9
  %10 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %3, i64 1
  %11 = bitcast %"class.aura::Window"*** %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint %"class.aura::Window"** %10 to i64
  %14 = sub i64 %12, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %8
  %18 = bitcast %"class.aura::Window"** %3 to i8*
  %19 = bitcast %"class.aura::Window"** %10 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 %14, i1 false) #9
  br label %20

20:                                               ; preds = %17, %8
  %21 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %3, i64 %15
  store %"class.aura::Window"** %21, %"class.aura::Window"*** %5, align 8
  br label %22

22:                                               ; preds = %1, %20
  ret %"class.aura::Window"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4aura13WindowTracker8ContainsEPNS_6WindowE(%"class.aura::WindowTracker"* nocapture readonly, %"class.aura::Window"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.aura::Window"**, %"class.aura::Window"*** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = icmp eq %"class.aura::Window"** %4, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2, %12
  %9 = phi %"class.aura::Window"** [ %13, %12 ], [ %4, %2 ]
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = icmp eq %"class.aura::Window"* %10, %1
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %9, i64 1
  %14 = icmp eq %"class.aura::Window"** %13, %6
  br i1 %14, label %15, label %8

15:                                               ; preds = %8, %12, %2
  %16 = phi %"class.aura::Window"** [ %4, %2 ], [ %6, %12 ], [ %9, %8 ]
  %17 = icmp ne %"class.aura::Window"** %16, %6
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura13WindowTracker18OnWindowDestroyingEPNS_6WindowE(%"class.aura::WindowTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.aura::Window"**, %"class.aura::Window"*** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = icmp eq %"class.aura::Window"** %4, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2, %12
  %9 = phi %"class.aura::Window"** [ %13, %12 ], [ %4, %2 ]
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = icmp eq %"class.aura::Window"* %10, %1
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %9, i64 1
  %14 = icmp eq %"class.aura::Window"** %13, %6
  br i1 %14, label %32, label %8

15:                                               ; preds = %8, %2
  %16 = phi %"class.aura::Window"** [ %4, %2 ], [ %9, %8 ]
  %17 = icmp eq %"class.aura::Window"** %16, %6
  br i1 %17, label %32, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %0, i64 0, i32 0
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %19) #9
  %20 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %16, i64 1
  %21 = bitcast %"class.aura::Window"*** %5 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = ptrtoint %"class.aura::Window"** %20 to i64
  %24 = sub i64 %22, %23
  %25 = ashr exact i64 %24, 3
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %18
  %28 = bitcast %"class.aura::Window"** %16 to i8*
  %29 = bitcast %"class.aura::Window"** %20 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 %24, i1 false) #9
  br label %30

30:                                               ; preds = %27, %18
  %31 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %16, i64 %25
  store %"class.aura::Window"** %31, %"class.aura::Window"*** %5, align 8
  br label %32

32:                                               ; preds = %12, %15, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE(%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE(%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"* dereferenceable(68)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
