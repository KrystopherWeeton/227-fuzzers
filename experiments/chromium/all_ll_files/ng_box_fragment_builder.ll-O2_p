; ModuleID = '../../third_party/blink/renderer/core/layout/ng/ng_box_fragment_builder.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/ng_box_fragment_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::NGBoxFragmentBuilder" = type { %"class.blink::NGContainerFragmentBuilder.base", %"struct.blink::NGFragmentGeometry"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.absl::optional.1868", %"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGBlockNode", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional.2046", i32, %"class.absl::optional.1639", %"class.absl::optional.1639", %"class.absl::optional.2051", %"class.absl::optional.2056", %class.scoped_refptr.2066, %"class.std::__1::unique_ptr.2084", %"class.absl::optional.2095", %"class.absl::optional.2095", %"class.std::__1::unique_ptr.2100", %"struct.blink::LogicalBoxSides", %class.scoped_refptr.1672, %"class.absl::optional.1644", %"class.std::__1::unique_ptr.2106", %"class.absl::optional.1817", %class.scoped_refptr.2112 }
%"class.blink::NGContainerFragmentBuilder.base" = type <{ %"class.blink::NGFragmentBuilder.base", [6 x i8], %"class.blink::NGLayoutInputNode", %"class.blink::NGConstraintSpace"*, %"class.blink::LayoutUnit", %"class.absl::optional.1639", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGExclusionSpace", %"class.WTF::Vector.1865", %"class.WTF::Vector.1865", %"class.WTF::Vector.1865", %"class.WTF::HashMap.1875", %"class.blink::NGUnpositionedListMarker", %"class.WTF::Vector.2006", %"class.WTF::Vector.2011", %class.scoped_refptr.2016, %class.scoped_refptr.1799, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"class.blink::NGFragmentBuilder.base" = type <{ %class.scoped_refptr, %"class.blink::WritingDirectionMode", [2 x i8], i32, %"struct.blink::LogicalSize", %"class.blink::LayoutObject"*, %class.scoped_refptr.1631, i8, i8 }>
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2176 }
%class.scoped_refptr.2176 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2177", %"class.WTF::Vector.630", %"class.WTF::Vector.2179", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2177" = type { %"class.base::RefCounted.2178" }
%"class.base::RefCounted.2178" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2179" = type { %"class.WTF::VectorBuffer.2180" }
%"class.WTF::VectorBuffer.2180" = type { %"class.WTF::VectorBufferBase.2181" }
%"class.WTF::VectorBufferBase.2181" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2182 }
%union.anon.2182 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2167" }
%"class.blink::Member.2167" = type { %"class.blink::MemberBase.2168" }
%"class.blink::MemberBase.2168" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2169" }
%"class.blink::Member.2169" = type { %"class.blink::MemberBase.2170" }
%"class.blink::MemberBase.2170" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2190 }
%class.scoped_refptr.2190 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2200" }
%"class.blink::Member.2200" = type { %"class.blink::MemberBase.2201" }
%"class.blink::MemberBase.2201" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2196" }
%"class.blink::MemberBase.2196" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2197" }
%"class.blink::MemberBase.2197" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2198" }
%"class.blink::MemberBase.2198" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2199" }
%"class.blink::MemberBase.2199" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2191", %"class.WTF::Vector.2191" }
%"class.WTF::Vector.2191" = type { %"class.WTF::VectorBuffer.2192" }
%"class.WTF::VectorBuffer.2192" = type { %"class.WTF::VectorBufferBase.2193" }
%"class.WTF::VectorBufferBase.2193" = type { %class.scoped_refptr.2190*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2171" }
%"class.WTF::Vector.2171" = type { %"class.WTF::VectorBuffer.2172" }
%"class.WTF::VectorBuffer.2172" = type { %"class.WTF::VectorBufferBase.2173" }
%"class.WTF::VectorBufferBase.2173" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1644", %"class.absl::optional.1644", %"class.absl::optional.1644" }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2186" }
%"class.WTF::VectorBuffer.2186" = type { %"class.WTF::VectorBufferBase.2187", [32 x i8] }
%"class.WTF::VectorBufferBase.2187" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.1631 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1637, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%union.anon.1637 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1638 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1638 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1672 }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1734" }
%"class.std::__1::unique_ptr.1734" = type { %"class.std::__1::__compressed_pair.1735" }
%"class.std::__1::__compressed_pair.1735" = type { %"struct.std::__1::__compressed_pair_elem.1736" }
%"struct.std::__1::__compressed_pair_elem.1736" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1737, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1754" }
%class.scoped_refptr.1737 = type { %"class.base::RefCountedData.1738"* }
%"class.base::RefCountedData.1738" = type { %"class.base::RefCountedThreadSafe.1739", %"class.WTF::Vector.1740" }
%"class.base::RefCountedThreadSafe.1739" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1740" = type { %"class.WTF::VectorBuffer.1741" }
%"class.WTF::VectorBuffer.1741" = type { %"class.WTF::VectorBufferBase.1742" }
%"class.WTF::VectorBufferBase.1742" = type { %class.scoped_refptr.1743*, i32, i32 }
%class.scoped_refptr.1743 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1744", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1746" }
%"class.WTF::RefCounted.1744" = type { %"class.base::RefCounted.1745" }
%"class.base::RefCounted.1745" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1746" = type { %"class.std::__1::__compressed_pair.1747" }
%"class.std::__1::__compressed_pair.1747" = type { %"struct.std::__1::__compressed_pair_elem.1748" }
%"struct.std::__1::__compressed_pair_elem.1748" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.std::__1::unique_ptr.1754" = type { %"class.std::__1::__compressed_pair.1755" }
%"class.std::__1::__compressed_pair.1755" = type { %"struct.std::__1::__compressed_pair_elem.1756" }
%"struct.std::__1::__compressed_pair_elem.1756" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1757", %"class.WTF::Vector.1770", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759", [320 x i8] }
%"class.WTF::VectorBufferBase.1759" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1760", %"class.WTF::Vector.1760", %class.scoped_refptr.1765, i8, [7 x i8] }>
%"class.WTF::Vector.1760" = type { %"class.WTF::VectorBuffer.1761" }
%"class.WTF::VectorBuffer.1761" = type { %"class.WTF::VectorBufferBase.1762", [8 x i8] }
%"class.WTF::VectorBufferBase.1762" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1765 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1766", %"class.WTF::Vector.1740", %"class.WTF::Vector.1740" }
%"class.WTF::RefCounted.1766" = type { %"class.base::RefCounted.1767" }
%"class.base::RefCounted.1767" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1770" = type { %"class.WTF::VectorBuffer.1771" }
%"class.WTF::VectorBuffer.1771" = type { %"class.WTF::VectorBufferBase.1772", [288 x i8] }
%"class.WTF::VectorBufferBase.1772" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1760", %"class.WTF::Vector.1760" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1773 }
%class.scoped_refptr.1773 = type { %"class.blink::NGShapeExclusions"* }
%"class.WTF::Vector.1865" = type { %"class.WTF::VectorBuffer.1866" }
%"class.WTF::VectorBuffer.1866" = type { %"class.WTF::VectorBufferBase.1867" }
%"class.WTF::VectorBufferBase.1867" = type { %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGLogicalOutOfFlowPositionedNode" = type <{ %"class.blink::LayoutBox"*, %"struct.blink::NGLogicalStaticPosition", %"class.blink::LayoutInline"*, i8, [3 x i8], %"class.blink::LayoutUnit", %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock", %"class.absl::optional.1868", [4 x i8] }>
%"struct.blink::NGLogicalStaticPosition" = type { %"struct.blink::LogicalOffset", i32, i32 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1792 }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%union.anon.1792 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"struct.blink::NGContainingBlock" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset", %class.scoped_refptr.1782 }
%class.scoped_refptr.1782 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1783", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1785, %"class.std::__1::unique_ptr.1786" }
%"class.WTF::RefCounted.1783" = type { %"class.base::RefCounted.1784" }
%"class.base::RefCounted.1784" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1785 = type { %"class.blink::NGBreakToken"* }
%"class.std::__1::unique_ptr.1786" = type { %"class.std::__1::__compressed_pair.1787" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"class.WTF::Vector.1789"* }
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.1791" }
%"class.WTF::VectorBufferBase.1791" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.WTF::HashMap.1875" = type { %"class.WTF::HashTable.1876" }
%"class.WTF::HashTable.1876" = type <{ %"struct.WTF::KeyValuePair.1879"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1879" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGMulticolWithPendingOOFs" }
%"struct.blink::NGMulticolWithPendingOOFs" = type { %"struct.blink::LogicalOffset", %"struct.blink::NGContainingBlock" }
%"class.blink::NGUnpositionedListMarker" = type { %"class.blink::LayoutNGOutsideListMarker"* }
%"class.blink::LayoutNGOutsideListMarker" = type <{ %"class.blink::LayoutNGBlockFlowMixin", %"class.blink::ListMarker", [4 x i8] }>
%"class.blink::LayoutNGBlockFlowMixin" = type { %"class.blink::LayoutNGMixin", %"class.std::__1::unique_ptr.1931" }
%"class.blink::LayoutNGMixin" = type { %"class.blink::LayoutBlockFlow" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1880", %"class.std::__1::unique_ptr.1900" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1634, %"class.WTF::Vector.1822", %"class.std::__1::unique_ptr.1827", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1848, %"class.blink::Persistent.1849" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1634 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1635", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1782, %union.anon.1798, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1635" = type { %"class.base::RefCounted.1636" }
%"class.base::RefCounted.1636" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1798 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1639", %class.scoped_refptr.1799, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1800, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1672, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1801", %"class.absl::optional.1817" }
%union.anon.1800 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1801" = type { %"class.std::__1::__compressed_pair.1802" }
%"class.std::__1::__compressed_pair.1802" = type { %"struct.std::__1::__compressed_pair_elem.1803" }
%"struct.std::__1::__compressed_pair_elem.1803" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1804", %"class.WTF::Vector.1809", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1804" = type { %"class.WTF::VectorBuffer.1805" }
%"class.WTF::VectorBuffer.1805" = type { %"class.WTF::VectorBufferBase.1806" }
%"class.WTF::VectorBufferBase.1806" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1809" = type { %"class.WTF::VectorBuffer.1810" }
%"class.WTF::VectorBuffer.1810" = type { %"class.WTF::VectorBufferBase.1811" }
%"class.WTF::VectorBufferBase.1811" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1822" = type { %"class.WTF::VectorBuffer.1823" }
%"class.WTF::VectorBuffer.1823" = type { %"class.WTF::VectorBufferBase.1824", [8 x i8] }
%"class.WTF::VectorBufferBase.1824" = type { %class.scoped_refptr.1634*, i32, i32 }
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1830", %"class.absl::optional.1835", %"class.absl::optional.1840" }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, %union.anon.1834 }
%union.anon.1834 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1835" = type { %"class.absl::optional_internal::optional_data.1836" }
%"class.absl::optional_internal::optional_data.1836" = type { %"class.absl::optional_internal::optional_data_base.1837" }
%"class.absl::optional_internal::optional_data_base.1837" = type { %"class.absl::optional_internal::optional_data_dtor_base.1838" }
%"class.absl::optional_internal::optional_data_dtor_base.1838" = type { i8, [3 x i8], %union.anon.1839 }
%union.anon.1839 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1840" = type { %"class.absl::optional_internal::optional_data.1841" }
%"class.absl::optional_internal::optional_data.1841" = type { %"class.absl::optional_internal::optional_data_base.1842" }
%"class.absl::optional_internal::optional_data_base.1842" = type { %"class.absl::optional_internal::optional_data_dtor_base.1843" }
%"class.absl::optional_internal::optional_data_dtor_base.1843" = type { i8, %union.anon.1844 }
%union.anon.1844 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1848 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1849" = type { %"class.blink::PersistentBase.1850" }
%"class.blink::PersistentBase.1850" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1853", %"struct.blink::PhysicalRect", %"class.blink::Member.1863" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1853" = type { %"class.std::__1::__compressed_pair.1854" }
%"class.std::__1::__compressed_pair.1854" = type { %"struct.std::__1::__compressed_pair_elem.1855" }
%"struct.std::__1::__compressed_pair_elem.1855" = type { %"class.WTF::HashSet.1856"* }
%"class.WTF::HashSet.1856" = type { %"class.WTF::HashTable.1857" }
%"class.WTF::HashTable.1857" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1863" = type { %"class.blink::MemberBase.1864" }
%"class.blink::MemberBase.1864" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::Persistent.1880" = type { %"class.blink::PersistentBase.1881" }
%"class.blink::PersistentBase.1881" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1884", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1884" = type { %"class.std::__1::__compressed_pair.1885" }
%"class.std::__1::__compressed_pair.1885" = type { %"struct.std::__1::__compressed_pair_elem.1886" }
%"struct.std::__1::__compressed_pair_elem.1886" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1887", %"class.WTF::HashMap.1892", %"class.WTF::String" }
%"class.WTF::Vector.1887" = type { %"class.WTF::VectorBuffer.1888" }
%"class.WTF::VectorBuffer.1888" = type { %"class.WTF::VectorBufferBase.1889" }
%"class.WTF::VectorBufferBase.1889" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1892" = type { %"class.WTF::HashTable.1893" }
%"class.WTF::HashTable.1893" = type <{ %"struct.WTF::KeyValuePair.1896"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1896" = type opaque
%"class.std::__1::unique_ptr.1900" = type { %"class.std::__1::__compressed_pair.1901" }
%"class.std::__1::__compressed_pair.1901" = type { %"struct.std::__1::__compressed_pair_elem.1902" }
%"struct.std::__1::__compressed_pair_elem.1902" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1903", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1903" = type { %"class.WTF::HashTable.1906", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1906" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1909", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1909" = type { %"class.std::__1::__compressed_pair.1910" }
%"class.std::__1::__compressed_pair.1910" = type { %"struct.std::__1::__compressed_pair_elem.1911" }
%"struct.std::__1::__compressed_pair_elem.1911" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1912, %"class.std::__1::unique_ptr.1913", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1912 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2113", i16, %class.scoped_refptr.1912 }
%"class.WTF::ThreadSafeRefCounted.2113" = type { %"class.base::RefCountedThreadSafe.2114" }
%"class.base::RefCountedThreadSafe.2114" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1913" = type { %"class.std::__1::__compressed_pair.1914" }
%"class.std::__1::__compressed_pair.1914" = type { %"struct.std::__1::__compressed_pair_elem.1915" }
%"struct.std::__1::__compressed_pair_elem.1915" = type { %"class.WTF::Vector.1916"* }
%"class.WTF::Vector.1916" = type { %"class.WTF::VectorBuffer.1917" }
%"class.WTF::VectorBuffer.1917" = type { %"class.WTF::VectorBufferBase.1918" }
%"class.WTF::VectorBufferBase.1918" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1927, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1927 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1931" = type { %"class.std::__1::__compressed_pair.1932" }
%"class.std::__1::__compressed_pair.1932" = type { %"struct.std::__1::__compressed_pair_elem.1933" }
%"struct.std::__1::__compressed_pair_elem.1933" = type { %"struct.blink::NGInlineNodeData"* }
%"struct.blink::NGInlineNodeData" = type <{ %"struct.blink::NGInlineItemsData", %"class.std::__1::unique_ptr.1975", %"class.std::__1::unique_ptr.1981", i8, [7 x i8] }>
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.1934", %"class.std::__1::unique_ptr.1960", %"class.std::__1::unique_ptr.1884" }
%"class.WTF::Vector.1934" = type { %"class.WTF::VectorBuffer.1935" }
%"class.WTF::VectorBuffer.1935" = type { %"class.WTF::VectorBufferBase.1936" }
%"class.WTF::VectorBufferBase.1936" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.1937, %"class.blink::LayoutObject"*, i32, i32 }
%class.scoped_refptr.1937 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.1938", float, %"class.blink::FloatRect", %"class.WTF::Vector.1940", %class.scoped_refptr.1946, %"class.std::__1::unique_ptr.1947", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.1938" = type { %"class.base::RefCounted.1939" }
%"class.base::RefCounted.1939" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1940" = type { %"class.WTF::VectorBuffer.1941" }
%"class.WTF::VectorBuffer.1941" = type { %"class.WTF::VectorBufferBase.1942" }
%"class.WTF::VectorBufferBase.1942" = type { %class.scoped_refptr.1943*, i32, i32 }
%class.scoped_refptr.1943 = type opaque
%class.scoped_refptr.1946 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.1947" = type { %"class.std::__1::__compressed_pair.1948" }
%"class.std::__1::__compressed_pair.1948" = type { %"struct.std::__1::__compressed_pair_elem.1949" }
%"struct.std::__1::__compressed_pair_elem.1949" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.1950", i32, float }
%"class.WTF::Vector.1950" = type { %"class.WTF::VectorBuffer.1951" }
%"class.WTF::VectorBuffer.1951" = type { %"class.WTF::VectorBufferBase.1952" }
%"class.WTF::VectorBufferBase.1952" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.std::__1::unique_ptr.1960" = type { %"class.std::__1::__compressed_pair.1961" }
%"class.std::__1::__compressed_pair.1961" = type { %"struct.std::__1::__compressed_pair_elem.1962" }
%"struct.std::__1::__compressed_pair_elem.1962" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.1963", %"class.WTF::Vector.1968" }
%"class.WTF::Vector.1963" = type { %"class.WTF::VectorBuffer.1964" }
%"class.WTF::VectorBuffer.1964" = type { %"class.WTF::VectorBufferBase.1965" }
%"class.WTF::VectorBufferBase.1965" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.WTF::Vector.1968" = type { %"class.WTF::VectorBuffer.1969" }
%"class.WTF::VectorBuffer.1969" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.std::__1::unique_ptr.1975" = type { %"class.std::__1::__compressed_pair.1976" }
%"class.std::__1::__compressed_pair.1976" = type { %"struct.std::__1::__compressed_pair_elem.1977" }
%"struct.std::__1::__compressed_pair_elem.1977" = type { %"struct.blink::NGInlineItemsData"* }
%"class.std::__1::unique_ptr.1981" = type { %"class.std::__1::__compressed_pair.1982" }
%"class.std::__1::__compressed_pair.1982" = type { %"struct.std::__1::__compressed_pair_elem.1983" }
%"struct.std::__1::__compressed_pair_elem.1983" = type { %"struct.blink::SvgInlineNodeData"* }
%"struct.blink::SvgInlineNodeData" = type { %"class.WTF::Vector.1984", %"class.WTF::Vector.1990", %"class.WTF::Vector.1990", %"class.WTF::HashMap.1995" }
%"class.WTF::Vector.1984" = type { %"class.WTF::VectorBuffer.1985" }
%"class.WTF::VectorBuffer.1985" = type { %"class.WTF::VectorBufferBase.1986" }
%"class.WTF::VectorBufferBase.1986" = type { %"struct.std::__1::pair.1987"*, i32, i32 }
%"struct.std::__1::pair.1987" = type opaque
%"class.WTF::Vector.1990" = type { %"class.WTF::VectorBuffer.1991" }
%"class.WTF::VectorBuffer.1991" = type { %"class.WTF::VectorBufferBase.1992" }
%"class.WTF::VectorBufferBase.1992" = type { %"struct.blink::SvgTextContentRange"*, i32, i32 }
%"struct.blink::SvgTextContentRange" = type { %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::HashMap.1995" = type { %"class.WTF::HashTable.1996" }
%"class.WTF::HashTable.1996" = type <{ %"struct.WTF::KeyValuePair.1999"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1999" = type opaque
%"class.blink::ListMarker" = type { i8, [3 x i8] }
%"class.WTF::Vector.2006" = type { %"class.WTF::VectorBuffer.2007" }
%"class.WTF::VectorBuffer.2007" = type { %"class.WTF::VectorBufferBase.2008", [64 x i8] }
%"class.WTF::VectorBufferBase.2008" = type { %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, i32, i32 }
%"struct.blink::NGContainerFragmentBuilder::ChildWithOffset" = type { %"struct.blink::LogicalOffset", %class.scoped_refptr.1782 }
%"class.WTF::Vector.2011" = type { %"class.WTF::VectorBuffer.2012" }
%"class.WTF::VectorBuffer.2012" = type { %"class.WTF::VectorBufferBase.2013" }
%"class.WTF::VectorBufferBase.2013" = type { %class.scoped_refptr.1785*, i32, i32 }
%class.scoped_refptr.2016 = type { %"class.blink::NGInlineBreakToken"* }
%"class.blink::NGInlineBreakToken" = type { %"class.blink::NGBreakToken.base", %class.scoped_refptr, i32, i32 }
%"class.blink::NGBreakToken.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::LayoutBox"*, i16 }>
%class.scoped_refptr.1799 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.2115", [4 x i8], %union.anon.2117, %class.scoped_refptr.1799, i32, [4 x i8] }>
%"class.WTF::RefCounted.2115" = type { %"class.base::RefCounted.2116" }
%"class.base::RefCounted.2116" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.2117 = type { %"class.blink::LayoutBox"* }
%"struct.blink::NGFragmentGeometry" = type { %"struct.blink::LogicalSize", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1868" = type { %"class.absl::optional_internal::optional_data.1869" }
%"class.absl::optional_internal::optional_data.1869" = type { %"class.absl::optional_internal::optional_data_base.1870" }
%"class.absl::optional_internal::optional_data_base.1870" = type { %"class.absl::optional_internal::optional_data_dtor_base.1871" }
%"class.absl::optional_internal::optional_data_dtor_base.1871" = type { i8, %union.anon.1872 }
%union.anon.1872 = type { %"struct.blink::LogicalRect" }
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"class.blink::NGFragmentItemsBuilder" = type <{ %"class.WTF::Vector.2017", %"class.WTF::String", %"class.WTF::String", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGPhysicalFragment"*, %"class.WTF::HashMap.2041", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGInlineNode", %"class.blink::WritingDirectionMode", i8, i8, i8, [3 x i8] }>
%"class.WTF::Vector.2017" = type { %"class.WTF::VectorBuffer.2018" }
%"class.WTF::VectorBuffer.2018" = type { %"class.WTF::VectorBufferBase.2019", [9216 x i8] }
%"class.WTF::VectorBufferBase.2019" = type { %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, i32, i32 }
%"struct.blink::NGFragmentItemsBuilder::ItemWithOffset" = type { %"class.blink::NGFragmentItem", %"struct.blink::LogicalOffset" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.2020, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.2020 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.2021, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.2021 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.2022", %class.scoped_refptr.1946, i32, i32, i32, i32, float, i32, [0 x %struct.anon.2024] }
%"class.WTF::RefCounted.2022" = type { %"class.base::RefCounted.2023" }
%"class.base::RefCounted.2023" = type { %"class.base::subtle::RefCountedBase" }
%struct.anon.2024 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.2033 }
%union.anon.2033 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.WTF::HashMap.2041" = type { %"class.WTF::HashTable.2042" }
%"class.WTF::HashTable.2042" = type <{ %"struct.WTF::KeyValuePair.2045"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2045" = type opaque
%"class.blink::NGLogicalLineItems" = type { %"class.WTF::Vector.2036" }
%"class.WTF::Vector.2036" = type { %"class.WTF::VectorBuffer.2037" }
%"class.WTF::VectorBuffer.2037" = type { %"class.WTF::VectorBufferBase.2038", [1920 x i8] }
%"class.WTF::VectorBufferBase.2038" = type { %"struct.blink::NGLogicalLineItem"*, i32, i32 }
%"struct.blink::NGLogicalLineItem" = type <{ %class.scoped_refptr.1634, %"class.blink::NGInlineItem"*, %class.scoped_refptr.2021, %"struct.blink::NGTextOffset", %"class.WTF::String", %"class.blink::LayoutObject"*, i32, [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"struct.blink::LogicalRect", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::NGInlineNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::LayoutUnit" = type { i32 }
%"class.absl::optional.2046" = type { %"class.absl::optional_internal::optional_data.2047" }
%"class.absl::optional_internal::optional_data.2047" = type { %"class.absl::optional_internal::optional_data_base.2048" }
%"class.absl::optional_internal::optional_data_base.2048" = type { %"class.absl::optional_internal::optional_data_dtor_base.2049" }
%"class.absl::optional_internal::optional_data_dtor_base.2049" = type { i8, %union.anon.2050 }
%union.anon.2050 = type { i32 }
%"class.absl::optional.1639" = type { %"class.absl::optional_internal::optional_data.1640" }
%"class.absl::optional_internal::optional_data.1640" = type { %"class.absl::optional_internal::optional_data_base.1641" }
%"class.absl::optional_internal::optional_data_base.1641" = type { %"class.absl::optional_internal::optional_data_dtor_base.1642" }
%"class.absl::optional_internal::optional_data_dtor_base.1642" = type { i8, %union.anon.1643 }
%union.anon.1643 = type { %"class.blink::LayoutUnit" }
%"class.absl::optional.2051" = type { %"class.absl::optional_internal::optional_data.2052" }
%"class.absl::optional_internal::optional_data.2052" = type { %"class.absl::optional_internal::optional_data_base.2053" }
%"class.absl::optional_internal::optional_data_base.2053" = type { %"class.absl::optional_internal::optional_data_dtor_base.2054" }
%"class.absl::optional_internal::optional_data_dtor_base.2054" = type { i8, %union.anon.2055 }
%union.anon.2055 = type { %"struct.blink::PhysicalRect" }
%"class.absl::optional.2056" = type { %"class.absl::optional_internal::optional_data.2057" }
%"class.absl::optional_internal::optional_data.2057" = type { %"class.absl::optional_internal::optional_data_base.2058" }
%"class.absl::optional_internal::optional_data_base.2058" = type { %"class.absl::optional_internal::optional_data_dtor_base.2059" }
%"class.absl::optional_internal::optional_data_dtor_base.2059" = type { i8, %union.anon.2060 }
%union.anon.2060 = type { %"class.WTF::Vector.2061" }
%"class.WTF::Vector.2061" = type { %"class.WTF::VectorBuffer.2062" }
%"class.WTF::VectorBuffer.2062" = type { %"class.WTF::VectorBufferBase.2063" }
%"class.WTF::VectorBufferBase.2063" = type { %"struct.blink::NGTableFragmentData::ColumnGeometry"*, i32, i32 }
%"struct.blink::NGTableFragmentData::ColumnGeometry" = type { i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGLayoutInputNode" }
%class.scoped_refptr.2066 = type { %"class.blink::NGTableBorders"* }
%"class.blink::NGTableBorders" = type <{ %"class.WTF::RefCounted.2067", [4 x i8], %"class.WTF::Vector.2069", %"class.WTF::Vector.2074", i32, %"class.absl::optional.2079", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.2067" = type { %"class.base::RefCounted.2068" }
%"class.base::RefCounted.2068" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2069" = type { %"class.WTF::VectorBuffer.2070" }
%"class.WTF::VectorBuffer.2070" = type { %"class.WTF::VectorBufferBase.2071" }
%"class.WTF::VectorBufferBase.2071" = type { %"struct.blink::NGTableBorders::Edge"*, i32, i32 }
%"struct.blink::NGTableBorders::Edge" = type { %class.scoped_refptr, i32, i32 }
%"class.WTF::Vector.2074" = type { %"class.WTF::VectorBuffer.2075" }
%"class.WTF::VectorBuffer.2075" = type { %"class.WTF::VectorBufferBase.2076" }
%"class.WTF::VectorBufferBase.2076" = type { %"struct.blink::NGTableBorders::Section"*, i32, i32 }
%"struct.blink::NGTableBorders::Section" = type { i32, i32 }
%"class.absl::optional.2079" = type { %"class.absl::optional_internal::optional_data.2080" }
%"class.absl::optional_internal::optional_data.2080" = type { %"class.absl::optional_internal::optional_data_base.2081" }
%"class.absl::optional_internal::optional_data_base.2081" = type { %"class.absl::optional_internal::optional_data_dtor_base.2082" }
%"class.absl::optional_internal::optional_data_dtor_base.2082" = type { i8, %union.anon.2083 }
%union.anon.2083 = type { %"struct.blink::NGBoxStrut" }
%"class.std::__1::unique_ptr.2084" = type { %"class.std::__1::__compressed_pair.2085" }
%"class.std::__1::__compressed_pair.2085" = type { %"struct.std::__1::__compressed_pair_elem.2086" }
%"struct.std::__1::__compressed_pair_elem.2086" = type { %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* }
%"struct.blink::NGTableFragmentData::CollapsedBordersGeometry" = type { %"class.WTF::Vector.2087", %"class.WTF::Vector.2087" }
%"class.WTF::Vector.2087" = type { %"class.WTF::VectorBuffer.2088" }
%"class.WTF::VectorBuffer.2088" = type { %"class.WTF::VectorBufferBase.2089" }
%"class.WTF::VectorBufferBase.2089" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"class.absl::optional.2095" = type { %"class.absl::optional_internal::optional_data.2096" }
%"class.absl::optional_internal::optional_data.2096" = type { %"class.absl::optional_internal::optional_data_base.2097" }
%"class.absl::optional_internal::optional_data_base.2097" = type { %"class.absl::optional_internal::optional_data_dtor_base.2098" }
%"class.absl::optional_internal::optional_data_dtor_base.2098" = type { i8, %union.anon.2099 }
%union.anon.2099 = type { i32 }
%"class.std::__1::unique_ptr.2100" = type { %"class.std::__1::__compressed_pair.2101" }
%"class.std::__1::__compressed_pair.2101" = type { %"struct.std::__1::__compressed_pair_elem.2102" }
%"struct.std::__1::__compressed_pair_elem.2102" = type { %"struct.blink::NGGridData"* }
%"struct.blink::LogicalBoxSides" = type { i8, i8, i8, i8 }
%class.scoped_refptr.1672 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1673", [4 x i8], %"class.std::__1::unique_ptr.1675", i64, %"class.WTF::Vector.1679", %"class.WTF::Vector.1684", %"class.WTF::Vector.1690", %"class.WTF::Vector.1708", %class.scoped_refptr.1546, %"class.WTF::HashMap.1714", %"class.WTF::Vector.1719", %"class.WTF::Vector.1679", %"class.WTF::Vector.1724", %"class.WTF::HashMap.1729", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1673" = type { %"class.base::RefCountedThreadSafe.1674" }
%"class.base::RefCountedThreadSafe.1674" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1675" = type { %"class.std::__1::__compressed_pair.1676" }
%"class.std::__1::__compressed_pair.1676" = type { %"struct.std::__1::__compressed_pair_elem.1677" }
%"struct.std::__1::__compressed_pair_elem.1677" = type { i8* }
%"class.WTF::Vector.1684" = type { %"class.WTF::VectorBuffer.1685" }
%"class.WTF::VectorBuffer.1685" = type { %"class.WTF::VectorBufferBase.1686", [8 x i8] }
%"class.WTF::VectorBufferBase.1686" = type { %class.scoped_refptr.1687*, i32, i32 }
%class.scoped_refptr.1687 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1690" = type { %"class.WTF::VectorBuffer.1691" }
%"class.WTF::VectorBuffer.1691" = type { %"class.WTF::VectorBufferBase.1692" }
%"class.WTF::VectorBufferBase.1692" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1694", %"class.std::__1::unique_ptr.1700" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1693 }
%class.scoped_refptr.1693 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1700" = type { %"class.std::__1::__compressed_pair.1701" }
%"class.std::__1::__compressed_pair.1701" = type { %"struct.std::__1::__compressed_pair_elem.1702" }
%"struct.std::__1::__compressed_pair_elem.1702" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1708" = type { %"class.WTF::VectorBuffer.1709" }
%"class.WTF::VectorBuffer.1709" = type { %"class.WTF::VectorBufferBase.1710" }
%"class.WTF::VectorBufferBase.1710" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1711", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1711" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1714" = type { %"class.WTF::HashTable.1715" }
%"class.WTF::HashTable.1715" = type <{ %"struct.WTF::KeyValuePair.1718"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1718" = type opaque
%"class.WTF::Vector.1719" = type { %"class.WTF::VectorBuffer.1720" }
%"class.WTF::VectorBuffer.1720" = type { %"class.WTF::VectorBufferBase.1721" }
%"class.WTF::VectorBufferBase.1721" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1679" = type { %"class.WTF::VectorBuffer.1680" }
%"class.WTF::VectorBuffer.1680" = type { %"class.WTF::VectorBufferBase.1681", [16 x i8] }
%"class.WTF::VectorBufferBase.1681" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1724" = type { %"class.WTF::VectorBuffer.1725" }
%"class.WTF::VectorBuffer.1725" = type { %"class.WTF::VectorBufferBase.1726" }
%"class.WTF::VectorBufferBase.1726" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1729" = type { %"class.WTF::HashTable.1730" }
%"class.WTF::HashTable.1730" = type <{ %"struct.WTF::KeyValuePair.1733"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1733" = type { i8**, %"class.std::__1::unique_ptr.2202" }
%"class.std::__1::unique_ptr.2202" = type { %"class.std::__1::__compressed_pair.2203" }
%"class.std::__1::__compressed_pair.2203" = type { %"struct.std::__1::__compressed_pair_elem.2204" }
%"struct.std::__1::__compressed_pair_elem.2204" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.absl::optional.1644" = type { %"class.absl::optional_internal::optional_data.1645" }
%"class.absl::optional_internal::optional_data.1645" = type { %"class.absl::optional_internal::optional_data_base.1646" }
%"class.absl::optional_internal::optional_data_base.1646" = type { %"class.absl::optional_internal::optional_data_dtor_base.1647" }
%"class.absl::optional_internal::optional_data_dtor_base.1647" = type { i8, %union.anon.1648 }
%union.anon.1648 = type { i32 }
%"class.std::__1::unique_ptr.2106" = type { %"class.std::__1::__compressed_pair.2107" }
%"class.std::__1::__compressed_pair.2107" = type { %"struct.std::__1::__compressed_pair_elem.2108" }
%"struct.std::__1::__compressed_pair_elem.2108" = type { %"struct.blink::NGMathMLPaintInfo"* }
%"struct.blink::NGMathMLPaintInfo" = type <{ i16, [6 x i8], %class.scoped_refptr.2021, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBoxStrut", %"class.absl::optional.1639", [4 x i8] }>
%"class.absl::optional.1817" = type { %"class.absl::optional_internal::optional_data.1818" }
%"class.absl::optional_internal::optional_data.1818" = type { %"class.absl::optional_internal::optional_data_base.1819" }
%"class.absl::optional_internal::optional_data_base.1819" = type { %"class.absl::optional_internal::optional_data_dtor_base.1820" }
%"class.absl::optional_internal::optional_data_dtor_base.1820" = type { i8, %union.anon.1821 }
%union.anon.1821 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.2112 = type { %"class.blink::NGBlockBreakToken"* }
%"class.blink::NGBlockBreakToken" = type { %"class.blink::NGBreakToken.base", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, [0 x %"class.blink::NGBreakToken"*] }
%class.scoped_refptr.2124 = type { %"class.blink::NGBlockBreakToken"* }
%"class.absl::optional.2125" = type { %"class.absl::optional_internal::optional_data.2126" }
%"class.absl::optional_internal::optional_data.2126" = type { %"class.absl::optional_internal::optional_data_base.2127" }
%"class.absl::optional_internal::optional_data_base.2127" = type { %"class.absl::optional_internal::optional_data_dtor_base.2128" }
%"class.absl::optional_internal::optional_data_dtor_base.2128" = type { i8, %union.anon.2129 }
%union.anon.2129 = type { %"struct.blink::LogicalOffset" }
%"class.blink::NGPhysicalLineBoxFragment" = type { %"class.blink::NGPhysicalFragment", %"struct.blink::FontHeight" }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::NGContainerFragmentBuilder" = type <{ %"class.blink::NGFragmentBuilder.base", [6 x i8], %"class.blink::NGLayoutInputNode", %"class.blink::NGConstraintSpace"*, %"class.blink::LayoutUnit", %"class.absl::optional.1639", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGExclusionSpace", %"class.WTF::Vector.1865", %"class.WTF::Vector.1865", %"class.WTF::Vector.1865", %"class.WTF::HashMap.1875", %"class.blink::NGUnpositionedListMarker", %"class.WTF::Vector.2006", %"class.WTF::Vector.2011", %class.scoped_refptr.2016, %class.scoped_refptr.1799, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2221", %"class.blink::Member.2223", %"class.blink::Member.2225", %"class.blink::Member.2244", %"class.blink::Member.2246" }
%"class.blink::Member.2221" = type { %"class.blink::MemberBase.2222" }
%"class.blink::MemberBase.2222" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.2223" = type { %"class.blink::MemberBase.2224" }
%"class.blink::MemberBase.2224" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2225" = type { %"class.blink::MemberBase.2226" }
%"class.blink::MemberBase.2226" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2229", %"class.blink::HeapHashSet.2238" }
%"class.blink::HeapVector.2229" = type { %"class.WTF::Vector.2232" }
%"class.WTF::Vector.2232" = type { %"class.WTF::VectorBuffer.2233" }
%"class.WTF::VectorBuffer.2233" = type { %"class.WTF::VectorBufferBase.2234" }
%"class.WTF::VectorBufferBase.2234" = type { %"class.blink::Member.2235"*, i32, i32 }
%"class.blink::Member.2235" = type { %"class.blink::MemberBase.2236" }
%"class.blink::MemberBase.2236" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2238" = type { %"class.WTF::HashSet.2241" }
%"class.WTF::HashSet.2241" = type { %"class.WTF::HashTable.2242" }
%"class.WTF::HashTable.2242" = type <{ %"class.blink::Member.2235"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2244" = type { %"class.blink::MemberBase.2245" }
%"class.blink::MemberBase.2245" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2246" = type { %"class.blink::MemberBase.2247" }
%"class.blink::MemberBase.2247" = type { %"class.blink::HeapHashSet.2248"* }
%"class.blink::HeapHashSet.2248" = type opaque
%"class.base::CheckedContiguousIterator" = type { %"struct.blink::NGLink"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::HashMap.2132" = type { %"class.WTF::HashTable.2133" }
%"class.WTF::HashTable.2133" = type <{ %"struct.WTF::KeyValuePair.2136"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2136" = type <{ %"class.blink::LayoutObject"*, %"class.absl::optional.2137", [4 x i8] }>
%"class.absl::optional.2137" = type { %"class.absl::optional_internal::optional_data.2138" }
%"class.absl::optional_internal::optional_data.2138" = type { %"class.absl::optional_internal::optional_data_base.2139" }
%"class.absl::optional_internal::optional_data_base.2139" = type { %"class.absl::optional_internal::optional_data_dtor_base.2140" }
%"class.absl::optional_internal::optional_data_dtor_base.2140" = type { i8, %union.anon.2141 }
%union.anon.2141 = type { %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry" }
%"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.std::__1::pair.2147" = type { %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"* }
%"class.base::CheckedContiguousIterator.2279" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.WTF::HashMap.2142" = type { %"class.WTF::HashTable.2143" }
%"class.WTF::HashTable.2143" = type <{ %"struct.WTF::KeyValuePair.2146"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2146" = type { %"class.blink::LayoutObject"*, %"struct.std::__1::pair.2147" }

$_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEppEv = comdat any

$_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_ = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink12NGBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_INS2_17NGBlockBreakTokenEEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink12NGBreakTokenEEEEmm = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink12NGBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink12NGBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_IKNS2_18NGInlineBreakTokenEEEEvOT_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISK_SF_SL_EERS4_SB_EENS_18HashTableAddResultISM_SC_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6ExpandEPSC_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE8RehashToEPSC_jSN_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEppEv = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEC2EPS3_S5_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEE15CheckComparableERKS4_ = comdat any

@.str.2 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink12NGBreakTokenEEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::NGBreakToken>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv = private unnamed_addr constant [87 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGLogicalOutOfFlowPositionedNode]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectENSt3__14pairIPKNS2_25NGPhysicalLineBoxFragmentESA_EEEEEEPKcv = private unnamed_addr constant [195 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::LayoutObject *, std::__1::pair<const blink::NGPhysicalLineBoxFragment *, const blink::NGPhysicalLineBoxFragment *> >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NGBoxFragmentBuilder19AddBreakBeforeChildENS_17NGLayoutInputNodeEN4absl8optionalINS_13NGBreakAppealEEEb(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::LayoutBox"*, i64, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca { %"class.blink::LayoutBox"*, i64 }, align 8
  %7 = alloca %class.scoped_refptr.2124, align 8
  %8 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %6, i64 0, i32 0
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %8, align 8
  %9 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %6, i64 0, i32 1
  store i64 %2, i64* %9, align 8
  %10 = trunc i64 %3 to i8
  %11 = lshr i64 %3, 32
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i8 %10, 0
  %14 = trunc i64 %2 to i8
  br i1 %13, label %21, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 18
  store i32 %12, i32* %16, align 8
  %17 = add i32 %12, -1
  %18 = icmp ult i32 %17, 2
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 26
  store i8 1, i8* %20, align 4
  br label %21

21:                                               ; preds = %5, %15, %19
  br i1 %4, label %22, label %25

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 19
  store i8 1, i8* %23, align 1
  %24 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 31, i32 0
  store i32 2147483647, i32* %24, align 8
  br label %25

25:                                               ; preds = %22, %21
  %26 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 17
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %45

29:                                               ; preds = %25
  %30 = and i8 %14, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %41

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %34 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %33 to i96*
  %35 = load i96, i96* %34, align 4
  %36 = and i96 %35, 8388608
  %37 = icmp eq i96 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = and i96 %35, 113336795588871485128704
  %40 = icmp eq i96 %39, 75557863725914323419136
  br label %41

41:                                               ; preds = %29, %32, %38
  %42 = phi i1 [ true, %32 ], [ %40, %38 ], [ false, %29 ]
  %43 = xor i1 %42, true
  %44 = zext i1 %43 to i8
  store i8 %44, i8* %26, align 1
  br label %45

45:                                               ; preds = %25, %41
  %46 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 18
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp eq i8 %47, 0
  %49 = and i8 %14, 1
  br i1 %48, label %50, label %61

50:                                               ; preds = %45
  %51 = icmp eq i8 %49, 0
  br i1 %51, label %52, label %59

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = lshr i96 %55, 23
  %57 = trunc i96 %56 to i8
  %58 = and i8 %57, 1
  br label %59

59:                                               ; preds = %50, %52
  %60 = phi i8 [ 0, %50 ], [ %58, %52 ]
  store i8 %60, i8* %46, align 4
  br label %61

61:                                               ; preds = %45, %59
  %62 = icmp eq i8 %49, 0
  %63 = bitcast { %"class.blink::LayoutBox"*, i64 }* %6 to %"class.blink::NGInlineNode"*
  %64 = select i1 %62, %"class.blink::NGInlineNode"* null, %"class.blink::NGInlineNode"* %63
  br i1 %62, label %141, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 16
  %67 = getelementptr inbounds %class.scoped_refptr.2016, %class.scoped_refptr.2016* %66, i64 0, i32 0
  %68 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %67, align 8
  %69 = icmp eq %"class.blink::NGInlineBreakToken"* %68, null
  br i1 %69, label %70, label %209

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 49, i32 0
  %72 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %71, align 8
  %73 = icmp eq %"class.blink::NGBlockBreakToken"* %72, null
  br i1 %73, label %116, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %72, i64 0, i32 4
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %116, label %78

78:                                               ; preds = %74
  %79 = zext i32 %76 to i64
  %80 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %72, i64 0, i32 5, i64 %79
  %81 = getelementptr inbounds %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %80, i64 -1
  %82 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %81, align 8
  %83 = icmp eq %"class.blink::NGBreakToken"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %82, i64 0, i32 4
  %86 = load i16, i16* %85, align 8
  %87 = and i16 %86, 1
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %84, %78
  %90 = bitcast %class.scoped_refptr.2016* %66 to i64*
  store i64 0, i64* %90, align 8
  br label %116

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %82, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %92) #11
  %93 = ptrtoint %"class.blink::NGBreakToken"* %82 to i64
  %94 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %67, align 8
  %95 = bitcast %class.scoped_refptr.2016* %66 to i64*
  store i64 %93, i64* %95, align 8
  %96 = icmp eq %"class.blink::NGInlineBreakToken"* %94, null
  %97 = bitcast %"class.blink::NGBreakToken"* %82 to %"class.blink::NGInlineBreakToken"*
  br i1 %96, label %113, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %94, i64 0, i32 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %99, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %100) #11
  %101 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %99, i64 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %111

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %99, i64 -2
  %106 = bitcast %"class.base::RefCounted.1633"* %105 to %"class.blink::NGBreakToken"*
  %107 = bitcast %"class.base::RefCounted.1633"* %105 to void (%"class.blink::NGBreakToken"*)***
  %108 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %108, i64 1
  %110 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %109, align 8
  tail call void %110(%"class.blink::NGBreakToken"* nonnull %106) #11
  br label %111

111:                                              ; preds = %104, %98
  %112 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %67, align 8
  br label %113

113:                                              ; preds = %111, %91
  %114 = phi %"class.blink::NGInlineBreakToken"* [ %112, %111 ], [ %97, %91 ]
  %115 = icmp eq %"class.blink::NGInlineBreakToken"* %114, null
  br i1 %115, label %116, label %209

116:                                              ; preds = %89, %113, %70, %74
  %117 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %64, i64 0, i32 0, i32 0
  %118 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %64, i64 0, i32 0, i32 1
  %120 = bitcast i8* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call noalias i8* @malloc(i64 48) #11
  %123 = bitcast i8* %122 to %"class.blink::NGInlineBreakToken"*
  tail call void @_ZN5blink18NGInlineBreakTokenC1EN4base7PassKeyIS0_EENS_12NGInlineNodeEPKNS_13ComputedStyleEjjj(%"class.blink::NGInlineBreakToken"* %123, %"class.blink::LayoutBox"* %118, i64 %121, %"class.blink::ComputedStyle"* null, i32 0, i32 0, i32 0) #11
  %124 = ptrtoint i8* %122 to i64
  %125 = bitcast %class.scoped_refptr.2016* %66 to i64*
  %126 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %67, align 8
  store i64 %124, i64* %125, align 8
  %127 = icmp eq %"class.blink::NGInlineBreakToken"* %126, null
  br i1 %127, label %209, label %128

128:                                              ; preds = %116
  %129 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %126, i64 0, i32 0, i32 1, i32 0
  %130 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %129, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %130) #11
  %131 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %129, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %209

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %129, i64 -2
  %136 = bitcast %"class.base::RefCounted.1633"* %135 to %"class.blink::NGBreakToken"*
  %137 = bitcast %"class.base::RefCounted.1633"* %135 to void (%"class.blink::NGBreakToken"*)***
  %138 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %138, i64 1
  %140 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %139, align 8
  tail call void %140(%"class.blink::NGBreakToken"* nonnull %136) #11
  br label %209

141:                                              ; preds = %61
  %142 = bitcast %class.scoped_refptr.2124* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #11
  %143 = getelementptr inbounds %class.scoped_refptr.2124, %class.scoped_refptr.2124* %7, i64 0, i32 0
  store %"class.blink::NGBlockBreakToken"* inttoptr (i64 -6148914691236517206 to %"class.blink::NGBlockBreakToken"*), %"class.blink::NGBlockBreakToken"** %143, align 8
  %144 = tail call noalias i8* @malloc(i64 48) #11
  %145 = bitcast i8* %144 to %"class.blink::NGBlockBreakToken"*
  tail call void @_ZN5blink17NGBlockBreakTokenC1EN4base7PassKeyIS0_EENS_17NGLayoutInputNodeE(%"class.blink::NGBlockBreakToken"* %145, %"class.blink::LayoutBox"* %1, i64 %2) #11
  %146 = getelementptr inbounds i8, i8* %144, i64 24
  %147 = bitcast i8* %146 to i16*
  %148 = load i16, i16* %147, align 8
  %149 = zext i1 %4 to i16
  %150 = shl nuw nsw i16 %149, 6
  %151 = and i16 %148, -97
  %152 = or i16 %150, %151
  %153 = or i16 %152, 32
  store i16 %153, i16* %147, align 8
  %154 = and i64 %2, 1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %166

156:                                              ; preds = %141
  %157 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %158 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %159 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %158, align 8
  %160 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %159, i64 92
  %161 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %160, align 8
  %162 = tail call zeroext i1 %161(%"class.blink::LayoutObject"* %157, i32 29) #11
  %163 = zext i1 %162 to i16
  %164 = shl nuw nsw i16 %163, 12
  %165 = load i16, i16* %147, align 8
  br label %166

166:                                              ; preds = %141, %156
  %167 = phi i16 [ %153, %141 ], [ %165, %156 ]
  %168 = phi i16 [ 0, %141 ], [ %164, %156 ]
  %169 = and i16 %167, -4097
  %170 = or i16 %169, %168
  store i16 %170, i16* %147, align 8
  %171 = bitcast %class.scoped_refptr.2124* %7 to i8**
  store i8* %144, i8** %171, align 8
  %172 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 15
  %173 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 15, i32 0, i32 0, i32 2
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 15, i32 0, i32 0, i32 1
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %174, %176
  br i1 %177, label %191, label %178, !prof !3

178:                                              ; preds = %166
  %179 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %172, i64 0, i32 0, i32 0, i32 0
  %180 = load %class.scoped_refptr.1785*, %class.scoped_refptr.1785** %179, align 8
  %181 = zext i32 %174 to i64
  %182 = getelementptr inbounds %class.scoped_refptr.1785, %class.scoped_refptr.1785* %180, i64 %181, i32 0
  %183 = bitcast %"class.blink::NGBreakToken"** %182 to i8**
  store i8* %144, i8** %183, align 8
  %184 = icmp eq i8* %144, null
  br i1 %184, label %188, label %185

185:                                              ; preds = %178
  %186 = getelementptr inbounds i8, i8* %144, i64 8
  %187 = bitcast i8* %186 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %187) #11
  br label %188

188:                                              ; preds = %185, %178
  %189 = load i32, i32* %173, align 4
  %190 = add i32 %189, 1
  store i32 %190, i32* %173, align 4
  br label %192

191:                                              ; preds = %166
  call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink12NGBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_INS2_17NGBlockBreakTokenEEEEvOT_(%"class.WTF::Vector.2011"* %172, %class.scoped_refptr.2124* nonnull dereferenceable(8) %7) #11
  br label %192

192:                                              ; preds = %188, %191
  %193 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %143, align 8
  %194 = icmp eq %"class.blink::NGBlockBreakToken"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %192
  %196 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %193, i64 0, i32 0, i32 1, i32 0
  %197 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %196, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %197) #11
  %198 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %196, i64 0, i32 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %208

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %196, i64 -2
  %203 = bitcast %"class.base::RefCounted.1633"* %202 to %"class.blink::NGBreakToken"*
  %204 = bitcast %"class.base::RefCounted.1633"* %202 to void (%"class.blink::NGBreakToken"*)***
  %205 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %205, i64 1
  %207 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %206, align 8
  call void %207(%"class.blink::NGBreakToken"* nonnull %203) #11
  br label %208

208:                                              ; preds = %192, %195, %201
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #11
  br label %209

209:                                              ; preds = %113, %65, %116, %128, %134, %208
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NGBoxFragmentBuilder9AddResultERKNS_14NGLayoutResultENS_13LogicalOffsetEN4absl8optionalIS4_EEb(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGLayoutResult"* nocapture readonly dereferenceable(64), i64, i64, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"struct.blink::LogicalOffset"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"struct.blink::NGMarginStrut"*
  %11 = alloca %"class.absl::optional.2125", align 8
  store i64 %2, i64* %7, align 8
  %12 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 3, i32 0
  %13 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 7
  %15 = load %"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGFragmentItemsBuilder"** %14, align 8
  %16 = icmp eq %"class.blink::NGFragmentItemsBuilder"* %15, null
  %17 = icmp eq %"class.blink::NGPhysicalFragment"* %13, null
  %18 = or i1 %17, %16
  br i1 %18, label %27, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %13, i64 0, i32 3
  %21 = bitcast i24* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 64
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.blink::NGPhysicalFragment"* %13 to %"class.blink::NGPhysicalLineBoxFragment"*
  call void @_ZN5blink22NGFragmentItemsBuilder7AddLineERKNS_25NGPhysicalLineBoxFragmentERKNS_13LogicalOffsetE(%"class.blink::NGFragmentItemsBuilder"* nonnull %15, %"class.blink::NGPhysicalLineBoxFragment"* nonnull dereferenceable(56) %26, %"struct.blink::LogicalOffset"* nonnull dereferenceable(8) %8) #11
  br label %27

27:                                               ; preds = %19, %25, %6
  %28 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 6, i32 0
  %30 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 -86, i64 16, i1 false)
  %31 = load i32, i32* %29, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 4, i32 0
  %36 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %35, align 8
  %37 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %36, i64 0, i32 5
  %38 = bitcast %"struct.blink::NGMarginStrut"* %37 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 4
  br label %40

40:                                               ; preds = %27, %34
  %41 = phi <2 x i64> [ %39, %34 ], [ zeroinitializer, %27 ]
  store <2 x i64> %41, <2 x i64>* %9, align 16
  br i1 %5, label %42, label %77

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 9
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %77 [
    i32 0, label %45
    i32 2, label %67
  ]

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 5
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 4
  %49 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %48 to i96*
  %50 = load i96, i96* %49, align 4
  %51 = and i96 %50, 113336795588871485128704
  %52 = icmp eq i96 %51, 75557863725914323419136
  %53 = and i96 %50, 73786976294846595072
  %54 = icmp ne i96 %53, 73786976294838206464
  %55 = or i1 %54, %52
  br i1 %55, label %77, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 5, i32 0
  %58 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %58, i64 0, i32 0, i32 9
  %60 = bitcast [20 x i8]* %59 to i160*
  %61 = load i160, i160* %60, align 8
  %62 = and i160 %61, 16528282690043758247936
  %63 = icmp eq i160 %62, 0
  br i1 %63, label %64, label %77, !prof !3

64:                                               ; preds = %56
  %65 = call zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"* %47) #11
  %66 = load i32, i32* %29, align 4
  br label %77

67:                                               ; preds = %42
  %68 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 49, i32 0
  %69 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %68, align 8
  %70 = icmp eq %"class.blink::NGBlockBreakToken"* %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %69, i64 0, i32 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = shl nuw i64 %74, 32
  %76 = or i64 %75, 2863311360
  br label %77

77:                                               ; preds = %64, %71, %67, %56, %45, %42, %40
  %78 = phi i32 [ %31, %40 ], [ %31, %42 ], [ %31, %45 ], [ %31, %56 ], [ %31, %67 ], [ %31, %71 ], [ %66, %64 ]
  %79 = phi i64 [ 0, %40 ], [ 1, %42 ], [ 1, %45 ], [ 1, %56 ], [ 1, %67 ], [ 1, %71 ], [ 1, %64 ]
  %80 = phi i64 [ -6148914691236517376, %40 ], [ 2863311360, %42 ], [ 2863311360, %45 ], [ 2863311360, %56 ], [ 2863311360, %67 ], [ %76, %71 ], [ 2863311360, %64 ]
  %81 = and i32 %78, 64
  %82 = icmp ne i32 %81, 0
  %83 = bitcast %"class.absl::optional.2125"* %11 to i64*
  store i64 %3, i64* %83, align 8
  %84 = getelementptr inbounds %"class.absl::optional.2125", %"class.absl::optional.2125"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  store i32 %4, i32* %84, align 4
  %85 = or i64 %80, %79
  call void @_ZN5blink20NGBoxFragmentBuilder8AddChildERKNS_18NGPhysicalFragmentERKNS_13LogicalOffsetEPKNS_12LayoutInlineEPKNS_13NGMarginStrutEbN4absl8optionalIS4_EENSE_INS_10LayoutUnitEEE(%"class.blink::NGBoxFragmentBuilder"* %0, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %13, %"struct.blink::LogicalOffset"* nonnull dereferenceable(8) %8, %"class.blink::LayoutInline"* null, %"struct.blink::NGMarginStrut"* nonnull %10, i1 zeroext %82, %"class.absl::optional.2125"* nonnull byval(%"class.absl::optional.2125") align 8 %11, i64 %85)
  %86 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %13, i64 0, i32 3
  %87 = bitcast i24* %86 to i32*
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, 64
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %77
  call void @_ZN5blink20NGBoxFragmentBuilder14PropagateBreakERKNS_14NGLayoutResultE(%"class.blink::NGBoxFragmentBuilder"* %0, %"class.blink::NGLayoutResult"* dereferenceable(64) %1)
  br label %92

92:                                               ; preds = %91, %77
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  ret void
}

declare void @_ZN5blink22NGFragmentItemsBuilder7AddLineERKNS_25NGPhysicalLineBoxFragmentERKNS_13LogicalOffsetE(%"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGPhysicalLineBoxFragment"* dereferenceable(56), %"struct.blink::LogicalOffset"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20NGBoxFragmentBuilder37BlockOffsetAdjustmentForFragmentainerENS_10LayoutUnitE(%"class.blink::NGBoxFragmentBuilder"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 9
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %33 [
    i32 0, label %5
    i32 2, label %26
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 5
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 113336795588871485128704
  %12 = icmp eq i96 %11, 75557863725914323419136
  %13 = and i96 %10, 73786976294846595072
  %14 = icmp ne i96 %13, 73786976294838206464
  %15 = or i1 %14, %12
  br i1 %15, label %33, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 5, i32 0
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8
  %22 = and i160 %21, 16528282690043758247936
  %23 = icmp eq i160 %22, 0
  br i1 %23, label %24, label %33, !prof !3

24:                                               ; preds = %16
  %25 = tail call zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"* %7) #11
  ret i32 %1

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 49, i32 0
  %28 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %27, align 8
  %29 = icmp eq %"class.blink::NGBlockBreakToken"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %28, i64 0, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  br label %33

33:                                               ; preds = %2, %16, %5, %26, %30
  %34 = phi i32 [ %32, %30 ], [ %1, %26 ], [ %1, %5 ], [ %1, %16 ], [ %1, %2 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NGBoxFragmentBuilder8AddChildERKNS_18NGPhysicalFragmentERKNS_13LogicalOffsetEPKNS_12LayoutInlineEPKNS_13NGMarginStrutEbN4absl8optionalIS4_EENSE_INS_10LayoutUnitEEE(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGPhysicalFragment"* dereferenceable(48), %"struct.blink::LogicalOffset"* nocapture readonly dereferenceable(8), %"class.blink::LayoutInline"*, %"struct.blink::NGMarginStrut"* readonly, i1 zeroext, %"class.absl::optional.2125"* nocapture byval(%"class.absl::optional.2125") align 8, i64) local_unnamed_addr #0 align 2 {
  %9 = alloca %"struct.blink::NGBoxStrut", align 8
  %10 = alloca %"struct.blink::NGMarginStrut", align 4
  %11 = alloca %"struct.blink::LogicalRect", align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i64, align 8
  %21 = bitcast i64* %20 to %"struct.blink::LogicalOffset"*
  %22 = getelementptr inbounds %"class.absl::optional.2125", %"class.absl::optional.2125"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %8
  %26 = getelementptr inbounds %"class.absl::optional.2125", %"class.absl::optional.2125"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = bitcast %"struct.blink::LogicalOffset"* %26 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = trunc i64 %28 to i32
  br label %503

30:                                               ; preds = %8
  %31 = getelementptr inbounds %"class.absl::optional.2125", %"class.absl::optional.2125"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %union.anon.2129* %31 to i64*
  store i64 0, i64* %32, align 4
  store i8 1, i8* %22, align 8
  %33 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 9
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %503, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 3
  %38 = bitcast i24* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 64
  %41 = icmp eq i32 %40, 0
  %42 = and i32 %39, 960
  %43 = icmp ne i32 %42, 256
  %44 = and i1 %41, %43
  br i1 %44, label %45, label %94

45:                                               ; preds = %36
  %46 = bitcast %"class.blink::NGPhysicalFragment"* %1 to %"class.blink::NGPhysicalBoxFragment"*
  %47 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 1
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %47, align 8
  %49 = lshr i32 %39, 10
  %50 = and i32 %49, 3
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %48, i64 0, i32 5, i32 0
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %53, align 8
  br label %57

55:                                               ; preds = %45
  %56 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %48, i32 %50) #11
  br label %57

57:                                               ; preds = %52, %55
  %58 = phi %"class.blink::ComputedStyle"* [ %54, %52 ], [ %56, %55 ]
  %59 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %58, i64 0, i32 0, i32 9
  %60 = bitcast [20 x i8]* %59 to i160*
  %61 = load i160, i160* %60, align 8
  %62 = and i160 %61, 8462480737302404222943232
  %63 = icmp eq i160 %62, 2417851639229258349412352
  br i1 %63, label %64, label %73

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %66 = bitcast %"class.blink::WritingDirectionMode"* %65 to i16*
  %67 = load i16, i16* %66, align 8
  %68 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 4
  %69 = tail call i64 @_ZN5blink35ComputeRelativeOffsetForBoxFragmentERKNS_21NGPhysicalBoxFragmentENS_20WritingDirectionModeERKNS_11LogicalSizeE(%"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %46, i16 %67, %"struct.blink::LogicalSize"* dereferenceable(8) %68) #11
  %70 = getelementptr inbounds %"class.absl::optional.2125", %"class.absl::optional.2125"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %71 = bitcast %"struct.blink::LogicalOffset"* %70 to i64*
  store i64 %69, i64* %71, align 4
  %72 = trunc i64 %69 to i32
  br label %73

73:                                               ; preds = %64, %57
  %74 = phi i32 [ %72, %64 ], [ 0, %57 ]
  %75 = phi i64 [ %69, %64 ], [ 0, %57 ]
  %76 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %2, i64 0, i32 1, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp sgt i32 %77, -1
  %79 = load i32, i32* %38, align 8
  %80 = and i32 %79, 960
  %81 = icmp eq i32 %80, 640
  %82 = or i1 %78, %81
  br i1 %82, label %83, label %92

83:                                               ; preds = %73
  %84 = and i32 %79, 64
  %85 = icmp eq i32 %84, 0
  %86 = and i32 %79, 896
  %87 = icmp ugt i32 %86, 256
  %88 = and i1 %85, %87
  %89 = and i32 %79, 589824
  %90 = icmp ne i32 %89, 65536
  %91 = or i1 %90, %88
  br i1 %91, label %94, label %92

92:                                               ; preds = %83, %73
  %93 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 10
  store i8 1, i8* %93, align 4
  br label %94

94:                                               ; preds = %83, %92, %36
  %95 = phi i32 [ %74, %83 ], [ %74, %92 ], [ 0, %36 ]
  %96 = phi i64 [ %75, %83 ], [ %75, %92 ], [ 0, %36 ]
  %97 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 2
  %98 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 2, i32 1
  %99 = load i8, i8* %98, align 8
  %100 = and i8 %99, 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %503

102:                                              ; preds = %94
  %103 = bitcast %"class.blink::NGLayoutInputNode"* %97 to %"class.blink::LayoutObject"**
  %104 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %104, i64 0, i32 4
  %106 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %105 to i96*
  %107 = load i96, i96* %106, align 4
  %108 = and i96 %107, 8589934592
  %109 = icmp eq i96 %108, 0
  br i1 %109, label %503, label %110

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %104, i64 0, i32 5, i32 0
  %112 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %112, i64 0, i32 0, i32 9
  %114 = bitcast [20 x i8]* %113 to i160*
  %115 = load i160, i160* %114, align 8
  %116 = lshr i160 %115, 74
  %117 = trunc i160 %116 to i32
  %118 = and i32 %117, 7
  switch i32 %118, label %119 [
    i32 5, label %503
    i32 2, label %503
  ]

119:                                              ; preds = %110
  %120 = load i32, i32* %33, align 8
  %121 = icmp eq i32 %120, 2
  br i1 %121, label %503, label %122

122:                                              ; preds = %119
  %123 = load i32, i32* %38, align 8
  %124 = and i32 %123, 960
  %125 = icmp eq i32 %124, 640
  br i1 %125, label %503, label %126

126:                                              ; preds = %122
  %127 = bitcast %"struct.blink::NGBoxStrut"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #11
  %128 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %9, i64 0, i32 0
  %129 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %9, i64 0, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %9, i64 0, i32 1
  %131 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %130, i64 0, i32 0
  %132 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %9, i64 0, i32 2
  %133 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %132, i64 0, i32 0
  %134 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %9, i64 0, i32 3
  %135 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %134, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 0, i64 16, i1 false) #11
  %136 = and i32 %123, 64
  %137 = icmp eq i32 %136, 0
  %138 = icmp ne i32 %124, 256
  %139 = and i1 %137, %138
  br i1 %139, label %140, label %200

140:                                              ; preds = %126
  %141 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 1
  %142 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %141, align 8
  %143 = lshr i32 %123, 10
  %144 = and i32 %143, 3
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %142, i64 0, i32 5, i32 0
  %148 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %147, align 8
  br label %151

149:                                              ; preds = %140
  %150 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %142, i32 %144) #11
  br label %151

151:                                              ; preds = %146, %149
  %152 = phi %"class.blink::ComputedStyle"* [ %148, %146 ], [ %150, %149 ]
  %153 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 4, i32 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %156 = bitcast %"class.blink::WritingDirectionMode"* %155 to i16*
  %157 = load i16, i16* %156, align 8
  %158 = tail call { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* dereferenceable(104) %152, i32 %154) #11
  %159 = extractvalue { i64, i64 } %158, 0
  %160 = trunc i64 %159 to i32
  %161 = lshr i64 %159, 32
  %162 = extractvalue { i64, i64 } %158, 1
  %163 = trunc i16 %157 to i8
  switch i8 %163, label %185 [
    i8 0, label %164
    i8 1, label %171
    i8 3, label %171
    i8 2, label %175
    i8 4, label %180
  ]

164:                                              ; preds = %151
  %165 = trunc i64 %161 to i32
  %166 = lshr i64 %162, 32
  %167 = trunc i64 %166 to i32
  %168 = and i64 %159, 4294967295
  %169 = shl i64 %162, 32
  %170 = or i64 %169, %168
  br label %185

171:                                              ; preds = %151, %151
  %172 = trunc i64 %162 to i32
  %173 = and i64 %162, -4294967296
  %174 = or i64 %173, %161
  br label %185

175:                                              ; preds = %151
  %176 = trunc i64 %162 to i32
  %177 = lshr i64 %162, 32
  %178 = and i64 %159, -4294967296
  %179 = or i64 %178, %177
  br label %185

180:                                              ; preds = %151
  %181 = trunc i64 %162 to i32
  %182 = lshr i64 %162, 32
  %183 = and i64 %159, -4294967296
  %184 = or i64 %183, %182
  br label %185

185:                                              ; preds = %151, %164, %171, %175, %180
  %186 = phi i64 [ 0, %151 ], [ %184, %180 ], [ %179, %175 ], [ %174, %171 ], [ %170, %164 ]
  %187 = phi i32 [ 0, %151 ], [ %160, %180 ], [ %176, %175 ], [ %172, %171 ], [ %165, %164 ]
  %188 = phi i32 [ 0, %151 ], [ %181, %180 ], [ %160, %175 ], [ %160, %171 ], [ %167, %164 ]
  %189 = icmp ugt i16 %157, 255
  %190 = select i1 %189, i32 %188, i32 %187
  %191 = select i1 %189, i32 %187, i32 %188
  %192 = zext i32 %190 to i64
  %193 = shl nuw i64 %192, 32
  %194 = zext i32 %191 to i64
  %195 = or i64 %193, %194
  %196 = bitcast %"struct.blink::NGBoxStrut"* %9 to i64*
  store i64 %195, i64* %196, align 8
  %197 = bitcast %"class.blink::LayoutUnit"* %132 to i64*
  store i64 %186, i64* %197, align 8
  %198 = lshr i64 %186, 32
  %199 = trunc i64 %198 to i32
  br label %200

200:                                              ; preds = %185, %126
  %201 = phi i32 [ %199, %185 ], [ 0, %126 ]
  %202 = phi i32 [ %191, %185 ], [ 0, %126 ]
  %203 = icmp eq %"struct.blink::NGMarginStrut"* %4, null
  br i1 %203, label %268, label %204

204:                                              ; preds = %200
  %205 = bitcast %"struct.blink::NGMarginStrut"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %205) #11
  %206 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %10, i64 0, i32 4
  %207 = bitcast %"struct.blink::NGMarginStrut"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %205, i8* nonnull align 4 %207, i64 16, i1 false)
  call void @_ZN5blink13NGMarginStrut6AppendERKNS_10LayoutUnitEb(%"struct.blink::NGMarginStrut"* nonnull %10, %"class.blink::LayoutUnit"* dereferenceable(4) %134, i1 zeroext false) #11
  %208 = load i8, i8* %206, align 1, !range !2
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %229

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %10, i64 0, i32 1, i32 0
  %212 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %10, i64 0, i32 0, i32 0
  %213 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %10, i64 0, i32 2
  %214 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %10, i64 0, i32 0
  %215 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %213, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = load i32, i32* %212, align 4
  %218 = icmp slt i32 %216, %217
  %219 = select i1 %218, %"class.blink::LayoutUnit"* %214, %"class.blink::LayoutUnit"* %213
  %220 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %219, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = load i32, i32* %211, align 4
  %223 = icmp slt i32 %222, 0
  %224 = select i1 %223, i32 -2147483648, i32 2147483647
  %225 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %221, i32 %222) #11
  %226 = extractvalue { i32, i1 } %225, 1
  %227 = extractvalue { i32, i1 } %225, 0
  %228 = select i1 %226, i32 %224, i32 %227, !prof !3
  br label %229

229:                                              ; preds = %204, %210
  %230 = phi i32 [ %228, %210 ], [ 0, %204 ]
  br i1 %5, label %231, label %264

231:                                              ; preds = %229
  %232 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %4, i64 0, i32 4
  %233 = load i8, i8* %232, align 1, !range !2
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %235, label %255

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %4, i64 0, i32 2
  %237 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %4, i64 0, i32 0
  %238 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %236, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  %240 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %4, i64 0, i32 0, i32 0
  %241 = load i32, i32* %240, align 4
  %242 = icmp slt i32 %239, %241
  %243 = select i1 %242, %"class.blink::LayoutUnit"* %237, %"class.blink::LayoutUnit"* %236
  %244 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %243, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  %246 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %4, i64 0, i32 1, i32 0
  %247 = load i32, i32* %246, align 4
  %248 = icmp slt i32 %247, 0
  %249 = select i1 %248, i32 -2147483648, i32 2147483647
  %250 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %245, i32 %247) #11
  %251 = extractvalue { i32, i1 } %250, 1
  %252 = extractvalue { i32, i1 } %250, 0
  %253 = select i1 %251, i32 %249, i32 %252, !prof !3
  %254 = icmp sgt i32 %253, -1
  br i1 %254, label %255, label %257

255:                                              ; preds = %231, %235
  %256 = phi i32 [ %253, %235 ], [ 0, %231 ]
  br label %257

257:                                              ; preds = %235, %255
  %258 = phi i32 [ %256, %255 ], [ %253, %235 ]
  %259 = phi i32 [ -2147483648, %255 ], [ 2147483647, %235 ]
  %260 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %230, i32 %258) #11
  %261 = extractvalue { i32, i1 } %260, 1
  %262 = extractvalue { i32, i1 } %260, 0
  %263 = select i1 %261, i32 %259, i32 %262, !prof !3
  br label %264

264:                                              ; preds = %229, %257
  %265 = phi i32 [ %263, %257 ], [ %230, %229 ]
  %266 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %9, i64 0, i32 3, i32 0
  store i32 %265, i32* %266, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %205) #11
  %267 = load i32, i32* %129, align 8
  br label %268

268:                                              ; preds = %200, %264
  %269 = phi i32 [ %201, %200 ], [ %265, %264 ]
  %270 = phi i32 [ %202, %200 ], [ %267, %264 ]
  %271 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %272 = bitcast %"class.blink::WritingDirectionMode"* %271 to i16*
  %273 = load i16, i16* %272, align 8
  %274 = trunc i16 %273 to i8
  %275 = bitcast %"struct.blink::LogicalRect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %275) #11
  %276 = getelementptr inbounds %"struct.blink::LogicalRect", %"struct.blink::LogicalRect"* %11, i64 0, i32 0, i32 0, i32 0
  %277 = getelementptr inbounds %"struct.blink::LogicalRect", %"struct.blink::LogicalRect"* %11, i64 0, i32 0, i32 1, i32 0
  %278 = getelementptr inbounds %"struct.blink::LogicalRect", %"struct.blink::LogicalRect"* %11, i64 0, i32 1
  %279 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %278, i64 0, i32 0, i32 0
  %280 = getelementptr inbounds %"struct.blink::LogicalRect", %"struct.blink::LogicalRect"* %11, i64 0, i32 1, i32 1, i32 0
  %281 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 2, i32 0, i32 0
  %282 = load i32, i32* %281, align 8
  %283 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 2, i32 1, i32 0
  %284 = load i32, i32* %283, align 4
  %285 = icmp eq i8 %274, 0
  %286 = select i1 %285, i32 %282, i32 %284
  %287 = select i1 %285, i32 %284, i32 %282
  %288 = zext i32 %287 to i64
  %289 = shl nuw i64 %288, 32
  %290 = zext i32 %286 to i64
  %291 = or i64 %289, %290
  %292 = bitcast %"struct.blink::LogicalOffset"* %2 to i64*
  %293 = bitcast %"struct.blink::LogicalRect"* %11 to i64*
  %294 = load i64, i64* %292, align 4
  store i64 %294, i64* %293, align 8
  %295 = bitcast %"struct.blink::LogicalSize"* %278 to i64*
  store i64 %291, i64* %295, align 8
  %296 = icmp eq i32 %270, 0
  br i1 %296, label %297, label %306

297:                                              ; preds = %268
  %298 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %9, i64 0, i32 1, i32 0
  %299 = load i32, i32* %298, align 4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %306

301:                                              ; preds = %297
  %302 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %9, i64 0, i32 2, i32 0
  %303 = load i32, i32* %302, align 8
  %304 = or i32 %303, %269
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %493, label %306

306:                                              ; preds = %268, %297, %301
  %307 = getelementptr inbounds %"class.blink::NGLayoutInputNode", %"class.blink::NGLayoutInputNode"* %97, i64 0, i32 0
  %308 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %307, align 8
  %309 = bitcast %"class.blink::LayoutBox"* %308 to i1 (%"class.blink::LayoutBox"*)***
  %310 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %309, align 8
  %311 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %310, i64 148
  %312 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %311, align 8
  %313 = call zeroext i1 %312(%"class.blink::LayoutBox"* %308) #11
  %314 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %307, align 8
  %315 = bitcast %"class.blink::LayoutBox"* %314 to i1 (%"class.blink::LayoutBox"*)***
  %316 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %315, align 8
  %317 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %316, i64 149
  %318 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %317, align 8
  %319 = call zeroext i1 %318(%"class.blink::LayoutBox"* %314) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15)
  %320 = load i16, i16* %272, align 8
  %321 = xor i1 %319, true
  %322 = xor i1 %313, true
  %323 = zext i1 %313 to i8
  %324 = zext i1 %321 to i8
  %325 = zext i1 %322 to i8
  %326 = zext i1 %319 to i8
  %327 = trunc i16 %320 to i8
  store i8 %323, i8* %12, align 1
  store i8 %324, i8* %13, align 1
  store i8 %325, i8* %14, align 1
  store i8 %326, i8* %15, align 1
  %328 = icmp eq i8 %327, 0
  %329 = icmp ult i16 %320, 256
  %330 = select i1 %329, i8* %15, i8* %13
  %331 = select i1 %329, i8* %12, i8* %14
  %332 = select i1 %328, i8* %330, i8* %331
  %333 = load i8, i8* %332, align 1, !range !2
  %334 = icmp eq i8 %333, 0
  br i1 %334, label %362, label %335

335:                                              ; preds = %306
  %336 = load i32, i32* %131, align 4
  %337 = icmp sgt i32 %336, 0
  %338 = select i1 %337, i32 %336, i32 0
  %339 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %9, i64 0, i32 1, i32 0
  store i32 %338, i32* %339, align 4
  %340 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %340)
  %341 = load i32, i32* %281, align 4
  %342 = load i32, i32* %283, align 4
  %343 = select i1 %285, i32 %341, i32 %342
  %344 = call i1 @llvm.is.constant.i32(i32 %343) #11
  br i1 %344, label %345, label %349

345:                                              ; preds = %335
  %346 = sub i32 0, %343
  %347 = icmp eq i32 %346, -2147483648
  %348 = select i1 %347, i32 2147483647, i32 %346
  br label %354

349:                                              ; preds = %335
  %350 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %343) #11
  %351 = extractvalue { i32, i1 } %350, 1
  %352 = extractvalue { i32, i1 } %350, 0
  %353 = select i1 %351, i32 2147483647, i32 %352
  br label %354

354:                                              ; preds = %345, %349
  %355 = phi i32 [ %348, %345 ], [ %353, %349 ]
  store i32 %355, i32* %16, align 4
  %356 = load i32, i32* %129, align 8
  %357 = icmp slt i32 %356, %355
  %358 = bitcast i32* %16 to %"class.blink::LayoutUnit"*
  %359 = select i1 %357, %"class.blink::LayoutUnit"* %358, %"class.blink::LayoutUnit"* %128
  %360 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %359, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  store i32 %361, i32* %129, align 8
  br label %388

362:                                              ; preds = %306
  %363 = load i32, i32* %129, align 8
  %364 = icmp sgt i32 %363, 0
  %365 = select i1 %364, i32 %363, i32 0
  store i32 %365, i32* %129, align 8
  %366 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %366)
  %367 = load i32, i32* %281, align 4
  %368 = load i32, i32* %283, align 4
  %369 = select i1 %285, i32 %367, i32 %368
  %370 = call i1 @llvm.is.constant.i32(i32 %369) #11
  br i1 %370, label %371, label %375

371:                                              ; preds = %362
  %372 = sub i32 0, %369
  %373 = icmp eq i32 %372, -2147483648
  %374 = select i1 %373, i32 2147483647, i32 %372
  br label %380

375:                                              ; preds = %362
  %376 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %369) #11
  %377 = extractvalue { i32, i1 } %376, 1
  %378 = extractvalue { i32, i1 } %376, 0
  %379 = select i1 %377, i32 2147483647, i32 %378
  br label %380

380:                                              ; preds = %371, %375
  %381 = phi i32 [ %374, %371 ], [ %379, %375 ]
  store i32 %381, i32* %17, align 4
  %382 = load i32, i32* %131, align 4
  %383 = icmp slt i32 %382, %381
  %384 = bitcast i32* %17 to %"class.blink::LayoutUnit"*
  %385 = select i1 %383, %"class.blink::LayoutUnit"* %384, %"class.blink::LayoutUnit"* %130
  %386 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %385, i64 0, i32 0
  %387 = load i32, i32* %386, align 4
  store i32 %387, i32* %131, align 4
  br label %388

388:                                              ; preds = %380, %354
  %389 = phi i8* [ %366, %380 ], [ %340, %354 ]
  %390 = phi i32 [ %387, %380 ], [ %338, %354 ]
  %391 = phi i32 [ %365, %380 ], [ %361, %354 ]
  %392 = phi i32 [ %367, %380 ], [ %341, %354 ]
  %393 = phi i32 [ %368, %380 ], [ %342, %354 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %389)
  %394 = icmp eq i8 %327, 1
  %395 = select i1 %394, i8* %13, i8* %15
  %396 = select i1 %328, i8* %12, i8* %395
  %397 = load i8, i8* %396, align 1, !range !2
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %424, label %399

399:                                              ; preds = %388
  %400 = load i32, i32* %135, align 4
  %401 = icmp sgt i32 %400, 0
  %402 = select i1 %401, i32 %400, i32 0
  %403 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %9, i64 0, i32 3, i32 0
  store i32 %402, i32* %403, align 4
  %404 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %404)
  %405 = select i1 %285, i32 %393, i32 %392
  %406 = call i1 @llvm.is.constant.i32(i32 %405) #11
  br i1 %406, label %407, label %411

407:                                              ; preds = %399
  %408 = sub i32 0, %405
  %409 = icmp eq i32 %408, -2147483648
  %410 = select i1 %409, i32 2147483647, i32 %408
  br label %416

411:                                              ; preds = %399
  %412 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %405) #11
  %413 = extractvalue { i32, i1 } %412, 1
  %414 = extractvalue { i32, i1 } %412, 0
  %415 = select i1 %413, i32 2147483647, i32 %414
  br label %416

416:                                              ; preds = %407, %411
  %417 = phi i32 [ %410, %407 ], [ %415, %411 ]
  store i32 %417, i32* %18, align 4
  %418 = load i32, i32* %133, align 8
  %419 = icmp slt i32 %418, %417
  %420 = bitcast i32* %18 to %"class.blink::LayoutUnit"*
  %421 = select i1 %419, %"class.blink::LayoutUnit"* %420, %"class.blink::LayoutUnit"* %132
  %422 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %421, i64 0, i32 0
  %423 = load i32, i32* %422, align 4
  store i32 %423, i32* %133, align 8
  br label %449

424:                                              ; preds = %388
  %425 = load i32, i32* %133, align 8
  %426 = icmp sgt i32 %425, 0
  %427 = select i1 %426, i32 %425, i32 0
  %428 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %9, i64 0, i32 2, i32 0
  store i32 %427, i32* %428, align 8
  %429 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %429)
  %430 = select i1 %285, i32 %393, i32 %392
  %431 = call i1 @llvm.is.constant.i32(i32 %430) #11
  br i1 %431, label %432, label %436

432:                                              ; preds = %424
  %433 = sub i32 0, %430
  %434 = icmp eq i32 %433, -2147483648
  %435 = select i1 %434, i32 2147483647, i32 %433
  br label %441

436:                                              ; preds = %424
  %437 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %430) #11
  %438 = extractvalue { i32, i1 } %437, 1
  %439 = extractvalue { i32, i1 } %437, 0
  %440 = select i1 %438, i32 2147483647, i32 %439
  br label %441

441:                                              ; preds = %432, %436
  %442 = phi i32 [ %435, %432 ], [ %440, %436 ]
  store i32 %442, i32* %19, align 4
  %443 = load i32, i32* %135, align 4
  %444 = icmp slt i32 %443, %442
  %445 = bitcast i32* %19 to %"class.blink::LayoutUnit"*
  %446 = select i1 %444, %"class.blink::LayoutUnit"* %445, %"class.blink::LayoutUnit"* %134
  %447 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %446, i64 0, i32 0
  %448 = load i32, i32* %447, align 4
  store i32 %448, i32* %135, align 4
  br label %449

449:                                              ; preds = %441, %416
  %450 = phi i8* [ %429, %441 ], [ %404, %416 ]
  %451 = phi i32 [ %448, %441 ], [ %402, %416 ]
  %452 = phi i32 [ %427, %441 ], [ %423, %416 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %450)
  %453 = load i32, i32* %276, align 8
  %454 = icmp sgt i32 %391, -1
  %455 = select i1 %454, i32 -2147483648, i32 2147483647
  %456 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %453, i32 %391) #11
  %457 = extractvalue { i32, i1 } %456, 1
  %458 = extractvalue { i32, i1 } %456, 0
  %459 = select i1 %457, i32 %455, i32 %458, !prof !3
  store i32 %459, i32* %276, align 8
  %460 = load i32, i32* %277, align 4
  %461 = icmp sgt i32 %452, -1
  %462 = select i1 %461, i32 -2147483648, i32 2147483647
  %463 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %460, i32 %452) #11
  %464 = extractvalue { i32, i1 } %463, 1
  %465 = extractvalue { i32, i1 } %463, 0
  %466 = select i1 %464, i32 %462, i32 %465, !prof !3
  store i32 %466, i32* %277, align 4
  %467 = icmp slt i32 %390, 0
  %468 = select i1 %467, i32 -2147483648, i32 2147483647
  %469 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %391, i32 %390) #11
  %470 = extractvalue { i32, i1 } %469, 1
  %471 = extractvalue { i32, i1 } %469, 0
  %472 = select i1 %470, i32 %468, i32 %471, !prof !3
  %473 = load i32, i32* %279, align 8
  %474 = icmp slt i32 %472, 0
  %475 = select i1 %474, i32 -2147483648, i32 2147483647
  %476 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %473, i32 %472) #11
  %477 = extractvalue { i32, i1 } %476, 1
  %478 = extractvalue { i32, i1 } %476, 0
  %479 = select i1 %477, i32 %475, i32 %478, !prof !3
  store i32 %479, i32* %279, align 8
  %480 = icmp slt i32 %451, 0
  %481 = select i1 %480, i32 -2147483648, i32 2147483647
  %482 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %452, i32 %451) #11
  %483 = extractvalue { i32, i1 } %482, 1
  %484 = extractvalue { i32, i1 } %482, 0
  %485 = select i1 %483, i32 %481, i32 %484, !prof !3
  %486 = load i32, i32* %280, align 4
  %487 = icmp slt i32 %485, 0
  %488 = select i1 %487, i32 -2147483648, i32 2147483647
  %489 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %486, i32 %485) #11
  %490 = extractvalue { i32, i1 } %489, 1
  %491 = extractvalue { i32, i1 } %489, 0
  %492 = select i1 %490, i32 %488, i32 %491, !prof !3
  store i32 %492, i32* %280, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15)
  br label %493

493:                                              ; preds = %301, %449
  %494 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %495 = load i8, i8* %494, align 4, !range !2
  %496 = icmp eq i8 %495, 0
  br i1 %496, label %497, label %500

497:                                              ; preds = %493
  %498 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %499 = bitcast %union.anon.1872* %498 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %499, i8* nonnull align 8 %275, i64 16, i1 false) #11
  store i8 1, i8* %494, align 4
  br label %502

500:                                              ; preds = %493
  %501 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink11LogicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::LogicalRect"* %501, %"struct.blink::LogicalRect"* nonnull dereferenceable(16) %11) #11
  br label %502

502:                                              ; preds = %500, %497
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %275) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #11
  br label %503

503:                                              ; preds = %122, %502, %119, %94, %102, %110, %110, %25, %30
  %504 = phi i32 [ %29, %25 ], [ 0, %30 ], [ %95, %110 ], [ %95, %110 ], [ %95, %102 ], [ %95, %94 ], [ %95, %119 ], [ %95, %502 ], [ %95, %122 ]
  %505 = phi i64 [ %28, %25 ], [ 0, %30 ], [ %96, %110 ], [ %96, %110 ], [ %96, %102 ], [ %96, %94 ], [ %96, %119 ], [ %96, %502 ], [ %96, %122 ]
  %506 = bitcast %"struct.blink::LogicalOffset"* %2 to i64*
  %507 = bitcast %"class.blink::NGBoxFragmentBuilder"* %0 to %"class.blink::NGContainerFragmentBuilder"*
  %508 = load i64, i64* %506, align 4
  call void @_ZN5blink26NGContainerFragmentBuilder18PropagateChildDataERKNS_18NGPhysicalFragmentENS_13LogicalOffsetES4_PKNS_12LayoutInlineEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::NGContainerFragmentBuilder"* %507, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %1, i64 %508, i64 %505, %"class.blink::LayoutInline"* %3, i64 %7) #11
  %509 = icmp eq %"class.blink::NGPhysicalFragment"* %1, null
  br i1 %509, label %512, label %510

510:                                              ; preds = %503
  %511 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %511) #11
  br label %512

512:                                              ; preds = %510, %503
  %513 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %513) #11
  %514 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %2, i64 0, i32 0, i32 0
  %515 = load i32, i32* %514, align 4
  %516 = icmp slt i32 %504, 0
  %517 = select i1 %516, i32 -2147483648, i32 2147483647
  %518 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %515, i32 %504) #11
  %519 = extractvalue { i32, i1 } %518, 1
  %520 = extractvalue { i32, i1 } %518, 0
  %521 = select i1 %519, i32 %517, i32 %520, !prof !3
  %522 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %2, i64 0, i32 1, i32 0
  %523 = load i32, i32* %522, align 4
  %524 = getelementptr inbounds %"class.absl::optional.2125", %"class.absl::optional.2125"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %525 = load i32, i32* %524, align 4
  %526 = icmp slt i32 %525, 0
  %527 = select i1 %526, i32 -2147483648, i32 2147483647
  %528 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %523, i32 %525) #11
  %529 = extractvalue { i32, i1 } %528, 1
  %530 = extractvalue { i32, i1 } %528, 0
  %531 = select i1 %529, i32 %527, i32 %530, !prof !3
  %532 = zext i32 %531 to i64
  %533 = shl nuw i64 %532, 32
  %534 = zext i32 %521 to i64
  %535 = or i64 %533, %534
  store i64 %535, i64* %20, align 8
  call void @_ZN5blink26NGContainerFragmentBuilder16AddChildInternalE13scoped_refptrIKNS_18NGPhysicalFragmentEERKNS_13LogicalOffsetE(%"class.blink::NGContainerFragmentBuilder"* %507, %"class.blink::NGPhysicalFragment"* %1, %"struct.blink::LogicalOffset"* nonnull dereferenceable(8) %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %513) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NGBoxFragmentBuilder14PropagateBreakERKNS_14NGLayoutResultE(%"class.blink::NGBoxFragmentBuilder"* nocapture, %"class.blink::NGLayoutResult"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 29
  %5 = load i8, i8* %4, align 2, !range !2
  %6 = icmp eq i8 %5, 1
  br i1 %6, label %7, label %97, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 17
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 18
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %35

15:                                               ; preds = %11, %7
  %16 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 3, i32 0
  %17 = bitcast %"class.blink::NGPhysicalFragment"** %16 to %"class.blink::NGPhysicalBoxFragment"**
  %18 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %18, i64 0, i32 0, i32 4, i32 0
  %20 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %19, align 8
  %21 = icmp eq %"class.blink::NGBreakToken"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %20, i64 0, i32 4
  %24 = load i16, i16* %23, align 8
  %25 = and i16 %24, 257
  %26 = icmp eq i16 %25, 256
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %18, i64 0, i32 0, i32 3
  %29 = bitcast i24* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 960
  switch i32 %31, label %34 [
    i32 512, label %32
    i32 640, label %35
  ]

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 18
  store i8 1, i8* %33, align 4
  br label %35

34:                                               ; preds = %27
  store i8 1, i8* %8, align 1
  br label %35

35:                                               ; preds = %22, %27, %32, %34, %15, %11
  %36 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 6, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 32
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 19
  store i8 1, i8* %41, align 1
  %42 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 31, i32 0
  store i32 2147483647, i32* %42, align 8
  br label %79

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 32, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, -1
  %47 = and i32 %37, 1
  %48 = icmp eq i32 %47, 0
  br i1 %46, label %49, label %67

49:                                               ; preds = %43
  br i1 %48, label %57, label %50

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 4, i32 0
  %52 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %51, align 8
  %53 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %52, i64 0, i32 8, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, -64
  %56 = select i1 %55, i32 0, i32 %54
  br label %57

57:                                               ; preds = %49, %50
  %58 = phi i32 [ %56, %50 ], [ 0, %49 ]
  %59 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59)
  store i32 %58, i32* %3, align 4
  %60 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 32
  %61 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %60, i64 0, i32 0
  %62 = icmp slt i32 %45, %58
  %63 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %64 = select i1 %62, %"class.blink::LayoutUnit"* %63, %"class.blink::LayoutUnit"* %60
  %65 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %61, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59)
  br label %79

67:                                               ; preds = %43
  br i1 %48, label %79, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 4, i32 0
  %70 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %69, align 8
  %71 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %70, i64 0, i32 8, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, -64
  %74 = select i1 %73, i32 2147483647, i32 %72
  %75 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 31, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %76, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %68
  store i32 %74, i32* %75, align 8
  br label %79

79:                                               ; preds = %67, %78, %68, %57, %40
  %80 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 30
  %81 = load i8, i8* %80, align 1, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %97

83:                                               ; preds = %79
  %84 = load i32, i32* %36, align 4
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 4, i32 0
  %89 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %88, align 8
  %90 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %89, i64 0, i32 13
  %91 = load i8, i8* %90, align 8, !range !2
  br label %92

92:                                               ; preds = %83, %87
  %93 = phi i8 [ 0, %83 ], [ %91, %87 ]
  %94 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 26
  %95 = load i8, i8* %94, align 4, !range !2
  %96 = or i8 %95, %93
  store i8 %96, i8* %94, align 4
  br label %97

97:                                               ; preds = %79, %2, %92
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZN5blink35ComputeRelativeOffsetForBoxFragmentERKNS_21NGPhysicalBoxFragmentENS_20WritingDirectionModeERKNS_11LogicalSizeE(%"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), i16, %"struct.blink::LogicalSize"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink13NGMarginStrut6AppendERKNS_10LayoutUnitEb(%"struct.blink::NGMarginStrut"*, %"class.blink::LayoutUnit"* dereferenceable(4), i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink11LogicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::LogicalRect"*, %"struct.blink::LogicalRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink26NGContainerFragmentBuilder18PropagateChildDataERKNS_18NGPhysicalFragmentENS_13LogicalOffsetES4_PKNS_12LayoutInlineEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGPhysicalFragment"* dereferenceable(48), i64, i64, %"class.blink::LayoutInline"*, i64) local_unnamed_addr #2

declare void @_ZN5blink26NGContainerFragmentBuilder16AddChildInternalE13scoped_refptrIKNS_18NGPhysicalFragmentEERKNS_13LogicalOffsetE(%"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGPhysicalFragment"*, %"struct.blink::LogicalOffset"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NGBoxFragmentBuilder13AddBreakTokenE13scoped_refptrIKNS_12NGBreakTokenEEb(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBreakToken"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr.1785, align 8
  %5 = getelementptr inbounds %class.scoped_refptr.1785, %class.scoped_refptr.1785* %4, i64 0, i32 0
  store %"class.blink::NGBreakToken"* %1, %"class.blink::NGBreakToken"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 15
  %7 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 15, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 15, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %21, label %12, !prof !3

12:                                               ; preds = %3
  %13 = ptrtoint %"class.blink::NGBreakToken"* %1 to i64
  %14 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %6, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.scoped_refptr.1785*, %class.scoped_refptr.1785** %14, align 8
  %16 = zext i32 %8 to i64
  %17 = getelementptr inbounds %class.scoped_refptr.1785, %class.scoped_refptr.1785* %15, i64 %16
  %18 = bitcast %class.scoped_refptr.1785* %17 to i64*
  store i64 %13, i64* %18, align 8
  store %"class.blink::NGBreakToken"* null, %"class.blink::NGBreakToken"** %5, align 8
  %19 = load i32, i32* %7, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %7, align 4
  br label %23

21:                                               ; preds = %3
  call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink12NGBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.2011"* %6, %class.scoped_refptr.1785* nonnull dereferenceable(8) %4) #11
  %22 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %5, align 8
  br label %23

23:                                               ; preds = %12, %21
  %24 = phi %"class.blink::NGBreakToken"* [ null, %12 ], [ %22, %21 ]
  %25 = xor i1 %2, true
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 17
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = or i8 %28, %26
  store i8 %29, i8* %27, align 1
  %30 = icmp eq %"class.blink::NGBreakToken"* %24, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %24, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %32, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %33) #11
  %34 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %32, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %44

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %32, i64 -2
  %39 = bitcast %"class.base::RefCounted.1633"* %38 to %"class.blink::NGBreakToken"*
  %40 = bitcast %"class.base::RefCounted.1633"* %38 to void (%"class.blink::NGBreakToken"*)***
  %41 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %41, i64 1
  %43 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %42, align 8
  call void %43(%"class.blink::NGBreakToken"* nonnull %39) #11
  br label %44

44:                                               ; preds = %23, %31, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NGBoxFragmentBuilder27AddOutOfFlowLegacyCandidateENS_11NGBlockNodeERKNS_23NGLogicalStaticPositionEPKNS_12LayoutInlineE(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::LayoutBox"*, i64, %"struct.blink::NGLogicalStaticPosition"* nocapture readonly dereferenceable(16), %"class.blink::LayoutInline"*) local_unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.blink::LayoutBox"* %1 to i64
  %7 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 9
  %8 = icmp eq %"class.blink::LayoutInline"* %4, null
  br i1 %8, label %40, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %4, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %4, i64 0, i32 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 16777216
  %15 = icmp eq i96 %14, 0
  br i1 %15, label %16, label %37

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %4, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 6, i32 0, i32 0
  br i1 %24, label %30, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::NodeData"** %25 to %"class.blink::NodeRareData"**
  %28 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %28, i64 0, i32 1, i32 0, i32 0
  br label %32

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::NodeData"** %25 to %"class.blink::NodeRenderingData"**
  br label %32

32:                                               ; preds = %30, %26
  %33 = phi %"class.blink::NodeRenderingData"** [ %29, %26 ], [ %31, %30 ]
  %34 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %34, i64 0, i32 1
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  br label %37

37:                                               ; preds = %9, %16, %32
  %38 = phi %"class.blink::LayoutObject"* [ %36, %32 ], [ %10, %16 ], [ %10, %9 ]
  %39 = ptrtoint %"class.blink::LayoutObject"* %38 to i64
  br label %40

40:                                               ; preds = %5, %37
  %41 = phi i64 [ %39, %37 ], [ 0, %5 ]
  %42 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %47, label %69, !prof !3

47:                                               ; preds = %40
  %48 = add i32 %43, 1
  %49 = lshr i32 %43, 2
  %50 = add i32 %48, %49
  %51 = icmp ugt i32 %50, 4
  %52 = select i1 %51, i32 %50, i32 4
  %53 = icmp ugt i32 %52, %48
  %54 = select i1 %53, i32 %52, i32 %48
  %55 = icmp ult i32 %43, %54
  br i1 %55, label %56, label %69, !prof !4

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %7, i64 0, i32 0, i32 0, i32 0
  %58 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %57, align 8
  %59 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %58, null
  br i1 %59, label %60, label %68

60:                                               ; preds = %56
  %61 = zext i32 %54 to i64
  %62 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64 %61) #11
  %63 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %62, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv, i64 0, i64 0)) #11
  %64 = ptrtoint i8* %63 to i64
  %65 = bitcast %"class.WTF::Vector.1865"* %7 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = udiv i64 %62, 112
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %44, align 8
  br label %69

68:                                               ; preds = %56
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1865"* %7, i32 %54) #11
  br label %69

69:                                               ; preds = %40, %47, %60, %68
  %70 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %7, i64 0, i32 0, i32 0, i32 0
  %71 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %70, align 8
  %72 = load i32, i32* %42, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %71, i64 %73
  %75 = bitcast %"struct.blink::NGLogicalStaticPosition"* %3 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 4
  %77 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %74 to i64*
  store i64 %6, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %71, i64 %73, i32 1
  %79 = bitcast %"struct.blink::NGLogicalStaticPosition"* %78 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %79, align 8
  %80 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %71, i64 %73, i32 2
  %81 = bitcast %"class.blink::LayoutInline"** %80 to i64*
  store i64 %41, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %71, i64 %73, i32 3
  store i8 0, i8* %82, align 8
  %83 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %71, i64 %73, i32 5
  %84 = bitcast %"class.blink::LayoutUnit"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %84, i8 0, i64 53, i1 false) #11
  %85 = load i32, i32* %42, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %42, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20NGBoxFragmentBuilder7BoxTypeEv(%"class.blink::NGBoxFragmentBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %47

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 5
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 8388608
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %47

13:                                               ; preds = %5
  %14 = and i96 %10, 113336795588871485128704
  %15 = icmp eq i96 %14, 75557863725914323419136
  br i1 %15, label %47, label %16

16:                                               ; preds = %13
  %17 = and i96 %10, 73786976294838206464
  %18 = icmp eq i96 %17, 0
  br i1 %18, label %34, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 5, i32 0
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = and i160 %24, 16528282690043758247936
  %26 = icmp eq i160 %25, 0
  br i1 %26, label %27, label %34, !prof !3

27:                                               ; preds = %19
  %28 = tail call zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"* %7) #11
  br i1 %28, label %47, label %29

29:                                               ; preds = %27
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  br label %34

34:                                               ; preds = %29, %16, %19
  %35 = phi i96 [ %33, %29 ], [ %10, %16 ], [ %10, %19 ]
  %36 = and i96 %35, 134217728
  %37 = icmp eq i96 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = and i96 %35, 1073741824
  %40 = icmp eq i96 %39, 0
  %41 = select i1 %40, i32 1, i32 3
  br label %47

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 20
  %44 = load i8, i8* %43, align 2, !range !2
  %45 = icmp eq i8 %44, 0
  %46 = select i1 %45, i32 0, i32 6
  br label %47

47:                                               ; preds = %5, %42, %38, %27, %13, %1
  %48 = phi i32 [ %3, %1 ], [ 4, %5 ], [ 5, %13 ], [ 7, %27 ], [ %41, %38 ], [ %46, %42 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20NGBoxFragmentBuilder23JoinedBreakBetweenValueENS_13EBreakBetweenE(%"class.blink::NGBoxFragmentBuilder"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 34
  %4 = load i32, i32* %3, align 8
  %5 = tail call i32 @_ZN5blink28JoinFragmentainerBreakValuesENS_13EBreakBetweenES0_(i32 %4, i32 %1) #11
  ret i32 %5
}

declare i32 @_ZN5blink28JoinFragmentainerBreakValuesENS_13EBreakBetweenES0_(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NGBoxFragmentBuilder28MoveChildrenInBlockDirectionENS_10LayoutUnitE(%"class.blink::NGBoxFragmentBuilder"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %150, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 35, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 35, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %1, 0
  %12 = select i1 %11, i32 -2147483648, i32 2147483647
  %13 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %10, i32 %1) #11
  %14 = extractvalue { i32, i1 } %13, 1
  %15 = extractvalue { i32, i1 } %13, 0
  %16 = select i1 %14, i32 %12, i32 %15, !prof !3
  store i32 %16, i32* %9, align 4
  br label %17

17:                                               ; preds = %4, %8
  %18 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %1, 0
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 %1) #11
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !3
  store i32 %29, i32* %22, align 4
  br label %30

30:                                               ; preds = %17, %21
  %31 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %1, 0
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %1) #11
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !3
  store i32 %42, i32* %35, align 4
  br label %43

43:                                               ; preds = %30, %34
  %44 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 14, i32 0, i32 0, i32 0
  %45 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 14, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %45, i64 %48
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %75, label %51

51:                                               ; preds = %43
  %52 = icmp slt i32 %1, 0
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = shl nuw nsw i64 %48, 4
  %55 = add nsw i64 %54, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %51, %60
  %61 = phi %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* [ %69, %60 ], [ %45, %51 ]
  %62 = phi i64 [ %70, %60 ], [ %58, %51 ]
  %63 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %61, i64 0, i32 0, i32 1, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %64, i32 %1) #11
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %53, i32 %67, !prof !3
  store i32 %68, i32* %63, align 4
  %69 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %61, i64 1
  %70 = add i64 %62, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %60, !llvm.loop !5

72:                                               ; preds = %60, %51
  %73 = phi %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* [ %45, %51 ], [ %69, %60 ]
  %74 = icmp ult i64 %55, 48
  br i1 %74, label %75, label %86

75:                                               ; preds = %72, %86, %43
  %76 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0
  %77 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %77, i64 %80
  %82 = icmp eq i32 %79, 0
  br i1 %82, label %114, label %83

83:                                               ; preds = %75
  %84 = icmp slt i32 %1, 0
  %85 = select i1 %84, i32 -2147483648, i32 2147483647
  br label %125

86:                                               ; preds = %72, %86
  %87 = phi %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* [ %112, %86 ], [ %73, %72 ]
  %88 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %87, i64 0, i32 0, i32 1, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %89, i32 %1) #11
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %53, i32 %92, !prof !3
  store i32 %93, i32* %88, align 4
  %94 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %87, i64 1, i32 0, i32 1, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %95, i32 %1) #11
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %53, i32 %98, !prof !3
  store i32 %99, i32* %94, align 4
  %100 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %87, i64 2, i32 0, i32 1, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %101, i32 %1) #11
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %53, i32 %104, !prof !3
  store i32 %105, i32* %100, align 4
  %106 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %87, i64 3, i32 0, i32 1, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %107, i32 %1) #11
  %109 = extractvalue { i32, i1 } %108, 1
  %110 = extractvalue { i32, i1 } %108, 0
  %111 = select i1 %109, i32 %53, i32 %110, !prof !3
  store i32 %111, i32* %106, align 4
  %112 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %87, i64 4
  %113 = icmp eq %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %112, %49
  br i1 %113, label %75, label %86

114:                                              ; preds = %125, %75
  %115 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %116 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 2
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %116, i64 %119
  %121 = icmp eq i32 %118, 0
  br i1 %121, label %135, label %122

122:                                              ; preds = %114
  %123 = icmp slt i32 %1, 0
  %124 = select i1 %123, i32 -2147483648, i32 2147483647
  br label %139

125:                                              ; preds = %83, %125
  %126 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %77, %83 ], [ %133, %125 ]
  %127 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %126, i64 0, i32 1, i32 0, i32 1, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %128, i32 %1) #11
  %130 = extractvalue { i32, i1 } %129, 1
  %131 = extractvalue { i32, i1 } %129, 0
  %132 = select i1 %130, i32 %85, i32 %131, !prof !3
  store i32 %132, i32* %127, align 4
  %133 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %126, i64 1
  %134 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %133, %81
  br i1 %134, label %114, label %125

135:                                              ; preds = %139, %114
  %136 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 7
  %137 = load %"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGFragmentItemsBuilder"** %136, align 8
  %138 = icmp eq %"class.blink::NGFragmentItemsBuilder"* %137, null
  br i1 %138, label %150, label %149

139:                                              ; preds = %122, %139
  %140 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %116, %122 ], [ %147, %139 ]
  %141 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %140, i64 0, i32 1, i32 0, i32 1, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %142, i32 %1) #11
  %144 = extractvalue { i32, i1 } %143, 1
  %145 = extractvalue { i32, i1 } %143, 0
  %146 = select i1 %144, i32 %124, i32 %145, !prof !3
  store i32 %146, i32* %141, align 4
  %147 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %140, i64 1
  %148 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %147, %120
  br i1 %148, label %135, label %139

149:                                              ; preds = %135
  tail call void @_ZN5blink22NGFragmentItemsBuilder28MoveChildrenInBlockDirectionENS_10LayoutUnitE(%"class.blink::NGFragmentItemsBuilder"* nonnull %137, i32 %1) #11
  br label %150

150:                                              ; preds = %149, %135, %2
  ret void
}

declare void @_ZN5blink22NGFragmentItemsBuilder28MoveChildrenInBlockDirectionENS_10LayoutUnitE(%"class.blink::NGFragmentItemsBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGLayoutResult"* @_ZN5blink20NGBoxFragmentBuilder13ToBoxFragmentENS_11WritingModeE(%"class.blink::NGBoxFragmentBuilder"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 2, i32 0
  %4 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutBox"* %4, null
  br i1 %5, label %65, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 29
  %8 = load i8, i8* %7, align 2, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %65, label %10, !prof !4

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 16
  %12 = getelementptr inbounds %class.scoped_refptr.2016, %class.scoped_refptr.2016* %11, i64 0, i32 0
  %13 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %12, align 8
  %14 = icmp eq %"class.blink::NGInlineBreakToken"* %13, null
  %15 = ptrtoint %"class.blink::NGInlineBreakToken"* %13 to i64
  br i1 %14, label %32, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 15
  %18 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 15, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 15, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %31, label %23, !prof !3

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load %class.scoped_refptr.1785*, %class.scoped_refptr.1785** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds %class.scoped_refptr.1785, %class.scoped_refptr.1785* %25, i64 %26
  %28 = bitcast %class.scoped_refptr.1785* %27 to i64*
  store i64 %15, i64* %28, align 8
  store %"class.blink::NGInlineBreakToken"* null, %"class.blink::NGInlineBreakToken"** %12, align 8
  %29 = load i32, i32* %18, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %18, align 4
  br label %32

31:                                               ; preds = %16
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink12NGBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_IKNS2_18NGInlineBreakTokenEEEEvOT_(%"class.WTF::Vector.2011"* %17, %class.scoped_refptr.2016* dereferenceable(8) %11) #11
  br label %32

32:                                               ; preds = %10, %31, %23
  %33 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 16
  %34 = load i8, i8* %33, align 2, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 15, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 16, i32 0
  %42 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %41, align 8
  %43 = icmp eq %"class.blink::NGInlineBreakToken"* %42, null
  br i1 %43, label %65, label %44

44:                                               ; preds = %40, %32, %36
  %45 = tail call %"class.blink::NGBlockBreakToken"* @_ZN5blink17NGBlockBreakToken6CreateERKNS_20NGBoxFragmentBuilderE(%"class.blink::NGBoxFragmentBuilder"* dereferenceable(640) %0) #11
  %46 = ptrtoint %"class.blink::NGBlockBreakToken"* %45 to i64
  %47 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 6
  %48 = bitcast %class.scoped_refptr.1631* %47 to i64*
  %49 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %47, i64 0, i32 0
  %50 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %49, align 8
  store i64 %46, i64* %48, align 8
  %51 = icmp eq %"class.blink::NGBreakToken"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %50, i64 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %53, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #11
  %55 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %53, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %53, i64 -2
  %60 = bitcast %"class.base::RefCounted.1633"* %59 to %"class.blink::NGBreakToken"*
  %61 = bitcast %"class.base::RefCounted.1633"* %59 to void (%"class.blink::NGBreakToken"*)***
  %62 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %62, i64 1
  %64 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %63, align 8
  tail call void %64(%"class.blink::NGBreakToken"* nonnull %60) #11
  br label %65

65:                                               ; preds = %40, %6, %2, %44, %52, %58
  %66 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 27
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %76

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 7
  %71 = load %"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGFragmentItemsBuilder"** %70, align 8
  %72 = icmp eq %"class.blink::NGFragmentItemsBuilder"* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %71, i64 0, i32 9
  %75 = load i8, i8* %74, align 2, !range !2
  store i8 %75, i8* %66, align 8
  br label %76

76:                                               ; preds = %69, %65, %73
  %77 = tail call %"class.blink::NGPhysicalBoxFragment"* @_ZN5blink21NGPhysicalBoxFragment6CreateEPNS_20NGBoxFragmentBuilderENS_11WritingModeE(%"class.blink::NGBoxFragmentBuilder"* %0, i8 zeroext %1) #11
  %78 = tail call noalias i8* @malloc(i64 64) #11
  %79 = bitcast i8* %78 to %"class.blink::NGLayoutResult"*
  %80 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %77, i64 0, i32 0
  tail call void @_ZN5blink14NGLayoutResultC1EN4base7PassKeyINS_20NGBoxFragmentBuilderEEE13scoped_refptrIKNS_18NGPhysicalFragmentEEPS3_(%"class.blink::NGLayoutResult"* %79, %"class.blink::NGPhysicalFragment"* %80, %"class.blink::NGBoxFragmentBuilder"* %0) #11
  ret %"class.blink::NGLayoutResult"* %79
}

declare %"class.blink::NGBlockBreakToken"* @_ZN5blink17NGBlockBreakToken6CreateERKNS_20NGBoxFragmentBuilderE(%"class.blink::NGBoxFragmentBuilder"* dereferenceable(640)) local_unnamed_addr #2

declare %"class.blink::NGPhysicalBoxFragment"* @_ZN5blink21NGPhysicalBoxFragment6CreateEPNS_20NGBoxFragmentBuilderENS_11WritingModeE(%"class.blink::NGBoxFragmentBuilder"*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN5blink14NGLayoutResultC1EN4base7PassKeyINS_20NGBoxFragmentBuilderEEE13scoped_refptrIKNS_18NGPhysicalFragmentEEPS3_(%"class.blink::NGLayoutResult"*, %"class.blink::NGPhysicalFragment"*, %"class.blink::NGBoxFragmentBuilder"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGLayoutResult"* @_ZN5blink20NGBoxFragmentBuilder5AbortENS_14NGLayoutResult7EStatusE(%"class.blink::NGBoxFragmentBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call noalias i8* @malloc(i64 64) #11
  %4 = bitcast i8* %3 to %"class.blink::NGLayoutResult"*
  tail call void @_ZN5blink14NGLayoutResultC1EN4base7PassKeyINS_20NGBoxFragmentBuilderEEENS0_7EStatusEPS3_(%"class.blink::NGLayoutResult"* %4, i32 %1, %"class.blink::NGBoxFragmentBuilder"* %0) #11
  ret %"class.blink::NGLayoutResult"* %4
}

declare void @_ZN5blink14NGLayoutResultC1EN4base7PassKeyINS_20NGBoxFragmentBuilderEEENS0_7EStatusEPS3_(%"class.blink::NGLayoutResult"*, i32, %"class.blink::NGBoxFragmentBuilder"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20NGBoxFragmentBuilder14GetChildOffsetEPKNS_12LayoutObjectE(%"class.blink::NGBoxFragmentBuilder"* nocapture readonly, %"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional_internal::optional_data_dtor_base.2128", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.blink::PhysicalOffset"*
  %8 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 7
  %9 = load %"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGFragmentItemsBuilder"** %8, align 8
  %10 = icmp eq %"class.blink::NGFragmentItemsBuilder"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2128", %"class.absl::optional_internal::optional_data_dtor_base.2128"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %12)
  %13 = tail call { i64, i32 } @_ZNK5blink22NGFragmentItemsBuilder16LogicalOffsetForERKNS_12LayoutObjectE(%"class.blink::NGFragmentItemsBuilder"* nonnull %9, %"class.blink::LayoutObject"* dereferenceable(88) %1) #11
  %14 = extractvalue { i64, i32 } %13, 0
  %15 = extractvalue { i64, i32 } %13, 1
  %16 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.2128"* %3 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2128", %"class.absl::optional_internal::optional_data_dtor_base.2128"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 %15, i32* %17, align 8
  %18 = trunc i64 %14 to i8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %12)
  br label %28

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2128", %"class.absl::optional_internal::optional_data_dtor_base.2128"* %3, i64 0, i32 1
  %23 = bitcast %union.anon.2129* %22 to i64*
  %24 = load i64, i64* %23, align 4
  %25 = trunc i64 %24 to i32
  %26 = lshr i64 %24, 32
  %27 = trunc i64 %26 to i32
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %12)
  br label %139

28:                                               ; preds = %20, %2
  %29 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 14, i32 0, i32 0, i32 0
  %30 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 14, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %30, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %139, label %36

36:                                               ; preds = %28
  %37 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  %38 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %39 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  %40 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %41 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  %42 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  br label %43

43:                                               ; preds = %36, %136
  %44 = phi %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* [ %30, %36 ], [ %137, %136 ]
  %45 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %44, i64 0, i32 1, i32 0
  %46 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %46, i64 0, i32 3
  %48 = bitcast i24* %47 to i32*
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 64
  %51 = icmp eq i32 %50, 0
  %52 = and i32 %49, 960
  %53 = icmp ne i32 %52, 256
  %54 = and i1 %51, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %46, i64 0, i32 1
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %56, align 8
  br label %58

58:                                               ; preds = %43, %55
  %59 = phi %"class.blink::LayoutObject"* [ %57, %55 ], [ null, %43 ]
  %60 = icmp eq %"class.blink::LayoutObject"* %59, %1
  br i1 %60, label %61, label %67

61:                                               ; preds = %58
  %62 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %44 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = trunc i64 %63 to i32
  %65 = lshr i64 %63, 32
  %66 = trunc i64 %65 to i32
  br label %139

67:                                               ; preds = %58
  br i1 %51, label %136, label %68

68:                                               ; preds = %67
  %69 = call { i64, %"struct.blink::NGLink"* } @_ZNK5blink18NGPhysicalFragment8ChildrenEv(%"class.blink::NGPhysicalFragment"* %46) #11
  %70 = extractvalue { i64, %"struct.blink::NGLink"* } %69, 0
  %71 = extractvalue { i64, %"struct.blink::NGLink"* } %69, 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %72 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %71, i64 %70
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"struct.blink::NGLink"* %71, %"struct.blink::NGLink"* %71, %"struct.blink::NGLink"* %72) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"struct.blink::NGLink"* %71, %"struct.blink::NGLink"* %72, %"struct.blink::NGLink"* %72) #11
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #11
  %73 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %38, align 8
  %74 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %40, align 8
  %75 = icmp eq %"struct.blink::NGLink"* %73, %74
  br i1 %75, label %99, label %76

76:                                               ; preds = %68, %94
  %77 = call dereferenceable(16) %"struct.blink::NGLink"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  %78 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %77, i64 0, i32 0
  %79 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %79, i64 0, i32 3
  %81 = bitcast i24* %80 to i32*
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, 64
  %84 = icmp eq i32 %83, 0
  %85 = and i32 %82, 960
  %86 = icmp ne i32 %85, 256
  %87 = and i1 %84, %86
  br i1 %87, label %88, label %91

88:                                               ; preds = %76
  %89 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %79, i64 0, i32 1
  %90 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %89, align 8
  br label %91

91:                                               ; preds = %76, %88
  %92 = phi %"class.blink::LayoutObject"* [ %90, %88 ], [ null, %76 ]
  %93 = icmp eq %"class.blink::LayoutObject"* %92, %1
  br i1 %93, label %100, label %94

94:                                               ; preds = %91
  %95 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #11
  %96 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %38, align 8
  %97 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %40, align 8
  %98 = icmp eq %"struct.blink::NGLink"* %96, %97
  br i1 %98, label %99, label %76

99:                                               ; preds = %94, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  br label %136

100:                                              ; preds = %91
  %101 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %77, i64 0, i32 0
  %102 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #11
  %103 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %77, i64 0, i32 1
  %104 = bitcast %"struct.blink::PhysicalOffset"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  store i64 %105, i64* %6, align 8
  %106 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %107 = bitcast %"class.blink::WritingDirectionMode"* %106 to i16*
  %108 = load i16, i16* %107, align 8
  %109 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %46, i64 0, i32 2
  %110 = bitcast %"struct.blink::PhysicalSize"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %101, align 8
  %113 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %112, i64 0, i32 2
  %114 = bitcast %"struct.blink::PhysicalSize"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = call i64 @_ZNK5blink14PhysicalOffset16ConvertToLogicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::PhysicalOffset"* nonnull %7, i16 %108, i64 %111, i64 %115) #11
  %117 = trunc i64 %116 to i32
  %118 = lshr i64 %116, 32
  %119 = trunc i64 %118 to i32
  %120 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %44, i64 0, i32 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp slt i32 %117, 0
  %123 = select i1 %122, i32 -2147483648, i32 2147483647
  %124 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %121, i32 %117) #11
  %125 = extractvalue { i32, i1 } %124, 1
  %126 = extractvalue { i32, i1 } %124, 0
  %127 = select i1 %125, i32 %123, i32 %126, !prof !3
  %128 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %44, i64 0, i32 0, i32 1, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp slt i32 %119, 0
  %131 = select i1 %130, i32 -2147483648, i32 2147483647
  %132 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %129, i32 %119) #11
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  br label %139

136:                                              ; preds = %67, %99
  %137 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %44, i64 1
  %138 = icmp eq %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %137, %34
  br i1 %138, label %139, label %43

139:                                              ; preds = %136, %28, %100, %61, %21
  %140 = phi i32 [ %25, %21 ], [ %127, %100 ], [ %64, %61 ], [ 0, %28 ], [ 0, %136 ]
  %141 = phi i32 [ %27, %21 ], [ %135, %100 ], [ %66, %61 ], [ 0, %28 ], [ 0, %136 ]
  %142 = zext i32 %141 to i64
  %143 = shl nuw i64 %142, 32
  %144 = zext i32 %140 to i64
  %145 = or i64 %143, %144
  ret i64 %145
}

declare { i64, i32 } @_ZNK5blink22NGFragmentItemsBuilder16LogicalOffsetForERKNS_12LayoutObjectE(%"class.blink::NGFragmentItemsBuilder"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #2

declare { i64, %"struct.blink::NGLink"* } @_ZNK5blink18NGPhysicalFragment8ChildrenEv(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::NGLink"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %11 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %12 = icmp eq %"struct.blink::NGLink"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %17 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %26 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  ret %"struct.blink::NGLink"* %26
}

declare i64 @_ZNK5blink14PhysicalOffset16ConvertToLogicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::PhysicalOffset"*, i16, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %11 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %12 = icmp eq %"struct.blink::NGLink"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %17 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %26 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %27 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %26, i64 1
  store %"struct.blink::NGLink"* %27, %"struct.blink::NGLink"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NGBoxFragmentBuilder30ComputeInlineContainerGeometryEPN3WTF7HashMapIPKNS_12LayoutObjectEN4absl8optionalINS0_29InlineContainingBlockGeometryEEENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEE(%"class.blink::NGBoxFragmentBuilder"* nocapture readonly, %"class.WTF::HashMap.2132"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutObject"*, align 8
  %4 = alloca %"struct.std::__1::pair.2147", align 8
  %5 = alloca %"struct.blink::PhysicalRect", align 8
  %6 = alloca %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry", align 4
  %7 = alloca %"class.base::CheckedContiguousIterator.2279", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator.2279", align 8
  %9 = alloca %"class.blink::LayoutObject"*, align 8
  %10 = alloca %"struct.std::__1::pair.2147", align 8
  %11 = alloca %"struct.blink::PhysicalRect", align 8
  %12 = alloca %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry", align 4
  %13 = alloca %"class.WTF::HashMap.2142", align 8
  %14 = alloca i64, align 8
  %15 = bitcast i64* %14 to %"struct.blink::PhysicalSize"*
  %16 = getelementptr inbounds %"class.WTF::HashMap.2132", %"class.WTF::HashMap.2132"* %1, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %500, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.WTF::HashMap.2142"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.WTF::HashMap.2142", %"class.WTF::HashMap.2142"* %13, i64 0, i32 0, i32 0
  %22 = bitcast %"class.WTF::HashMap.2142"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 20, i1 false) #11
  %23 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 7
  %24 = load %"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGFragmentItemsBuilder"** %23, align 8
  %25 = icmp eq %"class.blink::NGFragmentItemsBuilder"* %24, null
  br i1 %25, label %208, label %26

26:                                               ; preds = %19
  %27 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 4, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = select i1 %30, i32 %34, i32 %32
  %36 = select i1 %30, i32 %32, i32 %34
  %37 = zext i32 %35 to i64
  %38 = shl nuw i64 %37, 32
  %39 = zext i32 %36 to i64
  %40 = or i64 %38, %39
  store i64 %40, i64* %14, align 8
  %41 = call dereferenceable(9232) %"class.WTF::Vector.2017"* @_ZN5blink22NGFragmentItemsBuilder5ItemsERKNS_12PhysicalSizeE(%"class.blink::NGFragmentItemsBuilder"* nonnull %24, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %15) #11
  %42 = getelementptr inbounds %"class.WTF::Vector.2017", %"class.WTF::Vector.2017"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::Vector.2017", %"class.WTF::Vector.2017"* %41, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %43, i64 %46
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %207, label %49

49:                                               ; preds = %26
  %50 = bitcast %"class.blink::LayoutObject"** %3 to i8*
  %51 = bitcast %"class.blink::LayoutObject"** %3 to i1 (%"class.blink::LayoutObject"*)****
  %52 = getelementptr inbounds %"class.WTF::HashMap.2132", %"class.WTF::HashMap.2132"* %1, i64 0, i32 0
  %53 = getelementptr inbounds %"class.WTF::HashMap.2132", %"class.WTF::HashMap.2132"* %1, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.WTF::HashMap.2132", %"class.WTF::HashMap.2132"* %1, i64 0, i32 0, i32 1
  %55 = bitcast %"struct.std::__1::pair.2147"* %4 to i8*
  %56 = getelementptr inbounds %"class.WTF::HashMap.2142", %"class.WTF::HashMap.2142"* %13, i64 0, i32 0
  %57 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  %58 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 0, i32 1, i32 0
  %60 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  %61 = bitcast %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry"* %6 to i8*
  %62 = getelementptr inbounds %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry", %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry"* %6, i64 0, i32 1
  %63 = bitcast %"struct.blink::PhysicalRect"* %62 to i8*
  %64 = bitcast %"class.blink::LayoutObject"** %3 to i64*
  br label %65

65:                                               ; preds = %203, %49
  %66 = phi %"class.blink::NGPhysicalLineBoxFragment"* [ null, %49 ], [ %204, %203 ]
  %67 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %43, %49 ], [ %205, %203 ]
  %68 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %67, i64 0, i32 0, i32 6
  %69 = load i16, i16* %68, align 8
  %70 = and i16 %69, 7
  switch i16 %70, label %203 [
    i16 3, label %71
    i16 4, label %77
  ]

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %67, i64 0, i32 0, i32 1
  %73 = bitcast %union.anon.2020* %72 to %"class.blink::NGPhysicalLineBoxFragment"**
  %74 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %73, align 8
  %75 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %74, null
  %76 = select i1 %75, %"class.blink::NGPhysicalLineBoxFragment"* %66, %"class.blink::NGPhysicalLineBoxFragment"* %74
  br label %203

77:                                               ; preds = %65
  %78 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %67, i64 0, i32 0, i32 1
  %79 = bitcast %union.anon.2020* %78 to %"class.blink::NGPhysicalBoxFragment"**
  %80 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %79, align 8
  %81 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %80, null
  br i1 %81, label %203, label %82

82:                                               ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %3, align 8
  %83 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %80, i64 0, i32 0, i32 3
  %84 = bitcast i24* %83 to i32*
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 64
  %87 = icmp eq i32 %86, 0
  %88 = and i32 %85, 960
  %89 = icmp ne i32 %88, 256
  %90 = and i1 %87, %89
  br i1 %90, label %91, label %95

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %80, i64 0, i32 0, i32 1
  %93 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %92, align 8
  %94 = bitcast %"class.blink::LayoutObject"* %93 to i1 (%"class.blink::LayoutObject"*)***
  br label %95

95:                                               ; preds = %82, %91
  %96 = phi i1 (%"class.blink::LayoutObject"*)*** [ %94, %91 ], [ null, %82 ]
  %97 = phi %"class.blink::LayoutObject"* [ %93, %91 ], [ null, %82 ]
  store i1 (%"class.blink::LayoutObject"*)*** %96, i1 (%"class.blink::LayoutObject"*)**** %51, align 8
  %98 = bitcast %"class.blink::LayoutObject"* %97 to i1 (%"class.blink::LayoutObject"*)***
  %99 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %98, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %99, i64 26
  %101 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %100, align 8
  %102 = call zeroext i1 %101(%"class.blink::LayoutObject"* %97) #11
  br i1 %102, label %103, label %132

103:                                              ; preds = %95
  %104 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %104, i64 0, i32 4
  %106 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %105 to i96*
  %107 = load i96, i96* %106, align 4
  %108 = and i96 %107, 16777216
  %109 = icmp eq i96 %108, 0
  br i1 %109, label %110, label %132

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %104, i64 0, i32 6, i32 0, i32 0
  %112 = load %"class.blink::Node"*, %"class.blink::Node"** %111, align 8
  %113 = icmp eq %"class.blink::Node"* %112, null
  br i1 %113, label %132, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %112, i64 0, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %112, i64 0, i32 6, i32 0, i32 0
  br i1 %118, label %124, label %120

120:                                              ; preds = %114
  %121 = bitcast %"class.blink::NodeData"** %119 to %"class.blink::NodeRareData"**
  %122 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %122, i64 0, i32 1, i32 0, i32 0
  br label %126

124:                                              ; preds = %114
  %125 = bitcast %"class.blink::NodeData"** %119 to %"class.blink::NodeRenderingData"**
  br label %126

126:                                              ; preds = %124, %120
  %127 = phi %"class.blink::NodeRenderingData"** [ %123, %120 ], [ %125, %124 ]
  %128 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %128, i64 0, i32 1
  %130 = bitcast %"class.blink::LayoutObject"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %64, align 8
  br label %132

132:                                              ; preds = %126, %110, %103, %95
  %133 = call { %"struct.WTF::KeyValuePair.2136"*, %"struct.WTF::KeyValuePair.2136"* } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.2133"* %52, %"class.blink::LayoutObject"** nonnull dereferenceable(8) %3) #11
  %134 = extractvalue { %"struct.WTF::KeyValuePair.2136"*, %"struct.WTF::KeyValuePair.2136"* } %133, 0
  %135 = load %"struct.WTF::KeyValuePair.2136"*, %"struct.WTF::KeyValuePair.2136"** %53, align 8
  %136 = load i32, i32* %54, align 8
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %135, i64 %137
  %139 = icmp eq %"struct.WTF::KeyValuePair.2136"* %134, %138
  br i1 %139, label %202, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %134, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #11
  %142 = call { %"struct.WTF::KeyValuePair.2146"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISK_SF_SL_EERS4_SB_EENS_18HashTableAddResultISM_SC_EEOT0_OT1_(%"class.WTF::HashTable.2143"* nonnull %56, %"class.blink::LayoutObject"** nonnull dereferenceable(8) %3, %"struct.std::__1::pair.2147"* nonnull dereferenceable(16) %4) #11
  %143 = extractvalue { %"struct.WTF::KeyValuePair.2146"*, i8 } %142, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #11
  %144 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %67, i64 0, i32 0, i32 2
  %145 = bitcast %"struct.blink::PhysicalRect"* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* align 4 %145, i64 16, i1 false) #11
  %146 = load i32, i32* %58, align 8
  %147 = load i32, i32* %59, align 4
  %148 = zext i32 %147 to i64
  %149 = shl nuw i64 %148, 32
  %150 = zext i32 %146 to i64
  %151 = or i64 %149, %150
  store i64 %151, i64* %60, align 8
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %143, i64 0, i32 1, i32 0
  %153 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %152, align 8
  %154 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %153, %66
  br i1 %154, label %155, label %162

155:                                              ; preds = %140
  %156 = getelementptr inbounds %"class.absl::optional.2137", %"class.absl::optional.2137"* %141, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8, i8* %156, align 4, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %159, label %160, !prof !3

159:                                              ; preds = %155
  call void @llvm.trap() #11
  unreachable

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %134, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* %161, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5) #11
  br label %176

162:                                              ; preds = %140
  %163 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %153, null
  br i1 %163, label %164, label %176

164:                                              ; preds = %162
  store %"class.blink::NGPhysicalLineBoxFragment"* %66, %"class.blink::NGPhysicalLineBoxFragment"** %152, align 8
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %143, i64 0, i32 1, i32 1
  store %"class.blink::NGPhysicalLineBoxFragment"* %66, %"class.blink::NGPhysicalLineBoxFragment"** %165, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %61)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* nonnull align 8 %57, i64 16, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* nonnull align 8 %57, i64 16, i1 false) #11
  %166 = getelementptr inbounds %"class.absl::optional.2137", %"class.absl::optional.2137"* %141, i64 0, i32 0, i32 0, i32 0, i32 0
  %167 = load i8, i8* %166, align 4, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %172, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %134, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %171 = bitcast %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry"* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* nonnull align 4 %61, i64 32, i1 false) #11
  br label %175

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %134, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %174 = bitcast %union.anon.2141* %173 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* nonnull align 4 %61, i64 32, i1 false) #11
  store i8 1, i8* %166, align 4
  br label %175

175:                                              ; preds = %172, %169
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %61)
  br label %176

176:                                              ; preds = %175, %162, %160
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %143, i64 0, i32 1, i32 1
  %178 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %177, align 8
  %179 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %178, %66
  br i1 %179, label %180, label %187

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.absl::optional.2137", %"class.absl::optional.2137"* %141, i64 0, i32 0, i32 0, i32 0, i32 0
  %182 = load i8, i8* %181, align 4, !range !2
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %184, label %185, !prof !3

184:                                              ; preds = %180
  call void @llvm.trap() #11
  unreachable

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %134, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* %186, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5) #11
  br label %201

187:                                              ; preds = %176
  %188 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %66, i64 0, i32 0, i32 3
  %189 = bitcast i24* %188 to i32*
  %190 = load i32, i32* %189, align 8
  %191 = and i32 %190, 896
  %192 = icmp eq i32 %191, 128
  br i1 %192, label %201, label %193

193:                                              ; preds = %187
  store %"class.blink::NGPhysicalLineBoxFragment"* %66, %"class.blink::NGPhysicalLineBoxFragment"** %177, align 8
  %194 = getelementptr inbounds %"class.absl::optional.2137", %"class.absl::optional.2137"* %141, i64 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i8, i8* %194, align 4, !range !2
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %197, label %198, !prof !3

197:                                              ; preds = %193
  call void @llvm.trap() #11
  unreachable

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %134, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %200 = bitcast %"struct.blink::PhysicalRect"* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* nonnull align 8 %57, i64 16, i1 false) #11
  br label %201

201:                                              ; preds = %198, %187, %185
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #11
  br label %202

202:                                              ; preds = %201, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  br label %203

203:                                              ; preds = %202, %77, %71, %65
  %204 = phi %"class.blink::NGPhysicalLineBoxFragment"* [ %66, %202 ], [ %66, %77 ], [ %76, %71 ], [ %66, %65 ]
  %205 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %67, i64 1
  %206 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %205, %47
  br i1 %206, label %207, label %65

207:                                              ; preds = %203, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %494

208:                                              ; preds = %19
  %209 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 14, i32 0, i32 0, i32 0
  %210 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %209, align 8
  %211 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 14, i32 0, i32 0, i32 2
  %212 = load i32, i32* %211, align 4
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %210, i64 %213
  %215 = icmp eq i32 %212, 0
  br i1 %215, label %494, label %216

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %218 = bitcast %"class.blink::WritingDirectionMode"* %217 to i16*
  %219 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0
  %220 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 4, i32 1, i32 0
  %221 = bitcast %"class.base::CheckedContiguousIterator.2279"* %7 to i8*
  %222 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2279", %"class.base::CheckedContiguousIterator.2279"* %7, i64 0, i32 1
  %223 = bitcast %"class.base::CheckedContiguousIterator.2279"* %8 to i8*
  %224 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2279", %"class.base::CheckedContiguousIterator.2279"* %8, i64 0, i32 1
  %225 = bitcast %"class.blink::LayoutObject"** %9 to i8*
  %226 = bitcast %"class.blink::LayoutObject"** %9 to i1 (%"class.blink::LayoutObject"*)****
  %227 = getelementptr inbounds %"class.WTF::HashMap.2132", %"class.WTF::HashMap.2132"* %1, i64 0, i32 0
  %228 = getelementptr inbounds %"class.WTF::HashMap.2132", %"class.WTF::HashMap.2132"* %1, i64 0, i32 0, i32 0
  %229 = getelementptr inbounds %"class.WTF::HashMap.2132", %"class.WTF::HashMap.2132"* %1, i64 0, i32 0, i32 1
  %230 = bitcast %"struct.std::__1::pair.2147"* %10 to i8*
  %231 = getelementptr inbounds %"class.WTF::HashMap.2142", %"class.WTF::HashMap.2142"* %13, i64 0, i32 0
  %232 = bitcast %"struct.blink::PhysicalRect"* %11 to i8*
  %233 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 0, i32 0, i32 0
  %234 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 0, i32 1, i32 0
  %235 = bitcast %"struct.blink::PhysicalRect"* %11 to i64*
  %236 = bitcast %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry"* %12 to i8*
  %237 = getelementptr inbounds %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry", %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry"* %12, i64 0, i32 1
  %238 = bitcast %"struct.blink::PhysicalRect"* %237 to i8*
  %239 = bitcast %"class.blink::LayoutObject"** %9 to i64*
  br label %240

240:                                              ; preds = %216, %491
  %241 = phi %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* [ %210, %216 ], [ %492, %491 ]
  %242 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %241, i64 0, i32 1, i32 0
  %243 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %242, align 8
  %244 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %243, i64 0, i32 3
  %245 = bitcast i24* %244 to i32*
  %246 = load i32, i32* %245, align 8
  %247 = and i32 %246, 64
  %248 = icmp eq i32 %247, 0
  %249 = and i32 %246, 960
  %250 = icmp ne i32 %249, 256
  %251 = and i1 %248, %250
  br i1 %251, label %252, label %491

252:                                              ; preds = %240
  %253 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %243, i64 0, i32 1
  %254 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %253, align 8
  %255 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %254, i64 0, i32 4
  %256 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %255 to i96*
  %257 = load i96, i96* %256, align 4
  %258 = and i96 %257, 16777216
  %259 = icmp eq i96 %258, 0
  br i1 %259, label %491, label %260

260:                                              ; preds = %252
  %261 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %254, i64 0, i32 5, i32 0
  %262 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %261, align 8
  %263 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %262, i64 0, i32 0, i32 9
  %264 = bitcast [20 x i8]* %263 to i160*
  %265 = load i160, i160* %264, align 8
  %266 = lshr i160 %265, 32
  %267 = trunc i160 %266 to i32
  %268 = and i32 %267, 31
  switch i32 %268, label %491 [
    i32 1, label %269
    i32 14, label %269
  ]

269:                                              ; preds = %260, %260
  %270 = and i160 %265, 2113929216
  %271 = icmp eq i160 %270, 0
  br i1 %271, label %272, label %491

272:                                              ; preds = %269
  %273 = bitcast %"class.blink::LayoutObject"* %254 to i1 (%"class.blink::LayoutObject"*)***
  %274 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %273, align 8
  %275 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %274, i64 23
  %276 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %275, align 8
  %277 = call zeroext i1 %276(%"class.blink::LayoutObject"* %254) #11
  br i1 %277, label %278, label %491

278:                                              ; preds = %272
  %279 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %273, align 8
  %280 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %279, i64 25
  %281 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %280, align 8
  %282 = call zeroext i1 %281(%"class.blink::LayoutObject"* %254) #11
  br i1 %282, label %491, label %283

283:                                              ; preds = %278
  %284 = bitcast %"class.blink::LayoutObject"* %254 to i1 (%"class.blink::LayoutObject"*, i32)***
  %285 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %284, align 8
  %286 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %285, i64 92
  %287 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %286, align 8
  %288 = call zeroext i1 %287(%"class.blink::LayoutObject"* %254, i32 20) #11
  br i1 %288, label %491, label %289

289:                                              ; preds = %283
  %290 = bitcast %"class.blink::NGPhysicalFragment"** %242 to %"class.blink::NGPhysicalBoxFragment"**
  %291 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %290, align 8
  %292 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %291, i64 0, i32 1
  %293 = bitcast i24* %292 to i32*
  %294 = load i32, i32* %293, align 8
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %491, label %297

297:                                              ; preds = %289
  %298 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %291, i64 0, i32 2
  %299 = load i32, i32* %298, align 4
  %300 = zext i32 %299 to i64
  %301 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %291, i64 0, i32 6, i64 %300
  %302 = icmp eq %"struct.blink::NGLink"* %301, null
  br i1 %302, label %491, label %303

303:                                              ; preds = %297
  %304 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %241, i64 0, i32 0
  %305 = load i16, i16* %218, align 8
  %306 = trunc i16 %305 to i8
  %307 = icmp eq i8 %306, 0
  %308 = load i32, i32* %219, align 4
  %309 = load i32, i32* %220, align 4
  %310 = select i1 %307, i32 %309, i32 %308
  %311 = select i1 %307, i32 %308, i32 %309
  %312 = zext i32 %310 to i64
  %313 = shl nuw i64 %312, 32
  %314 = zext i32 %311 to i64
  %315 = or i64 %313, %314
  %316 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %291, i64 0, i32 0, i32 2
  %317 = bitcast %"struct.blink::PhysicalSize"* %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = call i64 @_ZNK5blink13LogicalOffset17ConvertToPhysicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::LogicalOffset"* %304, i16 %305, i64 %315, i64 %318) #11
  %320 = trunc i64 %319 to i32
  %321 = lshr i64 %319, 32
  %322 = trunc i64 %321 to i32
  %323 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %301, i64 1, i32 1
  %324 = bitcast %"struct.blink::PhysicalOffset"* %323 to %"class.blink::NGFragmentItem"*
  %325 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %301, i64 1
  %326 = bitcast %"struct.blink::NGLink"* %325 to i32*
  %327 = load i32, i32* %326, align 8
  %328 = zext i32 %327 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %221, i8 -86, i64 24, i1 false) #11
  %329 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %324, i64 %328
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.2279"* nonnull %7, %"class.blink::NGFragmentItem"* %324, %"class.blink::NGFragmentItem"* %324, %"class.blink::NGFragmentItem"* %329) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %223, i8 -86, i64 24, i1 false) #11
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.2279"* nonnull %8, %"class.blink::NGFragmentItem"* %324, %"class.blink::NGFragmentItem"* %329, %"class.blink::NGFragmentItem"* %329) #11
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.2279"* nonnull %7, %"class.base::CheckedContiguousIterator.2279"* nonnull dereferenceable(24) %8) #11
  %330 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %222, align 8
  %331 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %224, align 8
  %332 = icmp eq %"class.blink::NGFragmentItem"* %330, %331
  br i1 %332, label %490, label %333

333:                                              ; preds = %303
  %334 = icmp slt i32 %320, 0
  %335 = select i1 %334, i32 -2147483648, i32 2147483647
  %336 = icmp slt i32 %322, 0
  %337 = select i1 %336, i32 -2147483648, i32 2147483647
  br label %338

338:                                              ; preds = %484, %333
  %339 = phi %"class.blink::NGPhysicalLineBoxFragment"* [ null, %333 ], [ %485, %484 ]
  %340 = call dereferenceable(64) %"class.blink::NGFragmentItem"* @_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEdeEv(%"class.base::CheckedContiguousIterator.2279"* nonnull %7) #11
  %341 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %340, i64 0, i32 6
  %342 = load i16, i16* %341, align 8
  %343 = and i16 %342, 7
  switch i16 %343, label %484 [
    i16 3, label %344
    i16 4, label %350
  ]

344:                                              ; preds = %338
  %345 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %340, i64 0, i32 1
  %346 = bitcast %union.anon.2020* %345 to %"class.blink::NGPhysicalLineBoxFragment"**
  %347 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %346, align 8
  %348 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %347, null
  %349 = select i1 %348, %"class.blink::NGPhysicalLineBoxFragment"* %339, %"class.blink::NGPhysicalLineBoxFragment"* %347
  br label %484

350:                                              ; preds = %338
  %351 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %340, i64 0, i32 1
  %352 = bitcast %union.anon.2020* %351 to %"class.blink::NGPhysicalBoxFragment"**
  %353 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %352, align 8
  %354 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %353, null
  br i1 %354, label %484, label %355

355:                                              ; preds = %350
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225) #11
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %9, align 8
  %356 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %353, i64 0, i32 0, i32 3
  %357 = bitcast i24* %356 to i32*
  %358 = load i32, i32* %357, align 8
  %359 = and i32 %358, 64
  %360 = icmp eq i32 %359, 0
  %361 = and i32 %358, 960
  %362 = icmp ne i32 %361, 256
  %363 = and i1 %360, %362
  br i1 %363, label %364, label %368

364:                                              ; preds = %355
  %365 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %353, i64 0, i32 0, i32 1
  %366 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %365, align 8
  %367 = bitcast %"class.blink::LayoutObject"* %366 to i1 (%"class.blink::LayoutObject"*)***
  br label %368

368:                                              ; preds = %355, %364
  %369 = phi i1 (%"class.blink::LayoutObject"*)*** [ %367, %364 ], [ null, %355 ]
  %370 = phi %"class.blink::LayoutObject"* [ %366, %364 ], [ null, %355 ]
  store i1 (%"class.blink::LayoutObject"*)*** %369, i1 (%"class.blink::LayoutObject"*)**** %226, align 8
  %371 = bitcast %"class.blink::LayoutObject"* %370 to i1 (%"class.blink::LayoutObject"*)***
  %372 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %371, align 8
  %373 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %372, i64 26
  %374 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %373, align 8
  %375 = call zeroext i1 %374(%"class.blink::LayoutObject"* %370) #11
  br i1 %375, label %376, label %405

376:                                              ; preds = %368
  %377 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %378 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %377, i64 0, i32 4
  %379 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %378 to i96*
  %380 = load i96, i96* %379, align 4
  %381 = and i96 %380, 16777216
  %382 = icmp eq i96 %381, 0
  br i1 %382, label %383, label %405

383:                                              ; preds = %376
  %384 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %377, i64 0, i32 6, i32 0, i32 0
  %385 = load %"class.blink::Node"*, %"class.blink::Node"** %384, align 8
  %386 = icmp eq %"class.blink::Node"* %385, null
  br i1 %386, label %405, label %387

387:                                              ; preds = %383
  %388 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %385, i64 0, i32 1
  %389 = load i32, i32* %388, align 8
  %390 = and i32 %389, 1
  %391 = icmp eq i32 %390, 0
  %392 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %385, i64 0, i32 6, i32 0, i32 0
  br i1 %391, label %397, label %393

393:                                              ; preds = %387
  %394 = bitcast %"class.blink::NodeData"** %392 to %"class.blink::NodeRareData"**
  %395 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %394, align 8
  %396 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %395, i64 0, i32 1, i32 0, i32 0
  br label %399

397:                                              ; preds = %387
  %398 = bitcast %"class.blink::NodeData"** %392 to %"class.blink::NodeRenderingData"**
  br label %399

399:                                              ; preds = %397, %393
  %400 = phi %"class.blink::NodeRenderingData"** [ %396, %393 ], [ %398, %397 ]
  %401 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %400, align 8
  %402 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %401, i64 0, i32 1
  %403 = bitcast %"class.blink::LayoutObject"** %402 to i64*
  %404 = load i64, i64* %403, align 8
  store i64 %404, i64* %239, align 8
  br label %405

405:                                              ; preds = %399, %383, %376, %368
  %406 = call { %"struct.WTF::KeyValuePair.2136"*, %"struct.WTF::KeyValuePair.2136"* } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.2133"* %227, %"class.blink::LayoutObject"** nonnull dereferenceable(8) %9) #11
  %407 = extractvalue { %"struct.WTF::KeyValuePair.2136"*, %"struct.WTF::KeyValuePair.2136"* } %406, 0
  %408 = load %"struct.WTF::KeyValuePair.2136"*, %"struct.WTF::KeyValuePair.2136"** %228, align 8
  %409 = load i32, i32* %229, align 8
  %410 = zext i32 %409 to i64
  %411 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %408, i64 %410
  %412 = icmp eq %"struct.WTF::KeyValuePair.2136"* %407, %411
  br i1 %412, label %483, label %413

413:                                              ; preds = %405
  %414 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %407, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %230) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %230, i8 0, i64 16, i1 false) #11
  %415 = call { %"struct.WTF::KeyValuePair.2146"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISK_SF_SL_EERS4_SB_EENS_18HashTableAddResultISM_SC_EEOT0_OT1_(%"class.WTF::HashTable.2143"* nonnull %231, %"class.blink::LayoutObject"** nonnull dereferenceable(8) %9, %"struct.std::__1::pair.2147"* nonnull dereferenceable(16) %10) #11
  %416 = extractvalue { %"struct.WTF::KeyValuePair.2146"*, i8 } %415, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %230) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %232) #11
  %417 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %340, i64 0, i32 2
  %418 = bitcast %"struct.blink::PhysicalRect"* %417 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %232, i8* align 4 %418, i64 16, i1 false) #11
  %419 = load i32, i32* %233, align 8
  %420 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %419, i32 %320) #11
  %421 = extractvalue { i32, i1 } %420, 1
  %422 = extractvalue { i32, i1 } %420, 0
  %423 = select i1 %421, i32 %335, i32 %422, !prof !3
  %424 = load i32, i32* %234, align 4
  %425 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %424, i32 %322) #11
  %426 = extractvalue { i32, i1 } %425, 1
  %427 = extractvalue { i32, i1 } %425, 0
  %428 = select i1 %426, i32 %337, i32 %427, !prof !3
  %429 = zext i32 %428 to i64
  %430 = shl nuw i64 %429, 32
  %431 = zext i32 %423 to i64
  %432 = or i64 %430, %431
  store i64 %432, i64* %235, align 8
  %433 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %416, i64 0, i32 1, i32 0
  %434 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %433, align 8
  %435 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %434, %339
  br i1 %435, label %436, label %443

436:                                              ; preds = %413
  %437 = getelementptr inbounds %"class.absl::optional.2137", %"class.absl::optional.2137"* %414, i64 0, i32 0, i32 0, i32 0, i32 0
  %438 = load i8, i8* %437, align 4, !range !2
  %439 = icmp eq i8 %438, 0
  br i1 %439, label %440, label %441, !prof !3

440:                                              ; preds = %436
  call void @llvm.trap() #11
  unreachable

441:                                              ; preds = %436
  %442 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %407, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* %442, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %11) #11
  br label %457

443:                                              ; preds = %413
  %444 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %434, null
  br i1 %444, label %445, label %457

445:                                              ; preds = %443
  store %"class.blink::NGPhysicalLineBoxFragment"* %339, %"class.blink::NGPhysicalLineBoxFragment"** %433, align 8
  %446 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %416, i64 0, i32 1, i32 1
  store %"class.blink::NGPhysicalLineBoxFragment"* %339, %"class.blink::NGPhysicalLineBoxFragment"** %446, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %236)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %236, i8* nonnull align 8 %232, i64 16, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %238, i8* nonnull align 8 %232, i64 16, i1 false) #11
  %447 = getelementptr inbounds %"class.absl::optional.2137", %"class.absl::optional.2137"* %414, i64 0, i32 0, i32 0, i32 0, i32 0
  %448 = load i8, i8* %447, align 4, !range !2
  %449 = icmp eq i8 %448, 0
  br i1 %449, label %453, label %450

450:                                              ; preds = %445
  %451 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %407, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %452 = bitcast %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry"* %451 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %452, i8* nonnull align 4 %236, i64 32, i1 false) #11
  br label %456

453:                                              ; preds = %445
  %454 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %407, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %455 = bitcast %union.anon.2141* %454 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %455, i8* nonnull align 4 %236, i64 32, i1 false) #11
  store i8 1, i8* %447, align 4
  br label %456

456:                                              ; preds = %453, %450
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %236)
  br label %457

457:                                              ; preds = %456, %443, %441
  %458 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %416, i64 0, i32 1, i32 1
  %459 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %458, align 8
  %460 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %459, %339
  br i1 %460, label %461, label %468

461:                                              ; preds = %457
  %462 = getelementptr inbounds %"class.absl::optional.2137", %"class.absl::optional.2137"* %414, i64 0, i32 0, i32 0, i32 0, i32 0
  %463 = load i8, i8* %462, align 4, !range !2
  %464 = icmp eq i8 %463, 0
  br i1 %464, label %465, label %466, !prof !3

465:                                              ; preds = %461
  call void @llvm.trap() #11
  unreachable

466:                                              ; preds = %461
  %467 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %407, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* %467, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %11) #11
  br label %482

468:                                              ; preds = %457
  %469 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %339, i64 0, i32 0, i32 3
  %470 = bitcast i24* %469 to i32*
  %471 = load i32, i32* %470, align 8
  %472 = and i32 %471, 896
  %473 = icmp eq i32 %472, 128
  br i1 %473, label %482, label %474

474:                                              ; preds = %468
  store %"class.blink::NGPhysicalLineBoxFragment"* %339, %"class.blink::NGPhysicalLineBoxFragment"** %458, align 8
  %475 = getelementptr inbounds %"class.absl::optional.2137", %"class.absl::optional.2137"* %414, i64 0, i32 0, i32 0, i32 0, i32 0
  %476 = load i8, i8* %475, align 4, !range !2
  %477 = icmp eq i8 %476, 0
  br i1 %477, label %478, label %479, !prof !3

478:                                              ; preds = %474
  call void @llvm.trap() #11
  unreachable

479:                                              ; preds = %474
  %480 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %407, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %481 = bitcast %"struct.blink::PhysicalRect"* %480 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %481, i8* nonnull align 8 %232, i64 16, i1 false) #11
  br label %482

482:                                              ; preds = %479, %468, %466
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %232) #11
  br label %483

483:                                              ; preds = %482, %405
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225) #11
  br label %484

484:                                              ; preds = %483, %350, %344, %338
  %485 = phi %"class.blink::NGPhysicalLineBoxFragment"* [ %339, %483 ], [ %339, %350 ], [ %349, %344 ], [ %339, %338 ]
  %486 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2279"* @_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEppEv(%"class.base::CheckedContiguousIterator.2279"* nonnull %7) #11
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.2279"* nonnull %7, %"class.base::CheckedContiguousIterator.2279"* nonnull dereferenceable(24) %8) #11
  %487 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %222, align 8
  %488 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %224, align 8
  %489 = icmp eq %"class.blink::NGFragmentItem"* %487, %488
  br i1 %489, label %490, label %338

490:                                              ; preds = %484, %303
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #11
  br label %491

491:                                              ; preds = %283, %289, %260, %252, %269, %272, %278, %240, %297, %490
  %492 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %241, i64 1
  %493 = icmp eq %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %492, %214
  br i1 %493, label %494, label %240

494:                                              ; preds = %491, %208, %207
  %495 = load %"struct.WTF::KeyValuePair.2146"*, %"struct.WTF::KeyValuePair.2146"** %21, align 8
  %496 = icmp eq %"struct.WTF::KeyValuePair.2146"* %495, null
  br i1 %496, label %499, label %497, !prof !4

497:                                              ; preds = %494
  %498 = bitcast %"struct.WTF::KeyValuePair.2146"* %495 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %498) #11
  store %"struct.WTF::KeyValuePair.2146"* null, %"struct.WTF::KeyValuePair.2146"** %21, align 8
  br label %499

499:                                              ; preds = %494, %497
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br label %500

500:                                              ; preds = %2, %499
  ret void
}

declare dereferenceable(9232) %"class.WTF::Vector.2017"* @_ZN5blink22NGFragmentItemsBuilder5ItemsERKNS_12PhysicalSizeE(%"class.blink::NGFragmentItemsBuilder"*, %"struct.blink::PhysicalSize"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZNK5blink13LogicalOffset17ConvertToPhysicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::LogicalOffset"*, i16, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NGBoxFragmentBuilder43SetLastBaselineToBlockEndMarginEdgeIfNeededEv(%"class.blink::NGBoxFragmentBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 3
  %3 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 3, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = trunc i32 %5 to i16
  %7 = icmp slt i16 %6, 0
  br i1 %7, label %8, label %43

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 2, i32 0
  %10 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutBox"* %10, null
  br i1 %11, label %43, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %10, i64 0, i32 0, i32 0
  %14 = bitcast %"class.blink::LayoutBox"* %10 to i1 (%"class.blink::LayoutObject"*)***
  %15 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %15, i64 23
  %17 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::LayoutObject"* %13) #11
  br i1 %18, label %19, label %43

19:                                               ; preds = %12
  %20 = bitcast %"class.blink::LayoutBox"* %10 to %"class.blink::LayoutBlock"*
  %21 = tail call zeroext i1 @_ZNK5blink11LayoutBlock48UseLogicalBottomMarginEdgeForInlineBlockBaselineEv(%"class.blink::LayoutBlock"* nonnull %20) #11
  br i1 %21, label %22, label %43

22:                                               ; preds = %19
  %23 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %2, align 8
  %24 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = tail call { i64, i64 } @_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %23, %"class.blink::ComputedStyle"* dereferenceable(104) %25)
  %27 = extractvalue { i64, i64 } %26, 1
  %28 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 4, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = lshr i64 %27, 32
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = select i1 %32, i32 -2147483648, i32 2147483647
  %34 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 %31) #11
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = select i1 %35, i32 %33, i32 %36, !prof !3
  %38 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %37, i32* %41, align 4
  br i1 %40, label %42, label %43

42:                                               ; preds = %22
  store i8 1, i8* %38, align 4
  br label %43

43:                                               ; preds = %8, %12, %42, %22, %1, %19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %4 = bitcast [20 x i8]* %3 to i160*
  %5 = load i160, i160* %4, align 8
  %6 = and i160 %5, 44601490397061246283071436545296723011960832
  %7 = icmp eq i160 %6, 0
  br i1 %7, label %92, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 512
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %92

13:                                               ; preds = %8
  %14 = and i32 %10, 2048
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %29

16:                                               ; preds = %13
  %17 = lshr i32 %10, 26
  %18 = and i32 %17, 3
  switch i32 %18, label %19 [
    i32 0, label %20
    i32 1, label %54
    i32 2, label %23
    i32 3, label %24
  ]

19:                                               ; preds = %16
  unreachable

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  br label %54

23:                                               ; preds = %16
  br label %54

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = load i32, i32* %27, align 8
  br label %54

29:                                               ; preds = %13
  %30 = lshr i32 %10, 28
  %31 = and i32 %30, 3
  switch i32 %31, label %32 [
    i32 0, label %33
    i32 1, label %54
    i32 2, label %54
    i32 3, label %35
  ]

32:                                               ; preds = %29
  unreachable

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  br label %39

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %37 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %37, i64 0, i32 0, i32 1, i32 0
  br label %39

39:                                               ; preds = %35, %33
  %40 = phi i32* [ %38, %35 ], [ %34, %33 ]
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, -64
  br i1 %42, label %54, label %43

43:                                               ; preds = %39
  switch i32 %31, label %44 [
    i32 0, label %45
    i32 1, label %54
    i32 2, label %48
    i32 3, label %49
  ]

44:                                               ; preds = %43
  unreachable

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  br label %54

48:                                               ; preds = %43
  br label %54

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %51 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %50, align 8
  %52 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %51, i64 0, i32 0, i32 1, i32 0
  %53 = load i32, i32* %52, align 4
  br label %54

54:                                               ; preds = %16, %20, %23, %24, %29, %29, %39, %43, %45, %48, %49
  %55 = phi i32 [ %28, %24 ], [ -64, %23 ], [ %22, %20 ], [ 0, %16 ], [ %53, %49 ], [ -64, %48 ], [ %47, %45 ], [ 0, %43 ], [ 0, %39 ], [ 0, %29 ], [ 0, %29 ]
  %56 = tail call { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %55) #11
  %57 = extractvalue { i64, i64 } %56, 0
  %58 = trunc i64 %57 to i32
  %59 = lshr i64 %57, 32
  %60 = extractvalue { i64, i64 } %56, 1
  %61 = load i160, i160* %4, align 8
  %62 = lshr i160 %61, 102
  %63 = trunc i160 %62 to i8
  %64 = and i8 %63, 3
  switch i8 %64, label %78 [
    i8 0, label %65
    i8 1, label %71
    i8 3, label %71
    i8 2, label %74
  ]

65:                                               ; preds = %54
  %66 = lshr i64 %60, 32
  %67 = trunc i64 %66 to i32
  %68 = and i64 %57, 4294967295
  %69 = shl i64 %60, 32
  %70 = or i64 %69, %68
  br label %79

71:                                               ; preds = %54, %54
  %72 = and i64 %60, -4294967296
  %73 = or i64 %72, %59
  br label %79

74:                                               ; preds = %54
  %75 = lshr i64 %60, 32
  %76 = and i64 %57, -4294967296
  %77 = or i64 %76, %75
  br label %79

78:                                               ; preds = %54
  unreachable

79:                                               ; preds = %65, %71, %74
  %80 = phi i64 [ %77, %74 ], [ %73, %71 ], [ %70, %65 ]
  %81 = phi i64 [ %60, %74 ], [ %60, %71 ], [ %59, %65 ]
  %82 = phi i32 [ %58, %74 ], [ %58, %71 ], [ %67, %65 ]
  %83 = trunc i64 %81 to i32
  %84 = and i160 %61, 41538374868278621028243970633760768
  %85 = icmp ne i160 %84, 0
  %86 = select i1 %85, i32 %82, i32 %83
  %87 = select i1 %85, i32 %83, i32 %82
  %88 = zext i32 %86 to i64
  %89 = shl nuw i64 %88, 32
  %90 = zext i32 %87 to i64
  %91 = or i64 %89, %90
  br label %92

92:                                               ; preds = %8, %2, %79
  %93 = phi i64 [ %80, %79 ], [ 0, %8 ], [ 0, %2 ]
  %94 = phi i64 [ %91, %79 ], [ 0, %8 ], [ 0, %2 ]
  %95 = insertvalue { i64, i64 } undef, i64 %94, 0
  %96 = insertvalue { i64, i64 } %95, i64 %93, 1
  ret { i64, i64 } %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NGBoxFragmentBuilder23SetMathItalicCorrectionENS_10LayoutUnitE(%"class.blink::NGBoxFragmentBuilder"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 48, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 48, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 0, i32* %7, align 4
  store i8 1, i8* %3, align 4
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 48, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 %1, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NGBoxFragmentBuilder39AdjustOffsetsForFragmentainerDescendantERNS_32NGLogicalOutOfFlowPositionedNodeEb(%"class.blink::NGBoxFragmentBuilder"* nocapture readonly, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* nocapture dereferenceable(112), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 49, i32 0
  %5 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %4, align 8
  %6 = icmp eq %"class.blink::NGBlockBreakToken"* %5, null
  br i1 %6, label %53, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %5, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  br i1 %2, label %31, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 6, i32 2, i32 0
  %12 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %11, align 8
  %13 = icmp eq %"class.blink::NGPhysicalFragment"* %12, null
  br i1 %13, label %14, label %31

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 6, i32 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %9, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %16, i32 %9) #11
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !3
  store i32 %22, i32* %15, align 4
  %23 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %9, 0
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %9) #11
  %28 = extractvalue { i32, i1 } %27, 1
  %29 = extractvalue { i32, i1 } %27, 0
  %30 = select i1 %28, i32 %26, i32 %29, !prof !3
  store i32 %30, i32* %23, align 4
  br label %31

31:                                               ; preds = %10, %14, %7
  %32 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 7, i32 2, i32 0
  %33 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %32, align 8
  %34 = icmp eq %"class.blink::NGPhysicalFragment"* %33, null
  br i1 %34, label %35, label %53

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 2
  %37 = bitcast %"class.blink::NGLayoutInputNode"* %36 to %"class.blink::LayoutObject"**
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 4
  %40 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %39 to i96*
  %41 = load i96, i96* %40, align 4
  %42 = and i96 %41, 68719476736
  %43 = icmp eq i96 %42, 0
  br i1 %43, label %53, label %44

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 7, i32 0, i32 1, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %9, -1
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %46, i32 %9) #11
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 %48, i32 %51, !prof !3
  store i32 %52, i32* %45, align 4
  br label %53

53:                                               ; preds = %35, %31, %44, %3
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink20NGBoxFragmentBuilder56AdjustFixedposContainingBlockForFragmentainerDescendantsEv(%"class.blink::NGBoxFragmentBuilder"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %54, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 49, i32 0
  %7 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %6, align 8
  %8 = icmp eq %"class.blink::NGBlockBreakToken"* %7, null
  br i1 %8, label %54, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 2
  %11 = bitcast %"class.blink::NGLayoutInputNode"* %10 to %"class.blink::LayoutObject"**
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 68719476736
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %54, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %20 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %19, align 8
  %21 = zext i32 %3 to i64
  %22 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %20, i64 %21
  br label %23

23:                                               ; preds = %52, %18
  %24 = phi %"class.blink::NGBlockBreakToken"* [ %53, %52 ], [ %7, %18 ]
  %25 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %50, %52 ], [ %20, %18 ]
  %26 = icmp eq %"class.blink::NGBlockBreakToken"* %24, null
  br i1 %26, label %49, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %24, i64 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %25, i64 0, i32 7, i32 2, i32 0
  %31 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %30, align 8
  %32 = icmp eq %"class.blink::NGPhysicalFragment"* %31, null
  br i1 %32, label %33, label %49

33:                                               ; preds = %27
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 4
  %36 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %35 to i96*
  %37 = load i96, i96* %36, align 4
  %38 = and i96 %37, 68719476736
  %39 = icmp eq i96 %38, 0
  br i1 %39, label %49, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %25, i64 0, i32 7, i32 0, i32 1, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %29, -1
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %42, i32 %29) #11
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !3
  store i32 %48, i32* %41, align 4
  br label %49

49:                                               ; preds = %23, %27, %33, %40
  %50 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %25, i64 1
  %51 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %50, %22
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %6, align 8
  br label %23

54:                                               ; preds = %49, %9, %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NGBoxFragmentBuilder46AdjustFixedposContainingBlockForInnerMulticolsEv(%"class.blink::NGBoxFragmentBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 12, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %73, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 49, i32 0
  %7 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %6, align 8
  %8 = icmp eq %"class.blink::NGBlockBreakToken"* %7, null
  br i1 %8, label %73, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 2
  %11 = bitcast %"class.blink::NGLayoutInputNode"* %10 to %"class.blink::LayoutObject"**
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 68719476736
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %73, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %7, i64 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 12, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %22, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %18, %32
  %29 = phi %"struct.WTF::KeyValuePair.1879"* [ %33, %32 ], [ %22, %18 ]
  %30 = bitcast %"struct.WTF::KeyValuePair.1879"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  switch i64 %31, label %35 [
    i64 -1, label %32
    i64 0, label %32
  ]

32:                                               ; preds = %28, %28
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %29, i64 1
  %34 = icmp eq %"struct.WTF::KeyValuePair.1879"* %33, %26
  br i1 %34, label %73, label %28

35:                                               ; preds = %28, %18
  %36 = phi %"struct.WTF::KeyValuePair.1879"* [ %22, %18 ], [ %29, %28 ]
  %37 = icmp eq %"struct.WTF::KeyValuePair.1879"* %36, %26
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = icmp sgt i32 %20, -1
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = icmp slt i32 %20, 0
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  br label %43

43:                                               ; preds = %38, %71
  %44 = phi %"struct.WTF::KeyValuePair.1879"* [ %36, %38 ], [ %65, %71 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %44, i64 0, i32 1, i32 1, i32 2, i32 0
  %46 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %45, align 8
  %47 = icmp eq %"class.blink::NGPhysicalFragment"* %46, null
  br i1 %47, label %48, label %61

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %44, i64 0, i32 1, i32 1, i32 0, i32 1, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %50, i32 %20) #11
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %40, i32 %53, !prof !3
  store i32 %54, i32* %49, align 4
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %44, i64 0, i32 1, i32 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %56, i32 %20) #11
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %42, i32 %59, !prof !3
  store i32 %60, i32* %55, align 4
  br label %61

61:                                               ; preds = %43, %48
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %44, i64 1
  %63 = icmp eq %"struct.WTF::KeyValuePair.1879"* %62, %26
  br i1 %63, label %73, label %64

64:                                               ; preds = %61, %68
  %65 = phi %"struct.WTF::KeyValuePair.1879"* [ %69, %68 ], [ %62, %61 ]
  %66 = bitcast %"struct.WTF::KeyValuePair.1879"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %71 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %64, %64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %65, i64 1
  %70 = icmp eq %"struct.WTF::KeyValuePair.1879"* %69, %26
  br i1 %70, label %73, label %64

71:                                               ; preds = %64
  %72 = icmp eq %"struct.WTF::KeyValuePair.1879"* %65, %26
  br i1 %72, label %73, label %43

73:                                               ; preds = %32, %61, %71, %68, %35, %9, %1, %5
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare void @_ZN5blink18NGInlineBreakTokenC1EN4base7PassKeyIS0_EENS_12NGInlineNodeEPKNS_13ComputedStyleEjjj(%"class.blink::NGInlineBreakToken"*, %"class.blink::LayoutBox"*, i64, %"class.blink::ComputedStyle"*, i32, i32, i32) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZN5blink17NGBlockBreakTokenC1EN4base7PassKeyIS0_EENS_17NGLayoutInputNodeE(%"class.blink::NGBlockBreakToken"*, %"class.blink::LayoutBox"*, i64) unnamed_addr #2

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

declare zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"struct.blink::NGLink"*, align 8
  %8 = alloca %"struct.blink::NGLink"*, align 8
  %9 = alloca %"struct.blink::NGLink"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"struct.blink::NGLink"* %1, %"struct.blink::NGLink"** %7, align 8
  store %"struct.blink::NGLink"* %2, %"struct.blink::NGLink"** %8, align 8
  store %"struct.blink::NGLink"* %3, %"struct.blink::NGLink"** %9, align 8
  %14 = ptrtoint %"struct.blink::NGLink"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"struct.blink::NGLink"* %2 to i64
  %18 = bitcast %"struct.blink::NGLink"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"struct.blink::NGLink"* %3 to i64
  %21 = bitcast %"struct.blink::NGLink"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"struct.blink::NGLink"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %30 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* %29, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %43 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %9, align 8
  %44 = icmp ugt %"struct.blink::NGLink"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %49 = bitcast %"struct.blink::NGLink"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %48, i8* %50) #11
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #11
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %11, align 8
  %15 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %12, align 8
  %16 = icmp eq %"struct.blink::NGLink"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %20, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %32, align 8
  %36 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %33, align 8
  %37 = icmp eq %"struct.blink::NGLink"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"struct.blink::NGLink"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %42 = bitcast %"struct.blink::NGLink"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %41, i8* %43) #11
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #11
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink11LayoutBlock48UseLogicalBottomMarginEdgeForInlineBlockBaselineEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink12NGBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_INS2_17NGBlockBreakTokenEEEEvOT_(%"class.WTF::Vector.2011"*, %class.scoped_refptr.2124* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr.1785*, %class.scoped_refptr.1785** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %class.scoped_refptr.1785* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink12NGBreakTokenEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink12NGBreakTokenEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.2011"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %class.scoped_refptr.1785*, %class.scoped_refptr.1785** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %class.scoped_refptr.1785* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %class.scoped_refptr.1785* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.2011"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.2011"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %class.scoped_refptr.1785*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %class.scoped_refptr.1785* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = bitcast %class.scoped_refptr.2124* %1 to %"class.blink::NGBreakToken"**
  %50 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %49, align 8
  %51 = getelementptr inbounds %class.scoped_refptr.1785, %class.scoped_refptr.1785* %46, i64 %48, i32 0
  store %"class.blink::NGBreakToken"* %50, %"class.blink::NGBreakToken"** %51, align 8
  %52 = icmp eq %"class.blink::NGBreakToken"* %50, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %50, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %54) #11
  br label %55

55:                                               ; preds = %45, %53
  %56 = load i32, i32* %3, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink12NGBreakTokenEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink12NGBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.2011"*, %class.scoped_refptr.1785* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr.1785*, %class.scoped_refptr.1785** %6, align 8
  %8 = icmp ugt %class.scoped_refptr.1785* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.scoped_refptr.1785, %class.scoped_refptr.1785* %7, i64 %10
  %12 = icmp ugt %class.scoped_refptr.1785* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %class.scoped_refptr.1785* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink12NGBreakTokenEEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink12NGBreakTokenEEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2011"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %class.scoped_refptr.1785*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %class.scoped_refptr.1785*, %class.scoped_refptr.1785** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %class.scoped_refptr.1785* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %class.scoped_refptr.1785* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.2011"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.2011"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %class.scoped_refptr.1785*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %class.scoped_refptr.1785* %1 to i64
  %56 = ptrtoint %class.scoped_refptr.1785* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %class.scoped_refptr.1785* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink12NGBreakTokenEEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink12NGBreakTokenEEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2011"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %class.scoped_refptr.1785*, %class.scoped_refptr.1785** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %class.scoped_refptr.1785* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %class.scoped_refptr.1785* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.2011"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.2011"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %class.scoped_refptr.1785*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %class.scoped_refptr.1785* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %class.scoped_refptr.1785, %class.scoped_refptr.1785* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %class.scoped_refptr.1785* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %class.scoped_refptr.1785* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %class.scoped_refptr.1785, %class.scoped_refptr.1785* %100, i64 %103
  %105 = getelementptr inbounds %class.scoped_refptr.1785, %class.scoped_refptr.1785* %101, i64 0, i32 0
  %106 = bitcast %class.scoped_refptr.1785* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.scoped_refptr.1785* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.blink::NGBreakToken"* null, %"class.blink::NGBreakToken"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1865"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %66

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1865"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %64, label %14

14:                                               ; preds = %4, %60
  %15 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %62, %60 ], [ %6, %4 ]
  %16 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %61, %60 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16 to i8*
  %18 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 40, i1 false) #11
  %19 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 6
  %20 = bitcast %"struct.blink::NGContainingBlock"* %19 to i8*
  %21 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 6
  %22 = bitcast %"struct.blink::NGContainingBlock"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %22, i64 16, i1 false) #11
  %23 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 6, i32 2
  %24 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 6, i32 2
  %25 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %24, i64 0, i32 0
  %26 = bitcast %class.scoped_refptr.1782* %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %class.scoped_refptr.1782* %23 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %25, align 8
  %29 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 7
  %30 = bitcast %"struct.blink::NGContainingBlock"* %29 to i8*
  %31 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 7
  %32 = bitcast %"struct.blink::NGContainingBlock"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %32, i64 16, i1 false) #11
  %33 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 7, i32 2
  %34 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 7, i32 2
  %35 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %34, i64 0, i32 0
  %36 = bitcast %class.scoped_refptr.1782* %34 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %class.scoped_refptr.1782* %33 to i64*
  store i64 %37, i64* %38, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %35, align 8
  %39 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 20, i1 false) #11
  %41 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 7, i32 2, i32 0
  %42 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %41, align 8
  %43 = icmp eq %"class.blink::NGPhysicalFragment"* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %14
  %45 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #11
  %46 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %42) #11
  br label %50

50:                                               ; preds = %49, %44, %14
  %51 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 6, i32 2, i32 0
  %52 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %51, align 8
  %53 = icmp eq %"class.blink::NGPhysicalFragment"* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #11
  %56 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %54
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %52) #11
  br label %60

60:                                               ; preds = %59, %54, %50
  %61 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 1
  %62 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 1
  %63 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %62, %10
  br i1 %63, label %64, label %14

64:                                               ; preds = %60, %4
  %65 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %65) #11
  br label %141

66:                                               ; preds = %2
  %67 = zext i32 %1 to i64
  %68 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64 %67) #11
  %69 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %68, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv, i64 0, i64 0)) #11
  %70 = udiv i64 %68, 112
  %71 = ptrtoint i8* %69 to i64
  %72 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 0
  %73 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %72, align 8
  %74 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %73, i64 %76
  %78 = icmp eq i32 %75, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %66
  %80 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %73 to i8*
  br label %136

81:                                               ; preds = %66
  %82 = bitcast i8* %69 to %"struct.blink::NGLogicalOutOfFlowPositionedNode"*
  br label %83

83:                                               ; preds = %81, %129
  %84 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %131, %129 ], [ %73, %81 ]
  %85 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %130, %129 ], [ %82, %81 ]
  %86 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85 to i8*
  %87 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 40, i1 false) #11
  %88 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 6
  %89 = bitcast %"struct.blink::NGContainingBlock"* %88 to i8*
  %90 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 6
  %91 = bitcast %"struct.blink::NGContainingBlock"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %91, i64 16, i1 false) #11
  %92 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 6, i32 2
  %93 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 6, i32 2
  %94 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %93, i64 0, i32 0
  %95 = bitcast %class.scoped_refptr.1782* %93 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %class.scoped_refptr.1782* %92 to i64*
  store i64 %96, i64* %97, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %94, align 8
  %98 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 7
  %99 = bitcast %"struct.blink::NGContainingBlock"* %98 to i8*
  %100 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 7
  %101 = bitcast %"struct.blink::NGContainingBlock"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %101, i64 16, i1 false) #11
  %102 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 7, i32 2
  %103 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 7, i32 2
  %104 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %103, i64 0, i32 0
  %105 = bitcast %class.scoped_refptr.1782* %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %class.scoped_refptr.1782* %102 to i64*
  store i64 %106, i64* %107, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %104, align 8
  %108 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 20, i1 false) #11
  %110 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 7, i32 2, i32 0
  %111 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %110, align 8
  %112 = icmp eq %"class.blink::NGPhysicalFragment"* %111, null
  br i1 %112, label %119, label %113

113:                                              ; preds = %83
  %114 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %111, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %114) #11
  %115 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %111, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %113
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %111) #11
  br label %119

119:                                              ; preds = %118, %113, %83
  %120 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 6, i32 2, i32 0
  %121 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %120, align 8
  %122 = icmp eq %"class.blink::NGPhysicalFragment"* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %121, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %124) #11
  %125 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %123
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %121) #11
  br label %129

129:                                              ; preds = %128, %123, %119
  %130 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 1
  %131 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 1
  %132 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %131, %77
  br i1 %132, label %133, label %83

133:                                              ; preds = %129
  %134 = bitcast %"class.WTF::Vector.1865"* %0 to i8**
  %135 = load i8*, i8** %134, align 8
  br label %136

136:                                              ; preds = %79, %133
  %137 = phi i8* [ %135, %133 ], [ %80, %79 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %137) #11
  %138 = bitcast %"class.WTF::Vector.1865"* %0 to i64*
  store atomic i64 %71, i64* %138 monotonic, align 8
  %139 = trunc i64 %70 to i32
  %140 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %139, i32* %140, align 8
  br label %141

141:                                              ; preds = %136, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 19155236
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 19155236) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 112
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink12NGBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_IKNS2_18NGInlineBreakTokenEEEEvOT_(%"class.WTF::Vector.2011"*, %class.scoped_refptr.2016* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr.1785*, %class.scoped_refptr.1785** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %class.scoped_refptr.1785* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink12NGBreakTokenEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink12NGBreakTokenEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.2011"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %class.scoped_refptr.1785*, %class.scoped_refptr.1785** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %class.scoped_refptr.1785* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %class.scoped_refptr.1785* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.2011"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.2011"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %class.scoped_refptr.1785*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %class.scoped_refptr.1785* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %class.scoped_refptr.1785, %class.scoped_refptr.1785* %46, i64 %48
  %50 = getelementptr inbounds %class.scoped_refptr.2016, %class.scoped_refptr.2016* %1, i64 0, i32 0
  %51 = bitcast %class.scoped_refptr.2016* %1 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %class.scoped_refptr.1785* %49 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.blink::NGInlineBreakToken"* null, %"class.blink::NGInlineBreakToken"** %50, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

declare void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2136"*, %"struct.WTF::KeyValuePair.2136"* } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.2133"*, %"class.blink::LayoutObject"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2133", %"class.WTF::HashTable.2133"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2136"*, %"struct.WTF::KeyValuePair.2136"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.2136"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.2133", %"class.WTF::HashTable.2133"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutObject"*
  %38 = icmp eq %"class.blink::LayoutObject"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutObject"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutObject"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutObject"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.2136"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.2136"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2136", %"struct.WTF::KeyValuePair.2136"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.2136"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.2136"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.2136"*, %"struct.WTF::KeyValuePair.2136"* } undef, %"struct.WTF::KeyValuePair.2136"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.2136"*, %"struct.WTF::KeyValuePair.2136"* } %79, %"struct.WTF::KeyValuePair.2136"* %78, 1
  ret { %"struct.WTF::KeyValuePair.2136"*, %"struct.WTF::KeyValuePair.2136"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2146"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISK_SF_SL_EERS4_SB_EENS_18HashTableAddResultISM_SC_EEOT0_OT1_(%"class.WTF::HashTable.2143"*, %"class.blink::LayoutObject"** dereferenceable(8), %"struct.std::__1::pair.2147"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2146"*, %"struct.WTF::KeyValuePair.2146"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2146"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2146"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.2143"* %0, %"struct.WTF::KeyValuePair.2146"* null)
  %9 = load %"struct.WTF::KeyValuePair.2146"*, %"struct.WTF::KeyValuePair.2146"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2146"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutObject"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutObject"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutObject"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.2146"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.2146"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutObject"* %59, %43
  br i1 %64, label %111, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutObject"* %59, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.2146"* %60, %"struct.WTF::KeyValuePair.2146"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutObject"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.2146"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.2146"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 24, i1 false) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.2146"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.2146"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %89, i64 0, i32 1
  %92 = bitcast %"struct.std::__1::pair.2147"* %2 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"struct.std::__1::pair.2147"* %91 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.2147", %"struct.std::__1::pair.2147"* %2, i64 0, i32 1
  %96 = bitcast %"class.blink::NGPhysicalLineBoxFragment"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %89, i64 0, i32 1, i32 1
  %99 = bitcast %"class.blink::NGPhysicalLineBoxFragment"** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %0, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, %102
  %106 = shl i32 %105, 1
  %107 = load i32, i32* %12, align 8
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %111, label %109

109:                                              ; preds = %87
  %110 = tail call %"struct.WTF::KeyValuePair.2146"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.2143"* %0, %"struct.WTF::KeyValuePair.2146"* %89)
  br label %111

111:                                              ; preds = %58, %87, %109
  %112 = phi i8 [ 1, %87 ], [ 1, %109 ], [ 0, %58 ]
  %113 = phi %"struct.WTF::KeyValuePair.2146"* [ %89, %87 ], [ %110, %109 ], [ %60, %58 ]
  %114 = insertvalue { %"struct.WTF::KeyValuePair.2146"*, i8 } undef, %"struct.WTF::KeyValuePair.2146"* %113, 0
  %115 = insertvalue { %"struct.WTF::KeyValuePair.2146"*, i8 } %114, i8 %112, 1
  ret { %"struct.WTF::KeyValuePair.2146"*, i8 } %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2146"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.2143"*, %"struct.WTF::KeyValuePair.2146"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([195 x i8], [195 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectENSt3__14pairIPKNS2_25NGPhysicalLineBoxFragmentESA_EEEEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.2146"*
  %37 = call %"struct.WTF::KeyValuePair.2146"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE8RehashToEPSC_jSN_(%"class.WTF::HashTable.2143"* %0, %"struct.WTF::KeyValuePair.2146"* %36, i32 %32, %"struct.WTF::KeyValuePair.2146"* %1) #11
  ret %"struct.WTF::KeyValuePair.2146"* %37
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2146"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE8RehashToEPSC_jSN_(%"class.WTF::HashTable.2143"*, %"struct.WTF::KeyValuePair.2146"*, i32, %"struct.WTF::KeyValuePair.2146"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2143", align 8
  %6 = bitcast %"class.WTF::HashTable.2143"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2143"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2146"* %1, %"struct.WTF::KeyValuePair.2146"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2146"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2143"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2143"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.2146"*, %"struct.WTF::KeyValuePair.2146"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.2146"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.2143"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2143"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.2146"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #11
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.2146"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.2146"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.2146"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.2146"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.2146"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.2143"* nonnull %5, %"class.blink::LayoutObject"** dereferenceable(8) %53) #11
  %55 = extractvalue { %"struct.WTF::KeyValuePair.2146"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.2146"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.2146"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #11
  %58 = load %"struct.WTF::KeyValuePair.2146"*, %"struct.WTF::KeyValuePair.2146"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.2146"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.2146"* %55, %"struct.WTF::KeyValuePair.2146"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.2146"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.2146"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.2146"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2146"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__14pairIPKNS1_25NGPhysicalLineBoxFragmentESA_EEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.2143"*, %"class.blink::LayoutObject"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2146"*, %"struct.WTF::KeyValuePair.2146"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2143", %"class.WTF::HashTable.2143"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.2146"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutObject"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutObject"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.2146"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.2146"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.2146"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.2146"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.2146"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutObject"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutObject"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutObject"* %63, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.2146"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2146", %"struct.WTF::KeyValuePair.2146"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutObject"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.2146"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.2146"*, i8 } undef, %"struct.WTF::KeyValuePair.2146"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.2146"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.2146"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.blink::NGFragmentItem"* @_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEdeEv(%"class.base::CheckedContiguousIterator.2279"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2279", %"class.base::CheckedContiguousIterator.2279"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2279", %"class.base::CheckedContiguousIterator.2279"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %7, align 8
  %11 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %8, align 8
  %12 = icmp eq %"class.blink::NGFragmentItem"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NGFragmentItem"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %17 = bitcast %"class.blink::NGFragmentItem"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %26 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %7, align 8
  ret %"class.blink::NGFragmentItem"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator.2279"* @_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEppEv(%"class.base::CheckedContiguousIterator.2279"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2279", %"class.base::CheckedContiguousIterator.2279"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2279", %"class.base::CheckedContiguousIterator.2279"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %7, align 8
  %11 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %8, align 8
  %12 = icmp eq %"class.blink::NGFragmentItem"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NGFragmentItem"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %17 = bitcast %"class.blink::NGFragmentItem"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %26 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %7, align 8
  %27 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %26, i64 1
  store %"class.blink::NGFragmentItem"* %27, %"class.blink::NGFragmentItem"** %7, align 8
  ret %"class.base::CheckedContiguousIterator.2279"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::NGFragmentItem"**
  %4 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPKNS_14NGFragmentItemE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, %"class.blink::NGFragmentItem"* %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPKNS_14NGFragmentItemE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::NGFragmentItem"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.2279"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.blink::NGFragmentItem"*, align 8
  %8 = alloca %"class.blink::NGFragmentItem"*, align 8
  %9 = alloca %"class.blink::NGFragmentItem"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.blink::NGFragmentItem"* %1, %"class.blink::NGFragmentItem"** %7, align 8
  store %"class.blink::NGFragmentItem"* %2, %"class.blink::NGFragmentItem"** %8, align 8
  store %"class.blink::NGFragmentItem"* %3, %"class.blink::NGFragmentItem"** %9, align 8
  %14 = ptrtoint %"class.blink::NGFragmentItem"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator.2279"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2279", %"class.base::CheckedContiguousIterator.2279"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.blink::NGFragmentItem"* %2 to i64
  %18 = bitcast %"class.blink::NGFragmentItem"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2279", %"class.base::CheckedContiguousIterator.2279"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.blink::NGFragmentItem"* %3 to i64
  %21 = bitcast %"class.blink::NGFragmentItem"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.blink::NGFragmentItem"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.blink::NGFragmentItem"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %30 = bitcast %"class.blink::NGFragmentItem"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* %29, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %8, align 8
  %43 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %9, align 8
  %44 = icmp ugt %"class.blink::NGFragmentItem"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.blink::NGFragmentItem"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %49 = bitcast %"class.blink::NGFragmentItem"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %48, i8* %50) #11
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #11
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.2279"*, %"class.base::CheckedContiguousIterator.2279"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2279", %"class.base::CheckedContiguousIterator.2279"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2279", %"class.base::CheckedContiguousIterator.2279"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %11, align 8
  %15 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %12, align 8
  %16 = icmp eq %"class.blink::NGFragmentItem"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator.2279"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %21 = bitcast %"class.base::CheckedContiguousIterator.2279"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %20, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2279", %"class.base::CheckedContiguousIterator.2279"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2279", %"class.base::CheckedContiguousIterator.2279"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %32, align 8
  %36 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %33, align 8
  %37 = icmp eq %"class.blink::NGFragmentItem"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.blink::NGFragmentItem"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %42 = bitcast %"class.blink::NGFragmentItem"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %41, i8* %43) #11
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #11
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind readnone }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
