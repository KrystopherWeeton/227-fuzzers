; ModuleID = '../../third_party/boringssl/src/crypto/cipher_extra/e_aesgcmsiv.c'
source_filename = "../../third_party/boringssl/src/crypto/cipher_extra/e_aesgcmsiv.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.evp_aead_st = type { i8, i8, i8, i8, i32, i32 (%struct.evp_aead_ctx_st*, i8*, i64, i64)*, i32 (%struct.evp_aead_ctx_st*, i8*, i64, i64, i32)*, void (%struct.evp_aead_ctx_st*)*, i32 (%struct.evp_aead_ctx_st*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64)*, i32 (%struct.evp_aead_ctx_st*, i8*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64)*, i32 (%struct.evp_aead_ctx_st*, i8*, i8*, i64, i8*, i64, i8*, i64, i8*, i64)*, i32 (%struct.evp_aead_ctx_st*, i8**, i64*)*, i64 (%struct.evp_aead_ctx_st*, i64, i64)* }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%struct.gcm_siv_record_keys = type { [16 x i8], %union.anon.4, void (i8*, i8*, %struct.aes_key_st*)* }
%union.anon.4 = type { double, [240 x i8] }
%struct.aes_key_st = type { [60 x i32], i32 }
%union.anon.0 = type { [4 x i32] }
%struct.aead_aes_gcm_siv_asm_ctx = type { [240 x i8], i32, [12 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i64, i64 }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { i64, i64 }
%struct.gcm128_key_st = type { %struct.u128, [16 x %struct.u128], void (i64*, %struct.u128*)*, void (i64*, %struct.u128*, i8*, i64)*, void (i8*, i8*, %struct.aes_key_st*)*, i8 }
%struct.u128 = type { i64, i64 }
%union.anon.7 = type { [4 x i32] }
%struct.polyval_ctx = type { %union.polyval_block, %struct.u128, [16 x %struct.u128], void (i64*, %struct.u128*)*, void (i64*, %struct.u128*, i8*, i64)* }
%union.polyval_block = type { [2 x i64] }
%union.anon.5 = type { %struct.anon.6 }
%struct.anon.6 = type { i64, i64 }

@aead_aes_128_gcm_siv_asm = internal constant %struct.evp_aead_st { i8 16, i8 12, i8 16, i8 16, i32 0, i32 (%struct.evp_aead_ctx_st*, i8*, i64, i64)* @aead_aes_gcm_siv_asm_init, i32 (%struct.evp_aead_ctx_st*, i8*, i64, i64, i32)* null, void (%struct.evp_aead_ctx_st*)* @aead_aes_gcm_siv_asm_cleanup, i32 (%struct.evp_aead_ctx_st*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64)* @aead_aes_gcm_siv_asm_open, i32 (%struct.evp_aead_ctx_st*, i8*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64)* @aead_aes_gcm_siv_asm_seal_scatter, i32 (%struct.evp_aead_ctx_st*, i8*, i8*, i64, i8*, i64, i8*, i64, i8*, i64)* null, i32 (%struct.evp_aead_ctx_st*, i8**, i64*)* null, i64 (%struct.evp_aead_ctx_st*, i64, i64)* null }, align 8
@aead_aes_128_gcm_siv = internal constant %struct.evp_aead_st { i8 16, i8 12, i8 16, i8 16, i32 0, i32 (%struct.evp_aead_ctx_st*, i8*, i64, i64)* @aead_aes_gcm_siv_init, i32 (%struct.evp_aead_ctx_st*, i8*, i64, i64, i32)* null, void (%struct.evp_aead_ctx_st*)* @aead_aes_gcm_siv_cleanup, i32 (%struct.evp_aead_ctx_st*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64)* null, i32 (%struct.evp_aead_ctx_st*, i8*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64)* @aead_aes_gcm_siv_seal_scatter, i32 (%struct.evp_aead_ctx_st*, i8*, i8*, i64, i8*, i64, i8*, i64, i8*, i64)* @aead_aes_gcm_siv_open_gather, i32 (%struct.evp_aead_ctx_st*, i8**, i64*)* null, i64 (%struct.evp_aead_ctx_st*, i64, i64)* null }, align 8
@aead_aes_256_gcm_siv_asm = internal constant %struct.evp_aead_st { i8 32, i8 12, i8 16, i8 16, i32 0, i32 (%struct.evp_aead_ctx_st*, i8*, i64, i64)* @aead_aes_gcm_siv_asm_init, i32 (%struct.evp_aead_ctx_st*, i8*, i64, i64, i32)* null, void (%struct.evp_aead_ctx_st*)* @aead_aes_gcm_siv_asm_cleanup, i32 (%struct.evp_aead_ctx_st*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64)* @aead_aes_gcm_siv_asm_open, i32 (%struct.evp_aead_ctx_st*, i8*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64)* @aead_aes_gcm_siv_asm_seal_scatter, i32 (%struct.evp_aead_ctx_st*, i8*, i8*, i64, i8*, i64, i8*, i64, i8*, i64)* null, i32 (%struct.evp_aead_ctx_st*, i8**, i64*)* null, i64 (%struct.evp_aead_ctx_st*, i64, i64)* null }, align 8
@aead_aes_256_gcm_siv = internal constant %struct.evp_aead_st { i8 32, i8 12, i8 16, i8 16, i32 0, i32 (%struct.evp_aead_ctx_st*, i8*, i64, i64)* @aead_aes_gcm_siv_init, i32 (%struct.evp_aead_ctx_st*, i8*, i64, i64, i32)* null, void (%struct.evp_aead_ctx_st*)* @aead_aes_gcm_siv_cleanup, i32 (%struct.evp_aead_ctx_st*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64)* null, i32 (%struct.evp_aead_ctx_st*, i8*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64)* @aead_aes_gcm_siv_seal_scatter, i32 (%struct.evp_aead_ctx_st*, i8*, i8*, i64, i8*, i64, i8*, i64, i8*, i64)* @aead_aes_gcm_siv_open_gather, i32 (%struct.evp_aead_ctx_st*, i8**, i64*)* null, i64 (%struct.evp_aead_ctx_st*, i64, i64)* null }, align 8
@OPENSSL_ia32cap_P = external local_unnamed_addr global [4 x i32], align 16
@.str = private unnamed_addr constant [66 x i8] c"../../third_party/boringssl/src/crypto/cipher_extra/e_aesgcmsiv.c\00", align 1
@__const.aead_aes_gcm_siv_open_gather.keys = private unnamed_addr constant %struct.gcm_siv_record_keys { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { double 0xFFFFFFFFFFFFFFFF, [240 x i8] c}, void (i8*, i8*, %struct.aes_key_st*)* inttoptr (i64 -6148914691236517206 to void (i8*, i8*, %struct.aes_key_st*)*) }, align 8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden nonnull %struct.evp_aead_st* @EVP_aead_aes_128_gcm_siv() local_unnamed_addr #0 {
  %1 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @OPENSSL_ia32cap_P, i64 0, i64 1), align 4
  %2 = and i32 %1, 301989888
  %3 = icmp eq i32 %2, 301989888
  %4 = select i1 %3, %struct.evp_aead_st* @aead_aes_128_gcm_siv_asm, %struct.evp_aead_st* @aead_aes_128_gcm_siv
  ret %struct.evp_aead_st* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden nonnull %struct.evp_aead_st* @EVP_aead_aes_256_gcm_siv() local_unnamed_addr #0 {
  %1 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @OPENSSL_ia32cap_P, i64 0, i64 1), align 4
  %2 = and i32 %1, 301989888
  %3 = icmp eq i32 %2, 301989888
  %4 = select i1 %3, %struct.evp_aead_st* @aead_aes_256_gcm_siv_asm, %struct.evp_aead_st* @aead_aes_256_gcm_siv
  ret %struct.evp_aead_st* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @aead_aes_gcm_siv_asm_init(%struct.evp_aead_ctx_st*, i8*, i64, i64) #2 {
  %5 = shl i64 %2, 3
  switch i64 %5, label %6 [
    i64 256, label %7
    i64 128, label %7
  ]

6:                                                ; preds = %4
  tail call void @ERR_put_error(i32 30, i32 0, i32 102, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 77) #5
  br label %25

7:                                                ; preds = %4, %4
  %8 = and i64 %3, -17
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @ERR_put_error(i32 30, i32 0, i32 116, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 86) #5
  br label %25

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 1
  %13 = ptrtoint %union.evp_aead_ctx_st_state* %12 to i64
  %14 = and i64 %13, 8
  %15 = bitcast %union.evp_aead_ctx_st_state* %12 to [580 x i8]*
  %16 = getelementptr inbounds [580 x i8], [580 x i8]* %15, i64 0, i64 %14
  %17 = icmp eq i64 %5, 128
  br i1 %17, label %18, label %19

18:                                               ; preds = %11
  tail call void @aes128gcmsiv_aes_ks(i8* %1, i8* %16) #5
  br label %20

19:                                               ; preds = %11
  tail call void @aes256gcmsiv_aes_ks(i8* %1, i8* %16) #5
  br label %20

20:                                               ; preds = %19, %18
  %21 = phi i32 [ 0, %19 ], [ 1, %18 ]
  %22 = getelementptr inbounds i8, i8* %16, i64 240
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 16
  %24 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 2
  store i8 16, i8* %24, align 8
  br label %25

25:                                               ; preds = %20, %10, %6
  %26 = phi i32 [ 0, %6 ], [ 0, %10 ], [ 1, %20 ]
  ret i32 %26
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @aead_aes_gcm_siv_asm_cleanup(%struct.evp_aead_ctx_st* nocapture) #3 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @aead_aes_gcm_siv_asm_open(%struct.evp_aead_ctx_st*, i8*, i64* nocapture, i64, i8* nocapture readonly, i64, i8*, i64, i8*, i64) #2 {
  %11 = alloca [16 x i8], align 16
  %12 = alloca [12 x i64], align 16
  %13 = alloca %union.anon.0, align 16
  %14 = alloca [2 x i64], align 16
  %15 = alloca [4 x i64], align 16
  %16 = alloca %struct.aead_aes_gcm_siv_asm_ctx, align 16
  %17 = alloca [128 x i8], align 16
  %18 = alloca [16 x i8], align 16
  %19 = alloca [96 x i8], align 16
  %20 = alloca %union.anon, align 8
  %21 = icmp ugt i64 %9, 2305843009213693951
  br i1 %21, label %22, label %23

22:                                               ; preds = %10
  tail call void @ERR_put_error(i32 30, i32 0, i32 117, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 418) #5
  br label %257

23:                                               ; preds = %10
  %24 = add i64 %7, -16
  %25 = icmp ugt i64 %24, 68719476736
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @ERR_put_error(i32 30, i32 0, i32 101, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 425) #5
  br label %257

27:                                               ; preds = %23
  %28 = icmp eq i64 %5, 12
  br i1 %28, label %30, label %29

29:                                               ; preds = %27
  tail call void @ERR_put_error(i32 30, i32 0, i32 121, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 430) #5
  br label %257

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 1
  %32 = ptrtoint %union.evp_aead_ctx_st_state* %31 to i64
  %33 = and i64 %32, 8
  %34 = bitcast %union.evp_aead_ctx_st_state* %31 to [580 x i8]*
  %35 = getelementptr inbounds [580 x i8], [580 x i8]* %34, i64 0, i64 %33
  %36 = getelementptr inbounds i8, i8* %6, i64 %24
  %37 = icmp ugt i64 %24, %3
  br i1 %37, label %38, label %39

38:                                               ; preds = %30
  tail call void @ERR_put_error(i32 30, i32 0, i32 103, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 439) #5
  br label %257

39:                                               ; preds = %30
  %40 = bitcast [2 x i64]* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #5
  %41 = getelementptr inbounds [2 x i64], [2 x i64]* %14, i64 0, i64 0
  %42 = getelementptr inbounds [2 x i64], [2 x i64]* %14, i64 0, i64 1
  %43 = bitcast [4 x i64]* %15 to i8*
  %44 = bitcast [2 x i64]* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #5
  %45 = getelementptr inbounds [4 x i64], [4 x i64]* %15, i64 0, i64 0
  %46 = getelementptr inbounds [4 x i64], [4 x i64]* %15, i64 0, i64 1
  %47 = getelementptr inbounds i8, i8* %35, i64 240
  %48 = bitcast i8* %47 to i32*
  %49 = bitcast [4 x i64]* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 -86, i64 32, i1 false)
  %50 = load i32, i32* %48, align 16
  %51 = getelementptr inbounds [16 x i8], [16 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #5
  %52 = getelementptr inbounds [16 x i8], [16 x i8]* %11, i64 0, i64 12
  %53 = bitcast i8* %52 to i32*
  store i32 -1431655766, i32* %53, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %51, i8* align 1 %4, i64 12, i1 false) #5
  %54 = bitcast [12 x i64]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %54) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %54, i8 -86, i64 96, i1 false) #5
  %55 = icmp eq i32 %50, 0
  %56 = getelementptr inbounds [12 x i64], [12 x i64]* %12, i64 0, i64 0
  br i1 %55, label %62, label %57

57:                                               ; preds = %39
  call void @aes128gcmsiv_kdf(i8* nonnull %51, i64* nonnull %56, i8* %35) #5
  %58 = getelementptr inbounds [12 x i64], [12 x i64]* %12, i64 0, i64 4
  %59 = load i64, i64* %58, align 16
  store i64 %59, i64* %45, align 16
  %60 = getelementptr inbounds [12 x i64], [12 x i64]* %12, i64 0, i64 6
  %61 = load i64, i64* %60, align 16
  br label %73

62:                                               ; preds = %39
  %63 = getelementptr inbounds [4 x i64], [4 x i64]* %15, i64 0, i64 3
  %64 = getelementptr inbounds [4 x i64], [4 x i64]* %15, i64 0, i64 2
  call void @aes256gcmsiv_kdf(i8* nonnull %51, i64* nonnull %56, i8* %35) #5
  %65 = getelementptr inbounds [12 x i64], [12 x i64]* %12, i64 0, i64 4
  %66 = load i64, i64* %65, align 16
  store i64 %66, i64* %45, align 16
  %67 = getelementptr inbounds [12 x i64], [12 x i64]* %12, i64 0, i64 6
  %68 = load i64, i64* %67, align 16
  %69 = getelementptr inbounds [12 x i64], [12 x i64]* %12, i64 0, i64 8
  %70 = load i64, i64* %69, align 16
  store i64 %70, i64* %64, align 16
  %71 = getelementptr inbounds [12 x i64], [12 x i64]* %12, i64 0, i64 10
  %72 = load i64, i64* %71, align 16
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %57, %62
  %74 = phi i64 [ %68, %62 ], [ %61, %57 ]
  store i64 %74, i64* %46, align 8
  %75 = load i64, i64* %56, align 16
  store i64 %75, i64* %41, align 16
  %76 = getelementptr inbounds [12 x i64], [12 x i64]* %12, i64 0, i64 2
  %77 = load i64, i64* %76, align 16
  store i64 %77, i64* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %54) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #5
  %78 = getelementptr inbounds %struct.aead_aes_gcm_siv_asm_ctx, %struct.aead_aes_gcm_siv_asm_ctx* %16, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %78) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %78, i8 -86, i64 256, i1 false)
  %79 = load i32, i32* %48, align 16
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %73
  call void @aes128gcmsiv_aes_ks(i8* nonnull %43, i8* nonnull %78) #5
  br label %83

82:                                               ; preds = %73
  call void @aes256gcmsiv_aes_ks(i8* nonnull %43, i8* nonnull %78) #5
  br label %83

83:                                               ; preds = %82, %81
  %84 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %84) #5
  %85 = lshr i64 %9, 4
  %86 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %86, i8 0, i64 128, i1 false)
  call void @aesgcmsiv_polyval_horner(i8* nonnull %84, i8* nonnull %40, i8* %8, i64 %85) #5
  %87 = getelementptr inbounds [16 x i8], [16 x i8]* %18, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #5
  %88 = and i64 %9, 15
  %89 = icmp eq i64 %88, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %87, i8 -86, i64 16, i1 false)
  br i1 %89, label %95, label %90

90:                                               ; preds = %83
  %91 = and i64 %9, -16
  %92 = getelementptr inbounds i8, i8* %8, i64 %91
  %93 = sub nuw nsw i64 16, %88
  %94 = getelementptr [16 x i8], [16 x i8]* %18, i64 0, i64 %88
  call void @llvm.memset.p0i8.i64(i8* align 1 %94, i8 0, i64 %93, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %87, i8* align 1 %92, i64 %88, i1 false) #5
  call void @aesgcmsiv_polyval_horner(i8* nonnull %84, i8* nonnull %40, i8* nonnull %87, i64 1) #5
  br label %95

95:                                               ; preds = %83, %90
  %96 = getelementptr inbounds [96 x i8], [96 x i8]* %19, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %96) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %96, i8 -86, i64 96, i1 false)
  call void @aesgcmsiv_htable6_init(i8* nonnull %96, i8* nonnull %40) #5
  %97 = load i32, i32* %48, align 16
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %95
  call void @aes128gcmsiv_dec(i8* %6, i8* %1, i8* nonnull %84, i8* nonnull %96, %struct.aead_aes_gcm_siv_asm_ctx* nonnull %16, i64 %24) #5
  br label %101

100:                                              ; preds = %95
  call void @aes256gcmsiv_dec(i8* %6, i8* %1, i8* nonnull %84, i8* nonnull %96, %struct.aead_aes_gcm_siv_asm_ctx* nonnull %16, i64 %24) #5
  br label %101

101:                                              ; preds = %100, %99
  %102 = and i64 %24, 15
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %179, label %104

104:                                              ; preds = %101
  %105 = load i32, i32* %48, align 16
  %106 = bitcast %union.anon.0* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #5
  %107 = getelementptr inbounds %union.anon.0, %union.anon.0* %13, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %106, i8* align 1 %36, i64 16, i1 false) #5
  %108 = bitcast %union.anon.0* %13 to [16 x i8]*
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* %108, i64 0, i64 15
  %110 = load i8, i8* %109, align 1
  %111 = or i8 %110, -128
  store i8 %111, i8* %109, align 1
  %112 = lshr i64 %24, 4
  %113 = load i32, i32* %107, align 16
  %114 = trunc i64 %112 to i32
  %115 = add i32 %113, %114
  store i32 %115, i32* %107, align 16
  %116 = icmp eq i32 %105, 0
  br i1 %116, label %118, label %117

117:                                              ; preds = %104
  call void @aes128gcmsiv_ecb_enc_block(i8* nonnull %106, i8* nonnull %106, %struct.aead_aes_gcm_siv_asm_ctx* nonnull %16) #5
  br label %119

118:                                              ; preds = %104
  call void @aes256gcmsiv_ecb_enc_block(i8* nonnull %106, i8* nonnull %106, %struct.aead_aes_gcm_siv_asm_ctx* nonnull %16) #5
  br label %119

119:                                              ; preds = %118, %117
  %120 = and i64 %24, -16
  %121 = getelementptr inbounds i8, i8* %1, i64 %120
  %122 = getelementptr inbounds i8, i8* %6, i64 %120
  %123 = add nsw i64 %102, -1
  %124 = and i64 %24, 3
  %125 = icmp ult i64 %123, 3
  br i1 %125, label %161, label %126

126:                                              ; preds = %119
  %127 = sub nsw i64 %102, %124
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi i64 [ 0, %126 ], [ %158, %128 ]
  %130 = phi i64 [ %127, %126 ], [ %159, %128 ]
  %131 = getelementptr inbounds i8, i8* %122, i64 %129
  %132 = load i8, i8* %131, align 1
  %133 = getelementptr inbounds [16 x i8], [16 x i8]* %108, i64 0, i64 %129
  %134 = load i8, i8* %133, align 4
  %135 = xor i8 %134, %132
  %136 = getelementptr inbounds i8, i8* %121, i64 %129
  store i8 %135, i8* %136, align 1
  %137 = or i64 %129, 1
  %138 = getelementptr inbounds i8, i8* %122, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = getelementptr inbounds [16 x i8], [16 x i8]* %108, i64 0, i64 %137
  %141 = load i8, i8* %140, align 1
  %142 = xor i8 %141, %139
  %143 = getelementptr inbounds i8, i8* %121, i64 %137
  store i8 %142, i8* %143, align 1
  %144 = or i64 %129, 2
  %145 = getelementptr inbounds i8, i8* %122, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = getelementptr inbounds [16 x i8], [16 x i8]* %108, i64 0, i64 %144
  %148 = load i8, i8* %147, align 2
  %149 = xor i8 %148, %146
  %150 = getelementptr inbounds i8, i8* %121, i64 %144
  store i8 %149, i8* %150, align 1
  %151 = or i64 %129, 3
  %152 = getelementptr inbounds i8, i8* %122, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = getelementptr inbounds [16 x i8], [16 x i8]* %108, i64 0, i64 %151
  %155 = load i8, i8* %154, align 1
  %156 = xor i8 %155, %153
  %157 = getelementptr inbounds i8, i8* %121, i64 %151
  store i8 %156, i8* %157, align 1
  %158 = add nuw nsw i64 %129, 4
  %159 = add i64 %130, -4
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %128, !llvm.loop !2

161:                                              ; preds = %128, %119
  %162 = phi i64 [ 0, %119 ], [ %158, %128 ]
  %163 = icmp eq i64 %124, 0
  br i1 %163, label %176, label %164

164:                                              ; preds = %161, %164
  %165 = phi i64 [ %173, %164 ], [ %162, %161 ]
  %166 = phi i64 [ %174, %164 ], [ %124, %161 ]
  %167 = getelementptr inbounds i8, i8* %122, i64 %165
  %168 = load i8, i8* %167, align 1
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %108, i64 0, i64 %165
  %170 = load i8, i8* %169, align 1
  %171 = xor i8 %170, %168
  %172 = getelementptr inbounds i8, i8* %121, i64 %165
  store i8 %171, i8* %172, align 1
  %173 = add nuw nsw i64 %165, 1
  %174 = add i64 %166, -1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %164, !llvm.loop !4

176:                                              ; preds = %164, %161
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #5
  %177 = sub nuw nsw i64 16, %102
  %178 = getelementptr [16 x i8], [16 x i8]* %18, i64 0, i64 %102
  call void @llvm.memset.p0i8.i64(i8* align 1 %178, i8 0, i64 %177, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %87, i8* align 1 %121, i64 %102, i1 false) #5
  call void @aesgcmsiv_polyval_horner(i8* nonnull %84, i8* nonnull %40, i8* nonnull %87, i64 1) #5
  br label %179

179:                                              ; preds = %101, %176
  %180 = bitcast %union.anon* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180) #5
  %181 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0, i32 0
  %182 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0, i32 1
  %183 = shl i64 %9, 3
  store i64 %183, i64* %181, align 8
  %184 = shl i64 %24, 3
  store i64 %184, i64* %182, align 8
  call void @aesgcmsiv_polyval_horner(i8* nonnull %84, i8* nonnull %40, i8* nonnull %180, i64 1) #5
  %185 = load i8, i8* %4, align 1
  %186 = load i8, i8* %84, align 16
  %187 = xor i8 %186, %185
  store i8 %187, i8* %84, align 16
  %188 = getelementptr inbounds i8, i8* %4, i64 1
  %189 = load i8, i8* %188, align 1
  %190 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 1
  %191 = load i8, i8* %190, align 1
  %192 = xor i8 %191, %189
  store i8 %192, i8* %190, align 1
  %193 = getelementptr inbounds i8, i8* %4, i64 2
  %194 = load i8, i8* %193, align 1
  %195 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 2
  %196 = load i8, i8* %195, align 2
  %197 = xor i8 %196, %194
  store i8 %197, i8* %195, align 2
  %198 = getelementptr inbounds i8, i8* %4, i64 3
  %199 = load i8, i8* %198, align 1
  %200 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 3
  %201 = load i8, i8* %200, align 1
  %202 = xor i8 %201, %199
  store i8 %202, i8* %200, align 1
  %203 = getelementptr inbounds i8, i8* %4, i64 4
  %204 = load i8, i8* %203, align 1
  %205 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 4
  %206 = load i8, i8* %205, align 4
  %207 = xor i8 %206, %204
  store i8 %207, i8* %205, align 4
  %208 = getelementptr inbounds i8, i8* %4, i64 5
  %209 = load i8, i8* %208, align 1
  %210 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 5
  %211 = load i8, i8* %210, align 1
  %212 = xor i8 %211, %209
  store i8 %212, i8* %210, align 1
  %213 = getelementptr inbounds i8, i8* %4, i64 6
  %214 = load i8, i8* %213, align 1
  %215 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 6
  %216 = load i8, i8* %215, align 2
  %217 = xor i8 %216, %214
  store i8 %217, i8* %215, align 2
  %218 = getelementptr inbounds i8, i8* %4, i64 7
  %219 = load i8, i8* %218, align 1
  %220 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 7
  %221 = load i8, i8* %220, align 1
  %222 = xor i8 %221, %219
  store i8 %222, i8* %220, align 1
  %223 = getelementptr inbounds i8, i8* %4, i64 8
  %224 = load i8, i8* %223, align 1
  %225 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 8
  %226 = load i8, i8* %225, align 8
  %227 = xor i8 %226, %224
  store i8 %227, i8* %225, align 8
  %228 = getelementptr inbounds i8, i8* %4, i64 9
  %229 = load i8, i8* %228, align 1
  %230 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 9
  %231 = load i8, i8* %230, align 1
  %232 = xor i8 %231, %229
  store i8 %232, i8* %230, align 1
  %233 = getelementptr inbounds i8, i8* %4, i64 10
  %234 = load i8, i8* %233, align 1
  %235 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 10
  %236 = load i8, i8* %235, align 2
  %237 = xor i8 %236, %234
  store i8 %237, i8* %235, align 2
  %238 = getelementptr inbounds i8, i8* %4, i64 11
  %239 = load i8, i8* %238, align 1
  %240 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 11
  %241 = load i8, i8* %240, align 1
  %242 = xor i8 %241, %239
  store i8 %242, i8* %240, align 1
  %243 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 15
  %244 = load i8, i8* %243, align 1
  %245 = and i8 %244, 127
  store i8 %245, i8* %243, align 1
  %246 = load i32, i32* %48, align 16
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %249, label %248

248:                                              ; preds = %179
  call void @aes128gcmsiv_ecb_enc_block(i8* nonnull %84, i8* nonnull %84, %struct.aead_aes_gcm_siv_asm_ctx* nonnull %16) #5
  br label %250

249:                                              ; preds = %179
  call void @aes256gcmsiv_ecb_enc_block(i8* nonnull %84, i8* nonnull %84, %struct.aead_aes_gcm_siv_asm_ctx* nonnull %16) #5
  br label %250

250:                                              ; preds = %249, %248
  %251 = call i32 @CRYPTO_memcmp(i8* nonnull %84, i8* %36, i64 16) #5
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %254, label %253

253:                                              ; preds = %250
  call void @ERR_put_error(i32 30, i32 0, i32 101, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 519) #5
  br label %255

254:                                              ; preds = %250
  store i64 %24, i64* %2, align 8
  br label %255

255:                                              ; preds = %254, %253
  %256 = phi i32 [ 0, %253 ], [ 1, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180) #5
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %96) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #5
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %84) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %78) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #5
  br label %257

257:                                              ; preds = %26, %29, %255, %38, %22
  %258 = phi i32 [ 0, %22 ], [ 0, %26 ], [ 0, %29 ], [ 0, %38 ], [ %256, %255 ]
  ret i32 %258
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @aead_aes_gcm_siv_asm_seal_scatter(%struct.evp_aead_ctx_st*, i8*, i8* nocapture, i64* nocapture, i64, i8* nocapture readonly, i64, i8*, i64, i8* nocapture readnone, i64, i8*, i64) #2 {
  %14 = alloca [128 x i8], align 16
  %15 = alloca %union.anon.1, align 8
  %16 = alloca [16 x i8], align 16
  %17 = alloca [12 x i64], align 16
  %18 = alloca %union.anon.0, align 16
  %19 = alloca [2 x i64], align 16
  %20 = alloca [4 x i64], align 16
  %21 = alloca [16 x i8], align 16
  %22 = alloca %struct.aead_aes_gcm_siv_asm_ctx, align 16
  %23 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 1
  %24 = ptrtoint %union.evp_aead_ctx_st_state* %23 to i64
  %25 = and i64 %24, 8
  %26 = bitcast %union.evp_aead_ctx_st_state* %23 to [580 x i8]*
  %27 = getelementptr inbounds [580 x i8], [580 x i8]* %26, i64 0, i64 %25
  %28 = icmp ugt i64 %8, 68719476736
  %29 = icmp ugt i64 %12, 2305843009213693951
  %30 = or i1 %28, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %13
  tail call void @ERR_put_error(i32 30, i32 0, i32 117, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 352) #5
  br label %263

32:                                               ; preds = %13
  %33 = icmp ult i64 %4, 16
  br i1 %33, label %34, label %35

34:                                               ; preds = %32
  tail call void @ERR_put_error(i32 30, i32 0, i32 103, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 357) #5
  br label %263

35:                                               ; preds = %32
  %36 = icmp eq i64 %6, 12
  br i1 %36, label %38, label %37

37:                                               ; preds = %35
  tail call void @ERR_put_error(i32 30, i32 0, i32 121, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 362) #5
  br label %263

38:                                               ; preds = %35
  %39 = bitcast [2 x i64]* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #5
  %40 = getelementptr inbounds [2 x i64], [2 x i64]* %19, i64 0, i64 0
  %41 = getelementptr inbounds [2 x i64], [2 x i64]* %19, i64 0, i64 1
  %42 = bitcast [4 x i64]* %20 to i8*
  %43 = bitcast [2 x i64]* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %43, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #5
  %44 = getelementptr inbounds [4 x i64], [4 x i64]* %20, i64 0, i64 0
  %45 = getelementptr inbounds [4 x i64], [4 x i64]* %20, i64 0, i64 1
  %46 = getelementptr inbounds i8, i8* %27, i64 240
  %47 = bitcast i8* %46 to i32*
  %48 = bitcast [4 x i64]* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 -86, i64 32, i1 false)
  %49 = load i32, i32* %47, align 16
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #5
  %51 = getelementptr inbounds [16 x i8], [16 x i8]* %16, i64 0, i64 12
  %52 = bitcast i8* %51 to i32*
  store i32 -1431655766, i32* %52, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %50, i8* align 1 %5, i64 12, i1 false) #5
  %53 = bitcast [12 x i64]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %53) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %53, i8 -86, i64 96, i1 false) #5
  %54 = icmp eq i32 %49, 0
  %55 = getelementptr inbounds [12 x i64], [12 x i64]* %17, i64 0, i64 0
  br i1 %54, label %61, label %56

56:                                               ; preds = %38
  call void @aes128gcmsiv_kdf(i8* nonnull %50, i64* nonnull %55, i8* %27) #5
  %57 = getelementptr inbounds [12 x i64], [12 x i64]* %17, i64 0, i64 4
  %58 = load i64, i64* %57, align 16
  store i64 %58, i64* %44, align 16
  %59 = getelementptr inbounds [12 x i64], [12 x i64]* %17, i64 0, i64 6
  %60 = load i64, i64* %59, align 16
  br label %72

61:                                               ; preds = %38
  %62 = getelementptr inbounds [4 x i64], [4 x i64]* %20, i64 0, i64 3
  %63 = getelementptr inbounds [4 x i64], [4 x i64]* %20, i64 0, i64 2
  call void @aes256gcmsiv_kdf(i8* nonnull %50, i64* nonnull %55, i8* %27) #5
  %64 = getelementptr inbounds [12 x i64], [12 x i64]* %17, i64 0, i64 4
  %65 = load i64, i64* %64, align 16
  store i64 %65, i64* %44, align 16
  %66 = getelementptr inbounds [12 x i64], [12 x i64]* %17, i64 0, i64 6
  %67 = load i64, i64* %66, align 16
  %68 = getelementptr inbounds [12 x i64], [12 x i64]* %17, i64 0, i64 8
  %69 = load i64, i64* %68, align 16
  store i64 %69, i64* %63, align 16
  %70 = getelementptr inbounds [12 x i64], [12 x i64]* %17, i64 0, i64 10
  %71 = load i64, i64* %70, align 16
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %56, %61
  %73 = phi i64 [ %67, %61 ], [ %60, %56 ]
  store i64 %73, i64* %45, align 8
  %74 = load i64, i64* %55, align 16
  store i64 %74, i64* %40, align 16
  %75 = getelementptr inbounds [12 x i64], [12 x i64]* %17, i64 0, i64 2
  %76 = load i64, i64* %75, align 16
  store i64 %76, i64* %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %53) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #5
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #5
  %78 = lshr i64 %8, 4
  %79 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i64 0, i64 0
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %80, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %79) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %79, i8 -86, i64 128, i1 false) #5
  %81 = icmp ugt i64 %12, 143
  %82 = icmp ugt i64 %8, 143
  %83 = or i1 %82, %81
  br i1 %83, label %84, label %86

84:                                               ; preds = %72
  call void @aesgcmsiv_htable_init(i8* nonnull %79, i8* nonnull %39) #5
  %85 = and i64 %12, -16
  call void @aesgcmsiv_htable_polyval(i8* nonnull %79, i8* %11, i64 %85, i8* nonnull %77) #5
  br label %88

86:                                               ; preds = %72
  %87 = lshr i64 %12, 4
  call void @aesgcmsiv_polyval_horner(i8* nonnull %77, i8* nonnull %39, i8* %11, i64 %87) #5
  br label %88

88:                                               ; preds = %86, %84
  %89 = phi i1 [ false, %86 ], [ true, %84 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #5
  %90 = and i64 %12, 15
  %91 = icmp eq i64 %90, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %50, i8 -86, i64 16, i1 false) #5
  br i1 %91, label %97, label %92

92:                                               ; preds = %88
  %93 = and i64 %12, -16
  %94 = getelementptr inbounds i8, i8* %11, i64 %93
  %95 = sub nuw nsw i64 16, %90
  %96 = getelementptr [16 x i8], [16 x i8]* %16, i64 0, i64 %90
  call void @llvm.memset.p0i8.i64(i8* align 1 %96, i8 0, i64 %95, i1 false) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %50, i8* align 1 %94, i64 %90, i1 false) #5
  call void @aesgcmsiv_polyval_horner(i8* nonnull %77, i8* nonnull %39, i8* nonnull %50, i64 1) #5
  br label %97

97:                                               ; preds = %92, %88
  br i1 %89, label %98, label %100

98:                                               ; preds = %97
  %99 = and i64 %8, -16
  call void @aesgcmsiv_htable_polyval(i8* nonnull %79, i8* %7, i64 %99, i8* nonnull %77) #5
  br label %101

100:                                              ; preds = %97
  call void @aesgcmsiv_polyval_horner(i8* nonnull %77, i8* nonnull %39, i8* %7, i64 %78) #5
  br label %101

101:                                              ; preds = %100, %98
  %102 = and i64 %8, 15
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %109, label %104

104:                                              ; preds = %101
  %105 = and i64 %8, -16
  %106 = getelementptr inbounds i8, i8* %7, i64 %105
  %107 = sub nuw nsw i64 16, %102
  %108 = getelementptr [16 x i8], [16 x i8]* %16, i64 0, i64 %102
  call void @llvm.memset.p0i8.i64(i8* align 1 %108, i8 0, i64 %107, i1 false) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %50, i8* align 1 %106, i64 %102, i1 false) #5
  call void @aesgcmsiv_polyval_horner(i8* nonnull %77, i8* nonnull %39, i8* nonnull %50, i64 1) #5
  br label %109

109:                                              ; preds = %101, %104
  %110 = bitcast %union.anon.1* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #5
  %111 = getelementptr inbounds %union.anon.1, %union.anon.1* %15, i64 0, i32 0, i32 0
  %112 = getelementptr inbounds %union.anon.1, %union.anon.1* %15, i64 0, i32 0, i32 1
  %113 = shl i64 %12, 3
  store i64 %113, i64* %111, align 8
  %114 = shl i64 %8, 3
  store i64 %114, i64* %112, align 8
  call void @aesgcmsiv_polyval_horner(i8* nonnull %77, i8* nonnull %39, i8* nonnull %110, i64 1) #5
  %115 = load i8, i8* %5, align 1
  %116 = load i8, i8* %77, align 16
  %117 = xor i8 %116, %115
  store i8 %117, i8* %77, align 16
  %118 = getelementptr inbounds i8, i8* %5, i64 1
  %119 = load i8, i8* %118, align 1
  %120 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 1
  %121 = load i8, i8* %120, align 1
  %122 = xor i8 %121, %119
  store i8 %122, i8* %120, align 1
  %123 = getelementptr inbounds i8, i8* %5, i64 2
  %124 = load i8, i8* %123, align 1
  %125 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 2
  %126 = load i8, i8* %125, align 2
  %127 = xor i8 %126, %124
  store i8 %127, i8* %125, align 2
  %128 = getelementptr inbounds i8, i8* %5, i64 3
  %129 = load i8, i8* %128, align 1
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = xor i8 %131, %129
  store i8 %132, i8* %130, align 1
  %133 = getelementptr inbounds i8, i8* %5, i64 4
  %134 = load i8, i8* %133, align 1
  %135 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 4
  %136 = load i8, i8* %135, align 4
  %137 = xor i8 %136, %134
  store i8 %137, i8* %135, align 4
  %138 = getelementptr inbounds i8, i8* %5, i64 5
  %139 = load i8, i8* %138, align 1
  %140 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 5
  %141 = load i8, i8* %140, align 1
  %142 = xor i8 %141, %139
  store i8 %142, i8* %140, align 1
  %143 = getelementptr inbounds i8, i8* %5, i64 6
  %144 = load i8, i8* %143, align 1
  %145 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 6
  %146 = load i8, i8* %145, align 2
  %147 = xor i8 %146, %144
  store i8 %147, i8* %145, align 2
  %148 = getelementptr inbounds i8, i8* %5, i64 7
  %149 = load i8, i8* %148, align 1
  %150 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 7
  %151 = load i8, i8* %150, align 1
  %152 = xor i8 %151, %149
  store i8 %152, i8* %150, align 1
  %153 = getelementptr inbounds i8, i8* %5, i64 8
  %154 = load i8, i8* %153, align 1
  %155 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 8
  %156 = load i8, i8* %155, align 8
  %157 = xor i8 %156, %154
  store i8 %157, i8* %155, align 8
  %158 = getelementptr inbounds i8, i8* %5, i64 9
  %159 = load i8, i8* %158, align 1
  %160 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 9
  %161 = load i8, i8* %160, align 1
  %162 = xor i8 %161, %159
  store i8 %162, i8* %160, align 1
  %163 = getelementptr inbounds i8, i8* %5, i64 10
  %164 = load i8, i8* %163, align 1
  %165 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 10
  %166 = load i8, i8* %165, align 2
  %167 = xor i8 %166, %164
  store i8 %167, i8* %165, align 2
  %168 = getelementptr inbounds i8, i8* %5, i64 11
  %169 = load i8, i8* %168, align 1
  %170 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 11
  %171 = load i8, i8* %170, align 1
  %172 = xor i8 %171, %169
  store i8 %172, i8* %170, align 1
  %173 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 15
  %174 = load i8, i8* %173, align 1
  %175 = and i8 %174, 127
  store i8 %175, i8* %173, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #5
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %79) #5
  %176 = getelementptr inbounds %struct.aead_aes_gcm_siv_asm_ctx, %struct.aead_aes_gcm_siv_asm_ctx* %22, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %176) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %176, i8 -86, i64 256, i1 false)
  %177 = load i32, i32* %47, align 16
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %184, label %179

179:                                              ; preds = %109
  call void @aes128gcmsiv_aes_ks_enc_x1(i8* nonnull %77, i8* nonnull %77, i8* nonnull %176, i64* nonnull %44) #5
  %180 = icmp ult i64 %8, 128
  %181 = and i64 %8, -16
  br i1 %180, label %182, label %183

182:                                              ; preds = %179
  call void @aes128gcmsiv_enc_msg_x4(i8* %7, i8* %1, i8* nonnull %77, %struct.aead_aes_gcm_siv_asm_ctx* nonnull %22, i64 %181) #5
  br label %189

183:                                              ; preds = %179
  call void @aes128gcmsiv_enc_msg_x8(i8* %7, i8* %1, i8* nonnull %77, %struct.aead_aes_gcm_siv_asm_ctx* nonnull %22, i64 %181) #5
  br label %189

184:                                              ; preds = %109
  call void @aes256gcmsiv_aes_ks_enc_x1(i8* nonnull %77, i8* nonnull %77, i8* nonnull %176, i64* nonnull %44) #5
  %185 = icmp ult i64 %8, 128
  %186 = and i64 %8, -16
  br i1 %185, label %187, label %188

187:                                              ; preds = %184
  call void @aes256gcmsiv_enc_msg_x4(i8* %7, i8* %1, i8* nonnull %77, %struct.aead_aes_gcm_siv_asm_ctx* nonnull %22, i64 %186) #5
  br label %189

188:                                              ; preds = %184
  call void @aes256gcmsiv_enc_msg_x8(i8* %7, i8* %1, i8* nonnull %77, %struct.aead_aes_gcm_siv_asm_ctx* nonnull %22, i64 %186) #5
  br label %189

189:                                              ; preds = %187, %188, %182, %183
  br i1 %103, label %262, label %190

190:                                              ; preds = %189
  %191 = load i32, i32* %47, align 16
  %192 = bitcast %union.anon.0* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %192) #5
  %193 = getelementptr inbounds %union.anon.0, %union.anon.0* %18, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %192, i8* nonnull align 16 %77, i64 16, i1 false) #5
  %194 = bitcast %union.anon.0* %18 to [16 x i8]*
  %195 = getelementptr inbounds [16 x i8], [16 x i8]* %194, i64 0, i64 15
  %196 = load i8, i8* %195, align 1
  %197 = or i8 %196, -128
  store i8 %197, i8* %195, align 1
  %198 = load i32, i32* %193, align 16
  %199 = trunc i64 %78 to i32
  %200 = add i32 %198, %199
  store i32 %200, i32* %193, align 16
  %201 = icmp eq i32 %191, 0
  br i1 %201, label %203, label %202

202:                                              ; preds = %190
  call void @aes128gcmsiv_ecb_enc_block(i8* nonnull %192, i8* nonnull %192, %struct.aead_aes_gcm_siv_asm_ctx* nonnull %22) #5
  br label %204

203:                                              ; preds = %190
  call void @aes256gcmsiv_ecb_enc_block(i8* nonnull %192, i8* nonnull %192, %struct.aead_aes_gcm_siv_asm_ctx* nonnull %22) #5
  br label %204

204:                                              ; preds = %203, %202
  %205 = and i64 %8, -16
  %206 = getelementptr inbounds i8, i8* %1, i64 %205
  %207 = getelementptr inbounds i8, i8* %7, i64 %205
  %208 = add nsw i64 %102, -1
  %209 = and i64 %8, 3
  %210 = icmp ult i64 %208, 3
  br i1 %210, label %246, label %211

211:                                              ; preds = %204
  %212 = sub nsw i64 %102, %209
  br label %213

213:                                              ; preds = %213, %211
  %214 = phi i64 [ 0, %211 ], [ %243, %213 ]
  %215 = phi i64 [ %212, %211 ], [ %244, %213 ]
  %216 = getelementptr inbounds i8, i8* %207, i64 %214
  %217 = load i8, i8* %216, align 1
  %218 = getelementptr inbounds [16 x i8], [16 x i8]* %194, i64 0, i64 %214
  %219 = load i8, i8* %218, align 4
  %220 = xor i8 %219, %217
  %221 = getelementptr inbounds i8, i8* %206, i64 %214
  store i8 %220, i8* %221, align 1
  %222 = or i64 %214, 1
  %223 = getelementptr inbounds i8, i8* %207, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = getelementptr inbounds [16 x i8], [16 x i8]* %194, i64 0, i64 %222
  %226 = load i8, i8* %225, align 1
  %227 = xor i8 %226, %224
  %228 = getelementptr inbounds i8, i8* %206, i64 %222
  store i8 %227, i8* %228, align 1
  %229 = or i64 %214, 2
  %230 = getelementptr inbounds i8, i8* %207, i64 %229
  %231 = load i8, i8* %230, align 1
  %232 = getelementptr inbounds [16 x i8], [16 x i8]* %194, i64 0, i64 %229
  %233 = load i8, i8* %232, align 2
  %234 = xor i8 %233, %231
  %235 = getelementptr inbounds i8, i8* %206, i64 %229
  store i8 %234, i8* %235, align 1
  %236 = or i64 %214, 3
  %237 = getelementptr inbounds i8, i8* %207, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = getelementptr inbounds [16 x i8], [16 x i8]* %194, i64 0, i64 %236
  %240 = load i8, i8* %239, align 1
  %241 = xor i8 %240, %238
  %242 = getelementptr inbounds i8, i8* %206, i64 %236
  store i8 %241, i8* %242, align 1
  %243 = add nuw nsw i64 %214, 4
  %244 = add i64 %215, -4
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %246, label %213, !llvm.loop !6

246:                                              ; preds = %213, %204
  %247 = phi i64 [ 0, %204 ], [ %243, %213 ]
  %248 = icmp eq i64 %209, 0
  br i1 %248, label %261, label %249

249:                                              ; preds = %246, %249
  %250 = phi i64 [ %258, %249 ], [ %247, %246 ]
  %251 = phi i64 [ %259, %249 ], [ %209, %246 ]
  %252 = getelementptr inbounds i8, i8* %207, i64 %250
  %253 = load i8, i8* %252, align 1
  %254 = getelementptr inbounds [16 x i8], [16 x i8]* %194, i64 0, i64 %250
  %255 = load i8, i8* %254, align 1
  %256 = xor i8 %255, %253
  %257 = getelementptr inbounds i8, i8* %206, i64 %250
  store i8 %256, i8* %257, align 1
  %258 = add nuw nsw i64 %250, 1
  %259 = add i64 %251, -1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %249, !llvm.loop !7

261:                                              ; preds = %249, %246
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %192) #5
  br label %262

262:                                              ; preds = %189, %261
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* nonnull align 16 %77, i64 16, i1 false) #5
  store i64 16, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %176) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #5
  br label %263

263:                                              ; preds = %262, %37, %34, %31
  %264 = phi i32 [ 0, %31 ], [ 0, %34 ], [ 0, %37 ], [ 1, %262 ]
  ret i32 %264
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #4

declare void @aes128gcmsiv_aes_ks(i8*, i8*) local_unnamed_addr #4

declare void @aes256gcmsiv_aes_ks(i8*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @aesgcmsiv_polyval_horner(i8*, i8*, i8*, i64) local_unnamed_addr #4

declare void @aesgcmsiv_htable6_init(i8*, i8*) local_unnamed_addr #4

declare void @aes128gcmsiv_dec(i8*, i8*, i8*, i8*, %struct.aead_aes_gcm_siv_asm_ctx*, i64) local_unnamed_addr #4

declare void @aes256gcmsiv_dec(i8*, i8*, i8*, i8*, %struct.aead_aes_gcm_siv_asm_ctx*, i64) local_unnamed_addr #4

declare void @aes128gcmsiv_ecb_enc_block(i8*, i8*, %struct.aead_aes_gcm_siv_asm_ctx*) local_unnamed_addr #4

declare void @aes256gcmsiv_ecb_enc_block(i8*, i8*, %struct.aead_aes_gcm_siv_asm_ctx*) local_unnamed_addr #4

declare i32 @CRYPTO_memcmp(i8*, i8*, i64) local_unnamed_addr #4

declare void @aes128gcmsiv_kdf(i8*, i64*, i8*) local_unnamed_addr #4

declare void @aes256gcmsiv_kdf(i8*, i64*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @aes128gcmsiv_aes_ks_enc_x1(i8*, i8*, i8*, i64*) local_unnamed_addr #4

declare void @aes128gcmsiv_enc_msg_x4(i8*, i8*, i8*, %struct.aead_aes_gcm_siv_asm_ctx*, i64) local_unnamed_addr #4

declare void @aes128gcmsiv_enc_msg_x8(i8*, i8*, i8*, %struct.aead_aes_gcm_siv_asm_ctx*, i64) local_unnamed_addr #4

declare void @aes256gcmsiv_aes_ks_enc_x1(i8*, i8*, i8*, i64*) local_unnamed_addr #4

declare void @aes256gcmsiv_enc_msg_x4(i8*, i8*, i8*, %struct.aead_aes_gcm_siv_asm_ctx*, i64) local_unnamed_addr #4

declare void @aes256gcmsiv_enc_msg_x8(i8*, i8*, i8*, %struct.aead_aes_gcm_siv_asm_ctx*, i64) local_unnamed_addr #4

declare void @aesgcmsiv_htable_init(i8*, i8*) local_unnamed_addr #4

declare void @aesgcmsiv_htable_polyval(i8*, i8*, i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal i32 @aead_aes_gcm_siv_init(%struct.evp_aead_ctx_st*, i8*, i64, i64) #2 {
  %5 = shl i64 %2, 3
  switch i64 %5, label %6 [
    i64 256, label %7
    i64 128, label %7
  ]

6:                                                ; preds = %4
  tail call void @ERR_put_error(i32 30, i32 0, i32 102, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 586) #5
  br label %25

7:                                                ; preds = %4, %4
  %8 = and i64 %3, -17
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @ERR_put_error(i32 30, i32 0, i32 116, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 594) #5
  br label %25

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 1
  %13 = bitcast %union.evp_aead_ctx_st_state* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %13, i8 0, i64 264, i1 false) #5
  %14 = bitcast %union.evp_aead_ctx_st_state* %12 to %struct.aes_key_st*
  %15 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 1, i32 1, i64 240
  %16 = bitcast i8* %15 to void (i8*, i8*, %struct.aes_key_st*)**
  %17 = tail call void (i8*, i8*, i64, %struct.aes_key_st*, i8*)* @aes_ctr_set_key(%struct.aes_key_st* %14, %struct.gcm128_key_st* null, void (i8*, i8*, %struct.aes_key_st*)** %16, i8* %1, i64 %2) #5
  %18 = icmp eq i64 %2, 32
  %19 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 1, i32 1, i64 248
  %20 = zext i1 %18 to i8
  %21 = load i8, i8* %19, align 8
  %22 = and i8 %21, -2
  %23 = or i8 %22, %20
  store i8 %23, i8* %19, align 8
  %24 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 2
  store i8 16, i8* %24, align 8
  br label %25

25:                                               ; preds = %11, %10, %6
  %26 = phi i32 [ 0, %6 ], [ 0, %10 ], [ 1, %11 ]
  ret i32 %26
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @aead_aes_gcm_siv_cleanup(%struct.evp_aead_ctx_st* nocapture) #3 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @aead_aes_gcm_siv_seal_scatter(%struct.evp_aead_ctx_st*, i8* nocapture, i8* nocapture, i64* nocapture, i64, i8* nocapture readonly, i64, i8*, i64, i8* nocapture readnone, i64, i8*, i64) #2 {
  %14 = alloca %union.anon.7, align 4
  %15 = alloca [48 x i8], align 16
  %16 = alloca [16 x i8], align 16
  %17 = alloca [16 x i8], align 16
  %18 = alloca %struct.gcm_siv_record_keys, align 8
  %19 = alloca [16 x i8], align 16
  %20 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 1
  %21 = icmp ugt i64 %8, 68719476736
  %22 = icmp ugt i64 %12, 2305843009213693951
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %13
  tail call void @ERR_put_error(i32 30, i32 0, i32 117, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 751) #5
  br label %126

25:                                               ; preds = %13
  %26 = icmp ult i64 %4, 16
  br i1 %26, label %27, label %28

27:                                               ; preds = %25
  tail call void @ERR_put_error(i32 30, i32 0, i32 103, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 756) #5
  br label %126

28:                                               ; preds = %25
  %29 = icmp eq i64 %6, 12
  br i1 %29, label %31, label %30

30:                                               ; preds = %28
  tail call void @ERR_put_error(i32 30, i32 0, i32 121, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 761) #5
  br label %126

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.gcm_siv_record_keys, %struct.gcm_siv_record_keys* %18, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %32) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 getelementptr inbounds (%struct.gcm_siv_record_keys, %struct.gcm_siv_record_keys* @__const.aead_aes_gcm_siv_open_gather.keys, i64 0, i32 0, i64 0), i64 272, i1 false)
  %33 = bitcast %union.evp_aead_ctx_st_state* %20 to %struct.aes_key_st*
  %34 = getelementptr inbounds [48 x i8], [48 x i8]* %15, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %34) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 48, i1 false) #5
  %35 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 1, i32 1, i64 248
  %36 = load i8, i8* %35, align 8
  %37 = and i8 %36, 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %38, i64 4, i64 6
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #5
  %41 = getelementptr inbounds [16 x i8], [16 x i8]* %16, i64 0, i64 4
  %42 = bitcast [16 x i8]* %16 to i32*
  store i32 0, i32* %42, align 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 1 %5, i64 12, i1 false) #5
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %17, i64 0, i64 0
  %44 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 1, i32 1, i64 240
  %45 = bitcast i8* %44 to void (i8*, i8*, %struct.aes_key_st*)**
  %46 = bitcast [16 x i8]* %17 to i64*
  br label %47

47:                                               ; preds = %47, %31
  %48 = phi i64 [ 0, %31 ], [ %55, %47 ]
  %49 = trunc i64 %48 to i8
  store i8 %49, i8* %40, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %43, i8 -86, i64 16, i1 false) #5
  %50 = load void (i8*, i8*, %struct.aes_key_st*)*, void (i8*, i8*, %struct.aes_key_st*)** %45, align 8
  call void %50(i8* nonnull %40, i8* nonnull %43, %struct.aes_key_st* %33) #5
  %51 = shl i64 %48, 3
  %52 = getelementptr inbounds [48 x i8], [48 x i8]* %15, i64 0, i64 %51
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %46, align 16
  store i64 %54, i64* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #5
  %55 = add nuw nsw i64 %48, 1
  %56 = icmp eq i64 %55, %39
  br i1 %56, label %57, label %47

57:                                               ; preds = %47
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 16 %34, i64 16, i1 false) #5
  %58 = getelementptr inbounds %struct.gcm_siv_record_keys, %struct.gcm_siv_record_keys* %18, i64 0, i32 1
  %59 = bitcast %union.anon.4* %58 to %struct.aes_key_st*
  %60 = getelementptr inbounds %struct.gcm_siv_record_keys, %struct.gcm_siv_record_keys* %18, i64 0, i32 2
  %61 = getelementptr inbounds [48 x i8], [48 x i8]* %15, i64 0, i64 16
  %62 = load i8, i8* %35, align 8
  %63 = and i8 %62, 1
  %64 = icmp eq i8 %63, 0
  %65 = select i1 %64, i64 16, i64 32
  %66 = call void (i8*, i8*, i64, %struct.aes_key_st*, i8*)* @aes_ctr_set_key(%struct.aes_key_st* %59, %struct.gcm128_key_st* null, void (i8*, i8*, %struct.aes_key_st*)** %60, i8* %61, i64 %65) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %34) #5
  %67 = getelementptr inbounds [16 x i8], [16 x i8]* %19, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %67, i8 -86, i64 16, i1 false)
  call fastcc void @gcm_siv_polyval(i8* nonnull %67, i8* %7, i64 %8, i8* %11, i64 %12, i8* nonnull %32, i8* %5)
  %68 = load void (i8*, i8*, %struct.aes_key_st*)*, void (i8*, i8*, %struct.aes_key_st*)** %60, align 8
  call void %68(i8* nonnull %67, i8* nonnull %67, %struct.aes_key_st* %59) #5
  %69 = load void (i8*, i8*, %struct.aes_key_st*)*, void (i8*, i8*, %struct.aes_key_st*)** %60, align 8
  %70 = bitcast %union.anon.7* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #5
  %71 = getelementptr inbounds %union.anon.7, %union.anon.7* %14, i64 0, i32 0, i64 0
  %72 = bitcast %union.anon.7* %14 to [16 x i8]*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %70, i8* nonnull align 16 %67, i64 16, i1 false) #5
  %73 = getelementptr inbounds [16 x i8], [16 x i8]* %72, i64 0, i64 15
  %74 = load i8, i8* %73, align 1
  %75 = or i8 %74, -128
  store i8 %75, i8* %73, align 1
  %76 = icmp eq i64 %8, 0
  br i1 %76, label %125, label %77

77:                                               ; preds = %57, %101
  %78 = phi i64 [ %102, %101 ], [ 0, %57 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -86, i64 16, i1 false) #5
  call void %69(i8* nonnull %70, i8* nonnull %40, %struct.aes_key_st* %59) #5
  %79 = load i32, i32* %71, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %71, align 4
  %81 = sub i64 %8, %78
  %82 = icmp ult i64 %81, 16
  %83 = select i1 %82, i64 %81, i64 16
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %101, label %85

85:                                               ; preds = %77
  %86 = and i64 %83, 1
  %87 = icmp eq i64 %83, 1
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = sub nsw i64 %83, %86
  br label %104

90:                                               ; preds = %104, %85
  %91 = phi i64 [ 0, %85 ], [ %122, %104 ]
  %92 = icmp eq i64 %86, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds [16 x i8], [16 x i8]* %16, i64 0, i64 %91
  %95 = load i8, i8* %94, align 1
  %96 = add i64 %91, %78
  %97 = getelementptr inbounds i8, i8* %7, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = xor i8 %98, %95
  %100 = getelementptr inbounds i8, i8* %1, i64 %96
  store i8 %99, i8* %100, align 1
  br label %101

101:                                              ; preds = %93, %90, %77
  %102 = add i64 %83, %78
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #5
  %103 = icmp ult i64 %102, %8
  br i1 %103, label %77, label %125

104:                                              ; preds = %104, %88
  %105 = phi i64 [ 0, %88 ], [ %122, %104 ]
  %106 = phi i64 [ %89, %88 ], [ %123, %104 ]
  %107 = getelementptr inbounds [16 x i8], [16 x i8]* %16, i64 0, i64 %105
  %108 = load i8, i8* %107, align 2
  %109 = add i64 %105, %78
  %110 = getelementptr inbounds i8, i8* %7, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = xor i8 %111, %108
  %113 = getelementptr inbounds i8, i8* %1, i64 %109
  store i8 %112, i8* %113, align 1
  %114 = or i64 %105, 1
  %115 = getelementptr inbounds [16 x i8], [16 x i8]* %16, i64 0, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = add i64 %114, %78
  %118 = getelementptr inbounds i8, i8* %7, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = xor i8 %119, %116
  %121 = getelementptr inbounds i8, i8* %1, i64 %117
  store i8 %120, i8* %121, align 1
  %122 = add nuw i64 %105, 2
  %123 = add i64 %106, -2
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %90, label %104, !llvm.loop !8

125:                                              ; preds = %101, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* nonnull align 16 %67, i64 16, i1 false) #5
  store i64 16, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #5
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %32) #5
  br label %126

126:                                              ; preds = %125, %30, %27, %24
  %127 = phi i32 [ 0, %24 ], [ 0, %27 ], [ 0, %30 ], [ 1, %125 ]
  ret i32 %127
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @aead_aes_gcm_siv_open_gather(%struct.evp_aead_ctx_st*, i8*, i8* nocapture readonly, i64, i8* nocapture readonly, i64, i8*, i64, i8*, i64) #2 {
  %11 = alloca %union.anon.7, align 4
  %12 = alloca [48 x i8], align 16
  %13 = alloca [16 x i8], align 16
  %14 = alloca [16 x i8], align 16
  %15 = alloca %struct.gcm_siv_record_keys, align 8
  %16 = alloca [16 x i8], align 16
  %17 = icmp ugt i64 %9, 2305843009213693951
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @ERR_put_error(i32 30, i32 0, i32 117, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 788) #5
  br label %128

19:                                               ; preds = %10
  %20 = icmp ne i64 %7, 16
  %21 = icmp ugt i64 %5, 68719476752
  %22 = or i1 %21, %20
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  tail call void @ERR_put_error(i32 30, i32 0, i32 101, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 795) #5
  br label %128

24:                                               ; preds = %19
  %25 = icmp eq i64 %3, 12
  br i1 %25, label %27, label %26

26:                                               ; preds = %24
  tail call void @ERR_put_error(i32 30, i32 0, i32 121, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 800) #5
  br label %128

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 1
  %29 = getelementptr inbounds %struct.gcm_siv_record_keys, %struct.gcm_siv_record_keys* %15, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %29) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 getelementptr inbounds (%struct.gcm_siv_record_keys, %struct.gcm_siv_record_keys* @__const.aead_aes_gcm_siv_open_gather.keys, i64 0, i32 0, i64 0), i64 272, i1 false)
  %30 = bitcast %union.evp_aead_ctx_st_state* %28 to %struct.aes_key_st*
  %31 = getelementptr inbounds [48 x i8], [48 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -86, i64 48, i1 false) #5
  %32 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 1, i32 1, i64 248
  %33 = load i8, i8* %32, align 8
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  %36 = select i1 %35, i64 4, i64 6
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #5
  %38 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i64 0, i64 4
  %39 = bitcast [16 x i8]* %13 to i32*
  store i32 0, i32* %39, align 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 1 %2, i64 12, i1 false) #5
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %14, i64 0, i64 0
  %41 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %0, i64 0, i32 1, i32 1, i64 240
  %42 = bitcast i8* %41 to void (i8*, i8*, %struct.aes_key_st*)**
  %43 = bitcast [16 x i8]* %14 to i64*
  br label %44

44:                                               ; preds = %44, %27
  %45 = phi i64 [ 0, %27 ], [ %52, %44 ]
  %46 = trunc i64 %45 to i8
  store i8 %46, i8* %37, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -86, i64 16, i1 false) #5
  %47 = load void (i8*, i8*, %struct.aes_key_st*)*, void (i8*, i8*, %struct.aes_key_st*)** %42, align 8
  call void %47(i8* nonnull %37, i8* nonnull %40, %struct.aes_key_st* %30) #5
  %48 = shl i64 %45, 3
  %49 = getelementptr inbounds [48 x i8], [48 x i8]* %12, i64 0, i64 %48
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %43, align 16
  store i64 %51, i64* %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #5
  %52 = add nuw nsw i64 %45, 1
  %53 = icmp eq i64 %52, %36
  br i1 %53, label %54, label %44

54:                                               ; preds = %44
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* nonnull align 16 %31, i64 16, i1 false) #5
  %55 = getelementptr inbounds %struct.gcm_siv_record_keys, %struct.gcm_siv_record_keys* %15, i64 0, i32 1
  %56 = bitcast %union.anon.4* %55 to %struct.aes_key_st*
  %57 = getelementptr inbounds %struct.gcm_siv_record_keys, %struct.gcm_siv_record_keys* %15, i64 0, i32 2
  %58 = getelementptr inbounds [48 x i8], [48 x i8]* %12, i64 0, i64 16
  %59 = load i8, i8* %32, align 8
  %60 = and i8 %59, 1
  %61 = icmp eq i8 %60, 0
  %62 = select i1 %61, i64 16, i64 32
  %63 = call void (i8*, i8*, i64, %struct.aes_key_st*, i8*)* @aes_ctr_set_key(%struct.aes_key_st* %56, %struct.gcm128_key_st* null, void (i8*, i8*, %struct.aes_key_st*)** %57, i8* %58, i64 %62) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #5
  %64 = load void (i8*, i8*, %struct.aes_key_st*)*, void (i8*, i8*, %struct.aes_key_st*)** %57, align 8
  %65 = bitcast %union.anon.7* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #5
  %66 = getelementptr inbounds %union.anon.7, %union.anon.7* %11, i64 0, i32 0, i64 0
  %67 = bitcast %union.anon.7* %11 to [16 x i8]*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %65, i8* align 1 %6, i64 16, i1 false) #5
  %68 = getelementptr inbounds [16 x i8], [16 x i8]* %67, i64 0, i64 15
  %69 = load i8, i8* %68, align 1
  %70 = or i8 %69, -128
  store i8 %70, i8* %68, align 1
  %71 = icmp eq i64 %5, 0
  br i1 %71, label %120, label %72

72:                                               ; preds = %54, %96
  %73 = phi i64 [ %97, %96 ], [ 0, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -86, i64 16, i1 false) #5
  call void %64(i8* nonnull %65, i8* nonnull %37, %struct.aes_key_st* %56) #5
  %74 = load i32, i32* %66, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %66, align 4
  %76 = sub i64 %5, %73
  %77 = icmp ult i64 %76, 16
  %78 = select i1 %77, i64 %76, i64 16
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %72
  %81 = and i64 %78, 1
  %82 = icmp eq i64 %78, 1
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = sub nsw i64 %78, %81
  br label %99

85:                                               ; preds = %99, %80
  %86 = phi i64 [ 0, %80 ], [ %117, %99 ]
  %87 = icmp eq i64 %81, 0
  br i1 %87, label %96, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i64 0, i64 %86
  %90 = load i8, i8* %89, align 1
  %91 = add i64 %86, %73
  %92 = getelementptr inbounds i8, i8* %4, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = xor i8 %93, %90
  %95 = getelementptr inbounds i8, i8* %1, i64 %91
  store i8 %94, i8* %95, align 1
  br label %96

96:                                               ; preds = %88, %85, %72
  %97 = add i64 %78, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #5
  %98 = icmp ult i64 %97, %5
  br i1 %98, label %72, label %120

99:                                               ; preds = %99, %83
  %100 = phi i64 [ 0, %83 ], [ %117, %99 ]
  %101 = phi i64 [ %84, %83 ], [ %118, %99 ]
  %102 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i64 0, i64 %100
  %103 = load i8, i8* %102, align 2
  %104 = add i64 %100, %73
  %105 = getelementptr inbounds i8, i8* %4, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = xor i8 %106, %103
  %108 = getelementptr inbounds i8, i8* %1, i64 %104
  store i8 %107, i8* %108, align 1
  %109 = or i64 %100, 1
  %110 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i64 0, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = add i64 %109, %73
  %113 = getelementptr inbounds i8, i8* %4, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = xor i8 %114, %111
  %116 = getelementptr inbounds i8, i8* %1, i64 %112
  store i8 %115, i8* %116, align 1
  %117 = add nuw i64 %100, 2
  %118 = add i64 %101, -2
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %85, label %99, !llvm.loop !9

120:                                              ; preds = %96, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #5
  %121 = getelementptr inbounds [16 x i8], [16 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %121, i8 -86, i64 16, i1 false)
  call fastcc void @gcm_siv_polyval(i8* nonnull %121, i8* %1, i64 %5, i8* %8, i64 %9, i8* nonnull %29, i8* %2)
  %122 = load void (i8*, i8*, %struct.aes_key_st*)*, void (i8*, i8*, %struct.aes_key_st*)** %57, align 8
  call void %122(i8* nonnull %121, i8* nonnull %121, %struct.aes_key_st* %56) #5
  %123 = call i32 @CRYPTO_memcmp(i8* nonnull %121, i8* %6, i64 16) #5
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %126, label %125

125:                                              ; preds = %120
  call void @ERR_put_error(i32 30, i32 0, i32 101, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 817) #5
  br label %126

126:                                              ; preds = %120, %125
  %127 = phi i32 [ 0, %125 ], [ 1, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #5
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %29) #5
  br label %128

128:                                              ; preds = %23, %26, %126, %18
  %129 = phi i32 [ 0, %18 ], [ 0, %23 ], [ 0, %26 ], [ %127, %126 ]
  ret i32 %129
}

declare void (i8*, i8*, i64, %struct.aes_key_st*, i8*)* @aes_ctr_set_key(%struct.aes_key_st*, %struct.gcm128_key_st*, void (i8*, i8*, %struct.aes_key_st*)**, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @gcm_siv_polyval(i8*, i8*, i64, i8*, i64, i8*, i8* nocapture readonly) unnamed_addr #2 {
  %8 = alloca %struct.polyval_ctx, align 16
  %9 = alloca [16 x i8], align 16
  %10 = alloca %union.anon.5, align 8
  %11 = bitcast %struct.polyval_ctx* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 304, i1 false)
  call void @CRYPTO_POLYVAL_init(%struct.polyval_ctx* nonnull %8, i8* %5) #5
  %12 = and i64 %4, -16
  call void @CRYPTO_POLYVAL_update_blocks(%struct.polyval_ctx* nonnull %8, i8* %3, i64 %12) #5
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #5
  %14 = and i64 %4, 15
  %15 = icmp eq i64 %14, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 16, i1 false)
  br i1 %15, label %20, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %3, i64 %12
  %18 = sub nuw nsw i64 16, %14
  %19 = getelementptr [16 x i8], [16 x i8]* %9, i64 0, i64 %14
  call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 0, i64 %18, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %13, i8* align 1 %17, i64 %14, i1 false) #5
  call void @CRYPTO_POLYVAL_update_blocks(%struct.polyval_ctx* nonnull %8, i8* nonnull %13, i64 16) #5
  br label %20

20:                                               ; preds = %7, %16
  %21 = and i64 %2, -16
  call void @CRYPTO_POLYVAL_update_blocks(%struct.polyval_ctx* nonnull %8, i8* %1, i64 %21) #5
  %22 = and i64 %2, 15
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds i8, i8* %1, i64 %21
  %26 = sub nuw nsw i64 16, %22
  %27 = getelementptr [16 x i8], [16 x i8]* %9, i64 0, i64 %22
  call void @llvm.memset.p0i8.i64(i8* align 1 %27, i8 0, i64 %26, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %13, i8* align 1 %25, i64 %22, i1 false) #5
  call void @CRYPTO_POLYVAL_update_blocks(%struct.polyval_ctx* nonnull %8, i8* nonnull %13, i64 16) #5
  br label %28

28:                                               ; preds = %20, %24
  %29 = bitcast %union.anon.5* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #5
  %30 = getelementptr inbounds %union.anon.5, %union.anon.5* %10, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %union.anon.5, %union.anon.5* %10, i64 0, i32 0, i32 1
  %32 = shl i64 %4, 3
  store i64 %32, i64* %30, align 8
  %33 = shl i64 %2, 3
  store i64 %33, i64* %31, align 8
  call void @CRYPTO_POLYVAL_update_blocks(%struct.polyval_ctx* nonnull %8, i8* nonnull %29, i64 16) #5
  call void @CRYPTO_POLYVAL_finish(%struct.polyval_ctx* nonnull %8, i8* %0) #5
  %34 = load i8, i8* %6, align 1
  %35 = load i8, i8* %0, align 1
  %36 = xor i8 %35, %34
  store i8 %36, i8* %0, align 1
  %37 = getelementptr inbounds i8, i8* %6, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = getelementptr inbounds i8, i8* %0, i64 1
  %40 = load i8, i8* %39, align 1
  %41 = xor i8 %40, %38
  store i8 %41, i8* %39, align 1
  %42 = getelementptr inbounds i8, i8* %6, i64 2
  %43 = load i8, i8* %42, align 1
  %44 = getelementptr inbounds i8, i8* %0, i64 2
  %45 = load i8, i8* %44, align 1
  %46 = xor i8 %45, %43
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds i8, i8* %6, i64 3
  %48 = load i8, i8* %47, align 1
  %49 = getelementptr inbounds i8, i8* %0, i64 3
  %50 = load i8, i8* %49, align 1
  %51 = xor i8 %50, %48
  store i8 %51, i8* %49, align 1
  %52 = getelementptr inbounds i8, i8* %6, i64 4
  %53 = load i8, i8* %52, align 1
  %54 = getelementptr inbounds i8, i8* %0, i64 4
  %55 = load i8, i8* %54, align 1
  %56 = xor i8 %55, %53
  store i8 %56, i8* %54, align 1
  %57 = getelementptr inbounds i8, i8* %6, i64 5
  %58 = load i8, i8* %57, align 1
  %59 = getelementptr inbounds i8, i8* %0, i64 5
  %60 = load i8, i8* %59, align 1
  %61 = xor i8 %60, %58
  store i8 %61, i8* %59, align 1
  %62 = getelementptr inbounds i8, i8* %6, i64 6
  %63 = load i8, i8* %62, align 1
  %64 = getelementptr inbounds i8, i8* %0, i64 6
  %65 = load i8, i8* %64, align 1
  %66 = xor i8 %65, %63
  store i8 %66, i8* %64, align 1
  %67 = getelementptr inbounds i8, i8* %6, i64 7
  %68 = load i8, i8* %67, align 1
  %69 = getelementptr inbounds i8, i8* %0, i64 7
  %70 = load i8, i8* %69, align 1
  %71 = xor i8 %70, %68
  store i8 %71, i8* %69, align 1
  %72 = getelementptr inbounds i8, i8* %6, i64 8
  %73 = load i8, i8* %72, align 1
  %74 = getelementptr inbounds i8, i8* %0, i64 8
  %75 = load i8, i8* %74, align 1
  %76 = xor i8 %75, %73
  store i8 %76, i8* %74, align 1
  %77 = getelementptr inbounds i8, i8* %6, i64 9
  %78 = load i8, i8* %77, align 1
  %79 = getelementptr inbounds i8, i8* %0, i64 9
  %80 = load i8, i8* %79, align 1
  %81 = xor i8 %80, %78
  store i8 %81, i8* %79, align 1
  %82 = getelementptr inbounds i8, i8* %6, i64 10
  %83 = load i8, i8* %82, align 1
  %84 = getelementptr inbounds i8, i8* %0, i64 10
  %85 = load i8, i8* %84, align 1
  %86 = xor i8 %85, %83
  store i8 %86, i8* %84, align 1
  %87 = getelementptr inbounds i8, i8* %6, i64 11
  %88 = load i8, i8* %87, align 1
  %89 = getelementptr inbounds i8, i8* %0, i64 11
  %90 = load i8, i8* %89, align 1
  %91 = xor i8 %90, %88
  store i8 %91, i8* %89, align 1
  %92 = getelementptr inbounds i8, i8* %0, i64 15
  %93 = load i8, i8* %92, align 1
  %94 = and i8 %93, 127
  store i8 %94, i8* %92, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #5
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %11) #5
  ret void
}

declare void @CRYPTO_POLYVAL_init(%struct.polyval_ctx*, i8*) local_unnamed_addr #4

declare void @CRYPTO_POLYVAL_update_blocks(%struct.polyval_ctx*, i8*, i64) local_unnamed_addr #4

declare void @CRYPTO_POLYVAL_finish(%struct.polyval_ctx*, i8*) local_unnamed_addr #4

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
