; ModuleID = '../../third_party/boringssl/src/crypto/asn1/time_support.c'
source_filename = "../../third_party/boringssl/src/crypto/asn1/time_support.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }

; Function Attrs: nounwind ssp uwtable
define hidden %struct.tm* @OPENSSL_gmtime(i64*, %struct.tm*) local_unnamed_addr #0 {
  %3 = tail call %struct.tm* @gmtime_r(i64* %0, %struct.tm* %1) #2
  ret %struct.tm* %3
}

; Function Attrs: nounwind
declare %struct.tm* @gmtime_r(i64*, %struct.tm*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @OPENSSL_gmtime_adj(%struct.tm* nocapture, i32, i64) local_unnamed_addr #0 {
  %4 = sdiv i64 %2, 86400
  %5 = trunc i64 %4 to i32
  %6 = mul i64 %4, 371085174374400
  %7 = lshr exact i64 %6, 32
  %8 = sub i64 %2, %7
  %9 = trunc i64 %8 to i32
  %10 = add nsw i32 %5, %1
  %11 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = mul nsw i32 %12, 3600
  %14 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = mul nsw i32 %15, 60
  %17 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %13, %9
  %20 = add i32 %19, %16
  %21 = add i32 %20, %18
  %22 = icmp sgt i32 %21, 86399
  br i1 %22, label %23, label %26

23:                                               ; preds = %3
  %24 = add nsw i32 %10, 1
  %25 = add nsw i32 %21, -86400
  br label %31

26:                                               ; preds = %3
  %27 = icmp slt i32 %21, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %26
  %29 = add nsw i32 %10, -1
  %30 = add nsw i32 %21, 86400
  br label %31

31:                                               ; preds = %28, %26, %23
  %32 = phi i32 [ %25, %23 ], [ %30, %28 ], [ %21, %26 ]
  %33 = phi i32 [ %24, %23 ], [ %29, %28 ], [ %10, %26 ]
  %34 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = add nsw i32 %35, 1900
  %37 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %38, -13
  %42 = sdiv i32 %41, 12
  %43 = add i32 %36, %42
  %44 = mul i32 %43, 1461
  %45 = add i32 %44, 7012800
  %46 = sdiv i32 %45, 4
  %47 = add nsw i32 %38, -1
  %48 = mul i32 %42, -12
  %49 = add i32 %47, %48
  %50 = mul nsw i32 %49, 367
  %51 = sdiv i32 %50, 12
  %52 = add i32 %43, 4900
  %53 = sdiv i32 %52, 100
  %54 = mul nsw i32 %53, 3
  %55 = sdiv i32 %54, -4
  %56 = add i32 %40, -32075
  %57 = add i32 %56, %46
  %58 = add i32 %57, %51
  %59 = add i32 %58, %55
  %60 = sext i32 %59 to i64
  %61 = sext i32 %33 to i64
  %62 = add nsw i64 %60, %61
  %63 = icmp slt i64 %62, 0
  br i1 %63, label %103, label %64

64:                                               ; preds = %31
  %65 = add nuw nsw i64 %62, 68569
  %66 = shl nsw i64 %65, 2
  %67 = sdiv i64 %66, 146097
  %68 = mul nsw i64 %67, 146097
  %69 = add nuw nsw i64 %68, 3
  %70 = sdiv i64 %69, 4
  %71 = sub nsw i64 %65, %70
  %72 = mul i64 %71, 4000
  %73 = add nsw i64 %72, 4000
  %74 = sdiv i64 %73, 1461001
  %75 = mul nsw i64 %74, 1461
  %76 = sdiv i64 %75, 4
  %77 = sub nsw i64 %71, %76
  %78 = add nsw i64 %77, 31
  %79 = mul nsw i64 %78, 80
  %80 = sdiv i64 %79, 2447
  %81 = sdiv i64 %79, 26917
  %82 = mul nsw i64 %67, 100
  %83 = add nuw nsw i64 %82, 4294962396
  %84 = add nsw i64 %83, %74
  %85 = add nsw i64 %84, %81
  %86 = trunc i64 %85 to i32
  %87 = add nsw i32 %86, -1900
  %88 = icmp ugt i32 %87, 8099
  br i1 %88, label %103, label %89

89:                                               ; preds = %64
  %90 = add nsw i64 %80, 2
  %91 = mul nsw i64 %81, -12
  %92 = add nsw i64 %90, %91
  %93 = trunc i64 %92 to i32
  %94 = mul nsw i64 %80, 2447
  %95 = sdiv i64 %94, 80
  %96 = sub nsw i64 %78, %95
  %97 = trunc i64 %96 to i32
  store i32 %87, i32* %34, align 4
  %98 = add nsw i32 %93, -1
  store i32 %98, i32* %37, align 8
  store i32 %97, i32* %39, align 4
  %99 = sdiv i32 %32, 3600
  store i32 %99, i32* %11, align 8
  %100 = sdiv i32 %32, 60
  %101 = srem i32 %100, 60
  store i32 %101, i32* %14, align 4
  %102 = srem i32 %32, 60
  store i32 %102, i32* %17, align 8
  br label %103

103:                                              ; preds = %31, %64, %89
  %104 = phi i32 [ 1, %89 ], [ 0, %64 ], [ 0, %31 ]
  ret i32 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @OPENSSL_gmtime_diff(i32*, i32*, %struct.tm* nocapture readonly, %struct.tm* nocapture readonly) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.tm, %struct.tm* %2, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = mul nsw i32 %6, 3600
  %8 = getelementptr inbounds %struct.tm, %struct.tm* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = mul nsw i32 %9, 60
  %11 = getelementptr inbounds %struct.tm, %struct.tm* %2, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %10, %7
  %14 = add i32 %13, %12
  %15 = icmp sgt i32 %14, 86399
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = add nsw i32 %14, -86400
  br label %24

18:                                               ; preds = %4
  %19 = icmp slt i32 %14, 0
  %20 = add nsw i32 %14, 86400
  %21 = select i1 %19, i32 %20, i32 %14
  %22 = ashr i32 %14, 31
  %23 = sext i32 %22 to i64
  br label %24

24:                                               ; preds = %18, %16
  %25 = phi i32 [ %17, %16 ], [ %21, %18 ]
  %26 = phi i64 [ 1, %16 ], [ %23, %18 ]
  %27 = getelementptr inbounds %struct.tm, %struct.tm* %2, i64 0, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = add nsw i32 %28, 1900
  %30 = getelementptr inbounds %struct.tm, %struct.tm* %2, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %struct.tm, %struct.tm* %2, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = add nsw i32 %31, -13
  %35 = sdiv i32 %34, 12
  %36 = add i32 %29, %35
  %37 = mul i32 %36, 1461
  %38 = add i32 %37, 7012800
  %39 = sdiv i32 %38, 4
  %40 = add nsw i32 %31, -1
  %41 = mul i32 %35, -12
  %42 = add i32 %40, %41
  %43 = mul nsw i32 %42, 367
  %44 = sdiv i32 %43, 12
  %45 = add i32 %36, 4900
  %46 = sdiv i32 %45, 100
  %47 = mul nsw i32 %46, 3
  %48 = sdiv i32 %47, -4
  %49 = add i32 %33, -32075
  %50 = add i32 %49, %39
  %51 = add i32 %50, %44
  %52 = add i32 %51, %48
  %53 = sext i32 %52 to i64
  %54 = add nsw i64 %26, %53
  %55 = icmp slt i64 %54, 0
  br i1 %55, label %131, label %56

56:                                               ; preds = %24
  %57 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = mul nsw i32 %58, 3600
  %60 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = mul nsw i32 %61, 60
  %63 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = add i32 %62, %59
  %66 = add i32 %65, %64
  %67 = icmp sgt i32 %66, 86399
  br i1 %67, label %68, label %70

68:                                               ; preds = %56
  %69 = add nsw i32 %66, -86400
  br label %76

70:                                               ; preds = %56
  %71 = icmp slt i32 %66, 0
  %72 = add nsw i32 %66, 86400
  %73 = select i1 %71, i32 %72, i32 %66
  %74 = ashr i32 %66, 31
  %75 = sext i32 %74 to i64
  br label %76

76:                                               ; preds = %70, %68
  %77 = phi i32 [ %69, %68 ], [ %73, %70 ]
  %78 = phi i64 [ 1, %68 ], [ %75, %70 ]
  %79 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 5
  %80 = load i32, i32* %79, align 4
  %81 = add nsw i32 %80, 1900
  %82 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 4
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = add nsw i32 %83, -13
  %87 = sdiv i32 %86, 12
  %88 = add i32 %81, %87
  %89 = mul i32 %88, 1461
  %90 = add i32 %89, 7012800
  %91 = sdiv i32 %90, 4
  %92 = add nsw i32 %83, -1
  %93 = mul i32 %87, -12
  %94 = add i32 %92, %93
  %95 = mul nsw i32 %94, 367
  %96 = sdiv i32 %95, 12
  %97 = add i32 %88, 4900
  %98 = sdiv i32 %97, 100
  %99 = mul nsw i32 %98, 3
  %100 = sdiv i32 %99, -4
  %101 = add i32 %85, -32075
  %102 = add i32 %101, %91
  %103 = add i32 %102, %96
  %104 = add i32 %103, %100
  %105 = sext i32 %104 to i64
  %106 = add nsw i64 %78, %105
  %107 = icmp slt i64 %106, 0
  br i1 %107, label %131, label %108

108:                                              ; preds = %76
  %109 = sub nsw i64 %106, %54
  %110 = sub nsw i32 %77, %25
  %111 = icmp sgt i64 %109, 0
  %112 = icmp slt i32 %110, 0
  %113 = and i1 %112, %111
  %114 = add nsw i32 %110, 86400
  %115 = select i1 %113, i32 %114, i32 %110
  %116 = zext i1 %113 to i64
  %117 = sub nsw i64 %109, %116
  %118 = icmp slt i64 %117, 0
  %119 = icmp sgt i32 %115, 0
  %120 = and i1 %119, %118
  %121 = add nsw i32 %115, -86400
  %122 = select i1 %120, i32 %121, i32 %115
  %123 = icmp eq i32* %0, null
  br i1 %123, label %128, label %124

124:                                              ; preds = %108
  %125 = zext i1 %120 to i64
  %126 = add nsw i64 %117, %125
  %127 = trunc i64 %126 to i32
  store i32 %127, i32* %0, align 4
  br label %128

128:                                              ; preds = %108, %124
  %129 = icmp eq i32* %1, null
  br i1 %129, label %131, label %130

130:                                              ; preds = %128
  store i32 %122, i32* %1, align 4
  br label %131

131:                                              ; preds = %76, %24, %130, %128
  %132 = phi i32 [ 1, %128 ], [ 1, %130 ], [ 0, %24 ], [ 0, %76 ]
  ret i32 %132
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
