; ModuleID = '../../third_party/boringssl/src/crypto/x509/by_file.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/by_file.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.x509_lookup_method_st = type { i8*, i32 (%struct.x509_lookup_st*)*, void (%struct.x509_lookup_st*)*, i32 (%struct.x509_lookup_st*)*, i32 (%struct.x509_lookup_st*)*, i32 (%struct.x509_lookup_st*, i32, i8*, i64, i8**)*, i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.x509_object_st*)*, i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.x509_object_st*)*, i32 (%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*)*, i32 (%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*)* }
%struct.x509_lookup_st = type { i32, i32, %struct.x509_lookup_method_st*, i8*, %struct.x509_store_st* }
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.stack_st_X509 = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, {}*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, {}*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, {}*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, {}*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.x509_object_st = type { i32, %union.anon.0 }
%union.anon.0 = type { i8* }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.stack_st_X509_INFO = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.X509_info_st = type { %struct.x509_st*, %struct.X509_crl_st*, %struct.private_key_st*, %struct.evp_cipher_info_st, i32, i8* }
%struct.private_key_st = type { i32, %struct.X509_algor_st*, %struct.asn1_string_st*, %struct.evp_pkey_st*, i32, i8*, i32, %struct.evp_cipher_info_st }
%struct.evp_pkey_st = type { i32, i32, %union.anon.1, %struct.evp_pkey_asn1_method_st* }
%union.anon.1 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.evp_cipher_info_st = type { %struct.evp_cipher_st*, [16 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }

@x509_file_lookup = internal global %struct.x509_lookup_method_st { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), i32 (%struct.x509_lookup_st*)* null, void (%struct.x509_lookup_st*)* null, i32 (%struct.x509_lookup_st*)* null, i32 (%struct.x509_lookup_st*)* null, i32 (%struct.x509_lookup_st*, i32, i8*, i64, i8**)* @by_file_ctrl, i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.x509_object_st*)* null, i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.x509_object_st*)* null, i32 (%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*)* null, i32 (%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*)* null }, align 8
@.str = private unnamed_addr constant [54 x i8] c"../../third_party/boringssl/src/crypto/x509/by_file.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"Load file into cache\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.x509_lookup_method_st* @X509_LOOKUP_file() local_unnamed_addr #0 {
  ret %struct.x509_lookup_method_st* @x509_file_lookup
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_load_cert_file(%struct.x509_lookup_st* nocapture readonly, i8*, i32) local_unnamed_addr #1 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %58, label %5

5:                                                ; preds = %3
  %6 = tail call %struct.bio_method_st* @BIO_s_file() #5
  %7 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* %6) #5
  %8 = icmp eq %struct.bio_st* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = tail call i32 @BIO_read_filename(%struct.bio_st* nonnull %7, i8* nonnull %1) #5
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %13

12:                                               ; preds = %9, %5
  tail call void @ERR_put_error(i32 11, i32 0, i32 2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 132) #5
  br label %53

13:                                               ; preds = %9
  switch i32 %2, label %49 [
    i32 1, label %14
    i32 2, label %41
  ]

14:                                               ; preds = %13
  %15 = tail call %struct.x509_st* @PEM_read_bio_X509_AUX(%struct.bio_st* nonnull %7, %struct.x509_st** null, i32 (i8*, i32, i32, i8*)* null, i8* null) #5
  %16 = icmp eq %struct.x509_st* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 4
  br label %31

19:                                               ; preds = %37, %14
  %20 = phi i32 [ 0, %14 ], [ %38, %37 ]
  %21 = tail call i32 @ERR_peek_last_error() #5
  %22 = and i32 %21, -16777216
  %23 = icmp eq i32 %22, 150994944
  br i1 %23, label %24, label %30

24:                                               ; preds = %19
  %25 = and i32 %21, 4095
  %26 = icmp eq i32 %25, 110
  %27 = icmp ne i32 %20, 0
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  tail call void @ERR_clear_error() #5
  br label %53

30:                                               ; preds = %24, %19
  tail call void @ERR_put_error(i32 11, i32 0, i32 9, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 147) #5
  br label %53

31:                                               ; preds = %17, %37
  %32 = phi %struct.x509_st* [ %15, %17 ], [ %39, %37 ]
  %33 = phi i32 [ 0, %17 ], [ %38, %37 ]
  %34 = load %struct.x509_store_st*, %struct.x509_store_st** %18, align 8
  %35 = tail call i32 @X509_STORE_add_cert(%struct.x509_store_st* %34, %struct.x509_st* nonnull %32) #5
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %50, label %37

37:                                               ; preds = %31
  %38 = add nuw nsw i32 %33, 1
  tail call void @X509_free(%struct.x509_st* nonnull %32) #5
  %39 = tail call %struct.x509_st* @PEM_read_bio_X509_AUX(%struct.bio_st* nonnull %7, %struct.x509_st** null, i32 (i8*, i32, i32, i8*)* null, i8* null) #5
  %40 = icmp eq %struct.x509_st* %39, null
  br i1 %40, label %19, label %31

41:                                               ; preds = %13
  %42 = tail call %struct.x509_st* @d2i_X509_bio(%struct.bio_st* nonnull %7, %struct.x509_st** null) #5
  %43 = icmp eq %struct.x509_st* %42, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @ERR_put_error(i32 11, i32 0, i32 12, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 161) #5
  br label %55

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 4
  %47 = load %struct.x509_store_st*, %struct.x509_store_st** %46, align 8
  %48 = tail call i32 @X509_STORE_add_cert(%struct.x509_store_st* %47, %struct.x509_st* nonnull %42) #5
  br label %50

49:                                               ; preds = %13
  tail call void @ERR_put_error(i32 11, i32 0, i32 102, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 169) #5
  br label %55

50:                                               ; preds = %31, %45
  %51 = phi i32 [ %48, %45 ], [ 0, %31 ]
  %52 = phi %struct.x509_st* [ %42, %45 ], [ %32, %31 ]
  tail call void @X509_free(%struct.x509_st* nonnull %52) #5
  br label %53

53:                                               ; preds = %29, %30, %12, %50
  %54 = phi i32 [ %51, %50 ], [ 0, %12 ], [ %20, %29 ], [ 0, %30 ]
  br i1 %8, label %58, label %55

55:                                               ; preds = %44, %49, %53
  %56 = phi i32 [ %54, %53 ], [ 0, %49 ], [ 0, %44 ]
  %57 = tail call i32 @BIO_free(%struct.bio_st* nonnull %7) #5
  br label %58

58:                                               ; preds = %55, %53, %3
  %59 = phi i32 [ 1, %3 ], [ %54, %53 ], [ %56, %55 ]
  ret i32 %59
}

declare %struct.bio_st* @BIO_new(%struct.bio_method_st*) local_unnamed_addr #2

declare %struct.bio_method_st* @BIO_s_file() local_unnamed_addr #2

declare i32 @BIO_read_filename(%struct.bio_st*, i8*) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare %struct.x509_st* @PEM_read_bio_X509_AUX(%struct.bio_st*, %struct.x509_st**, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #2

declare i32 @ERR_peek_last_error() local_unnamed_addr #2

declare void @ERR_clear_error() local_unnamed_addr #2

declare i32 @X509_STORE_add_cert(%struct.x509_store_st*, %struct.x509_st*) local_unnamed_addr #2

declare void @X509_free(%struct.x509_st*) local_unnamed_addr #2

declare %struct.x509_st* @d2i_X509_bio(%struct.bio_st*, %struct.x509_st**) local_unnamed_addr #2

declare i32 @BIO_free(%struct.bio_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_load_crl_file(%struct.x509_lookup_st* nocapture readonly, i8*, i32) local_unnamed_addr #1 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %58, label %5

5:                                                ; preds = %3
  %6 = tail call %struct.bio_method_st* @BIO_s_file() #5
  %7 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* %6) #5
  %8 = icmp eq %struct.bio_st* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = tail call i32 @BIO_read_filename(%struct.bio_st* nonnull %7, i8* nonnull %1) #5
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %13

12:                                               ; preds = %9, %5
  tail call void @ERR_put_error(i32 11, i32 0, i32 2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 192) #5
  br label %53

13:                                               ; preds = %9
  switch i32 %2, label %49 [
    i32 1, label %14
    i32 2, label %41
  ]

14:                                               ; preds = %13
  %15 = tail call %struct.X509_crl_st* @PEM_read_bio_X509_CRL(%struct.bio_st* nonnull %7, %struct.X509_crl_st** null, i32 (i8*, i32, i32, i8*)* null, i8* null) #5
  %16 = icmp eq %struct.X509_crl_st* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 4
  br label %31

19:                                               ; preds = %37, %14
  %20 = phi i32 [ 0, %14 ], [ %38, %37 ]
  %21 = tail call i32 @ERR_peek_last_error() #5
  %22 = and i32 %21, -16777216
  %23 = icmp eq i32 %22, 150994944
  br i1 %23, label %24, label %30

24:                                               ; preds = %19
  %25 = and i32 %21, 4095
  %26 = icmp eq i32 %25, 110
  %27 = icmp ne i32 %20, 0
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  tail call void @ERR_clear_error() #5
  br label %53

30:                                               ; preds = %24, %19
  tail call void @ERR_put_error(i32 11, i32 0, i32 9, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 207) #5
  br label %53

31:                                               ; preds = %17, %37
  %32 = phi %struct.X509_crl_st* [ %15, %17 ], [ %39, %37 ]
  %33 = phi i32 [ 0, %17 ], [ %38, %37 ]
  %34 = load %struct.x509_store_st*, %struct.x509_store_st** %18, align 8
  %35 = tail call i32 @X509_STORE_add_crl(%struct.x509_store_st* %34, %struct.X509_crl_st* nonnull %32) #5
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %50, label %37

37:                                               ; preds = %31
  %38 = add nuw nsw i32 %33, 1
  tail call void @X509_CRL_free(%struct.X509_crl_st* nonnull %32) #5
  %39 = tail call %struct.X509_crl_st* @PEM_read_bio_X509_CRL(%struct.bio_st* nonnull %7, %struct.X509_crl_st** null, i32 (i8*, i32, i32, i8*)* null, i8* null) #5
  %40 = icmp eq %struct.X509_crl_st* %39, null
  br i1 %40, label %19, label %31

41:                                               ; preds = %13
  %42 = tail call %struct.X509_crl_st* @d2i_X509_CRL_bio(%struct.bio_st* nonnull %7, %struct.X509_crl_st** null) #5
  %43 = icmp eq %struct.X509_crl_st* %42, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @ERR_put_error(i32 11, i32 0, i32 12, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 221) #5
  br label %55

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 4
  %47 = load %struct.x509_store_st*, %struct.x509_store_st** %46, align 8
  %48 = tail call i32 @X509_STORE_add_crl(%struct.x509_store_st* %47, %struct.X509_crl_st* nonnull %42) #5
  br label %50

49:                                               ; preds = %13
  tail call void @ERR_put_error(i32 11, i32 0, i32 102, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 229) #5
  br label %55

50:                                               ; preds = %31, %45
  %51 = phi i32 [ %48, %45 ], [ 0, %31 ]
  %52 = phi %struct.X509_crl_st* [ %42, %45 ], [ %32, %31 ]
  tail call void @X509_CRL_free(%struct.X509_crl_st* nonnull %52) #5
  br label %53

53:                                               ; preds = %29, %30, %12, %50
  %54 = phi i32 [ %51, %50 ], [ 0, %12 ], [ %20, %29 ], [ 0, %30 ]
  br i1 %8, label %58, label %55

55:                                               ; preds = %44, %49, %53
  %56 = phi i32 [ %54, %53 ], [ 0, %49 ], [ 0, %44 ]
  %57 = tail call i32 @BIO_free(%struct.bio_st* nonnull %7) #5
  br label %58

58:                                               ; preds = %55, %53, %3
  %59 = phi i32 [ 1, %3 ], [ %54, %53 ], [ %56, %55 ]
  ret i32 %59
}

declare %struct.X509_crl_st* @PEM_read_bio_X509_CRL(%struct.bio_st*, %struct.X509_crl_st**, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #2

declare i32 @X509_STORE_add_crl(%struct.x509_store_st*, %struct.X509_crl_st*) local_unnamed_addr #2

declare void @X509_CRL_free(%struct.X509_crl_st*) local_unnamed_addr #2

declare %struct.X509_crl_st* @d2i_X509_CRL_bio(%struct.bio_st*, %struct.X509_crl_st**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_load_cert_crl_file(%struct.x509_lookup_st* nocapture readonly, i8*, i32) local_unnamed_addr #1 {
  %4 = icmp eq i32 %2, 1
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call i32 @X509_load_cert_file(%struct.x509_lookup_st* %0, i8* %1, i32 %2)
  br label %50

7:                                                ; preds = %3
  %8 = tail call %struct.bio_st* @BIO_new_file(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #5
  %9 = icmp eq %struct.bio_st* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  tail call void @ERR_put_error(i32 11, i32 0, i32 2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 251) #5
  br label %50

11:                                               ; preds = %7
  %12 = tail call %struct.stack_st_X509_INFO* @PEM_X509_INFO_read_bio(%struct.bio_st* nonnull %8, %struct.stack_st_X509_INFO* null, i32 (i8*, i32, i32, i8*)* null, i8* null) #5
  %13 = tail call i32 @BIO_free(%struct.bio_st* nonnull %8) #5
  %14 = icmp eq %struct.stack_st_X509_INFO* %12, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = bitcast %struct.stack_st_X509_INFO* %12 to %struct.stack_st*
  %17 = tail call i64 @sk_num(%struct.stack_st* nonnull %16) #5
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %48, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 4
  br label %22

21:                                               ; preds = %11
  tail call void @ERR_put_error(i32 11, i32 0, i32 9, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 257) #5
  br label %50

22:                                               ; preds = %19, %43
  %23 = phi i32 [ 0, %19 ], [ %44, %43 ]
  %24 = phi i64 [ 0, %19 ], [ %45, %43 ]
  %25 = tail call i8* @sk_value(%struct.stack_st* nonnull %16, i64 %24) #5
  %26 = bitcast i8* %25 to %struct.x509_st**
  %27 = load %struct.x509_st*, %struct.x509_st** %26, align 8
  %28 = icmp eq %struct.x509_st* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %22
  %30 = load %struct.x509_store_st*, %struct.x509_store_st** %20, align 8
  %31 = tail call i32 @X509_STORE_add_cert(%struct.x509_store_st* %30, %struct.x509_st* nonnull %27) #5
  %32 = add nsw i32 %23, 1
  br label %33

33:                                               ; preds = %22, %29
  %34 = phi i32 [ %32, %29 ], [ %23, %22 ]
  %35 = getelementptr inbounds i8, i8* %25, i64 8
  %36 = bitcast i8* %35 to %struct.X509_crl_st**
  %37 = load %struct.X509_crl_st*, %struct.X509_crl_st** %36, align 8
  %38 = icmp eq %struct.X509_crl_st* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %33
  %40 = load %struct.x509_store_st*, %struct.x509_store_st** %20, align 8
  %41 = tail call i32 @X509_STORE_add_crl(%struct.x509_store_st* %40, %struct.X509_crl_st* nonnull %37) #5
  %42 = add nsw i32 %34, 1
  br label %43

43:                                               ; preds = %33, %39
  %44 = phi i32 [ %42, %39 ], [ %34, %33 ]
  %45 = add nuw i64 %24, 1
  %46 = tail call i64 @sk_num(%struct.stack_st* nonnull %16) #5
  %47 = icmp ult i64 %45, %46
  br i1 %47, label %22, label %48

48:                                               ; preds = %43, %15
  %49 = phi i32 [ 0, %15 ], [ %44, %43 ]
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %16, void (void (i8*)*, i8*)* nonnull @sk_X509_INFO_call_free_func, void (i8*)* bitcast (void (%struct.X509_info_st*)* @X509_INFO_free to void (i8*)*)) #5
  br label %50

50:                                               ; preds = %48, %21, %10, %5
  %51 = phi i32 [ %6, %5 ], [ %49, %48 ], [ 0, %21 ], [ 0, %10 ]
  ret i32 %51
}

declare %struct.bio_st* @BIO_new_file(i8*, i8*) local_unnamed_addr #2

declare %struct.stack_st_X509_INFO* @PEM_X509_INFO_read_bio(%struct.bio_st*, %struct.stack_st_X509_INFO*, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #2

declare void @X509_INFO_free(%struct.X509_info_st*) #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @by_file_ctrl(%struct.x509_lookup_st* nocapture readonly, i32, i8*, i64, i8** nocapture readnone) #1 {
  %6 = icmp eq i32 %1, 1
  br i1 %6, label %7, label %28

7:                                                ; preds = %5
  switch i64 %3, label %24 [
    i64 3, label %8
    i64 1, label %21
  ]

8:                                                ; preds = %7
  %9 = tail call i8* @X509_get_default_cert_file_env() #5
  %10 = tail call i8* @getenv(i8* %9) #5
  %11 = icmp eq i8* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @X509_load_cert_crl_file(%struct.x509_lookup_st* %0, i8* nonnull %10, i32 1)
  br label %17

14:                                               ; preds = %8
  %15 = tail call i8* @X509_get_default_cert_file() #5
  %16 = tail call i32 @X509_load_cert_crl_file(%struct.x509_lookup_st* %0, i8* %15, i32 1)
  br label %17

17:                                               ; preds = %14, %12
  %18 = phi i32 [ %13, %12 ], [ %16, %14 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %17
  tail call void @ERR_put_error(i32 11, i32 0, i32 118, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 106) #5
  br label %28

21:                                               ; preds = %7
  %22 = tail call i32 @X509_load_cert_crl_file(%struct.x509_lookup_st* %0, i8* %2, i32 1)
  %23 = icmp ne i32 %22, 0
  br label %28

24:                                               ; preds = %7
  %25 = trunc i64 %3 to i32
  %26 = tail call i32 @X509_load_cert_file(%struct.x509_lookup_st* %0, i8* %2, i32 %25)
  %27 = icmp ne i32 %26, 0
  br label %28

28:                                               ; preds = %17, %20, %24, %21, %5
  %29 = phi i1 [ true, %17 ], [ false, %20 ], [ %23, %21 ], [ %27, %24 ], [ false, %5 ]
  %30 = zext i1 %29 to i32
  ret i32 %30
}

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #3

declare i8* @X509_get_default_cert_file_env() local_unnamed_addr #2

declare i8* @X509_get_default_cert_file() local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_X509_INFO_call_free_func(void (i8*)* nocapture, i8*) #4 {
  %3 = bitcast void (i8*)* %0 to void (%struct.X509_info_st*)*
  %4 = bitcast i8* %1 to %struct.X509_info_st*
  tail call void %3(%struct.X509_info_st* %4) #5
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
